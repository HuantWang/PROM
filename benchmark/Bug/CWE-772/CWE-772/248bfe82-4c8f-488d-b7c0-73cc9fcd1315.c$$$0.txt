-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_realloc_44_bad()
{
    int * data;
    /* define a function pointer */
    void (*funcPtr) (int *) = badSink;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int *)realloc(data, 100*sizeof(int));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
34,35
34,36
35,36
37,38
37,39
38,39
38,40
40,41
42,43
42,44
42,45
43,44
45,46
47,48
47,49
49,50
50,51
50,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
62,63
64,65
66,67
67,68
67,69
68,69
68,70
69,70
73,74
74,75
74,76
75,76
77,78
77,79
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,30,32,36,39,41,44,46,48,51,52,56,58,63,65,70,71,72,76,79,80,84,86
-----computeFrom-----
28,29
28,30
34,35
34,36
47,48
47,49
54,55
54,56
67,68
67,69
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__int_realloc_44_bad(){    int * data;    /* define a function pointer */    void (*funcPtr) (int *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    /* use the function pointer */    funcPtr(data);}
void
CWE401_Memory_Leak__int_realloc_44_bad()
CWE401_Memory_Leak__int_realloc_44_bad
{    int * data;    /* define a function pointer */    void (*funcPtr) (int *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    /* use the function pointer */    funcPtr(data);}
int * data;
int * data;
int
* data
*
data
void (*funcPtr) (int *) = badSink;
void (*funcPtr) (int *) = badSink;
void
(*funcPtr) (int *) = badSink
*funcPtr
*
funcPtr
int *
int
*
*

= badSink
badSink
badSink
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)realloc(data, 100*sizeof(int));
data = (int *)realloc(data, 100*sizeof(int))
data
data
(int *)realloc(data, 100*sizeof(int))
int *
int
*
*
realloc(data, 100*sizeof(int))
realloc
realloc
data
data
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(0,28,0)
(16,15,0)
(17,9,0)
(5,18,0)
(14,19,0)
(3,1,0)
(7,13,0)
(21,10,0)
(12,15,0)
(38,5,0)
(1,3,0)
(25,28,0)
(15,28,0)
(8,24,0)
(9,19,0)
(4,9,0)
(19,14,0)
(9,28,0)
(30,0,0)
(11,28,0)
(27,13,0)
(20,17,0)
(36,10,0)
(19,9,0)
(26,29,0)
(26,25,0)
(31,28,0)
(33,3,0)
(6,18,0)
(32,25,0)
(13,28,0)
(29,28,0)
(18,24,0)
(5,19,0)
(19,5,0)
(24,18,0)
(26,9,0)
(2,26,0)
(10,25,0)
(22,26,0)
(37,17,0)
(18,5,0)
(5,13,0)
(0,9,0)
(29,26,0)
(10,9,0)
(34,28,0)
(1,35,0)
(19,5,1)
(2,25,1)
(13,7,1)
(9,19,1)
(12,16,1)
(38,4,1)
(1,3,1)
(27,15,1)
(24,8,1)
(0,9,1)
(10,36,1)
(10,9,1)
(30,29,1)
(26,25,1)
(17,9,1)
(18,24,1)
(32,10,1)
(19,14,1)
(5,18,1)
(26,9,1)
(7,27,1)
(37,20,1)
(21,1,1)
(5,13,1)
(15,12,1)
(3,33,1)
(21,17,1)
(8,6,1)
(29,26,1)
(6,38,1)
(17,37,1)
(20,9,1)
(25,32,1)
(33,17,1)
(22,2,1)
(26,22,1)
(0,30,1)
(4,13,1)
(23,0,1)
(36,21,1)
(26,25,2)
(1,3,2)
(29,26,2)
(3,17,2)
(19,14,2)
(5,18,2)
(9,19,2)
(26,9,2)
(0,9,2)
(1,17,2)
(33,17,2)
(18,24,2)
(17,9,2)
(19,5,2)
(5,13,2)
(10,9,2)
-----------------------------------
(0,funcPtr(data)
(1,exit(-1)
(2,data)
(3,-1)
(4,data)
(5,realloc(data, 100*sizeof(int)
(6,100)
(7,NULL)
(8,int)
(9,data = (int *)
(10,data[0])
(11,data)
(12,badSink)
(13,data = NULL)
(14,int *)
(15,(*funcPtr)
(16,funcPtr)
(17,data == NULL)
(18,100*sizeof(int)
(19,(int *)
(20,data)
(21,data)
(22,0)
(23,RET)
(24,sizeof(int)
(25,data[0] = 5)
(26,data[0])
(27,data)
(28,)
(29,printIntLine(data[0])
(30,data)
(31,funcPtr)
(32,5)
(33,1)
(34,if (data == NULL)
(35,)
(36,0)
(37,NULL)
(38,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
