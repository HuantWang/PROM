-----label-----
1
-----code-----
twoIntsStruct * CWE401_Memory_Leak__twoIntsStruct_malloc_61b_badSource(twoIntsStruct * data)
{
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
13,19
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
31,32
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
49,51
50,51
50,52
51,52
56,57
57,58
57,59
58,59
58,60
59,60
59,61
60,61
65,66
66,67
66,68
67,68
69,70
70,71
70,72
71,72
74,75
75,76
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,28,32,33,37,39,44,46,52,53,54,55,61,62,63,64,68,72,73,76
-----computeFrom-----
15,16
15,17
27,28
27,29
35,36
35,37
48,49
48,50
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
twoIntsStruct * CWE401_Memory_Leak__twoIntsStruct_malloc_61b_badSource(twoIntsStruct * data){    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    return data;}
twoIntsStruct
twoIntsStruct
* CWE401_Memory_Leak__twoIntsStruct_malloc_61b_badSource(twoIntsStruct * data)
*
CWE401_Memory_Leak__twoIntsStruct_malloc_61b_badSource
twoIntsStruct * data
twoIntsStruct
twoIntsStruct
* data
*
data
{    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    return data;}
data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)malloc(100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
malloc(100*sizeof(twoIntsStruct))
malloc
malloc
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
return data;
data
data
-----joern-----
(2,11,0)
(4,3,0)
(9,11,0)
(11,28,0)
(30,32,0)
(28,7,0)
(6,38,0)
(9,27,0)
(34,31,0)
(19,10,0)
(30,3,0)
(36,11,0)
(5,30,0)
(23,16,0)
(38,28,0)
(10,19,0)
(35,24,0)
(20,38,0)
(38,14,0)
(38,3,0)
(29,10,0)
(8,22,0)
(13,10,0)
(7,19,0)
(26,32,0)
(19,7,0)
(1,13,0)
(22,14,0)
(16,22,0)
(4,28,0)
(26,14,0)
(7,28,0)
(27,14,0)
(31,34,0)
(11,3,0)
(7,12,0)
(4,16,0)
(17,27,0)
(0,4,0)
(32,30,0)
(30,28,0)
(15,24,0)
(28,3,0)
(28,14,0)
(39,31,0)
(37,14,0)
(18,30,0)
(16,4,0)
(24,28,0)
(34,40,0)
(11,9,0)
(32,26,0)
(21,9,0)
(33,4,0)
(12,7,0)
(24,3,0)
(10,13,0)
(25,28,0)
(7,19,1)
(2,36,1)
(4,0,1)
(35,28,1)
(4,3,1)
(34,31,1)
(39,24,1)
(19,10,1)
(33,24,1)
(30,3,1)
(0,33,1)
(29,25,1)
(26,32,1)
(5,18,1)
(4,28,1)
(6,26,1)
(11,2,1)
(13,1,1)
(38,28,1)
(16,4,1)
(20,38,1)
(8,16,1)
(24,15,1)
(15,35,1)
(30,5,1)
(16,23,1)
(11,28,1)
(18,27,1)
(38,3,1)
(7,12,1)
(23,4,1)
(24,28,1)
(17,9,1)
(33,34,1)
(28,3,1)
(38,6,1)
(10,13,1)
(21,11,1)
(36,22,1)
(1,29,1)
(22,8,1)
(11,3,1)
(32,30,1)
(28,7,1)
(24,3,1)
(9,11,1)
(31,39,1)
(27,17,1)
(30,28,1)
(9,21,1)
(34,31,2)
(4,3,2)
(10,13,2)
(11,3,2)
(19,10,2)
(24,28,2)
(16,4,2)
(39,24,2)
(34,24,2)
(11,28,2)
(30,3,2)
(38,3,2)
(24,3,2)
(4,28,2)
(9,11,2)
(28,7,2)
(28,3,2)
(38,28,2)
(26,32,2)
(20,38,2)
(7,12,2)
(31,24,2)
(30,28,2)
(32,30,2)
(7,19,2)
-----------------------------------
(0,0)
(1,twoIntsStruct)
(2,0)
(3,twoIntsStruct * data)
(4,data[0])
(5,0)
(6,data)
(7,(twoIntsStruct *)
(8,0)
(9,data[0].intTwo)
(10,100*sizeof(twoIntsStruct)
(11,data[0])
(12,twoIntsStruct *)
(13,sizeof(twoIntsStruct)
(14,)
(15,NULL)
(16,data[0].intOne)
(17,0)
(18,data)
(19,malloc(100*sizeof(twoIntsStruct)
(20,RET)
(21,intTwo)
(22,data[0].intOne = 0)
(23,intOne)
(24,data == NULL)
(25,data)
(26,printStructLine(&data[0])
(27,data[0].intTwo = 0)
(28,data = (twoIntsStruct *)
(29,100)
(30,data[0])
(31,-1)
(32,&data[0])
(33,data)
(34,exit(-1)
(35,data)
(36,data)
(37,if (data == NULL)
(38,return data;)
(39,1)
(40,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
