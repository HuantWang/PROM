-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_09_bad()
{
    if(GLOBAL_CONST_TRUE)
    {
        {
            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            data[0] = 5LL;
            printLongLongLine(data[0]);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                data[0] = 10LL;
                printLongLongLine(data[0]);
                free(data);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
11,12
12,13
12,14
13,14
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
21,22
23,24
25,26
25,27
26,27
28,29
28,30
30,31
31,32
31,33
32,33
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
50,52
51,52
55,56
56,57
56,58
57,58
59,60
59,61
60,61
63,64
64,65
64,66
65,66
67,68
67,69
68,69
68,70
69,70
71,72
73,74
73,75
73,76
74,75
76,77
78,79
78,80
79,80
81,82
82,83
82,84
83,84
86,87
86,88
87,88
87,89
88,89
90,91
92,93
92,94
92,95
93,94
94,95
94,96
95,96
95,97
96,97
100,101
101,102
101,103
102,103
104,105
104,106
105,106
108,109
109,110
109,111
110,111
112,113
-----nextToken-----
2,4,8,14,16,17,22,24,27,29,33,34,38,40,45,47,52,53,54,58,61,62,66,70,72,75,77,80,84,85,89,91,97,98,99,103,106,107,111,113
-----computeFrom-----
28,29
28,30
36,37
36,38
49,50
49,51
64,65
64,66
78,79
78,80
87,88
87,89
94,95
94,96
-----guardedBy-----
89,113
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_09_bad(){    if(GLOBAL_CONST_TRUE)    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }}
void
CWE401_Memory_Leak__malloc_realloc_int64_t_09_bad()
CWE401_Memory_Leak__malloc_realloc_int64_t_09_bad
{    if(GLOBAL_CONST_TRUE)    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }}
if(GLOBAL_CONST_TRUE)    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }
{            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t
int64_t
* data = (int64_t *)malloc(100*sizeof(int64_t))
*
data
= (int64_t *)malloc(100*sizeof(int64_t))
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t))
data
data
(int64_t *)realloc(data, (130000)*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, (130000)*sizeof(int64_t))
realloc
realloc
data
data
(130000)*sizeof(int64_t)
(130000)
130000
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }
data[0] = 10LL;
data[0] = 10LL
data[0]
data
data
0
10LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(34,10,0)
(28,22,0)
(47,2,0)
(29,41,0)
(25,23,0)
(10,2,0)
(41,13,0)
(27,35,0)
(10,35,0)
(46,27,0)
(25,10,0)
(30,2,0)
(13,39,0)
(12,23,0)
(50,23,0)
(31,35,0)
(43,36,0)
(35,27,0)
(27,28,0)
(9,43,0)
(24,2,0)
(42,36,0)
(5,20,0)
(12,34,0)
(48,25,0)
(8,42,0)
(40,37,0)
(38,2,0)
(21,45,0)
(11,34,0)
(36,42,0)
(16,43,0)
(42,8,0)
(7,44,0)
(27,36,0)
(6,20,0)
(13,41,0)
(34,12,0)
(17,34,0)
(49,28,0)
(22,28,0)
(37,3,0)
(35,31,0)
(20,36,0)
(18,22,0)
(24,43,0)
(42,39,0)
(36,2,0)
(26,10,0)
(39,42,0)
(14,44,0)
(15,40,0)
(37,40,0)
(28,27,0)
(39,13,0)
(32,2,0)
(19,13,0)
(35,10,0)
(1,36,0)
(44,10,0)
(43,24,0)
(2,33,0)
(39,13,1)
(22,18,1)
(35,27,1)
(28,22,1)
(34,17,1)
(14,10,1)
(44,7,1)
(37,40,1)
(20,36,1)
(50,44,1)
(20,5,1)
(25,10,1)
(40,15,1)
(25,48,1)
(4,0,1)
(4,44,1)
(35,31,1)
(34,10,1)
(18,49,1)
(44,10,1)
(36,42,1)
(47,37,1)
(15,20,1)
(41,29,1)
(49,46,1)
(4,25,1)
(48,12,1)
(11,50,1)
(47,20,1)
(42,39,1)
(27,28,1)
(27,36,1)
(46,26,1)
(13,41,1)
(10,35,1)
(12,34,1)
(1,0,1)
(17,11,1)
(43,36,1)
(29,19,1)
(42,8,1)
(5,6,1)
(43,9,1)
(7,14,1)
(26,24,1)
(16,47,1)
(19,1,1)
(6,36,1)
(24,43,1)
(9,16,1)
(35,0,2)
(35,31,2)
(17,44,2)
(46,0,2)
(13,0,2)
(19,0,2)
(37,40,2)
(36,42,2)
(39,0,2)
(24,43,2)
(1,0,2)
(20,36,2)
(42,0,2)
(43,0,2)
(20,0,2)
(39,13,2)
(16,0,2)
(7,0,2)
(27,0,2)
(42,39,2)
(6,0,2)
(27,36,2)
(35,27,2)
(15,20,2)
(12,44,2)
(9,0,2)
(10,0,2)
(13,41,2)
(24,0,2)
(44,10,2)
(42,8,2)
(25,10,2)
(34,44,2)
(5,0,2)
(12,34,2)
(40,20,2)
(28,22,2)
(49,0,2)
(22,0,2)
(43,36,2)
(27,28,2)
(37,20,2)
(26,0,2)
(25,44,2)
(41,0,2)
(28,0,2)
(50,44,2)
(29,0,2)
(10,35,2)
(47,0,2)
(14,0,2)
(44,0,2)
(18,0,2)
(36,0,2)
(11,44,2)
(48,44,2)
(34,10,2)
-----------------------------------
(0,GLOBAL_CONST_TRUE)
(1,data)
(2,)
(3,)
(4,RET)
(5,NULL)
(6,data)
(7,NULL)
(8,int64_t *)
(9,0)
(10,data = (int64_t *)
(11,data)
(12,printLongLongLine(data[0])
(13,100*sizeof(int64_t)
(14,data)
(15,1)
(16,data)
(17,0)
(18,int64_t)
(19,100)
(20,data == NULL)
(21,if(GLOBAL_CONST_TRUE)
(22,sizeof(int64_t)
(23,)
(24,printLongLongLine(data[0])
(25,free(data)
(26,data)
(27,realloc(data, (130000)
(28,(130000)
(29,int64_t)
(30,data)
(31,int64_t *)
(32,if (data == NULL)
(33,)
(34,data[0])
(35,(int64_t *)
(36,* data = (int64_t *)
(37,exit(-1)
(38,if (data != NULL)
(39,malloc(100*sizeof(int64_t)
(40,-1)
(41,sizeof(int64_t)
(42,(int64_t *)
(43,data[0])
(44,data != NULL)
(45,)
(46,data)
(47,L)
(48,data)
(49,130000)
(50,L)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
