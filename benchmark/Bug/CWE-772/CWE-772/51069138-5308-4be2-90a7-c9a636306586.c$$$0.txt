-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_14_bad()
{
    twoIntsStruct * data;
    data = NULL;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0].intOne = 0;
        data[0].intTwo = 0;
        printStructLine(&data[0]);
    }
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
24,28
24,29
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
35,38
36,37
38,39
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
62,63
62,64
63,64
63,65
64,65
69,70
70,71
70,72
71,72
71,73
72,73
72,74
73,74
78,79
79,80
79,81
80,81
82,83
83,84
83,85
84,85
87,88
87,89
88,89
88,90
89,90
92,93
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,39,41,45,46,50,52,57,59,65,66,67,68,74,75,76,77,81,85,86,90,91,93
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
40,41
40,42
48,49
48,50
61,62
61,63
70,71
70,72
88,89
88,90
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_14_bad(){    twoIntsStruct * data;    data = NULL;    if(globalFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }    if(globalFive==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__twoIntsStruct_realloc_14_bad()
CWE401_Memory_Leak__twoIntsStruct_realloc_14_bad
{    twoIntsStruct * data;    data = NULL;    if(globalFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }    if(globalFive==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(globalFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(47,50,0)
(18,5,0)
(13,5,0)
(37,46,0)
(50,30,0)
(46,51,0)
(20,23,0)
(10,30,0)
(29,35,0)
(43,51,0)
(24,16,0)
(12,16,0)
(40,34,0)
(41,46,0)
(8,13,0)
(9,45,0)
(38,22,0)
(19,51,0)
(13,8,0)
(5,51,0)
(32,23,0)
(22,42,0)
(7,32,0)
(34,51,0)
(23,45,0)
(27,42,0)
(35,45,0)
(6,7,0)
(2,5,0)
(31,30,0)
(16,24,0)
(15,25,0)
(42,22,0)
(11,30,0)
(4,43,0)
(43,4,0)
(5,13,0)
(49,43,0)
(7,51,0)
(24,33,0)
(37,35,0)
(43,49,0)
(8,45,0)
(21,34,0)
(32,7,0)
(4,42,0)
(4,50,0)
(3,28,0)
(48,7,0)
(51,45,0)
(39,46,0)
(51,43,0)
(17,32,0)
(46,37,0)
(36,28,0)
(1,50,0)
(42,4,0)
(44,25,0)
(14,37,0)
(0,4,0)
(41,23,1)
(27,0,1)
(34,51,1)
(21,40,1)
(3,25,1)
(4,42,1)
(46,51,1)
(51,43,1)
(0,19,1)
(20,32,1)
(5,51,1)
(6,48,1)
(18,35,1)
(42,22,1)
(2,18,1)
(44,15,1)
(43,49,1)
(48,24,1)
(3,8,1)
(5,2,1)
(43,4,1)
(4,50,1)
(8,13,1)
(7,51,1)
(24,16,1)
(32,17,1)
(32,7,1)
(19,25,1)
(34,21,1)
(13,5,1)
(47,1,1)
(17,7,1)
(22,38,1)
(37,14,1)
(36,3,1)
(39,41,1)
(14,46,1)
(26,28,1)
(7,6,1)
(50,47,1)
(38,27,1)
(23,20,1)
(15,50,1)
(46,39,1)
(29,37,1)
(25,44,1)
(37,46,1)
(28,36,1)
(48,34,1)
(35,29,1)
(40,51,1)
(12,34,1)
(16,12,1)
(14,25,2)
(43,4,2)
(2,25,2)
(0,25,2)
(7,51,2)
(8,25,2)
(42,25,2)
(46,25,2)
(17,25,2)
(41,25,2)
(51,25,2)
(48,25,2)
(5,51,2)
(51,43,2)
(16,34,2)
(24,34,2)
(29,25,2)
(39,25,2)
(34,51,2)
(35,25,2)
(19,25,2)
(20,25,2)
(43,25,2)
(34,25,2)
(32,7,2)
(38,25,2)
(7,25,2)
(43,49,2)
(23,25,2)
(32,25,2)
(24,16,2)
(4,50,2)
(37,46,2)
(40,25,2)
(21,25,2)
(22,25,2)
(27,25,2)
(12,34,2)
(4,42,2)
(6,25,2)
(13,25,2)
(13,5,2)
(42,22,2)
(8,13,2)
(4,25,2)
(5,25,2)
(37,25,2)
(46,51,2)
(18,25,2)
-----------------------------------
(0,data)
(1,data)
(2,0)
(3,globalFive)
(4,realloc(data, 100*sizeof(twoIntsStruct)
(5,data[0])
(6,0)
(7,data[0])
(8,printStructLine(&data[0])
(9,if (data == NULL)
(10,if(globalFive==5)
(11,if(globalFive==5)
(12,1)
(13,&data[0])
(14,intTwo)
(15,globalFive)
(16,-1)
(17,intOne)
(18,data)
(19,data)
(20,0)
(21,NULL)
(22,sizeof(twoIntsStruct)
(23,data[0].intOne = 0)
(24,exit(-1)
(25,globalFive==5)
(26,RET)
(27,100)
(28,globalFive==5)
(29,0)
(30,)
(31,data)
(32,data[0].intOne)
(33,)
(34,data == NULL)
(35,data[0].intTwo = 0)
(36,5)
(37,data[0].intTwo)
(38,twoIntsStruct)
(39,0)
(40,data)
(41,data)
(42,100*sizeof(twoIntsStruct)
(43,(twoIntsStruct *)
(44,5)
(45,)
(46,data[0])
(47,NULL)
(48,data)
(49,twoIntsStruct *)
(50,data = NULL)
(51,data = (twoIntsStruct *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
