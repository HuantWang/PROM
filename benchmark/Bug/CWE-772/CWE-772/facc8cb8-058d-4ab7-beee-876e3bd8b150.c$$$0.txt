-----label-----
1
-----code-----
void CWE401_Memory_Leak__wchar_t_malloc_21_bad()
{
    wchar_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)malloc(100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
51,52
53,54
56,57
57,58
57,59
58,59
60,61
62,63
63,64
63,65
64,65
67,68
68,69
68,70
69,70
71,72
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,39,41,46,48,52,54,55,59,61,65,66,70,72
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
37,38
37,39
63,64
63,65
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__wchar_t_malloc_21_bad(){    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__wchar_t_malloc_21_bad()
CWE401_Memory_Leak__wchar_t_malloc_21_bad
{    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    badStatic = 1; /* true */    badSink(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)malloc(100*sizeof(wchar_t));
data = (wchar_t *)malloc(100*sizeof(wchar_t))
data
data
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(13,27,0)
(28,27,0)
(9,13,0)
(0,13,0)
(25,16,0)
(5,15,0)
(12,28,0)
(1,23,0)
(3,0,0)
(21,23,0)
(25,21,0)
(25,13,0)
(14,8,0)
(15,27,0)
(6,26,0)
(23,21,0)
(24,10,0)
(26,27,0)
(13,25,0)
(19,22,0)
(23,1,0)
(21,25,0)
(20,27,0)
(26,13,0)
(28,13,0)
(8,19,0)
(4,15,0)
(16,25,0)
(7,10,0)
(19,8,0)
(17,23,0)
(18,0,0)
(10,27,0)
(11,27,0)
(29,1,0)
(18,3,1)
(15,4,1)
(7,24,1)
(29,17,1)
(1,29,1)
(28,12,1)
(25,16,1)
(3,13,1)
(14,0,1)
(17,9,1)
(8,14,1)
(13,25,1)
(28,13,1)
(19,8,1)
(0,18,1)
(23,1,1)
(25,21,1)
(12,10,1)
(10,7,1)
(21,23,1)
(26,6,1)
(26,13,1)
(4,5,1)
(24,26,1)
(6,0,1)
(6,19,1)
(0,13,1)
(9,15,1)
(2,28,1)
(19,8,2)
(25,16,2)
(28,13,2)
(21,23,2)
(23,1,2)
(8,0,2)
(0,13,2)
(14,0,2)
(13,25,2)
(19,0,2)
(25,21,2)
(26,13,2)
-----------------------------------
(0,data == NULL)
(1,sizeof(wchar_t)
(2,RET)
(3,data)
(4,NULL)
(5,data)
(6,data)
(7,1)
(8,-1)
(9,data)
(10,badStatic = 1)
(11,data)
(12,data)
(13,data = (wchar_t *)
(14,1)
(15,data = NULL)
(16,wchar_t *)
(17,100)
(18,NULL)
(19,exit(-1)
(20,if (data == NULL)
(21,malloc(100*sizeof(wchar_t)
(22,)
(23,100*sizeof(wchar_t)
(24,badStatic)
(25,(wchar_t *)
(26,printWLine(data)
(27,)
(28,badSink(data)
(29,wchar_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
