-----label-----
1
-----code-----
void CWE401_Memory_Leak__wchar_t_realloc_17_bad()
{
    int i,j;
    wchar_t * data;
    data = NULL;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        wcscpy(data, L"A String");
        printWLine(data);
    }
    for(j = 0; j < 1; j++)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
16,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
25,28
25,29
26,27
27,28
27,29
28,29
31,32
31,33
32,33
35,36
36,37
38,39
38,40
38,41
38,42
39,40
40,41
40,42
41,42
43,44
43,45
44,45
44,46
46,47
48,49
48,50
48,51
49,50
51,52
53,54
53,55
55,56
56,57
56,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
68,69
70,71
72,73
73,74
73,75
73,76
74,75
76,77
79,80
80,81
80,82
81,82
83,84
85,86
85,87
85,88
85,89
86,87
87,88
87,89
88,89
91,92
91,93
92,93
95,96
96,97
98,99
-----nextToken-----
2,4,8,10,12,15,17,18,22,24,29,30,33,34,37,42,45,47,50,52,54,57,58,62,64,69,71,75,77,78,82,84,89,90,93,94,97,99
-----computeFrom-----
20,21
20,22
27,28
27,29
31,32
31,33
40,41
40,42
53,54
53,55
60,61
60,62
87,88
87,89
91,92
91,93
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__wchar_t_realloc_17_bad(){    int i,j;    wchar_t * data;    data = NULL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        wcscpy(data, L"A String");        printWLine(data);    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__wchar_t_realloc_17_bad()
CWE401_Memory_Leak__wchar_t_realloc_17_bad
{    int i,j;    wchar_t * data;    data = NULL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        wcscpy(data, L"A String");        printWLine(data);    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int i,j;
int i,j;
int
i
i
j
j
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        wcscpy(data, L"A String");        printWLine(data);    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        wcscpy(data, L"A String");        printWLine(data);    }
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t))
data
data
(wchar_t *)realloc(data, 100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, 100*sizeof(wchar_t))
realloc
realloc
data
data
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(27,39,0)
(13,30,0)
(10,20,0)
(41,30,0)
(28,39,0)
(5,0,0)
(22,44,0)
(35,32,0)
(31,39,0)
(10,32,0)
(6,30,0)
(43,17,0)
(9,27,0)
(20,10,0)
(33,34,0)
(0,34,0)
(11,27,0)
(46,26,0)
(20,44,0)
(15,19,0)
(16,44,0)
(20,46,0)
(38,19,0)
(14,38,0)
(42,0,0)
(1,37,0)
(46,38,0)
(7,8,0)
(2,30,0)
(20,38,0)
(21,1,0)
(25,39,0)
(17,38,0)
(36,15,0)
(32,10,0)
(4,34,0)
(45,10,0)
(1,21,0)
(23,17,0)
(40,31,0)
(8,34,0)
(26,46,0)
(46,20,0)
(44,30,0)
(38,46,0)
(15,38,0)
(18,20,0)
(3,30,0)
(29,19,0)
(12,21,0)
(31,40,1)
(28,25,1)
(21,12,1)
(17,38,1)
(5,42,1)
(11,9,1)
(23,38,1)
(45,18,1)
(15,38,1)
(0,5,1)
(12,17,1)
(20,38,1)
(44,22,1)
(43,23,1)
(25,0,1)
(15,36,1)
(42,8,1)
(8,7,1)
(7,15,1)
(35,45,1)
(27,11,1)
(9,39,1)
(14,0,1)
(24,27,1)
(38,46,1)
(42,34,1)
(4,33,1)
(27,39,1)
(36,1,1)
(8,34,1)
(36,17,1)
(18,14,1)
(1,21,1)
(39,28,1)
(17,43,1)
(32,35,1)
(33,44,1)
(9,31,1)
(31,39,1)
(34,4,1)
(22,16,1)
(20,10,1)
(20,44,1)
(0,34,1)
(10,32,1)
(46,20,1)
(40,27,1)
(46,26,1)
(32,0,2)
(15,0,2)
(1,21,2)
(17,0,2)
(31,27,2)
(14,0,2)
(46,20,2)
(46,0,2)
(38,46,2)
(10,32,2)
(11,27,2)
(23,0,2)
(20,44,2)
(45,0,2)
(7,0,2)
(40,27,2)
(12,17,2)
(31,39,2)
(27,27,2)
(35,0,2)
(9,27,2)
(20,10,2)
(20,0,2)
(46,26,2)
(10,0,2)
(8,34,2)
(8,0,2)
(5,0,2)
(27,39,2)
(0,0,2)
(0,34,2)
(15,38,2)
(43,0,2)
(38,0,2)
(20,38,2)
(1,17,2)
(21,17,2)
(42,0,2)
(36,0,2)
(18,0,2)
(17,38,2)
-----------------------------------
(0,i < 1)
(1,exit(-1)
(2,for(i = 0; i < 1; i++)
(3,data)
(4,0)
(5,1)
(6,for(j = 0; j < 1; j++)
(7,i)
(8,i++)
(9,j)
(10,100*sizeof(wchar_t)
(11,1)
(12,1)
(13,i)
(14,data)
(15,printWLine(data)
(16,data)
(17,data == NULL)
(18,data)
(19,)
(20,realloc(data, 100*sizeof(wchar_t)
(21,-1)
(22,NULL)
(23,data)
(24,RET)
(25,j)
(26,wchar_t *)
(27,j < 1)
(28,0)
(29,if (data == NULL)
(30,)
(31,j++)
(32,sizeof(wchar_t)
(33,i)
(34,i = 0)
(35,wchar_t)
(36,data)
(37,)
(38,data = (wchar_t *)
(39,j = 0)
(40,j)
(41,j)
(42,i)
(43,NULL)
(44,data = NULL)
(45,100)
(46,(wchar_t *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
