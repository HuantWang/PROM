-----label-----
1
-----code-----
static struct _twoIntsStruct * badSource(struct _twoIntsStruct * data)
{

    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}

    /* Initialize and make use of data */

    data[0].intOne = 0;
    data[0].intTwo = 0;

    printStructLine((twoIntsStruct *)&data[0]);

    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
13,19
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
31,32
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
49,51
50,51
50,52
51,52
56,57
57,58
57,59
58,59
58,60
59,60
59,61
60,61
65,66
66,67
66,68
67,68
69,70
69,71
70,71
70,72
71,72
73,74
75,76
76,77
76,78
77,78
80,81
81,82
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,28,32,33,37,39,44,46,52,53,54,55,61,62,63,64,68,72,74,78,79,82
-----computeFrom-----
15,16
15,17
27,28
27,29
35,36
35,37
48,49
48,50
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;ElaboratedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static struct _twoIntsStruct * badSource(struct _twoIntsStruct * data){    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    return data;}
static struct _twoIntsStruct
_twoIntsStruct
* badSource(struct _twoIntsStruct * data)
*
badSource
struct _twoIntsStruct * data
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
{    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    return data;}
data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
malloc(100*sizeof(struct _twoIntsStruct))
malloc
malloc
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
return data;
data
data
-----joern-----
(27,34,0)
(7,4,0)
(33,39,0)
(24,13,0)
(16,5,0)
(20,16,0)
(12,6,0)
(24,5,0)
(10,16,0)
(29,21,0)
(34,36,0)
(14,3,0)
(0,13,0)
(4,12,0)
(27,25,0)
(30,8,0)
(28,8,0)
(26,22,0)
(16,18,0)
(1,2,0)
(19,18,0)
(21,7,0)
(33,6,0)
(32,24,0)
(0,34,0)
(34,27,0)
(6,12,0)
(34,0,0)
(18,16,0)
(9,25,0)
(7,5,0)
(25,7,0)
(17,25,0)
(15,2,0)
(8,5,0)
(41,13,0)
(42,31,0)
(7,13,0)
(40,24,0)
(23,21,0)
(11,4,0)
(21,5,0)
(39,33,0)
(38,6,0)
(3,26,0)
(12,4,0)
(6,33,0)
(1,21,0)
(25,27,0)
(36,34,0)
(18,31,0)
(31,13,0)
(25,5,0)
(35,1,0)
(8,7,0)
(37,7,0)
(26,3,0)
(4,7,0)
(24,7,0)
(2,13,0)
(21,1,0)
(4,11,0)
(16,7,0)
(27,25,1)
(28,30,1)
(26,3,1)
(10,2,1)
(30,7,1)
(1,21,1)
(21,5,1)
(40,0,1)
(18,16,1)
(23,8,1)
(23,26,1)
(15,1,1)
(0,34,1)
(16,5,1)
(33,39,1)
(21,7,1)
(4,12,1)
(6,33,1)
(8,5,1)
(25,5,1)
(16,7,1)
(29,23,1)
(4,11,1)
(34,27,1)
(7,5,1)
(14,8,1)
(12,6,1)
(18,19,1)
(21,29,1)
(31,42,1)
(33,38,1)
(19,16,1)
(42,18,1)
(20,10,1)
(8,7,1)
(17,9,1)
(8,28,1)
(7,4,1)
(3,14,1)
(9,31,1)
(24,40,1)
(32,24,1)
(24,7,1)
(38,37,1)
(25,17,1)
(1,35,1)
(35,21,1)
(25,7,1)
(16,20,1)
(34,36,1)
(24,5,1)
(2,15,1)
(1,21,2)
(21,7,2)
(34,36,2)
(12,6,2)
(26,3,2)
(27,25,2)
(6,33,2)
(7,5,2)
(4,12,2)
(24,7,2)
(25,5,2)
(18,16,2)
(34,27,2)
(21,5,2)
(3,8,2)
(16,7,2)
(0,34,2)
(16,5,2)
(4,11,2)
(26,8,2)
(8,7,2)
(25,7,2)
(8,5,2)
(7,4,2)
(14,8,2)
(32,24,2)
(33,39,2)
(24,5,2)
-----------------------------------
(0,printStructLine((twoIntsStruct *)
(1,data[0].intOne)
(2,data[0].intOne = 0)
(3,-1)
(4,(struct _twoIntsStruct *)
(5,struct _twoIntsStruct * data)
(6,100*sizeof(struct _twoIntsStruct)
(7,data = (struct _twoIntsStruct *)
(8,data == NULL)
(9,data)
(10,data)
(11,struct _twoIntsStruct *)
(12,malloc(100*sizeof(struct _twoIntsStruct)
(13,)
(14,1)
(15,0)
(16,data[0])
(17,0)
(18,data[0].intTwo)
(19,intTwo)
(20,0)
(21,data[0])
(22,)
(23,data)
(24,return data;)
(25,data[0])
(26,exit(-1)
(27,&data[0])
(28,NULL)
(29,0)
(30,data)
(31,data[0].intTwo = 0)
(32,RET)
(33,sizeof(struct _twoIntsStruct)
(34,(twoIntsStruct *)
(35,intOne)
(36,twoIntsStruct *)
(37,data)
(38,100)
(39,struct _twoIntsStruct)
(40,data)
(41,if (data == NULL)
(42,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
