-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_malloc_44_bad()
{
    int64_t * data;
    /* define a function pointer */
    void (*funcPtr) (int64_t *) = badSink;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)malloc(100*sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
16,17
16,18
16,19
17,18
17,19
20,21
20,22
21,22
23,24
23,25
26,27
27,28
29,30
30,31
30,32
31,32
33,34
35,36
36,37
36,38
37,38
39,40
39,41
40,41
40,42
41,42
43,44
45,46
45,47
46,47
48,49
48,50
50,51
51,52
51,53
52,53
55,56
55,57
56,57
56,58
57,58
59,60
61,62
62,63
63,64
63,65
64,65
66,67
68,69
69,70
69,71
70,71
70,72
71,72
75,76
76,77
76,78
77,78
79,80
79,81
80,81
83,84
84,85
84,86
85,86
87,88
-----nextToken-----
2,4,9,11,12,15,18,19,22,24,25,28,32,34,38,42,44,47,49,53,54,58,60,65,67,72,73,74,78,81,82,86,88
-----computeFrom-----
30,31
30,32
36,37
36,38
48,49
48,50
56,57
56,58
69,70
69,71
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_malloc_44_bad(){    int64_t * data;    /* define a function pointer */    void (*funcPtr) (int64_t *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)malloc(100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    /* use the function pointer */    funcPtr(data);}
void
CWE401_Memory_Leak__int64_t_malloc_44_bad()
CWE401_Memory_Leak__int64_t_malloc_44_bad
{    int64_t * data;    /* define a function pointer */    void (*funcPtr) (int64_t *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)malloc(100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    /* use the function pointer */    funcPtr(data);}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
void (*funcPtr) (int64_t *) = badSink;
void (*funcPtr) (int64_t *) = badSink;
void
(*funcPtr) (int64_t *) = badSink
*funcPtr
*
funcPtr
int64_t *
int64_t
int64_t
*
*

= badSink
badSink
badSink
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)malloc(100*sizeof(int64_t));
data = (int64_t *)malloc(100*sizeof(int64_t))
data
data
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(33,21,0)
(23,29,0)
(32,30,0)
(18,21,0)
(4,28,0)
(33,29,0)
(23,19,0)
(3,1,0)
(10,8,0)
(1,8,0)
(30,8,0)
(2,10,0)
(7,20,0)
(19,23,0)
(11,8,0)
(25,8,0)
(29,23,0)
(16,33,0)
(6,3,0)
(17,27,0)
(23,1,0)
(30,1,0)
(29,33,0)
(20,1,0)
(24,28,0)
(27,8,0)
(13,8,0)
(9,10,0)
(13,20,0)
(26,8,0)
(31,1,0)
(14,27,0)
(12,8,0)
(4,0,0)
(20,13,0)
(15,3,0)
(5,20,0)
(21,33,0)
(1,23,0)
(28,4,0)
(23,19,1)
(3,15,1)
(31,27,1)
(20,7,1)
(23,29,1)
(27,17,1)
(29,33,1)
(7,5,1)
(24,3,1)
(6,1,1)
(1,23,1)
(15,6,1)
(16,31,1)
(21,18,1)
(17,14,1)
(28,24,1)
(9,2,1)
(4,28,1)
(30,32,1)
(25,4,1)
(10,9,1)
(25,3,1)
(20,1,1)
(18,16,1)
(14,10,1)
(22,30,1)
(33,21,1)
(13,20,1)
(30,1,1)
(3,1,1)
(32,13,1)
(5,25,1)
(30,1,2)
(20,1,2)
(23,19,2)
(33,21,2)
(23,29,2)
(1,23,2)
(4,3,2)
(3,1,2)
(4,28,2)
(29,33,2)
(13,20,2)
(24,3,2)
(28,3,2)
-----------------------------------
(0,)
(1,data = (int64_t *)
(2,funcPtr)
(3,data == NULL)
(4,exit(-1)
(5,data)
(6,data)
(7,0)
(8,)
(9,badSink)
(10,(*funcPtr)
(11,funcPtr)
(12,if (data == NULL)
(13,printLongLongLine(data[0])
(14,data)
(15,NULL)
(16,100)
(17,NULL)
(18,int64_t)
(19,int64_t *)
(20,data[0])
(21,sizeof(int64_t)
(22,RET)
(23,(int64_t *)
(24,1)
(25,L)
(26,data)
(27,data = NULL)
(28,-1)
(29,malloc(100*sizeof(int64_t)
(30,funcPtr(data)
(31,data)
(32,data)
(33,100*sizeof(int64_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
