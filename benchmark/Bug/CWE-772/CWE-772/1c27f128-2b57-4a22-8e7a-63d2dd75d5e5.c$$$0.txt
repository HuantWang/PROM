-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_18_bad()
{
    goto sink;
sink:
    {
        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
        /* FLAW: If realloc() fails, the initial memory block will not be freed() */
        data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
        if (data != NULL)
        {
            /* Reinitialize and make use of data */
            data[0] = 10LL;
            printLongLongLine(data[0]);
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
8,9
8,10
10,11
10,12
10,13
10,14
10,15
10,16
11,12
12,13
12,14
13,14
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
21,22
23,24
25,26
25,27
26,27
28,29
28,30
30,31
31,32
31,33
32,33
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
50,52
51,52
55,56
56,57
56,58
57,58
59,60
59,61
60,61
63,64
64,65
64,66
65,66
67,68
67,69
68,69
68,70
69,70
71,72
73,74
73,75
73,76
74,75
76,77
78,79
78,80
79,80
81,82
82,83
82,84
83,84
86,87
86,88
87,88
87,89
88,89
90,91
92,93
92,94
92,95
93,94
94,95
94,96
95,96
95,97
96,97
100,101
101,102
101,103
102,103
104,105
104,106
105,106
108,109
109,110
109,111
110,111
112,113
-----nextToken-----
2,4,7,9,14,16,17,22,24,27,29,33,34,38,40,45,47,52,53,54,58,61,62,66,70,72,75,77,80,84,85,89,91,97,98,99,103,106,107,111,113
-----computeFrom-----
28,29
28,30
36,37
36,38
49,50
49,51
64,65
64,66
78,79
78,80
87,88
87,89
94,95
94,96
-----guardedBy-----
89,113
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_18_bad(){    goto sink;sink:    {        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));        if (data != NULL)        {            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);            free(data);        }    }}
void
CWE401_Memory_Leak__malloc_realloc_int64_t_18_bad()
CWE401_Memory_Leak__malloc_realloc_int64_t_18_bad
{    goto sink;sink:    {        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));        if (data != NULL)        {            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);            free(data);        }    }}
goto sink;
sink
sink:    {        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));        if (data != NULL)        {            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);            free(data);        }    }
sink
{        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));        if (data != NULL)        {            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);            free(data);        }    }
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t
int64_t
* data = (int64_t *)malloc(100*sizeof(int64_t))
*
data
= (int64_t *)malloc(100*sizeof(int64_t))
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t))
data
data
(int64_t *)realloc(data, (130000)*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, (130000)*sizeof(int64_t))
realloc
realloc
data
data
(130000)*sizeof(int64_t)
(130000)
130000
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data != NULL)        {            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);            free(data);        }
data != NULL
data
data
NULL
NULL
{            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);            free(data);        }
data[0] = 10LL;
data[0] = 10LL
data[0]
data
data
0
10LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(49,9,0)
(21,27,0)
(34,18,0)
(32,12,0)
(21,3,0)
(24,4,0)
(5,4,0)
(26,4,0)
(35,9,0)
(39,16,0)
(28,17,0)
(19,13,0)
(6,30,0)
(5,31,0)
(36,10,0)
(8,18,0)
(22,12,0)
(16,39,0)
(4,17,0)
(33,43,0)
(9,16,0)
(9,4,0)
(16,10,0)
(43,33,0)
(23,31,0)
(29,4,0)
(36,30,0)
(10,16,0)
(10,36,0)
(30,36,0)
(12,5,0)
(38,15,0)
(18,31,0)
(11,5,0)
(44,8,0)
(25,4,0)
(2,35,0)
(41,49,0)
(0,9,0)
(48,43,0)
(45,35,0)
(8,15,0)
(40,17,0)
(18,9,0)
(35,45,0)
(1,20,0)
(7,43,0)
(15,8,0)
(18,8,0)
(13,20,0)
(16,9,0)
(3,21,0)
(31,18,0)
(13,5,0)
(42,49,0)
(43,5,0)
(37,3,0)
(31,5,0)
(14,35,0)
(46,36,0)
(45,4,0)
(31,23,0)
(33,20,0)
(46,0,1)
(48,7,1)
(16,10,1)
(47,12,1)
(36,30,1)
(37,49,1)
(8,15,1)
(14,2,1)
(31,18,1)
(0,28,1)
(44,34,1)
(13,19,1)
(45,35,1)
(42,41,1)
(18,8,1)
(34,11,1)
(38,44,1)
(35,14,1)
(47,13,1)
(22,32,1)
(49,9,1)
(26,21,1)
(18,9,1)
(13,5,1)
(6,46,1)
(7,1,1)
(35,9,1)
(30,6,1)
(21,3,1)
(41,9,1)
(31,23,1)
(3,37,1)
(9,16,1)
(10,36,1)
(49,42,1)
(26,49,1)
(33,43,1)
(43,48,1)
(32,5,1)
(5,31,1)
(11,45,1)
(19,33,1)
(1,12,1)
(2,26,1)
(16,39,1)
(15,38,1)
(12,22,1)
(12,5,1)
(43,5,1)
(1,12,2)
(43,12,2)
(3,49,2)
(37,49,2)
(21,49,2)
(9,16,2)
(13,5,2)
(13,12,2)
(12,5,2)
(5,31,2)
(21,3,2)
(10,36,2)
(45,35,2)
(16,10,2)
(33,43,2)
(49,9,2)
(48,12,2)
(18,8,2)
(7,12,2)
(18,9,2)
(19,12,2)
(33,12,2)
(43,5,2)
(36,30,2)
(8,15,2)
(31,23,2)
(31,18,2)
(35,9,2)
(16,39,2)
-----------------------------------
(0,data)
(1,L)
(2,data)
(3,-1)
(4,)
(5,data = (int64_t *)
(6,int64_t)
(7,data)
(8,(130000)
(9,* data = (int64_t *)
(10,malloc(100*sizeof(int64_t)
(11,data)
(12,data != NULL)
(13,free(data)
(14,0)
(15,sizeof(int64_t)
(16,(int64_t *)
(17,)
(18,realloc(data, (130000)
(19,data)
(20,)
(21,exit(-1)
(22,NULL)
(23,int64_t *)
(24,data)
(25,if (data == NULL)
(26,L)
(27,)
(28,goto sink;)
(29,if (data != NULL)
(30,sizeof(int64_t)
(31,(int64_t *)
(32,data)
(33,printLongLongLine(data[0])
(34,data)
(35,data[0])
(36,100*sizeof(int64_t)
(37,1)
(38,int64_t)
(39,int64_t *)
(40,sink:)
(41,data)
(42,NULL)
(43,data[0])
(44,130000)
(45,printLongLongLine(data[0])
(46,100)
(47,RET)
(48,0)
(49,data == NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
