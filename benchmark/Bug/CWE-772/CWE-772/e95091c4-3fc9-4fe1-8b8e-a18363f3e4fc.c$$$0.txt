-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_31_bad()
{
    twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    {
        twoIntsStruct * dataCopy = data;
        twoIntsStruct * data = dataCopy;
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
32,33
34,35
34,36
36,37
37,38
37,39
38,39
41,42
41,43
42,43
42,44
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
54,55
55,56
55,57
56,57
56,58
57,58
57,59
58,59
63,64
64,65
64,66
65,66
65,67
66,67
66,68
67,68
72,73
73,74
73,75
74,75
76,77
77,78
77,79
78,79
81,82
81,83
81,84
82,83
83,84
83,85
84,85
86,87
86,88
86,89
89,90
90,91
92,93
93,94
93,95
94,95
96,97
96,98
96,99
99,100
100,101
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,35,39,40,44,46,51,53,59,60,61,62,68,69,70,71,75,79,80,85,87,88,91,95,97,98,101,102
-----computeFrom-----
14,15
14,16
20,21
20,22
34,35
34,36
42,43
42,44
55,56
55,57
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_31_bad(){    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    {        twoIntsStruct * dataCopy = data;        twoIntsStruct * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__twoIntsStruct_realloc_31_bad()
CWE401_Memory_Leak__twoIntsStruct_realloc_31_bad
{    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    {        twoIntsStruct * dataCopy = data;        twoIntsStruct * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
{        twoIntsStruct * dataCopy = data;        twoIntsStruct * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
twoIntsStruct * dataCopy = data;
twoIntsStruct * dataCopy = data;
twoIntsStruct
twoIntsStruct
* dataCopy = data
*
dataCopy
= data
data
data
twoIntsStruct * data = dataCopy;
twoIntsStruct * data = dataCopy;
twoIntsStruct
twoIntsStruct
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
;
-----joern-----
(46,34,0)
(14,46,0)
(40,7,0)
(33,3,0)
(22,3,0)
(10,32,0)
(22,9,0)
(49,34,0)
(40,44,0)
(24,34,0)
(15,36,0)
(36,15,0)
(20,40,0)
(6,31,0)
(16,35,0)
(9,34,0)
(32,9,0)
(39,28,0)
(36,34,0)
(35,2,0)
(18,47,0)
(23,0,0)
(0,22,0)
(47,18,0)
(28,14,0)
(1,32,0)
(13,38,0)
(0,3,0)
(11,2,0)
(35,12,0)
(35,18,0)
(19,3,0)
(12,17,0)
(48,28,0)
(12,35,0)
(38,13,0)
(21,22,0)
(45,2,0)
(8,31,0)
(17,12,0)
(44,40,0)
(3,34,0)
(30,14,0)
(9,18,0)
(32,15,0)
(44,9,0)
(38,25,0)
(5,0,0)
(7,34,0)
(43,9,0)
(50,22,0)
(29,46,0)
(14,28,0)
(28,9,0)
(42,17,0)
(51,13,0)
(4,44,0)
(41,12,0)
(27,7,0)
(18,35,0)
(26,44,0)
(15,32,0)
(31,9,0)
(18,9,0)
(2,34,0)
(32,10,1)
(22,21,1)
(28,39,1)
(44,9,1)
(23,5,1)
(35,2,1)
(12,17,1)
(50,36,1)
(31,9,1)
(29,14,1)
(37,0,1)
(4,31,1)
(36,15,1)
(30,28,1)
(40,44,1)
(41,16,1)
(17,42,1)
(0,22,1)
(9,18,1)
(38,13,1)
(4,38,1)
(18,35,1)
(22,9,1)
(20,44,1)
(8,6,1)
(15,32,1)
(14,28,1)
(26,4,1)
(10,1,1)
(28,9,1)
(27,40,1)
(18,47,1)
(43,2,1)
(32,9,1)
(51,31,1)
(7,27,1)
(31,8,1)
(2,45,1)
(40,20,1)
(16,43,1)
(1,46,1)
(35,12,1)
(42,41,1)
(48,7,1)
(14,30,1)
(13,51,1)
(44,26,1)
(0,23,1)
(21,50,1)
(46,29,1)
(39,48,1)
(5,22,1)
(45,11,1)
(6,9,1)
(32,9,2)
(44,9,2)
(9,18,2)
(35,12,2)
(22,9,2)
(36,15,2)
(51,31,2)
(28,9,2)
(14,28,2)
(13,31,2)
(12,17,2)
(38,31,2)
(18,47,2)
(0,22,2)
(38,13,2)
(31,9,2)
(40,44,2)
(35,2,2)
(15,32,2)
(18,35,2)
-----------------------------------
(0,* data = dataCopy)
(1,data)
(2,data = NULL)
(3,)
(4,data)
(5,data)
(6,data)
(7,data[0].intOne = 0)
(8,NULL)
(9,data = (twoIntsStruct *)
(10,0)
(11,data)
(12,100*sizeof(twoIntsStruct)
(13,-1)
(14,data[0].intTwo)
(15,&data[0])
(16,data)
(17,sizeof(twoIntsStruct)
(18,(twoIntsStruct *)
(19,data)
(20,intOne)
(21,data)
(22,* dataCopy = data)
(23,dataCopy)
(24,if (data == NULL)
(25,)
(26,0)
(27,0)
(28,data[0])
(29,0)
(30,intTwo)
(31,data == NULL)
(32,data[0])
(33,dataCopy)
(34,)
(35,realloc(data, 100*sizeof(twoIntsStruct)
(36,printStructLine(&data[0])
(37,RET)
(38,exit(-1)
(39,0)
(40,data[0].intOne)
(41,100)
(42,twoIntsStruct)
(43,data)
(44,data[0])
(45,NULL)
(46,data[0].intTwo = 0)
(47,twoIntsStruct *)
(48,data)
(49,data)
(50,dataCopy)
(51,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
