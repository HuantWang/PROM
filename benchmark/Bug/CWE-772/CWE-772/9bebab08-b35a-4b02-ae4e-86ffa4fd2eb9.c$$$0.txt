-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_realloc_14_bad()
{
    int64_t * data;
    data = NULL;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)realloc(data, 100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
24,28
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
35,38
36,37
38,39
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
62,63
62,64
63,64
67,68
68,69
68,70
69,70
71,72
71,73
72,73
75,76
75,77
76,77
76,78
77,78
80,81
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,39,41,45,46,50,52,57,59,64,65,66,70,73,74,78,79,81
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
40,41
40,42
48,49
48,50
61,62
61,63
76,77
76,78
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_realloc_14_bad(){    int64_t * data;    data = NULL;    if(globalFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(globalFive==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_realloc_14_bad()
CWE401_Memory_Leak__int64_t_realloc_14_bad
{    int64_t * data;    data = NULL;    if(globalFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(globalFive==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(globalFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)realloc(data, 100*sizeof(int64_t));
data = (int64_t *)realloc(data, 100*sizeof(int64_t))
data
data
(int64_t *)realloc(data, 100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, 100*sizeof(int64_t))
realloc
realloc
data
data
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(15,18,0)
(16,20,0)
(16,11,0)
(15,36,0)
(19,35,0)
(36,29,0)
(17,12,0)
(21,37,0)
(16,36,0)
(22,29,0)
(32,28,0)
(11,16,0)
(36,16,0)
(32,24,0)
(37,20,0)
(7,31,0)
(0,18,0)
(1,29,0)
(20,16,0)
(14,24,0)
(24,32,0)
(6,23,0)
(3,25,0)
(25,20,0)
(18,15,0)
(2,12,0)
(20,31,0)
(9,36,0)
(26,23,0)
(30,31,0)
(36,15,0)
(13,20,0)
(33,23,0)
(21,31,0)
(34,25,0)
(37,21,0)
(27,35,0)
(4,37,0)
(10,15,0)
(8,37,0)
(29,23,0)
(18,0,1)
(4,30,1)
(14,25,1)
(20,16,1)
(5,35,1)
(21,37,1)
(35,27,1)
(30,25,1)
(25,20,1)
(24,14,1)
(27,19,1)
(19,21,1)
(12,17,1)
(16,36,1)
(37,8,1)
(1,22,1)
(36,29,1)
(15,18,1)
(3,20,1)
(36,15,1)
(10,9,1)
(29,1,1)
(37,20,1)
(30,32,1)
(8,4,1)
(32,24,1)
(0,10,1)
(2,29,1)
(19,12,1)
(17,2,1)
(34,3,1)
(16,11,1)
(25,34,1)
(9,13,1)
(13,12,1)
(24,25,2)
(32,24,2)
(25,12,2)
(8,12,2)
(36,15,2)
(16,12,2)
(18,12,2)
(20,12,2)
(37,20,2)
(30,12,2)
(13,12,2)
(14,25,2)
(36,12,2)
(20,16,2)
(21,37,2)
(0,12,2)
(16,11,2)
(21,12,2)
(32,25,2)
(9,12,2)
(16,36,2)
(37,12,2)
(34,12,2)
(4,12,2)
(25,20,2)
(36,29,2)
(10,12,2)
(15,12,2)
(3,12,2)
(15,18,2)
-----------------------------------
(0,int64_t)
(1,NULL)
(2,globalFive)
(3,data)
(4,data)
(5,RET)
(6,if(globalFive==5)
(7,if (data == NULL)
(8,0)
(9,data)
(10,100)
(11,int64_t *)
(12,globalFive==5)
(13,data)
(14,1)
(15,100*sizeof(int64_t)
(16,(int64_t *)
(17,5)
(18,sizeof(int64_t)
(19,globalFive)
(20,data = (int64_t *)
(21,printLongLongLine(data[0])
(22,data)
(23,)
(24,-1)
(25,data == NULL)
(26,data)
(27,5)
(28,)
(29,data = NULL)
(30,L)
(31,)
(32,exit(-1)
(33,if(globalFive==5)
(34,NULL)
(35,globalFive==5)
(36,realloc(data, 100*sizeof(int64_t)
(37,data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
