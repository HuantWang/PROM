-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_calloc_34_bad()
{
    int64_t * data;
    CWE401_Memory_Leak__int64_t_calloc_34_unionType myUnion;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)calloc(100, sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    myUnion.unionFirst = data;
    {
        int64_t * data = myUnion.unionSecond;
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
35,38
36,37
39,40
40,41
40,42
41,42
44,45
44,46
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
59,60
59,61
60,61
64,65
65,66
65,67
66,67
68,69
68,70
69,70
72,73
73,74
73,75
74,75
74,76
75,76
78,79
80,81
80,82
81,82
82,83
82,84
83,84
85,86
85,87
85,88
88,89
89,90
89,91
90,91
-----nextToken-----
2,4,9,11,12,16,18,22,24,28,32,34,37,38,42,43,47,49,54,56,61,62,63,67,70,71,76,77,79,84,86,87,91,92,93
-----computeFrom-----
20,21
20,22
26,27
26,28
45,46
45,47
58,59
58,60
73,74
73,75
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_calloc_34_bad(){    int64_t * data;    CWE401_Memory_Leak__int64_t_calloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    myUnion.unionFirst = data;    {        int64_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_calloc_34_bad()
CWE401_Memory_Leak__int64_t_calloc_34_bad
{    int64_t * data;    CWE401_Memory_Leak__int64_t_calloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    myUnion.unionFirst = data;    {        int64_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
CWE401_Memory_Leak__int64_t_calloc_34_unionType myUnion;
CWE401_Memory_Leak__int64_t_calloc_34_unionType myUnion;
CWE401_Memory_Leak__int64_t_calloc_34_unionType
CWE401_Memory_Leak__int64_t_calloc_34_unionType
myUnion
myUnion
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)calloc(100, sizeof(int64_t));
data = (int64_t *)calloc(100, sizeof(int64_t))
data
data
(int64_t *)calloc(100, sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
calloc(100, sizeof(int64_t))
calloc
calloc
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int64_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
int64_t * data = myUnion.unionSecond;
int64_t * data = myUnion.unionSecond;
int64_t
int64_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
;
-----joern-----
(11,15,0)
(8,37,0)
(1,25,0)
(14,6,0)
(31,15,0)
(32,21,0)
(23,18,0)
(35,15,0)
(33,9,0)
(10,15,0)
(17,7,0)
(3,21,0)
(39,16,0)
(6,15,0)
(13,15,0)
(20,9,0)
(22,39,0)
(7,18,0)
(36,32,0)
(2,7,0)
(40,28,0)
(28,11,0)
(26,25,0)
(21,15,0)
(12,23,0)
(32,9,0)
(17,15,0)
(25,26,0)
(27,37,0)
(18,7,0)
(24,17,0)
(4,6,0)
(38,18,0)
(7,17,0)
(9,32,0)
(25,17,0)
(7,2,0)
(16,34,0)
(26,15,0)
(16,39,0)
(37,17,0)
(29,25,0)
(18,23,0)
(5,11,0)
(0,28,0)
(11,17,0)
(39,22,1)
(17,7,1)
(37,8,1)
(11,5,1)
(38,24,1)
(32,9,1)
(4,14,1)
(11,17,1)
(37,17,1)
(26,25,1)
(10,16,1)
(0,26,1)
(25,17,1)
(12,38,1)
(20,33,1)
(28,40,1)
(5,28,1)
(16,39,1)
(27,17,1)
(7,2,1)
(1,29,1)
(8,27,1)
(18,23,1)
(33,36,1)
(29,10,1)
(19,32,1)
(23,12,1)
(9,20,1)
(7,18,1)
(36,11,1)
(10,37,1)
(40,0,1)
(25,1,1)
(6,4,1)
(22,37,1)
(24,6,1)
(7,2,2)
(39,37,2)
(16,37,2)
(32,9,2)
(17,7,2)
(26,25,2)
(22,37,2)
(18,23,2)
(16,39,2)
(7,18,2)
(25,17,2)
(37,17,2)
(11,17,2)
-----------------------------------
(0,myUnion)
(1,0)
(2,int64_t *)
(3,data)
(4,NULL)
(5,data)
(6,data = NULL)
(7,(int64_t *)
(8,NULL)
(9,myUnion.unionSecond)
(10,L)
(11,myUnion.unionFirst = data)
(12,int64_t)
(13,data)
(14,data)
(15,)
(16,exit(-1)
(17,data = (int64_t *)
(18,calloc(100, sizeof(int64_t)
(19,RET)
(20,unionSecond)
(21,)
(22,1)
(23,sizeof(int64_t)
(24,data)
(25,data[0])
(26,printLongLongLine(data[0])
(27,data)
(28,myUnion.unionFirst)
(29,data)
(30, sizeof(int64_t)
(31,myUnion)
(32,* data = myUnion.unionSecond)
(33,myUnion)
(34,)
(35,if (data == NULL)
(36,data)
(37,data == NULL)
(38,100)
(39,-1)
(40,unionFirst)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
