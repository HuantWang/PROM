-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_calloc_21_bad()
{
    int * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int *)calloc(100, sizeof(int));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
31,32
32,33
32,34
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
50,52
51,52
55,56
56,57
56,58
57,58
59,60
59,61
60,61
63,64
64,65
64,66
65,66
68,69
69,70
69,71
70,71
72,73
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,30,33,34,38,40,45,47,52,53,54,58,61,62,66,67,71,73
-----computeFrom-----
13,14
13,15
19,20
19,21
36,37
36,38
49,50
49,51
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__int_calloc_21_bad(){    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)calloc(100, sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__int_calloc_21_bad()
CWE401_Memory_Leak__int_calloc_21_bad
{    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)calloc(100, sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    badStatic = 1; /* true */    badSink(data);}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)calloc(100, sizeof(int));
data = (int *)calloc(100, sizeof(int))
data
data
(int *)calloc(100, sizeof(int))
int *
int
*
*
calloc(100, sizeof(int))
calloc
calloc
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(35,11,0)
(34,2,0)
(30,35,0)
(12,33,0)
(36,1,0)
(8,1,0)
(32,25,0)
(24,16,0)
(35,17,0)
(2,9,0)
(8,17,0)
(19,1,0)
(17,12,0)
(25,17,0)
(3,6,0)
(4,24,0)
(7,19,0)
(33,12,0)
(29,16,0)
(13,1,0)
(35,19,0)
(10,19,0)
(28,6,0)
(15,34,0)
(20,7,0)
(24,12,0)
(21,17,0)
(23,14,0)
(16,24,0)
(12,17,0)
(31,8,0)
(5,25,0)
(14,1,0)
(12,24,0)
(6,1,0)
(17,1,0)
(11,35,0)
(26,35,0)
(22,7,0)
(27,14,0)
(7,17,0)
(11,1,0)
(2,34,0)
(31,14,1)
(20,25,1)
(19,10,1)
(11,35,1)
(7,17,1)
(8,17,1)
(24,16,1)
(5,32,1)
(35,17,1)
(3,28,1)
(25,5,1)
(35,19,1)
(17,12,1)
(2,34,1)
(34,15,1)
(29,4,1)
(21,6,1)
(32,17,1)
(20,2,1)
(30,26,1)
(18,8,1)
(14,23,1)
(27,11,1)
(12,33,1)
(15,25,1)
(8,31,1)
(10,7,1)
(22,20,1)
(35,30,1)
(25,17,1)
(12,24,1)
(4,21,1)
(23,27,1)
(16,29,1)
(26,19,1)
(6,3,1)
(7,22,1)
(35,19,2)
(7,17,2)
(15,25,2)
(2,25,2)
(34,25,2)
(35,17,2)
(11,35,2)
(12,33,2)
(2,34,2)
(25,17,2)
(12,24,2)
(8,17,2)
(24,16,2)
(17,12,2)
-----------------------------------
(0, sizeof(int)
(1,)
(2,exit(-1)
(3,NULL)
(4,100)
(5,NULL)
(6,data = NULL)
(7,data[0])
(8,badSink(data)
(9,)
(10,5)
(11,printIntLine(data[0])
(12,(int *)
(13,if (data == NULL)
(14,badStatic = 1)
(15,1)
(16,sizeof(int)
(17,data = (int *)
(18,RET)
(19,data[0] = 5)
(20,data)
(21,data)
(22,0)
(23,1)
(24,calloc(100, sizeof(int)
(25,data == NULL)
(26,data)
(27,badStatic)
(28,data)
(29,int)
(30,0)
(31,data)
(32,data)
(33,int *)
(34,-1)
(35,data[0])
(36,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
