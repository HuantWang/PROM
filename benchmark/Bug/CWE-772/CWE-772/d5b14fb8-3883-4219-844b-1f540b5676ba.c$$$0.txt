-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_calloc_21_bad()
{
    twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
33,34
34,35
34,36
35,36
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
53,55
54,55
54,56
55,56
60,61
61,62
61,63
62,63
62,64
63,64
63,65
64,65
69,70
70,71
70,72
71,72
73,74
74,75
74,76
75,76
78,79
79,80
79,81
80,81
83,84
84,85
84,86
85,86
87,88
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,32,36,37,41,43,48,50,56,57,58,59,65,66,67,68,72,76,77,81,82,86,88
-----computeFrom-----
14,15
14,16
20,21
20,22
39,40
39,41
52,53
52,54
61,62
61,63
79,80
79,81
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_calloc_21_bad(){    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__twoIntsStruct_calloc_21_bad()
CWE401_Memory_Leak__twoIntsStruct_calloc_21_bad
{    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    badStatic = 1; /* true */    badSink(data);}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));
data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)calloc(100, sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
calloc(100, sizeof(twoIntsStruct))
calloc
calloc
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(4,19,0)
(32,38,0)
(43,4,0)
(32,46,0)
(45,25,0)
(19,42,0)
(13,0,0)
(10,18,0)
(5,18,0)
(25,45,0)
(11,18,0)
(22,26,0)
(2,42,0)
(3,30,0)
(33,11,0)
(38,19,0)
(27,25,0)
(30,18,0)
(45,19,0)
(42,2,0)
(44,24,0)
(23,17,0)
(38,32,0)
(37,29,0)
(25,30,0)
(19,18,0)
(16,19,0)
(7,0,0)
(12,37,0)
(41,9,0)
(26,22,0)
(36,12,0)
(17,26,0)
(0,18,0)
(34,42,0)
(1,32,0)
(14,2,0)
(6,46,0)
(26,17,0)
(21,4,0)
(40,45,0)
(24,19,0)
(20,38,0)
(17,19,0)
(8,45,0)
(22,18,0)
(39,17,0)
(9,2,0)
(2,9,0)
(15,11,0)
(37,12,0)
(28,38,0)
(42,34,0)
(24,18,0)
(46,18,0)
(42,19,0)
(45,19,1)
(46,6,1)
(26,17,1)
(11,15,1)
(8,37,1)
(2,9,1)
(21,43,1)
(33,22,1)
(12,36,1)
(15,33,1)
(31,24,1)
(14,16,1)
(7,13,1)
(32,38,1)
(16,0,1)
(36,4,1)
(4,21,1)
(32,1,1)
(22,26,1)
(17,19,1)
(4,19,1)
(39,23,1)
(42,34,1)
(8,4,1)
(44,11,1)
(23,46,1)
(30,3,1)
(37,12,1)
(42,2,1)
(6,32,1)
(41,14,1)
(9,41,1)
(3,25,1)
(24,44,1)
(25,45,1)
(43,19,1)
(19,42,1)
(28,30,1)
(24,19,1)
(1,38,1)
(17,39,1)
(20,28,1)
(40,8,1)
(38,20,1)
(45,40,1)
(25,27,1)
(38,19,1)
(27,45,1)
(0,7,1)
(12,4,2)
(17,19,2)
(24,19,2)
(22,26,2)
(32,38,2)
(19,42,2)
(2,9,2)
(38,19,2)
(42,2,2)
(42,34,2)
(36,4,2)
(4,19,2)
(45,19,2)
(37,4,2)
(25,45,2)
(26,17,2)
(37,12,2)
-----------------------------------
(0,data = NULL)
(1,intTwo)
(2,calloc(100, sizeof(twoIntsStruct)
(3,0)
(4,data == NULL)
(5,data)
(6,0)
(7,NULL)
(8,data)
(9,sizeof(twoIntsStruct)
(10,if (data == NULL)
(11,badStatic = 1)
(12,-1)
(13,data)
(14,100)
(15,1)
(16,data)
(17,data[0])
(18,)
(19,data = (twoIntsStruct *)
(20,0)
(21,NULL)
(22,printStructLine(&data[0])
(23,data)
(24,badSink(data)
(25,data[0].intOne)
(26,&data[0])
(27,intOne)
(28,data)
(29,)
(30,data[0].intOne = 0)
(31,RET)
(32,data[0].intTwo)
(33,badStatic)
(34,twoIntsStruct *)
(35, sizeof(twoIntsStruct)
(36,1)
(37,exit(-1)
(38,data[0])
(39,0)
(40,0)
(41,twoIntsStruct)
(42,(twoIntsStruct *)
(43,data)
(44,data)
(45,data[0])
(46,data[0].intTwo = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
