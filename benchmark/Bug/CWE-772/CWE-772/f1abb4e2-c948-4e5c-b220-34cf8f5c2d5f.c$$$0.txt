-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_32_bad()
{
    twoIntsStruct * data;
    twoIntsStruct * *dataPtr1 = &data;
    twoIntsStruct * *dataPtr2 = &data;
    data = NULL;
    {
        twoIntsStruct * data = *dataPtr1;
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0].intOne = 0;
        data[0].intTwo = 0;
        printStructLine(&data[0]);
        *dataPtr1 = data;
    }
    {
        twoIntsStruct * data = *dataPtr2;
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
17,19
17,20
17,21
21,22
22,23
23,24
25,26
26,27
26,28
27,28
29,30
29,31
29,32
29,33
33,34
34,35
35,36
37,38
38,39
38,40
39,40
41,42
43,44
43,45
43,46
43,47
43,48
43,49
43,50
44,45
45,46
45,47
46,47
48,49
48,50
48,51
51,52
52,53
53,54
55,56
56,57
56,58
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
65,67
65,68
66,67
68,69
70,71
70,72
72,73
73,74
73,75
74,75
77,78
77,79
78,79
78,80
79,80
81,82
83,84
84,85
85,86
85,87
86,87
88,89
90,91
91,92
91,93
92,93
92,94
93,94
93,95
94,95
99,100
100,101
100,102
101,102
101,103
102,103
102,104
103,104
108,109
109,110
109,111
110,111
112,113
113,114
113,115
114,115
117,118
118,119
118,120
119,120
120,121
122,123
124,125
124,126
125,126
126,127
126,128
127,128
129,130
129,131
129,132
132,133
133,134
134,135
-----nextToken-----
2,4,9,11,12,16,18,19,20,24,28,30,31,32,36,40,42,47,49,50,54,58,62,64,67,69,71,75,76,80,82,87,89,95,96,97,98,104,105,106,107,111,115,116,121,123,128,130,131,135,136
-----computeFrom-----
38,39
38,40
56,57
56,58
70,71
70,72
78,79
78,80
91,92
91,93
100,101
100,102
118,119
118,120
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_32_bad(){    twoIntsStruct * data;    twoIntsStruct * *dataPtr1 = &data;    twoIntsStruct * *dataPtr2 = &data;    data = NULL;    {        twoIntsStruct * data = *dataPtr1;        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);        *dataPtr1 = data;    }    {        twoIntsStruct * data = *dataPtr2;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__twoIntsStruct_realloc_32_bad()
CWE401_Memory_Leak__twoIntsStruct_realloc_32_bad
{    twoIntsStruct * data;    twoIntsStruct * *dataPtr1 = &data;    twoIntsStruct * *dataPtr2 = &data;    data = NULL;    {        twoIntsStruct * data = *dataPtr1;        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);        *dataPtr1 = data;    }    {        twoIntsStruct * data = *dataPtr2;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
twoIntsStruct * *dataPtr1 = &data;
twoIntsStruct * *dataPtr1 = &data;
twoIntsStruct
twoIntsStruct
* *dataPtr1 = &data
*
*
dataPtr1
= &data
&data
data
data
twoIntsStruct * *dataPtr2 = &data;
twoIntsStruct * *dataPtr2 = &data;
twoIntsStruct
twoIntsStruct
* *dataPtr2 = &data
*
*
dataPtr2
= &data
&data
data
data
data = NULL;
data = NULL
data
data
NULL
NULL
{        twoIntsStruct * data = *dataPtr1;        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);        *dataPtr1 = data;    }
twoIntsStruct * data = *dataPtr1;
twoIntsStruct * data = *dataPtr1;
twoIntsStruct
twoIntsStruct
* data = *dataPtr1
*
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        twoIntsStruct * data = *dataPtr2;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
twoIntsStruct * data = *dataPtr2;
twoIntsStruct * data = *dataPtr2;
twoIntsStruct
twoIntsStruct
* data = *dataPtr2
*
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
;
-----joern-----
(4,28,0)
(22,51,0)
(5,29,0)
(15,67,0)
(35,6,0)
(32,56,0)
(44,27,0)
(52,14,0)
(29,7,0)
(68,62,0)
(14,67,0)
(1,2,0)
(6,35,0)
(56,23,0)
(3,68,0)
(17,41,0)
(68,20,0)
(29,5,0)
(25,32,0)
(12,67,0)
(35,7,0)
(42,29,0)
(61,14,0)
(28,37,0)
(55,52,0)
(14,52,0)
(49,66,0)
(45,23,0)
(64,67,0)
(66,11,0)
(58,23,0)
(6,30,0)
(11,66,0)
(62,24,0)
(20,68,0)
(68,3,0)
(21,29,0)
(10,37,0)
(38,64,0)
(63,65,0)
(46,56,0)
(7,20,0)
(5,45,0)
(62,23,0)
(7,23,0)
(65,3,0)
(13,30,0)
(9,34,0)
(51,64,0)
(43,23,0)
(59,6,0)
(24,62,0)
(36,27,0)
(33,57,0)
(23,67,0)
(50,62,0)
(53,2,0)
(19,11,0)
(20,0,0)
(24,14,0)
(18,3,0)
(57,26,0)
(51,28,0)
(0,20,0)
(60,7,0)
(3,65,0)
(45,5,0)
(37,67,0)
(39,68,0)
(47,35,0)
(2,7,0)
(11,7,0)
(66,41,0)
(30,23,0)
(37,34,0)
(32,14,0)
(26,57,0)
(20,7,0)
(27,67,0)
(26,48,0)
(41,23,0)
(28,51,0)
(34,37,0)
(56,7,0)
(16,67,0)
(8,24,0)
(31,11,0)
(54,35,0)
(47,41,1)
(66,49,1)
(27,44,1)
(6,35,1)
(7,20,1)
(33,2,1)
(40,51,1)
(65,63,1)
(63,18,1)
(37,34,1)
(14,52,1)
(28,4,1)
(49,11,1)
(25,45,1)
(31,19,1)
(24,14,1)
(2,7,1)
(21,30,1)
(22,56,1)
(53,7,1)
(18,39,1)
(55,61,1)
(19,26,1)
(29,42,1)
(32,25,1)
(68,3,1)
(56,46,1)
(1,53,1)
(60,62,1)
(26,57,1)
(11,31,1)
(35,7,1)
(46,32,1)
(68,62,1)
(6,59,1)
(54,47,1)
(19,2,1)
(59,35,1)
(51,28,1)
(45,5,1)
(4,22,1)
(11,7,1)
(56,7,1)
(52,55,1)
(2,1,1)
(57,33,1)
(8,50,1)
(28,37,1)
(17,66,1)
(10,14,1)
(62,24,1)
(20,0,1)
(36,37,1)
(39,60,1)
(13,6,1)
(44,36,1)
(41,17,1)
(3,65,1)
(66,11,1)
(30,13,1)
(35,54,1)
(5,29,1)
(50,27,1)
(42,21,1)
(29,7,1)
(32,14,1)
(24,8,1)
(9,10,1)
(34,9,1)
(20,68,1)
(62,24,2)
(14,52,2)
(26,57,2)
(66,11,2)
(57,2,2)
(20,68,2)
(2,7,2)
(20,0,2)
(32,14,2)
(35,7,2)
(68,62,2)
(28,37,2)
(24,14,2)
(51,28,2)
(29,7,2)
(68,3,2)
(7,20,2)
(37,34,2)
(11,7,2)
(26,2,2)
(5,29,2)
(3,65,2)
(33,2,2)
(45,5,2)
(6,35,2)
(56,7,2)
-----------------------------------
(0,twoIntsStruct *)
(1,NULL)
(2,data == NULL)
(3,100*sizeof(twoIntsStruct)
(4,dataPtr2)
(5,&data[0])
(6,data[0].intTwo)
(7,data = (twoIntsStruct *)
(8,dataPtr1)
(9,data)
(10,dataPtr2)
(11,data[0])
(12,dataPtr2)
(13,0)
(14,* *dataPtr1 = &data)
(15,data)
(16,dataPtr1)
(17,0)
(18,100)
(19,data)
(20,(twoIntsStruct *)
(21,data)
(22,data)
(23,)
(24,*dataPtr1)
(25,dataPtr1)
(26,exit(-1)
(27,data = NULL)
(28,*dataPtr2)
(29,data[0])
(30,data[0].intTwo = 0)
(31,0)
(32,*dataPtr1)
(33,1)
(34,&data)
(35,data[0])
(36,data)
(37,* *dataPtr2 = &data)
(38,data)
(39,data)
(40,RET)
(41,data[0].intOne = 0)
(42,0)
(43,if (data == NULL)
(44,NULL)
(45,printStructLine(&data[0])
(46,data)
(47,data)
(48,)
(49,intOne)
(50,data)
(51,* data = *dataPtr2)
(52,&data)
(53,data)
(54,0)
(55,data)
(56,*dataPtr1 = data)
(57,-1)
(58,data)
(59,intTwo)
(60,data)
(61,dataPtr1)
(62,* data = *dataPtr1)
(63,twoIntsStruct)
(64,)
(65,sizeof(twoIntsStruct)
(66,data[0].intOne)
(67,)
(68,realloc(data, 100*sizeof(twoIntsStruct)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
