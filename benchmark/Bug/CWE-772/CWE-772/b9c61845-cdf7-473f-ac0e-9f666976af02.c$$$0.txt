-----label-----
1
-----code-----
void CWE401_Memory_Leak__wchar_t_calloc_21_bad()
{
    wchar_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)calloc(100, sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
31,32
32,33
32,34
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
49,52
50,51
52,53
55,56
56,57
56,58
57,58
59,60
61,62
62,63
62,64
63,64
66,67
67,68
67,69
68,69
70,71
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,30,33,34,38,40,45,47,51,53,54,58,60,64,65,69,71
-----computeFrom-----
13,14
13,15
19,20
19,21
36,37
36,38
62,63
62,64
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__wchar_t_calloc_21_bad(){    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)calloc(100, sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__wchar_t_calloc_21_bad()
CWE401_Memory_Leak__wchar_t_calloc_21_bad
{    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)calloc(100, sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    badStatic = 1; /* true */    badSink(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)calloc(100, sizeof(wchar_t));
data = (wchar_t *)calloc(100, sizeof(wchar_t))
data
data
(wchar_t *)calloc(100, sizeof(wchar_t))
wchar_t *
wchar_t
*
*
calloc(100, sizeof(wchar_t))
calloc
calloc
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(16,26,0)
(2,11,0)
(28,19,0)
(8,26,0)
(18,7,0)
(26,10,0)
(9,5,0)
(10,26,0)
(27,10,0)
(15,0,0)
(4,25,0)
(24,8,0)
(25,10,0)
(29,18,0)
(11,10,0)
(8,24,0)
(14,0,0)
(22,1,0)
(25,1,0)
(7,3,0)
(12,8,0)
(21,5,0)
(11,1,0)
(6,24,0)
(10,1,0)
(26,8,0)
(19,1,0)
(7,18,0)
(0,10,0)
(17,19,0)
(5,1,0)
(13,1,0)
(26,16,0)
(26,8,1)
(2,7,1)
(8,24,1)
(11,10,1)
(24,6,1)
(17,28,1)
(7,18,1)
(26,16,1)
(6,12,1)
(20,25,1)
(0,10,1)
(5,21,1)
(18,29,1)
(15,14,1)
(19,17,1)
(11,2,1)
(29,0,1)
(9,11,1)
(25,4,1)
(14,10,1)
(12,27,1)
(27,19,1)
(0,15,1)
(4,5,1)
(25,10,1)
(2,0,1)
(21,9,1)
(10,26,1)
(7,0,2)
(18,0,2)
(7,18,2)
(11,10,2)
(8,24,2)
(0,10,2)
(26,8,2)
(25,10,2)
(26,16,2)
(29,0,2)
(10,26,2)
-----------------------------------
(0,data == NULL)
(1,)
(2,data)
(3,)
(4,data)
(5,badStatic = 1)
(6,wchar_t)
(7,exit(-1)
(8,calloc(100, sizeof(wchar_t)
(9,badStatic)
(10,data = (wchar_t *)
(11,printWLine(data)
(12,100)
(13,if (data == NULL)
(14,data)
(15,NULL)
(16,wchar_t *)
(17,NULL)
(18,-1)
(19,data = NULL)
(20,RET)
(21,1)
(22,data)
(23, sizeof(wchar_t)
(24,sizeof(wchar_t)
(25,badSink(data)
(26,(wchar_t *)
(27,data)
(28,data)
(29,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
