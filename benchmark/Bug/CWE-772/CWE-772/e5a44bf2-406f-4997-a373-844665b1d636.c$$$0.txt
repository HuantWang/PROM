-----label-----
1
-----code-----
struct _twoIntsStruct * CWE401_Memory_Leak__struct_twoIntsStruct_calloc_61b_badSource(struct _twoIntsStruct * data)
{

    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}

    /* Initialize and make use of data */

    data[0].intOne = 0;
    data[0].intTwo = 0;

    printStructLine((twoIntsStruct *)&data[0]);

    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
13,19
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
24,27
25,26
28,29
29,30
29,31
30,31
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
48,50
49,50
49,51
50,51
55,56
56,57
56,58
57,58
57,59
58,59
58,60
59,60
64,65
65,66
65,67
66,67
68,69
68,70
69,70
69,71
70,71
72,73
74,75
75,76
75,77
76,77
79,80
80,81
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,27,31,32,36,38,43,45,51,52,53,54,60,61,62,63,67,71,73,77,78,81
-----computeFrom-----
15,16
15,17
34,35
34,36
47,48
47,49
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;ElaboratedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
struct _twoIntsStruct * CWE401_Memory_Leak__struct_twoIntsStruct_calloc_61b_badSource(struct _twoIntsStruct * data){    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    return data;}
struct _twoIntsStruct
_twoIntsStruct
* CWE401_Memory_Leak__struct_twoIntsStruct_calloc_61b_badSource(struct _twoIntsStruct * data)
*
CWE401_Memory_Leak__struct_twoIntsStruct_calloc_61b_badSource
struct _twoIntsStruct * data
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
{    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    return data;}
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
calloc(100, sizeof(struct _twoIntsStruct))
calloc
calloc
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
return data;
data
data
-----joern-----
(6,37,0)
(4,34,0)
(19,21,0)
(37,18,0)
(37,6,0)
(21,19,0)
(8,6,0)
(1,28,0)
(12,22,0)
(26,31,0)
(7,10,0)
(38,12,0)
(19,0,0)
(30,7,0)
(27,21,0)
(35,2,0)
(36,2,0)
(31,41,0)
(34,42,0)
(3,31,0)
(28,10,0)
(16,28,0)
(14,22,0)
(2,36,0)
(31,26,0)
(28,0,0)
(32,34,0)
(12,0,0)
(7,0,0)
(12,10,0)
(19,10,0)
(33,12,0)
(13,42,0)
(20,7,0)
(15,42,0)
(40,18,0)
(36,17,0)
(11,37,0)
(18,37,0)
(34,10,0)
(41,7,0)
(31,3,0)
(0,42,0)
(29,0,0)
(6,0,0)
(9,15,0)
(34,0,0)
(0,6,0)
(0,10,0)
(18,40,0)
(7,41,0)
(23,25,0)
(25,42,0)
(6,8,0)
(26,42,0)
(21,15,0)
(41,31,0)
(39,19,0)
(22,25,0)
(22,12,0)
(5,19,0)
(33,36,1)
(7,10,1)
(31,41,1)
(7,0,1)
(12,38,1)
(21,27,1)
(41,7,1)
(19,0,1)
(20,30,1)
(19,10,1)
(18,11,1)
(30,15,1)
(19,39,1)
(22,12,1)
(12,0,1)
(36,2,1)
(35,28,1)
(9,21,1)
(21,19,1)
(15,9,1)
(27,19,1)
(28,1,1)
(6,8,1)
(22,14,1)
(34,0,1)
(14,12,1)
(5,25,1)
(6,37,1)
(31,3,1)
(34,32,1)
(0,10,1)
(39,5,1)
(7,20,1)
(28,10,1)
(11,29,1)
(1,16,1)
(0,6,1)
(38,33,1)
(25,23,1)
(16,0,1)
(4,34,1)
(28,0,1)
(33,28,1)
(2,35,1)
(34,10,1)
(32,26,1)
(37,18,1)
(26,31,1)
(23,22,1)
(12,10,1)
(18,40,1)
(28,10,2)
(18,40,2)
(26,31,2)
(37,18,2)
(7,0,2)
(34,0,2)
(31,41,2)
(19,10,2)
(0,6,2)
(4,34,2)
(19,0,2)
(35,28,2)
(7,10,2)
(31,3,2)
(36,28,2)
(0,10,2)
(21,19,2)
(12,10,2)
(2,28,2)
(22,12,2)
(34,10,2)
(6,37,2)
(28,0,2)
(41,7,2)
(36,2,2)
(6,8,2)
(12,0,2)
-----------------------------------
(0,data = (struct _twoIntsStruct *)
(1,NULL)
(2,-1)
(3,twoIntsStruct *)
(4,RET)
(5,data)
(6,(struct _twoIntsStruct *)
(7,data[0])
(8,struct _twoIntsStruct *)
(9,0)
(10,struct _twoIntsStruct * data)
(11,100)
(12,data[0])
(13,if (data == NULL)
(14,intOne)
(15,data[0].intTwo = 0)
(16,data)
(17,)
(18,sizeof(struct _twoIntsStruct)
(19,data[0])
(20,0)
(21,data[0].intTwo)
(22,data[0].intOne)
(23,0)
(24, sizeof(struct _twoIntsStruct)
(25,data[0].intOne = 0)
(26,printStructLine((twoIntsStruct *)
(27,intTwo)
(28,data == NULL)
(29,data)
(30,data)
(31,(twoIntsStruct *)
(32,data)
(33,data)
(34,return data;)
(35,1)
(36,exit(-1)
(37,calloc(100, sizeof(struct _twoIntsStruct)
(38,0)
(39,0)
(40,struct _twoIntsStruct)
(41,&data[0])
(42,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
