-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_01_bad()
{
    twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
32,33
34,35
34,36
36,37
37,38
37,39
38,39
41,42
41,43
42,43
42,44
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
54,55
55,56
55,57
56,57
56,58
57,58
57,59
58,59
63,64
64,65
64,66
65,66
65,67
66,67
66,68
67,68
72,73
73,74
73,75
74,75
76,77
77,78
77,79
78,79
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,35,39,40,44,46,51,53,59,60,61,62,68,69,70,71,75,79,80,81
-----computeFrom-----
14,15
14,16
20,21
20,22
34,35
34,36
42,43
42,44
55,56
55,57
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_01_bad(){    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__twoIntsStruct_realloc_01_bad()
CWE401_Memory_Leak__twoIntsStruct_realloc_01_bad
{    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
;
-----joern-----
(22,14,0)
(27,24,0)
(39,14,0)
(19,3,0)
(4,1,0)
(41,31,0)
(22,25,0)
(31,41,0)
(30,19,0)
(3,19,0)
(35,34,0)
(12,38,0)
(14,41,0)
(16,11,0)
(3,8,0)
(42,1,0)
(34,35,0)
(14,22,0)
(17,42,0)
(10,33,0)
(18,35,0)
(37,34,0)
(41,9,0)
(25,22,0)
(32,33,0)
(20,32,0)
(11,9,0)
(7,22,0)
(9,33,0)
(42,38,0)
(13,33,0)
(2,32,0)
(34,21,0)
(36,24,0)
(38,42,0)
(24,9,0)
(40,9,0)
(21,33,0)
(6,11,0)
(38,9,0)
(14,32,0)
(1,33,0)
(10,15,0)
(26,35,0)
(29,21,0)
(41,14,0)
(9,41,0)
(0,25,0)
(15,24,0)
(35,9,0)
(15,10,0)
(24,15,0)
(5,38,0)
(23,33,0)
(34,37,1)
(12,21,1)
(22,25,1)
(39,40,1)
(36,27,1)
(28,10,1)
(21,29,1)
(4,42,1)
(38,5,1)
(1,4,1)
(25,0,1)
(34,35,1)
(19,30,1)
(26,18,1)
(11,9,1)
(35,9,1)
(24,36,1)
(40,32,1)
(6,16,1)
(27,1,1)
(20,2,1)
(10,15,1)
(32,20,1)
(16,9,1)
(37,35,1)
(41,14,1)
(35,26,1)
(14,32,1)
(38,9,1)
(9,41,1)
(29,34,1)
(18,3,1)
(30,11,1)
(5,12,1)
(42,38,1)
(17,38,1)
(0,7,1)
(14,22,1)
(41,31,1)
(18,11,1)
(7,39,1)
(15,24,1)
(42,17,1)
(3,19,1)
(11,6,1)
(24,9,1)
(41,14,2)
(19,11,2)
(14,32,2)
(9,41,2)
(38,9,2)
(24,9,2)
(14,22,2)
(35,9,2)
(30,11,2)
(3,19,2)
(11,9,2)
(3,11,2)
(15,24,2)
(10,15,2)
(22,25,2)
(42,38,2)
(41,31,2)
(34,35,2)
-----------------------------------
(0,twoIntsStruct)
(1,data[0].intTwo = 0)
(2,data)
(3,exit(-1)
(4,0)
(5,0)
(6,NULL)
(7,100)
(8,)
(9,data = (twoIntsStruct *)
(10,printStructLine(&data[0])
(11,data == NULL)
(12,data)
(13,data)
(14,realloc(data, 100*sizeof(twoIntsStruct)
(15,&data[0])
(16,data)
(17,intTwo)
(18,data)
(19,-1)
(20,NULL)
(21,data[0].intOne = 0)
(22,100*sizeof(twoIntsStruct)
(23,if (data == NULL)
(24,data[0])
(25,sizeof(twoIntsStruct)
(26,0)
(27,data)
(28,RET)
(29,0)
(30,1)
(31,twoIntsStruct *)
(32,data = NULL)
(33,)
(34,data[0].intOne)
(35,data[0])
(36,0)
(37,intOne)
(38,data[0])
(39,data)
(40,data)
(41,(twoIntsStruct *)
(42,data[0].intTwo)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
