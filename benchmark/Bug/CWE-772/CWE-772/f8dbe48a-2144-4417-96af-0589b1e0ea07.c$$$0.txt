-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_realloc_11_bad()
{
    int64_t * data;
    data = NULL;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)realloc(data, 100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
21,22
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
37,38
39,40
39,41
41,42
42,43
42,44
43,44
46,47
46,48
47,48
47,49
48,49
50,51
52,53
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
61,62
61,63
62,63
66,67
67,68
67,69
68,69
70,71
70,72
71,72
74,75
74,76
75,76
76,77
78,79
-----nextToken-----
2,4,9,11,12,16,18,22,27,31,33,36,38,40,44,45,49,51,56,58,63,64,65,69,72,73,77,79
-----computeFrom-----
14,15
14,16
25,26
25,27
39,40
39,41
47,48
47,49
60,61
60,62
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_realloc_11_bad(){    int64_t * data;    data = NULL;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_realloc_11_bad()
CWE401_Memory_Leak__int64_t_realloc_11_bad
{    int64_t * data;    data = NULL;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)realloc(data, 100*sizeof(int64_t));
data = (int64_t *)realloc(data, 100*sizeof(int64_t))
data
data
(int64_t *)realloc(data, 100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, 100*sizeof(int64_t))
realloc
realloc
data
data
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(30,1,0)
(24,0,0)
(28,27,0)
(27,15,0)
(11,5,0)
(16,31,0)
(5,22,0)
(31,19,0)
(26,24,0)
(1,22,0)
(8,22,0)
(22,3,0)
(0,31,0)
(25,31,0)
(33,3,0)
(0,27,0)
(24,26,0)
(15,27,0)
(5,11,0)
(29,17,0)
(18,1,0)
(4,17,0)
(22,24,0)
(10,3,0)
(20,15,0)
(17,4,0)
(0,24,0)
(24,22,0)
(2,19,0)
(11,3,0)
(7,19,0)
(14,0,0)
(21,5,0)
(4,23,0)
(13,19,0)
(6,5,0)
(27,0,0)
(14,8,1)
(1,22,1)
(9,12,1)
(18,30,1)
(29,1,1)
(32,31,1)
(12,11,1)
(28,14,1)
(0,27,1)
(24,26,1)
(5,6,1)
(6,21,1)
(27,15,1)
(17,29,1)
(15,20,1)
(5,22,1)
(8,32,1)
(10,1,1)
(10,4,1)
(12,32,1)
(16,25,1)
(24,0,1)
(1,18,1)
(21,10,1)
(30,22,1)
(4,17,1)
(22,24,1)
(0,31,1)
(31,16,1)
(11,5,1)
(20,28,1)
(30,32,2)
(27,15,2)
(29,1,2)
(24,32,2)
(0,27,2)
(11,32,2)
(14,32,2)
(15,32,2)
(4,1,2)
(24,0,2)
(1,32,2)
(28,32,2)
(1,22,2)
(24,26,2)
(6,32,2)
(22,32,2)
(22,24,2)
(27,32,2)
(4,17,2)
(10,32,2)
(20,32,2)
(17,1,2)
(18,32,2)
(0,31,2)
(5,32,2)
(11,5,2)
(0,32,2)
(5,22,2)
(21,32,2)
(8,32,2)
-----------------------------------
(0,realloc(data, 100*sizeof(int64_t)
(1,data == NULL)
(2,if(globalReturnsTrue()
(3,)
(4,exit(-1)
(5,data[0])
(6,0)
(7,data)
(8,data)
(9,RET)
(10,L)
(11,printLongLongLine(data[0])
(12,globalReturnsTrue()
(13,if(globalReturnsTrue()
(14,data)
(15,sizeof(int64_t)
(16,NULL)
(17,-1)
(18,NULL)
(19,)
(20,int64_t)
(21,data)
(22,data = (int64_t *)
(23,)
(24,(int64_t *)
(25,data)
(26,int64_t *)
(27,100*sizeof(int64_t)
(28,100)
(29,1)
(30,data)
(31,data = NULL)
(32,globalReturnsTrue()
(33,if (data == NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
