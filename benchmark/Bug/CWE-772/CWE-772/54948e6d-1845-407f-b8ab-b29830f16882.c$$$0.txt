-----label-----
1
-----code-----
void CWE401_Memory_Leak__wchar_t_calloc_18_bad()
{
    wchar_t * data;
    data = NULL;
    goto source;
source:
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)calloc(100, sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
20,21
20,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
29,30
31,32
31,33
31,34
32,33
35,36
36,37
36,38
39,40
39,41
40,41
40,42
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
53,56
54,55
56,57
59,60
60,61
60,62
61,62
63,64
65,66
67,68
67,69
-----nextToken-----
2,4,8,10,11,15,17,19,21,25,28,30,33,34,37,38,42,44,49,51,55,57,58,62,64,66,68,69
-----computeFrom-----
13,14
13,15
23,24
23,25
40,41
40,42
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__wchar_t_calloc_18_bad(){    wchar_t * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)calloc(100, sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__wchar_t_calloc_18_bad()
CWE401_Memory_Leak__wchar_t_calloc_18_bad
{    wchar_t * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)calloc(100, sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)calloc(100, sizeof(wchar_t));
source
data = (wchar_t *)calloc(100, sizeof(wchar_t));
data = (wchar_t *)calloc(100, sizeof(wchar_t))
data
data
(wchar_t *)calloc(100, sizeof(wchar_t))
wchar_t *
wchar_t
*
*
calloc(100, sizeof(wchar_t))
calloc
calloc
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(25,16,0)
(10,5,0)
(11,7,0)
(18,5,0)
(16,7,0)
(0,5,0)
(15,5,0)
(26,20,0)
(20,5,0)
(16,15,0)
(12,15,0)
(17,20,0)
(9,19,0)
(14,5,0)
(8,7,0)
(22,8,0)
(27,12,0)
(9,28,0)
(1,5,0)
(13,28,0)
(24,5,0)
(7,16,0)
(15,16,0)
(0,15,0)
(23,5,0)
(28,9,0)
(4,12,0)
(16,25,0)
(7,8,0)
(3,0,0)
(2,15,0)
(26,17,1)
(24,20,1)
(14,0,1)
(2,24,1)
(0,15,1)
(13,12,1)
(6,14,1)
(9,28,1)
(28,13,1)
(7,8,1)
(11,2,1)
(16,25,1)
(3,12,1)
(20,26,1)
(15,16,1)
(12,4,1)
(8,22,1)
(4,27,1)
(0,3,1)
(22,11,1)
(3,9,1)
(16,7,1)
(12,15,1)
(27,15,1)
(9,28,2)
(16,7,2)
(28,12,2)
(16,25,2)
(12,15,2)
(7,8,2)
(13,12,2)
(9,12,2)
(0,15,2)
(15,16,2)
-----------------------------------
(0,printWLine(data)
(1,source:)
(2,data)
(3,data)
(4,NULL)
(5,)
(6,RET)
(7,calloc(100, sizeof(wchar_t)
(8,sizeof(wchar_t)
(9,exit(-1)
(10,sink:)
(11,100)
(12,data == NULL)
(13,1)
(14,goto sink;)
(15,data = (wchar_t *)
(16,(wchar_t *)
(17,data)
(18,data)
(19,)
(20,data = NULL)
(21, sizeof(wchar_t)
(22,wchar_t)
(23,if (data == NULL)
(24,goto source;)
(25,wchar_t *)
(26,NULL)
(27,data)
(28,-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
