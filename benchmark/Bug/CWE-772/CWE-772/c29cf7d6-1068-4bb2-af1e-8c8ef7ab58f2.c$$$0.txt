-----label-----
1
-----code-----
twoIntsStruct * CWE401_Memory_Leak__twoIntsStruct_calloc_61b_badSource(twoIntsStruct * data)
{
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
13,19
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
24,27
25,26
28,29
29,30
29,31
30,31
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
48,50
49,50
49,51
50,51
55,56
56,57
56,58
57,58
57,59
58,59
58,60
59,60
64,65
65,66
65,67
66,67
68,69
69,70
69,71
70,71
73,74
74,75
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,27,31,32,36,38,43,45,51,52,53,54,60,61,62,63,67,71,72,75
-----computeFrom-----
15,16
15,17
34,35
34,36
47,48
47,49
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
twoIntsStruct * CWE401_Memory_Leak__twoIntsStruct_calloc_61b_badSource(twoIntsStruct * data){    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    return data;}
twoIntsStruct
twoIntsStruct
* CWE401_Memory_Leak__twoIntsStruct_calloc_61b_badSource(twoIntsStruct * data)
*
CWE401_Memory_Leak__twoIntsStruct_calloc_61b_badSource
twoIntsStruct * data
twoIntsStruct
twoIntsStruct
* data
*
data
{    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    return data;}
data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));
data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)calloc(100, sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
calloc(100, sizeof(twoIntsStruct))
calloc
calloc
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
return data;
data
data
-----joern-----
(27,2,0)
(25,2,0)
(13,35,0)
(7,21,0)
(29,23,0)
(33,4,0)
(33,2,0)
(9,20,0)
(6,7,0)
(3,20,0)
(25,21,0)
(7,23,0)
(8,36,0)
(21,40,0)
(21,35,0)
(16,25,0)
(20,3,0)
(23,7,0)
(32,27,0)
(3,19,0)
(25,40,0)
(20,21,0)
(36,11,0)
(17,5,0)
(7,2,0)
(18,27,0)
(28,40,0)
(39,28,0)
(11,36,0)
(10,33,0)
(33,21,0)
(24,21,0)
(23,29,0)
(21,2,0)
(15,11,0)
(29,40,0)
(12,20,0)
(34,33,0)
(35,21,0)
(35,11,0)
(14,40,0)
(4,33,0)
(0,25,0)
(4,28,0)
(35,13,0)
(22,19,0)
(38,7,0)
(30,17,0)
(11,35,0)
(37,30,0)
(31,3,0)
(17,30,0)
(1,4,0)
(20,2,0)
(27,21,0)
(19,40,0)
(23,7,1)
(34,19,1)
(25,16,1)
(16,29,1)
(33,10,1)
(4,1,1)
(9,17,1)
(33,2,1)
(6,38,1)
(25,2,1)
(28,39,1)
(27,21,1)
(20,12,1)
(21,2,1)
(27,32,1)
(21,35,1)
(31,20,1)
(7,6,1)
(19,22,1)
(1,33,1)
(10,34,1)
(3,20,1)
(7,2,1)
(3,31,1)
(36,8,1)
(8,15,1)
(30,37,1)
(17,30,1)
(20,2,1)
(33,21,1)
(15,24,1)
(38,28,1)
(9,27,1)
(32,18,1)
(0,25,1)
(18,21,1)
(37,27,1)
(35,11,1)
(29,23,1)
(39,4,1)
(7,21,1)
(11,36,1)
(35,13,1)
(22,3,1)
(27,2,1)
(20,21,1)
(25,21,1)
(12,9,1)
(4,33,1)
(37,27,2)
(4,33,2)
(11,36,2)
(29,23,2)
(25,2,2)
(21,35,2)
(17,27,2)
(21,2,2)
(30,27,2)
(20,2,2)
(23,7,2)
(3,20,2)
(17,30,2)
(27,2,2)
(25,21,2)
(33,2,2)
(7,21,2)
(7,2,2)
(35,13,2)
(35,11,2)
(27,21,2)
(20,21,2)
(0,25,2)
(33,21,2)
-----------------------------------
(0,RET)
(1,intTwo)
(2,twoIntsStruct * data)
(3,data[0].intOne)
(4,data[0].intTwo)
(5,)
(6,0)
(7,data[0])
(8,twoIntsStruct)
(9,data)
(10,0)
(11,calloc(100, sizeof(twoIntsStruct)
(12,0)
(13,twoIntsStruct *)
(14,if (data == NULL)
(15,100)
(16,data)
(17,exit(-1)
(18,data)
(19,data[0].intOne = 0)
(20,data[0])
(21,data = (twoIntsStruct *)
(22,0)
(23,&data[0])
(24,data)
(25,return data;)
(26, sizeof(twoIntsStruct)
(27,data == NULL)
(28,data[0].intTwo = 0)
(29,printStructLine(&data[0])
(30,-1)
(31,intOne)
(32,NULL)
(33,data[0])
(34,data)
(35,(twoIntsStruct *)
(36,sizeof(twoIntsStruct)
(37,1)
(38,data)
(39,0)
(40,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
