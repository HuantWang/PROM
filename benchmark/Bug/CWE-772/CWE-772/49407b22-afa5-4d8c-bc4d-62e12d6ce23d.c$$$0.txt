-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_malloc_21_bad()
{
    int * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int *)malloc(100*sizeof(int));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
51,53
52,53
56,57
57,58
57,59
58,59
60,61
60,62
61,62
64,65
65,66
65,67
66,67
69,70
70,71
70,72
71,72
73,74
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,39,41,46,48,53,54,55,59,62,63,67,68,72,74
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
37,38
37,39
50,51
50,52
65,66
65,67
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__int_malloc_21_bad(){    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)malloc(100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__int_malloc_21_bad()
CWE401_Memory_Leak__int_malloc_21_bad
{    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)malloc(100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    badStatic = 1; /* true */    badSink(data);}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)malloc(100*sizeof(int));
data = (int *)malloc(100*sizeof(int))
data
data
(int *)malloc(100*sizeof(int))
int *
int
*
*
malloc(100*sizeof(int))
malloc
malloc
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(22,7,0)
(7,2,0)
(5,7,0)
(10,21,0)
(35,10,0)
(29,27,0)
(28,30,0)
(2,34,0)
(36,21,0)
(23,21,0)
(34,2,0)
(17,20,0)
(2,7,0)
(20,30,0)
(32,20,0)
(27,21,0)
(7,22,0)
(14,3,0)
(20,3,0)
(26,27,0)
(19,25,0)
(16,4,0)
(13,25,0)
(34,33,0)
(25,30,0)
(10,30,0)
(25,3,0)
(34,30,0)
(33,34,0)
(0,36,0)
(11,21,0)
(9,22,0)
(15,8,0)
(23,25,0)
(25,23,0)
(31,36,0)
(6,4,0)
(3,21,0)
(30,21,0)
(15,12,0)
(12,15,0)
(24,21,0)
(18,12,0)
(4,30,0)
(30,34,0)
(13,3,1)
(31,0,1)
(3,14,1)
(9,5,1)
(17,4,1)
(20,32,1)
(34,2,1)
(20,30,1)
(12,18,1)
(4,16,1)
(6,30,1)
(1,10,1)
(7,22,1)
(4,30,1)
(22,9,1)
(10,30,1)
(25,19,1)
(23,25,1)
(32,17,1)
(16,6,1)
(5,28,1)
(15,12,1)
(0,23,1)
(30,34,1)
(18,4,1)
(14,20,1)
(27,29,1)
(35,36,1)
(28,27,1)
(29,26,1)
(25,30,1)
(2,7,1)
(36,31,1)
(34,33,1)
(10,35,1)
(25,3,1)
(17,15,1)
(19,13,1)
(34,2,2)
(15,4,2)
(30,34,2)
(25,3,2)
(4,30,2)
(2,7,2)
(23,25,2)
(20,30,2)
(15,12,2)
(12,4,2)
(7,22,2)
(10,30,2)
(34,33,2)
(18,4,2)
(25,30,2)
-----------------------------------
(0,badStatic)
(1,RET)
(2,malloc(100*sizeof(int)
(3,data[0] = 5)
(4,data == NULL)
(5,100)
(6,data)
(7,100*sizeof(int)
(8,)
(9,int)
(10,badSink(data)
(11,data)
(12,-1)
(13,data)
(14,5)
(15,exit(-1)
(16,NULL)
(17,data)
(18,1)
(19,0)
(20,data[0])
(21,)
(22,sizeof(int)
(23,printIntLine(data[0])
(24,if (data == NULL)
(25,data[0])
(26,data)
(27,data = NULL)
(28,data)
(29,NULL)
(30,data = (int *)
(31,1)
(32,0)
(33,int *)
(34,(int *)
(35,data)
(36,badStatic = 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
