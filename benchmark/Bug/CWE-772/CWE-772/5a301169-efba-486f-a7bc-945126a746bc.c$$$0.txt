-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_08_bad()
{
    if(staticReturnsTrue())
    {
        {
            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            data[0] = 5LL;
            printLongLongLine(data[0]);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                data[0] = 10LL;
                printLongLongLine(data[0]);
                free(data);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
8,9
10,11
11,12
11,13
11,14
11,15
11,16
11,17
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
20,22
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
29,31
31,32
32,33
32,34
33,34
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
51,53
52,53
56,57
57,58
57,59
58,59
60,61
60,62
61,62
64,65
65,66
65,67
66,67
68,69
68,70
69,70
69,71
70,71
72,73
74,75
74,76
74,77
75,76
77,78
79,80
79,81
80,81
82,83
83,84
83,85
84,85
87,88
87,89
88,89
88,90
89,90
91,92
93,94
93,95
93,96
94,95
95,96
95,97
96,97
96,98
97,98
101,102
102,103
102,104
103,104
105,106
105,107
106,107
109,110
110,111
110,112
111,112
113,114
-----nextToken-----
2,4,9,15,17,18,23,25,28,30,34,35,39,41,46,48,53,54,55,59,62,63,67,71,73,76,78,81,85,86,90,92,98,99,100,104,107,108,112,114
-----computeFrom-----
29,30
29,31
37,38
37,39
50,51
50,52
65,66
65,67
79,80
79,81
88,89
88,90
95,96
95,97
-----guardedBy-----
90,114
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_08_bad(){    if(staticReturnsTrue())    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }}
void
CWE401_Memory_Leak__malloc_realloc_int64_t_08_bad()
CWE401_Memory_Leak__malloc_realloc_int64_t_08_bad
{    if(staticReturnsTrue())    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }}
if(staticReturnsTrue())    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }
{            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t
int64_t
* data = (int64_t *)malloc(100*sizeof(int64_t))
*
data
= (int64_t *)malloc(100*sizeof(int64_t))
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t))
data
data
(int64_t *)realloc(data, (130000)*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, (130000)*sizeof(int64_t))
realloc
realloc
data
data
(130000)*sizeof(int64_t)
(130000)
130000
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }
data[0] = 10LL;
data[0] = 10LL
data[0]
data
data
0
10LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(45,27,0)
(44,34,0)
(4,30,0)
(31,5,0)
(43,27,0)
(33,43,0)
(34,43,0)
(29,39,0)
(6,0,0)
(49,38,0)
(3,43,0)
(8,26,0)
(49,40,0)
(11,27,0)
(16,39,0)
(27,23,0)
(43,33,0)
(40,49,0)
(46,30,0)
(48,34,0)
(47,6,0)
(48,27,0)
(2,5,0)
(41,38,0)
(24,42,0)
(38,9,0)
(6,47,0)
(19,47,0)
(1,9,0)
(39,11,0)
(10,9,0)
(9,38,0)
(30,46,0)
(29,18,0)
(34,48,0)
(50,34,0)
(21,33,0)
(14,27,0)
(26,18,0)
(17,27,0)
(39,29,0)
(33,21,0)
(38,49,0)
(7,27,0)
(25,46,0)
(37,32,0)
(20,18,0)
(5,11,0)
(22,42,0)
(25,33,0)
(12,46,0)
(46,25,0)
(33,25,0)
(38,43,0)
(9,10,0)
(28,10,0)
(11,49,0)
(42,43,0)
(49,11,0)
(13,11,0)
(26,11,0)
(36,39,0)
(41,13,1)
(22,43,1)
(26,11,1)
(30,4,1)
(3,35,1)
(1,41,1)
(46,30,1)
(11,49,1)
(38,9,1)
(31,11,1)
(15,26,1)
(38,43,1)
(14,6,1)
(39,16,1)
(49,38,1)
(24,22,1)
(9,10,1)
(48,34,1)
(33,21,1)
(29,39,1)
(28,1,1)
(4,12,1)
(20,5,1)
(42,24,1)
(44,50,1)
(26,8,1)
(49,40,1)
(16,36,1)
(5,11,1)
(42,43,1)
(6,47,1)
(8,29,1)
(15,35,1)
(12,3,1)
(34,43,1)
(15,5,1)
(5,2,1)
(50,14,1)
(2,31,1)
(36,20,1)
(14,42,1)
(34,44,1)
(43,33,1)
(39,11,1)
(13,48,1)
(47,19,1)
(25,46,1)
(19,42,1)
(10,28,1)
(33,25,1)
(30,35,2)
(31,35,2)
(14,35,2)
(49,40,2)
(44,35,2)
(33,35,2)
(46,30,2)
(33,21,2)
(9,35,2)
(12,35,2)
(28,35,2)
(49,35,2)
(25,35,2)
(42,43,2)
(38,9,2)
(1,35,2)
(20,5,2)
(43,33,2)
(47,42,2)
(11,35,2)
(34,43,2)
(39,11,2)
(26,11,2)
(5,35,2)
(6,42,2)
(29,39,2)
(39,5,2)
(9,10,2)
(42,35,2)
(48,35,2)
(24,35,2)
(29,5,2)
(26,5,2)
(36,5,2)
(49,38,2)
(22,35,2)
(43,35,2)
(10,35,2)
(50,35,2)
(5,11,2)
(2,35,2)
(38,43,2)
(4,35,2)
(46,35,2)
(3,35,2)
(38,35,2)
(13,35,2)
(48,34,2)
(41,35,2)
(8,5,2)
(19,42,2)
(6,47,2)
(11,49,2)
(25,46,2)
(33,25,2)
(16,5,2)
(34,35,2)
-----------------------------------
(0,)
(1,130000)
(2,NULL)
(3,data)
(4,int64_t)
(5,data != NULL)
(6,exit(-1)
(7,data)
(8,data)
(9,(130000)
(10,sizeof(int64_t)
(11,data = (int64_t *)
(12,100)
(13,data)
(14,L)
(15,RET)
(16,0)
(17,if (data == NULL)
(18,)
(19,1)
(20,L)
(21,int64_t *)
(22,data)
(23,)
(24,NULL)
(25,malloc(100*sizeof(int64_t)
(26,free(data)
(27,)
(28,int64_t)
(29,printLongLongLine(data[0])
(30,sizeof(int64_t)
(31,data)
(32,)
(33,(int64_t *)
(34,data[0])
(35,staticReturnsTrue()
(36,data)
(37,if(staticReturnsTrue()
(38,realloc(data, (130000)
(39,data[0])
(40,int64_t *)
(41,data)
(42,data == NULL)
(43,* data = (int64_t *)
(44,0)
(45,if (data != NULL)
(46,100*sizeof(int64_t)
(47,-1)
(48,printLongLongLine(data[0])
(49,(int64_t *)
(50,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
