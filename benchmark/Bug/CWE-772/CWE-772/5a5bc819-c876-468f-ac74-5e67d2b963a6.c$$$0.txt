-----label-----
1
-----code-----
int64_t * CWE401_Memory_Leak__int64_t_malloc_61b_badSource(int64_t * data)
{
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)malloc(100*sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
31,32
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
49,51
50,51
54,55
55,56
55,57
56,57
58,59
58,60
59,60
62,63
63,64
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,28,32,33,37,39,44,46,51,52,53,57,60,61,64
-----computeFrom-----
15,16
15,17
27,28
27,29
35,36
35,37
48,49
48,50
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
int64_t * CWE401_Memory_Leak__int64_t_malloc_61b_badSource(int64_t * data){    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)malloc(100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    return data;}
int64_t
int64_t
* CWE401_Memory_Leak__int64_t_malloc_61b_badSource(int64_t * data)
*
CWE401_Memory_Leak__int64_t_malloc_61b_badSource
int64_t * data
int64_t
int64_t
* data
*
data
{    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)malloc(100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    return data;}
data = (int64_t *)malloc(100*sizeof(int64_t));
data = (int64_t *)malloc(100*sizeof(int64_t))
data
data
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
return data;
data
data
-----joern-----
(4,12,0)
(9,19,0)
(7,19,0)
(10,21,0)
(9,8,0)
(14,22,0)
(22,6,0)
(15,20,0)
(22,14,0)
(3,14,0)
(20,21,0)
(23,21,0)
(23,20,0)
(25,8,0)
(11,6,0)
(14,21,0)
(13,2,0)
(10,20,0)
(18,23,0)
(0,8,0)
(16,0,0)
(5,14,0)
(20,6,0)
(8,9,0)
(20,19,0)
(26,10,0)
(24,6,0)
(1,23,0)
(14,20,0)
(19,9,0)
(10,6,0)
(19,20,0)
(17,10,0)
(13,12,0)
(19,7,0)
(8,0,0)
(12,13,0)
(26,22,1)
(18,1,1)
(4,23,1)
(14,20,1)
(14,21,1)
(23,18,1)
(22,14,1)
(8,0,1)
(3,5,1)
(20,19,1)
(17,10,1)
(0,16,1)
(10,21,1)
(23,21,1)
(10,26,1)
(9,8,1)
(25,15,1)
(19,9,1)
(20,21,1)
(19,7,1)
(14,3,1)
(1,20,1)
(10,20,1)
(23,20,1)
(13,12,1)
(16,25,1)
(11,23,1)
(5,11,1)
(11,13,1)
(12,4,1)
(8,0,2)
(20,21,2)
(9,8,2)
(10,20,2)
(14,20,2)
(19,9,2)
(20,19,2)
(13,12,2)
(4,23,2)
(12,23,2)
(10,21,2)
(22,14,2)
(23,20,2)
(23,21,2)
(13,23,2)
(14,21,2)
(17,10,2)
(19,7,2)
-----------------------------------
(0,sizeof(int64_t)
(1,data)
(2,)
(3,0)
(4,1)
(5,data)
(6,)
(7,int64_t *)
(8,100*sizeof(int64_t)
(9,malloc(100*sizeof(int64_t)
(10,return data;)
(11,L)
(12,-1)
(13,exit(-1)
(14,data[0])
(15,data)
(16,int64_t)
(17,RET)
(18,NULL)
(19,(int64_t *)
(20,data = (int64_t *)
(21,int64_t * data)
(22,printLongLongLine(data[0])
(23,data == NULL)
(24,if (data == NULL)
(25,100)
(26,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
