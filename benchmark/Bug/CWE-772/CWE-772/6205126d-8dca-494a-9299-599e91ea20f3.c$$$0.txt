-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_calloc_41_bad()
{
    int * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int *)calloc(100, sizeof(int));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
31,32
32,33
32,34
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
50,52
51,52
55,56
56,57
56,58
57,58
59,60
59,61
60,61
63,64
64,65
64,66
65,66
67,68
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,30,33,34,38,40,45,47,52,53,54,58,61,62,66,68
-----computeFrom-----
13,14
13,15
19,20
19,21
36,37
36,38
49,50
49,51
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__int_calloc_41_bad(){    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)calloc(100, sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    badSink(data);}
void
CWE401_Memory_Leak__int_calloc_41_bad()
CWE401_Memory_Leak__int_calloc_41_bad
{    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)calloc(100, sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    badSink(data);}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)calloc(100, sizeof(int));
data = (int *)calloc(100, sizeof(int))
data
data
(int *)calloc(100, sizeof(int))
int *
int
*
*
calloc(100, sizeof(int))
calloc
calloc
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(15,18,0)
(4,22,0)
(31,10,0)
(16,10,0)
(28,33,0)
(18,7,0)
(13,15,0)
(25,29,0)
(26,25,0)
(17,22,0)
(20,2,0)
(20,31,0)
(9,24,0)
(27,29,0)
(22,10,0)
(10,29,0)
(10,31,0)
(14,31,0)
(33,28,0)
(2,20,0)
(1,28,0)
(3,29,0)
(32,29,0)
(30,3,0)
(21,20,0)
(5,16,0)
(31,20,0)
(33,29,0)
(24,10,0)
(19,2,0)
(8,3,0)
(28,10,0)
(28,25,0)
(16,29,0)
(12,28,0)
(18,15,0)
(31,14,0)
(24,25,0)
(6,10,0)
(23,24,0)
(23,22,1)
(18,15,1)
(13,22,1)
(16,5,1)
(11,16,1)
(17,4,1)
(28,12,1)
(31,20,1)
(15,13,1)
(16,10,1)
(5,33,1)
(28,25,1)
(25,26,1)
(1,25,1)
(30,8,1)
(23,18,1)
(33,28,1)
(24,9,1)
(9,23,1)
(22,17,1)
(31,14,1)
(24,10,1)
(21,6,1)
(20,2,1)
(28,10,1)
(3,30,1)
(4,10,1)
(6,3,1)
(26,24,1)
(22,10,1)
(10,31,1)
(19,21,1)
(12,1,1)
(2,19,1)
(18,15,2)
(10,31,2)
(16,10,2)
(31,20,2)
(13,22,2)
(28,10,2)
(15,22,2)
(20,2,2)
(33,28,2)
(24,10,2)
(22,10,2)
(31,14,2)
(28,25,2)
(18,22,2)
-----------------------------------
(0, sizeof(int)
(1,data)
(2,sizeof(int)
(3,data = NULL)
(4,data)
(5,data)
(6,data)
(7,)
(8,data)
(9,0)
(10,data = (int *)
(11,RET)
(12,0)
(13,1)
(14,int *)
(15,-1)
(16,badSink(data)
(17,NULL)
(18,exit(-1)
(19,int)
(20,calloc(100, sizeof(int)
(21,100)
(22,data == NULL)
(23,data)
(24,data[0])
(25,data[0] = 5)
(26,5)
(27,if (data == NULL)
(28,data[0])
(29,)
(30,NULL)
(31,(int *)
(32,data)
(33,printIntLine(data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
