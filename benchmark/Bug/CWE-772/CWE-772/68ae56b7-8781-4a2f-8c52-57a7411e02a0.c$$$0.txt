-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_07_bad()
{
    twoIntsStruct * data;
    data = NULL;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0].intOne = 0;
        data[0].intTwo = 0;
        printStructLine(&data[0]);
    }
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
24,28
24,29
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
35,38
36,37
38,39
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
62,63
62,64
63,64
63,65
64,65
69,70
70,71
70,72
71,72
71,73
72,73
72,74
73,74
78,79
79,80
79,81
80,81
82,83
83,84
83,85
84,85
87,88
87,89
88,89
88,90
89,90
92,93
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,39,41,45,46,50,52,57,59,65,66,67,68,74,75,76,77,81,85,86,90,91,93
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
40,41
40,42
48,49
48,50
61,62
61,63
70,71
70,72
88,89
88,90
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_07_bad(){    twoIntsStruct * data;    data = NULL;    if(staticFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }    if(staticFive==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__twoIntsStruct_realloc_07_bad()
CWE401_Memory_Leak__twoIntsStruct_realloc_07_bad
{    twoIntsStruct * data;    data = NULL;    if(staticFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }    if(staticFive==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(staticFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(9,39,0)
(36,20,0)
(0,38,0)
(28,1,0)
(48,2,0)
(21,23,0)
(15,17,0)
(46,38,0)
(7,19,0)
(18,23,0)
(17,47,0)
(33,18,0)
(19,0,0)
(44,0,0)
(25,44,0)
(47,17,0)
(41,0,0)
(27,46,0)
(20,0,0)
(4,42,0)
(37,9,0)
(26,1,0)
(12,18,0)
(16,19,0)
(35,16,0)
(0,19,0)
(50,30,0)
(34,6,0)
(27,20,0)
(5,44,0)
(18,0,0)
(13,8,0)
(23,18,0)
(2,30,0)
(46,27,0)
(10,3,0)
(24,38,0)
(39,14,0)
(11,47,0)
(16,30,0)
(16,3,0)
(22,20,0)
(17,6,0)
(30,16,0)
(30,2,0)
(43,32,0)
(49,32,0)
(19,7,0)
(47,0,0)
(6,38,0)
(8,38,0)
(39,9,0)
(19,16,0)
(23,8,0)
(31,42,0)
(20,27,0)
(29,1,0)
(3,1,0)
(51,47,0)
(40,3,0)
(44,25,1)
(32,49,1)
(33,12,1)
(12,6,1)
(11,51,1)
(4,31,1)
(15,47,1)
(41,42,1)
(8,13,1)
(20,0,1)
(0,19,1)
(5,0,1)
(49,43,1)
(36,22,1)
(31,3,1)
(37,44,1)
(39,9,1)
(10,40,1)
(18,0,1)
(13,23,1)
(47,0,1)
(47,11,1)
(51,39,1)
(45,32,1)
(43,42,1)
(22,8,1)
(19,16,1)
(18,33,1)
(21,18,1)
(44,0,1)
(17,47,1)
(42,4,1)
(23,21,1)
(17,15,1)
(25,5,1)
(34,17,1)
(43,46,1)
(23,18,1)
(30,2,1)
(16,3,1)
(51,44,1)
(19,7,1)
(20,36,1)
(46,27,1)
(9,37,1)
(2,48,1)
(50,35,1)
(6,34,1)
(48,50,1)
(27,20,1)
(3,10,1)
(35,41,1)
(16,30,1)
(17,47,2)
(20,0,2)
(12,42,2)
(23,42,2)
(21,42,2)
(18,0,2)
(44,42,2)
(33,42,2)
(47,0,2)
(19,16,2)
(27,20,2)
(37,44,2)
(35,42,2)
(25,42,2)
(22,42,2)
(11,42,2)
(13,42,2)
(36,42,2)
(41,42,2)
(16,42,2)
(0,19,2)
(2,42,2)
(18,42,2)
(50,42,2)
(46,42,2)
(8,42,2)
(34,42,2)
(19,42,2)
(16,30,2)
(46,27,2)
(39,44,2)
(47,42,2)
(19,7,2)
(30,42,2)
(44,0,2)
(39,9,2)
(9,44,2)
(17,42,2)
(16,3,2)
(5,42,2)
(27,42,2)
(48,42,2)
(23,18,2)
(0,42,2)
(20,42,2)
(30,2,2)
(15,42,2)
(51,42,2)
(6,42,2)
-----------------------------------
(0,data = (twoIntsStruct *)
(1,)
(2,sizeof(twoIntsStruct)
(3,data = NULL)
(4,5)
(5,data)
(6,data[0].intOne = 0)
(7,twoIntsStruct *)
(8,data[0].intTwo = 0)
(9,-1)
(10,NULL)
(11,0)
(12,data)
(13,0)
(14,)
(15,intOne)
(16,realloc(data, 100*sizeof(twoIntsStruct)
(17,data[0].intOne)
(18,data[0])
(19,(twoIntsStruct *)
(20,data[0])
(21,intTwo)
(22,data)
(23,data[0].intTwo)
(24,if (data == NULL)
(25,NULL)
(26,data)
(27,&data[0])
(28,if(staticFive==5)
(29,if(staticFive==5)
(30,100*sizeof(twoIntsStruct)
(31,staticFive)
(32,staticFive==5)
(33,0)
(34,0)
(35,data)
(36,0)
(37,1)
(38,)
(39,exit(-1)
(40,data)
(41,data)
(42,staticFive==5)
(43,staticFive)
(44,data == NULL)
(45,RET)
(46,printStructLine(&data[0])
(47,data[0])
(48,twoIntsStruct)
(49,5)
(50,100)
(51,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
