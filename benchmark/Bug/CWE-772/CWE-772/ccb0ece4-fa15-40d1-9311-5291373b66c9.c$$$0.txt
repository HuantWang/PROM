-----label-----
1
-----code-----
void CWE401_Memory_Leak__strdup_char_21_bad()
{
    char * data;
    data = NULL;
    {
        char myString[] = "myString";
        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */
        data = strdup(myString);
        /* Use data */
        printLine(data);
    }
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
18,21
19,20
20,21
20,22
22,23
22,24
22,25
25,26
27,28
28,29
28,30
29,30
31,32
31,33
32,33
34,35
36,37
37,38
37,39
38,39
40,41
42,43
43,44
43,45
44,45
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,11,15,17,21,23,24,26,30,33,35,39,41,45,46,50,52
-----computeFrom-----
13,14
13,15
28,29
28,30
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__strdup_char_21_bad(){    char * data;    data = NULL;    {        char myString[] = "myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = strdup(myString);        /* Use data */        printLine(data);    }    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__strdup_char_21_bad()
CWE401_Memory_Leak__strdup_char_21_bad
{    char * data;    data = NULL;    {        char myString[] = "myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = strdup(myString);        /* Use data */        printLine(data);    }    badStatic = 1; /* true */    badSink(data);}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
{        char myString[] = "myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = strdup(myString);        /* Use data */        printLine(data);    }
char myString[] = "myString";
char myString[] = "myString";
char
myString[] = "myString"
myString
[]
= "myString"
"myString"
data = strdup(myString);
data = strdup(myString)
data
data
strdup(myString)
strdup
strdup
myString
myString
printLine(data);
printLine(data)
printLine
printLine
data
data
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(17,4,0)
(7,0,0)
(0,14,0)
(13,11,0)
(4,11,0)
(1,0,0)
(3,6,0)
(20,2,0)
(9,12,0)
(6,11,0)
(12,0,0)
(6,14,0)
(16,21,0)
(7,11,0)
(15,14,0)
(4,12,0)
(11,0,0)
(10,2,0)
(21,14,0)
(8,21,0)
(18,7,0)
(5,12,0)
(11,4,0)
(2,14,0)
(7,11,1)
(18,11,1)
(19,6,1)
(12,9,1)
(4,17,1)
(8,7,1)
(13,12,1)
(3,21,1)
(7,18,1)
(11,4,1)
(6,11,1)
(9,5,1)
(21,16,1)
(6,3,1)
(16,8,1)
(2,20,1)
(4,12,1)
(20,10,1)
(17,13,1)
(5,2,1)
(6,11,2)
(7,11,2)
(4,12,2)
(11,4,2)
-----------------------------------
(0,)
(1,myString)
(2,data = NULL)
(3,data)
(4,strdup(myString)
(5,myString)
(6,badSink(data)
(7,printLine(data)
(8,badStatic)
(9,"myString")
(10,data)
(11,data = strdup(myString)
(12,myString[] = "myString")
(13,data)
(14,)
(15,data)
(16,1)
(17,myString)
(18,data)
(19,RET)
(20,NULL)
(21,badStatic = 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
