-----label-----
1
-----code-----
struct _twoIntsStruct * CWE401_Memory_Leak__struct_twoIntsStruct_malloc_61b_badSource(struct _twoIntsStruct * data)
{

    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}

    /* Initialize and make use of data */

    data[0].intOne = 0;
    data[0].intTwo = 0;

    printStructLine((twoIntsStruct *)&data[0]);

    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
13,19
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
31,32
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
49,51
50,51
50,52
51,52
56,57
57,58
57,59
58,59
58,60
59,60
59,61
60,61
65,66
66,67
66,68
67,68
69,70
69,71
70,71
70,72
71,72
73,74
75,76
76,77
76,78
77,78
80,81
81,82
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,28,32,33,37,39,44,46,52,53,54,55,61,62,63,64,68,72,74,78,79,82
-----computeFrom-----
15,16
15,17
27,28
27,29
35,36
35,37
48,49
48,50
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;ElaboratedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
struct _twoIntsStruct * CWE401_Memory_Leak__struct_twoIntsStruct_malloc_61b_badSource(struct _twoIntsStruct * data){    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    return data;}
struct _twoIntsStruct
_twoIntsStruct
* CWE401_Memory_Leak__struct_twoIntsStruct_malloc_61b_badSource(struct _twoIntsStruct * data)
*
CWE401_Memory_Leak__struct_twoIntsStruct_malloc_61b_badSource
struct _twoIntsStruct * data
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
{    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    return data;}
data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
malloc(100*sizeof(struct _twoIntsStruct))
malloc
malloc
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
return data;
data
data
-----joern-----
(32,19,0)
(38,6,0)
(31,38,0)
(6,22,0)
(21,38,0)
(34,29,0)
(15,19,0)
(1,15,0)
(39,16,0)
(7,41,0)
(6,38,0)
(33,23,0)
(3,15,0)
(35,13,0)
(36,34,0)
(41,19,0)
(17,3,0)
(0,11,0)
(27,9,0)
(19,29,0)
(42,11,0)
(20,26,0)
(40,16,0)
(8,6,0)
(32,29,0)
(17,20,0)
(16,39,0)
(5,9,0)
(9,5,0)
(13,23,0)
(42,32,0)
(10,41,0)
(11,0,0)
(12,32,0)
(4,17,0)
(32,42,0)
(16,29,0)
(5,14,0)
(26,20,0)
(15,1,0)
(30,34,0)
(3,17,0)
(19,15,0)
(19,23,0)
(34,23,0)
(41,29,0)
(25,19,0)
(15,3,0)
(38,19,0)
(34,19,0)
(38,29,0)
(20,17,0)
(16,19,0)
(22,23,0)
(11,42,0)
(39,13,0)
(24,32,0)
(18,22,0)
(2,39,0)
(28,11,0)
(37,16,0)
(0,23,0)
(11,28,0)
(42,32,1)
(32,19,1)
(2,16,1)
(7,19,1)
(8,38,1)
(27,41,1)
(30,0,1)
(32,29,1)
(22,18,1)
(41,19,1)
(32,24,1)
(12,13,1)
(9,27,1)
(31,5,1)
(15,3,1)
(41,10,1)
(13,35,1)
(16,40,1)
(38,19,1)
(10,7,1)
(21,31,1)
(39,2,1)
(15,1,1)
(6,38,1)
(41,29,1)
(34,19,1)
(34,30,1)
(11,42,1)
(38,29,1)
(18,6,1)
(16,19,1)
(16,29,1)
(39,16,1)
(11,28,1)
(19,15,1)
(3,17,1)
(4,25,1)
(40,37,1)
(35,39,1)
(31,41,1)
(0,11,1)
(34,29,1)
(38,21,1)
(19,29,1)
(17,20,1)
(37,22,1)
(20,26,1)
(5,9,1)
(6,8,1)
(20,4,1)
(36,34,1)
(24,12,1)
(41,19,2)
(34,29,2)
(38,29,2)
(20,26,2)
(15,3,2)
(41,29,2)
(36,34,2)
(19,15,2)
(34,19,2)
(42,32,2)
(27,41,2)
(16,19,2)
(11,42,2)
(3,17,2)
(5,41,2)
(6,38,2)
(11,28,2)
(0,11,2)
(9,41,2)
(17,20,2)
(15,1,2)
(5,9,2)
(38,19,2)
(32,19,2)
(39,16,2)
(32,29,2)
(19,29,2)
(16,29,2)
-----------------------------------
(0,printStructLine((twoIntsStruct *)
(1,struct _twoIntsStruct *)
(2,intTwo)
(3,malloc(100*sizeof(struct _twoIntsStruct)
(4,100)
(5,exit(-1)
(6,data[0].intOne)
(7,data)
(8,intOne)
(9,-1)
(10,NULL)
(11,(twoIntsStruct *)
(12,data)
(13,data[0].intTwo = 0)
(14,)
(15,(struct _twoIntsStruct *)
(16,data[0])
(17,100*sizeof(struct _twoIntsStruct)
(18,0)
(19,data = (struct _twoIntsStruct *)
(20,sizeof(struct _twoIntsStruct)
(21,0)
(22,data[0].intOne = 0)
(23,)
(24,0)
(25,data)
(26,struct _twoIntsStruct)
(27,1)
(28,twoIntsStruct *)
(29,struct _twoIntsStruct * data)
(30,data)
(31,data)
(32,data[0])
(33,if (data == NULL)
(34,return data;)
(35,0)
(36,RET)
(37,data)
(38,data[0])
(39,data[0].intTwo)
(40,0)
(41,data == NULL)
(42,&data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
