-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_calloc_45_bad()
{
    twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    CWE401_Memory_Leak__twoIntsStruct_calloc_45_badData = data;
    badSink();
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
33,34
34,35
34,36
35,36
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
53,55
54,55
54,56
55,56
60,61
61,62
61,63
62,63
62,64
63,64
63,65
64,65
69,70
70,71
70,72
71,72
73,74
74,75
74,76
75,76
78,79
79,80
79,81
80,81
82,83
84,85
85,86
86,87
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,32,36,37,41,43,48,50,56,57,58,59,65,66,67,68,72,76,77,81,83,87
-----computeFrom-----
14,15
14,16
20,21
20,22
39,40
39,41
52,53
52,54
61,62
61,63
79,80
79,81
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_calloc_45_bad(){    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    CWE401_Memory_Leak__twoIntsStruct_calloc_45_badData = data;    badSink();}
void
CWE401_Memory_Leak__twoIntsStruct_calloc_45_bad()
CWE401_Memory_Leak__twoIntsStruct_calloc_45_bad
{    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    CWE401_Memory_Leak__twoIntsStruct_calloc_45_badData = data;    badSink();}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));
data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)calloc(100, sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
calloc(100, sizeof(twoIntsStruct))
calloc
calloc
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
CWE401_Memory_Leak__twoIntsStruct_calloc_45_badData = data;
CWE401_Memory_Leak__twoIntsStruct_calloc_45_badData = data
CWE401_Memory_Leak__twoIntsStruct_calloc_45_badData
CWE401_Memory_Leak__twoIntsStruct_calloc_45_badData
data
data
badSink();
badSink()
badSink
badSink
-----joern-----
(34,28,0)
(29,43,0)
(14,41,0)
(39,26,0)
(11,37,0)
(38,39,0)
(30,2,0)
(22,43,0)
(38,42,0)
(42,38,0)
(45,13,0)
(21,16,0)
(31,35,0)
(2,34,0)
(23,45,0)
(41,45,0)
(1,41,0)
(7,6,0)
(18,13,0)
(9,10,0)
(39,6,0)
(3,29,0)
(33,43,0)
(16,43,0)
(21,37,0)
(4,10,0)
(15,43,0)
(0,38,0)
(34,2,0)
(6,39,0)
(5,6,0)
(27,37,0)
(10,6,0)
(17,29,0)
(45,41,0)
(15,25,0)
(10,43,0)
(32,7,0)
(20,7,0)
(44,43,0)
(35,6,0)
(6,43,0)
(25,15,0)
(13,43,0)
(39,38,0)
(19,21,0)
(25,35,0)
(8,42,0)
(41,6,0)
(40,35,0)
(37,21,0)
(37,6,0)
(24,16,0)
(26,39,0)
(35,25,0)
(21,19,1)
(32,6,1)
(44,10,1)
(45,41,1)
(29,17,1)
(25,35,1)
(20,32,1)
(37,11,1)
(8,0,1)
(40,13,1)
(2,30,1)
(24,21,1)
(10,4,1)
(13,18,1)
(37,6,1)
(17,3,1)
(9,15,1)
(4,9,1)
(31,40,1)
(5,29,1)
(38,42,1)
(39,26,1)
(45,23,1)
(12,44,1)
(42,8,1)
(7,20,1)
(35,31,1)
(21,37,1)
(27,34,1)
(16,24,1)
(10,6,1)
(14,1,1)
(41,6,1)
(11,27,1)
(34,2,1)
(19,37,1)
(41,14,1)
(1,16,1)
(0,5,1)
(30,7,1)
(27,7,1)
(7,6,1)
(39,38,1)
(23,41,1)
(6,39,1)
(15,25,1)
(18,45,1)
(35,6,1)
(10,6,2)
(30,7,2)
(15,25,2)
(45,41,2)
(25,35,2)
(38,42,2)
(41,6,2)
(35,6,2)
(2,7,2)
(7,6,2)
(34,2,2)
(21,37,2)
(39,38,2)
(6,39,2)
(37,6,2)
(34,7,2)
(39,26,2)
-----------------------------------
(0,100)
(1,data)
(2,-1)
(3,data)
(4,data)
(5,data)
(6,data = (twoIntsStruct *)
(7,data == NULL)
(8,twoIntsStruct)
(9,CWE401_Memory_Leak__twoIntsStruct_calloc_45_badData)
(10,CWE401_Memory_Leak__twoIntsStruct_calloc_45_badData = data)
(11,0)
(12,RET)
(13,data[0].intTwo = 0)
(14,0)
(15,printStructLine(&data[0])
(16,data[0].intOne = 0)
(17,NULL)
(18,0)
(19,intOne)
(20,NULL)
(21,data[0].intOne)
(22,data)
(23,intTwo)
(24,0)
(25,&data[0])
(26,twoIntsStruct *)
(27,data)
(28,)
(29,data = NULL)
(30,1)
(31,0)
(32,data)
(33,if (data == NULL)
(34,exit(-1)
(35,data[0])
(36, sizeof(twoIntsStruct)
(37,data[0])
(38,calloc(100, sizeof(twoIntsStruct)
(39,(twoIntsStruct *)
(40,data)
(41,data[0])
(42,sizeof(twoIntsStruct)
(43,)
(44,badSink()
(45,data[0].intTwo)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
