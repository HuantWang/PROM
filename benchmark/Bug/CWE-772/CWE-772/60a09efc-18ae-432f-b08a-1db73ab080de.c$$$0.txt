-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_34_bad()
{
    twoIntsStruct * data;
    CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType myUnion;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    myUnion.unionFirst = data;
    {
        twoIntsStruct * data = myUnion.unionSecond;
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
5,15
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
35,38
36,37
38,39
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
62,63
62,64
63,64
63,65
64,65
69,70
70,71
70,72
71,72
71,73
72,73
72,74
73,74
78,79
79,80
79,81
80,81
82,83
83,84
83,85
84,85
87,88
88,89
88,90
89,90
89,91
90,91
93,94
95,96
95,97
96,97
97,98
97,99
98,99
100,101
100,102
100,103
103,104
104,105
104,106
105,106
-----nextToken-----
2,4,9,11,12,16,18,22,24,28,32,34,37,39,41,45,46,50,52,57,59,65,66,67,68,74,75,76,77,81,85,86,91,92,94,99,101,102,106,107,108
-----computeFrom-----
20,21
20,22
26,27
26,28
40,41
40,42
48,49
48,50
61,62
61,63
70,71
70,72
88,89
88,90
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_34_bad(){    twoIntsStruct * data;    CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    myUnion.unionFirst = data;    {        twoIntsStruct * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__twoIntsStruct_realloc_34_bad()
CWE401_Memory_Leak__twoIntsStruct_realloc_34_bad
{    twoIntsStruct * data;    CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    myUnion.unionFirst = data;    {        twoIntsStruct * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType myUnion;
CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType myUnion;
CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType
CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType
myUnion
myUnion
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        twoIntsStruct * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
twoIntsStruct * data = myUnion.unionSecond;
twoIntsStruct * data = myUnion.unionSecond;
twoIntsStruct
twoIntsStruct
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
;
-----joern-----
(20,25,0)
(46,5,0)
(32,7,0)
(29,19,0)
(22,44,0)
(45,52,0)
(41,44,0)
(18,22,0)
(13,54,0)
(30,37,0)
(33,9,0)
(20,54,0)
(39,24,0)
(40,15,0)
(44,22,0)
(21,29,0)
(4,35,0)
(25,35,0)
(0,53,0)
(2,26,0)
(15,40,0)
(26,2,0)
(53,54,0)
(14,46,0)
(11,23,0)
(10,40,0)
(5,46,0)
(12,35,0)
(36,24,0)
(46,31,0)
(41,8,0)
(44,41,0)
(1,26,0)
(50,54,0)
(17,29,0)
(27,40,0)
(28,44,0)
(23,54,0)
(3,54,0)
(37,22,0)
(49,7,0)
(7,36,0)
(35,24,0)
(47,9,0)
(48,15,0)
(24,54,0)
(36,54,0)
(52,54,0)
(34,31,0)
(24,41,0)
(55,36,0)
(5,24,0)
(22,37,0)
(15,52,0)
(9,24,0)
(35,25,0)
(25,20,0)
(29,24,0)
(42,53,0)
(2,51,0)
(6,5,0)
(16,5,0)
(19,23,0)
(41,24,0)
(8,41,0)
(44,53,0)
(19,29,0)
(38,19,0)
(31,54,0)
(44,22,1)
(16,6,1)
(55,7,1)
(47,24,1)
(12,23,1)
(46,14,1)
(1,9,1)
(41,44,1)
(19,29,1)
(2,26,1)
(42,0,1)
(22,37,1)
(40,27,1)
(35,24,1)
(48,36,1)
(11,19,1)
(29,21,1)
(34,46,1)
(38,29,1)
(15,40,1)
(44,53,1)
(28,39,1)
(26,1,1)
(43,15,1)
(9,24,1)
(6,9,1)
(10,48,1)
(29,24,1)
(33,47,1)
(36,55,1)
(23,11,1)
(17,31,1)
(32,49,1)
(19,38,1)
(53,42,1)
(30,18,1)
(41,8,1)
(37,30,1)
(4,12,1)
(24,41,1)
(49,20,1)
(5,16,1)
(31,34,1)
(46,5,1)
(5,24,1)
(27,10,1)
(25,35,1)
(20,25,1)
(6,2,1)
(7,32,1)
(18,28,1)
(14,5,1)
(35,4,1)
(9,33,1)
(39,53,1)
(21,17,1)
(36,24,1)
(25,35,2)
(15,40,2)
(2,9,2)
(46,5,2)
(44,22,2)
(35,24,2)
(19,29,2)
(26,9,2)
(41,44,2)
(24,41,2)
(29,24,2)
(36,24,2)
(20,25,2)
(9,24,2)
(1,9,2)
(44,53,2)
(41,8,2)
(5,24,2)
(2,26,2)
(22,37,2)
-----------------------------------
(0,data)
(1,1)
(2,exit(-1)
(3,myUnion)
(4,0)
(5,data[0])
(6,data)
(7,myUnion.unionFirst)
(8,twoIntsStruct *)
(9,data == NULL)
(10,myUnion)
(11,0)
(12,data)
(13,if (data == NULL)
(14,intOne)
(15,* data = myUnion.unionSecond)
(16,0)
(17,data)
(18,100)
(19,data[0].intTwo)
(20,printStructLine(&data[0])
(21,0)
(22,100*sizeof(twoIntsStruct)
(23,data[0].intTwo = 0)
(24,data = (twoIntsStruct *)
(25,&data[0])
(26,-1)
(27,unionSecond)
(28,data)
(29,data[0])
(30,twoIntsStruct)
(31,data[0].intOne = 0)
(32,unionFirst)
(33,NULL)
(34,0)
(35,data[0])
(36,myUnion.unionFirst = data)
(37,sizeof(twoIntsStruct)
(38,intTwo)
(39,data)
(40,myUnion.unionSecond)
(41,(twoIntsStruct *)
(42,NULL)
(43,RET)
(44,realloc(data, 100*sizeof(twoIntsStruct)
(45,data)
(46,data[0].intOne)
(47,data)
(48,data)
(49,myUnion)
(50,data)
(51,)
(52,)
(53,data = NULL)
(54,)
(55,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
