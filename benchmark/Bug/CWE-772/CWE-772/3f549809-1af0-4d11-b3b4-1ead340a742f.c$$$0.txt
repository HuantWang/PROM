-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_realloc_45_bad()
{
    int * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int *)realloc(data, 100*sizeof(int));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    CWE401_Memory_Leak__int_realloc_45_badData = data;
    badSink();
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
30,31
32,33
32,34
34,35
35,36
35,37
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
53,55
54,55
58,59
59,60
59,61
60,61
62,63
62,64
63,64
66,67
67,68
67,69
68,69
70,71
72,73
73,74
74,75
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,33,36,37,41,43,48,50,55,56,57,61,64,65,69,71,75
-----computeFrom-----
13,14
13,15
19,20
19,21
32,33
32,34
39,40
39,41
52,53
52,54
67,68
67,69
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__int_realloc_45_bad(){    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    CWE401_Memory_Leak__int_realloc_45_badData = data;    badSink();}
void
CWE401_Memory_Leak__int_realloc_45_bad()
CWE401_Memory_Leak__int_realloc_45_bad
{    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    CWE401_Memory_Leak__int_realloc_45_badData = data;    badSink();}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)realloc(data, 100*sizeof(int));
data = (int *)realloc(data, 100*sizeof(int))
data
data
(int *)realloc(data, 100*sizeof(int))
int *
int
*
*
realloc(data, 100*sizeof(int))
realloc
realloc
data
data
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
CWE401_Memory_Leak__int_realloc_45_badData = data;
CWE401_Memory_Leak__int_realloc_45_badData = data
CWE401_Memory_Leak__int_realloc_45_badData
CWE401_Memory_Leak__int_realloc_45_badData
data
data
badSink();
badSink()
badSink
badSink
-----joern-----
(15,13,0)
(29,32,0)
(32,24,0)
(7,2,0)
(33,25,0)
(32,18,0)
(0,27,0)
(13,8,0)
(4,25,0)
(25,4,0)
(25,33,0)
(24,27,0)
(19,32,0)
(3,34,0)
(20,8,0)
(8,13,0)
(31,23,0)
(14,4,0)
(18,27,0)
(2,4,0)
(25,15,0)
(22,3,0)
(1,27,0)
(16,27,0)
(35,24,0)
(12,22,0)
(6,5,0)
(28,27,0)
(15,25,0)
(2,24,0)
(23,4,0)
(9,2,0)
(17,15,0)
(11,23,0)
(15,28,0)
(5,4,0)
(32,4,0)
(30,13,0)
(3,22,0)
(5,27,0)
(36,28,0)
(13,15,0)
(4,27,0)
(26,28,0)
(10,5,0)
(18,32,0)
(20,30,1)
(35,2,1)
(29,19,1)
(25,15,1)
(30,17,1)
(12,23,1)
(2,4,1)
(32,29,1)
(3,22,1)
(36,26,1)
(9,7,1)
(22,12,1)
(23,31,1)
(8,20,1)
(11,4,1)
(25,33,1)
(5,6,1)
(16,5,1)
(5,4,1)
(15,13,1)
(15,28,1)
(21,16,1)
(19,24,1)
(7,23,1)
(23,4,1)
(10,18,1)
(7,3,1)
(28,36,1)
(24,35,1)
(14,28,1)
(32,4,1)
(31,11,1)
(2,9,1)
(6,10,1)
(18,32,1)
(32,24,1)
(13,8,1)
(4,25,1)
(17,14,1)
(4,25,2)
(5,4,2)
(32,4,2)
(23,4,2)
(13,8,2)
(3,22,2)
(15,13,2)
(25,33,2)
(2,4,2)
(32,24,2)
(15,28,2)
(3,23,2)
(18,32,2)
(25,15,2)
(12,23,2)
(22,23,2)
-----------------------------------
(0,if (data == NULL)
(1,data)
(2,data[0])
(3,exit(-1)
(4,data = (int *)
(5,CWE401_Memory_Leak__int_realloc_45_badData = data)
(6,data)
(7,data)
(8,sizeof(int)
(9,0)
(10,CWE401_Memory_Leak__int_realloc_45_badData)
(11,data)
(12,1)
(13,100*sizeof(int)
(14,data)
(15,realloc(data, 100*sizeof(int)
(16,badSink()
(17,data)
(18,printIntLine(data[0])
(19,data)
(20,int)
(21,RET)
(22,-1)
(23,data == NULL)
(24,data[0] = 5)
(25,(int *)
(26,data)
(27,)
(28,data = NULL)
(29,0)
(30,100)
(31,NULL)
(32,data[0])
(33,int *)
(34,)
(35,5)
(36,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
