-----label-----
1
-----code-----
void CWE401_Memory_Leak__strdup_wchar_t_67_bad()
{
    wchar_t * data;
    CWE401_Memory_Leak__strdup_wchar_t_67_structType myStruct;
    data = NULL;
    {
        wchar_t myString[] = L"myString";
        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */
        data = wcsdup(myString);
        /* Use data */
        printWLine(data);
    }
    myStruct.structFirst = data;
    CWE401_Memory_Leak__strdup_wchar_t_67b_badSink(myStruct);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
24,25
24,26
24,27
25,26
26,27
26,28
28,29
28,30
28,31
31,32
33,34
34,35
34,36
35,36
37,38
37,39
38,39
40,41
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
50,52
51,52
54,55
56,57
57,58
57,59
58,59
60,61
-----nextToken-----
2,4,8,10,11,15,17,21,23,27,29,30,32,36,39,41,45,47,52,53,55,59,61
-----computeFrom-----
19,20
19,21
34,35
34,36
49,50
49,51
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__strdup_wchar_t_67_bad(){    wchar_t * data;    CWE401_Memory_Leak__strdup_wchar_t_67_structType myStruct;    data = NULL;    {        wchar_t myString[] = L"myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = wcsdup(myString);        /* Use data */        printWLine(data);    }    myStruct.structFirst = data;    CWE401_Memory_Leak__strdup_wchar_t_67b_badSink(myStruct);}
void
CWE401_Memory_Leak__strdup_wchar_t_67_bad()
CWE401_Memory_Leak__strdup_wchar_t_67_bad
{    wchar_t * data;    CWE401_Memory_Leak__strdup_wchar_t_67_structType myStruct;    data = NULL;    {        wchar_t myString[] = L"myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = wcsdup(myString);        /* Use data */        printWLine(data);    }    myStruct.structFirst = data;    CWE401_Memory_Leak__strdup_wchar_t_67b_badSink(myStruct);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE401_Memory_Leak__strdup_wchar_t_67_structType myStruct;
CWE401_Memory_Leak__strdup_wchar_t_67_structType myStruct;
CWE401_Memory_Leak__strdup_wchar_t_67_structType
CWE401_Memory_Leak__strdup_wchar_t_67_structType
myStruct
myStruct
data = NULL;
data = NULL
data
data
NULL
NULL
{        wchar_t myString[] = L"myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = wcsdup(myString);        /* Use data */        printWLine(data);    }
wchar_t myString[] = L"myString";
wchar_t myString[] = L"myString";
wchar_t
myString[] = L"myString"
myString
[]
= L"myString"
L"myString"
data = wcsdup(myString);
data = wcsdup(myString)
data
data
wcsdup(myString)
wcsdup
wcsdup
myString
myString
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
myStruct.structFirst = data;
myStruct.structFirst = data
myStruct.structFirst
myStruct
myStruct
structFirst
data
data
CWE401_Memory_Leak__strdup_wchar_t_67b_badSink(myStruct);
CWE401_Memory_Leak__strdup_wchar_t_67b_badSink(myStruct)
CWE401_Memory_Leak__strdup_wchar_t_67b_badSink
CWE401_Memory_Leak__strdup_wchar_t_67b_badSink
myStruct
myStruct
-----joern-----
(11,10,0)
(17,18,0)
(14,18,0)
(3,6,0)
(20,18,0)
(13,1,0)
(0,7,0)
(4,17,0)
(1,7,0)
(21,14,0)
(20,10,0)
(18,17,0)
(12,14,0)
(15,12,0)
(5,18,0)
(2,12,0)
(19,1,0)
(18,10,0)
(6,7,0)
(8,20,0)
(9,7,0)
(10,7,0)
(14,7,0)
(17,4,1)
(20,8,1)
(12,15,1)
(14,21,1)
(11,1,1)
(20,18,1)
(18,17,1)
(4,5,1)
(19,13,1)
(5,11,1)
(3,14,1)
(8,18,1)
(16,6,1)
(2,20,1)
(21,12,1)
(15,2,1)
(6,3,1)
(14,18,1)
(1,19,1)
(20,18,2)
(18,17,2)
(14,18,2)
-----------------------------------
(0,data)
(1,data = NULL)
(2,myStruct)
(3,myStruct)
(4,myString)
(5,data)
(6,CWE401_Memory_Leak__strdup_wchar_t_67b_badSink(myStruct)
(7,)
(8,data)
(9,myStruct)
(10,)
(11,"myString")
(12,myStruct.structFirst)
(13,data)
(14,myStruct.structFirst = data)
(15,structFirst)
(16,RET)
(17,wcsdup(myString)
(18,data = wcsdup(myString)
(19,NULL)
(20,printWLine(data)
(21,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
