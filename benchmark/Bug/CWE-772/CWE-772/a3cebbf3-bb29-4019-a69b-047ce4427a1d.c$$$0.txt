-----label-----
1
-----code-----
void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_44_bad()
{
    struct _twoIntsStruct * data;
    /* define a function pointer */
    void (*funcPtr) (struct _twoIntsStruct *) = badSink;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
16,17
16,18
16,19
17,18
17,19
20,21
20,22
21,22
23,24
23,25
26,27
27,28
29,30
30,31
30,32
31,32
33,34
35,36
36,37
36,38
37,38
39,40
39,41
40,41
40,42
41,42
43,44
45,46
45,47
46,47
48,49
48,50
50,51
51,52
51,53
52,53
55,56
55,57
56,57
56,58
57,58
59,60
61,62
62,63
63,64
63,65
64,65
66,67
68,69
69,70
69,71
70,71
70,72
71,72
71,73
72,73
77,78
78,79
78,80
79,80
79,81
80,81
80,82
81,82
86,87
87,88
87,89
88,89
90,91
90,92
91,92
91,93
92,93
94,95
96,97
97,98
97,99
98,99
101,102
102,103
102,104
103,104
105,106
-----nextToken-----
2,4,9,11,12,15,18,19,22,24,25,28,32,34,38,42,44,47,49,53,54,58,60,65,67,73,74,75,76,82,83,84,85,89,93,95,99,100,104,106
-----computeFrom-----
30,31
30,32
36,37
36,38
48,49
48,50
56,57
56,58
69,70
69,71
78,79
78,80
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_44_bad(){    struct _twoIntsStruct * data;    /* define a function pointer */    void (*funcPtr) (struct _twoIntsStruct *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    /* use the function pointer */    funcPtr(data);}
void
CWE401_Memory_Leak__struct_twoIntsStruct_malloc_44_bad()
CWE401_Memory_Leak__struct_twoIntsStruct_malloc_44_bad
{    struct _twoIntsStruct * data;    /* define a function pointer */    void (*funcPtr) (struct _twoIntsStruct *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    /* use the function pointer */    funcPtr(data);}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
void (*funcPtr) (struct _twoIntsStruct *) = badSink;
void (*funcPtr) (struct _twoIntsStruct *) = badSink;
void
(*funcPtr) (struct _twoIntsStruct *) = badSink
*funcPtr
*
funcPtr
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*

= badSink
badSink
badSink
data = NULL;
data = NULL
data
data
NULL
NULL
data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
malloc(100*sizeof(struct _twoIntsStruct))
malloc
malloc
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(26,35,0)
(34,25,0)
(33,15,0)
(31,25,0)
(7,32,0)
(12,31,0)
(21,16,0)
(49,38,0)
(24,25,0)
(2,3,0)
(22,32,0)
(4,31,0)
(40,25,0)
(41,17,0)
(29,40,0)
(14,19,0)
(44,25,0)
(20,16,0)
(8,34,0)
(16,21,0)
(30,34,0)
(35,6,0)
(39,40,0)
(27,25,0)
(6,19,0)
(10,5,0)
(2,43,0)
(18,33,0)
(5,31,0)
(17,25,0)
(30,38,0)
(42,25,0)
(1,44,0)
(45,43,0)
(35,24,0)
(43,2,0)
(38,30,0)
(22,4,0)
(47,17,0)
(15,13,0)
(31,16,0)
(32,25,0)
(20,33,0)
(48,25,0)
(38,31,0)
(23,4,0)
(16,20,0)
(19,31,0)
(0,22,0)
(6,35,0)
(24,35,0)
(4,22,0)
(9,4,0)
(16,31,0)
(46,5,0)
(13,15,0)
(35,26,0)
(33,20,0)
(11,38,0)
(36,19,0)
(28,30,0)
(44,31,0)
(19,6,0)
(15,33,0)
(35,26,1)
(49,11,1)
(39,29,1)
(38,31,1)
(4,9,1)
(32,7,1)
(5,46,1)
(14,32,1)
(0,4,1)
(36,14,1)
(23,34,1)
(6,19,1)
(17,47,1)
(9,23,1)
(43,45,1)
(33,15,1)
(40,39,1)
(30,28,1)
(45,5,1)
(22,4,1)
(34,8,1)
(31,16,1)
(38,49,1)
(37,44,1)
(16,20,1)
(16,21,1)
(5,31,1)
(30,38,1)
(22,0,1)
(19,36,1)
(15,18,1)
(10,31,1)
(11,5,1)
(1,24,1)
(2,43,1)
(29,17,1)
(28,38,1)
(7,22,1)
(18,12,1)
(15,13,1)
(8,30,1)
(11,2,1)
(44,1,1)
(19,31,1)
(20,33,1)
(4,31,1)
(47,41,1)
(24,35,1)
(44,31,1)
(46,10,1)
(12,40,1)
(35,6,1)
(19,31,2)
(4,31,2)
(20,33,2)
(6,19,2)
(2,5,2)
(45,5,2)
(31,16,2)
(38,31,2)
(35,6,2)
(2,43,2)
(33,15,2)
(16,21,2)
(35,26,2)
(15,13,2)
(43,5,2)
(24,35,2)
(5,31,2)
(44,31,2)
(22,4,2)
(30,38,2)
(16,20,2)
-----------------------------------
(0,intTwo)
(1,data)
(2,exit(-1)
(3,)
(4,data[0])
(5,data == NULL)
(6,&data[0])
(7,0)
(8,0)
(9,0)
(10,data)
(11,data)
(12,data)
(13,struct _twoIntsStruct)
(14,data)
(15,sizeof(struct _twoIntsStruct)
(16,(struct _twoIntsStruct *)
(17,(*funcPtr)
(18,100)
(19,data[0])
(20,malloc(100*sizeof(struct _twoIntsStruct)
(21,struct _twoIntsStruct *)
(22,data[0].intTwo)
(23,data)
(24,printStructLine((twoIntsStruct *)
(25,)
(26,twoIntsStruct *)
(27,if (data == NULL)
(28,intOne)
(29,data)
(30,data[0].intOne)
(31,data = (struct _twoIntsStruct *)
(32,data[0].intTwo = 0)
(33,100*sizeof(struct _twoIntsStruct)
(34,data[0].intOne = 0)
(35,(twoIntsStruct *)
(36,0)
(37,RET)
(38,data[0])
(39,NULL)
(40,data = NULL)
(41,funcPtr)
(42,funcPtr)
(43,-1)
(44,funcPtr(data)
(45,1)
(46,NULL)
(47,badSink)
(48,data)
(49,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
