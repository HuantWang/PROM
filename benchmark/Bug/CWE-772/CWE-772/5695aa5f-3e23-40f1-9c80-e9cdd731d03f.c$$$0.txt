-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_malloc_18_bad()
{
    twoIntsStruct * data;
    data = NULL;
    goto source;
source:
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
5,15
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
43,44
43,45
44,45
44,46
45,46
47,48
49,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
58,59
58,60
59,60
59,61
60,61
65,66
66,67
66,68
67,68
67,69
68,69
68,70
69,70
74,75
75,76
75,77
76,77
78,79
79,80
79,81
80,81
83,84
85,86
85,87
-----nextToken-----
2,4,9,11,12,16,18,20,22,26,30,32,35,37,41,42,46,48,53,55,61,62,63,64,70,71,72,73,77,81,82,84,86,87
-----computeFrom-----
14,15
14,16
24,25
24,26
36,37
36,38
44,45
44,46
57,58
57,59
66,67
66,68
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_malloc_18_bad(){    twoIntsStruct * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__twoIntsStruct_malloc_18_bad()
CWE401_Memory_Leak__twoIntsStruct_malloc_18_bad
{    twoIntsStruct * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
source
data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)malloc(100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
malloc(100*sizeof(twoIntsStruct))
malloc
malloc
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(17,15,0)
(11,32,0)
(23,30,0)
(40,18,0)
(4,19,0)
(2,33,0)
(44,8,0)
(26,32,0)
(1,33,0)
(23,8,0)
(34,32,0)
(30,23,0)
(31,32,0)
(5,27,0)
(18,19,0)
(45,39,0)
(38,32,0)
(15,26,0)
(33,19,0)
(25,37,0)
(19,30,0)
(28,14,0)
(6,3,0)
(20,19,0)
(16,22,0)
(35,32,0)
(39,32,0)
(20,45,0)
(10,26,0)
(36,6,0)
(43,20,0)
(13,20,0)
(8,22,0)
(22,8,0)
(8,23,0)
(37,19,0)
(21,18,0)
(18,15,0)
(30,29,0)
(19,32,0)
(0,14,0)
(24,37,0)
(39,45,0)
(45,20,0)
(14,32,0)
(7,28,0)
(42,32,0)
(9,27,0)
(15,18,0)
(28,33,0)
(30,19,0)
(29,30,0)
(3,12,0)
(27,32,0)
(33,28,0)
(3,6,0)
(40,21,1)
(37,24,1)
(24,25,1)
(30,23,1)
(18,19,1)
(13,43,1)
(39,45,1)
(28,7,1)
(21,37,1)
(15,17,1)
(30,29,1)
(37,19,1)
(43,14,1)
(2,1,1)
(5,9,1)
(44,4,1)
(33,2,1)
(28,33,1)
(15,18,1)
(4,31,1)
(33,19,1)
(31,27,1)
(6,36,1)
(41,35,1)
(23,8,1)
(16,44,1)
(25,19,1)
(3,6,1)
(20,19,1)
(27,5,1)
(36,37,1)
(26,10,1)
(18,40,1)
(17,18,1)
(45,20,1)
(21,3,1)
(0,28,1)
(22,16,1)
(1,26,1)
(19,30,1)
(20,13,1)
(10,15,1)
(8,22,1)
(7,33,1)
(14,0,1)
(35,39,1)
(33,19,2)
(30,29,2)
(23,8,2)
(19,30,2)
(15,18,2)
(39,45,2)
(3,6,2)
(20,19,2)
(8,22,2)
(36,37,2)
(45,20,2)
(18,19,2)
(28,33,2)
(37,19,2)
(30,23,2)
(3,37,2)
(6,37,2)
-----------------------------------
(0,0)
(1,data)
(2,0)
(3,exit(-1)
(4,data)
(5,NULL)
(6,-1)
(7,intTwo)
(8,100*sizeof(twoIntsStruct)
(9,data)
(10,0)
(11,sink:)
(12,)
(13,0)
(14,data[0].intTwo = 0)
(15,data[0].intOne)
(16,twoIntsStruct)
(17,intOne)
(18,data[0])
(19,data = (twoIntsStruct *)
(20,data[0])
(21,data)
(22,sizeof(twoIntsStruct)
(23,malloc(100*sizeof(twoIntsStruct)
(24,NULL)
(25,data)
(26,data[0].intOne = 0)
(27,data = NULL)
(28,data[0].intTwo)
(29,twoIntsStruct *)
(30,(twoIntsStruct *)
(31,goto source;)
(32,)
(33,data[0])
(34,source:)
(35,goto sink;)
(36,1)
(37,data == NULL)
(38,if (data == NULL)
(39,printStructLine(&data[0])
(40,0)
(41,RET)
(42,data)
(43,data)
(44,100)
(45,&data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
