-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_41_bad()
{
    twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
32,33
34,35
34,36
36,37
37,38
37,39
38,39
41,42
41,43
42,43
42,44
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
54,55
55,56
55,57
56,57
56,58
57,58
57,59
58,59
63,64
64,65
64,66
65,66
65,67
66,67
66,68
67,68
72,73
73,74
73,75
74,75
76,77
77,78
77,79
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,35,39,40,44,46,51,53,59,60,61,62,68,69,70,71,75,79,80,84,86
-----computeFrom-----
14,15
14,16
20,21
20,22
34,35
34,36
42,43
42,44
55,56
55,57
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_41_bad(){    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    badSink(data);}
void
CWE401_Memory_Leak__twoIntsStruct_realloc_41_bad()
CWE401_Memory_Leak__twoIntsStruct_realloc_41_bad
{    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    badSink(data);}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(23,39,0)
(40,16,0)
(22,40,0)
(8,5,0)
(26,16,0)
(34,37,0)
(20,18,0)
(0,17,0)
(23,36,0)
(1,18,0)
(39,23,0)
(17,0,0)
(10,3,0)
(13,11,0)
(18,24,0)
(10,5,0)
(15,5,0)
(41,39,0)
(8,29,0)
(37,22,0)
(35,36,0)
(26,29,0)
(7,20,0)
(42,40,0)
(5,16,0)
(28,16,0)
(25,5,0)
(19,11,0)
(9,8,0)
(37,5,0)
(22,37,0)
(10,20,0)
(29,8,0)
(11,16,0)
(2,23,0)
(17,27,0)
(44,39,0)
(38,37,0)
(36,16,0)
(5,10,0)
(20,10,0)
(30,25,0)
(25,16,0)
(29,26,0)
(4,8,0)
(12,16,0)
(24,18,0)
(21,22,0)
(31,15,0)
(39,5,0)
(18,20,0)
(32,5,0)
(14,0,0)
(6,24,0)
(20,11,0)
(3,10,0)
(43,15,0)
(43,5,1)
(37,34,1)
(9,4,1)
(4,36,1)
(13,19,1)
(37,5,1)
(10,3,1)
(42,22,1)
(21,37,1)
(32,11,1)
(23,39,1)
(8,9,1)
(36,35,1)
(2,39,1)
(31,43,1)
(18,24,1)
(17,0,1)
(39,5,1)
(20,18,1)
(22,21,1)
(1,7,1)
(25,30,1)
(20,11,1)
(0,14,1)
(15,31,1)
(38,15,1)
(29,8,1)
(35,23,1)
(10,20,1)
(40,42,1)
(41,44,1)
(8,5,1)
(24,6,1)
(14,15,1)
(26,29,1)
(5,10,1)
(44,40,1)
(11,13,1)
(23,2,1)
(7,32,1)
(34,38,1)
(22,37,1)
(38,17,1)
(6,1,1)
(15,5,1)
(39,41,1)
(30,26,1)
(33,25,1)
(25,5,1)
(15,5,2)
(37,5,2)
(17,15,2)
(10,20,2)
(23,39,2)
(22,37,2)
(20,11,2)
(10,3,2)
(5,10,2)
(26,29,2)
(18,24,2)
(20,18,2)
(29,8,2)
(0,15,2)
(14,15,2)
(17,0,2)
(25,5,2)
(8,5,2)
(39,5,2)
-----------------------------------
(0,-1)
(1,100)
(2,intTwo)
(3,twoIntsStruct *)
(4,data)
(5,data = (twoIntsStruct *)
(6,twoIntsStruct)
(7,data)
(8,data[0])
(9,0)
(10,(twoIntsStruct *)
(11,data = NULL)
(12,if (data == NULL)
(13,NULL)
(14,1)
(15,data == NULL)
(16,)
(17,exit(-1)
(18,100*sizeof(twoIntsStruct)
(19,data)
(20,realloc(data, 100*sizeof(twoIntsStruct)
(21,intOne)
(22,data[0].intOne)
(23,data[0].intTwo)
(24,sizeof(twoIntsStruct)
(25,badSink(data)
(26,printStructLine(&data[0])
(27,)
(28,data)
(29,&data[0])
(30,data)
(31,NULL)
(32,data)
(33,RET)
(34,0)
(35,0)
(36,data[0].intTwo = 0)
(37,data[0])
(38,data)
(39,data[0])
(40,data[0].intOne = 0)
(41,0)
(42,0)
(43,data)
(44,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
