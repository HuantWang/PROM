-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_01_bad()
{
    {
        struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0].intOne = 0;
        data[0].intTwo = 0;
        printStructLine((twoIntsStruct *)&data[0]);
        /* FLAW: If realloc() fails, the initial memory block will not be freed() */
        data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));
        if (data != NULL)
        {
            /* Reinitialize and make use of data */
            data[0].intOne = 1;
            data[0].intTwo = 1;
            printStructLine((twoIntsStruct *)&data[0]);
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
6,9
6,10
6,11
6,12
6,13
7,8
8,9
8,10
9,10
11,12
11,13
11,14
14,15
15,16
15,17
16,17
16,18
17,18
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
28,29
31,32
31,33
32,33
32,34
33,34
35,36
37,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
46,48
47,48
47,49
48,49
53,54
54,55
54,56
55,56
55,57
56,57
56,58
57,58
62,63
63,64
63,65
64,65
66,67
66,68
67,68
67,69
68,69
70,71
72,73
73,74
73,75
74,75
77,78
78,79
78,80
79,80
81,82
81,83
82,83
82,84
83,84
85,86
87,88
87,89
87,90
88,89
90,91
92,93
92,94
93,94
95,96
96,97
96,98
97,98
100,101
100,102
101,102
101,103
102,103
104,105
106,107
106,108
106,109
106,110
107,108
108,109
108,110
109,110
109,111
110,111
110,112
111,112
116,117
117,118
117,119
118,119
118,120
119,120
119,121
120,121
125,126
126,127
126,128
127,128
129,130
129,131
130,131
130,132
131,132
133,134
135,136
136,137
136,138
137,138
140,141
141,142
141,143
142,143
144,145
-----nextToken-----
2,4,10,12,13,18,20,23,25,29,30,34,36,41,43,49,50,51,52,58,59,60,61,65,69,71,75,76,80,84,86,89,91,94,98,99,103,105,112,113,114,115,121,122,123,124,128,132,134,138,139,143,145
-----computeFrom-----
24,25
24,26
32,33
32,34
45,46
45,47
54,55
54,56
78,79
78,80
92,93
92,94
101,102
101,103
108,109
108,110
117,118
117,119
-----guardedBy-----
103,145
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_01_bad(){    {        struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine((twoIntsStruct *)&data[0]);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));        if (data != NULL)        {            /* Reinitialize and make use of data */            data[0].intOne = 1;            data[0].intTwo = 1;            printStructLine((twoIntsStruct *)&data[0]);            free(data);        }    }}
void
CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_01_bad()
CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_01_bad
{    {        struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine((twoIntsStruct *)&data[0]);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));        if (data != NULL)        {            /* Reinitialize and make use of data */            data[0].intOne = 1;            data[0].intTwo = 1;            printStructLine((twoIntsStruct *)&data[0]);            free(data);        }    }}
{        struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine((twoIntsStruct *)&data[0]);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));        if (data != NULL)        {            /* Reinitialize and make use of data */            data[0].intOne = 1;            data[0].intTwo = 1;            printStructLine((twoIntsStruct *)&data[0]);            free(data);        }    }
struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
struct _twoIntsStruct
_twoIntsStruct
* data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
*
data
= (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
(struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
malloc(100*sizeof(struct _twoIntsStruct))
malloc
malloc
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
realloc(data, (130000)*sizeof(struct _twoIntsStruct))
realloc
realloc
data
data
(130000)*sizeof(struct _twoIntsStruct)
(130000)
130000
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data != NULL)        {            /* Reinitialize and make use of data */            data[0].intOne = 1;            data[0].intTwo = 1;            printStructLine((twoIntsStruct *)&data[0]);            free(data);        }
data != NULL
data
data
NULL
NULL
{            /* Reinitialize and make use of data */            data[0].intOne = 1;            data[0].intTwo = 1;            printStructLine((twoIntsStruct *)&data[0]);            free(data);        }
data[0].intOne = 1;
data[0].intOne = 1
data[0].intOne
data[0]
data
data
0
intOne
1
data[0].intTwo = 1;
data[0].intTwo = 1
data[0].intTwo
data[0]
data
data
0
intTwo
1
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(24,49,0)
(3,53,0)
(54,47,0)
(40,42,0)
(71,63,0)
(27,45,0)
(31,0,0)
(45,30,0)
(46,54,0)
(16,22,0)
(42,0,0)
(49,78,0)
(67,56,0)
(78,53,0)
(67,70,0)
(32,73,0)
(5,61,0)
(54,70,0)
(21,58,0)
(47,43,0)
(45,19,0)
(4,65,0)
(41,54,0)
(38,79,0)
(66,73,0)
(14,43,0)
(6,45,0)
(30,45,0)
(77,12,0)
(52,19,0)
(63,20,0)
(10,30,0)
(79,19,0)
(39,57,0)
(67,28,0)
(28,67,0)
(55,23,0)
(31,57,0)
(74,23,0)
(48,63,0)
(43,0,0)
(22,70,0)
(56,9,0)
(58,63,0)
(7,22,0)
(33,79,0)
(8,52,0)
(29,60,0)
(72,26,0)
(57,36,0)
(23,38,0)
(57,39,0)
(68,47,0)
(22,36,0)
(70,63,0)
(15,12,0)
(73,32,0)
(50,66,0)
(73,66,0)
(76,72,0)
(36,57,0)
(55,63,0)
(56,67,0)
(59,49,0)
(23,55,0)
(66,8,0)
(37,79,0)
(64,19,0)
(52,8,0)
(9,65,0)
(38,23,0)
(77,42,0)
(2,0,0)
(35,52,0)
(19,63,0)
(61,19,0)
(23,74,0)
(12,70,0)
(53,63,0)
(52,35,0)
(1,63,0)
(36,22,0)
(19,52,0)
(65,9,0)
(65,4,0)
(2,70,0)
(62,78,0)
(11,12,0)
(60,70,0)
(51,61,0)
(75,2,0)
(47,54,0)
(25,70,0)
(72,76,0)
(13,76,0)
(79,38,0)
(9,56,0)
(12,77,0)
(8,66,0)
(70,67,0)
(57,31,0)
(18,56,0)
(49,19,0)
(30,58,0)
(17,9,0)
(56,19,0)
(34,77,0)
(78,49,0)
(44,60,0)
(23,38,1)
(61,19,1)
(79,19,1)
(65,17,1)
(12,70,1)
(60,44,1)
(45,6,1)
(13,61,1)
(37,58,1)
(54,41,1)
(18,25,1)
(79,33,1)
(40,77,1)
(30,45,1)
(9,65,1)
(67,56,1)
(69,2,1)
(53,3,1)
(58,21,1)
(24,72,1)
(14,47,1)
(27,53,1)
(2,75,1)
(76,13,1)
(73,32,1)
(23,74,1)
(36,22,1)
(17,18,1)
(56,19,1)
(59,24,1)
(2,70,1)
(12,11,1)
(42,40,1)
(55,23,1)
(43,14,1)
(31,57,1)
(7,16,1)
(69,60,1)
(73,50,1)
(54,70,1)
(77,34,1)
(56,9,1)
(45,19,1)
(3,78,1)
(38,79,1)
(75,31,1)
(29,70,1)
(47,68,1)
(51,19,1)
(70,67,1)
(10,45,1)
(61,5,1)
(66,73,1)
(25,55,1)
(49,19,1)
(57,39,1)
(11,15,1)
(22,7,1)
(8,66,1)
(33,37,1)
(78,49,1)
(68,54,1)
(16,42,1)
(44,29,1)
(46,60,1)
(6,27,1)
(49,59,1)
(62,49,1)
(67,28,1)
(5,51,1)
(34,12,1)
(50,64,1)
(72,76,1)
(52,35,1)
(78,62,1)
(60,70,1)
(47,54,1)
(52,8,1)
(15,43,1)
(57,36,1)
(41,46,1)
(77,12,1)
(30,10,1)
(19,52,1)
(65,4,1)
(22,70,1)
(21,30,1)
(24,61,1)
(38,79,2)
(23,38,2)
(77,12,2)
(52,8,2)
(36,22,2)
(30,45,2)
(72,76,2)
(16,60,2)
(47,60,2)
(61,19,2)
(77,60,2)
(49,19,2)
(54,60,2)
(12,60,2)
(78,49,2)
(57,36,2)
(57,60,2)
(43,60,2)
(54,70,2)
(42,60,2)
(47,54,2)
(36,60,2)
(22,70,2)
(76,61,2)
(13,61,2)
(19,52,2)
(14,60,2)
(31,57,2)
(45,19,2)
(66,73,2)
(72,61,2)
(65,4,2)
(55,23,2)
(67,28,2)
(41,60,2)
(73,32,2)
(68,60,2)
(23,74,2)
(60,70,2)
(70,67,2)
(75,60,2)
(2,70,2)
(31,60,2)
(22,60,2)
(52,35,2)
(8,66,2)
(57,39,2)
(40,60,2)
(34,60,2)
(2,60,2)
(7,60,2)
(56,19,2)
(9,65,2)
(46,60,2)
(79,19,2)
(12,70,2)
(11,60,2)
(15,60,2)
(56,9,2)
(67,56,2)
-----------------------------------
(0,)
(1,if (data == NULL)
(2,free(data)
(3,0)
(4,struct _twoIntsStruct)
(5,NULL)
(6,0)
(7,0)
(8,malloc(100*sizeof(struct _twoIntsStruct)
(9,(130000)
(10,intTwo)
(11,0)
(12,data[0])
(13,1)
(14,1)
(15,data)
(16,data)
(17,130000)
(18,data)
(19,* data = (struct _twoIntsStruct *)
(20,)
(21,0)
(22,data[0])
(23,(twoIntsStruct *)
(24,data)
(25,data)
(26,)
(27,data)
(28,struct _twoIntsStruct *)
(29,data)
(30,data[0].intTwo)
(31,printStructLine((twoIntsStruct *)
(32,struct _twoIntsStruct)
(33,0)
(34,intTwo)
(35,struct _twoIntsStruct *)
(36,&data[0])
(37,data)
(38,&data[0])
(39,twoIntsStruct *)
(40,1)
(41,0)
(42,data[0].intTwo = 1)
(43,data[0].intOne = 1)
(44,NULL)
(45,data[0])
(46,data)
(47,data[0].intOne)
(48,data)
(49,data[0])
(50,100)
(51,data)
(52,(struct _twoIntsStruct *)
(53,data[0].intOne = 0)
(54,data[0])
(55,printStructLine((twoIntsStruct *)
(56,realloc(data, (130000)
(57,(twoIntsStruct *)
(58,data[0].intTwo = 0)
(59,0)
(60,data != NULL)
(61,data == NULL)
(62,intOne)
(63,)
(64,data)
(65,sizeof(struct _twoIntsStruct)
(66,100*sizeof(struct _twoIntsStruct)
(67,(struct _twoIntsStruct *)
(68,intOne)
(69,RET)
(70,data = (struct _twoIntsStruct *)
(71,if (data != NULL)
(72,exit(-1)
(73,sizeof(struct _twoIntsStruct)
(74,twoIntsStruct *)
(75,data)
(76,-1)
(77,data[0].intTwo)
(78,data[0].intOne)
(79,data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
