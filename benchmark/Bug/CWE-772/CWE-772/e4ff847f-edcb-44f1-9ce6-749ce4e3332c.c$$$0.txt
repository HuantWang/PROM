-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_malloc_13_bad()
{
    int64_t * data;
    data = NULL;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)malloc(100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
24,28
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
60,61
60,62
61,62
65,66
66,67
66,68
67,68
69,70
69,71
70,71
73,74
73,75
74,75
74,76
75,76
78,79
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,39,43,44,48,50,55,57,62,63,64,68,71,72,76,77,79
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
38,39
38,40
46,47
46,48
59,60
59,61
74,75
74,76
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_malloc_13_bad(){    int64_t * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_malloc_13_bad()
CWE401_Memory_Leak__int64_t_malloc_13_bad
{    int64_t * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)malloc(100*sizeof(int64_t));
data = (int64_t *)malloc(100*sizeof(int64_t))
data
data
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(32,14,0)
(20,27,0)
(15,4,0)
(9,34,0)
(16,27,0)
(4,13,0)
(0,17,0)
(13,30,0)
(11,26,0)
(18,26,0)
(3,24,0)
(27,4,0)
(18,10,0)
(13,4,0)
(2,36,0)
(30,13,0)
(27,21,0)
(31,29,0)
(26,18,0)
(13,6,0)
(7,29,0)
(12,36,0)
(17,6,0)
(5,17,0)
(25,22,0)
(8,14,0)
(35,24,0)
(33,0,0)
(34,4,0)
(17,0,0)
(21,27,0)
(6,17,0)
(36,29,0)
(21,14,0)
(6,13,0)
(23,34,0)
(1,22,0)
(4,14,0)
(28,29,0)
(16,20,1)
(6,17,1)
(9,4,1)
(24,35,1)
(12,2,1)
(22,25,1)
(1,24,1)
(15,24,1)
(20,32,1)
(13,6,1)
(33,5,1)
(11,34,1)
(25,1,1)
(32,18,1)
(0,33,1)
(27,4,1)
(34,23,1)
(26,11,1)
(23,9,1)
(36,12,1)
(17,0,1)
(1,21,1)
(21,27,1)
(4,13,1)
(3,36,1)
(32,34,1)
(19,22,1)
(18,26,1)
(35,3,1)
(34,4,1)
(5,15,1)
(27,16,1)
(13,30,1)
(21,27,2)
(13,24,2)
(27,4,2)
(33,24,2)
(21,24,2)
(20,24,2)
(26,34,2)
(15,24,2)
(9,24,2)
(34,24,2)
(23,24,2)
(5,24,2)
(4,24,2)
(18,34,2)
(18,26,2)
(6,24,2)
(0,24,2)
(13,6,2)
(17,0,2)
(13,30,2)
(27,24,2)
(11,34,2)
(4,13,2)
(16,24,2)
(32,24,2)
(17,24,2)
(6,17,2)
(34,4,2)
-----------------------------------
(0,sizeof(int64_t)
(1,GLOBAL_CONST_FIVE)
(2,data)
(3,GLOBAL_CONST_FIVE)
(4,data = (int64_t *)
(5,100)
(6,malloc(100*sizeof(int64_t)
(7,if(GLOBAL_CONST_FIVE==5)
(8,if (data == NULL)
(9,data)
(10,)
(11,1)
(12,NULL)
(13,(int64_t *)
(14,)
(15,data)
(16,0)
(17,100*sizeof(int64_t)
(18,exit(-1)
(19,RET)
(20,data)
(21,printLongLongLine(data[0])
(22,GLOBAL_CONST_FIVE==5)
(23,NULL)
(24,GLOBAL_CONST_FIVE==5)
(25,5)
(26,-1)
(27,data[0])
(28,if(GLOBAL_CONST_FIVE==5)
(29,)
(30,int64_t *)
(31,data)
(32,L)
(33,int64_t)
(34,data == NULL)
(35,5)
(36,data = NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
