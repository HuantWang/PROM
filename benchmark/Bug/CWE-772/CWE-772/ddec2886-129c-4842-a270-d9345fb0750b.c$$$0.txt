-----label-----
1
-----code-----
void CWE401_Memory_Leak__wchar_t_realloc_21_bad()
{
    wchar_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
30,31
32,33
32,34
34,35
35,36
35,37
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
52,55
53,54
55,56
58,59
59,60
59,61
60,61
62,63
64,65
65,66
65,67
66,67
69,70
70,71
70,72
71,72
73,74
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,33,36,37,41,43,48,50,54,56,57,61,63,67,68,72,74
-----computeFrom-----
13,14
13,15
19,20
19,21
32,33
32,34
39,40
39,41
65,66
65,67
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__wchar_t_realloc_21_bad(){    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__wchar_t_realloc_21_bad()
CWE401_Memory_Leak__wchar_t_realloc_21_bad
{    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    badStatic = 1; /* true */    badSink(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t))
data
data
(wchar_t *)realloc(data, 100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, 100*sizeof(wchar_t))
realloc
realloc
data
data
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(10,14,0)
(16,14,0)
(18,5,0)
(0,25,0)
(30,0,0)
(14,16,0)
(7,19,0)
(9,25,0)
(28,19,0)
(17,16,0)
(26,25,0)
(27,8,0)
(6,2,0)
(24,25,0)
(22,23,0)
(23,25,0)
(20,12,0)
(2,14,0)
(21,6,0)
(29,24,0)
(1,2,0)
(13,24,0)
(15,26,0)
(18,8,0)
(12,25,0)
(2,6,0)
(26,23,0)
(8,18,0)
(23,16,0)
(0,23,0)
(16,17,0)
(19,23,0)
(14,2,0)
(14,12,0)
(3,12,0)
(11,25,0)
(16,23,0)
(10,22,1)
(2,6,1)
(23,16,1)
(6,21,1)
(0,23,1)
(12,3,1)
(4,26,1)
(22,12,1)
(14,2,1)
(26,23,1)
(7,28,1)
(30,18,1)
(26,15,1)
(27,19,1)
(15,24,1)
(16,14,1)
(0,30,1)
(21,1,1)
(19,7,1)
(18,8,1)
(13,0,1)
(28,23,1)
(29,13,1)
(1,10,1)
(30,19,1)
(19,23,1)
(16,17,1)
(8,27,1)
(24,29,1)
(14,12,1)
(3,20,1)
(16,17,2)
(14,2,2)
(2,6,2)
(8,19,2)
(19,23,2)
(0,23,2)
(23,16,2)
(26,23,2)
(14,12,2)
(18,8,2)
(27,19,2)
(16,14,2)
(18,19,2)
-----------------------------------
(0,printWLine(data)
(1,100)
(2,100*sizeof(wchar_t)
(3,NULL)
(4,RET)
(5,)
(6,sizeof(wchar_t)
(7,NULL)
(8,-1)
(9,if (data == NULL)
(10,data)
(11,data)
(12,data = NULL)
(13,badStatic)
(14,realloc(data, 100*sizeof(wchar_t)
(15,data)
(16,(wchar_t *)
(17,wchar_t *)
(18,exit(-1)
(19,data == NULL)
(20,data)
(21,wchar_t)
(22,data)
(23,data = (wchar_t *)
(24,badStatic = 1)
(25,)
(26,badSink(data)
(27,1)
(28,data)
(29,1)
(30,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
