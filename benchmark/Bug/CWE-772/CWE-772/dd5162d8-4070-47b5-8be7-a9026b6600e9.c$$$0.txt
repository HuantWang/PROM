-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_realloc_03_bad()
{
    int64_t * data;
    data = NULL;
    if(5==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)realloc(data, 100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(5==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
37,38
39,40
39,41
41,42
42,43
42,44
43,44
46,47
46,48
47,48
47,49
48,49
50,51
52,53
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
61,62
61,63
62,63
66,67
67,68
67,69
68,69
70,71
70,72
71,72
74,75
74,76
75,76
75,77
78,79
-----nextToken-----
2,4,9,11,12,16,18,21,22,27,31,33,36,38,40,44,45,49,51,56,58,63,64,65,69,72,73,76,77,79
-----computeFrom-----
14,15
14,16
20,21
20,22
25,26
25,27
39,40
39,41
47,48
47,49
60,61
60,62
75,76
75,77
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_realloc_03_bad(){    int64_t * data;    data = NULL;    if(5==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(5==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_realloc_03_bad()
CWE401_Memory_Leak__int64_t_realloc_03_bad
{    int64_t * data;    data = NULL;    if(5==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(5==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(5==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
5==5
5
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)realloc(data, 100*sizeof(int64_t));
data = (int64_t *)realloc(data, 100*sizeof(int64_t))
data
data
(int64_t *)realloc(data, 100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, 100*sizeof(int64_t))
realloc
realloc
data
data
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
5==5
5
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(20,16,0)
(34,12,0)
(19,4,0)
(6,18,0)
(8,16,0)
(31,8,0)
(13,29,0)
(14,6,0)
(10,16,0)
(29,4,0)
(28,4,0)
(3,25,0)
(6,8,0)
(28,2,0)
(30,12,0)
(4,15,0)
(5,24,0)
(17,4,0)
(36,29,0)
(23,24,0)
(11,17,0)
(17,32,0)
(3,33,0)
(22,15,0)
(2,28,0)
(6,28,0)
(4,28,0)
(32,15,0)
(26,15,0)
(32,17,0)
(28,6,0)
(18,37,0)
(21,25,0)
(0,37,0)
(18,6,0)
(35,18,0)
(25,3,0)
(9,17,0)
(7,16,0)
(27,8,0)
(37,18,0)
(29,4,1)
(30,34,1)
(3,25,1)
(17,4,1)
(36,4,1)
(18,37,1)
(11,9,1)
(27,31,1)
(1,12,1)
(14,19,1)
(23,8,1)
(25,21,1)
(13,36,1)
(19,24,1)
(37,0,1)
(6,18,1)
(24,5,1)
(34,24,1)
(34,32,1)
(28,2,1)
(29,13,1)
(4,28,1)
(8,27,1)
(17,11,1)
(21,29,1)
(35,14,1)
(5,23,1)
(0,35,1)
(12,30,1)
(28,6,1)
(32,17,1)
(22,29,1)
(22,3,1)
(9,22,1)
(6,8,1)
(6,8,2)
(19,24,2)
(29,4,2)
(28,2,2)
(21,29,2)
(4,24,2)
(36,24,2)
(0,24,2)
(13,24,2)
(6,24,2)
(18,24,2)
(11,24,2)
(17,24,2)
(35,24,2)
(3,29,2)
(25,29,2)
(17,4,2)
(3,25,2)
(22,24,2)
(29,24,2)
(4,28,2)
(32,17,2)
(32,24,2)
(6,18,2)
(9,24,2)
(28,24,2)
(18,37,2)
(28,6,2)
(37,24,2)
(14,24,2)
-----------------------------------
(0,int64_t)
(1,RET)
(2,int64_t *)
(3,exit(-1)
(4,data = (int64_t *)
(5,5)
(6,realloc(data, 100*sizeof(int64_t)
(7,data)
(8,data = NULL)
(9,data)
(10,if(5==5)
(11,0)
(12,5==5)
(13,NULL)
(14,data)
(15,)
(16,)
(17,data[0])
(18,100*sizeof(int64_t)
(19,data)
(20,if(5==5)
(21,1)
(22,L)
(23,5)
(24,5==5)
(25,-1)
(26,if (data == NULL)
(27,NULL)
(28,(int64_t *)
(29,data == NULL)
(30,5)
(31,data)
(32,printLongLongLine(data[0])
(33,)
(34,5)
(35,100)
(36,data)
(37,sizeof(int64_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
