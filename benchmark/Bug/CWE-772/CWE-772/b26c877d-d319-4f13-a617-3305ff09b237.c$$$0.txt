-----label-----
1
-----code-----
void CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_03_bad()
{
    FILE * data;
    data = NULL;
    /* POTENTIAL FLAW: Open a file without closing it */
    data = fopen("BadSource_fopen.txt", "w+");
    if(5==5)
    {
        /* FLAW: No attempt to close the file */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
24,25
28,29
28,30
29,30
29,31
32,33
-----nextToken-----
2,4,9,11,12,16,18,22,25,26,27,30,31,33
-----computeFrom-----
14,15
14,16
20,21
20,22
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_03_bad(){    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Open a file without closing it */    data = fopen("BadSource_fopen.txt", "w+");    if(5==5)    {        /* FLAW: No attempt to close the file */        ; /* empty statement needed for some flow variants */    }}
void
CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_03_bad()
CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_03_bad
{    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Open a file without closing it */    data = fopen("BadSource_fopen.txt", "w+");    if(5==5)    {        /* FLAW: No attempt to close the file */        ; /* empty statement needed for some flow variants */    }}
FILE * data;
FILE * data;
FILE
FILE
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = fopen("BadSource_fopen.txt", "w+");
data = fopen("BadSource_fopen.txt", "w+")
data
data
fopen("BadSource_fopen.txt", "w+")
fopen
fopen
"BadSource_fopen.txt"
"w+"
if(5==5)    {        /* FLAW: No attempt to close the file */        ; /* empty statement needed for some flow variants */    }
5==5
5
5
{        /* FLAW: No attempt to close the file */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(10,0,0)
(11,8,0)
(13,14,0)
(14,7,0)
(1,8,0)
(7,5,0)
(4,5,0)
(2,14,0)
(7,14,0)
(6,0,0)
(12,5,0)
(9,7,0)
(0,5,0)
(11,7,1)
(2,9,1)
(13,2,1)
(7,14,1)
(1,11,1)
(0,6,1)
(14,13,1)
(8,1,1)
(9,0,1)
(6,10,1)
(3,8,1)
(7,14,2)
-----------------------------------
(0,data = NULL)
(1,5)
(2,"BadSource_fopen.txt")
(3,RET)
(4,data)
(5,)
(6,NULL)
(7,data = fopen("BadSource_fopen.txt", "w+")
(8,5==5)
(9,data)
(10,data)
(11,5)
(12,if(5==5)
(13,"w+")
(14,fopen("BadSource_fopen.txt", "w+")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
