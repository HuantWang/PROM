-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_realloc_09_bad()
{
    int * data;
    data = NULL;
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int *)realloc(data, 100*sizeof(int));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5;
        printIntLine(data[0]);
    }
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
21,22
21,23
21,24
21,25
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
29,30
31,32
31,33
31,34
32,33
34,35
36,37
36,38
38,39
39,40
39,41
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
57,59
58,59
62,63
63,64
63,65
64,65
66,67
66,68
67,68
70,71
70,72
71,72
73,74
-----nextToken-----
2,4,8,10,11,15,17,20,25,28,30,33,35,37,40,41,45,47,52,54,59,60,61,65,68,69,72,74
-----computeFrom-----
13,14
13,15
23,24
23,25
36,37
36,38
43,44
43,45
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int_realloc_09_bad(){    int * data;    data = NULL;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)realloc(data, 100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int_realloc_09_bad()
CWE401_Memory_Leak__int_realloc_09_bad
{    int * data;    data = NULL;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)realloc(data, 100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)realloc(data, 100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)realloc(data, 100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }
data = (int *)realloc(data, 100*sizeof(int));
data = (int *)realloc(data, 100*sizeof(int))
data
data
(int *)realloc(data, 100*sizeof(int))
int *
int
*
*
realloc(data, 100*sizeof(int))
realloc
realloc
data
data
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(11,8,0)
(11,2,0)
(13,14,0)
(26,5,0)
(2,27,0)
(7,18,0)
(3,13,0)
(14,9,0)
(17,19,0)
(19,2,0)
(37,35,0)
(20,15,0)
(30,2,0)
(20,27,0)
(28,11,0)
(4,15,0)
(5,26,0)
(6,26,0)
(37,16,0)
(29,35,0)
(34,8,0)
(15,2,0)
(24,19,0)
(14,13,0)
(26,35,0)
(35,18,0)
(33,12,0)
(2,37,0)
(31,18,0)
(25,12,0)
(37,2,0)
(0,12,0)
(22,15,0)
(23,27,0)
(18,12,0)
(15,8,0)
(15,20,0)
(16,37,0)
(21,11,0)
(35,26,0)
(10,5,0)
(35,37,0)
(8,27,0)
(11,28,1)
(21,19,1)
(20,15,1)
(4,22,1)
(11,2,1)
(6,29,1)
(19,2,1)
(18,31,1)
(30,1,1)
(35,26,1)
(29,30,1)
(24,2,1)
(37,35,1)
(35,18,1)
(15,8,1)
(5,10,1)
(2,37,1)
(32,36,1)
(21,14,1)
(36,20,1)
(36,1,1)
(8,34,1)
(10,6,1)
(15,4,1)
(1,18,1)
(3,19,1)
(14,13,1)
(13,3,1)
(26,5,1)
(28,21,1)
(34,11,1)
(15,2,1)
(31,7,1)
(19,17,1)
(37,16,1)
(22,8,1)
(17,24,1)
(17,1,2)
(22,1,2)
(21,1,2)
(11,2,2)
(8,1,2)
(2,1,2)
(14,13,2)
(5,1,2)
(35,1,2)
(3,19,2)
(15,8,2)
(15,1,2)
(37,16,2)
(34,1,2)
(13,19,2)
(11,1,2)
(29,1,2)
(19,1,2)
(35,18,2)
(35,26,2)
(24,1,2)
(30,1,2)
(14,19,2)
(10,1,2)
(37,1,2)
(26,1,2)
(26,5,2)
(4,1,2)
(6,1,2)
(2,37,2)
(19,2,2)
(15,2,2)
(28,1,2)
(20,1,2)
(37,35,2)
(20,15,2)
-----------------------------------
(0,data)
(1,GLOBAL_CONST_TRUE)
(2,data = (int *)
(3,1)
(4,0)
(5,sizeof(int)
(6,100)
(7,data)
(8,data[0] = 5)
(9,)
(10,int)
(11,data[0])
(12,)
(13,-1)
(14,exit(-1)
(15,data[0])
(16,int *)
(17,NULL)
(18,data = NULL)
(19,data == NULL)
(20,printIntLine(data[0])
(21,data)
(22,data)
(23,if (data == NULL)
(24,data)
(25,if(GLOBAL_CONST_TRUE)
(26,100*sizeof(int)
(27,)
(28,0)
(29,data)
(30,data)
(31,NULL)
(32,RET)
(33,if(GLOBAL_CONST_TRUE)
(34,5)
(35,realloc(data, 100*sizeof(int)
(36,GLOBAL_CONST_TRUE)
(37,(int *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
