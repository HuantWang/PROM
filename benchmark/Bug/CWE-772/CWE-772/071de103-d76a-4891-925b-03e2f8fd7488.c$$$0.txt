-----label-----
1
-----code-----
void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_41_bad()
{
    struct _twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
39,40
39,41
40,41
40,42
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
54,56
55,56
55,57
56,57
61,62
62,63
62,64
63,64
63,65
64,65
64,66
65,66
70,71
71,72
71,73
72,73
74,75
74,76
75,76
75,77
76,77
78,79
80,81
81,82
81,83
82,83
85,86
86,87
86,88
87,88
89,90
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,37,38,42,44,49,51,57,58,59,60,66,67,68,69,73,77,79,83,84,88,90
-----computeFrom-----
14,15
14,16
20,21
20,22
32,33
32,34
40,41
40,42
53,54
53,55
62,63
62,64
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_41_bad(){    struct _twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    badSink(data);}
void
CWE401_Memory_Leak__struct_twoIntsStruct_malloc_41_bad()
CWE401_Memory_Leak__struct_twoIntsStruct_malloc_41_bad
{    struct _twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    badSink(data);}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
malloc(100*sizeof(struct _twoIntsStruct))
malloc
malloc
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(45,31,0)
(31,45,0)
(38,19,0)
(29,5,0)
(36,29,0)
(32,28,0)
(37,42,0)
(16,21,0)
(37,13,0)
(27,34,0)
(28,13,0)
(4,12,0)
(12,30,0)
(0,19,0)
(1,7,0)
(18,20,0)
(14,5,0)
(31,13,0)
(15,34,0)
(3,23,0)
(17,39,0)
(30,12,0)
(7,1,0)
(45,10,0)
(42,37,0)
(12,17,0)
(44,20,0)
(10,5,0)
(30,37,0)
(19,33,0)
(20,5,0)
(23,35,0)
(41,13,0)
(22,36,0)
(36,22,0)
(40,45,0)
(34,13,0)
(37,30,0)
(35,36,0)
(33,19,0)
(36,35,0)
(29,36,0)
(43,23,0)
(6,10,0)
(23,13,0)
(1,8,0)
(13,37,0)
(21,5,0)
(17,12,0)
(2,31,0)
(11,33,0)
(26,31,0)
(33,21,0)
(35,23,0)
(19,13,0)
(25,5,0)
(9,7,0)
(13,5,0)
(28,5,0)
(39,17,0)
(17,39,1)
(3,10,1)
(27,13,1)
(31,13,1)
(6,45,1)
(28,13,1)
(20,44,1)
(44,18,1)
(35,23,1)
(41,20,1)
(2,21,1)
(29,36,1)
(32,29,1)
(12,17,1)
(30,12,1)
(38,1,1)
(13,37,1)
(33,19,1)
(26,2,1)
(19,13,1)
(37,42,1)
(36,35,1)
(34,13,1)
(28,32,1)
(40,31,1)
(34,15,1)
(36,22,1)
(9,34,1)
(43,3,1)
(7,9,1)
(23,13,1)
(38,34,1)
(4,41,1)
(0,38,1)
(17,4,1)
(31,26,1)
(1,7,1)
(33,11,1)
(23,43,1)
(45,31,1)
(11,19,1)
(21,16,1)
(37,30,1)
(24,28,1)
(15,27,1)
(45,40,1)
(10,6,1)
(19,0,1)
(16,33,1)
(23,13,2)
(45,31,2)
(36,22,2)
(31,13,2)
(7,34,2)
(30,12,2)
(1,34,2)
(12,17,2)
(37,42,2)
(17,39,2)
(9,34,2)
(28,13,2)
(36,35,2)
(33,19,2)
(1,7,2)
(19,13,2)
(35,23,2)
(37,30,2)
(29,36,2)
(34,13,2)
(13,37,2)
-----------------------------------
(0,0)
(1,exit(-1)
(2,data)
(3,data)
(4,100)
(5,)
(6,0)
(7,-1)
(8,)
(9,1)
(10,data[0].intTwo = 0)
(11,intOne)
(12,100*sizeof(struct _twoIntsStruct)
(13,data = (struct _twoIntsStruct *)
(14,data)
(15,NULL)
(16,0)
(17,sizeof(struct _twoIntsStruct)
(18,data)
(19,data[0])
(20,data = NULL)
(21,data[0].intOne = 0)
(22,twoIntsStruct *)
(23,data[0])
(24,RET)
(25,if (data == NULL)
(26,0)
(27,data)
(28,badSink(data)
(29,printStructLine((twoIntsStruct *)
(30,malloc(100*sizeof(struct _twoIntsStruct)
(31,data[0])
(32,data)
(33,data[0].intOne)
(34,data == NULL)
(35,&data[0])
(36,(twoIntsStruct *)
(37,(struct _twoIntsStruct *)
(38,data)
(39,struct _twoIntsStruct)
(40,intTwo)
(41,data)
(42,struct _twoIntsStruct *)
(43,0)
(44,NULL)
(45,data[0].intTwo)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
