-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_15_bad()
{
    switch(6)
    {
    case 6:
    {
        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
        /* FLAW: If realloc() fails, the initial memory block will not be freed() */
        data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
        if (data != NULL)
        {
            /* Reinitialize and make use of data */
            data[0] = 10LL;
            printLongLongLine(data[0]);
            free(data);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
8,9
8,10
8,11
8,12
8,13
8,14
9,10
11,12
11,13
11,14
11,15
11,16
11,17
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
20,22
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
29,31
31,32
32,33
32,34
33,34
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
51,53
52,53
56,57
57,58
57,59
58,59
60,61
60,62
61,62
64,65
65,66
65,67
66,67
68,69
68,70
69,70
69,71
70,71
72,73
74,75
74,76
74,77
75,76
77,78
79,80
79,81
80,81
82,83
83,84
83,85
84,85
87,88
87,89
88,89
88,90
89,90
91,92
93,94
93,95
93,96
94,95
95,96
95,97
96,97
96,98
97,98
101,102
102,103
102,104
103,104
105,106
105,107
106,107
109,110
110,111
110,112
111,112
113,114
117,118
118,119
118,120
119,120
-----nextToken-----
2,4,7,10,15,17,18,23,25,28,30,34,35,39,41,46,48,53,54,55,59,62,63,67,71,73,76,78,81,85,86,90,92,98,99,100,104,107,108,112,114,115,116,120,121,122
-----computeFrom-----
29,30
29,31
37,38
37,39
50,51
50,52
65,66
65,67
79,80
79,81
88,89
88,90
95,96
95,97
-----guardedBy-----
90,114
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_15_bad(){    switch(6)    {    case 6:    {        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));        if (data != NULL)        {            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);            free(data);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
void
CWE401_Memory_Leak__malloc_realloc_int64_t_15_bad()
CWE401_Memory_Leak__malloc_realloc_int64_t_15_bad
{    switch(6)    {    case 6:    {        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));        if (data != NULL)        {            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);            free(data);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
switch(6)    {    case 6:    {        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));        if (data != NULL)        {            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);            free(data);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));        if (data != NULL)        {            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);            free(data);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));        if (data != NULL)        {            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);            free(data);        }    }
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t
int64_t
* data = (int64_t *)malloc(100*sizeof(int64_t))
*
data
= (int64_t *)malloc(100*sizeof(int64_t))
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t))
data
data
(int64_t *)realloc(data, (130000)*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, (130000)*sizeof(int64_t))
realloc
realloc
data
data
(130000)*sizeof(int64_t)
(130000)
130000
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data != NULL)        {            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);            free(data);        }
data != NULL
data
data
NULL
NULL
{            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);            free(data);        }
data[0] = 10LL;
data[0] = 10LL
data[0]
data
data
0
10LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
-----joern-----
(56,16,0)
(34,38,0)
(0,10,0)
(23,5,0)
(53,49,0)
(11,12,0)
(13,31,0)
(50,25,0)
(25,37,0)
(17,37,0)
(6,32,0)
(41,19,0)
(15,16,0)
(45,14,0)
(42,36,0)
(8,27,0)
(24,25,0)
(42,25,0)
(36,31,0)
(22,37,0)
(26,10,0)
(39,27,0)
(30,38,0)
(1,10,0)
(19,37,0)
(35,37,0)
(27,8,0)
(55,53,0)
(51,14,0)
(29,41,0)
(46,41,0)
(9,50,0)
(49,53,0)
(38,30,0)
(31,36,0)
(44,36,0)
(53,25,0)
(7,37,0)
(20,50,0)
(3,10,0)
(52,28,0)
(4,10,0)
(38,49,0)
(14,25,0)
(52,42,0)
(28,52,0)
(40,30,0)
(42,52,0)
(37,10,0)
(47,41,0)
(2,26,0)
(41,29,0)
(12,5,0)
(18,42,0)
(36,42,0)
(25,53,0)
(19,52,0)
(8,43,0)
(49,38,0)
(21,37,0)
(53,55,0)
(29,5,0)
(16,19,0)
(50,7,0)
(7,50,0)
(12,19,0)
(52,19,0)
(48,19,0)
(2,54,1)
(48,7,1)
(42,25,1)
(12,19,1)
(19,52,1)
(50,9,1)
(27,39,1)
(53,49,1)
(46,23,1)
(35,8,1)
(12,11,1)
(38,30,1)
(13,44,1)
(41,19,1)
(14,45,1)
(20,35,1)
(35,14,1)
(29,41,1)
(18,48,1)
(47,46,1)
(11,29,1)
(51,25,1)
(36,31,1)
(16,56,1)
(33,4,1)
(23,16,1)
(52,28,1)
(9,20,1)
(40,34,1)
(49,38,1)
(14,25,1)
(25,53,1)
(24,54,1)
(7,50,1)
(15,19,1)
(33,1,1)
(56,15,1)
(53,55,1)
(42,36,1)
(31,13,1)
(45,51,1)
(41,47,1)
(26,2,1)
(4,16,1)
(50,25,1)
(30,40,1)
(16,19,1)
(4,12,1)
(34,24,1)
(44,18,1)
(8,27,1)
(1,26,1)
(39,14,1)
(52,42,1)
(29,41,2)
(45,54,2)
(49,38,2)
(36,31,2)
(35,54,2)
(27,14,2)
(19,54,2)
(1,54,2)
(14,54,2)
(25,53,2)
(26,54,2)
(50,54,2)
(42,25,2)
(34,54,2)
(24,54,2)
(12,19,2)
(47,16,2)
(23,16,2)
(25,54,2)
(15,54,2)
(16,54,2)
(31,54,2)
(53,49,2)
(44,54,2)
(46,16,2)
(30,54,2)
(16,19,2)
(12,16,2)
(38,54,2)
(29,16,2)
(2,54,2)
(53,55,2)
(52,28,2)
(38,30,2)
(8,27,2)
(4,54,2)
(48,54,2)
(52,42,2)
(7,50,2)
(52,54,2)
(11,16,2)
(18,54,2)
(7,54,2)
(41,16,2)
(40,54,2)
(36,54,2)
(51,54,2)
(8,14,2)
(9,54,2)
(42,36,2)
(41,19,2)
(39,14,2)
(14,25,2)
(53,54,2)
(50,25,2)
(42,54,2)
(13,54,2)
(20,54,2)
(49,54,2)
(19,52,2)
(56,54,2)
-----------------------------------
(0,case 6:)
(1,break;)
(2,"Benign, fixed string")
(3,default:)
(4,break;)
(5,)
(6,switch(6)
(7,printLongLongLine(data[0])
(8,exit(-1)
(9,0)
(10,)
(11,data)
(12,free(data)
(13,int64_t)
(14,data == NULL)
(15,data)
(16,data != NULL)
(17,if (data == NULL)
(18,data)
(19,data = (int64_t *)
(20,data)
(21,if (data != NULL)
(22,data)
(23,L)
(24,data)
(25,* data = (int64_t *)
(26,printLine("Benign, fixed string")
(27,-1)
(28,int64_t *)
(29,printLongLongLine(data[0])
(30,sizeof(int64_t)
(31,sizeof(int64_t)
(32,)
(33,RET)
(34,100)
(35,L)
(36,(130000)
(37,)
(38,100*sizeof(int64_t)
(39,1)
(40,int64_t)
(41,data[0])
(42,realloc(data, (130000)
(43,)
(44,130000)
(45,NULL)
(46,data)
(47,0)
(48,data)
(49,malloc(100*sizeof(int64_t)
(50,data[0])
(51,data)
(52,(int64_t *)
(53,(int64_t *)
(54,6)
(55,int64_t *)
(56,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
