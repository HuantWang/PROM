-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_realloc_13_bad()
{
    int * data;
    data = NULL;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int *)realloc(data, 100*sizeof(int));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5;
        printIntLine(data[0]);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
33,36
34,35
36,37
38,39
38,40
40,41
41,42
41,43
44,45
44,46
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
59,60
59,61
60,61
64,65
65,66
65,67
66,67
68,69
68,70
69,70
72,73
72,74
73,74
73,75
74,75
77,78
-----nextToken-----
2,4,8,10,11,15,17,21,22,27,30,32,35,37,39,42,43,47,49,54,56,61,62,63,67,70,71,75,76,78
-----computeFrom-----
13,14
13,15
19,20
19,21
25,26
25,27
38,39
38,40
45,46
45,47
58,59
58,60
73,74
73,75
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int_realloc_13_bad(){    int * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)realloc(data, 100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int_realloc_13_bad()
CWE401_Memory_Leak__int_realloc_13_bad
{    int * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)realloc(data, 100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)realloc(data, 100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)realloc(data, 100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }
data = (int *)realloc(data, 100*sizeof(int));
data = (int *)realloc(data, 100*sizeof(int))
data
data
(int *)realloc(data, 100*sizeof(int))
int *
int
*
*
realloc(data, 100*sizeof(int))
realloc
realloc
data
data
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(7,32,0)
(35,21,0)
(1,32,0)
(14,8,0)
(5,16,0)
(12,3,0)
(41,19,0)
(33,8,0)
(1,10,0)
(10,21,0)
(22,16,0)
(35,22,0)
(24,35,0)
(25,35,0)
(39,26,0)
(27,41,0)
(19,41,0)
(17,13,0)
(36,41,0)
(19,16,0)
(12,23,0)
(18,13,0)
(16,5,0)
(16,22,0)
(4,6,0)
(3,12,0)
(22,32,0)
(40,10,0)
(10,22,0)
(28,9,0)
(9,22,0)
(8,26,0)
(11,26,0)
(10,1,0)
(16,19,0)
(2,21,0)
(21,32,0)
(41,36,0)
(29,3,0)
(34,9,0)
(15,22,0)
(0,36,0)
(19,8,0)
(30,6,0)
(20,26,0)
(38,10,0)
(31,19,0)
(21,2,1)
(9,22,1)
(27,31,1)
(18,1,1)
(37,13,1)
(36,0,1)
(8,33,1)
(16,5,1)
(0,27,1)
(24,9,1)
(10,21,1)
(10,38,1)
(6,30,1)
(19,41,1)
(40,21,1)
(33,14,1)
(12,3,1)
(24,12,1)
(18,6,1)
(30,4,1)
(25,24,1)
(1,10,1)
(34,22,1)
(16,19,1)
(38,40,1)
(35,25,1)
(9,28,1)
(35,22,1)
(41,36,1)
(4,8,1)
(3,29,1)
(13,17,1)
(19,8,1)
(17,18,1)
(2,35,1)
(31,15,1)
(22,16,1)
(28,34,1)
(29,9,1)
(10,22,1)
(15,6,1)
(31,6,2)
(12,3,2)
(29,9,2)
(27,6,2)
(21,6,2)
(12,9,2)
(0,6,2)
(40,6,2)
(34,6,2)
(41,6,2)
(38,6,2)
(10,6,2)
(1,6,2)
(19,8,2)
(16,19,2)
(9,6,2)
(19,6,2)
(25,6,2)
(10,22,2)
(24,6,2)
(16,5,2)
(22,6,2)
(28,6,2)
(3,9,2)
(41,36,2)
(35,6,2)
(9,22,2)
(10,21,2)
(36,6,2)
(19,41,2)
(35,22,2)
(1,10,2)
(2,6,2)
(15,6,2)
(22,16,2)
(16,6,2)
-----------------------------------
(0,int)
(1,printIntLine(data[0])
(2,5)
(3,-1)
(4,GLOBAL_CONST_FIVE)
(5,int *)
(6,GLOBAL_CONST_FIVE==5)
(7,if (data == NULL)
(8,data = NULL)
(9,data == NULL)
(10,data[0])
(11,if(GLOBAL_CONST_FIVE==5)
(12,exit(-1)
(13,GLOBAL_CONST_FIVE==5)
(14,data)
(15,data)
(16,(int *)
(17,5)
(18,GLOBAL_CONST_FIVE)
(19,realloc(data, 100*sizeof(int)
(20,if(GLOBAL_CONST_FIVE==5)
(21,data[0] = 5)
(22,data = (int *)
(23,)
(24,data)
(25,0)
(26,)
(27,100)
(28,NULL)
(29,1)
(30,5)
(31,data)
(32,)
(33,NULL)
(34,data)
(35,data[0])
(36,sizeof(int)
(37,RET)
(38,0)
(39,data)
(40,data)
(41,100*sizeof(int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
