-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_malloc_21_bad()
{
    twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
39,40
39,41
40,41
40,42
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
54,56
55,56
55,57
56,57
61,62
62,63
62,64
63,64
63,65
64,65
64,66
65,66
70,71
71,72
71,73
72,73
74,75
75,76
75,77
76,77
79,80
80,81
80,82
81,82
84,85
85,86
85,87
86,87
88,89
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,37,38,42,44,49,51,57,58,59,60,66,67,68,69,73,77,78,82,83,87,89
-----computeFrom-----
14,15
14,16
20,21
20,22
32,33
32,34
40,41
40,42
53,54
53,55
62,63
62,64
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_malloc_21_bad(){    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__twoIntsStruct_malloc_21_bad()
CWE401_Memory_Leak__twoIntsStruct_malloc_21_bad
{    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    badStatic = 1; /* true */    badSink(data);}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)malloc(100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
malloc(100*sizeof(twoIntsStruct))
malloc
malloc
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(8,31,0)
(10,35,0)
(39,28,0)
(31,8,0)
(1,26,0)
(29,4,0)
(9,10,0)
(43,21,0)
(36,28,0)
(30,21,0)
(19,26,0)
(7,28,0)
(6,27,0)
(0,16,0)
(46,28,0)
(3,16,0)
(27,37,0)
(20,23,0)
(24,45,0)
(33,21,0)
(14,39,0)
(40,36,0)
(16,28,0)
(40,45,0)
(45,40,0)
(23,21,0)
(15,28,0)
(4,39,0)
(31,25,0)
(25,31,0)
(41,35,0)
(2,25,0)
(27,6,0)
(36,40,0)
(18,33,0)
(13,33,0)
(8,43,0)
(34,30,0)
(38,30,0)
(35,28,0)
(22,7,0)
(4,33,0)
(26,28,0)
(23,10,0)
(21,43,0)
(12,31,0)
(45,21,0)
(17,23,0)
(44,43,0)
(43,44,0)
(42,45,0)
(11,21,0)
(7,21,0)
(43,8,0)
(33,4,0)
(21,28,0)
(10,23,0)
(32,6,0)
(20,30,1)
(4,29,1)
(30,21,1)
(8,31,1)
(10,23,1)
(18,35,1)
(13,18,1)
(26,19,1)
(27,6,1)
(35,41,1)
(43,44,1)
(19,1,1)
(31,25,1)
(16,3,1)
(33,21,1)
(40,45,1)
(14,4,1)
(43,8,1)
(34,21,1)
(32,30,1)
(17,20,1)
(2,12,1)
(7,21,1)
(5,7,1)
(6,32,1)
(3,0,1)
(45,21,1)
(38,34,1)
(41,10,1)
(12,11,1)
(30,38,1)
(11,16,1)
(42,24,1)
(10,9,1)
(39,14,1)
(29,33,1)
(20,27,1)
(7,22,1)
(22,26,1)
(23,17,1)
(25,2,1)
(9,23,1)
(21,43,1)
(4,33,1)
(23,21,1)
(36,40,1)
(1,36,1)
(45,42,1)
(24,39,1)
(33,13,1)
(27,30,2)
(33,21,2)
(8,31,2)
(23,21,2)
(10,23,2)
(43,44,2)
(27,6,2)
(30,21,2)
(40,45,2)
(21,43,2)
(4,33,2)
(7,21,2)
(31,25,2)
(43,8,2)
(36,40,2)
(45,21,2)
(6,30,2)
(32,30,2)
-----------------------------------
(0,data)
(1,badStatic)
(2,twoIntsStruct)
(3,NULL)
(4,data[0].intTwo)
(5,RET)
(6,-1)
(7,badSink(data)
(8,malloc(100*sizeof(twoIntsStruct)
(9,intOne)
(10,data[0].intOne)
(11,data)
(12,100)
(13,0)
(14,0)
(15,if (data == NULL)
(16,data = NULL)
(17,0)
(18,data)
(19,1)
(20,data)
(21,data = (twoIntsStruct *)
(22,data)
(23,data[0])
(24,data)
(25,sizeof(twoIntsStruct)
(26,badStatic = 1)
(27,exit(-1)
(28,)
(29,intTwo)
(30,data == NULL)
(31,100*sizeof(twoIntsStruct)
(32,1)
(33,data[0])
(34,data)
(35,data[0].intOne = 0)
(36,printStructLine(&data[0])
(37,)
(38,NULL)
(39,data[0].intTwo = 0)
(40,&data[0])
(41,0)
(42,0)
(43,(twoIntsStruct *)
(44,twoIntsStruct *)
(45,data[0])
(46,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
