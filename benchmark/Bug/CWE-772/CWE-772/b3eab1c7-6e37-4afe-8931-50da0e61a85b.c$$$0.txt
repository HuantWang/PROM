-----label-----
1
-----code-----
void CWE401_Memory_Leak__char_malloc_67_bad()
{
    char * data;
    CWE401_Memory_Leak__char_malloc_67_structType myStruct;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (char *)malloc(100*sizeof(char));
    /* Initialize and make use of data */
    strcpy(data, "A String");
    printLine(data);
    myStruct.structFirst = data;
    CWE401_Memory_Leak__char_malloc_67b_badSink(myStruct);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
42,43
43,44
43,45
43,46
44,45
46,47
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
57,59
58,59
61,62
63,64
64,65
64,66
65,66
67,68
-----nextToken-----
2,4,8,10,11,15,17,21,23,27,30,32,35,37,40,41,45,47,48,52,54,59,60,62,66,68
-----computeFrom-----
19,20
19,21
25,26
25,27
36,37
36,38
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__char_malloc_67_bad(){    char * data;    CWE401_Memory_Leak__char_malloc_67_structType myStruct;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)malloc(100*sizeof(char));    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    myStruct.structFirst = data;    CWE401_Memory_Leak__char_malloc_67b_badSink(myStruct);}
void
CWE401_Memory_Leak__char_malloc_67_bad()
CWE401_Memory_Leak__char_malloc_67_bad
{    char * data;    CWE401_Memory_Leak__char_malloc_67_structType myStruct;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)malloc(100*sizeof(char));    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    myStruct.structFirst = data;    CWE401_Memory_Leak__char_malloc_67b_badSink(myStruct);}
char * data;
char * data;
char
* data
*
data
CWE401_Memory_Leak__char_malloc_67_structType myStruct;
CWE401_Memory_Leak__char_malloc_67_structType myStruct;
CWE401_Memory_Leak__char_malloc_67_structType
CWE401_Memory_Leak__char_malloc_67_structType
myStruct
myStruct
data = NULL;
data = NULL
data
data
NULL
NULL
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
myStruct.structFirst = data;
myStruct.structFirst = data
myStruct.structFirst
myStruct
myStruct
structFirst
data
data
CWE401_Memory_Leak__char_malloc_67b_badSink(myStruct);
CWE401_Memory_Leak__char_malloc_67b_badSink(myStruct)
CWE401_Memory_Leak__char_malloc_67b_badSink
CWE401_Memory_Leak__char_malloc_67b_badSink
myStruct
myStruct
-----joern-----
(27,21,0)
(22,12,0)
(17,8,0)
(1,21,0)
(18,8,0)
(11,27,0)
(7,6,0)
(25,21,0)
(5,26,0)
(19,2,0)
(3,24,0)
(4,27,0)
(8,24,0)
(2,21,0)
(10,23,0)
(26,6,0)
(23,24,0)
(16,20,0)
(8,18,0)
(26,18,0)
(6,26,0)
(9,21,0)
(18,26,0)
(24,8,0)
(2,24,0)
(15,9,0)
(20,23,0)
(12,21,0)
(23,21,0)
(14,20,0)
(8,17,0)
(24,21,0)
(0,9,0)
(9,24,0)
(11,4,1)
(8,17,1)
(14,2,1)
(23,10,1)
(10,20,1)
(2,19,1)
(3,27,1)
(16,14,1)
(2,24,1)
(24,8,1)
(13,12,1)
(26,6,1)
(15,0,1)
(9,24,1)
(20,16,1)
(18,26,1)
(0,24,1)
(5,3,1)
(6,7,1)
(22,23,1)
(23,24,1)
(19,9,1)
(8,18,1)
(27,11,1)
(7,5,1)
(12,22,1)
(9,15,1)
(2,24,2)
(8,18,2)
(8,17,2)
(23,24,2)
(26,6,2)
(18,26,2)
(9,24,2)
(24,8,2)
-----------------------------------
(0,data)
(1,data)
(2,printLine(data)
(3,data)
(4,data)
(5,100)
(6,sizeof(char)
(7,char)
(8,(char *)
(9,strcpy(data, "A String")
(10,data)
(11,NULL)
(12,CWE401_Memory_Leak__char_malloc_67b_badSink(myStruct)
(13,RET)
(14,myStruct)
(15,"A String")
(16,structFirst)
(17,char *)
(18,malloc(100*sizeof(char)
(19,data)
(20,myStruct.structFirst)
(21,)
(22,myStruct)
(23,myStruct.structFirst = data)
(24,data = (char *)
(25,myStruct)
(26,100*sizeof(char)
(27,data = NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
