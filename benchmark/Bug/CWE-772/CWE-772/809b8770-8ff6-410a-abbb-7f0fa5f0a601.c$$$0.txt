-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_malloc_34_bad()
{
    int64_t * data;
    CWE401_Memory_Leak__int64_t_malloc_34_unionType myUnion;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)malloc(100*sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    myUnion.unionFirst = data;
    {
        int64_t * data = myUnion.unionSecond;
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
60,61
60,62
61,62
65,66
66,67
66,68
67,68
69,70
69,71
70,71
73,74
74,75
74,76
75,76
75,77
76,77
79,80
81,82
81,83
82,83
83,84
83,85
84,85
86,87
86,88
86,89
89,90
90,91
90,92
91,92
-----nextToken-----
2,4,9,11,12,16,18,22,24,28,32,34,37,39,43,44,48,50,55,57,62,63,64,68,71,72,77,78,80,85,87,88,92,93,94
-----computeFrom-----
20,21
20,22
26,27
26,28
38,39
38,40
46,47
46,48
59,60
59,61
74,75
74,76
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_malloc_34_bad(){    int64_t * data;    CWE401_Memory_Leak__int64_t_malloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)malloc(100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    myUnion.unionFirst = data;    {        int64_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_malloc_34_bad()
CWE401_Memory_Leak__int64_t_malloc_34_bad
{    int64_t * data;    CWE401_Memory_Leak__int64_t_malloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)malloc(100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    myUnion.unionFirst = data;    {        int64_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
CWE401_Memory_Leak__int64_t_malloc_34_unionType myUnion;
CWE401_Memory_Leak__int64_t_malloc_34_unionType myUnion;
CWE401_Memory_Leak__int64_t_malloc_34_unionType
CWE401_Memory_Leak__int64_t_malloc_34_unionType
myUnion
myUnion
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)malloc(100*sizeof(int64_t));
data = (int64_t *)malloc(100*sizeof(int64_t))
data
data
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int64_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
int64_t * data = myUnion.unionSecond;
int64_t * data = myUnion.unionSecond;
int64_t
int64_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
;
-----joern-----
(30,39,0)
(37,36,0)
(12,0,0)
(34,36,0)
(15,36,0)
(11,6,0)
(16,39,0)
(40,36,0)
(8,6,0)
(1,30,0)
(22,24,0)
(10,23,0)
(14,15,0)
(4,20,0)
(5,33,0)
(38,3,0)
(35,10,0)
(12,16,0)
(26,29,0)
(3,27,0)
(21,29,0)
(32,6,0)
(29,36,0)
(6,11,0)
(2,39,0)
(9,10,0)
(28,18,0)
(16,12,0)
(15,18,0)
(24,36,0)
(0,12,0)
(13,11,0)
(12,18,0)
(18,36,0)
(11,24,0)
(3,38,0)
(20,18,0)
(25,38,0)
(18,12,0)
(10,18,0)
(7,36,0)
(23,10,0)
(23,36,0)
(31,20,0)
(33,15,0)
(19,33,0)
(39,30,0)
(39,16,0)
(1,2,1)
(5,23,1)
(20,18,1)
(29,26,1)
(23,10,1)
(13,15,1)
(26,21,1)
(19,5,1)
(35,9,1)
(18,12,1)
(28,29,1)
(30,1,1)
(15,14,1)
(38,25,1)
(16,39,1)
(20,4,1)
(32,13,1)
(31,18,1)
(15,18,1)
(17,11,1)
(34,20,1)
(3,38,1)
(14,33,1)
(39,30,1)
(8,32,1)
(10,35,1)
(25,20,1)
(33,19,1)
(4,31,1)
(6,8,1)
(34,3,1)
(11,6,1)
(12,0,1)
(12,16,1)
(9,34,1)
(2,28,1)
(10,18,1)
(39,30,2)
(3,38,2)
(25,20,2)
(12,0,2)
(3,20,2)
(16,39,2)
(15,18,2)
(12,16,2)
(18,12,2)
(38,20,2)
(20,18,2)
(23,10,2)
(10,18,2)
(11,6,2)
-----------------------------------
(0,int64_t *)
(1,int64_t)
(2,100)
(3,exit(-1)
(4,NULL)
(5,myUnion)
(6,myUnion.unionSecond)
(7,data)
(8,unionSecond)
(9,data)
(10,data[0])
(11,* data = myUnion.unionSecond)
(12,(int64_t *)
(13,data)
(14,data)
(15,myUnion.unionFirst = data)
(16,malloc(100*sizeof(int64_t)
(17,RET)
(18,data = (int64_t *)
(19,unionFirst)
(20,data == NULL)
(21,data)
(22,data)
(23,printLongLongLine(data[0])
(24,)
(25,1)
(26,NULL)
(27,)
(28,data)
(29,data = NULL)
(30,sizeof(int64_t)
(31,data)
(32,myUnion)
(33,myUnion.unionFirst)
(34,L)
(35,0)
(36,)
(37,myUnion)
(38,-1)
(39,100*sizeof(int64_t)
(40,if (data == NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
