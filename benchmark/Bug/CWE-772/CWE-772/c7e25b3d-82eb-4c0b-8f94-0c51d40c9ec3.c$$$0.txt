-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_malloc_14_bad()
{
    int64_t * data;
    data = NULL;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)malloc(100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
24,28
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
60,61
60,62
61,62
65,66
66,67
66,68
67,68
69,70
69,71
70,71
73,74
73,75
74,75
74,76
75,76
78,79
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,39,43,44,48,50,55,57,62,63,64,68,71,72,76,77,79
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
38,39
38,40
46,47
46,48
59,60
59,61
74,75
74,76
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_malloc_14_bad(){    int64_t * data;    data = NULL;    if(globalFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(globalFive==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_malloc_14_bad()
CWE401_Memory_Leak__int64_t_malloc_14_bad
{    int64_t * data;    data = NULL;    if(globalFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(globalFive==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(globalFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)malloc(100*sizeof(int64_t));
data = (int64_t *)malloc(100*sizeof(int64_t))
data
data
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(36,12,0)
(2,12,0)
(21,35,0)
(7,13,0)
(36,3,0)
(1,11,0)
(11,22,0)
(33,12,0)
(19,4,0)
(29,34,0)
(32,9,0)
(22,15,0)
(0,11,0)
(22,3,0)
(10,13,0)
(30,18,0)
(17,22,0)
(4,6,0)
(31,15,0)
(31,34,0)
(12,36,0)
(20,13,0)
(12,33,0)
(23,34,0)
(34,31,0)
(3,24,0)
(16,9,0)
(5,33,0)
(27,15,0)
(24,3,0)
(34,22,0)
(4,19,0)
(28,15,0)
(3,36,0)
(3,22,0)
(14,35,0)
(8,19,0)
(26,18,0)
(35,13,0)
(29,23,1)
(34,22,1)
(30,35,1)
(28,11,1)
(22,3,1)
(28,4,1)
(16,32,1)
(23,28,1)
(5,2,1)
(32,18,1)
(19,8,1)
(0,22,1)
(11,1,1)
(3,36,1)
(9,16,1)
(18,26,1)
(36,12,1)
(2,17,1)
(12,33,1)
(33,5,1)
(4,19,1)
(17,18,1)
(31,34,1)
(11,22,1)
(26,30,1)
(25,9,1)
(32,31,1)
(1,0,1)
(35,21,1)
(21,14,1)
(34,29,1)
(8,11,1)
(3,24,1)
(5,18,2)
(31,34,2)
(34,22,2)
(22,18,2)
(11,18,2)
(36,12,2)
(1,18,2)
(33,18,2)
(22,3,2)
(3,18,2)
(11,22,2)
(19,11,2)
(4,19,2)
(0,18,2)
(36,18,2)
(8,11,2)
(3,24,2)
(2,18,2)
(28,18,2)
(12,18,2)
(4,11,2)
(31,18,2)
(34,18,2)
(12,33,2)
(29,18,2)
(17,18,2)
(3,36,2)
(23,18,2)
-----------------------------------
(0,data)
(1,NULL)
(2,100)
(3,(int64_t *)
(4,exit(-1)
(5,int64_t)
(6,)
(7,data)
(8,1)
(9,globalFive==5)
(10,if(globalFive==5)
(11,data == NULL)
(12,100*sizeof(int64_t)
(13,)
(14,data)
(15,)
(16,5)
(17,data)
(18,globalFive==5)
(19,-1)
(20,if(globalFive==5)
(21,NULL)
(22,data = (int64_t *)
(23,data)
(24,int64_t *)
(25,RET)
(26,5)
(27,if (data == NULL)
(28,L)
(29,0)
(30,globalFive)
(31,printLongLongLine(data[0])
(32,globalFive)
(33,sizeof(int64_t)
(34,data[0])
(35,data = NULL)
(36,malloc(100*sizeof(int64_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
