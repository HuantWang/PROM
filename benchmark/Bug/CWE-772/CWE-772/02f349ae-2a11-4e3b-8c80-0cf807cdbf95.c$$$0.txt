-----label-----
1
-----code-----
void CWE401_Memory_Leak__strdup_wchar_t_65_bad()
{
    wchar_t * data;
    /* define a function pointer */
    void (*funcPtr) (wchar_t *) = CWE401_Memory_Leak__strdup_wchar_t_65b_badSink;
    data = NULL;
    {
        wchar_t myString[] = L"myString";
        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */
        data = wcsdup(myString);
        /* Use data */
        printWLine(data);
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
33,35
33,36
34,35
35,36
35,37
37,38
37,39
37,40
40,41
42,43
43,44
43,45
44,45
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
59,60
61,62
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,30,32,36,38,39,41,45,48,50,54,56,60,62
-----computeFrom-----
28,29
28,30
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__strdup_wchar_t_65_bad(){    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = CWE401_Memory_Leak__strdup_wchar_t_65b_badSink;    data = NULL;    {        wchar_t myString[] = L"myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = wcsdup(myString);        /* Use data */        printWLine(data);    }    /* use the function pointer */    funcPtr(data);}
void
CWE401_Memory_Leak__strdup_wchar_t_65_bad()
CWE401_Memory_Leak__strdup_wchar_t_65_bad
{    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = CWE401_Memory_Leak__strdup_wchar_t_65b_badSink;    data = NULL;    {        wchar_t myString[] = L"myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = wcsdup(myString);        /* Use data */        printWLine(data);    }    /* use the function pointer */    funcPtr(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
void (*funcPtr) (wchar_t *) = CWE401_Memory_Leak__strdup_wchar_t_65b_badSink;
void (*funcPtr) (wchar_t *) = CWE401_Memory_Leak__strdup_wchar_t_65b_badSink;
void
(*funcPtr) (wchar_t *) = CWE401_Memory_Leak__strdup_wchar_t_65b_badSink
*funcPtr
*
funcPtr
wchar_t *
wchar_t
*
*

= CWE401_Memory_Leak__strdup_wchar_t_65b_badSink
CWE401_Memory_Leak__strdup_wchar_t_65b_badSink
CWE401_Memory_Leak__strdup_wchar_t_65b_badSink
data = NULL;
data = NULL
data
data
NULL
NULL
{        wchar_t myString[] = L"myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = wcsdup(myString);        /* Use data */        printWLine(data);    }
wchar_t myString[] = L"myString";
wchar_t myString[] = L"myString";
wchar_t
myString[] = L"myString"
myString
[]
= L"myString"
L"myString"
data = wcsdup(myString);
data = wcsdup(myString)
data
data
wcsdup(myString)
wcsdup
wcsdup
myString
myString
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(5,10,0)
(11,14,0)
(19,6,0)
(7,0,0)
(9,0,0)
(16,18,0)
(1,10,0)
(5,0,0)
(15,9,0)
(10,18,0)
(14,0,0)
(6,10,0)
(2,14,0)
(10,12,0)
(8,12,0)
(17,0,0)
(3,5,0)
(6,18,0)
(18,0,0)
(12,10,0)
(4,9,0)
(11,2,1)
(5,3,1)
(16,9,1)
(4,15,1)
(1,16,1)
(6,19,1)
(10,12,1)
(13,5,1)
(5,10,1)
(6,10,1)
(12,8,1)
(8,1,1)
(9,4,1)
(14,11,1)
(19,10,1)
(3,6,1)
(15,14,1)
(10,12,2)
(5,10,2)
(6,10,2)
-----------------------------------
(0,)
(1,data)
(2,funcPtr)
(3,data)
(4,NULL)
(5,funcPtr(data)
(6,printWLine(data)
(7,funcPtr)
(8,myString)
(9,data = NULL)
(10,data = wcsdup(myString)
(11,CWE401_Memory_Leak__strdup_wchar_t_65b_badSink)
(12,wcsdup(myString)
(13,RET)
(14,(*funcPtr)
(15,data)
(16,"myString")
(17,data)
(18,)
(19,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
