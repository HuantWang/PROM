-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_realloc_31_bad()
{
    int64_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)realloc(data, 100*sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    {
        int64_t * dataCopy = data;
        int64_t * data = dataCopy;
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
32,33
34,35
34,36
36,37
37,38
37,39
38,39
41,42
41,43
42,43
42,44
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
54,55
55,56
55,57
56,57
56,58
57,58
61,62
62,63
62,64
63,64
65,66
65,67
66,67
69,70
69,71
69,72
70,71
71,72
71,73
72,73
74,75
74,76
74,77
77,78
78,79
80,81
81,82
81,83
82,83
84,85
84,86
84,87
87,88
88,89
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,35,39,40,44,46,51,53,58,59,60,64,67,68,73,75,76,79,83,85,86,89,90
-----computeFrom-----
14,15
14,16
20,21
20,22
34,35
34,36
42,43
42,44
55,56
55,57
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_realloc_31_bad(){    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)realloc(data, 100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    {        int64_t * dataCopy = data;        int64_t * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_realloc_31_bad()
CWE401_Memory_Leak__int64_t_realloc_31_bad
{    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)realloc(data, 100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    {        int64_t * dataCopy = data;        int64_t * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)realloc(data, 100*sizeof(int64_t));
data = (int64_t *)realloc(data, 100*sizeof(int64_t))
data
data
(int64_t *)realloc(data, 100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, 100*sizeof(int64_t))
realloc
realloc
data
data
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
{        int64_t * dataCopy = data;        int64_t * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
int64_t * dataCopy = data;
int64_t * dataCopy = data;
int64_t
int64_t
* dataCopy = data
*
dataCopy
= data
data
data
int64_t * data = dataCopy;
int64_t * data = dataCopy;
int64_t
int64_t
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
;
-----joern-----
(10,13,0)
(10,9,0)
(34,27,0)
(30,35,0)
(9,10,0)
(35,16,0)
(23,8,0)
(16,9,0)
(17,32,0)
(37,0,0)
(26,25,0)
(31,16,0)
(20,35,0)
(10,32,0)
(24,2,0)
(34,22,0)
(2,25,0)
(19,32,0)
(32,25,0)
(28,0,0)
(12,29,0)
(3,25,0)
(13,8,0)
(18,25,0)
(21,35,0)
(9,5,0)
(11,29,0)
(36,2,0)
(27,34,0)
(8,13,0)
(7,10,0)
(15,13,0)
(29,16,0)
(0,36,0)
(20,25,0)
(14,36,0)
(13,10,0)
(16,25,0)
(35,20,0)
(1,27,0)
(5,9,0)
(0,2,0)
(33,2,0)
(6,36,0)
(36,16,0)
(9,16,0)
(27,1,1)
(21,18,1)
(37,36,1)
(15,7,1)
(36,16,1)
(30,21,1)
(4,0,1)
(18,29,1)
(28,37,1)
(11,12,1)
(35,30,1)
(23,15,1)
(9,10,1)
(31,32,1)
(6,20,1)
(1,29,1)
(8,23,1)
(13,8,1)
(16,9,1)
(17,19,1)
(0,28,1)
(10,13,1)
(7,31,1)
(0,36,1)
(14,6,1)
(18,34,1)
(12,16,1)
(29,11,1)
(35,16,1)
(20,35,1)
(10,32,1)
(9,5,1)
(34,27,1)
(29,16,1)
(36,14,1)
(32,17,1)
(20,35,2)
(1,29,2)
(10,13,2)
(0,36,2)
(13,8,2)
(36,16,2)
(10,32,2)
(16,9,2)
(35,16,2)
(34,27,2)
(34,29,2)
(27,29,2)
(9,10,2)
(9,5,2)
(29,16,2)
-----------------------------------
(0,* data = dataCopy)
(1,1)
(2,)
(3,data)
(4,RET)
(5,int64_t *)
(6,dataCopy)
(7,data)
(8,sizeof(int64_t)
(9,(int64_t *)
(10,realloc(data, 100*sizeof(int64_t)
(11,NULL)
(12,data)
(13,100*sizeof(int64_t)
(14,data)
(15,100)
(16,data = (int64_t *)
(17,NULL)
(18,L)
(19,data)
(20,printLongLongLine(data[0])
(21,data)
(22,)
(23,int64_t)
(24,data)
(25,)
(26,if (data == NULL)
(27,-1)
(28,dataCopy)
(29,data == NULL)
(30,0)
(31,data)
(32,data = NULL)
(33,dataCopy)
(34,exit(-1)
(35,data[0])
(36,* dataCopy = data)
(37,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
