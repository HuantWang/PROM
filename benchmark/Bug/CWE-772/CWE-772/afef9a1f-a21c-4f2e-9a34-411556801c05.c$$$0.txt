-----label-----
1
-----code-----
void CWE401_Memory_Leak__char_realloc_44_bad()
{
    char * data;
    /* define a function pointer */
    void (*funcPtr) (char *) = badSink;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (char *)realloc(data, 100*sizeof(char));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    strcpy(data, "A String");
    printLine(data);
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
34,35
34,36
35,36
37,38
37,39
38,39
38,40
40,41
42,43
42,44
42,45
43,44
45,46
47,48
47,49
49,50
50,51
50,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
62,63
64,65
66,67
67,68
67,69
67,70
68,69
70,71
73,74
74,75
74,76
75,76
77,78
79,80
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,30,32,36,39,41,44,46,48,51,52,56,58,63,65,69,71,72,76,78,82,84
-----computeFrom-----
28,29
28,30
34,35
34,36
47,48
47,49
54,55
54,56
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__char_realloc_44_bad(){    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)realloc(data, 100*sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    /* use the function pointer */    funcPtr(data);}
void
CWE401_Memory_Leak__char_realloc_44_bad()
CWE401_Memory_Leak__char_realloc_44_bad
{    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)realloc(data, 100*sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    /* use the function pointer */    funcPtr(data);}
char * data;
char * data;
char
* data
*
data
void (*funcPtr) (char *) = badSink;
void (*funcPtr) (char *) = badSink;
void
(*funcPtr) (char *) = badSink
*funcPtr
*
funcPtr
char *
char
*
*

= badSink
badSink
badSink
data = NULL;
data = NULL
data
data
NULL
NULL
data = (char *)realloc(data, 100*sizeof(char));
data = (char *)realloc(data, 100*sizeof(char))
data
data
(char *)realloc(data, 100*sizeof(char))
char *
char
*
*
realloc(data, 100*sizeof(char))
realloc
realloc
data
data
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(7,20,0)
(22,14,0)
(9,25,0)
(32,25,0)
(14,15,0)
(30,12,0)
(12,30,0)
(23,0,0)
(10,9,0)
(28,32,0)
(17,13,0)
(34,19,0)
(0,13,0)
(25,21,0)
(22,19,0)
(24,9,0)
(32,21,0)
(5,21,0)
(13,0,0)
(33,26,0)
(12,31,0)
(27,26,0)
(3,30,0)
(6,20,0)
(1,19,0)
(13,22,0)
(4,21,0)
(25,14,0)
(14,25,0)
(4,25,0)
(11,21,0)
(18,4,0)
(26,21,0)
(2,21,0)
(14,22,0)
(22,13,0)
(26,25,0)
(8,25,0)
(19,21,0)
(20,21,0)
(29,22,0)
(15,14,0)
(22,13,1)
(13,0,1)
(29,8,1)
(8,19,1)
(27,9,1)
(26,33,1)
(32,28,1)
(25,14,1)
(23,17,1)
(7,6,1)
(14,22,1)
(17,29,1)
(18,26,1)
(32,25,1)
(22,19,1)
(14,15,1)
(3,9,1)
(9,10,1)
(10,24,1)
(34,1,1)
(27,12,1)
(16,32,1)
(30,3,1)
(28,4,1)
(0,23,1)
(19,34,1)
(4,25,1)
(12,30,1)
(1,20,1)
(24,25,1)
(9,25,1)
(4,18,1)
(20,7,1)
(26,25,1)
(33,27,1)
(12,9,2)
(30,9,2)
(32,25,2)
(22,19,2)
(25,14,2)
(9,25,2)
(14,15,2)
(4,25,2)
(13,0,2)
(3,9,2)
(12,30,2)
(22,13,2)
(14,22,2)
(26,25,2)
-----------------------------------
(0,sizeof(char)
(1,data)
(2,if (data == NULL)
(3,1)
(4,printLine(data)
(5,funcPtr)
(6,funcPtr)
(7,badSink)
(8,data)
(9,data == NULL)
(10,NULL)
(11,data)
(12,exit(-1)
(13,100*sizeof(char)
(14,(char *)
(15,char *)
(16,RET)
(17,100)
(18,data)
(19,data = NULL)
(20,(*funcPtr)
(21,)
(22,realloc(data, 100*sizeof(char)
(23,char)
(24,data)
(25,data = (char *)
(26,strcpy(data, "A String")
(27,data)
(28,data)
(29,data)
(30,-1)
(31,)
(32,funcPtr(data)
(33,"A String")
(34,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
