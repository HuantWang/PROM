-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_realloc_16_bad()
{
    int64_t * data;
    data = NULL;
    while(1)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)realloc(data, 100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
        break;
    }
    while(1)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
21,22
21,23
21,24
21,25
21,26
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
28,29
30,31
32,33
32,34
32,35
33,34
35,36
37,38
37,39
39,40
40,41
40,42
41,42
44,45
44,46
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
59,60
59,61
60,61
64,65
65,66
65,67
66,67
68,69
68,70
69,70
73,74
73,75
75,76
75,77
-----nextToken-----
2,4,9,11,12,16,18,20,25,29,31,34,36,38,42,43,47,49,54,56,61,62,63,67,70,71,72,74,76,77
-----computeFrom-----
14,15
14,16
23,24
23,25
37,38
37,39
45,46
45,47
58,59
58,60
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;NullStatement;BreakStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_realloc_16_bad(){    int64_t * data;    data = NULL;    while(1)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        break;    }    while(1)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */        break;    }}
void
CWE401_Memory_Leak__int64_t_realloc_16_bad()
CWE401_Memory_Leak__int64_t_realloc_16_bad
{    int64_t * data;    data = NULL;    while(1)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        break;    }    while(1)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */        break;    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
while(1)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        break;    }
1
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        break;    }
data = (int64_t *)realloc(data, 100*sizeof(int64_t));
data = (int64_t *)realloc(data, 100*sizeof(int64_t))
data
data
(int64_t *)realloc(data, 100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, 100*sizeof(int64_t))
realloc
realloc
data
data
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
break;
while(1)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */        break;    }
1
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */        break;    }
;
break;
-----joern-----
(11,1,0)
(29,30,0)
(6,33,0)
(2,9,0)
(1,9,0)
(26,18,0)
(34,9,0)
(12,7,0)
(4,25,0)
(0,28,0)
(21,18,0)
(27,25,0)
(32,10,0)
(28,26,0)
(35,32,0)
(14,36,0)
(3,6,0)
(28,36,0)
(20,18,0)
(17,32,0)
(19,28,0)
(24,18,0)
(10,32,0)
(33,6,0)
(33,31,0)
(10,1,0)
(36,18,0)
(12,36,0)
(8,35,0)
(7,12,0)
(32,35,0)
(23,9,0)
(26,28,0)
(12,10,0)
(10,12,0)
(36,12,0)
(25,36,0)
(16,1,0)
(15,10,0)
(12,10,1)
(13,1,1)
(1,11,1)
(35,8,1)
(25,36,1)
(32,35,1)
(21,33,1)
(19,0,1)
(28,36,1)
(5,29,1)
(12,7,1)
(10,1,1)
(33,6,1)
(8,17,1)
(10,32,1)
(3,25,1)
(36,12,1)
(29,22,1)
(25,27,1)
(26,28,1)
(5,22,1)
(28,19,1)
(15,14,1)
(22,20,1)
(17,15,1)
(21,25,1)
(14,13,1)
(0,21,1)
(4,36,1)
(27,4,1)
(22,13,1)
(6,3,1)
(11,16,1)
(20,26,1)
(8,13,2)
(4,13,2)
(15,13,2)
(32,13,2)
(36,12,2)
(28,13,2)
(32,35,2)
(25,36,2)
(6,25,2)
(17,13,2)
(14,13,2)
(0,13,2)
(35,13,2)
(27,13,2)
(20,13,2)
(29,22,2)
(19,13,2)
(26,28,2)
(10,1,2)
(3,25,2)
(26,13,2)
(33,6,2)
(21,13,2)
(12,7,2)
(12,10,2)
(25,13,2)
(10,13,2)
(33,25,2)
(28,36,2)
(12,13,2)
(10,32,2)
(36,13,2)
-----------------------------------
(0,data)
(1,data = NULL)
(2,while(1)
(3,1)
(4,data)
(5,RET)
(6,-1)
(7,int64_t *)
(8,int64_t)
(9,)
(10,realloc(data, 100*sizeof(int64_t)
(11,NULL)
(12,(int64_t *)
(13,1)
(14,data)
(15,data)
(16,data)
(17,100)
(18,)
(19,0)
(20,break;)
(21,L)
(22,1)
(23,data)
(24,if (data == NULL)
(25,data == NULL)
(26,printLongLongLine(data[0])
(27,NULL)
(28,data[0])
(29,break;)
(30,)
(31,)
(32,100*sizeof(int64_t)
(33,exit(-1)
(34,while(1)
(35,sizeof(int64_t)
(36,data = (int64_t *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
