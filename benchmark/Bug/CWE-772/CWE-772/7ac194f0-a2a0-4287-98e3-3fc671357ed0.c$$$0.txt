-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_wchar_t_07_bad()
{
    if(staticFive==5)
    {
        {
            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            wcscpy(data, L"A String");
            printWLine(data);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                wcscpy(data, L"New String");
                printWLine(data);
                free(data);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
7,9
8,9
11,12
12,13
12,14
12,15
12,16
12,17
12,18
13,14
14,15
14,16
16,17
16,18
16,19
19,20
20,21
20,22
21,22
21,23
23,24
25,26
25,27
26,27
28,29
28,30
30,31
31,32
31,33
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
48,51
49,50
51,52
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
62,63
64,65
64,66
65,66
65,67
67,68
69,70
69,71
69,72
70,71
72,73
74,75
74,76
75,76
77,78
78,79
78,80
81,82
81,83
82,83
82,84
83,84
85,86
87,88
87,89
87,90
88,89
89,90
89,91
89,92
90,91
92,93
95,96
96,97
96,98
97,98
99,100
101,102
102,103
102,104
103,104
105,106
-----nextToken-----
2,4,9,10,15,17,18,22,24,27,29,32,33,37,39,44,46,50,52,53,57,59,63,66,68,71,73,76,79,80,84,86,91,93,94,98,100,104,106
-----computeFrom-----
7,8
7,9
28,29
28,30
35,36
35,37
61,62
61,63
74,75
74,76
82,83
82,84
-----guardedBy-----
84,106
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_wchar_t_07_bad(){    if(staticFive==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }}
void
CWE401_Memory_Leak__malloc_realloc_wchar_t_07_bad()
CWE401_Memory_Leak__malloc_realloc_wchar_t_07_bad
{    if(staticFive==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }}
if(staticFive==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }
staticFive==5
staticFive
staticFive
5
{        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }
{            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* data = (wchar_t *)malloc(100*sizeof(wchar_t))
*
data
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
data
data
(wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, (130000)*sizeof(wchar_t))
realloc
realloc
data
data
(130000)*sizeof(wchar_t)
(130000)
130000
sizeof(wchar_t)
wchar_t
wchar_t

if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }
wcscpy(data, L"New String");
wcscpy(data, L"New String")
wcscpy
wcscpy
data
data
L"New String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(46,41,0)
(11,29,0)
(39,20,0)
(37,0,0)
(42,0,0)
(30,10,0)
(9,22,0)
(20,39,0)
(10,30,0)
(0,33,0)
(15,27,0)
(5,44,0)
(21,33,0)
(14,43,0)
(37,30,0)
(6,18,0)
(11,16,0)
(39,23,0)
(36,34,0)
(12,18,0)
(30,37,0)
(5,16,0)
(41,0,0)
(43,23,0)
(40,25,0)
(32,29,0)
(32,16,0)
(3,41,0)
(43,14,0)
(28,25,0)
(7,30,0)
(33,2,0)
(5,37,0)
(31,33,0)
(26,42,0)
(37,5,0)
(17,32,0)
(23,43,0)
(8,10,0)
(16,5,0)
(19,0,0)
(38,43,0)
(1,33,0)
(39,0,0)
(9,27,0)
(25,16,0)
(42,33,0)
(24,16,0)
(23,39,0)
(0,39,0)
(35,14,0)
(16,33,0)
(27,9,0)
(45,11,0)
(44,5,0)
(4,37,0)
(13,32,1)
(32,16,1)
(9,27,1)
(23,43,1)
(26,41,1)
(45,25,1)
(12,6,1)
(8,7,1)
(41,3,1)
(7,4,1)
(16,5,1)
(11,45,1)
(35,38,1)
(17,11,1)
(10,8,1)
(37,30,1)
(3,46,1)
(18,12,1)
(46,0,1)
(41,0,1)
(24,42,1)
(40,16,1)
(15,41,1)
(25,16,1)
(14,35,1)
(38,19,1)
(13,25,1)
(39,23,1)
(5,37,1)
(32,17,1)
(27,15,1)
(42,26,1)
(4,24,1)
(43,14,1)
(13,18,1)
(19,18,1)
(39,20,1)
(5,44,1)
(37,0,1)
(11,16,1)
(28,40,1)
(25,28,1)
(26,9,1)
(30,10,1)
(42,0,1)
(0,39,1)
(37,0,2)
(39,20,2)
(42,0,2)
(25,16,2)
(32,25,2)
(3,18,2)
(30,18,2)
(38,18,2)
(39,18,2)
(16,18,2)
(43,18,2)
(37,30,2)
(0,18,2)
(4,18,2)
(41,18,2)
(45,25,2)
(28,18,2)
(7,18,2)
(19,18,2)
(27,41,2)
(8,18,2)
(11,25,2)
(32,16,2)
(0,39,2)
(23,18,2)
(16,5,2)
(11,16,2)
(43,14,2)
(15,41,2)
(14,18,2)
(46,18,2)
(30,10,2)
(26,18,2)
(23,43,2)
(5,37,2)
(35,18,2)
(17,25,2)
(5,44,2)
(10,18,2)
(39,23,2)
(24,18,2)
(25,18,2)
(9,41,2)
(42,18,2)
(37,18,2)
(41,0,2)
(5,18,2)
(40,18,2)
(9,27,2)
-----------------------------------
(0,* data = (wchar_t *)
(1,data)
(2,)
(3,NULL)
(4,data)
(5,(wchar_t *)
(6,staticFive)
(7,130000)
(8,wchar_t)
(9,exit(-1)
(10,sizeof(wchar_t)
(11,printWLine(data)
(12,5)
(13,RET)
(14,sizeof(wchar_t)
(15,1)
(16,data = (wchar_t *)
(17,data)
(18,staticFive==5)
(19,data)
(20,wchar_t *)
(21,if (data != NULL)
(22,)
(23,malloc(100*sizeof(wchar_t)
(24,data)
(25,data != NULL)
(26,data)
(27,-1)
(28,NULL)
(29,)
(30,(130000)
(31,if (data == NULL)
(32,free(data)
(33,)
(34,)
(35,wchar_t)
(36,if(staticFive==5)
(37,realloc(data, (130000)
(38,100)
(39,(wchar_t *)
(40,data)
(41,data == NULL)
(42,printWLine(data)
(43,100*sizeof(wchar_t)
(44,wchar_t *)
(45,data)
(46,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
