-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_realloc_18_bad()
{
    int * data;
    data = NULL;
    goto source;
source:
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int *)realloc(data, 100*sizeof(int));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
20,21
20,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
29,30
31,32
31,33
31,34
32,33
34,35
36,37
36,38
38,39
39,40
39,41
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
57,59
58,59
62,63
63,64
63,65
64,65
66,67
66,68
67,68
70,71
72,73
72,74
-----nextToken-----
2,4,8,10,11,15,17,19,21,25,28,30,33,35,37,40,41,45,47,52,54,59,60,61,65,68,69,71,73,74
-----computeFrom-----
13,14
13,15
23,24
23,25
36,37
36,38
43,44
43,45
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int_realloc_18_bad(){    int * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__int_realloc_18_bad()
CWE401_Memory_Leak__int_realloc_18_bad
{    int * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));
source
data = (int *)realloc(data, 100*sizeof(int));
data = (int *)realloc(data, 100*sizeof(int))
data
data
(int *)realloc(data, 100*sizeof(int))
int *
int
*
*
realloc(data, 100*sizeof(int))
realloc
realloc
data
data
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(25,3,0)
(34,32,0)
(31,20,0)
(31,28,0)
(29,36,0)
(13,34,0)
(11,3,0)
(9,12,0)
(36,4,0)
(19,0,0)
(27,0,0)
(3,20,0)
(20,31,0)
(3,25,0)
(13,12,0)
(20,0,0)
(33,34,0)
(3,4,0)
(25,0,0)
(23,1,0)
(12,0,0)
(15,20,0)
(23,8,0)
(17,1,0)
(10,3,0)
(36,20,0)
(5,12,0)
(22,0,0)
(18,4,0)
(26,0,0)
(6,0,0)
(31,13,0)
(28,31,0)
(32,34,0)
(21,15,0)
(4,0,0)
(7,15,0)
(24,13,0)
(16,0,0)
(1,23,0)
(2,32,0)
(13,31,0)
(35,36,0)
(34,13,0)
(14,20,0)
(15,21,1)
(24,14,1)
(36,35,1)
(20,31,1)
(13,34,1)
(36,20,1)
(3,4,1)
(23,1,1)
(21,7,1)
(34,32,1)
(29,15,1)
(35,29,1)
(14,6,1)
(17,15,1)
(22,25,1)
(18,36,1)
(9,5,1)
(31,13,1)
(13,12,1)
(6,12,1)
(10,4,1)
(4,18,1)
(11,10,1)
(30,22,1)
(25,3,1)
(15,20,1)
(29,23,1)
(7,20,1)
(31,28,1)
(1,17,1)
(32,2,1)
(3,11,1)
(2,33,1)
(12,9,1)
(33,24,1)
(3,20,1)
(13,34,2)
(13,12,2)
(15,20,2)
(34,32,2)
(3,4,2)
(23,15,2)
(17,15,2)
(3,20,2)
(23,1,2)
(25,3,2)
(20,31,2)
(36,20,2)
(31,13,2)
(1,15,2)
(31,28,2)
-----------------------------------
(0,)
(1,-1)
(2,int)
(3,data[0])
(4,data[0] = 5)
(5,data)
(6,goto source;)
(7,data)
(8,)
(9,NULL)
(10,data)
(11,0)
(12,data = NULL)
(13,realloc(data, 100*sizeof(int)
(14,data)
(15,data == NULL)
(16,source:)
(17,1)
(18,5)
(19,if (data == NULL)
(20,data = (int *)
(21,NULL)
(22,goto sink;)
(23,exit(-1)
(24,data)
(25,printIntLine(data[0])
(26,sink:)
(27,data)
(28,int *)
(29,data)
(30,RET)
(31,(int *)
(32,sizeof(int)
(33,100)
(34,100*sizeof(int)
(35,0)
(36,data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
