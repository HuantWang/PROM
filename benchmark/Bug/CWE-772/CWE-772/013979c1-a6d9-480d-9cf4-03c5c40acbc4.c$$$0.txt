-----label-----
1
-----code-----
void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_01_bad()
{
    struct _twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
39,40
39,41
40,41
40,42
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
54,56
55,56
55,57
56,57
61,62
62,63
62,64
63,64
63,65
64,65
64,66
65,66
70,71
71,72
71,73
72,73
74,75
74,76
75,76
75,77
76,77
78,79
80,81
81,82
81,83
82,83
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,37,38,42,44,49,51,57,58,59,60,66,67,68,69,73,77,79,83,84,85
-----computeFrom-----
14,15
14,16
20,21
20,22
32,33
32,34
40,41
40,42
53,54
53,55
62,63
62,64
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_01_bad(){    struct _twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__struct_twoIntsStruct_malloc_01_bad()
CWE401_Memory_Leak__struct_twoIntsStruct_malloc_01_bad
{    struct _twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
malloc(100*sizeof(struct _twoIntsStruct))
malloc
malloc
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
;
-----joern-----
(37,12,0)
(3,39,0)
(12,8,0)
(8,12,0)
(19,2,0)
(43,11,0)
(33,14,0)
(31,39,0)
(4,33,0)
(43,42,0)
(13,11,0)
(15,37,0)
(34,37,0)
(42,28,0)
(14,5,0)
(25,3,0)
(7,10,0)
(38,36,0)
(0,38,0)
(2,39,0)
(35,21,0)
(22,31,0)
(36,31,0)
(20,10,0)
(21,35,0)
(25,1,0)
(12,37,0)
(11,39,0)
(41,2,0)
(11,43,0)
(39,31,0)
(10,28,0)
(16,42,0)
(17,28,0)
(38,35,0)
(6,43,0)
(30,8,0)
(1,28,0)
(31,36,0)
(26,3,0)
(31,22,0)
(30,28,0)
(9,3,0)
(24,8,0)
(8,30,0)
(27,39,0)
(3,25,0)
(37,39,0)
(23,1,0)
(39,28,0)
(40,25,0)
(14,33,0)
(18,11,0)
(36,38,0)
(29,28,0)
(8,24,0)
(35,38,0)
(1,23,1)
(19,39,1)
(35,21,1)
(8,12,1)
(37,34,1)
(7,20,1)
(2,39,1)
(3,9,1)
(6,11,1)
(25,3,1)
(42,16,1)
(3,39,1)
(0,27,1)
(26,42,1)
(37,39,1)
(35,0,1)
(27,10,1)
(18,14,1)
(2,41,1)
(18,2,1)
(33,4,1)
(30,8,1)
(43,6,1)
(31,36,1)
(34,15,1)
(39,31,1)
(41,19,1)
(40,3,1)
(23,25,1)
(14,33,1)
(36,38,1)
(25,40,1)
(11,13,1)
(32,30,1)
(43,11,1)
(4,2,1)
(8,24,1)
(31,22,1)
(16,43,1)
(15,1,1)
(11,39,1)
(13,18,1)
(9,26,1)
(38,35,1)
(10,7,1)
(12,37,1)
(33,2,2)
(8,12,2)
(31,36,2)
(31,22,2)
(43,11,2)
(14,2,2)
(25,3,2)
(35,21,2)
(36,38,2)
(2,39,2)
(3,39,2)
(37,39,2)
(8,24,2)
(11,39,2)
(4,2,2)
(12,37,2)
(14,33,2)
(30,8,2)
(39,31,2)
(38,35,2)
-----------------------------------
(0,100)
(1,data[0].intTwo = 0)
(2,data == NULL)
(3,data[0])
(4,1)
(5,)
(6,intOne)
(7,NULL)
(8,(twoIntsStruct *)
(9,0)
(10,data = NULL)
(11,data[0])
(12,&data[0])
(13,0)
(14,exit(-1)
(15,data)
(16,0)
(17,data)
(18,data)
(19,data)
(20,data)
(21,struct _twoIntsStruct)
(22,struct _twoIntsStruct *)
(23,0)
(24,twoIntsStruct *)
(25,data[0].intTwo)
(26,data)
(27,data)
(28,)
(29,if (data == NULL)
(30,printStructLine((twoIntsStruct *)
(31,(struct _twoIntsStruct *)
(32,RET)
(33,-1)
(34,0)
(35,sizeof(struct _twoIntsStruct)
(36,malloc(100*sizeof(struct _twoIntsStruct)
(37,data[0])
(38,100*sizeof(struct _twoIntsStruct)
(39,data = (struct _twoIntsStruct *)
(40,intTwo)
(41,NULL)
(42,data[0].intOne = 0)
(43,data[0].intOne)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
