-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_16_bad()
{
    while(1)
    {
        {
            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            data[0] = 5LL;
            printLongLongLine(data[0]);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                data[0] = 10LL;
                printLongLongLine(data[0]);
                free(data);
            }
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
8,9
8,10
9,10
9,11
9,12
9,13
9,14
9,15
10,11
11,12
11,13
12,13
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
31,32
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
49,51
50,51
54,55
55,56
55,57
56,57
58,59
58,60
59,60
62,63
63,64
63,65
64,65
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
72,75
73,74
75,76
77,78
77,79
78,79
80,81
81,82
81,83
82,83
85,86
85,87
86,87
86,88
87,88
89,90
91,92
91,93
91,94
92,93
93,94
93,95
94,95
94,96
95,96
99,100
100,101
100,102
101,102
103,104
103,105
104,105
107,108
108,109
108,110
109,110
111,112
-----nextToken-----
2,4,7,13,15,16,21,23,26,28,32,33,37,39,44,46,51,52,53,57,60,61,65,69,71,74,76,79,83,84,88,90,96,97,98,102,105,106,110,112,113
-----computeFrom-----
27,28
27,29
35,36
35,37
48,49
48,50
63,64
63,65
77,78
77,79
86,87
86,88
93,94
93,95
-----guardedBy-----
88,112
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_16_bad(){    while(1)    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }        break;    }}
void
CWE401_Memory_Leak__malloc_realloc_int64_t_16_bad()
CWE401_Memory_Leak__malloc_realloc_int64_t_16_bad
{    while(1)    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }        break;    }}
while(1)    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }        break;    }
1
{        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }        break;    }
{            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t
int64_t
* data = (int64_t *)malloc(100*sizeof(int64_t))
*
data
= (int64_t *)malloc(100*sizeof(int64_t))
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t))
data
data
(int64_t *)realloc(data, (130000)*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, (130000)*sizeof(int64_t))
realloc
realloc
data
data
(130000)*sizeof(int64_t)
(130000)
130000
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }
data[0] = 10LL;
data[0] = 10LL
data[0]
data
data
0
10LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
break;
-----joern-----
(36,40,0)
(29,0,0)
(3,21,0)
(41,29,0)
(51,49,0)
(14,39,0)
(38,18,0)
(21,11,0)
(13,48,0)
(0,29,0)
(29,40,0)
(12,39,0)
(18,38,0)
(18,49,0)
(43,42,0)
(34,24,0)
(21,3,0)
(26,10,0)
(46,13,0)
(15,41,0)
(29,41,0)
(44,8,0)
(20,39,0)
(10,7,0)
(4,31,0)
(48,40,0)
(30,8,0)
(22,21,0)
(45,25,0)
(24,49,0)
(5,43,0)
(40,48,0)
(10,49,0)
(39,31,0)
(3,18,0)
(47,11,0)
(15,1,0)
(8,41,0)
(32,48,0)
(19,24,0)
(48,13,0)
(42,43,0)
(50,1,0)
(9,41,0)
(49,39,0)
(2,8,0)
(35,10,0)
(16,15,0)
(28,39,0)
(2,1,0)
(8,2,0)
(40,29,0)
(42,33,0)
(40,49,0)
(18,3,0)
(25,41,0)
(6,25,0)
(7,10,0)
(11,21,0)
(49,18,0)
(7,39,0)
(41,39,0)
(17,23,0)
(4,25,1)
(51,37,1)
(21,11,1)
(19,34,1)
(16,2,1)
(27,37,1)
(28,24,1)
(43,5,1)
(11,47,1)
(30,44,1)
(25,41,1)
(15,41,1)
(34,49,1)
(10,35,1)
(18,38,1)
(28,42,1)
(36,9,1)
(27,4,1)
(40,48,1)
(47,22,1)
(25,6,1)
(50,25,1)
(8,30,1)
(18,3,1)
(35,26,1)
(49,18,1)
(46,32,1)
(3,21,1)
(10,49,1)
(29,40,1)
(2,8,1)
(9,7,1)
(24,19,1)
(42,43,1)
(7,10,1)
(40,49,1)
(6,45,1)
(22,51,1)
(41,29,1)
(24,49,1)
(13,46,1)
(15,16,1)
(8,41,1)
(4,15,1)
(32,36,1)
(29,0,1)
(45,41,1)
(48,13,1)
(44,50,1)
(5,24,1)
(26,28,1)
(3,21,2)
(48,37,2)
(41,37,2)
(28,37,2)
(21,37,2)
(22,37,2)
(8,41,2)
(10,37,2)
(42,43,2)
(15,25,2)
(4,37,2)
(8,25,2)
(3,37,2)
(29,37,2)
(6,37,2)
(45,37,2)
(5,24,2)
(43,24,2)
(2,25,2)
(40,37,2)
(42,24,2)
(7,37,2)
(16,25,2)
(25,41,2)
(40,49,2)
(50,25,2)
(10,49,2)
(26,37,2)
(25,37,2)
(18,37,2)
(11,37,2)
(36,37,2)
(13,37,2)
(46,37,2)
(24,49,2)
(51,37,2)
(15,41,2)
(18,38,2)
(7,10,2)
(2,8,2)
(41,29,2)
(24,37,2)
(21,11,2)
(29,0,2)
(9,37,2)
(19,37,2)
(35,37,2)
(48,13,2)
(30,25,2)
(49,18,2)
(32,37,2)
(34,37,2)
(18,3,2)
(47,37,2)
(44,25,2)
(49,37,2)
(29,40,2)
(40,48,2)
-----------------------------------
(0,int64_t *)
(1,)
(2,printLongLongLine(data[0])
(3,malloc(100*sizeof(int64_t)
(4,break;)
(5,1)
(6,NULL)
(7,printLongLongLine(data[0])
(8,data[0])
(9,data)
(10,data[0])
(11,sizeof(int64_t)
(12,if (data != NULL)
(13,sizeof(int64_t)
(14,data)
(15,free(data)
(16,data)
(17,while(1)
(18,(int64_t *)
(19,NULL)
(20,if (data == NULL)
(21,100*sizeof(int64_t)
(22,100)
(23,)
(24,data == NULL)
(25,data != NULL)
(26,data)
(27,RET)
(28,L)
(29,(int64_t *)
(30,0)
(31,)
(32,130000)
(33,)
(34,data)
(35,0)
(36,data)
(37,1)
(38,int64_t *)
(39,)
(40,realloc(data, (130000)
(41,data = (int64_t *)
(42,exit(-1)
(43,-1)
(44,data)
(45,data)
(46,int64_t)
(47,int64_t)
(48,(130000)
(49,* data = (int64_t *)
(50,L)
(51,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
