-----label-----
1
-----code-----
void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_41_bad()
{
    struct _twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
33,34
34,35
34,36
35,36
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
53,55
54,55
54,56
55,56
60,61
61,62
61,63
62,63
62,64
63,64
63,65
64,65
69,70
70,71
70,72
71,72
73,74
73,75
74,75
74,76
75,76
77,78
79,80
80,81
80,82
81,82
84,85
85,86
85,87
86,87
88,89
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,32,36,37,41,43,48,50,56,57,58,59,65,66,67,68,72,76,78,82,83,87,89
-----computeFrom-----
14,15
14,16
20,21
20,22
39,40
39,41
52,53
52,54
61,62
61,63
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_41_bad(){    struct _twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    badSink(data);}
void
CWE401_Memory_Leak__struct_twoIntsStruct_calloc_41_bad()
CWE401_Memory_Leak__struct_twoIntsStruct_calloc_41_bad
{    struct _twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    badSink(data);}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
calloc(100, sizeof(struct _twoIntsStruct))
calloc
calloc
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(10,38,0)
(3,11,0)
(38,12,0)
(38,10,0)
(17,9,0)
(16,23,0)
(8,10,0)
(44,38,0)
(43,10,0)
(9,26,0)
(31,13,0)
(10,26,0)
(25,24,0)
(20,30,0)
(4,26,0)
(23,16,0)
(32,39,0)
(34,28,0)
(41,39,0)
(39,26,0)
(34,44,0)
(40,31,0)
(45,10,0)
(11,26,0)
(7,41,0)
(36,6,0)
(24,10,0)
(37,9,0)
(15,26,0)
(5,8,0)
(30,8,0)
(1,26,0)
(12,38,0)
(8,30,0)
(0,40,0)
(13,15,0)
(18,43,0)
(44,34,0)
(33,44,0)
(15,13,0)
(24,41,0)
(35,24,0)
(41,24,0)
(31,40,0)
(19,8,0)
(21,13,0)
(13,21,0)
(38,44,0)
(42,16,0)
(29,40,0)
(28,34,0)
(30,6,0)
(6,26,0)
(11,10,0)
(23,2,0)
(40,10,0)
(13,31,0)
(22,43,0)
(41,7,1)
(33,45,1)
(34,28,1)
(25,35,1)
(23,16,1)
(30,20,1)
(41,24,1)
(0,6,1)
(7,24,1)
(20,8,1)
(6,36,1)
(40,10,1)
(30,8,1)
(11,3,1)
(43,10,1)
(14,11,1)
(16,42,1)
(17,37,1)
(43,18,1)
(11,10,1)
(42,43,1)
(10,38,1)
(13,21,1)
(5,39,1)
(3,15,1)
(36,30,1)
(39,32,1)
(15,13,1)
(18,22,1)
(44,34,1)
(8,19,1)
(24,25,1)
(38,12,1)
(8,10,1)
(29,0,1)
(45,9,1)
(24,10,1)
(35,43,1)
(38,44,1)
(9,17,1)
(19,5,1)
(40,29,1)
(22,10,1)
(32,41,1)
(13,31,1)
(35,23,1)
(34,33,1)
(31,40,1)
(13,31,2)
(15,13,2)
(42,43,2)
(38,12,2)
(38,44,2)
(24,10,2)
(41,24,2)
(23,43,2)
(16,43,2)
(43,10,2)
(8,10,2)
(31,40,2)
(13,21,2)
(23,16,2)
(40,10,2)
(11,10,2)
(34,28,2)
(30,8,2)
(10,38,2)
(44,34,2)
-----------------------------------
(0,data)
(1,if (data == NULL)
(2,)
(3,data)
(4,data)
(5,data)
(6,data[0].intTwo = 0)
(7,intOne)
(8,data[0])
(9,data = NULL)
(10,data = (struct _twoIntsStruct *)
(11,badSink(data)
(12,struct _twoIntsStruct *)
(13,(twoIntsStruct *)
(14,RET)
(15,printStructLine((twoIntsStruct *)
(16,-1)
(17,NULL)
(18,NULL)
(19,0)
(20,intTwo)
(21,twoIntsStruct *)
(22,data)
(23,exit(-1)
(24,data[0])
(25,0)
(26,)
(27, sizeof(struct _twoIntsStruct)
(28,struct _twoIntsStruct)
(29,0)
(30,data[0].intTwo)
(31,&data[0])
(32,0)
(33,100)
(34,sizeof(struct _twoIntsStruct)
(35,data)
(36,0)
(37,data)
(38,(struct _twoIntsStruct *)
(39,data[0].intOne = 0)
(40,data[0])
(41,data[0].intOne)
(42,1)
(43,data == NULL)
(44,calloc(100, sizeof(struct _twoIntsStruct)
(45,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
