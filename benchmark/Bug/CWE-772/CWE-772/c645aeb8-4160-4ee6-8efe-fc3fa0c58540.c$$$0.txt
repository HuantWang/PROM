-----label-----
1
-----code-----
void CWE401_Memory_Leak__char_realloc_18_bad()
{
    char * data;
    data = NULL;
    goto source;
source:
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (char *)realloc(data, 100*sizeof(char));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    strcpy(data, "A String");
    printLine(data);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
20,21
20,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
29,30
31,32
31,33
31,34
32,33
34,35
36,37
36,38
38,39
39,40
39,41
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
56,59
57,58
59,60
62,63
63,64
63,65
64,65
66,67
68,69
70,71
70,72
-----nextToken-----
2,4,8,10,11,15,17,19,21,25,28,30,33,35,37,40,41,45,47,52,54,58,60,61,65,67,69,71,72
-----computeFrom-----
13,14
13,15
23,24
23,25
36,37
36,38
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__char_realloc_18_bad(){    char * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)realloc(data, 100*sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__char_realloc_18_bad()
CWE401_Memory_Leak__char_realloc_18_bad
{    char * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)realloc(data, 100*sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)realloc(data, 100*sizeof(char));
source
data = (char *)realloc(data, 100*sizeof(char));
data = (char *)realloc(data, 100*sizeof(char))
data
data
(char *)realloc(data, 100*sizeof(char))
char *
char
*
*
realloc(data, 100*sizeof(char))
realloc
realloc
data
data
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(27,3,0)
(32,22,0)
(13,3,0)
(5,22,0)
(4,18,0)
(29,26,0)
(24,32,0)
(29,18,0)
(30,21,0)
(27,18,0)
(18,23,0)
(8,2,0)
(15,22,0)
(14,22,0)
(32,3,0)
(2,3,0)
(0,22,0)
(31,3,0)
(9,2,0)
(26,29,0)
(12,21,0)
(23,22,0)
(1,31,0)
(27,20,0)
(17,26,0)
(18,29,0)
(19,22,0)
(3,27,0)
(10,23,0)
(28,29,0)
(12,7,0)
(18,27,0)
(21,12,0)
(25,23,0)
(16,22,0)
(11,32,0)
(31,22,0)
(20,27,0)
(3,22,0)
(24,11,1)
(18,29,1)
(28,4,1)
(17,28,1)
(9,8,1)
(2,3,1)
(14,23,1)
(13,14,1)
(18,23,1)
(3,27,1)
(31,3,1)
(21,30,1)
(2,9,1)
(12,21,1)
(4,13,1)
(15,31,1)
(26,17,1)
(32,24,1)
(10,25,1)
(27,18,1)
(6,15,1)
(23,10,1)
(29,26,1)
(11,12,1)
(1,32,1)
(27,20,1)
(8,3,1)
(11,2,1)
(32,3,1)
(31,1,1)
(30,2,1)
(18,23,2)
(12,21,2)
(27,20,2)
(32,3,2)
(31,3,2)
(21,2,2)
(2,3,2)
(30,2,2)
(27,18,2)
(18,29,2)
(29,26,2)
(12,2,2)
(3,27,2)
-----------------------------------
(0,sink:)
(1,data)
(2,data == NULL)
(3,data = (char *)
(4,data)
(5,if (data == NULL)
(6,RET)
(7,)
(8,data)
(9,NULL)
(10,NULL)
(11,data)
(12,exit(-1)
(13,data)
(14,goto source;)
(15,goto sink;)
(16,data)
(17,char)
(18,realloc(data, 100*sizeof(char)
(19,source:)
(20,char *)
(21,-1)
(22,)
(23,data = NULL)
(24,"A String")
(25,data)
(26,sizeof(char)
(27,(char *)
(28,100)
(29,100*sizeof(char)
(30,1)
(31,printLine(data)
(32,strcpy(data, "A String")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
