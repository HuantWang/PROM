-----label-----
1
-----code-----
static struct _twoIntsStruct * badSource(struct _twoIntsStruct * data)
{

    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}

    /* Initialize and make use of data */

    data[0].intOne = 0;
    data[0].intTwo = 0;

    printStructLine((twoIntsStruct *)&data[0]);

    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
13,19
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
24,27
25,26
27,28
29,30
29,31
31,32
32,33
32,34
33,34
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
51,53
52,53
52,54
53,54
58,59
59,60
59,61
60,61
60,62
61,62
61,63
62,63
67,68
68,69
68,70
69,70
71,72
71,73
72,73
72,74
73,74
75,76
77,78
78,79
78,80
79,80
82,83
83,84
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,28,30,34,35,39,41,46,48,54,55,56,57,63,64,65,66,70,74,76,80,81,84
-----computeFrom-----
15,16
15,17
29,30
29,31
37,38
37,39
50,51
50,52
59,60
59,61
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;ElaboratedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static struct _twoIntsStruct * badSource(struct _twoIntsStruct * data){    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    return data;}
static struct _twoIntsStruct
_twoIntsStruct
* badSource(struct _twoIntsStruct * data)
*
badSource
struct _twoIntsStruct * data
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
{    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    return data;}
data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
realloc(data, 100*sizeof(struct _twoIntsStruct))
realloc
realloc
data
data
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
return data;
data
data
-----joern-----
(39,34,0)
(32,26,0)
(40,10,0)
(31,1,0)
(16,14,0)
(30,10,0)
(30,43,0)
(18,11,0)
(16,34,0)
(21,43,0)
(23,34,0)
(37,23,0)
(5,31,0)
(29,43,0)
(42,2,0)
(43,30,0)
(10,14,0)
(35,28,0)
(31,0,0)
(30,8,0)
(33,16,0)
(13,41,0)
(12,16,0)
(22,39,0)
(6,11,0)
(43,29,0)
(0,31,0)
(16,10,0)
(11,10,0)
(2,34,0)
(15,14,0)
(31,5,0)
(13,26,0)
(5,11,0)
(19,29,0)
(25,2,0)
(42,15,0)
(29,19,0)
(2,42,0)
(24,29,0)
(26,13,0)
(36,39,0)
(2,10,0)
(38,14,0)
(8,30,0)
(39,10,0)
(10,34,0)
(20,15,0)
(39,36,0)
(3,39,0)
(28,14,0)
(19,27,0)
(27,19,0)
(4,23,0)
(11,34,0)
(7,36,0)
(23,10,0)
(0,14,0)
(17,42,0)
(1,31,0)
(36,28,0)
(11,5,0)
(10,30,0)
(43,34,0)
(9,2,0)
(31,5,1)
(26,32,1)
(19,24,1)
(37,10,1)
(23,34,1)
(42,17,1)
(4,37,1)
(35,36,1)
(7,39,1)
(0,31,1)
(2,25,1)
(11,34,1)
(33,0,1)
(20,42,1)
(11,18,1)
(3,15,1)
(23,10,1)
(16,34,1)
(15,20,1)
(19,27,1)
(30,8,1)
(32,23,1)
(6,28,1)
(2,10,1)
(5,11,1)
(12,16,1)
(17,2,1)
(28,35,1)
(36,7,1)
(43,29,1)
(9,23,1)
(30,43,1)
(43,34,1)
(9,13,1)
(21,40,1)
(18,6,1)
(2,34,1)
(10,34,1)
(42,2,1)
(39,22,1)
(29,19,1)
(23,4,1)
(13,26,1)
(10,30,1)
(16,33,1)
(16,10,1)
(36,39,1)
(39,34,1)
(22,3,1)
(11,10,1)
(24,21,1)
(25,9,1)
(39,10,1)
(31,1,1)
(42,2,2)
(30,43,2)
(13,26,2)
(13,23,2)
(36,39,2)
(43,29,2)
(43,34,2)
(39,10,2)
(31,1,2)
(39,34,2)
(23,34,2)
(30,8,2)
(2,10,2)
(31,5,2)
(10,34,2)
(12,16,2)
(2,34,2)
(11,34,2)
(10,30,2)
(16,34,2)
(0,31,2)
(26,23,2)
(11,10,2)
(5,11,2)
(32,23,2)
(29,19,2)
(23,10,2)
(16,10,2)
(19,27,2)
-----------------------------------
(0,printStructLine((twoIntsStruct *)
(1,twoIntsStruct *)
(2,data[0])
(3,data)
(4,NULL)
(5,&data[0])
(6,data)
(7,intTwo)
(8,struct _twoIntsStruct *)
(9,data)
(10,data = (struct _twoIntsStruct *)
(11,data[0])
(12,RET)
(13,exit(-1)
(14,)
(15,data[0].intOne = 0)
(16,return data;)
(17,intOne)
(18,0)
(19,sizeof(struct _twoIntsStruct)
(20,0)
(21,data)
(22,0)
(23,data == NULL)
(24,100)
(25,0)
(26,-1)
(27,struct _twoIntsStruct)
(28,data[0].intTwo = 0)
(29,100*sizeof(struct _twoIntsStruct)
(30,(struct _twoIntsStruct *)
(31,(twoIntsStruct *)
(32,1)
(33,data)
(34,struct _twoIntsStruct * data)
(35,0)
(36,data[0].intTwo)
(37,data)
(38,if (data == NULL)
(39,data[0])
(40,data)
(41,)
(42,data[0].intOne)
(43,realloc(data, 100*sizeof(struct _twoIntsStruct)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
