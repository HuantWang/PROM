-----label-----
1
-----code-----
static twoIntsStruct * badSource(twoIntsStruct * data)
{
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
13,19
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
24,27
25,26
27,28
29,30
29,31
31,32
32,33
32,34
33,34
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
51,53
52,53
52,54
53,54
58,59
59,60
59,61
60,61
60,62
61,62
61,63
62,63
67,68
68,69
68,70
69,70
71,72
72,73
72,74
73,74
76,77
77,78
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,28,30,34,35,39,41,46,48,54,55,56,57,63,64,65,66,70,74,75,78
-----computeFrom-----
15,16
15,17
29,30
29,31
37,38
37,39
50,51
50,52
59,60
59,61
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static twoIntsStruct * badSource(twoIntsStruct * data){    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    return data;}
static twoIntsStruct
twoIntsStruct
* badSource(twoIntsStruct * data)
*
badSource
twoIntsStruct * data
twoIntsStruct
twoIntsStruct
* data
*
data
{    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    return data;}
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
return data;
data
data
-----joern-----
(11,32,0)
(28,26,0)
(0,9,0)
(22,31,0)
(12,26,0)
(27,30,0)
(20,41,0)
(37,33,0)
(32,2,0)
(30,2,0)
(1,21,0)
(18,27,0)
(26,9,0)
(19,25,0)
(9,26,0)
(41,14,0)
(28,30,0)
(36,35,0)
(7,28,0)
(15,33,0)
(41,30,0)
(29,30,0)
(13,4,0)
(30,33,0)
(27,2,0)
(32,34,0)
(32,30,0)
(31,2,0)
(6,32,0)
(38,31,0)
(8,22,0)
(10,35,0)
(14,41,0)
(40,39,0)
(24,27,0)
(14,21,0)
(16,41,0)
(35,33,0)
(31,22,0)
(22,15,0)
(34,32,0)
(37,34,0)
(31,30,0)
(21,33,0)
(26,28,0)
(30,28,0)
(17,31,0)
(35,2,0)
(34,37,0)
(3,33,0)
(35,30,0)
(5,14,0)
(9,4,0)
(28,7,0)
(4,9,0)
(41,2,0)
(39,19,0)
(26,2,0)
(23,15,0)
(19,39,0)
(31,38,1)
(41,30,1)
(27,2,1)
(18,24,1)
(35,36,1)
(14,41,1)
(22,8,1)
(24,30,1)
(0,12,1)
(14,5,1)
(35,2,1)
(15,23,1)
(39,40,1)
(35,30,1)
(40,27,1)
(11,15,1)
(10,35,1)
(5,41,1)
(32,2,1)
(12,29,1)
(8,31,1)
(27,30,1)
(20,19,1)
(28,7,1)
(30,28,1)
(26,2,1)
(32,30,1)
(1,14,1)
(32,6,1)
(38,17,1)
(31,30,1)
(27,18,1)
(34,32,1)
(26,9,1)
(30,2,1)
(13,0,1)
(41,16,1)
(20,27,1)
(37,34,1)
(17,21,1)
(41,2,1)
(4,13,1)
(28,26,1)
(23,22,1)
(16,20,1)
(9,4,1)
(19,39,1)
(36,37,1)
(6,11,1)
(22,31,1)
(31,2,1)
(21,1,1)
(37,34,2)
(10,35,2)
(22,31,2)
(19,39,2)
(30,2,2)
(31,2,2)
(40,27,2)
(32,2,2)
(32,30,2)
(35,2,2)
(41,2,2)
(30,28,2)
(28,26,2)
(26,2,2)
(19,27,2)
(34,32,2)
(31,30,2)
(14,41,2)
(41,30,2)
(39,27,2)
(28,7,2)
(27,30,2)
(27,2,2)
(26,9,2)
(9,4,2)
(35,30,2)
-----------------------------------
(0,100)
(1,0)
(2,twoIntsStruct * data)
(3,if (data == NULL)
(4,sizeof(twoIntsStruct)
(5,intOne)
(6,0)
(7,twoIntsStruct *)
(8,intTwo)
(9,100*sizeof(twoIntsStruct)
(10,RET)
(11,data)
(12,data)
(13,twoIntsStruct)
(14,data[0].intOne)
(15,data[0].intTwo = 0)
(16,0)
(17,data)
(18,NULL)
(19,exit(-1)
(20,data)
(21,data[0].intOne = 0)
(22,data[0].intTwo)
(23,0)
(24,data)
(25,)
(26,realloc(data, 100*sizeof(twoIntsStruct)
(27,data == NULL)
(28,(twoIntsStruct *)
(29,data)
(30,data = (twoIntsStruct *)
(31,data[0])
(32,data[0])
(33,)
(34,&data[0])
(35,return data;)
(36,data)
(37,printStructLine(&data[0])
(38,0)
(39,-1)
(40,1)
(41,data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
