-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_malloc_06_bad()
{
    int64_t * data;
    data = NULL;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)malloc(100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
24,28
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
60,61
60,62
61,62
65,66
66,67
66,68
67,68
69,70
69,71
70,71
73,74
73,75
74,75
74,76
75,76
78,79
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,39,43,44,48,50,55,57,62,63,64,68,71,72,76,77,79
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
38,39
38,40
46,47
46,48
59,60
59,61
74,75
74,76
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_malloc_06_bad(){    int64_t * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_malloc_06_bad()
CWE401_Memory_Leak__int64_t_malloc_06_bad
{    int64_t * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)malloc(100*sizeof(int64_t));
data = (int64_t *)malloc(100*sizeof(int64_t))
data
data
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(20,13,0)
(6,13,0)
(27,3,0)
(23,17,0)
(1,24,0)
(29,24,0)
(33,5,0)
(5,6,0)
(15,3,0)
(36,22,0)
(2,16,0)
(10,14,0)
(13,3,0)
(18,0,0)
(8,26,0)
(31,0,0)
(30,6,0)
(33,26,0)
(13,6,0)
(34,14,0)
(26,33,0)
(4,16,0)
(21,25,0)
(0,13,0)
(17,23,0)
(24,14,0)
(6,5,0)
(35,33,0)
(9,17,0)
(23,12,0)
(5,33,0)
(7,3,0)
(19,14,0)
(32,22,0)
(0,15,0)
(15,0,0)
(16,13,0)
(28,25,0)
(6,30,0)
(35,20,1)
(16,13,1)
(21,28,1)
(11,25,1)
(0,18,1)
(16,2,1)
(13,6,1)
(24,1,1)
(5,33,1)
(27,16,1)
(18,31,1)
(17,9,1)
(6,5,1)
(36,24,1)
(22,32,1)
(23,17,1)
(0,13,1)
(31,27,1)
(25,21,1)
(27,23,1)
(33,26,1)
(6,30,1)
(28,15,1)
(8,35,1)
(32,36,1)
(1,29,1)
(2,4,1)
(20,22,1)
(15,0,1)
(28,22,1)
(9,16,1)
(4,13,1)
(26,8,1)
(5,33,2)
(20,22,2)
(31,22,2)
(6,22,2)
(18,22,2)
(27,22,2)
(4,22,2)
(13,22,2)
(5,22,2)
(6,30,2)
(0,22,2)
(23,17,2)
(17,16,2)
(9,16,2)
(33,22,2)
(15,0,2)
(0,13,2)
(16,13,2)
(26,22,2)
(16,22,2)
(6,5,2)
(13,6,2)
(33,26,2)
(2,22,2)
(15,22,2)
(35,22,2)
(23,16,2)
(8,22,2)
-----------------------------------
(0,data[0])
(1,NULL)
(2,NULL)
(3,)
(4,data)
(5,malloc(100*sizeof(int64_t)
(6,(int64_t *)
(7,if (data == NULL)
(8,int64_t)
(9,1)
(10,if(STATIC_CONST_FIVE==5)
(11,RET)
(12,)
(13,data = (int64_t *)
(14,)
(15,printLongLongLine(data[0])
(16,data == NULL)
(17,-1)
(18,0)
(19,data)
(20,data)
(21,5)
(22,STATIC_CONST_FIVE==5)
(23,exit(-1)
(24,data = NULL)
(25,STATIC_CONST_FIVE==5)
(26,sizeof(int64_t)
(27,L)
(28,STATIC_CONST_FIVE)
(29,data)
(30,int64_t *)
(31,data)
(32,5)
(33,100*sizeof(int64_t)
(34,if(STATIC_CONST_FIVE==5)
(35,100)
(36,STATIC_CONST_FIVE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
