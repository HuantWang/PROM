-----label-----
1
-----code-----
void CWE401_Memory_Leak__char_malloc_41_bad()
{
    char * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (char *)malloc(100*sizeof(char));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    strcpy(data, "A String");
    printLine(data);
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
51,52
53,54
56,57
57,58
57,59
58,59
60,61
62,63
63,64
63,65
64,65
66,67
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,39,41,46,48,52,54,55,59,61,65,67
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__char_malloc_41_bad(){    char * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    badSink(data);}
void
CWE401_Memory_Leak__char_malloc_41_bad()
CWE401_Memory_Leak__char_malloc_41_bad
{    char * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    badSink(data);}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(15,23,0)
(6,20,0)
(15,27,0)
(0,9,0)
(9,0,0)
(19,7,0)
(3,16,0)
(2,16,0)
(21,3,0)
(8,7,0)
(13,3,0)
(26,16,0)
(24,23,0)
(1,13,0)
(7,3,0)
(25,26,0)
(2,3,0)
(4,16,0)
(27,15,0)
(23,15,0)
(14,2,0)
(20,27,0)
(23,3,0)
(29,16,0)
(22,5,0)
(27,20,0)
(7,16,0)
(13,16,0)
(11,9,0)
(0,18,0)
(23,24,0)
(12,26,0)
(5,3,0)
(17,27,0)
(10,5,0)
(3,23,0)
(0,9,1)
(27,20,1)
(7,3,1)
(5,22,1)
(2,3,1)
(13,1,1)
(28,2,1)
(10,3,1)
(13,3,1)
(2,14,1)
(23,15,1)
(20,6,1)
(14,13,1)
(5,3,1)
(1,7,1)
(22,10,1)
(19,5,1)
(21,26,1)
(26,12,1)
(11,5,1)
(15,27,1)
(3,23,1)
(17,21,1)
(6,17,1)
(19,0,1)
(12,25,1)
(8,19,1)
(9,11,1)
(23,24,1)
(7,8,1)
(9,5,2)
(27,20,2)
(15,27,2)
(11,5,2)
(13,3,2)
(23,15,2)
(7,3,2)
(0,5,2)
(3,23,2)
(5,3,2)
(2,3,2)
(0,9,2)
(23,24,2)
-----------------------------------
(0,exit(-1)
(1,data)
(2,badSink(data)
(3,data = (char *)
(4,data)
(5,data == NULL)
(6,char)
(7,strcpy(data, "A String")
(8,"A String")
(9,-1)
(10,data)
(11,1)
(12,NULL)
(13,printLine(data)
(14,data)
(15,malloc(100*sizeof(char)
(16,)
(17,100)
(18,)
(19,data)
(20,sizeof(char)
(21,data)
(22,NULL)
(23,(char *)
(24,char *)
(25,data)
(26,data = NULL)
(27,100*sizeof(char)
(28,RET)
(29,if (data == NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
