-----label-----
1
-----code-----
void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_44_bad()
{
    struct _twoIntsStruct * data;
    /* define a function pointer */
    void (*funcPtr) (struct _twoIntsStruct *) = badSink;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
16,17
16,18
16,19
17,18
17,19
20,21
20,22
21,22
23,24
23,25
26,27
27,28
29,30
30,31
30,32
31,32
33,34
35,36
36,37
36,38
37,38
39,40
39,41
40,41
40,42
41,42
43,44
45,46
45,47
45,48
46,47
48,49
50,51
50,52
52,53
53,54
53,55
54,55
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
66,67
68,69
70,71
71,72
71,73
72,73
72,74
73,74
73,75
74,75
79,80
80,81
80,82
81,82
81,83
82,83
82,84
83,84
88,89
89,90
89,91
90,91
92,93
92,94
93,94
93,95
94,95
96,97
98,99
99,100
99,101
100,101
103,104
104,105
104,106
105,106
107,108
-----nextToken-----
2,4,9,11,12,15,18,19,22,24,25,28,32,34,38,42,44,47,49,51,55,56,60,62,67,69,75,76,77,78,84,85,86,87,91,95,97,101,102,106,108
-----computeFrom-----
30,31
30,32
36,37
36,38
50,51
50,52
58,59
58,60
71,72
71,73
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_44_bad(){    struct _twoIntsStruct * data;    /* define a function pointer */    void (*funcPtr) (struct _twoIntsStruct *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    /* use the function pointer */    funcPtr(data);}
void
CWE401_Memory_Leak__struct_twoIntsStruct_realloc_44_bad()
CWE401_Memory_Leak__struct_twoIntsStruct_realloc_44_bad
{    struct _twoIntsStruct * data;    /* define a function pointer */    void (*funcPtr) (struct _twoIntsStruct *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    /* use the function pointer */    funcPtr(data);}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
void (*funcPtr) (struct _twoIntsStruct *) = badSink;
void (*funcPtr) (struct _twoIntsStruct *) = badSink;
void
(*funcPtr) (struct _twoIntsStruct *) = badSink
*funcPtr
*
funcPtr
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*

= badSink
badSink
badSink
data = NULL;
data = NULL
data
data
NULL
NULL
data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
realloc(data, 100*sizeof(struct _twoIntsStruct))
realloc
realloc
data
data
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(38,32,0)
(42,15,0)
(15,27,0)
(3,27,0)
(25,39,0)
(42,19,0)
(21,15,0)
(1,29,0)
(42,34,0)
(32,15,0)
(37,27,0)
(35,24,0)
(11,26,0)
(18,15,0)
(29,1,0)
(18,0,0)
(20,37,0)
(45,1,0)
(6,0,0)
(5,27,0)
(26,11,0)
(1,37,0)
(46,24,0)
(48,46,0)
(17,27,0)
(9,27,0)
(33,18,0)
(34,42,0)
(10,50,0)
(24,46,0)
(31,17,0)
(39,15,0)
(26,4,0)
(49,41,0)
(19,9,0)
(8,39,0)
(2,9,0)
(43,50,0)
(6,16,0)
(23,10,0)
(10,39,0)
(6,13,0)
(22,29,0)
(39,10,0)
(28,11,0)
(13,27,0)
(12,18,0)
(14,19,0)
(44,29,0)
(32,27,0)
(16,6,0)
(47,17,0)
(0,6,0)
(36,41,0)
(46,48,0)
(7,27,0)
(40,9,0)
(15,42,0)
(19,24,0)
(29,15,0)
(50,27,0)
(0,18,0)
(24,19,0)
(41,15,0)
(19,42,0)
(13,6,0)
(10,23,1)
(32,15,1)
(18,33,1)
(37,20,1)
(42,19,1)
(38,13,1)
(32,38,1)
(47,31,1)
(30,32,1)
(23,39,1)
(42,34,1)
(40,17,1)
(22,50,1)
(18,15,1)
(24,46,1)
(46,35,1)
(39,25,1)
(26,11,1)
(2,40,1)
(8,26,1)
(17,47,1)
(19,24,1)
(11,28,1)
(10,39,1)
(45,29,1)
(35,14,1)
(0,18,1)
(14,21,1)
(43,10,1)
(25,8,1)
(46,48,1)
(29,15,1)
(29,44,1)
(1,45,1)
(41,15,1)
(41,49,1)
(1,29,1)
(15,42,1)
(9,2,1)
(12,37,1)
(50,43,1)
(6,16,1)
(21,9,1)
(33,12,1)
(6,0,1)
(39,15,1)
(13,6,1)
(20,1,1)
(49,36,1)
(19,9,1)
(28,41,1)
(44,22,1)
(8,41,1)
(36,15,1)
(28,41,2)
(19,9,2)
(39,15,2)
(0,18,2)
(19,24,2)
(1,29,2)
(26,41,2)
(18,15,2)
(11,41,2)
(46,48,2)
(15,42,2)
(24,46,2)
(6,16,2)
(29,15,2)
(13,6,2)
(42,19,2)
(42,34,2)
(10,39,2)
(26,11,2)
(32,15,2)
(6,0,2)
(41,15,2)
-----------------------------------
(0,&data[0])
(1,data[0].intTwo)
(2,NULL)
(3,funcPtr)
(4,)
(5,data)
(6,(twoIntsStruct *)
(7,if (data == NULL)
(8,data)
(9,data = NULL)
(10,data[0].intOne)
(11,-1)
(12,data)
(13,printStructLine((twoIntsStruct *)
(14,data)
(15,data = (struct _twoIntsStruct *)
(16,twoIntsStruct *)
(17,(*funcPtr)
(18,data[0])
(19,realloc(data, 100*sizeof(struct _twoIntsStruct)
(20,0)
(21,data)
(22,data)
(23,intOne)
(24,100*sizeof(struct _twoIntsStruct)
(25,0)
(26,exit(-1)
(27,)
(28,1)
(29,data[0])
(30,RET)
(31,funcPtr)
(32,funcPtr(data)
(33,0)
(34,struct _twoIntsStruct *)
(35,100)
(36,data)
(37,data[0].intTwo = 0)
(38,data)
(39,data[0])
(40,data)
(41,data == NULL)
(42,(struct _twoIntsStruct *)
(43,0)
(44,0)
(45,intTwo)
(46,sizeof(struct _twoIntsStruct)
(47,badSink)
(48,struct _twoIntsStruct)
(49,NULL)
(50,data[0].intOne = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
