-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_malloc_13_bad()
{
    int * data;
    data = NULL;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int *)malloc(100*sizeof(int));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5;
        printIntLine(data[0]);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
57,59
58,59
62,63
63,64
63,65
64,65
66,67
66,68
67,68
70,71
70,72
71,72
71,73
72,73
75,76
-----nextToken-----
2,4,8,10,11,15,17,21,22,27,30,32,35,37,40,41,45,47,52,54,59,60,61,65,68,69,73,74,76
-----computeFrom-----
13,14
13,15
19,20
19,21
25,26
25,27
36,37
36,38
43,44
43,45
56,57
56,58
71,72
71,73
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int_malloc_13_bad(){    int * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)malloc(100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int_malloc_13_bad()
CWE401_Memory_Leak__int_malloc_13_bad
{    int * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)malloc(100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)malloc(100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)malloc(100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }
data = (int *)malloc(100*sizeof(int));
data = (int *)malloc(100*sizeof(int))
data
data
(int *)malloc(100*sizeof(int))
int *
int
*
*
malloc(100*sizeof(int))
malloc
malloc
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(35,13,0)
(1,30,0)
(37,9,0)
(25,16,0)
(12,26,0)
(17,9,0)
(30,18,0)
(20,8,0)
(14,29,0)
(18,13,0)
(34,18,0)
(2,18,0)
(10,6,0)
(29,0,0)
(36,0,0)
(26,40,0)
(9,18,0)
(4,30,0)
(23,31,0)
(40,16,0)
(31,23,0)
(33,35,0)
(2,35,0)
(30,28,0)
(21,0,0)
(3,29,0)
(30,35,0)
(5,25,0)
(28,30,0)
(15,40,0)
(27,2,0)
(32,2,0)
(18,25,0)
(22,6,0)
(39,13,0)
(25,5,0)
(19,0,0)
(28,13,0)
(31,7,0)
(16,25,0)
(16,40,0)
(40,26,0)
(11,8,0)
(25,18,0)
(38,23,0)
(32,27,1)
(3,14,1)
(6,22,1)
(29,3,1)
(37,17,1)
(18,25,1)
(34,8,1)
(24,6,1)
(2,32,1)
(11,20,1)
(10,28,1)
(27,9,1)
(28,30,1)
(40,26,1)
(26,12,1)
(27,31,1)
(12,15,1)
(1,4,1)
(38,9,1)
(9,18,1)
(31,23,1)
(20,29,1)
(2,18,1)
(30,1,1)
(10,8,1)
(25,5,1)
(23,38,1)
(30,35,1)
(30,18,1)
(4,35,1)
(8,11,1)
(9,37,1)
(25,16,1)
(17,18,1)
(22,10,1)
(33,2,1)
(16,40,1)
(15,34,1)
(35,33,1)
(37,8,2)
(16,8,2)
(18,25,2)
(23,9,2)
(26,8,2)
(28,8,2)
(25,5,2)
(34,8,2)
(9,18,2)
(16,40,2)
(27,8,2)
(33,8,2)
(28,30,2)
(40,8,2)
(30,35,2)
(2,18,2)
(2,8,2)
(31,9,2)
(30,8,2)
(18,8,2)
(35,8,2)
(12,8,2)
(31,23,2)
(17,8,2)
(32,8,2)
(1,8,2)
(4,8,2)
(38,9,2)
(9,8,2)
(25,16,2)
(25,8,2)
(30,18,2)
(40,26,2)
(15,8,2)
-----------------------------------
(0,)
(1,0)
(2,data[0])
(3,NULL)
(4,data)
(5,int *)
(6,GLOBAL_CONST_FIVE==5)
(7,)
(8,GLOBAL_CONST_FIVE==5)
(9,data == NULL)
(10,GLOBAL_CONST_FIVE)
(11,5)
(12,int)
(13,)
(14,data)
(15,100)
(16,malloc(100*sizeof(int)
(17,data)
(18,data = (int *)
(19,if(GLOBAL_CONST_FIVE==5)
(20,GLOBAL_CONST_FIVE)
(21,data)
(22,5)
(23,-1)
(24,RET)
(25,(int *)
(26,sizeof(int)
(27,data)
(28,printIntLine(data[0])
(29,data = NULL)
(30,data[0])
(31,exit(-1)
(32,0)
(33,5)
(34,data)
(35,data[0] = 5)
(36,if(GLOBAL_CONST_FIVE==5)
(37,NULL)
(38,1)
(39,if (data == NULL)
(40,100*sizeof(int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
