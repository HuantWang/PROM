-----label-----
1
-----code-----
void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_18_bad()
{
    struct _twoIntsStruct * data;
    data = NULL;
    goto source;
source:
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
5,15
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
31,32
33,34
33,35
33,36
34,35
37,38
38,39
38,40
39,40
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
57,59
58,59
58,60
59,60
64,65
65,66
65,67
66,67
66,68
67,68
67,69
68,69
73,74
74,75
74,76
75,76
77,78
77,79
78,79
78,80
79,80
81,82
83,84
84,85
84,86
85,86
88,89
90,91
90,92
-----nextToken-----
2,4,9,11,12,16,18,20,22,26,30,32,35,36,40,41,45,47,52,54,60,61,62,63,69,70,71,72,76,80,82,86,87,89,91,92
-----computeFrom-----
14,15
14,16
24,25
24,26
43,44
43,45
56,57
56,58
65,66
65,67
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_18_bad(){    struct _twoIntsStruct * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__struct_twoIntsStruct_calloc_18_bad()
CWE401_Memory_Leak__struct_twoIntsStruct_calloc_18_bad
{    struct _twoIntsStruct * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
source
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
calloc(100, sizeof(struct _twoIntsStruct))
calloc
calloc
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(3,39,0)
(28,22,0)
(20,28,0)
(20,23,0)
(1,39,0)
(46,31,0)
(33,47,0)
(38,39,0)
(25,42,0)
(32,39,0)
(22,28,0)
(35,39,0)
(47,10,0)
(23,32,0)
(34,44,0)
(16,45,0)
(28,20,0)
(19,4,0)
(12,33,0)
(28,8,0)
(0,39,0)
(33,12,0)
(9,45,0)
(44,39,0)
(37,31,0)
(15,38,0)
(15,4,0)
(26,11,0)
(4,32,0)
(32,33,0)
(5,26,0)
(33,32,0)
(43,31,0)
(10,24,0)
(13,47,0)
(42,32,0)
(14,15,0)
(24,10,0)
(8,28,0)
(27,39,0)
(11,7,0)
(30,32,0)
(36,23,0)
(31,32,0)
(31,46,0)
(41,46,0)
(46,44,0)
(23,20,0)
(18,38,0)
(2,42,0)
(10,47,0)
(21,23,0)
(47,33,0)
(45,39,0)
(6,39,0)
(40,4,0)
(22,39,0)
(4,15,0)
(11,26,0)
(19,44,1)
(15,4,1)
(14,4,1)
(45,9,1)
(11,26,1)
(10,13,1)
(13,30,1)
(34,46,1)
(43,42,1)
(37,43,1)
(43,11,1)
(30,3,1)
(33,47,1)
(23,32,1)
(31,37,1)
(2,25,1)
(20,23,1)
(44,34,1)
(31,32,1)
(33,12,1)
(9,16,1)
(18,15,1)
(46,31,1)
(25,32,1)
(15,14,1)
(5,42,1)
(42,2,1)
(38,18,1)
(17,27,1)
(21,38,1)
(28,20,1)
(47,10,1)
(40,19,1)
(4,40,1)
(32,33,1)
(28,8,1)
(36,21,1)
(27,22,1)
(3,45,1)
(22,28,1)
(42,32,1)
(23,36,1)
(10,24,1)
(41,31,1)
(4,32,1)
(26,5,1)
(46,41,1)
(10,24,2)
(32,33,2)
(42,32,2)
(28,8,2)
(33,47,2)
(11,42,2)
(20,23,2)
(28,20,2)
(31,32,2)
(23,32,2)
(26,42,2)
(47,10,2)
(22,28,2)
(33,12,2)
(5,42,2)
(46,31,2)
(15,4,2)
(4,32,2)
(11,26,2)
-----------------------------------
(0,data)
(1,sink:)
(2,NULL)
(3,goto source;)
(4,data[0])
(5,1)
(6,source:)
(7,)
(8,twoIntsStruct *)
(9,NULL)
(10,sizeof(struct _twoIntsStruct)
(11,exit(-1)
(12,struct _twoIntsStruct *)
(13,100)
(14,intTwo)
(15,data[0].intTwo)
(16,data)
(17,RET)
(18,0)
(19,data)
(20,&data[0])
(21,data)
(22,printStructLine((twoIntsStruct *)
(23,data[0])
(24,struct _twoIntsStruct)
(25,data)
(26,-1)
(27,goto sink;)
(28,(twoIntsStruct *)
(29, sizeof(struct _twoIntsStruct)
(30,data)
(31,data[0])
(32,data = (struct _twoIntsStruct *)
(33,(struct _twoIntsStruct *)
(34,0)
(35,if (data == NULL)
(36,0)
(37,0)
(38,data[0].intTwo = 0)
(39,)
(40,0)
(41,intOne)
(42,data == NULL)
(43,data)
(44,data[0].intOne = 0)
(45,data = NULL)
(46,data[0].intOne)
(47,calloc(100, sizeof(struct _twoIntsStruct)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
