-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_calloc_01_bad()
{
    int64_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)calloc(100, sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
33,34
34,35
34,36
35,36
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
53,55
54,55
58,59
59,60
59,61
60,61
62,63
62,64
63,64
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,32,36,37,41,43,48,50,55,56,57,61,64,65,66
-----computeFrom-----
14,15
14,16
20,21
20,22
39,40
39,41
52,53
52,54
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_calloc_01_bad(){    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__int64_t_calloc_01_bad()
CWE401_Memory_Leak__int64_t_calloc_01_bad
{    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)calloc(100, sizeof(int64_t));
data = (int64_t *)calloc(100, sizeof(int64_t))
data
data
(int64_t *)calloc(100, sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
calloc(100, sizeof(int64_t))
calloc
calloc
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
;
-----joern-----
(5,16,0)
(12,14,0)
(16,1,0)
(7,1,0)
(22,0,0)
(9,0,0)
(17,0,0)
(19,20,0)
(8,22,0)
(24,1,0)
(26,1,0)
(22,8,0)
(6,20,0)
(15,9,0)
(12,13,0)
(3,16,0)
(23,21,0)
(0,1,0)
(13,21,0)
(11,22,0)
(25,9,0)
(20,6,0)
(14,12,0)
(13,12,0)
(12,0,0)
(6,4,0)
(21,13,0)
(10,13,0)
(0,12,0)
(2,22,0)
(8,1,0)
(12,14,1)
(0,12,1)
(25,15,1)
(24,9,1)
(10,17,1)
(6,20,1)
(20,19,1)
(23,10,1)
(11,2,1)
(22,11,1)
(16,3,1)
(24,6,1)
(3,5,1)
(19,9,1)
(17,16,1)
(9,25,1)
(2,24,1)
(13,21,1)
(27,8,1)
(9,0,1)
(22,0,1)
(15,0,1)
(21,23,1)
(12,13,1)
(8,22,1)
(13,21,2)
(20,9,2)
(6,20,2)
(8,22,2)
(12,13,2)
(12,14,2)
(22,0,2)
(9,0,2)
(0,12,2)
(6,9,2)
(19,9,2)
-----------------------------------
(0,data = (int64_t *)
(1,)
(2,data)
(3,NULL)
(4,)
(5,data)
(6,exit(-1)
(7,data)
(8,printLongLongLine(data[0])
(9,data == NULL)
(10,100)
(11,0)
(12,(int64_t *)
(13,calloc(100, sizeof(int64_t)
(14,int64_t *)
(15,data)
(16,data = NULL)
(17,data)
(18, sizeof(int64_t)
(19,1)
(20,-1)
(21,sizeof(int64_t)
(22,data[0])
(23,int64_t)
(24,L)
(25,NULL)
(26,if (data == NULL)
(27,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
