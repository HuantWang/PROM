-----label-----
1
-----code-----
static void badSink()
{
    char * data = CWE401_Memory_Leak__strdup_char_45_badData;
    /* POTENTIAL FLAW: No deallocation of memory */
    /* no deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
9,12
12,13
13,14
-----nextToken-----
2,4,8,10,11,14,15
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;NullStatement;
-----ast_node-----
static void badSink(){    char * data = CWE401_Memory_Leak__strdup_char_45_badData;    /* POTENTIAL FLAW: No deallocation of memory */    /* no deallocation */    ; /* empty statement needed for some flow variants */}
static void
badSink()
badSink
{    char * data = CWE401_Memory_Leak__strdup_char_45_badData;    /* POTENTIAL FLAW: No deallocation of memory */    /* no deallocation */    ; /* empty statement needed for some flow variants */}
char * data = CWE401_Memory_Leak__strdup_char_45_badData;
char * data = CWE401_Memory_Leak__strdup_char_45_badData;
char
* data = CWE401_Memory_Leak__strdup_char_45_badData
*
data
= CWE401_Memory_Leak__strdup_char_45_badData
CWE401_Memory_Leak__strdup_char_45_badData
CWE401_Memory_Leak__strdup_char_45_badData
;
-----joern-----
(2,5,0)
(0,1,0)
(3,5,0)
(5,1,0)
(5,3,1)
(3,2,1)
(4,5,1)
-----------------------------------
(0,data)
(1,)
(2,data)
(3,CWE401_Memory_Leak__strdup_char_45_badData)
(4,RET)
(5,* data = CWE401_Memory_Leak__strdup_char_45_badData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
