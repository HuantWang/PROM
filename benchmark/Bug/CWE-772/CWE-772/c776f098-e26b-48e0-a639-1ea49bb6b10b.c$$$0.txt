-----label-----
1
-----code-----
char * CWE401_Memory_Leak__char_malloc_61b_badSource(char * data)
{
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (char *)malloc(100*sizeof(char));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    strcpy(data, "A String");
    printLine(data);
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
11,14
11,15
11,16
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
44,45
44,46
44,47
45,46
47,48
50,51
51,52
51,53
52,53
54,55
56,57
57,58
-----nextToken-----
2,4,5,7,9,10,15,18,20,23,25,28,29,33,35,40,42,46,48,49,53,55,58
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE401_Memory_Leak__char_malloc_61b_badSource(char * data){    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    return data;}
char
* CWE401_Memory_Leak__char_malloc_61b_badSource(char * data)
*
CWE401_Memory_Leak__char_malloc_61b_badSource
char * data
char
* data
*
data
{    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    return data;}
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
return data;
data
data
-----joern-----
(10,22,0)
(5,24,0)
(5,2,0)
(19,1,0)
(12,14,0)
(0,7,0)
(23,21,0)
(0,24,0)
(6,23,0)
(21,10,0)
(1,7,0)
(2,24,0)
(11,1,0)
(16,7,0)
(22,10,0)
(8,13,0)
(25,22,0)
(17,0,0)
(13,7,0)
(0,2,0)
(1,24,0)
(18,10,0)
(23,6,0)
(15,13,0)
(13,2,0)
(3,12,0)
(1,2,0)
(9,5,0)
(2,23,0)
(2,7,0)
(14,12,0)
(4,2,0)
(13,24,0)
(23,2,0)
(20,5,0)
(21,23,0)
(14,26,0)
(10,21,0)
(13,2,1)
(12,3,1)
(13,24,1)
(9,2,1)
(23,6,1)
(21,10,1)
(15,13,1)
(8,0,1)
(2,23,1)
(0,17,1)
(3,5,1)
(14,12,1)
(1,24,1)
(10,22,1)
(5,2,1)
(11,5,1)
(5,24,1)
(0,24,1)
(11,14,1)
(18,4,1)
(19,11,1)
(1,19,1)
(20,9,1)
(5,20,1)
(25,18,1)
(13,8,1)
(2,24,1)
(17,1,1)
(1,2,1)
(22,25,1)
(23,21,1)
(0,2,1)
(10,22,2)
(14,12,2)
(1,24,2)
(2,24,2)
(23,21,2)
(15,13,2)
(21,10,2)
(5,24,2)
(23,6,2)
(5,2,2)
(13,24,2)
(12,5,2)
(13,2,2)
(0,24,2)
(3,5,2)
(2,23,2)
(1,2,2)
(14,5,2)
(0,2,2)
-----------------------------------
(0,printLine(data)
(1,strcpy(data, "A String")
(2,data = (char *)
(3,1)
(4,data)
(5,data == NULL)
(6,char *)
(7,)
(8,data)
(9,data)
(10,100*sizeof(char)
(11,data)
(12,-1)
(13,return data;)
(14,exit(-1)
(15,RET)
(16,if (data == NULL)
(17,data)
(18,100)
(19,"A String")
(20,NULL)
(21,malloc(100*sizeof(char)
(22,sizeof(char)
(23,(char *)
(24,char * data)
(25,char)
(26,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
