-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_13_bad()
{
    twoIntsStruct * data;
    data = NULL;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0].intOne = 0;
        data[0].intTwo = 0;
        printStructLine(&data[0]);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
24,28
24,29
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
35,38
36,37
38,39
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
62,63
62,64
63,64
63,65
64,65
69,70
70,71
70,72
71,72
71,73
72,73
72,74
73,74
78,79
79,80
79,81
80,81
82,83
83,84
83,85
84,85
87,88
87,89
88,89
88,90
89,90
92,93
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,39,41,45,46,50,52,57,59,65,66,67,68,74,75,76,77,81,85,86,90,91,93
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
40,41
40,42
48,49
48,50
61,62
61,63
70,71
70,72
88,89
88,90
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_13_bad(){    twoIntsStruct * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__twoIntsStruct_realloc_13_bad()
CWE401_Memory_Leak__twoIntsStruct_realloc_13_bad
{    twoIntsStruct * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(1,46,0)
(21,40,0)
(23,40,0)
(8,32,0)
(49,26,0)
(45,28,0)
(7,1,0)
(40,23,0)
(39,17,0)
(41,6,0)
(10,16,0)
(34,13,0)
(21,46,0)
(17,33,0)
(48,6,0)
(22,37,0)
(25,33,0)
(2,50,0)
(33,13,0)
(31,24,0)
(6,48,0)
(9,28,0)
(2,1,0)
(33,17,0)
(13,40,0)
(0,32,0)
(50,21,0)
(13,33,0)
(29,16,0)
(12,21,0)
(24,22,0)
(43,51,0)
(42,36,0)
(37,46,0)
(45,51,0)
(4,46,0)
(3,32,0)
(51,21,0)
(16,21,0)
(51,45,0)
(44,50,0)
(14,0,0)
(28,46,0)
(19,45,0)
(38,0,0)
(13,0,0)
(40,13,0)
(22,24,0)
(37,22,0)
(20,51,0)
(48,27,0)
(50,2,0)
(35,32,0)
(40,21,0)
(24,21,0)
(30,24,0)
(15,50,0)
(47,2,0)
(18,26,0)
(5,36,0)
(45,51,1)
(42,5,1)
(12,26,1)
(13,0,1)
(18,49,1)
(24,30,1)
(30,31,1)
(44,28,1)
(22,24,1)
(13,33,1)
(48,6,1)
(45,19,1)
(49,0,1)
(39,25,1)
(37,22,1)
(20,16,1)
(40,23,1)
(43,20,1)
(41,16,1)
(15,44,1)
(16,21,1)
(40,13,1)
(50,15,1)
(7,2,1)
(29,10,1)
(28,9,1)
(10,21,1)
(5,37,1)
(36,42,1)
(31,1,1)
(51,21,1)
(21,40,1)
(25,34,1)
(6,41,1)
(2,47,1)
(2,50,1)
(51,43,1)
(16,29,1)
(26,18,1)
(20,48,1)
(0,38,1)
(11,36,1)
(1,7,1)
(5,26,1)
(24,21,1)
(33,17,1)
(9,45,1)
(34,12,1)
(17,39,1)
(38,14,1)
(50,21,1)
(19,51,1)
(47,50,1)
(50,21,2)
(37,26,2)
(45,51,2)
(22,26,2)
(17,26,2)
(2,26,2)
(6,16,2)
(16,21,2)
(20,26,2)
(34,26,2)
(45,26,2)
(33,17,2)
(31,26,2)
(37,22,2)
(1,26,2)
(39,26,2)
(40,23,2)
(24,21,2)
(15,26,2)
(30,26,2)
(51,21,2)
(41,16,2)
(40,26,2)
(12,26,2)
(19,26,2)
(21,40,2)
(13,0,2)
(16,26,2)
(22,24,2)
(33,26,2)
(13,26,2)
(51,26,2)
(2,50,2)
(13,33,2)
(25,26,2)
(21,26,2)
(40,13,2)
(24,26,2)
(28,26,2)
(43,26,2)
(44,26,2)
(29,26,2)
(50,26,2)
(10,26,2)
(48,16,2)
(9,26,2)
(48,6,2)
(47,26,2)
(7,26,2)
-----------------------------------
(0,data = NULL)
(1,data[0].intTwo = 0)
(2,data[0].intTwo)
(3,if(GLOBAL_CONST_FIVE==5)
(4,if (data == NULL)
(5,GLOBAL_CONST_FIVE)
(6,-1)
(7,0)
(8,if(GLOBAL_CONST_FIVE==5)
(9,0)
(10,data)
(11,RET)
(12,data)
(13,realloc(data, 100*sizeof(twoIntsStruct)
(14,data)
(15,0)
(16,data == NULL)
(17,sizeof(twoIntsStruct)
(18,5)
(19,intOne)
(20,data)
(21,data = (twoIntsStruct *)
(22,&data[0])
(23,twoIntsStruct *)
(24,data[0])
(25,100)
(26,GLOBAL_CONST_FIVE==5)
(27,)
(28,data[0].intOne = 0)
(29,NULL)
(30,0)
(31,data)
(32,)
(33,100*sizeof(twoIntsStruct)
(34,data)
(35,data)
(36,GLOBAL_CONST_FIVE==5)
(37,printStructLine(&data[0])
(38,NULL)
(39,twoIntsStruct)
(40,(twoIntsStruct *)
(41,1)
(42,5)
(43,0)
(44,data)
(45,data[0].intOne)
(46,)
(47,intTwo)
(48,exit(-1)
(49,GLOBAL_CONST_FIVE)
(50,data[0])
(51,data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
