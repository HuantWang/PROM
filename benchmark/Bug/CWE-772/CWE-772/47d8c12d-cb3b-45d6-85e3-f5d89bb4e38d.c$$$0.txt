-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_calloc_21_bad()
{
    int64_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)calloc(100, sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
33,34
34,35
34,36
35,36
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
53,55
54,55
58,59
59,60
59,61
60,61
62,63
62,64
63,64
66,67
67,68
67,69
68,69
71,72
72,73
72,74
73,74
75,76
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,32,36,37,41,43,48,50,55,56,57,61,64,65,69,70,74,76
-----computeFrom-----
14,15
14,16
20,21
20,22
39,40
39,41
52,53
52,54
67,68
67,69
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_calloc_21_bad(){    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__int64_t_calloc_21_bad()
CWE401_Memory_Leak__int64_t_calloc_21_bad
{    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    badStatic = 1; /* true */    badSink(data);}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)calloc(100, sizeof(int64_t));
data = (int64_t *)calloc(100, sizeof(int64_t))
data
data
(int64_t *)calloc(100, sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
calloc(100, sizeof(int64_t))
calloc
calloc
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(12,9,0)
(27,6,0)
(7,12,0)
(21,6,0)
(29,12,0)
(0,18,0)
(5,8,0)
(1,7,0)
(11,20,0)
(20,2,0)
(27,14,0)
(4,19,0)
(23,18,0)
(3,18,0)
(26,5,0)
(30,25,0)
(24,19,0)
(13,9,0)
(8,18,0)
(15,28,0)
(16,25,0)
(6,27,0)
(32,20,0)
(2,18,0)
(2,20,0)
(25,18,0)
(12,7,0)
(28,8,0)
(5,18,0)
(22,28,0)
(19,18,0)
(31,8,0)
(9,8,0)
(20,8,0)
(8,9,0)
(9,12,0)
(9,13,0)
(10,5,1)
(8,9,1)
(5,8,1)
(23,27,1)
(16,30,1)
(6,21,1)
(29,31,1)
(12,7,1)
(31,19,1)
(20,8,1)
(11,23,1)
(32,11,1)
(25,16,1)
(28,22,1)
(4,24,1)
(21,28,1)
(30,2,1)
(15,8,1)
(7,1,1)
(22,15,1)
(26,25,1)
(20,32,1)
(28,8,1)
(9,12,1)
(27,6,1)
(9,13,1)
(2,20,1)
(1,29,1)
(23,28,1)
(5,26,1)
(19,4,1)
(9,12,2)
(28,8,2)
(9,13,2)
(20,8,2)
(6,28,2)
(5,8,2)
(2,20,2)
(12,7,2)
(27,6,2)
(8,9,2)
(21,28,2)
(27,28,2)
-----------------------------------
(0,data)
(1,int64_t)
(2,printLongLongLine(data[0])
(3,if (data == NULL)
(4,NULL)
(5,badSink(data)
(6,-1)
(7,sizeof(int64_t)
(8,data = (int64_t *)
(9,(int64_t *)
(10,RET)
(11,data)
(12,calloc(100, sizeof(int64_t)
(13,int64_t *)
(14,)
(15,data)
(16,1)
(17, sizeof(int64_t)
(18,)
(19,data = NULL)
(20,data[0])
(21,1)
(22,NULL)
(23,L)
(24,data)
(25,badStatic = 1)
(26,data)
(27,exit(-1)
(28,data == NULL)
(29,100)
(30,badStatic)
(31,data)
(32,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
