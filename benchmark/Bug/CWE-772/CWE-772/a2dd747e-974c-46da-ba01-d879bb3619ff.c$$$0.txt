-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_calloc_18_bad()
{
    int64_t * data;
    data = NULL;
    goto source;
source:
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)calloc(100, sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
31,32
33,34
33,35
33,36
34,35
37,38
38,39
38,40
39,40
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
57,59
58,59
62,63
63,64
63,65
64,65
66,67
66,68
67,68
70,71
72,73
72,74
-----nextToken-----
2,4,9,11,12,16,18,20,22,26,30,32,35,36,40,41,45,47,52,54,59,60,61,65,68,69,71,73,74
-----computeFrom-----
14,15
14,16
24,25
24,26
43,44
43,45
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_calloc_18_bad(){    int64_t * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__int64_t_calloc_18_bad()
CWE401_Memory_Leak__int64_t_calloc_18_bad
{    int64_t * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));
source
data = (int64_t *)calloc(100, sizeof(int64_t));
data = (int64_t *)calloc(100, sizeof(int64_t))
data
data
(int64_t *)calloc(100, sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
calloc(100, sizeof(int64_t))
calloc
calloc
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(3,28,0)
(31,18,0)
(10,28,0)
(29,5,0)
(11,5,0)
(3,18,0)
(15,28,0)
(21,17,0)
(24,17,0)
(22,24,0)
(18,3,0)
(16,28,0)
(26,6,0)
(4,18,0)
(7,28,0)
(5,24,0)
(18,17,0)
(25,28,0)
(24,5,0)
(5,29,0)
(9,23,0)
(17,24,0)
(23,9,0)
(8,23,0)
(1,14,0)
(2,28,0)
(6,28,0)
(24,22,0)
(9,12,0)
(19,6,0)
(14,17,0)
(13,28,0)
(27,14,0)
(30,29,0)
(17,28,0)
(9,23,1)
(10,3,1)
(27,1,1)
(25,6,1)
(5,29,1)
(31,4,1)
(23,8,1)
(0,10,1)
(17,24,1)
(11,21,1)
(3,18,1)
(24,5,1)
(29,30,1)
(15,14,1)
(14,17,1)
(1,17,1)
(18,17,1)
(8,14,1)
(21,25,1)
(15,9,1)
(18,31,1)
(26,19,1)
(24,22,1)
(6,26,1)
(14,27,1)
(30,11,1)
(4,15,1)
(18,17,2)
(14,17,2)
(9,14,2)
(9,23,2)
(24,22,2)
(17,24,2)
(24,5,2)
(3,18,2)
(5,29,2)
(23,14,2)
(8,14,2)
-----------------------------------
(0,RET)
(1,data)
(2,data)
(3,printLongLongLine(data[0])
(4,data)
(5,calloc(100, sizeof(int64_t)
(6,data = NULL)
(7,sink:)
(8,1)
(9,exit(-1)
(10,goto sink;)
(11,100)
(12,)
(13,source:)
(14,data == NULL)
(15,L)
(16,if (data == NULL)
(17,data = (int64_t *)
(18,data[0])
(19,data)
(20, sizeof(int64_t)
(21,data)
(22,int64_t *)
(23,-1)
(24,(int64_t *)
(25,goto source;)
(26,NULL)
(27,NULL)
(28,)
(29,sizeof(int64_t)
(30,int64_t)
(31,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
