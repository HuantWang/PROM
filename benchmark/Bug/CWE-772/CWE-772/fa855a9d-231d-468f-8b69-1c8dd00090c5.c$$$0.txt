-----label-----
1
-----code-----
void CWE401_Memory_Leak__char_calloc_21_bad()
{
    char * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (char *)calloc(100, sizeof(char));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    strcpy(data, "A String");
    printLine(data);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
31,32
32,33
32,34
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
49,52
50,51
52,53
55,56
56,57
56,58
57,58
59,60
61,62
62,63
62,64
63,64
66,67
67,68
67,69
68,69
70,71
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,30,33,34,38,40,45,47,51,53,54,58,60,64,65,69,71
-----computeFrom-----
13,14
13,15
19,20
19,21
36,37
36,38
62,63
62,64
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__char_calloc_21_bad(){    char * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)calloc(100, sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__char_calloc_21_bad()
CWE401_Memory_Leak__char_calloc_21_bad
{    char * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)calloc(100, sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    badStatic = 1; /* true */    badSink(data);}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (char *)calloc(100, sizeof(char));
data = (char *)calloc(100, sizeof(char))
data
data
(char *)calloc(100, sizeof(char))
char *
char
*
*
calloc(100, sizeof(char))
calloc
calloc
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(18,17,0)
(12,11,0)
(14,20,0)
(21,11,0)
(4,11,0)
(13,18,0)
(3,17,0)
(12,17,0)
(22,11,0)
(20,2,0)
(22,17,0)
(7,16,0)
(6,22,0)
(15,3,0)
(24,11,0)
(17,18,0)
(25,14,0)
(24,17,0)
(27,23,0)
(10,11,0)
(26,31,0)
(32,12,0)
(29,4,0)
(23,16,0)
(16,23,0)
(19,31,0)
(18,13,0)
(18,16,0)
(20,14,0)
(28,22,0)
(9,4,0)
(17,11,0)
(16,18,0)
(5,3,0)
(1,17,0)
(31,11,0)
(0,24,0)
(29,9,1)
(30,12,1)
(17,18,1)
(28,20,1)
(5,17,1)
(28,3,1)
(3,17,1)
(27,7,1)
(6,28,1)
(25,3,1)
(32,4,1)
(15,5,1)
(20,14,1)
(22,17,1)
(24,0,1)
(4,29,1)
(23,27,1)
(12,17,1)
(1,31,1)
(16,23,1)
(12,32,1)
(9,24,1)
(26,19,1)
(0,22,1)
(3,15,1)
(22,6,1)
(24,17,1)
(7,1,1)
(18,13,1)
(14,25,1)
(31,26,1)
(18,16,1)
(14,3,2)
(25,3,2)
(20,14,2)
(17,18,2)
(16,23,2)
(12,17,2)
(3,17,2)
(22,17,2)
(24,17,2)
(18,16,2)
(20,3,2)
(18,13,2)
-----------------------------------
(0,data)
(1,data)
(2,)
(3,data == NULL)
(4,badStatic = 1)
(5,data)
(6,"A String")
(7,100)
(8, sizeof(char)
(9,badStatic)
(10,data)
(11,)
(12,badSink(data)
(13,char *)
(14,-1)
(15,NULL)
(16,calloc(100, sizeof(char)
(17,data = (char *)
(18,(char *)
(19,data)
(20,exit(-1)
(21,if (data == NULL)
(22,strcpy(data, "A String")
(23,sizeof(char)
(24,printLine(data)
(25,1)
(26,NULL)
(27,char)
(28,data)
(29,1)
(30,RET)
(31,data = NULL)
(32,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
