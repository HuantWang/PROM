-----label-----
1
-----code-----
void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_44_bad()
{
    struct _twoIntsStruct * data;
    /* define a function pointer */
    void (*funcPtr) (struct _twoIntsStruct *) = badSink;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
16,17
16,18
16,19
17,18
17,19
20,21
20,22
21,22
23,24
23,25
26,27
27,28
29,30
30,31
30,32
31,32
33,34
35,36
36,37
36,38
37,38
39,40
39,41
40,41
40,42
41,42
43,44
45,46
45,47
45,48
46,47
49,50
50,51
50,52
51,52
54,55
54,56
55,56
55,57
56,57
58,59
60,61
61,62
62,63
62,64
63,64
65,66
67,68
68,69
68,70
69,70
69,71
70,71
70,72
71,72
76,77
77,78
77,79
78,79
78,80
79,80
79,81
80,81
85,86
86,87
86,88
87,88
89,90
89,91
90,91
90,92
91,92
93,94
95,96
96,97
96,98
97,98
100,101
101,102
101,103
102,103
104,105
-----nextToken-----
2,4,9,11,12,15,18,19,22,24,25,28,32,34,38,42,44,47,48,52,53,57,59,64,66,72,73,74,75,81,82,83,84,88,92,94,98,99,103,105
-----computeFrom-----
30,31
30,32
36,37
36,38
55,56
55,57
68,69
68,70
77,78
77,79
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_44_bad(){    struct _twoIntsStruct * data;    /* define a function pointer */    void (*funcPtr) (struct _twoIntsStruct *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    /* use the function pointer */    funcPtr(data);}
void
CWE401_Memory_Leak__struct_twoIntsStruct_calloc_44_bad()
CWE401_Memory_Leak__struct_twoIntsStruct_calloc_44_bad
{    struct _twoIntsStruct * data;    /* define a function pointer */    void (*funcPtr) (struct _twoIntsStruct *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    /* use the function pointer */    funcPtr(data);}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
void (*funcPtr) (struct _twoIntsStruct *) = badSink;
void (*funcPtr) (struct _twoIntsStruct *) = badSink;
void
(*funcPtr) (struct _twoIntsStruct *) = badSink
*funcPtr
*
funcPtr
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*

= badSink
badSink
badSink
data = NULL;
data = NULL
data
data
NULL
NULL
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
calloc(100, sizeof(struct _twoIntsStruct))
calloc
calloc
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(16,29,0)
(4,26,0)
(35,33,0)
(7,14,0)
(32,8,0)
(49,34,0)
(43,32,0)
(3,14,0)
(9,3,0)
(17,44,0)
(38,6,0)
(8,34,0)
(13,32,0)
(26,21,0)
(35,28,0)
(41,40,0)
(2,26,0)
(7,45,0)
(29,34,0)
(14,10,0)
(44,34,0)
(20,34,0)
(21,35,0)
(30,29,0)
(48,44,0)
(0,36,0)
(24,1,0)
(3,34,0)
(43,3,0)
(5,19,0)
(18,8,0)
(21,26,0)
(35,21,0)
(23,37,0)
(36,3,0)
(33,34,0)
(1,34,0)
(32,43,0)
(27,37,0)
(14,3,0)
(46,45,0)
(25,43,0)
(33,35,0)
(10,14,0)
(36,34,0)
(6,5,0)
(40,48,0)
(26,3,0)
(48,40,0)
(5,6,0)
(12,7,0)
(28,35,0)
(37,3,0)
(47,48,0)
(22,1,0)
(14,7,0)
(40,3,0)
(11,40,0)
(39,34,0)
(42,43,0)
(45,7,0)
(45,46,0)
(3,14,1)
(11,37,1)
(18,32,1)
(32,43,1)
(42,25,1)
(36,3,1)
(13,43,1)
(2,8,1)
(40,3,1)
(15,36,1)
(41,11,1)
(6,38,1)
(5,6,1)
(9,29,1)
(47,40,1)
(40,41,1)
(29,30,1)
(0,33,1)
(16,1,1)
(48,40,1)
(8,18,1)
(35,28,1)
(14,7,1)
(43,3,1)
(27,3,1)
(36,0,1)
(23,27,1)
(45,46,1)
(24,22,1)
(37,23,1)
(32,13,1)
(37,3,1)
(17,48,1)
(45,12,1)
(12,9,1)
(48,47,1)
(35,21,1)
(26,4,1)
(26,3,1)
(44,17,1)
(43,42,1)
(21,26,1)
(11,5,1)
(33,35,1)
(38,37,1)
(14,10,1)
(7,45,1)
(1,24,1)
(25,44,1)
(30,16,1)
(4,2,1)
(48,40,2)
(21,26,2)
(14,7,2)
(35,21,2)
(40,3,2)
(3,14,2)
(5,37,2)
(33,35,2)
(26,3,2)
(5,6,2)
(7,45,2)
(14,10,2)
(35,28,2)
(6,37,2)
(36,3,2)
(38,37,2)
(32,43,2)
(37,3,2)
(45,46,2)
(43,3,2)
-----------------------------------
(0,data)
(1,(*funcPtr)
(2,data)
(3,data = (struct _twoIntsStruct *)
(4,0)
(5,exit(-1)
(6,-1)
(7,calloc(100, sizeof(struct _twoIntsStruct)
(8,data[0].intTwo = 0)
(9,data)
(10,struct _twoIntsStruct *)
(11,data)
(12,100)
(13,intTwo)
(14,(struct _twoIntsStruct *)
(15,RET)
(16,data)
(17,0)
(18,0)
(19,)
(20,if (data == NULL)
(21,&data[0])
(22,funcPtr)
(23,NULL)
(24,badSink)
(25,data)
(26,data[0])
(27,data)
(28,twoIntsStruct *)
(29,data = NULL)
(30,NULL)
(31, sizeof(struct _twoIntsStruct)
(32,data[0].intTwo)
(33,printStructLine((twoIntsStruct *)
(34,)
(35,(twoIntsStruct *)
(36,funcPtr(data)
(37,data == NULL)
(38,1)
(39,data)
(40,data[0])
(41,0)
(42,0)
(43,data[0])
(44,data[0].intOne = 0)
(45,sizeof(struct _twoIntsStruct)
(46,struct _twoIntsStruct)
(47,intOne)
(48,data[0].intOne)
(49,funcPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
