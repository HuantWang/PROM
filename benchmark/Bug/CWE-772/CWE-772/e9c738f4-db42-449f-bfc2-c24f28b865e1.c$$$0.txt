-----label-----
1
-----code-----
void CWE401_Memory_Leak__strdup_char_65_bad()
{
    char * data;
    /* define a function pointer */
    void (*funcPtr) (char *) = CWE401_Memory_Leak__strdup_char_65b_badSink;
    data = NULL;
    {
        char myString[] = "myString";
        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */
        data = strdup(myString);
        /* Use data */
        printLine(data);
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
33,35
33,36
34,35
35,36
35,37
37,38
37,39
37,40
40,41
42,43
43,44
43,45
44,45
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
59,60
61,62
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,30,32,36,38,39,41,45,48,50,54,56,60,62
-----computeFrom-----
28,29
28,30
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__strdup_char_65_bad(){    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = CWE401_Memory_Leak__strdup_char_65b_badSink;    data = NULL;    {        char myString[] = "myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = strdup(myString);        /* Use data */        printLine(data);    }    /* use the function pointer */    funcPtr(data);}
void
CWE401_Memory_Leak__strdup_char_65_bad()
CWE401_Memory_Leak__strdup_char_65_bad
{    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = CWE401_Memory_Leak__strdup_char_65b_badSink;    data = NULL;    {        char myString[] = "myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = strdup(myString);        /* Use data */        printLine(data);    }    /* use the function pointer */    funcPtr(data);}
char * data;
char * data;
char
* data
*
data
void (*funcPtr) (char *) = CWE401_Memory_Leak__strdup_char_65b_badSink;
void (*funcPtr) (char *) = CWE401_Memory_Leak__strdup_char_65b_badSink;
void
(*funcPtr) (char *) = CWE401_Memory_Leak__strdup_char_65b_badSink
*funcPtr
*
funcPtr
char *
char
*
*

= CWE401_Memory_Leak__strdup_char_65b_badSink
CWE401_Memory_Leak__strdup_char_65b_badSink
CWE401_Memory_Leak__strdup_char_65b_badSink
data = NULL;
data = NULL
data
data
NULL
NULL
{        char myString[] = "myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = strdup(myString);        /* Use data */        printLine(data);    }
char myString[] = "myString";
char myString[] = "myString";
char
myString[] = "myString"
myString
[]
= "myString"
"myString"
data = strdup(myString);
data = strdup(myString)
data
data
strdup(myString)
strdup
strdup
myString
myString
printLine(data);
printLine(data)
printLine
printLine
data
data
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(1,5,0)
(4,19,0)
(12,22,0)
(22,19,0)
(15,7,0)
(14,19,0)
(6,20,0)
(14,20,0)
(8,5,0)
(2,11,0)
(0,13,0)
(20,7,0)
(5,19,0)
(13,20,0)
(10,12,0)
(20,22,0)
(3,19,0)
(17,12,0)
(13,22,0)
(18,14,0)
(7,20,0)
(7,12,0)
(16,22,0)
(9,11,0)
(11,19,0)
(15,6,1)
(0,20,1)
(7,12,1)
(13,20,1)
(14,20,1)
(6,12,1)
(10,17,1)
(8,1,1)
(18,13,1)
(2,9,1)
(5,8,1)
(9,5,1)
(17,11,1)
(21,14,1)
(14,18,1)
(7,15,1)
(20,7,1)
(11,2,1)
(13,0,1)
(12,10,1)
(13,20,2)
(7,12,2)
(14,20,2)
(20,7,2)
-----------------------------------
(0,data)
(1,funcPtr)
(2,NULL)
(3,data)
(4,funcPtr)
(5,(*funcPtr)
(6,data)
(7,strdup(myString)
(8,CWE401_Memory_Leak__strdup_char_65b_badSink)
(9,data)
(10,"myString")
(11,data = NULL)
(12,myString[] = "myString")
(13,printLine(data)
(14,funcPtr(data)
(15,myString)
(16,myString)
(17,myString)
(18,data)
(19,)
(20,data = strdup(myString)
(21,RET)
(22,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
