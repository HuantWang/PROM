-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_malloc_18_bad()
{
    int64_t * data;
    data = NULL;
    goto source;
source:
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)malloc(100*sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
43,44
43,45
44,45
44,46
45,46
47,48
49,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
58,59
58,60
59,60
63,64
64,65
64,66
65,66
67,68
67,69
68,69
71,72
73,74
73,75
-----nextToken-----
2,4,9,11,12,16,18,20,22,26,30,32,35,37,41,42,46,48,53,55,60,61,62,66,69,70,72,74,75
-----computeFrom-----
14,15
14,16
24,25
24,26
36,37
36,38
44,45
44,46
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_malloc_18_bad(){    int64_t * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)malloc(100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__int64_t_malloc_18_bad()
CWE401_Memory_Leak__int64_t_malloc_18_bad
{    int64_t * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)malloc(100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)malloc(100*sizeof(int64_t));
source
data = (int64_t *)malloc(100*sizeof(int64_t));
data = (int64_t *)malloc(100*sizeof(int64_t))
data
data
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(22,25,0)
(11,23,0)
(8,30,0)
(14,9,0)
(27,4,0)
(24,16,0)
(3,16,0)
(4,25,0)
(20,22,0)
(19,22,0)
(18,16,0)
(23,11,0)
(22,19,0)
(0,25,0)
(22,20,0)
(7,16,0)
(28,4,0)
(9,16,0)
(6,0,0)
(31,9,0)
(25,22,0)
(13,0,0)
(2,25,0)
(10,16,0)
(1,23,0)
(25,16,0)
(30,5,0)
(21,11,0)
(11,19,0)
(4,28,0)
(15,8,0)
(17,16,0)
(26,16,0)
(28,16,0)
(30,8,0)
(12,4,0)
(19,11,0)
(0,13,1)
(2,7,1)
(28,4,1)
(25,22,1)
(8,15,1)
(26,30,1)
(1,21,1)
(13,6,1)
(4,12,1)
(26,0,1)
(15,0,1)
(0,25,1)
(22,20,1)
(21,2,1)
(27,26,1)
(22,19,1)
(7,9,1)
(30,8,1)
(17,28,1)
(29,17,1)
(6,25,1)
(19,11,1)
(12,27,1)
(11,23,1)
(31,14,1)
(4,25,1)
(9,31,1)
(23,1,1)
(0,25,2)
(30,0,2)
(28,4,2)
(19,11,2)
(25,22,2)
(22,20,2)
(15,0,2)
(4,25,2)
(30,8,2)
(11,23,2)
(8,0,2)
(22,19,2)
-----------------------------------
(0,data == NULL)
(1,int64_t)
(2,data)
(3,source:)
(4,data[0])
(5,)
(6,data)
(7,goto source;)
(8,-1)
(9,data = NULL)
(10,if (data == NULL)
(11,100*sizeof(int64_t)
(12,0)
(13,NULL)
(14,data)
(15,1)
(16,)
(17,goto sink;)
(18,sink:)
(19,malloc(100*sizeof(int64_t)
(20,int64_t *)
(21,100)
(22,(int64_t *)
(23,sizeof(int64_t)
(24,data)
(25,data = (int64_t *)
(26,L)
(27,data)
(28,printLongLongLine(data[0])
(29,RET)
(30,exit(-1)
(31,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
