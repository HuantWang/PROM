-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_wchar_t_11_bad()
{
    if(globalReturnsTrue())
    {
        {
            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            wcscpy(data, L"A String");
            printWLine(data);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                wcscpy(data, L"New String");
                printWLine(data);
                free(data);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
8,9
10,11
11,12
11,13
11,14
11,15
11,16
11,17
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
47,50
48,49
50,51
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
61,62
63,64
63,65
64,65
64,66
66,67
68,69
68,70
68,71
69,70
71,72
73,74
73,75
74,75
76,77
77,78
77,79
80,81
80,82
81,82
81,83
82,83
84,85
86,87
86,88
86,89
87,88
88,89
88,90
88,91
89,90
91,92
94,95
95,96
95,97
96,97
98,99
100,101
101,102
101,103
102,103
104,105
-----nextToken-----
2,4,9,14,16,17,21,23,26,28,31,32,36,38,43,45,49,51,52,56,58,62,65,67,70,72,75,78,79,83,85,90,92,93,97,99,103,105
-----computeFrom-----
27,28
27,29
34,35
34,36
60,61
60,62
73,74
73,75
81,82
81,83
-----guardedBy-----
83,105
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_wchar_t_11_bad(){    if(globalReturnsTrue())    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }}
void
CWE401_Memory_Leak__malloc_realloc_wchar_t_11_bad()
CWE401_Memory_Leak__malloc_realloc_wchar_t_11_bad
{    if(globalReturnsTrue())    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }}
if(globalReturnsTrue())    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }
{            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* data = (wchar_t *)malloc(100*sizeof(wchar_t))
*
data
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
data
data
(wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, (130000)*sizeof(wchar_t))
realloc
realloc
data
data
(130000)*sizeof(wchar_t)
(130000)
130000
sizeof(wchar_t)
wchar_t
wchar_t

if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }
wcscpy(data, L"New String");
wcscpy(data, L"New String")
wcscpy
wcscpy
data
data
L"New String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(23,35,0)
(5,3,0)
(13,10,0)
(43,14,0)
(28,35,0)
(43,15,0)
(19,41,0)
(34,15,0)
(33,34,0)
(7,34,0)
(22,3,0)
(35,9,0)
(31,17,0)
(38,17,0)
(40,39,0)
(10,24,0)
(11,28,0)
(36,42,0)
(29,22,0)
(9,41,0)
(1,14,0)
(3,22,0)
(20,6,0)
(30,13,0)
(10,13,0)
(25,40,0)
(0,32,0)
(21,8,0)
(41,9,0)
(33,39,0)
(35,28,0)
(4,43,0)
(6,14,0)
(14,41,0)
(21,6,0)
(44,15,0)
(6,21,0)
(9,35,0)
(34,21,0)
(26,15,0)
(27,32,0)
(2,15,0)
(41,14,0)
(6,22,0)
(14,15,0)
(21,34,0)
(17,14,0)
(15,18,0)
(40,34,0)
(37,33,0)
(8,21,0)
(32,34,0)
(41,19,0)
(22,6,0)
(40,25,1)
(6,22,1)
(30,17,1)
(43,4,1)
(35,28,1)
(10,13,1)
(43,14,1)
(33,34,1)
(33,37,1)
(13,30,1)
(28,11,1)
(41,19,1)
(17,14,1)
(29,20,1)
(25,33,1)
(1,12,1)
(9,35,1)
(17,31,1)
(34,21,1)
(7,43,1)
(0,27,1)
(41,9,1)
(21,6,1)
(4,17,1)
(5,29,1)
(16,12,1)
(16,32,1)
(40,34,1)
(22,3,1)
(21,8,1)
(38,14,1)
(32,34,1)
(4,10,1)
(23,1,1)
(11,23,1)
(31,38,1)
(20,7,1)
(14,41,1)
(27,34,1)
(37,32,1)
(6,14,1)
(32,0,1)
(3,5,1)
(16,40,1)
(33,32,2)
(21,6,2)
(20,12,2)
(40,34,2)
(37,32,2)
(29,12,2)
(4,12,2)
(43,12,2)
(21,8,2)
(17,14,2)
(7,12,2)
(34,21,2)
(38,12,2)
(34,12,2)
(32,12,2)
(32,34,2)
(41,12,2)
(33,34,2)
(22,3,2)
(6,14,2)
(17,12,2)
(6,12,2)
(11,12,2)
(28,12,2)
(10,13,2)
(9,35,2)
(0,12,2)
(10,17,2)
(6,22,2)
(21,12,2)
(5,12,2)
(9,12,2)
(30,17,2)
(41,19,2)
(25,32,2)
(22,12,2)
(23,12,2)
(31,12,2)
(3,12,2)
(27,12,2)
(43,14,2)
(35,28,2)
(14,41,2)
(14,12,2)
(35,12,2)
(13,17,2)
(1,12,2)
(40,32,2)
(41,9,2)
-----------------------------------
(0,NULL)
(1,data)
(2,if (data == NULL)
(3,sizeof(wchar_t)
(4,data)
(5,wchar_t)
(6,realloc(data, (130000)
(7,data)
(8,wchar_t *)
(9,malloc(100*sizeof(wchar_t)
(10,exit(-1)
(11,wchar_t)
(12,globalReturnsTrue()
(13,-1)
(14,* data = (wchar_t *)
(15,)
(16,RET)
(17,data == NULL)
(18,)
(19,wchar_t *)
(20,data)
(21,(wchar_t *)
(22,(130000)
(23,100)
(24,)
(25,data)
(26,data)
(27,data)
(28,sizeof(wchar_t)
(29,130000)
(30,1)
(31,NULL)
(32,data != NULL)
(33,printWLine(data)
(34,data = (wchar_t *)
(35,100*sizeof(wchar_t)
(36,if(globalReturnsTrue()
(37,data)
(38,data)
(39,)
(40,free(data)
(41,(wchar_t *)
(42,)
(43,printWLine(data)
(44,if (data != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
