-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_calloc_18_bad()
{
    twoIntsStruct * data;
    data = NULL;
    goto source;
source:
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
5,15
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
31,32
33,34
33,35
33,36
34,35
37,38
38,39
38,40
39,40
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
57,59
58,59
58,60
59,60
64,65
65,66
65,67
66,67
66,68
67,68
67,69
68,69
73,74
74,75
74,76
75,76
77,78
78,79
78,80
79,80
82,83
84,85
84,86
-----nextToken-----
2,4,9,11,12,16,18,20,22,26,30,32,35,36,40,41,45,47,52,54,60,61,62,63,69,70,71,72,76,80,81,83,85,86
-----computeFrom-----
14,15
14,16
24,25
24,26
43,44
43,45
56,57
56,58
65,66
65,67
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_calloc_18_bad(){    twoIntsStruct * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__twoIntsStruct_calloc_18_bad()
CWE401_Memory_Leak__twoIntsStruct_calloc_18_bad
{    twoIntsStruct * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));
source
data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));
data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)calloc(100, sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
calloc(100, sizeof(twoIntsStruct))
calloc
calloc
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(29,13,0)
(13,21,0)
(38,0,0)
(5,0,0)
(17,4,0)
(13,29,0)
(4,21,0)
(2,0,0)
(36,42,0)
(7,9,0)
(41,0,0)
(22,24,0)
(24,0,0)
(26,20,0)
(12,14,0)
(11,9,0)
(21,39,0)
(23,18,0)
(20,14,0)
(42,39,0)
(14,20,0)
(20,21,0)
(39,42,0)
(19,29,0)
(6,39,0)
(35,0,0)
(21,0,0)
(15,42,0)
(39,6,0)
(12,0,0)
(25,24,0)
(29,35,0)
(43,4,0)
(34,44,0)
(33,0,0)
(22,4,0)
(16,22,0)
(34,18,0)
(8,36,0)
(45,13,0)
(28,20,0)
(27,13,0)
(31,21,0)
(3,35,0)
(4,22,0)
(9,21,0)
(39,21,0)
(32,5,0)
(40,0,0)
(1,0,0)
(10,5,0)
(42,36,0)
(18,34,0)
(14,12,0)
(7,11,1)
(13,45,1)
(4,21,1)
(4,43,1)
(5,32,1)
(16,4,1)
(20,26,1)
(31,38,1)
(22,16,1)
(32,10,1)
(18,23,1)
(36,8,1)
(12,14,1)
(39,6,1)
(19,13,1)
(15,31,1)
(43,17,1)
(8,15,1)
(14,20,1)
(23,9,1)
(42,36,1)
(45,27,1)
(22,4,1)
(17,35,1)
(9,7,1)
(21,39,1)
(20,21,1)
(25,22,1)
(29,13,1)
(13,21,1)
(34,18,1)
(24,25,1)
(9,21,1)
(38,5,1)
(27,9,1)
(3,29,1)
(27,34,1)
(35,3,1)
(29,19,1)
(26,28,1)
(33,12,1)
(39,42,1)
(28,24,1)
(30,33,1)
(11,21,1)
(4,21,2)
(22,4,2)
(14,20,2)
(12,14,2)
(39,42,2)
(21,39,2)
(39,6,2)
(34,18,2)
(20,21,2)
(23,9,2)
(42,36,2)
(18,9,2)
(29,13,2)
(34,9,2)
(13,21,2)
(9,21,2)
-----------------------------------
(0,)
(1,source:)
(2,data)
(3,0)
(4,data[0])
(5,data = NULL)
(6,twoIntsStruct *)
(7,NULL)
(8,twoIntsStruct)
(9,data == NULL)
(10,data)
(11,data)
(12,printStructLine(&data[0])
(13,data[0])
(14,&data[0])
(15,100)
(16,intTwo)
(17,data)
(18,-1)
(19,intOne)
(20,data[0])
(21,data = (twoIntsStruct *)
(22,data[0].intTwo)
(23,1)
(24,data[0].intTwo = 0)
(25,0)
(26,0)
(27,data)
(28,data)
(29,data[0].intOne)
(30,RET)
(31,data)
(32,NULL)
(33,goto sink;)
(34,exit(-1)
(35,data[0].intOne = 0)
(36,sizeof(twoIntsStruct)
(37, sizeof(twoIntsStruct)
(38,goto source;)
(39,(twoIntsStruct *)
(40,sink:)
(41,if (data == NULL)
(42,calloc(100, sizeof(twoIntsStruct)
(43,0)
(44,)
(45,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
