-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_06_bad()
{
    twoIntsStruct * data;
    data = NULL;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0].intOne = 0;
        data[0].intTwo = 0;
        printStructLine(&data[0]);
    }
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
24,28
24,29
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
35,38
36,37
38,39
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
62,63
62,64
63,64
63,65
64,65
69,70
70,71
70,72
71,72
71,73
72,73
72,74
73,74
78,79
79,80
79,81
80,81
82,83
83,84
83,85
84,85
87,88
87,89
88,89
88,90
89,90
92,93
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,39,41,45,46,50,52,57,59,65,66,67,68,74,75,76,77,81,85,86,90,91,93
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
40,41
40,42
48,49
48,50
61,62
61,63
70,71
70,72
88,89
88,90
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_06_bad(){    twoIntsStruct * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__twoIntsStruct_realloc_06_bad()
CWE401_Memory_Leak__twoIntsStruct_realloc_06_bad
{    twoIntsStruct * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(10,47,0)
(1,2,0)
(6,8,0)
(48,30,0)
(14,2,0)
(0,23,0)
(51,30,0)
(20,12,0)
(2,48,0)
(49,17,0)
(34,5,0)
(47,10,0)
(31,26,0)
(44,33,0)
(33,44,0)
(17,46,0)
(16,48,0)
(36,33,0)
(3,20,0)
(9,46,0)
(7,32,0)
(32,46,0)
(48,2,0)
(26,31,0)
(3,4,0)
(20,3,0)
(4,3,0)
(4,46,0)
(44,32,0)
(22,12,0)
(18,44,0)
(49,8,0)
(48,47,0)
(13,12,0)
(27,22,0)
(15,30,0)
(29,8,0)
(12,47,0)
(8,12,0)
(25,50,0)
(8,49,0)
(2,1,0)
(12,46,0)
(33,12,0)
(39,1,0)
(47,12,0)
(47,48,0)
(30,23,0)
(19,20,0)
(28,49,0)
(26,42,0)
(35,31,0)
(11,50,0)
(37,23,0)
(21,20,0)
(38,5,0)
(43,22,0)
(41,17,0)
(40,33,0)
(45,23,0)
(36,17,1)
(12,47,1)
(22,43,1)
(20,19,1)
(11,4,1)
(15,51,1)
(41,49,1)
(35,22,1)
(34,38,1)
(48,2,1)
(4,3,1)
(21,32,1)
(7,44,1)
(20,12,1)
(3,20,1)
(50,25,1)
(44,33,1)
(13,5,1)
(17,41,1)
(19,21,1)
(8,6,1)
(49,8,1)
(40,36,1)
(48,30,1)
(11,5,1)
(14,16,1)
(29,22,1)
(24,50,1)
(38,30,1)
(32,7,1)
(29,26,1)
(5,34,1)
(8,12,1)
(39,14,1)
(2,1,1)
(28,8,1)
(26,31,1)
(22,12,1)
(44,18,1)
(47,10,1)
(16,13,1)
(31,35,1)
(33,40,1)
(49,28,1)
(6,29,1)
(47,48,1)
(27,12,1)
(30,15,1)
(25,11,1)
(1,39,1)
(43,27,1)
(18,33,1)
(33,12,1)
(1,5,2)
(13,5,2)
(8,12,2)
(3,5,2)
(7,5,2)
(31,22,2)
(29,5,2)
(47,48,2)
(48,5,2)
(12,5,2)
(40,5,2)
(4,5,2)
(32,5,2)
(39,5,2)
(4,3,2)
(16,5,2)
(47,10,2)
(18,5,2)
(27,5,2)
(49,5,2)
(33,5,2)
(47,5,2)
(3,20,2)
(48,2,2)
(28,5,2)
(14,5,2)
(12,47,2)
(48,30,2)
(17,5,2)
(21,5,2)
(19,5,2)
(26,31,2)
(20,5,2)
(22,12,2)
(6,5,2)
(36,5,2)
(8,5,2)
(49,8,2)
(41,5,2)
(2,1,2)
(20,12,2)
(22,5,2)
(43,5,2)
(35,22,2)
(33,12,2)
(44,5,2)
(26,22,2)
(44,33,2)
(2,5,2)
-----------------------------------
(0,if(STATIC_CONST_FIVE==5)
(1,sizeof(twoIntsStruct)
(2,100*sizeof(twoIntsStruct)
(3,&data[0])
(4,printStructLine(&data[0])
(5,STATIC_CONST_FIVE==5)
(6,0)
(7,0)
(8,data[0])
(9,if (data == NULL)
(10,twoIntsStruct *)
(11,STATIC_CONST_FIVE)
(12,data = (twoIntsStruct *)
(13,data)
(14,100)
(15,NULL)
(16,data)
(17,data[0].intOne = 0)
(18,intTwo)
(19,0)
(20,data[0])
(21,data)
(22,data == NULL)
(23,)
(24,RET)
(25,5)
(26,exit(-1)
(27,data)
(28,intOne)
(29,data)
(30,data = NULL)
(31,-1)
(32,data[0].intTwo = 0)
(33,data[0])
(34,5)
(35,1)
(36,data)
(37,if(STATIC_CONST_FIVE==5)
(38,STATIC_CONST_FIVE)
(39,twoIntsStruct)
(40,0)
(41,0)
(42,)
(43,NULL)
(44,data[0].intTwo)
(45,data)
(46,)
(47,(twoIntsStruct *)
(48,realloc(data, 100*sizeof(twoIntsStruct)
(49,data[0].intOne)
(50,STATIC_CONST_FIVE==5)
(51,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
