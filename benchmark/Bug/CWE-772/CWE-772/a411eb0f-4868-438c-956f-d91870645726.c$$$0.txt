-----label-----
1
-----code-----
void CWE401_Memory_Leak__char_calloc_67_bad()
{
    char * data;
    CWE401_Memory_Leak__char_calloc_67_structType myStruct;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (char *)calloc(100, sizeof(char));
    /* Initialize and make use of data */
    strcpy(data, "A String");
    printLine(data);
    myStruct.structFirst = data;
    CWE401_Memory_Leak__char_calloc_67b_badSink(myStruct);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
33,36
34,35
37,38
38,39
38,40
41,42
42,43
42,44
42,45
43,44
45,46
48,49
49,50
49,51
50,51
52,53
54,55
55,56
55,57
56,57
56,58
57,58
60,61
62,63
63,64
63,65
64,65
66,67
-----nextToken-----
2,4,8,10,11,15,17,21,23,27,30,32,35,36,39,40,44,46,47,51,53,58,59,61,65,67
-----computeFrom-----
19,20
19,21
25,26
25,27
55,56
55,57
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__char_calloc_67_bad(){    char * data;    CWE401_Memory_Leak__char_calloc_67_structType myStruct;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)calloc(100, sizeof(char));    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    myStruct.structFirst = data;    CWE401_Memory_Leak__char_calloc_67b_badSink(myStruct);}
void
CWE401_Memory_Leak__char_calloc_67_bad()
CWE401_Memory_Leak__char_calloc_67_bad
{    char * data;    CWE401_Memory_Leak__char_calloc_67_structType myStruct;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)calloc(100, sizeof(char));    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    myStruct.structFirst = data;    CWE401_Memory_Leak__char_calloc_67b_badSink(myStruct);}
char * data;
char * data;
char
* data
*
data
CWE401_Memory_Leak__char_calloc_67_structType myStruct;
CWE401_Memory_Leak__char_calloc_67_structType myStruct;
CWE401_Memory_Leak__char_calloc_67_structType
CWE401_Memory_Leak__char_calloc_67_structType
myStruct
myStruct
data = NULL;
data = NULL
data
data
NULL
NULL
data = (char *)calloc(100, sizeof(char));
data = (char *)calloc(100, sizeof(char))
data
data
(char *)calloc(100, sizeof(char))
char *
char
*
*
calloc(100, sizeof(char))
calloc
calloc
100
sizeof(char)
char
char

strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
myStruct.structFirst = data;
myStruct.structFirst = data
myStruct.structFirst
myStruct
myStruct
structFirst
data
data
CWE401_Memory_Leak__char_calloc_67b_badSink(myStruct);
CWE401_Memory_Leak__char_calloc_67b_badSink(myStruct)
CWE401_Memory_Leak__char_calloc_67b_badSink
CWE401_Memory_Leak__char_calloc_67b_badSink
myStruct
myStruct
-----joern-----
(7,9,0)
(14,18,0)
(14,16,0)
(23,16,0)
(13,21,0)
(4,22,0)
(3,0,0)
(16,0,0)
(22,16,0)
(17,21,0)
(5,16,0)
(0,6,0)
(10,26,0)
(20,18,0)
(11,6,0)
(19,14,0)
(25,1,0)
(5,18,0)
(27,5,0)
(1,14,0)
(22,18,0)
(26,6,0)
(15,1,0)
(9,18,0)
(16,18,0)
(6,26,0)
(0,3,0)
(24,22,0)
(8,18,0)
(21,18,0)
(6,0,0)
(0,16,0)
(19,1,1)
(5,27,1)
(21,13,1)
(25,5,1)
(13,17,1)
(9,7,1)
(0,6,1)
(23,21,1)
(24,16,1)
(22,4,1)
(2,9,1)
(27,22,1)
(11,23,1)
(10,11,1)
(14,19,1)
(1,15,1)
(16,0,1)
(5,16,1)
(15,25,1)
(26,10,1)
(6,26,1)
(14,16,1)
(7,14,1)
(0,3,1)
(22,16,1)
(4,24,1)
(14,16,2)
(22,16,2)
(6,26,2)
(16,0,2)
(0,3,2)
(0,6,2)
(5,16,2)
-----------------------------------
(0,(char *)
(1,myStruct.structFirst)
(2,RET)
(3,char *)
(4,"A String")
(5,printLine(data)
(6,calloc(100, sizeof(char)
(7,myStruct)
(8,data)
(9,CWE401_Memory_Leak__char_calloc_67b_badSink(myStruct)
(10,char)
(11,100)
(12, sizeof(char)
(13,NULL)
(14,myStruct.structFirst = data)
(15,structFirst)
(16,data = (char *)
(17,data)
(18,)
(19,data)
(20,myStruct)
(21,data = NULL)
(22,strcpy(data, "A String")
(23,data)
(24,data)
(25,myStruct)
(26,sizeof(char)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
