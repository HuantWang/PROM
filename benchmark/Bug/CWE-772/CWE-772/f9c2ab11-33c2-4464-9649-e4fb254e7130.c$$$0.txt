-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_14_bad()
{
    if(globalFive==5)
    {
        {
            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            data[0].intOne = 0;
            data[0].intTwo = 0;
            printStructLine((twoIntsStruct *)&data[0]);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                data[0].intOne = 1;
                data[0].intTwo = 1;
                printStructLine((twoIntsStruct *)&data[0]);
                free(data);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
7,9
8,9
11,12
12,13
12,14
12,15
12,16
12,17
12,18
12,19
13,14
14,15
14,16
15,16
17,18
17,19
17,20
20,21
21,22
21,23
22,23
22,24
23,24
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
34,35
37,38
37,39
38,39
38,40
39,40
41,42
43,44
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
52,53
52,54
53,54
53,55
54,55
59,60
60,61
60,62
61,62
61,63
62,63
62,64
63,64
68,69
69,70
69,71
70,71
72,73
72,74
73,74
73,75
74,75
76,77
78,79
79,80
79,81
80,81
83,84
84,85
84,86
85,86
87,88
87,89
88,89
88,90
89,90
91,92
93,94
93,95
93,96
94,95
96,97
98,99
98,100
99,100
101,102
102,103
102,104
103,104
106,107
106,108
107,108
107,109
108,109
110,111
112,113
112,114
112,115
112,116
113,114
114,115
114,116
115,116
115,117
116,117
116,118
117,118
122,123
123,124
123,125
124,125
124,126
125,126
125,127
126,127
131,132
132,133
132,134
133,134
135,136
135,137
136,137
136,138
137,138
139,140
141,142
142,143
142,144
143,144
146,147
147,148
147,149
148,149
150,151
-----nextToken-----
2,4,9,10,16,18,19,24,26,29,31,35,36,40,42,47,49,55,56,57,58,64,65,66,67,71,75,77,81,82,86,90,92,95,97,100,104,105,109,111,118,119,120,121,127,128,129,130,134,138,140,144,145,149,151
-----computeFrom-----
7,8
7,9
30,31
30,32
38,39
38,40
51,52
51,53
60,61
60,62
84,85
84,86
98,99
98,100
107,108
107,109
114,115
114,116
123,124
123,125
-----guardedBy-----
109,151
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_14_bad(){    if(globalFive==5)    {        {            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }        }    }}
void
CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_14_bad()
CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_14_bad
{    if(globalFive==5)    {        {            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }        }    }}
if(globalFive==5)    {        {            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }        }    }
globalFive==5
globalFive
globalFive
5
{        {            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }        }    }
{            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }        }
struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
struct _twoIntsStruct
_twoIntsStruct
* data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
*
data
= (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
(struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
malloc(100*sizeof(struct _twoIntsStruct))
malloc
malloc
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
realloc(data, (130000)*sizeof(struct _twoIntsStruct))
realloc
realloc
data
data
(130000)*sizeof(struct _twoIntsStruct)
(130000)
130000
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data != NULL)            {                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }
data[0].intOne = 1;
data[0].intOne = 1
data[0].intOne
data[0]
data
data
0
intOne
1
data[0].intTwo = 1;
data[0].intTwo = 1
data[0].intTwo
data[0]
data
data
0
intTwo
1
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(69,60,0)
(38,67,0)
(3,56,0)
(8,53,0)
(43,70,0)
(81,54,0)
(76,22,0)
(29,3,0)
(21,84,0)
(16,45,0)
(47,77,0)
(5,31,0)
(5,40,0)
(54,8,0)
(50,63,0)
(40,8,0)
(13,46,0)
(39,23,0)
(70,36,0)
(64,16,0)
(80,34,0)
(42,59,0)
(51,46,0)
(64,55,0)
(61,41,0)
(6,46,0)
(60,69,0)
(58,8,0)
(61,74,0)
(16,64,0)
(75,73,0)
(79,40,0)
(72,16,0)
(38,45,0)
(3,34,0)
(83,47,0)
(26,77,0)
(27,12,0)
(31,5,0)
(36,70,0)
(38,40,0)
(31,54,0)
(40,38,0)
(12,76,0)
(14,24,0)
(46,77,0)
(63,40,0)
(11,8,0)
(68,2,0)
(37,56,0)
(48,47,0)
(76,12,0)
(59,68,0)
(77,8,0)
(44,73,0)
(12,40,0)
(78,23,0)
(23,77,0)
(52,5,0)
(13,59,0)
(67,38,0)
(70,24,0)
(56,77,0)
(45,16,0)
(32,8,0)
(63,19,0)
(68,59,0)
(71,22,0)
(15,63,0)
(10,5,0)
(22,76,0)
(56,3,0)
(19,58,0)
(30,8,0)
(82,84,0)
(24,60,0)
(19,63,0)
(0,74,0)
(65,22,0)
(35,26,0)
(34,2,0)
(22,65,0)
(55,64,0)
(23,28,0)
(66,12,0)
(73,40,0)
(45,38,0)
(59,42,0)
(1,36,0)
(46,13,0)
(28,23,0)
(59,13,0)
(71,8,0)
(4,28,0)
(9,58,0)
(60,77,0)
(7,2,0)
(77,60,0)
(28,7,0)
(22,71,0)
(24,70,0)
(49,56,0)
(25,31,0)
(74,61,0)
(57,18,0)
(60,24,0)
(36,1,0)
(26,2,0)
(20,77,0)
(33,19,0)
(24,40,0)
(62,7,0)
(3,29,1)
(50,54,1)
(56,37,1)
(12,40,1)
(28,23,1)
(76,12,1)
(36,43,1)
(78,39,1)
(33,63,1)
(16,64,1)
(6,51,1)
(47,77,1)
(27,66,1)
(60,69,1)
(24,70,1)
(44,75,1)
(58,9,1)
(7,62,1)
(51,34,1)
(45,16,1)
(66,58,1)
(47,83,1)
(61,74,1)
(29,56,1)
(59,13,1)
(34,80,1)
(23,77,1)
(74,0,1)
(28,4,1)
(24,40,1)
(46,6,1)
(43,14,1)
(84,82,1)
(19,63,1)
(10,61,1)
(23,78,1)
(70,36,1)
(60,24,1)
(26,35,1)
(22,65,1)
(68,59,1)
(26,77,1)
(72,79,1)
(9,19,1)
(63,15,1)
(0,73,1)
(38,67,1)
(35,68,1)
(56,77,1)
(14,20,1)
(38,45,1)
(19,33,1)
(79,84,1)
(15,50,1)
(17,47,1)
(73,40,1)
(17,26,1)
(37,49,1)
(5,52,1)
(59,42,1)
(63,40,1)
(46,77,1)
(36,1,1)
(71,22,1)
(64,55,1)
(25,5,1)
(82,21,1)
(17,84,1)
(64,72,1)
(77,60,1)
(83,48,1)
(54,81,1)
(12,27,1)
(4,23,1)
(75,40,1)
(39,47,1)
(22,76,1)
(10,73,1)
(48,77,1)
(73,44,1)
(3,56,1)
(13,46,1)
(80,3,1)
(31,5,1)
(5,40,1)
(31,25,1)
(20,71,1)
(62,28,1)
(81,31,1)
(40,38,1)
(49,7,1)
(52,10,1)
(3,47,2)
(50,84,2)
(73,40,2)
(38,67,2)
(36,1,2)
(44,84,2)
(22,84,2)
(20,84,2)
(47,77,2)
(63,40,2)
(76,84,2)
(38,45,2)
(39,47,2)
(28,23,2)
(64,84,2)
(0,73,2)
(46,77,2)
(71,22,2)
(9,84,2)
(74,73,2)
(70,84,2)
(43,84,2)
(19,63,2)
(66,84,2)
(19,84,2)
(5,40,2)
(16,64,2)
(27,84,2)
(48,84,2)
(63,84,2)
(72,84,2)
(64,55,2)
(45,84,2)
(37,47,2)
(24,84,2)
(36,84,2)
(61,74,2)
(54,84,2)
(76,12,2)
(46,47,2)
(49,47,2)
(81,84,2)
(83,84,2)
(10,84,2)
(71,84,2)
(31,5,2)
(40,84,2)
(13,47,2)
(23,77,2)
(61,73,2)
(34,47,2)
(68,59,2)
(60,24,2)
(56,77,2)
(24,40,2)
(26,77,2)
(62,47,2)
(5,84,2)
(68,47,2)
(26,47,2)
(59,42,2)
(7,47,2)
(25,84,2)
(3,56,2)
(73,84,2)
(15,84,2)
(29,47,2)
(59,47,2)
(22,65,2)
(12,40,2)
(6,47,2)
(58,84,2)
(13,46,2)
(40,38,2)
(78,47,2)
(47,84,2)
(77,60,2)
(51,47,2)
(33,84,2)
(75,84,2)
(56,47,2)
(35,47,2)
(59,13,2)
(4,47,2)
(77,84,2)
(60,84,2)
(70,36,2)
(45,16,2)
(60,69,2)
(12,84,2)
(16,84,2)
(22,76,2)
(23,47,2)
(52,84,2)
(31,84,2)
(14,84,2)
(80,47,2)
(79,84,2)
(24,70,2)
(28,47,2)
(38,84,2)
-----------------------------------
(0,1)
(1,struct _twoIntsStruct)
(2,)
(3,data[0].intTwo)
(4,intOne)
(5,data[0])
(6,0)
(7,data[0].intOne = 1)
(8,)
(9,0)
(10,data)
(11,if (data == NULL)
(12,data[0])
(13,&data[0])
(14,data)
(15,0)
(16,100*sizeof(struct _twoIntsStruct)
(17,RET)
(18,)
(19,data[0].intTwo)
(20,data)
(21,globalFive)
(22,(twoIntsStruct *)
(23,data[0])
(24,realloc(data, (130000)
(25,intOne)
(26,free(data)
(27,0)
(28,data[0].intOne)
(29,intTwo)
(30,if (data != NULL)
(31,data[0].intOne)
(32,data)
(33,intTwo)
(34,data[0].intTwo = 1)
(35,data)
(36,sizeof(struct _twoIntsStruct)
(37,0)
(38,(struct _twoIntsStruct *)
(39,data)
(40,* data = (struct _twoIntsStruct *)
(41,)
(42,twoIntsStruct *)
(43,130000)
(44,NULL)
(45,malloc(100*sizeof(struct _twoIntsStruct)
(46,data[0])
(47,data != NULL)
(48,data)
(49,data)
(50,data)
(51,data)
(52,0)
(53,)
(54,data[0].intOne = 0)
(55,struct _twoIntsStruct)
(56,data[0])
(57,if(globalFive==5)
(58,data[0].intTwo = 0)
(59,(twoIntsStruct *)
(60,(struct _twoIntsStruct *)
(61,exit(-1)
(62,1)
(63,data[0])
(64,sizeof(struct _twoIntsStruct)
(65,twoIntsStruct *)
(66,data)
(67,struct _twoIntsStruct *)
(68,printStructLine((twoIntsStruct *)
(69,struct _twoIntsStruct *)
(70,(130000)
(71,printStructLine((twoIntsStruct *)
(72,100)
(73,data == NULL)
(74,-1)
(75,data)
(76,&data[0])
(77,data = (struct _twoIntsStruct *)
(78,0)
(79,data)
(80,1)
(81,0)
(82,5)
(83,NULL)
(84,globalFive==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
