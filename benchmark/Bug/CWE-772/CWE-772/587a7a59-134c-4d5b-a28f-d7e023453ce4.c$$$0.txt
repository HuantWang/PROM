-----label-----
1
-----code-----
void CWE401_Memory_Leak__strdup_char_51_bad()
{
    char * data;
    data = NULL;
    {
        char myString[] = "myString";
        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */
        data = strdup(myString);
        /* Use data */
        printLine(data);
    }
    CWE401_Memory_Leak__strdup_char_51b_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
18,21
19,20
20,21
20,22
22,23
22,24
22,25
25,26
27,28
28,29
28,30
29,30
31,32
31,33
32,33
34,35
36,37
37,38
37,39
38,39
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,11,15,17,21,23,24,26,30,33,35,39,41,45,47
-----computeFrom-----
13,14
13,15
28,29
28,30
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__strdup_char_51_bad(){    char * data;    data = NULL;    {        char myString[] = "myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = strdup(myString);        /* Use data */        printLine(data);    }    CWE401_Memory_Leak__strdup_char_51b_badSink(data);}
void
CWE401_Memory_Leak__strdup_char_51_bad()
CWE401_Memory_Leak__strdup_char_51_bad
{    char * data;    data = NULL;    {        char myString[] = "myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = strdup(myString);        /* Use data */        printLine(data);    }    CWE401_Memory_Leak__strdup_char_51b_badSink(data);}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
{        char myString[] = "myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = strdup(myString);        /* Use data */        printLine(data);    }
char myString[] = "myString";
char myString[] = "myString";
char
myString[] = "myString"
myString
[]
= "myString"
"myString"
data = strdup(myString);
data = strdup(myString)
data
data
strdup(myString)
strdup
strdup
myString
myString
printLine(data);
printLine(data)
printLine
printLine
data
data
CWE401_Memory_Leak__strdup_char_51b_badSink(data);
CWE401_Memory_Leak__strdup_char_51b_badSink(data)
CWE401_Memory_Leak__strdup_char_51b_badSink
CWE401_Memory_Leak__strdup_char_51b_badSink
data
data
-----joern-----
(10,1,0)
(18,13,0)
(16,3,0)
(17,14,0)
(0,13,0)
(7,9,0)
(13,5,0)
(5,1,0)
(1,14,0)
(9,14,0)
(15,0,0)
(11,5,0)
(13,0,0)
(2,1,0)
(3,0,0)
(12,10,0)
(4,5,0)
(6,9,0)
(10,0,0)
(0,1,0)
(3,14,0)
(5,11,1)
(16,10,1)
(3,16,1)
(0,13,1)
(10,0,1)
(4,9,1)
(3,0,1)
(10,12,1)
(9,7,1)
(13,18,1)
(7,6,1)
(12,0,1)
(15,5,1)
(11,4,1)
(13,5,1)
(8,3,1)
(18,15,1)
(0,13,2)
(13,5,2)
(3,0,2)
(10,0,2)
-----------------------------------
(0,data = strdup(myString)
(1,)
(2,myString)
(3,CWE401_Memory_Leak__strdup_char_51b_badSink(data)
(4,myString)
(5,myString[] = "myString")
(6,data)
(7,NULL)
(8,RET)
(9,data = NULL)
(10,printLine(data)
(11,"myString")
(12,data)
(13,strdup(myString)
(14,)
(15,data)
(16,data)
(17,data)
(18,myString)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
