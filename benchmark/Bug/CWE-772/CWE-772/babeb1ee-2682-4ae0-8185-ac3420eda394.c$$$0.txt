-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_char_18_bad()
{
    goto sink;
sink:
    {
        char * data = (char *)malloc(100*sizeof(char));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        strcpy(data, "A String");
        printLine(data);
        /* FLAW: If realloc() fails, the initial memory block will not be freed() */
        data = (char *)realloc(data, (130000)*sizeof(char));
        if (data != NULL)
        {
            /* Reinitialize and make use of data */
            strcpy(data, "New String");
            printLine(data);
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
8,9
8,10
10,11
10,12
10,13
10,14
10,15
10,16
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
23,25
24,25
26,27
26,28
28,29
29,30
29,31
32,33
32,34
33,34
33,35
34,35
36,37
38,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
46,49
47,48
49,50
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
60,61
62,63
62,64
63,64
63,65
65,66
67,68
67,69
67,70
68,69
70,71
72,73
72,74
73,74
75,76
76,77
76,78
79,80
79,81
80,81
80,82
81,82
83,84
85,86
85,87
85,88
86,87
87,88
87,89
87,90
88,89
90,91
93,94
94,95
94,96
95,96
97,98
99,100
100,101
100,102
101,102
103,104
-----nextToken-----
2,4,7,9,13,15,16,20,22,25,27,30,31,35,37,42,44,48,50,51,55,57,61,64,66,69,71,74,77,78,82,84,89,91,92,96,98,102,104
-----computeFrom-----
26,27
26,28
33,34
33,35
59,60
59,61
72,73
72,74
80,81
80,82
-----guardedBy-----
82,104
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_char_18_bad(){    goto sink;sink:    {        char * data = (char *)malloc(100*sizeof(char));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        strcpy(data, "A String");        printLine(data);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (char *)realloc(data, (130000)*sizeof(char));        if (data != NULL)        {            /* Reinitialize and make use of data */            strcpy(data, "New String");            printLine(data);            free(data);        }    }}
void
CWE401_Memory_Leak__malloc_realloc_char_18_bad()
CWE401_Memory_Leak__malloc_realloc_char_18_bad
{    goto sink;sink:    {        char * data = (char *)malloc(100*sizeof(char));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        strcpy(data, "A String");        printLine(data);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (char *)realloc(data, (130000)*sizeof(char));        if (data != NULL)        {            /* Reinitialize and make use of data */            strcpy(data, "New String");            printLine(data);            free(data);        }    }}
goto sink;
sink
sink:    {        char * data = (char *)malloc(100*sizeof(char));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        strcpy(data, "A String");        printLine(data);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (char *)realloc(data, (130000)*sizeof(char));        if (data != NULL)        {            /* Reinitialize and make use of data */            strcpy(data, "New String");            printLine(data);            free(data);        }    }
sink
{        char * data = (char *)malloc(100*sizeof(char));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        strcpy(data, "A String");        printLine(data);        /* FLAW: If realloc() fails, the initial memory block will not be freed() */        data = (char *)realloc(data, (130000)*sizeof(char));        if (data != NULL)        {            /* Reinitialize and make use of data */            strcpy(data, "New String");            printLine(data);            free(data);        }    }
char * data = (char *)malloc(100*sizeof(char));
char * data = (char *)malloc(100*sizeof(char));
char
* data = (char *)malloc(100*sizeof(char))
*
data
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
data = (char *)realloc(data, (130000)*sizeof(char));
data = (char *)realloc(data, (130000)*sizeof(char))
data
data
(char *)realloc(data, (130000)*sizeof(char))
char *
char
*
*
realloc(data, (130000)*sizeof(char))
realloc
realloc
data
data
(130000)*sizeof(char)
(130000)
130000
sizeof(char)
char
char

if (data != NULL)        {            /* Reinitialize and make use of data */            strcpy(data, "New String");            printLine(data);            free(data);        }
data != NULL
data
data
NULL
NULL
{            /* Reinitialize and make use of data */            strcpy(data, "New String");            printLine(data);            free(data);        }
strcpy(data, "New String");
strcpy(data, "New String")
strcpy
strcpy
data
data
"New String"
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(27,39,0)
(8,33,0)
(20,43,0)
(27,49,0)
(3,28,0)
(34,12,0)
(13,18,0)
(26,18,0)
(21,8,0)
(20,27,0)
(32,49,0)
(14,39,0)
(35,44,0)
(4,2,0)
(30,2,0)
(2,49,0)
(0,26,0)
(41,28,0)
(43,20,0)
(33,8,0)
(31,29,0)
(39,27,0)
(46,32,0)
(11,38,0)
(40,8,0)
(7,20,0)
(32,26,0)
(28,43,0)
(44,12,0)
(36,25,0)
(8,40,0)
(37,25,0)
(19,39,0)
(22,49,0)
(48,18,0)
(6,38,0)
(16,49,0)
(17,26,0)
(33,16,0)
(39,19,0)
(16,1,0)
(15,19,0)
(9,27,0)
(34,43,0)
(49,26,0)
(29,12,0)
(11,42,0)
(43,26,0)
(25,49,0)
(27,20,0)
(25,26,0)
(10,26,0)
(38,11,0)
(45,34,0)
(44,43,0)
(1,16,0)
(23,43,0)
(5,34,0)
(29,43,0)
(47,40,0)
(20,7,0)
(49,16,0)
(16,33,0)
(9,23,1)
(5,45,1)
(16,33,1)
(24,44,1)
(47,21,1)
(32,49,1)
(29,31,1)
(37,11,1)
(44,35,1)
(44,43,1)
(2,4,1)
(37,2,1)
(3,43,1)
(11,38,1)
(20,27,1)
(16,1,1)
(45,28,1)
(28,41,1)
(34,5,1)
(29,43,1)
(25,49,1)
(15,14,1)
(21,22,1)
(28,43,1)
(41,3,1)
(35,29,1)
(19,15,1)
(40,47,1)
(4,30,1)
(20,7,1)
(39,19,1)
(34,43,1)
(33,8,1)
(46,25,1)
(30,49,1)
(25,36,1)
(14,9,1)
(27,39,1)
(27,49,1)
(43,20,1)
(24,28,1)
(22,48,1)
(6,2,1)
(2,49,1)
(49,16,1)
(31,34,1)
(23,32,1)
(8,40,1)
(32,46,1)
(38,6,1)
(36,37,1)
(31,28,2)
(38,2,2)
(44,28,2)
(16,33,2)
(28,43,2)
(33,8,2)
(32,49,2)
(34,43,2)
(25,49,2)
(2,49,2)
(27,39,2)
(5,28,2)
(44,43,2)
(45,28,2)
(20,27,2)
(16,1,2)
(6,2,2)
(34,28,2)
(20,7,2)
(8,40,2)
(29,28,2)
(35,28,2)
(43,20,2)
(11,2,2)
(29,43,2)
(27,49,2)
(11,38,2)
(39,19,2)
(49,16,2)
-----------------------------------
(0,data)
(1,char *)
(2,data == NULL)
(3,data)
(4,NULL)
(5,"New String")
(6,1)
(7,char *)
(8,100*sizeof(char)
(9,data)
(10,if (data == NULL)
(11,exit(-1)
(12,)
(13,sink:)
(14,130000)
(15,char)
(16,(char *)
(17,if (data != NULL)
(18,)
(19,sizeof(char)
(20,(char *)
(21,100)
(22,data)
(23,data)
(24,RET)
(25,strcpy(data, "A String")
(26,)
(27,realloc(data, (130000)
(28,data != NULL)
(29,printLine(data)
(30,data)
(31,data)
(32,printLine(data)
(33,malloc(100*sizeof(char)
(34,strcpy(data, "New String")
(35,data)
(36,"A String")
(37,data)
(38,-1)
(39,(130000)
(40,sizeof(char)
(41,NULL)
(42,)
(43,data = (char *)
(44,free(data)
(45,data)
(46,data)
(47,char)
(48,goto sink;)
(49,* data = (char *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
