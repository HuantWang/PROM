-----label-----
1
-----code-----
void CWE401_Memory_Leak__wchar_t_malloc_45_bad()
{
    wchar_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)malloc(100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    CWE401_Memory_Leak__wchar_t_malloc_45_badData = data;
    badSink();
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
51,52
53,54
56,57
57,58
57,59
58,59
60,61
62,63
63,64
63,65
64,65
66,67
68,69
69,70
70,71
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,39,41,46,48,52,54,55,59,61,65,67,71
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
37,38
37,39
63,64
63,65
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__wchar_t_malloc_45_bad(){    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    CWE401_Memory_Leak__wchar_t_malloc_45_badData = data;    badSink();}
void
CWE401_Memory_Leak__wchar_t_malloc_45_bad()
CWE401_Memory_Leak__wchar_t_malloc_45_bad
{    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    CWE401_Memory_Leak__wchar_t_malloc_45_badData = data;    badSink();}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)malloc(100*sizeof(wchar_t));
data = (wchar_t *)malloc(100*sizeof(wchar_t))
data
data
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
CWE401_Memory_Leak__wchar_t_malloc_45_badData = data;
CWE401_Memory_Leak__wchar_t_malloc_45_badData = data
CWE401_Memory_Leak__wchar_t_malloc_45_badData
CWE401_Memory_Leak__wchar_t_malloc_45_badData
data
data
badSink();
badSink()
badSink
badSink
-----joern-----
(10,26,0)
(26,21,0)
(12,21,0)
(13,20,0)
(9,18,0)
(0,11,0)
(13,27,0)
(22,18,0)
(14,23,0)
(21,12,0)
(28,22,0)
(8,21,0)
(22,26,0)
(19,23,0)
(20,13,0)
(16,6,0)
(10,18,0)
(23,26,0)
(7,16,0)
(5,11,0)
(11,18,0)
(16,12,0)
(2,20,0)
(3,10,0)
(15,18,0)
(12,16,0)
(21,8,0)
(6,16,0)
(1,22,0)
(17,18,0)
(25,6,0)
(24,26,0)
(21,26,0)
(26,18,0)
(25,7,1)
(3,13,1)
(11,5,1)
(3,23,1)
(5,0,1)
(10,3,1)
(26,21,1)
(19,14,1)
(12,16,1)
(21,8,1)
(28,10,1)
(20,2,1)
(10,26,1)
(23,26,1)
(14,26,1)
(1,28,1)
(22,1,1)
(13,20,1)
(16,6,1)
(22,26,1)
(21,12,1)
(9,22,1)
(2,23,1)
(4,9,1)
(6,25,1)
(24,11,1)
(23,19,1)
(7,24,1)
(20,23,2)
(21,8,2)
(12,16,2)
(23,26,2)
(13,23,2)
(10,26,2)
(22,26,2)
(16,6,2)
(21,12,2)
(26,21,2)
(13,20,2)
(2,23,2)
-----------------------------------
(0,data)
(1,data)
(2,1)
(3,data)
(4,RET)
(5,NULL)
(6,sizeof(wchar_t)
(7,100)
(8,wchar_t *)
(9,badSink()
(10,printWLine(data)
(11,data = NULL)
(12,malloc(100*sizeof(wchar_t)
(13,exit(-1)
(14,data)
(15,data)
(16,100*sizeof(wchar_t)
(17,if (data == NULL)
(18,)
(19,NULL)
(20,-1)
(21,(wchar_t *)
(22,CWE401_Memory_Leak__wchar_t_malloc_45_badData = data)
(23,data == NULL)
(24,data)
(25,wchar_t)
(26,data = (wchar_t *)
(27,)
(28,CWE401_Memory_Leak__wchar_t_malloc_45_badData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
