-----label-----
1
-----code-----
void CWE401_Memory_Leak__wchar_t_realloc_18_bad()
{
    wchar_t * data;
    data = NULL;
    goto source;
source:
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
20,21
20,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
29,30
31,32
31,33
31,34
32,33
34,35
36,37
36,38
38,39
39,40
39,41
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
56,59
57,58
59,60
62,63
63,64
63,65
64,65
66,67
68,69
70,71
70,72
-----nextToken-----
2,4,8,10,11,15,17,19,21,25,28,30,33,35,37,40,41,45,47,52,54,58,60,61,65,67,69,71,72
-----computeFrom-----
13,14
13,15
23,24
23,25
36,37
36,38
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__wchar_t_realloc_18_bad(){    wchar_t * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__wchar_t_realloc_18_bad()
CWE401_Memory_Leak__wchar_t_realloc_18_bad
{    wchar_t * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
source
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t))
data
data
(wchar_t *)realloc(data, 100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, 100*sizeof(wchar_t))
realloc
realloc
data
data
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(5,12,0)
(13,4,0)
(25,19,0)
(4,19,0)
(29,14,0)
(3,26,0)
(17,4,0)
(14,29,0)
(4,17,0)
(26,14,0)
(9,19,0)
(16,14,0)
(26,6,0)
(8,20,0)
(23,19,0)
(11,4,0)
(1,12,0)
(17,26,0)
(0,19,0)
(26,17,0)
(8,24,0)
(14,26,0)
(18,6,0)
(15,6,0)
(27,13,0)
(22,19,0)
(28,29,0)
(7,24,0)
(17,2,0)
(12,4,0)
(10,19,0)
(24,8,0)
(2,17,0)
(13,19,0)
(6,19,0)
(12,4,1)
(21,9,1)
(6,15,1)
(7,12,1)
(16,3,1)
(27,8,1)
(15,18,1)
(23,6,1)
(8,24,1)
(13,27,1)
(12,1,1)
(9,13,1)
(26,6,1)
(26,14,1)
(17,26,1)
(4,17,1)
(28,16,1)
(1,5,1)
(3,11,1)
(14,29,1)
(24,7,1)
(11,23,1)
(5,4,1)
(27,12,1)
(29,28,1)
(17,2,1)
(13,4,1)
(13,4,2)
(24,12,2)
(12,4,2)
(8,24,2)
(7,12,2)
(17,26,2)
(26,14,2)
(8,12,2)
(14,29,2)
(4,17,2)
(17,2,2)
(26,6,2)
-----------------------------------
(0,if (data == NULL)
(1,NULL)
(2,wchar_t *)
(3,data)
(4,data = (wchar_t *)
(5,data)
(6,data = NULL)
(7,1)
(8,exit(-1)
(9,goto sink;)
(10,data)
(11,data)
(12,data == NULL)
(13,printWLine(data)
(14,100*sizeof(wchar_t)
(15,NULL)
(16,100)
(17,(wchar_t *)
(18,data)
(19,)
(20,)
(21,RET)
(22,source:)
(23,goto source;)
(24,-1)
(25,sink:)
(26,realloc(data, 100*sizeof(wchar_t)
(27,data)
(28,wchar_t)
(29,sizeof(wchar_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
