-----label-----
1
-----code-----
static struct _twoIntsStruct * badSource(struct _twoIntsStruct * data)
{

    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}

    /* Initialize and make use of data */

    data[0].intOne = 0;
    data[0].intTwo = 0;

    printStructLine((twoIntsStruct *)&data[0]);

    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
13,19
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
24,27
25,26
28,29
29,30
29,31
30,31
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
48,50
49,50
49,51
50,51
55,56
56,57
56,58
57,58
57,59
58,59
58,60
59,60
64,65
65,66
65,67
66,67
68,69
68,70
69,70
69,71
70,71
72,73
74,75
75,76
75,77
76,77
79,80
80,81
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,27,31,32,36,38,43,45,51,52,53,54,60,61,62,63,67,71,73,77,78,81
-----computeFrom-----
15,16
15,17
34,35
34,36
47,48
47,49
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;ElaboratedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static struct _twoIntsStruct * badSource(struct _twoIntsStruct * data){    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    return data;}
static struct _twoIntsStruct
_twoIntsStruct
* badSource(struct _twoIntsStruct * data)
*
badSource
struct _twoIntsStruct * data
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
{    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    return data;}
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
calloc(100, sizeof(struct _twoIntsStruct))
calloc
calloc
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
return data;
data
data
-----joern-----
(42,28,0)
(5,4,0)
(40,1,0)
(0,41,0)
(1,5,0)
(34,4,0)
(1,13,0)
(27,24,0)
(20,26,0)
(17,20,0)
(7,6,0)
(23,34,0)
(1,26,0)
(6,12,0)
(39,37,0)
(24,5,0)
(2,5,0)
(38,7,0)
(26,1,0)
(33,21,0)
(6,7,0)
(30,4,0)
(24,27,0)
(26,20,0)
(11,21,0)
(7,24,0)
(28,34,0)
(42,13,0)
(29,4,0)
(18,42,0)
(10,11,0)
(2,13,0)
(21,4,0)
(22,13,0)
(0,37,0)
(29,20,0)
(15,5,0)
(5,13,0)
(24,7,0)
(28,42,0)
(11,22,0)
(14,22,0)
(35,2,0)
(42,5,0)
(20,17,0)
(22,11,0)
(22,5,0)
(9,4,0)
(20,29,0)
(25,28,0)
(9,5,0)
(19,2,0)
(16,22,0)
(31,1,0)
(37,0,0)
(8,9,0)
(36,9,0)
(12,6,0)
(3,42,0)
(5,24,0)
(9,13,0)
(42,5,1)
(25,42,1)
(40,31,1)
(36,29,1)
(20,17,1)
(38,15,1)
(5,24,1)
(16,0,1)
(42,18,1)
(42,13,1)
(9,5,1)
(9,13,1)
(35,5,1)
(31,34,1)
(1,13,1)
(6,12,1)
(8,9,1)
(14,16,1)
(22,13,1)
(11,10,1)
(7,6,1)
(22,14,1)
(6,38,1)
(16,2,1)
(26,1,1)
(29,20,1)
(2,19,1)
(22,5,1)
(21,33,1)
(24,27,1)
(9,36,1)
(37,39,1)
(39,2,1)
(24,7,1)
(11,22,1)
(1,40,1)
(18,3,1)
(1,5,1)
(0,37,1)
(34,23,1)
(19,35,1)
(5,13,1)
(2,5,1)
(28,42,1)
(20,26,1)
(10,22,1)
(2,13,1)
(3,21,1)
(23,28,1)
(28,25,1)
(33,11,1)
(24,7,2)
(1,5,2)
(2,13,2)
(9,13,2)
(0,37,2)
(29,20,2)
(20,17,2)
(22,5,2)
(6,12,2)
(5,24,2)
(2,5,2)
(9,5,2)
(39,2,2)
(22,13,2)
(0,2,2)
(7,6,2)
(37,2,2)
(24,27,2)
(1,13,2)
(5,13,2)
(20,26,2)
(28,42,2)
(26,1,2)
(42,5,2)
(8,9,2)
(42,13,2)
(11,22,2)
-----------------------------------
(0,exit(-1)
(1,data[0])
(2,data == NULL)
(3,data)
(4,)
(5,data = (struct _twoIntsStruct *)
(6,sizeof(struct _twoIntsStruct)
(7,calloc(100, sizeof(struct _twoIntsStruct)
(8,RET)
(9,return data;)
(10,intOne)
(11,data[0].intOne)
(12,struct _twoIntsStruct)
(13,struct _twoIntsStruct * data)
(14,0)
(15,data)
(16,data)
(17,twoIntsStruct *)
(18,0)
(19,NULL)
(20,(twoIntsStruct *)
(21,data[0].intOne = 0)
(22,data[0])
(23,0)
(24,(struct _twoIntsStruct *)
(25,intTwo)
(26,&data[0])
(27,struct _twoIntsStruct *)
(28,data[0].intTwo)
(29,printStructLine((twoIntsStruct *)
(30,if (data == NULL)
(31,data)
(32, sizeof(struct _twoIntsStruct)
(33,0)
(34,data[0].intTwo = 0)
(35,data)
(36,data)
(37,-1)
(38,100)
(39,1)
(40,0)
(41,)
(42,data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
