-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_wchar_t_06_bad()
{
    if(STATIC_CONST_FIVE==5)
    {
        {
            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            wcscpy(data, L"A String");
            printWLine(data);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                wcscpy(data, L"New String");
                printWLine(data);
                free(data);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
7,9
8,9
11,12
12,13
12,14
12,15
12,16
12,17
12,18
13,14
14,15
14,16
16,17
16,18
16,19
19,20
20,21
20,22
21,22
21,23
23,24
25,26
25,27
26,27
28,29
28,30
30,31
31,32
31,33
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
48,51
49,50
51,52
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
62,63
64,65
64,66
65,66
65,67
67,68
69,70
69,71
69,72
70,71
72,73
74,75
74,76
75,76
77,78
78,79
78,80
81,82
81,83
82,83
82,84
83,84
85,86
87,88
87,89
87,90
88,89
89,90
89,91
89,92
90,91
92,93
95,96
96,97
96,98
97,98
99,100
101,102
102,103
102,104
103,104
105,106
-----nextToken-----
2,4,9,10,15,17,18,22,24,27,29,32,33,37,39,44,46,50,52,53,57,59,63,66,68,71,73,76,79,80,84,86,91,93,94,98,100,104,106
-----computeFrom-----
7,8
7,9
28,29
28,30
35,36
35,37
61,62
61,63
74,75
74,76
82,83
82,84
-----guardedBy-----
84,106
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_wchar_t_06_bad(){    if(STATIC_CONST_FIVE==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }}
void
CWE401_Memory_Leak__malloc_realloc_wchar_t_06_bad()
CWE401_Memory_Leak__malloc_realloc_wchar_t_06_bad
{    if(STATIC_CONST_FIVE==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }}
if(STATIC_CONST_FIVE==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }
{            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* data = (wchar_t *)malloc(100*sizeof(wchar_t))
*
data
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
data
data
(wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, (130000)*sizeof(wchar_t))
realloc
realloc
data
data
(130000)*sizeof(wchar_t)
(130000)
130000
sizeof(wchar_t)
wchar_t
wchar_t

if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }
wcscpy(data, L"New String");
wcscpy(data, L"New String")
wcscpy
wcscpy
data
data
L"New String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(33,18,0)
(5,7,0)
(40,44,0)
(33,34,0)
(11,36,0)
(36,17,0)
(39,24,0)
(17,43,0)
(10,39,0)
(30,25,0)
(7,20,0)
(27,37,0)
(41,20,0)
(33,0,0)
(0,33,0)
(26,2,0)
(37,35,0)
(22,40,0)
(30,36,0)
(41,18,0)
(0,35,0)
(12,18,0)
(13,7,0)
(40,22,0)
(25,30,0)
(18,20,0)
(3,16,0)
(43,17,0)
(30,7,0)
(35,37,0)
(35,0,0)
(20,23,0)
(6,20,0)
(31,12,0)
(29,1,0)
(2,7,0)
(45,20,0)
(34,33,0)
(19,2,0)
(36,18,0)
(39,7,0)
(15,43,0)
(42,5,0)
(14,18,0)
(4,12,0)
(7,30,0)
(9,41,0)
(38,1,0)
(8,20,0)
(28,35,0)
(17,36,0)
(46,22,0)
(18,33,0)
(5,24,0)
(21,17,0)
(36,30,0)
(2,7,1)
(12,31,1)
(0,35,1)
(42,2,1)
(35,37,1)
(15,21,1)
(36,18,1)
(46,12,1)
(21,11,1)
(43,15,1)
(39,7,1)
(7,30,1)
(31,4,1)
(30,36,1)
(32,39,1)
(36,17,1)
(30,25,1)
(11,13,1)
(26,7,1)
(12,18,1)
(27,28,1)
(18,33,1)
(32,2,1)
(5,42,1)
(33,34,1)
(13,41,1)
(22,46,1)
(32,1,1)
(39,10,1)
(41,18,1)
(9,12,1)
(17,43,1)
(14,1,1)
(28,14,1)
(38,29,1)
(4,18,1)
(5,7,1)
(37,27,1)
(10,5,1)
(2,19,1)
(41,9,1)
(1,38,1)
(33,0,1)
(9,40,1)
(19,26,1)
(40,22,1)
(18,33,2)
(7,1,2)
(46,12,2)
(36,18,2)
(40,12,2)
(4,1,2)
(39,7,2)
(33,34,2)
(42,2,2)
(30,1,2)
(13,1,2)
(26,1,2)
(39,2,2)
(30,36,2)
(21,1,2)
(18,1,2)
(28,1,2)
(0,1,2)
(22,12,2)
(33,1,2)
(27,1,2)
(14,1,2)
(41,18,2)
(12,18,2)
(40,22,2)
(17,43,2)
(12,1,2)
(37,1,2)
(5,7,2)
(5,2,2)
(36,1,2)
(30,25,2)
(35,1,2)
(43,1,2)
(31,1,2)
(41,1,2)
(9,1,2)
(10,2,2)
(11,1,2)
(2,1,2)
(7,30,2)
(19,1,2)
(2,7,2)
(17,1,2)
(15,1,2)
(0,35,2)
(35,37,2)
(36,17,2)
(33,0,2)
-----------------------------------
(0,malloc(100*sizeof(wchar_t)
(1,STATIC_CONST_FIVE==5)
(2,data != NULL)
(3,if(STATIC_CONST_FIVE==5)
(4,data)
(5,printWLine(data)
(6,if (data == NULL)
(7,data = (wchar_t *)
(8,data)
(9,data)
(10,data)
(11,data)
(12,data == NULL)
(13,data)
(14,data)
(15,wchar_t)
(16,)
(17,(130000)
(18,* data = (wchar_t *)
(19,NULL)
(20,)
(21,130000)
(22,-1)
(23,)
(24,)
(25,wchar_t *)
(26,data)
(27,wchar_t)
(28,100)
(29,STATIC_CONST_FIVE)
(30,(wchar_t *)
(31,NULL)
(32,RET)
(33,(wchar_t *)
(34,wchar_t *)
(35,100*sizeof(wchar_t)
(36,realloc(data, (130000)
(37,sizeof(wchar_t)
(38,5)
(39,free(data)
(40,exit(-1)
(41,printWLine(data)
(42,data)
(43,sizeof(wchar_t)
(44,)
(45,if (data != NULL)
(46,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
