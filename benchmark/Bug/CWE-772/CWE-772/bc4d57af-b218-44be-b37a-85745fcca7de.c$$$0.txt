-----label-----
1
-----code-----
void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_41_bad()
{
    struct _twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
32,33
34,35
34,36
36,37
37,38
37,39
38,39
41,42
41,43
42,43
42,44
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
54,55
55,56
55,57
56,57
56,58
57,58
57,59
58,59
63,64
64,65
64,66
65,66
65,67
66,67
66,68
67,68
72,73
73,74
73,75
74,75
76,77
76,78
77,78
77,79
78,79
80,81
82,83
83,84
83,85
84,85
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,35,39,40,44,46,51,53,59,60,61,62,68,69,70,71,75,79,81,85,86,90,92
-----computeFrom-----
14,15
14,16
20,21
20,22
34,35
34,36
42,43
42,44
55,56
55,57
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_41_bad(){    struct _twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    badSink(data);}
void
CWE401_Memory_Leak__struct_twoIntsStruct_realloc_41_bad()
CWE401_Memory_Leak__struct_twoIntsStruct_realloc_41_bad
{    struct _twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    badSink(data);}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
realloc(data, 100*sizeof(struct _twoIntsStruct))
realloc
realloc
data
data
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(41,21,0)
(5,2,0)
(15,27,0)
(29,36,0)
(44,10,0)
(33,42,0)
(13,12,0)
(19,0,0)
(10,42,0)
(32,35,0)
(37,32,0)
(42,21,0)
(11,23,0)
(0,33,0)
(26,16,0)
(27,39,0)
(18,34,0)
(34,16,0)
(3,16,0)
(26,42,0)
(20,21,0)
(39,27,0)
(8,42,0)
(39,14,0)
(42,16,0)
(30,36,0)
(38,13,0)
(20,38,0)
(6,35,0)
(13,38,0)
(21,41,0)
(35,42,0)
(28,46,0)
(38,20,0)
(2,5,0)
(43,26,0)
(22,2,0)
(20,46,0)
(32,23,0)
(9,16,0)
(17,33,0)
(1,10,0)
(4,46,0)
(36,42,0)
(21,20,0)
(35,32,0)
(23,16,0)
(24,38,0)
(12,13,0)
(46,16,0)
(2,44,0)
(21,42,0)
(10,44,0)
(2,22,0)
(33,0,0)
(44,2,0)
(22,16,0)
(0,34,0)
(40,20,0)
(31,10,0)
(45,35,0)
(25,33,0)
(27,15,1)
(25,17,1)
(17,36,1)
(42,21,1)
(21,20,1)
(10,1,1)
(45,34,1)
(8,46,1)
(31,23,1)
(19,33,1)
(36,42,1)
(22,2,1)
(23,11,1)
(26,43,1)
(1,31,1)
(30,29,1)
(0,19,1)
(21,41,1)
(11,32,1)
(34,18,1)
(13,12,1)
(6,45,1)
(36,30,1)
(37,35,1)
(39,27,1)
(15,36,1)
(13,24,1)
(33,25,1)
(7,26,1)
(18,0,1)
(10,42,1)
(32,37,1)
(0,33,1)
(44,10,1)
(26,42,1)
(38,13,1)
(35,6,1)
(28,4,1)
(32,35,1)
(2,5,1)
(20,46,1)
(20,38,1)
(46,28,1)
(17,39,1)
(29,42,1)
(35,42,1)
(40,8,1)
(2,44,1)
(33,42,1)
(43,22,1)
(24,40,1)
(39,36,2)
(10,42,2)
(39,27,2)
(21,41,2)
(15,36,2)
(35,42,2)
(13,12,2)
(20,38,2)
(27,36,2)
(22,2,2)
(2,44,2)
(32,35,2)
(2,5,2)
(42,21,2)
(20,46,2)
(33,42,2)
(21,20,2)
(38,13,2)
(26,42,2)
(36,42,2)
(44,10,2)
(0,33,2)
-----------------------------------
(0,data[0].intOne)
(1,0)
(2,(twoIntsStruct *)
(3,if (data == NULL)
(4,data)
(5,twoIntsStruct *)
(6,0)
(7,RET)
(8,data)
(9,data)
(10,data[0])
(11,0)
(12,struct _twoIntsStruct)
(13,sizeof(struct _twoIntsStruct)
(14,)
(15,1)
(16,)
(17,data)
(18,0)
(19,intOne)
(20,realloc(data, 100*sizeof(struct _twoIntsStruct)
(21,(struct _twoIntsStruct *)
(22,printStructLine((twoIntsStruct *)
(23,data[0].intTwo = 0)
(24,100)
(25,0)
(26,badSink(data)
(27,-1)
(28,NULL)
(29,data)
(30,NULL)
(31,data)
(32,data[0].intTwo)
(33,data[0])
(34,data[0].intOne = 0)
(35,data[0])
(36,data == NULL)
(37,intTwo)
(38,100*sizeof(struct _twoIntsStruct)
(39,exit(-1)
(40,data)
(41,struct _twoIntsStruct *)
(42,data = (struct _twoIntsStruct *)
(43,data)
(44,&data[0])
(45,data)
(46,data = NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
