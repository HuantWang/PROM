-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_postinc_31_bad()
{
    char data;
    data = ' ';
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = CHAR_MAX;
    {
        char dataCopy = data;
        char data = dataCopy;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            char result = data;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
23,24
24,25
24,26
26,27
26,28
28,29
29,30
31,32
32,33
32,34
34,35
34,36
36,37
37,38
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
47,48
47,49
49,50
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,21,25,27,30,33,35,38,43,46,48,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_postinc_31_bad(){    char data;    data = ' ';    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            char result = data;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_max_postinc_31_bad()
CWE190_Integer_Overflow__char_max_postinc_31_bad
{    char data;    data = ' ';    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            char result = data;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
data = CHAR_MAX;
data = CHAR_MAX
data
data
CHAR_MAX
CHAR_MAX
{        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            char result = data;            printHexCharLine(result);        }    }
char dataCopy = data;
char dataCopy = data;
char
dataCopy = data
dataCopy
= data
data
data
char data = dataCopy;
char data = dataCopy;
char
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            char result = data;            printHexCharLine(result);        }
data++;
data++
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(12,23,0)
(3,16,0)
(23,9,0)
(11,10,0)
(7,0,0)
(15,16,0)
(18,16,0)
(6,15,0)
(17,2,0)
(4,7,0)
(0,16,0)
(25,0,0)
(16,9,0)
(1,0,0)
(25,15,0)
(19,7,0)
(21,16,0)
(10,9,0)
(2,15,0)
(24,0,0)
(8,25,0)
(7,15,0)
(26,10,0)
(5,23,0)
(18,10,0)
(0,18,0)
(14,18,0)
(13,9,0)
(2,7,0)
(22,18,0)
(7,0,1)
(22,14,1)
(26,11,1)
(24,18,1)
(18,10,1)
(11,23,1)
(4,25,1)
(19,4,1)
(2,17,1)
(10,26,1)
(0,18,1)
(14,10,1)
(20,2,1)
(17,7,1)
(7,19,1)
(12,5,1)
(2,7,1)
(25,8,1)
(23,12,1)
(18,22,1)
(25,0,1)
(1,24,1)
(8,0,1)
(0,1,1)
(2,7,2)
(7,0,2)
(0,18,2)
(25,0,2)
(18,10,2)
-----------------------------------
(0,data = dataCopy)
(1,dataCopy)
(2,printHexCharLine(result)
(3,data)
(4,result)
(5,data)
(6,result)
(7,result = data)
(8,data)
(9,)
(10,data = CHAR_MAX)
(11,data)
(12,' ')
(13,data)
(14,dataCopy)
(15,)
(16,)
(17,result)
(18,dataCopy = data)
(19,data)
(20,RET)
(21,dataCopy)
(22,data)
(23,data = ' ')
(24,data)
(25,data++)
(26,CHAR_MAX)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^