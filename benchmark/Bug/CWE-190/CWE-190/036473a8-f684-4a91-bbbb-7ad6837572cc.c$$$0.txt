-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_multiply_63b_badSink(int64_t * dataPtr)
{
    int64_t data = *dataPtr;
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */
        int64_t result = data * 2;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
13,14
13,15
14,15
16,17
16,18
18,19
19,20
20,21
22,23
22,24
23,24
23,25
24,25
27,28
27,29
28,29
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
39,40
40,41
40,42
41,42
43,44
-----nextToken-----
2,4,7,9,10,15,17,21,25,26,31,33,37,38,42,44
-----computeFrom-----
23,24
23,25
35,36
35,37
-----guardedBy-----
25,37
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_multiply_63b_badSink(int64_t * dataPtr){    int64_t data = *dataPtr;    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_multiply_63b_badSink(int64_t * dataPtr)
CWE190_Integer_Overflow__int64_t_fscanf_multiply_63b_badSink
int64_t * dataPtr
int64_t
int64_t
* dataPtr
*
dataPtr
{    int64_t data = *dataPtr;    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }}
int64_t data = *dataPtr;
int64_t data = *dataPtr;
int64_t
int64_t
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }
int64_t result = data * 2;
int64_t result = data * 2;
int64_t
int64_t
result = data * 2
result
= data * 2
data * 2
data
data
2
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(2,1,0)
(15,1,0)
(5,2,0)
(0,2,0)
(7,15,0)
(8,6,0)
(19,20,0)
(1,20,0)
(5,17,0)
(4,5,0)
(6,17,0)
(20,11,0)
(12,15,0)
(20,1,0)
(9,1,0)
(3,18,0)
(1,18,0)
(6,5,0)
(13,18,0)
(14,2,0)
(2,5,0)
(16,17,0)
(15,1,1)
(2,1,1)
(6,5,1)
(5,2,1)
(0,4,1)
(19,9,1)
(6,8,1)
(2,14,1)
(15,12,1)
(14,0,1)
(1,20,1)
(7,1,1)
(20,11,1)
(10,6,1)
(20,19,1)
(8,5,1)
(12,7,1)
(4,15,1)
(10,15,1)
(2,15,2)
(20,11,2)
(5,2,2)
(15,1,2)
(5,15,2)
(6,15,2)
(1,20,2)
(0,15,2)
(8,15,2)
(6,5,2)
(4,15,2)
(14,15,2)
(2,1,2)
-----------------------------------
(0,data)
(1,data = *dataPtr)
(2,data * 2)
(3,data)
(4,result)
(5,result = data * 2)
(6,printLongLongLine(result)
(7,data)
(8,result)
(9,data)
(10,RET)
(11,int64_t * dataPtr)
(12,0)
(13,if(data > 0)
(14,2)
(15,data > 0)
(16,result)
(17,)
(18,)
(19,dataPtr)
(20,*dataPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^