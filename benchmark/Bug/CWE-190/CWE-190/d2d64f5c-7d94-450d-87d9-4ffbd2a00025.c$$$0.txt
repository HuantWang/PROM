-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_preinc_09_bad()
{
    short data;
    data = 0;
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_preinc_09_bad(){    short data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_preinc_09_bad()
CWE190_Integer_Overflow__short_fscanf_preinc_09_bad
{    short data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(23,11,0)
(11,14,0)
(13,4,0)
(12,5,0)
(16,4,0)
(18,17,0)
(20,16,0)
(25,4,0)
(1,21,0)
(13,11,0)
(3,12,0)
(21,11,0)
(4,17,0)
(21,23,0)
(12,16,0)
(23,4,0)
(8,4,0)
(7,11,0)
(19,17,0)
(2,17,0)
(16,12,0)
(0,23,0)
(24,13,0)
(22,12,0)
(6,23,0)
(15,10,1)
(22,10,1)
(13,4,1)
(15,12,1)
(16,4,1)
(13,24,1)
(6,0,1)
(23,6,1)
(8,25,1)
(10,4,1)
(16,20,1)
(9,15,1)
(24,15,1)
(20,3,1)
(21,23,1)
(23,4,1)
(9,21,1)
(21,1,1)
(1,23,1)
(3,22,1)
(0,13,1)
(4,8,1)
(12,16,1)
(24,15,2)
(12,16,2)
(23,15,2)
(0,15,2)
(6,15,2)
(21,15,2)
(23,4,2)
(20,10,2)
(3,10,2)
(13,15,2)
(13,4,2)
(16,4,2)
(1,15,2)
(22,10,2)
(12,10,2)
(21,23,2)
(16,10,2)
-----------------------------------
(0,result)
(1,result)
(2,if(GLOBAL_CONST_TRUE)
(3,"%hd")
(4,data = 0)
(5,)
(6,data)
(7,result)
(8,0)
(9,RET)
(10,GLOBAL_CONST_TRUE)
(11,)
(12,fscanf (stdin, "%hd", &data)
(13,++data)
(14,)
(15,GLOBAL_CONST_TRUE)
(16,&data)
(17,)
(18,if(GLOBAL_CONST_TRUE)
(19,data)
(20,data)
(21,printIntLine(result)
(22,stdin)
(23,result = data)
(24,data)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^