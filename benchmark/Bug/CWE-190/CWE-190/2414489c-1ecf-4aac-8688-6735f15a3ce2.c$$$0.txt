-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_10_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalTrue)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
20,22
21,22
22,23
22,24
24,25
24,26
24,27
26,27
27,28
29,30
31,32
31,33
31,34
32,33
32,34
33,34
33,35
33,36
33,37
34,35
36,37
38,39
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
60,61
60,62
61,62
63,64
64,65
64,66
65,66
66,67
66,68
68,69
68,70
70,71
71,72
71,73
72,73
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,30,35,37,39,41,43,48,51,53,58,59,62,67,69,73,74,78,80
-----computeFrom-----
12,13
12,14
32,33
32,34
46,47
46,48
71,72
71,73
-----guardedBy-----
37,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_10_bad(){    int data;    /* Initialize data */    data = 0;    if(globalTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_add_10_bad()
CWE190_Integer_Overflow__int_fgets_add_10_bad
{    int data;    /* Initialize data */    data = 0;    if(globalTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
globalTrue
globalTrue
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(7,4,0)
(32,10,0)
(15,19,0)
(37,2,0)
(28,27,0)
(23,29,0)
(38,29,0)
(1,6,0)
(4,2,0)
(7,24,0)
(25,36,0)
(18,12,0)
(29,28,0)
(21,23,0)
(40,19,0)
(17,12,0)
(14,19,0)
(39,2,0)
(29,23,0)
(30,6,0)
(10,6,0)
(23,10,0)
(13,38,0)
(3,6,0)
(20,15,0)
(12,34,0)
(2,12,0)
(22,19,0)
(16,7,0)
(38,28,0)
(33,4,0)
(26,29,0)
(0,10,0)
(23,7,0)
(4,7,0)
(11,28,0)
(31,23,0)
(19,15,0)
(19,2,0)
(36,8,0)
(4,2,1)
(22,40,1)
(15,19,1)
(39,35,1)
(35,10,1)
(13,29,1)
(26,5,1)
(10,0,1)
(38,13,1)
(20,19,1)
(29,23,1)
(4,33,1)
(9,5,1)
(23,21,1)
(19,14,1)
(37,39,1)
(38,29,1)
(25,15,1)
(40,2,1)
(0,32,1)
(7,4,1)
(14,22,1)
(19,2,1)
(16,15,1)
(5,35,1)
(5,36,1)
(31,26,1)
(5,7,1)
(23,10,1)
(33,16,1)
(23,7,1)
(15,20,1)
(9,38,1)
(2,37,1)
(36,25,1)
(21,31,1)
(38,29,2)
(23,7,2)
(15,35,2)
(19,35,2)
(4,15,2)
(31,5,2)
(23,10,2)
(40,35,2)
(15,19,2)
(26,5,2)
(38,5,2)
(29,23,2)
(19,2,2)
(4,2,2)
(25,15,2)
(37,35,2)
(23,5,2)
(22,35,2)
(2,35,2)
(39,35,2)
(29,5,2)
(7,15,2)
(20,35,2)
(33,15,2)
(16,15,2)
(14,35,2)
(13,5,2)
(36,15,2)
(21,5,2)
(7,4,2)
-----------------------------------
(0,0)
(1,if(globalTrue)
(2,inputBuffer[CHAR_ARRAY_SIZE] = "")
(3,if(globalTrue)
(4,atoi(inputBuffer)
(5,globalTrue)
(6,)
(7,data = atoi(inputBuffer)
(8,)
(9,RET)
(10,data = 0)
(11,result)
(12,)
(13,result)
(14,stdin)
(15,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(16,data)
(17,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(18,inputBuffer)
(19,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(20,NULL)
(21,1)
(22,CHAR_ARRAY_SIZE)
(23,data + 1)
(24,)
(25,"fgets()
(26,result)
(27,)
(28,)
(29,result = data + 1)
(30,data)
(31,data)
(32,data)
(33,inputBuffer)
(34,)
(35,globalTrue)
(36,printLine("fgets()
(37,"")
(38,printIntLine(result)
(39,inputBuffer)
(40,inputBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^