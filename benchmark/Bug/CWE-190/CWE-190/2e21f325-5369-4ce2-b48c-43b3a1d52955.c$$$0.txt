-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_add_16_bad()
{
    unsigned int data;
    data = 0;
    while(1)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
27,28
28,29
31,32
31,33
33,34
33,35
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,17,22,25,26,29,30,32,37,39,43,44,48,50,51
-----computeFrom-----
12,13
12,14
20,21
20,22
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_add_16_bad(){    unsigned int data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_add_16_bad()
CWE190_Integer_Overflow__unsigned_int_rand_add_16_bad
{    unsigned int data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }        break;    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        break;    }
1
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        break;    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
break;
while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
break;
-----joern-----
(15,5,0)
(22,5,0)
(19,7,0)
(9,11,0)
(23,15,0)
(20,5,0)
(17,26,0)
(12,23,0)
(6,7,0)
(2,6,0)
(27,15,0)
(15,6,0)
(26,23,0)
(22,21,0)
(13,22,0)
(16,6,0)
(5,22,0)
(5,4,0)
(0,25,0)
(21,22,0)
(8,7,0)
(22,13,0)
(23,11,0)
(11,25,0)
(26,11,0)
(18,7,0)
(10,4,0)
(15,23,0)
(1,15,0)
(27,12,1)
(23,15,1)
(26,23,1)
(14,0,1)
(10,5,1)
(16,2,1)
(14,24,1)
(0,26,1)
(24,10,1)
(15,6,1)
(15,5,1)
(22,13,1)
(13,20,1)
(12,24,1)
(5,22,1)
(17,23,1)
(1,27,1)
(6,16,1)
(20,3,1)
(24,3,1)
(26,17,1)
(15,1,1)
(22,21,1)
(3,6,1)
(27,24,2)
(5,3,2)
(22,21,2)
(17,24,2)
(23,24,2)
(22,13,2)
(5,22,2)
(15,24,2)
(20,3,2)
(22,3,2)
(26,23,2)
(13,3,2)
(1,24,2)
(0,24,2)
(12,24,2)
(15,6,2)
(15,5,2)
(10,3,2)
(23,15,2)
(26,24,2)
-----------------------------------
(0,break;)
(1,1)
(2,data)
(3,1)
(4,)
(5,data = (unsigned int)
(6,data = 0)
(7,)
(8,data)
(9,result)
(10,break;)
(11,)
(12,result)
(13,RAND32()
(14,RET)
(15,data + 1)
(16,0)
(17,result)
(18,while(1)
(19,while(1)
(20,data)
(21,unsigned int)
(22,(unsigned int)
(23,result = data + 1)
(24,1)
(25,)
(26,printUnsignedLine(result)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^