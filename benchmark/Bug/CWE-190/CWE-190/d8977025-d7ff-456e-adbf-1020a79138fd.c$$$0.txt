-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_bad()
{
    int64_t data;
    CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_unionType myUnion;
    data = 0LL;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%" SCNd64, &data);
    myUnion.unionFirst = data;
    {
        int64_t data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
23,24
24,25
25,26
25,27
26,27
26,28
27,28
30,31
32,33
32,34
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
44,45
44,46
44,47
45,46
46,47
47,48
49,50
50,51
50,52
51,52
53,54
53,55
55,56
56,57
58,59
59,60
59,61
60,61
62,63
-----nextToken-----
2,4,9,11,15,17,21,22,28,29,31,36,38,42,43,48,52,54,57,61,63
-----computeFrom-----
19,20
19,21
25,26
25,27
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ProblemStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_bad(){    int64_t data;    CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_unionType myUnion;    data = 0LL;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);    myUnion.unionFirst = data;    {        int64_t data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_bad()
CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_bad
{    int64_t data;    CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_unionType myUnion;    data = 0LL;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);    myUnion.unionFirst = data;    {        int64_t data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_unionType myUnion;
CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_unionType myUnion;
CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_unionType
CWE190_Integer_Overflow__int64_t_fscanf_preinc_34_unionType
myUnion
myUnion
data = 0LL;
data = 0LL
data
data
0LL
fscanf (stdin, "%" SCNd64, &data);
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int64_t data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
int64_t data = myUnion.unionSecond;
int64_t data = myUnion.unionSecond;
int64_t
int64_t
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(4,18,0)
(20,8,0)
(2,19,0)
(4,19,0)
(19,18,0)
(17,5,0)
(14,18,0)
(25,4,0)
(3,8,0)
(15,6,0)
(13,24,0)
(9,6,0)
(6,5,0)
(8,5,0)
(19,20,0)
(18,8,0)
(1,19,0)
(10,24,0)
(23,14,0)
(24,20,0)
(11,20,0)
(20,24,0)
(14,20,0)
(12,5,0)
(16,15,0)
(22,5,0)
(21,18,0)
(0,15,0)
(7,4,1)
(0,16,1)
(1,14,1)
(9,15,1)
(19,2,1)
(11,6,1)
(19,20,1)
(23,20,1)
(4,19,1)
(16,12,1)
(15,0,1)
(14,20,1)
(6,9,1)
(4,25,1)
(2,1,1)
(24,10,1)
(10,13,1)
(14,23,1)
(20,24,1)
(13,11,1)
(25,19,1)
(4,19,2)
(14,20,2)
(19,20,2)
(20,24,2)
-----------------------------------
(0,unionFirst)
(1,result)
(2,data)
(3,data)
(4,printLongLongLine(result)
(5,)
(6,myUnion.unionFirst = data)
(7,RET)
(8,)
(9,data)
(10,unionSecond)
(11,data)
(12,L)
(13,myUnion)
(14,++data)
(15,myUnion.unionFirst)
(16,myUnion)
(17,myUnion)
(18,)
(19,result = data)
(20,data = myUnion.unionSecond)
(21,result)
(22,data)
(23,data)
(24,myUnion.unionSecond)
(25,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^