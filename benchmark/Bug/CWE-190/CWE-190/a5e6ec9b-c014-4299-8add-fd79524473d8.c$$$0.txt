-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_add_11_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,39,41,45,46,50,52
-----computeFrom-----
12,13
12,14
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_add_11_bad(){    int data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_add_11_bad()
CWE190_Integer_Overflow__int_fscanf_add_11_bad
{    int data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(24,13,0)
(20,6,0)
(10,13,0)
(8,6,0)
(7,16,0)
(16,3,0)
(23,6,0)
(16,25,0)
(19,16,0)
(12,24,0)
(5,25,0)
(4,6,0)
(14,13,0)
(2,23,0)
(13,24,0)
(17,11,0)
(25,16,0)
(25,23,0)
(11,22,0)
(15,23,0)
(24,23,0)
(13,11,0)
(21,24,0)
(18,10,0)
(10,11,0)
(9,0,1)
(21,12,1)
(13,24,1)
(0,16,1)
(25,23,1)
(10,13,1)
(9,10,1)
(14,0,1)
(24,23,1)
(7,19,1)
(0,1,1)
(15,2,1)
(19,1,1)
(24,21,1)
(1,23,1)
(25,5,1)
(18,13,1)
(16,25,1)
(23,15,1)
(5,7,1)
(10,18,1)
(12,14,1)
(7,1,2)
(19,1,2)
(21,0,2)
(10,13,2)
(24,0,2)
(16,25,2)
(25,23,2)
(5,1,2)
(18,0,2)
(13,24,2)
(13,0,2)
(16,1,2)
(12,0,2)
(25,1,2)
(24,23,2)
(10,0,2)
(14,0,2)
-----------------------------------
(0,globalReturnsTrue()
(1,globalReturnsTrue()
(2,data)
(3,)
(4,data)
(5,data)
(6,)
(7,"%d")
(8,if(globalReturnsTrue()
(9,RET)
(10,printIntLine(result)
(11,)
(12,data)
(13,result = data + 1)
(14,result)
(15,0)
(16,fscanf(stdin, "%d", &data)
(17,result)
(18,result)
(19,stdin)
(20,if(globalReturnsTrue()
(21,1)
(22,)
(23,data = 0)
(24,data + 1)
(25,&data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^