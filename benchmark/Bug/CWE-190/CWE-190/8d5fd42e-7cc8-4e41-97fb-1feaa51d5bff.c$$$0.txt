-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_postinc_13_bad()
{
    short data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_postinc_13_bad(){    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_postinc_13_bad()
CWE190_Integer_Overflow__short_fscanf_postinc_13_bad
{    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(19,0,0)
(17,10,0)
(22,27,0)
(10,9,0)
(14,28,0)
(11,26,0)
(20,19,0)
(23,9,0)
(21,9,0)
(25,0,0)
(5,11,0)
(19,1,0)
(10,0,0)
(16,28,0)
(29,26,0)
(9,28,0)
(11,12,0)
(1,9,0)
(18,8,0)
(26,9,0)
(13,11,0)
(1,0,0)
(7,27,0)
(2,1,0)
(3,28,0)
(6,8,0)
(24,1,0)
(0,15,0)
(26,11,0)
(7,22,1)
(4,8,1)
(13,5,1)
(10,17,1)
(19,20,1)
(10,9,1)
(1,9,1)
(2,24,1)
(5,27,1)
(22,9,1)
(27,7,1)
(21,23,1)
(4,19,1)
(26,9,1)
(1,2,1)
(20,1,1)
(17,8,1)
(19,1,1)
(6,27,1)
(18,6,1)
(26,29,1)
(29,13,1)
(11,26,1)
(9,21,1)
(8,18,1)
(24,10,1)
(6,11,1)
(1,9,2)
(20,8,2)
(10,8,2)
(2,8,2)
(24,8,2)
(26,27,2)
(11,26,2)
(17,8,2)
(10,9,2)
(26,9,2)
(5,27,2)
(1,8,2)
(19,8,2)
(13,27,2)
(11,27,2)
(19,1,2)
(29,27,2)
-----------------------------------
(0,)
(1,result = data)
(2,data)
(3,data)
(4,RET)
(5,stdin)
(6,GLOBAL_CONST_FIVE)
(7,5)
(8,GLOBAL_CONST_FIVE==5)
(9,data = 0)
(10,data++)
(11,fscanf (stdin, "%hd", &data)
(12,)
(13,"%hd")
(14,if(GLOBAL_CONST_FIVE==5)
(15,)
(16,if(GLOBAL_CONST_FIVE==5)
(17,data)
(18,5)
(19,printIntLine(result)
(20,result)
(21,0)
(22,GLOBAL_CONST_FIVE)
(23,data)
(24,result)
(25,result)
(26,&data)
(27,GLOBAL_CONST_FIVE==5)
(28,)
(29,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^