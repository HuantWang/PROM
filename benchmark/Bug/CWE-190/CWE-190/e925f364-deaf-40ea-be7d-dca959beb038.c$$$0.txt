-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_multiply_13_bad()
{
    short data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */
            short result = data * 2;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
39,41
40,41
43,44
43,45
44,45
45,46
45,47
47,48
47,49
49,50
50,51
50,52
51,52
54,55
55,56
55,57
56,57
58,59
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,42,46,48,52,53,57,59
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
39,40
39,41
50,51
50,52
-----guardedBy-----
41,52
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_multiply_13_bad(){    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */            short result = data * 2;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_multiply_13_bad()
CWE190_Integer_Overflow__short_fscanf_multiply_13_bad
{    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */            short result = data * 2;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */            short result = data * 2;            printIntLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */            short result = data * 2;            printIntLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */            short result = data * 2;            printIntLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */            short result = data * 2;            printIntLine(result);        }
short result = data * 2;
short result = data * 2;
short
result = data * 2
result
= data * 2
data * 2
data
data
2
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(27,11,0)
(28,14,0)
(10,9,0)
(12,9,0)
(24,29,0)
(20,19,0)
(24,3,0)
(2,19,0)
(30,9,0)
(19,3,0)
(7,32,0)
(4,11,0)
(15,19,0)
(31,3,0)
(22,29,0)
(18,17,0)
(29,5,0)
(23,24,0)
(16,21,0)
(0,13,0)
(25,15,0)
(17,21,0)
(1,29,0)
(11,3,0)
(15,21,0)
(8,32,0)
(29,24,0)
(33,13,0)
(17,15,0)
(19,15,0)
(26,3,0)
(3,9,0)
(1,32,1)
(32,7,1)
(17,15,1)
(3,26,1)
(18,15,1)
(19,3,1)
(19,20,1)
(0,33,1)
(20,2,1)
(17,18,1)
(4,27,1)
(15,19,1)
(11,3,1)
(33,32,1)
(6,17,1)
(7,8,1)
(26,31,1)
(24,3,1)
(6,13,1)
(33,29,1)
(23,22,1)
(22,1,1)
(2,25,1)
(25,11,1)
(24,23,1)
(11,4,1)
(27,13,1)
(29,24,1)
(6,11,1)
(13,0,1)
(8,3,1)
(11,3,2)
(29,32,2)
(18,11,2)
(4,13,2)
(17,15,2)
(23,32,2)
(2,11,2)
(20,11,2)
(24,32,2)
(15,11,2)
(22,32,2)
(17,11,2)
(27,13,2)
(19,11,2)
(11,13,2)
(24,3,2)
(15,19,2)
(29,24,2)
(1,32,2)
(19,3,2)
(25,11,2)
-----------------------------------
(0,5)
(1,stdin)
(2,data)
(3,data = 0)
(4,0)
(5,)
(6,RET)
(7,5)
(8,GLOBAL_CONST_FIVE)
(9,)
(10,if(GLOBAL_CONST_FIVE==5)
(11,data > 0)
(12,data)
(13,GLOBAL_CONST_FIVE==5)
(14,)
(15,result = data * 2)
(16,result)
(17,printIntLine(result)
(18,result)
(19,data * 2)
(20,2)
(21,)
(22,"%hd")
(23,data)
(24,&data)
(25,result)
(26,0)
(27,data)
(28,if(data > 0)
(29,fscanf (stdin, "%hd", &data)
(30,if(GLOBAL_CONST_FIVE==5)
(31,data)
(32,GLOBAL_CONST_FIVE==5)
(33,GLOBAL_CONST_FIVE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^