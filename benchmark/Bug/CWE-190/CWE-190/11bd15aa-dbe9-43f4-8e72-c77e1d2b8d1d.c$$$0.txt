-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_add_08_bad()
{
    unsigned int data;
    data = 0;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
29,30
31,32
32,33
32,34
33,34
34,35
34,36
36,37
36,38
38,39
39,40
39,41
40,41
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,15,19,24,26,30,35,37,41,42,46,48
-----computeFrom-----
12,13
12,14
22,23
22,24
39,40
39,41
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_add_08_bad(){    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_add_08_bad()
CWE190_Integer_Overflow__unsigned_int_max_add_08_bad
{    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(4,15,0)
(12,22,0)
(23,15,0)
(10,7,0)
(20,7,0)
(13,19,0)
(15,10,0)
(22,13,0)
(15,18,0)
(18,13,0)
(5,7,0)
(14,18,0)
(22,18,0)
(6,9,0)
(2,10,0)
(17,6,0)
(21,13,0)
(15,6,0)
(16,7,0)
(3,6,0)
(18,15,0)
(1,10,0)
(1,2,1)
(22,12,1)
(14,11,1)
(8,22,1)
(10,1,1)
(11,0,1)
(3,17,1)
(15,10,1)
(18,15,1)
(0,10,1)
(23,14,1)
(12,18,1)
(8,11,1)
(11,6,1)
(17,0,1)
(4,23,1)
(15,4,1)
(6,3,1)
(15,6,1)
(22,18,1)
(22,11,2)
(22,18,2)
(23,11,2)
(6,0,2)
(15,10,2)
(17,0,2)
(18,11,2)
(15,11,2)
(15,6,2)
(3,0,2)
(14,11,2)
(18,15,2)
(4,11,2)
(12,11,2)
-----------------------------------
(0,staticReturnsTrue()
(1,0)
(2,data)
(3,UINT_MAX)
(4,1)
(5,if(staticReturnsTrue()
(6,data = UINT_MAX)
(7,)
(8,RET)
(9,)
(10,data = 0)
(11,staticReturnsTrue()
(12,result)
(13,)
(14,result)
(15,data + 1)
(16,data)
(17,data)
(18,result = data + 1)
(19,)
(20,if(staticReturnsTrue()
(21,result)
(22,printUnsignedLine(result)
(23,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^