-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_add_12_bad()
{
    int64_t data;
    data = 0LL;
    if(globalReturnsTrueOrFalse())
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
    }
    else
    {
        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */
        data = 2;
    }
    if(globalReturnsTrueOrFalse())
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int64_t result = data + 1;
            printLongLongLine(result);
        }
    }
    else
    {
        /* FIX: Add a check to prevent an overflow from occurring */
        if (data < LLONG_MAX)
        {
            int64_t result = data + 1;
            printLongLongLine(result);
        }
        else
        {
            printLine("data value is too large to perform arithmetic safely.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
17,20
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
28,29
31,32
32,33
34,35
35,36
36,37
36,38
37,38
40,41
40,42
40,43
41,42
42,43
44,45
45,46
45,47
46,47
47,48
47,49
48,49
50,51
50,52
52,53
53,54
53,55
54,55
57,58
58,59
58,60
59,60
61,62
63,64
64,65
64,66
64,67
65,66
65,67
66,67
68,69
70,71
70,72
71,72
72,73
72,74
73,74
75,76
75,77
77,78
78,79
78,80
79,80
82,83
83,84
83,85
84,85
86,87
88,89
89,90
90,91
90,92
91,92
-----nextToken-----
2,4,9,11,15,16,20,25,29,30,33,38,39,43,49,51,55,56,60,62,67,69,74,76,80,81,85,87,92,93
-----computeFrom-----
13,14
13,15
23,24
23,25
36,37
36,38
53,54
53,55
65,66
65,67
78,79
78,80
-----guardedBy-----
67,80
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_add_12_bad(){    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            int64_t result = data + 1;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_add_12_bad()
CWE190_Integer_Overflow__int64_t_rand_add_12_bad
{    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            int64_t result = data + 1;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
{        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
data = 2;
data = 2
data
data
2
if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            int64_t result = data + 1;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            int64_t result = data + 1;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
if (data < LLONG_MAX)        {            int64_t result = data + 1;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }
data < LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
{            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{            printLine("data value is too large to perform arithmetic safely.");        }
printLine("data value is too large to perform arithmetic safely.");
printLine("data value is too large to perform arithmetic safely.")
printLine
printLine
"data value is too large to perform arithmetic safely."
-----joern-----
(41,3,0)
(31,38,0)
(31,29,0)
(37,29,0)
(4,18,0)
(36,32,0)
(44,8,0)
(8,39,0)
(22,32,0)
(24,26,0)
(23,22,0)
(38,31,0)
(32,22,0)
(28,26,0)
(16,32,0)
(43,42,0)
(5,23,0)
(13,22,0)
(12,41,0)
(23,11,0)
(31,41,0)
(14,37,0)
(26,24,0)
(32,29,0)
(40,31,0)
(27,29,0)
(38,8,0)
(25,29,0)
(6,38,0)
(37,41,0)
(26,28,0)
(26,41,0)
(35,31,0)
(7,34,0)
(19,44,0)
(34,10,0)
(17,18,0)
(44,38,0)
(32,41,0)
(15,11,0)
(1,18,0)
(29,20,0)
(33,8,0)
(30,18,0)
(0,37,0)
(41,26,0)
(22,11,0)
(38,31,1)
(28,12,1)
(9,34,1)
(14,2,1)
(37,29,1)
(6,2,1)
(7,37,1)
(27,21,1)
(26,28,1)
(29,25,1)
(36,16,1)
(22,32,1)
(12,21,1)
(2,41,1)
(0,14,1)
(37,0,1)
(9,44,1)
(41,26,1)
(44,19,1)
(19,38,1)
(16,13,1)
(23,22,1)
(13,37,1)
(21,1,1)
(31,41,1)
(44,38,1)
(9,23,1)
(2,29,1)
(32,41,1)
(32,36,1)
(34,7,1)
(31,29,1)
(40,35,1)
(25,27,1)
(5,22,1)
(37,41,1)
(26,24,1)
(32,29,1)
(23,5,1)
(31,40,1)
(35,6,1)
(13,37,2)
(23,37,2)
(31,29,2)
(44,2,2)
(26,24,2)
(26,28,2)
(19,2,2)
(6,2,2)
(38,2,2)
(22,37,2)
(5,37,2)
(26,21,2)
(41,26,2)
(34,37,2)
(27,21,2)
(40,2,2)
(23,22,2)
(44,38,2)
(38,31,2)
(31,2,2)
(37,29,2)
(31,41,2)
(16,37,2)
(32,29,2)
(32,41,2)
(36,37,2)
(37,41,2)
(29,21,2)
(41,21,2)
(22,32,2)
(28,21,2)
(12,21,2)
(37,2,2)
(7,37,2)
(0,2,2)
(32,37,2)
(35,2,2)
(25,21,2)
(14,2,2)
-----------------------------------
(0,LLONG_MAX)
(1,L)
(2,globalReturnsTrueOrFalse()
(3,)
(4,if(globalReturnsTrueOrFalse()
(5,result)
(6,result)
(7,"data value is too large to perform arithmetic safely.")
(8,)
(9,RET)
(10,)
(11,)
(12,data)
(13,result)
(14,data)
(15,result)
(16,data)
(17,data)
(18,)
(19,result)
(20,)
(21,globalReturnsTrueOrFalse()
(22,result = data + 1)
(23,printLongLongLine(result)
(24,int64_t)
(25,2)
(26,(int64_t)
(27,data)
(28,RAND64()
(29,data = 2)
(30,if(globalReturnsTrueOrFalse()
(31,data + 1)
(32,data + 1)
(33,result)
(34,printLine("data value is too large to perform arithmetic safely.")
(35,data)
(36,1)
(37,data < LLONG_MAX)
(38,result = data + 1)
(39,)
(40,1)
(41,data = (int64_t)
(42,)
(43,if (data < LLONG_MAX)
(44,printLongLongLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^