-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_preinc_63b_badSink(char * dataPtr)
{
    char data = *dataPtr;
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        ++data;
        char result = data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
18,19
20,21
20,22
20,23
21,22
22,23
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
33,34
34,35
34,36
35,36
37,38
-----nextToken-----
2,4,6,8,9,13,15,19,24,27,29,32,36,38
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_preinc_63b_badSink(char * dataPtr){    char data = *dataPtr;    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_fscanf_preinc_63b_badSink(char * dataPtr)
CWE190_Integer_Overflow__char_fscanf_preinc_63b_badSink
char * dataPtr
char
* dataPtr
*
dataPtr
{    char data = *dataPtr;    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }}
char data = *dataPtr;
char data = *dataPtr;
char
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(0,10,0)
(6,7,0)
(3,12,0)
(11,16,0)
(9,0,0)
(15,0,0)
(12,10,0)
(5,15,0)
(11,0,0)
(1,6,0)
(4,10,0)
(6,12,0)
(12,6,0)
(15,12,0)
(8,11,0)
(16,0,0)
(13,16,0)
(14,16,0)
(16,12,0)
(12,6,1)
(14,13,1)
(11,8,1)
(11,16,1)
(5,12,1)
(15,12,1)
(15,5,1)
(13,15,1)
(6,7,1)
(16,12,1)
(6,1,1)
(1,3,1)
(2,11,1)
(16,14,1)
(8,16,1)
(11,16,2)
(12,6,2)
(16,12,2)
(15,12,2)
(6,7,2)
-----------------------------------
(0,)
(1,dataPtr)
(2,RET)
(3,data)
(4,data)
(5,data)
(6,*dataPtr)
(7,char * dataPtr)
(8,result)
(9,result)
(10,)
(11,printHexCharLine(result)
(12,data = *dataPtr)
(13,result)
(14,data)
(15,++data)
(16,result = data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^