-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_add_41_bad()
{
    short data;
    data = 0;
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = SHRT_MAX;
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
22,23
23,24
23,25
24,25
26,27
-----nextToken-----
2,4,8,10,14,15,19,21,25,27
-----computeFrom-----
12,13
12,14
17,18
17,19
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_add_41_bad(){    short data;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = SHRT_MAX;    badSink(data);}
void
CWE190_Integer_Overflow__short_max_add_41_bad()
CWE190_Integer_Overflow__short_max_add_41_bad
{    short data;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = SHRT_MAX;    badSink(data);}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(9,2,0)
(10,9,0)
(3,1,0)
(4,10,0)
(0,9,0)
(8,9,0)
(1,2,0)
(6,1,0)
(10,2,0)
(5,2,0)
(4,9,1)
(10,4,1)
(9,0,1)
(8,1,1)
(7,10,1)
(10,9,1)
(1,6,1)
(6,3,1)
(0,8,1)
(10,9,2)
-----------------------------------
(0,SHRT_MAX)
(1,data = 0)
(2,)
(3,data)
(4,data)
(5,data)
(6,0)
(7,RET)
(8,data)
(9,data = SHRT_MAX)
(10,badSink(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^