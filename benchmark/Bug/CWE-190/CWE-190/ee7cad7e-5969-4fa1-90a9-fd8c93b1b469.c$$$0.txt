-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_add_08_bad()
{
    short data;
    data = 0;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,39,41,45,46,50,52
-----computeFrom-----
12,13
12,14
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_add_08_bad(){    short data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_add_08_bad()
CWE190_Integer_Overflow__short_fscanf_add_08_bad
{    short data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(22,18,0)
(3,21,0)
(1,19,0)
(4,8,0)
(15,3,0)
(19,13,0)
(5,19,0)
(8,10,0)
(18,14,0)
(14,1,0)
(2,13,0)
(8,4,0)
(16,13,0)
(23,8,0)
(20,1,0)
(7,8,0)
(14,3,0)
(1,14,0)
(0,13,0)
(18,3,0)
(25,14,0)
(12,4,0)
(17,1,0)
(6,19,0)
(4,19,0)
(1,19,1)
(9,24,1)
(22,14,1)
(18,14,1)
(4,19,1)
(9,18,1)
(19,6,1)
(7,11,1)
(23,7,1)
(18,22,1)
(4,12,1)
(17,25,1)
(8,4,1)
(24,8,1)
(25,24,1)
(6,5,1)
(24,11,1)
(20,17,1)
(1,20,1)
(14,1,1)
(12,23,1)
(11,19,1)
(7,11,2)
(14,1,2)
(8,4,2)
(18,24,2)
(1,19,2)
(25,24,2)
(17,24,2)
(12,11,2)
(18,14,2)
(8,11,2)
(4,19,2)
(14,24,2)
(20,24,2)
(4,11,2)
(23,11,2)
(1,24,2)
(22,24,2)
-----------------------------------
(0,if(staticReturnsTrue()
(1,data + 1)
(2,if(staticReturnsTrue()
(3,)
(4,&data)
(5,data)
(6,0)
(7,stdin)
(8,fscanf (stdin, "%hd", &data)
(9,RET)
(10,)
(11,staticReturnsTrue()
(12,data)
(13,)
(14,result = data + 1)
(15,result)
(16,data)
(17,data)
(18,printIntLine(result)
(19,data = 0)
(20,1)
(21,)
(22,result)
(23,"%hd")
(24,staticReturnsTrue()
(25,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^