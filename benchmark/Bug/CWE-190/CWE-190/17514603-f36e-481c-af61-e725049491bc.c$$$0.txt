-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_add_04_bad()
{
    short data;
    data = 0;
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(STATIC_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,33,35,39,40,44,46
-----computeFrom-----
12,13
12,14
21,22
21,23
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_add_04_bad(){    short data;    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_add_04_bad()
CWE190_Integer_Overflow__short_max_add_04_bad
{    short data;    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(7,9,0)
(13,14,0)
(11,0,0)
(4,0,0)
(5,16,0)
(10,9,0)
(8,16,0)
(23,9,0)
(15,18,0)
(3,10,0)
(14,17,0)
(21,18,0)
(2,7,0)
(9,14,0)
(7,18,0)
(9,7,0)
(7,0,0)
(0,6,0)
(22,7,0)
(20,16,0)
(10,14,0)
(18,16,0)
(12,18,1)
(10,9,1)
(1,10,1)
(4,12,1)
(7,18,1)
(11,4,1)
(0,11,1)
(1,19,1)
(7,0,1)
(2,23,1)
(9,7,1)
(3,9,1)
(15,21,1)
(18,15,1)
(22,2,1)
(7,22,1)
(23,19,1)
(10,3,1)
(19,0,1)
(19,12,1)
(4,12,2)
(2,19,2)
(11,12,2)
(22,19,2)
(10,19,2)
(9,19,2)
(9,7,2)
(7,0,2)
(7,18,2)
(0,12,2)
(7,19,2)
(3,19,2)
(23,19,2)
(10,9,2)
-----------------------------------
(0,data = SHRT_MAX)
(1,RET)
(2,data)
(3,result)
(4,data)
(5,if(STATIC_CONST_TRUE)
(6,)
(7,data + 1)
(8,data)
(9,result = data + 1)
(10,printIntLine(result)
(11,SHRT_MAX)
(12,STATIC_CONST_TRUE)
(13,result)
(14,)
(15,0)
(16,)
(17,)
(18,data = 0)
(19,STATIC_CONST_TRUE)
(20,if(STATIC_CONST_TRUE)
(21,data)
(22,1)
(23,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^