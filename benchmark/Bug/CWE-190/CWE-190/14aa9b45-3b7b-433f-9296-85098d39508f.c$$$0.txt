-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_preinc_10_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_preinc_10_bad(){    int data;    /* Initialize data */    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_preinc_10_bad()
CWE190_Integer_Overflow__int_fscanf_preinc_10_bad
{    int data;    /* Initialize data */    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(22,23,0)
(8,22,0)
(24,9,0)
(9,10,0)
(19,7,0)
(18,19,0)
(25,8,0)
(14,23,0)
(24,22,0)
(8,13,0)
(21,24,0)
(9,24,0)
(5,22,0)
(11,23,0)
(15,23,0)
(7,13,0)
(2,9,0)
(7,22,0)
(19,13,0)
(17,22,0)
(12,13,0)
(3,7,0)
(6,7,0)
(13,16,0)
(4,9,0)
(5,17,1)
(6,8,1)
(21,4,1)
(19,7,1)
(1,20,1)
(8,25,1)
(18,7,1)
(2,0,1)
(1,19,1)
(8,22,1)
(20,0,1)
(7,22,1)
(24,21,1)
(7,3,1)
(4,2,1)
(3,6,1)
(20,9,1)
(22,5,1)
(0,22,1)
(9,24,1)
(19,18,1)
(25,20,1)
(24,22,1)
(7,20,2)
(19,20,2)
(6,20,2)
(21,0,2)
(8,22,2)
(18,20,2)
(9,24,2)
(4,0,2)
(8,20,2)
(24,22,2)
(3,20,2)
(25,20,2)
(9,0,2)
(19,7,2)
(2,0,2)
(24,0,2)
(7,22,2)
-----------------------------------
(0,globalTrue)
(1,RET)
(2,stdin)
(3,data)
(4,"%d")
(5,0)
(6,result)
(7,result = data)
(8,++data)
(9,fscanf(stdin, "%d", &data)
(10,)
(11,if(globalTrue)
(12,result)
(13,)
(14,data)
(15,if(globalTrue)
(16,)
(17,data)
(18,result)
(19,printIntLine(result)
(20,globalTrue)
(21,data)
(22,data = 0)
(23,)
(24,&data)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^