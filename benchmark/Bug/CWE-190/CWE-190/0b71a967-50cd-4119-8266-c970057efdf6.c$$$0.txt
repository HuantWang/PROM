-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_add_06_bad()
{
    short data;
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,37,39,43,44,48,50
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_add_06_bad(){    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_add_06_bad()
CWE190_Integer_Overflow__short_max_add_06_bad
{    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(18,19,0)
(8,17,0)
(11,15,0)
(12,20,0)
(17,18,0)
(13,5,0)
(10,17,0)
(24,12,0)
(22,19,0)
(6,5,0)
(26,19,0)
(15,4,0)
(4,3,0)
(21,27,0)
(9,19,0)
(0,27,0)
(23,18,0)
(25,8,0)
(1,18,0)
(17,8,0)
(16,12,0)
(15,8,0)
(2,17,0)
(8,4,0)
(17,12,0)
(7,4,0)
(17,10,1)
(17,12,1)
(5,6,1)
(11,8,1)
(10,2,1)
(21,0,1)
(13,18,1)
(14,27,1)
(12,16,1)
(6,13,1)
(0,5,1)
(0,12,1)
(27,21,1)
(8,17,1)
(17,18,1)
(23,1,1)
(25,27,1)
(15,11,1)
(18,23,1)
(2,25,1)
(15,8,1)
(24,5,1)
(16,24,1)
(14,15,1)
(15,27,2)
(10,27,2)
(8,27,2)
(24,5,2)
(25,27,2)
(12,5,2)
(2,27,2)
(17,12,2)
(17,18,2)
(8,17,2)
(11,27,2)
(16,5,2)
(15,8,2)
(17,27,2)
-----------------------------------
(0,STATIC_CONST_FIVE)
(1,data)
(2,data)
(3,)
(4,)
(5,STATIC_CONST_FIVE==5)
(6,5)
(7,result)
(8,result = data + 1)
(9,if(STATIC_CONST_FIVE==5)
(10,1)
(11,result)
(12,data = SHRT_MAX)
(13,STATIC_CONST_FIVE)
(14,RET)
(15,printIntLine(result)
(16,SHRT_MAX)
(17,data + 1)
(18,data = 0)
(19,)
(20,)
(21,5)
(22,data)
(23,0)
(24,data)
(25,result)
(26,if(STATIC_CONST_FIVE==5)
(27,STATIC_CONST_FIVE==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^