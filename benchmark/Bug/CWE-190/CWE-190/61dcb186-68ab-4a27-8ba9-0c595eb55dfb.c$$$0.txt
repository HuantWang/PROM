-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_preinc_07_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_preinc_07_bad(){    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_preinc_07_bad()
CWE190_Integer_Overflow__int_fscanf_preinc_07_bad
{    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(10,22,0)
(20,3,0)
(21,24,0)
(27,20,0)
(19,27,0)
(18,24,0)
(16,20,0)
(26,20,0)
(12,25,0)
(0,26,0)
(7,3,0)
(23,20,0)
(25,6,0)
(8,13,0)
(15,3,0)
(11,25,0)
(29,16,0)
(28,13,0)
(1,22,0)
(2,28,0)
(25,16,0)
(27,13,0)
(13,14,0)
(4,3,0)
(17,20,0)
(5,27,0)
(28,27,0)
(26,13,0)
(16,25,0)
(9,28,1)
(22,10,1)
(20,17,1)
(2,27,1)
(26,0,1)
(5,19,1)
(21,20,1)
(27,5,1)
(29,12,1)
(18,21,1)
(27,20,1)
(11,24,1)
(9,22,1)
(0,22,1)
(16,29,1)
(10,1,1)
(1,25,1)
(17,23,1)
(28,27,1)
(28,2,1)
(12,11,1)
(24,18,1)
(19,26,1)
(16,20,1)
(1,24,1)
(26,20,1)
(25,16,1)
(26,22,2)
(12,24,2)
(27,20,2)
(28,22,2)
(19,22,2)
(16,20,2)
(5,22,2)
(16,24,2)
(25,24,2)
(26,20,2)
(27,22,2)
(11,24,2)
(25,16,2)
(2,22,2)
(28,27,2)
(29,24,2)
(0,22,2)
-----------------------------------
(0,data)
(1,staticFive)
(2,result)
(3,)
(4,if(staticFive==5)
(5,data)
(6,)
(7,data)
(8,result)
(9,RET)
(10,5)
(11,stdin)
(12,"%d")
(13,)
(14,)
(15,if(staticFive==5)
(16,&data)
(17,0)
(18,5)
(19,result)
(20,data = 0)
(21,staticFive)
(22,staticFive==5)
(23,data)
(24,staticFive==5)
(25,fscanf(stdin, "%d", &data)
(26,++data)
(27,result = data)
(28,printIntLine(result)
(29,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^