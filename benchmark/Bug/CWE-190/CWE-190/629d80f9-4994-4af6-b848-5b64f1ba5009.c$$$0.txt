-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_bad()
{
    unsigned int data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
47,48
47,49
49,50
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,43,46,48,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_bad(){    unsigned int data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_bad()
CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_bad
{    unsigned int data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(16,9,0)
(6,7,0)
(8,16,0)
(26,3,0)
(19,26,0)
(10,27,0)
(4,19,0)
(20,18,0)
(11,26,0)
(23,5,0)
(0,24,0)
(13,5,0)
(2,4,0)
(24,26,0)
(19,7,0)
(4,16,0)
(26,5,0)
(5,13,0)
(24,7,0)
(5,23,0)
(17,18,0)
(24,16,0)
(19,16,0)
(25,15,0)
(1,7,0)
(5,26,0)
(21,15,0)
(22,27,0)
(14,19,0)
(28,18,0)
(29,19,0)
(7,18,0)
(24,7,1)
(27,22,1)
(19,29,1)
(1,6,1)
(19,26,1)
(12,15,1)
(15,25,1)
(5,23,1)
(19,7,1)
(26,5,1)
(25,21,1)
(11,27,1)
(29,14,1)
(24,0,1)
(21,27,1)
(10,7,1)
(4,2,1)
(4,19,1)
(22,10,1)
(21,26,1)
(2,19,1)
(14,24,1)
(5,13,1)
(0,15,1)
(7,1,1)
(13,11,1)
(24,26,1)
(12,4,1)
(11,27,2)
(26,27,2)
(4,15,2)
(2,15,2)
(24,15,2)
(5,27,2)
(0,15,2)
(24,7,2)
(26,5,2)
(13,27,2)
(29,15,2)
(19,7,2)
(5,23,2)
(19,15,2)
(14,15,2)
(24,26,2)
(5,13,2)
(19,26,2)
(4,19,2)
-----------------------------------
(0,data)
(1,0)
(2,result)
(3,)
(4,printUnsignedLine(result)
(5,(unsigned int)
(6,data)
(7,data = 0)
(8,result)
(9,)
(10,GLOBAL_CONST_FIVE)
(11,data)
(12,RET)
(13,RAND32()
(14,result)
(15,GLOBAL_CONST_FIVE==5)
(16,)
(17,if(GLOBAL_CONST_FIVE==5)
(18,)
(19,result = data)
(20,if(GLOBAL_CONST_FIVE==5)
(21,GLOBAL_CONST_FIVE)
(22,5)
(23,unsigned int)
(24,++data)
(25,5)
(26,data = (unsigned int)
(27,GLOBAL_CONST_FIVE==5)
(28,data)
(29,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^