-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_multiply_16_bad()
{
    unsigned int data;
    data = 0;
    while(1)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
        break;
    }
    while(1)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
            unsigned int result = data * 2;
            printUnsignedLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
27,28
28,29
31,32
31,33
33,34
33,35
34,35
34,36
35,36
35,37
36,37
39,40
39,41
40,41
41,42
41,43
43,44
43,45
45,46
46,47
46,48
47,48
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,8,10,14,15,17,22,25,26,29,30,32,37,38,42,44,48,49,53,55,56
-----computeFrom-----
12,13
12,14
20,21
20,22
35,36
35,37
46,47
46,48
-----guardedBy-----
37,48
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_multiply_16_bad(){    unsigned int data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        break;    }    while(1)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_multiply_16_bad()
CWE190_Integer_Overflow__unsigned_int_rand_multiply_16_bad
{    unsigned int data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        break;    }    while(1)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }        break;    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        break;    }
1
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        break;    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
break;
while(1)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }        break;    }
1
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }        break;    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
break;
-----joern-----
(15,2,0)
(0,2,0)
(20,21,0)
(23,1,0)
(31,2,0)
(18,19,0)
(27,21,0)
(14,0,0)
(5,31,0)
(13,0,0)
(31,19,0)
(0,29,0)
(2,3,0)
(29,0,0)
(19,6,0)
(28,19,0)
(0,19,0)
(1,23,0)
(24,31,0)
(1,2,0)
(8,10,0)
(9,6,0)
(11,1,0)
(29,30,0)
(16,3,0)
(22,29,0)
(12,6,0)
(1,11,0)
(10,29,0)
(26,30,0)
(2,1,0)
(10,30,0)
(25,6,0)
(20,31,1)
(19,28,1)
(7,17,1)
(4,20,1)
(1,11,1)
(10,8,1)
(29,0,1)
(15,17,1)
(31,5,1)
(20,10,1)
(0,19,1)
(11,15,1)
(16,2,1)
(31,2,1)
(17,19,1)
(31,19,1)
(10,29,1)
(2,1,1)
(14,22,1)
(0,2,1)
(8,29,1)
(13,14,1)
(0,13,1)
(28,18,1)
(22,31,1)
(5,24,1)
(4,7,1)
(24,7,1)
(7,16,1)
(1,23,1)
(1,23,2)
(31,2,2)
(2,1,2)
(31,19,2)
(11,17,2)
(13,31,2)
(2,17,2)
(10,29,2)
(16,17,2)
(0,31,2)
(5,7,2)
(10,31,2)
(1,17,2)
(8,31,2)
(29,0,2)
(20,7,2)
(29,31,2)
(22,31,2)
(0,19,2)
(14,31,2)
(24,7,2)
(15,17,2)
(0,2,2)
(1,11,2)
(31,7,2)
-----------------------------------
(0,data * 2)
(1,(unsigned int)
(2,data = (unsigned int)
(3,)
(4,RET)
(5,0)
(6,)
(7,1)
(8,result)
(9,while(1)
(10,printUnsignedLine(result)
(11,RAND32()
(12,while(1)
(13,2)
(14,data)
(15,data)
(16,break;)
(17,1)
(18,data)
(19,data = 0)
(20,break;)
(21,)
(22,result)
(23,unsigned int)
(24,data)
(25,data)
(26,result)
(27,if(data > 0)
(28,0)
(29,result = data * 2)
(30,)
(31,data > 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^