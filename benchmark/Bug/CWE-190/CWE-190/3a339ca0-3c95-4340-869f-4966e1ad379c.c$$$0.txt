-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_add_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = 0;
    {
        int data = *dataPtr1;
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
51,52
53,54
54,55
54,56
55,56
56,57
58,59
60,61
60,62
61,62
62,63
62,64
64,65
64,66
66,67
67,68
68,69
70,71
70,72
71,72
72,73
72,74
74,75
74,76
76,77
77,78
77,79
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,52,57,59,63,65,69,73,75,79,80,84,86
-----computeFrom-----
32,33
32,34
47,48
47,49
54,55
54,56
77,78
77,79
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_add_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_rand_add_32_bad()
CWE190_Integer_Overflow__int_rand_add_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(12,31,0)
(18,27,0)
(23,15,0)
(20,24,0)
(36,1,0)
(11,27,0)
(25,9,0)
(5,15,0)
(15,9,0)
(0,38,0)
(1,15,0)
(30,35,0)
(13,27,0)
(37,15,0)
(3,24,0)
(21,25,0)
(17,23,0)
(29,13,0)
(31,35,0)
(41,19,0)
(43,35,0)
(35,30,0)
(32,30,0)
(39,9,0)
(35,9,0)
(19,26,0)
(2,18,0)
(23,1,0)
(13,31,0)
(5,14,0)
(28,25,0)
(22,1,0)
(7,28,0)
(40,25,0)
(14,25,0)
(38,26,0)
(38,13,0)
(31,13,0)
(10,5,0)
(34,26,0)
(16,14,0)
(1,36,0)
(26,18,0)
(8,21,0)
(42,9,0)
(26,38,0)
(24,9,0)
(27,9,0)
(14,5,0)
(33,38,0)
(28,23,0)
(4,9,0)
(19,18,0)
(25,21,0)
(35,30,1)
(29,23,1)
(30,32,1)
(7,1,1)
(0,34,1)
(24,20,1)
(6,19,1)
(23,17,1)
(38,33,1)
(12,29,1)
(16,10,1)
(25,21,1)
(14,16,1)
(31,12,1)
(31,35,1)
(32,43,1)
(38,13,1)
(14,25,1)
(36,22,1)
(28,25,1)
(33,0,1)
(23,1,1)
(13,31,1)
(17,28,1)
(10,24,1)
(22,5,1)
(34,13,1)
(19,26,1)
(21,8,1)
(28,7,1)
(43,25,1)
(26,38,1)
(8,40,1)
(3,35,1)
(19,41,1)
(1,36,1)
(41,26,1)
(5,14,1)
(20,3,1)
(13,31,2)
(14,25,2)
(19,26,2)
(35,30,2)
(31,35,2)
(23,1,2)
(38,13,2)
(28,25,2)
(26,38,2)
(25,21,2)
(5,14,2)
(1,36,2)
-----------------------------------
(0,data)
(1,data = RAND32()
(2,result)
(3,data)
(4,data)
(5,data = *dataPtr1)
(6,RET)
(7,dataPtr1)
(8,data)
(9,)
(10,data)
(11,data)
(12,dataPtr2)
(13,data = *dataPtr2)
(14,*dataPtr1)
(15,)
(16,dataPtr1)
(17,data)
(18,)
(19,printIntLine(result)
(20,0)
(21,&data)
(22,data)
(23,*dataPtr1 = data)
(24,data = 0)
(25,*dataPtr1 = &data)
(26,result = data + 1)
(27,)
(28,*dataPtr1)
(29,data)
(30,&data)
(31,*dataPtr2)
(32,data)
(33,1)
(34,result)
(35,*dataPtr2 = &data)
(36,RAND32()
(37,data)
(38,data + 1)
(39,dataPtr2)
(40,dataPtr1)
(41,result)
(42,dataPtr1)
(43,dataPtr2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^