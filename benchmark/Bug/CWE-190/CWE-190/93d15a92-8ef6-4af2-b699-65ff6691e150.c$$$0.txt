-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_preinc_12_bad()
{
    int64_t data;
    data = 0LL;
    if(globalReturnsTrueOrFalse())
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = LLONG_MAX;
    }
    else
    {
        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */
        data = 2;
    }
    if(globalReturnsTrueOrFalse())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
    else
    {
        /* FIX: Add a check to prevent an overflow from occurring */
        if (data < LLONG_MAX)
        {
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
        else
        {
            printLine("data value is too large to perform arithmetic safely.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
17,20
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
28,29
29,30
30,31
30,32
31,32
34,35
34,36
34,37
35,36
36,37
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
46,47
48,49
48,50
50,51
51,52
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
60,63
61,62
61,63
62,63
64,65
66,67
66,68
66,69
67,68
68,69
69,70
71,72
72,73
72,74
73,74
75,76
75,77
77,78
78,79
80,81
81,82
81,83
82,83
84,85
86,87
87,88
88,89
88,90
89,90
-----nextToken-----
2,4,9,11,15,16,20,25,27,32,33,37,43,47,49,52,56,58,63,65,70,74,76,79,83,85,90,91
-----computeFrom-----
13,14
13,15
23,24
23,25
30,31
30,32
61,62
61,63
-----guardedBy-----
63,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_preinc_12_bad(){    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
void
CWE190_Integer_Overflow__int64_t_max_preinc_12_bad()
CWE190_Integer_Overflow__int64_t_max_preinc_12_bad
{    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
{        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
data = 2;
data = 2
data
data
2
if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }
data < LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
{            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{            printLine("data value is too large to perform arithmetic safely.");        }
printLine("data value is too large to perform arithmetic safely.");
printLine("data value is too large to perform arithmetic safely.")
printLine
printLine
"data value is too large to perform arithmetic safely."
-----joern-----
(11,7,0)
(39,15,0)
(37,42,0)
(40,9,0)
(31,7,0)
(29,19,0)
(41,17,0)
(37,19,0)
(1,37,0)
(38,7,0)
(42,4,0)
(36,39,0)
(2,19,0)
(7,30,0)
(6,23,0)
(0,24,0)
(10,15,0)
(39,19,0)
(35,24,0)
(27,8,0)
(37,7,0)
(19,18,0)
(21,31,0)
(39,7,0)
(9,42,0)
(14,42,0)
(25,24,0)
(28,7,0)
(16,39,0)
(9,37,0)
(34,37,0)
(23,15,0)
(11,19,0)
(31,19,0)
(22,2,0)
(33,24,0)
(26,19,0)
(32,31,0)
(12,11,0)
(2,42,0)
(23,39,0)
(2,7,0)
(3,41,0)
(11,15,0)
(37,7,1)
(2,22,1)
(41,3,1)
(34,2,1)
(38,5,1)
(28,38,1)
(13,41,1)
(7,28,1)
(16,36,1)
(19,29,1)
(36,11,1)
(23,6,1)
(39,7,1)
(39,19,1)
(37,1,1)
(11,19,1)
(20,19,1)
(2,19,1)
(9,40,1)
(23,39,1)
(29,26,1)
(3,31,1)
(40,37,1)
(32,21,1)
(1,34,1)
(26,5,1)
(21,20,1)
(9,37,1)
(11,12,1)
(12,31,1)
(22,20,1)
(39,16,1)
(5,0,1)
(31,32,1)
(13,9,1)
(31,7,1)
(20,7,1)
(13,23,1)
(2,7,1)
(31,19,1)
(37,19,1)
(6,39,1)
(11,7,1)
(2,7,2)
(34,20,2)
(9,20,2)
(19,5,2)
(39,19,2)
(31,7,2)
(7,5,2)
(28,5,2)
(31,20,2)
(1,20,2)
(16,31,2)
(6,31,2)
(26,5,2)
(38,5,2)
(29,5,2)
(36,31,2)
(9,37,2)
(39,7,2)
(21,20,2)
(23,31,2)
(31,19,2)
(12,31,2)
(22,20,2)
(39,31,2)
(3,31,2)
(37,7,2)
(41,31,2)
(2,20,2)
(32,20,2)
(11,7,2)
(11,19,2)
(37,20,2)
(37,19,2)
(2,19,2)
(11,31,2)
(23,39,2)
(40,20,2)
-----------------------------------
(0,L)
(1,data)
(2,++data)
(3,"data value is too large to perform arithmetic safely.")
(4,)
(5,globalReturnsTrueOrFalse()
(6,result)
(7,data = LLONG_MAX)
(8,)
(9,printLongLongLine(result)
(10,result)
(11,++data)
(12,data)
(13,RET)
(14,result)
(15,)
(16,data)
(17,)
(18,)
(19,data = 2)
(20,globalReturnsTrueOrFalse()
(21,data)
(22,data)
(23,printLongLongLine(result)
(24,)
(25,data)
(26,data)
(27,if (data < LLONG_MAX)
(28,LLONG_MAX)
(29,2)
(30,)
(31,data < LLONG_MAX)
(32,LLONG_MAX)
(33,if(globalReturnsTrueOrFalse()
(34,result)
(35,if(globalReturnsTrueOrFalse()
(36,result)
(37,result = data)
(38,data)
(39,result = data)
(40,result)
(41,printLine("data value is too large to perform arithmetic safely.")
(42,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^