-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_preinc_07_bad()
{
    short data;
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_preinc_07_bad(){    short data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_preinc_07_bad()
CWE190_Integer_Overflow__short_fscanf_preinc_07_bad
{    short data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(7,14,0)
(6,17,0)
(0,22,0)
(1,13,0)
(21,22,0)
(14,2,0)
(24,13,0)
(5,7,0)
(3,13,0)
(23,16,0)
(28,16,0)
(20,11,0)
(15,28,0)
(27,23,0)
(7,25,0)
(12,17,0)
(18,16,0)
(8,11,0)
(23,17,0)
(17,23,0)
(16,13,0)
(19,16,0)
(29,14,0)
(10,25,0)
(28,14,0)
(25,14,0)
(17,4,0)
(26,25,0)
(25,16,0)
(21,17,1)
(7,25,1)
(18,19,1)
(12,6,1)
(9,22,1)
(7,5,1)
(28,15,1)
(28,16,1)
(16,18,1)
(20,16,1)
(25,16,1)
(0,21,1)
(11,8,1)
(5,25,1)
(10,26,1)
(27,12,1)
(21,11,1)
(22,0,1)
(9,7,1)
(17,23,1)
(26,28,1)
(23,27,1)
(8,20,1)
(23,16,1)
(15,22,1)
(25,10,1)
(6,11,1)
(15,22,2)
(28,22,2)
(7,22,2)
(23,11,2)
(17,11,2)
(5,22,2)
(10,22,2)
(25,16,2)
(12,11,2)
(26,22,2)
(27,11,2)
(17,23,2)
(28,16,2)
(6,11,2)
(23,16,2)
(7,25,2)
(25,22,2)
-----------------------------------
(0,5)
(1,data)
(2,)
(3,if(staticFive==5)
(4,)
(5,result)
(6,stdin)
(7,printIntLine(result)
(8,5)
(9,RET)
(10,data)
(11,staticFive==5)
(12,"%hd")
(13,)
(14,)
(15,data)
(16,data = 0)
(17,fscanf (stdin, "%hd", &data)
(18,0)
(19,data)
(20,staticFive)
(21,staticFive)
(22,staticFive==5)
(23,&data)
(24,if(staticFive==5)
(25,result = data)
(26,result)
(27,data)
(28,++data)
(29,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^