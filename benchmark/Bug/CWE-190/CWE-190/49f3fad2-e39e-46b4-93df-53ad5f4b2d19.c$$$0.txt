-----label-----
1
-----code-----
int64_t CWE190_Integer_Overflow__int64_t_rand_square_61b_badSource(int64_t data)
{
    /* POTENTIAL FLAW: Use a random value */
    data = (int64_t)RAND64();
    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
6,7
6,8
7,8
9,10
11,12
11,13
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
18,19
21,22
22,23
24,25
25,26
-----nextToken-----
3,5,8,10,15,19,20,23,26
-----computeFrom-----
13,14
13,15
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
int64_t CWE190_Integer_Overflow__int64_t_rand_square_61b_badSource(int64_t data){    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    return data;}
int64_t
int64_t
CWE190_Integer_Overflow__int64_t_rand_square_61b_badSource(int64_t data)
CWE190_Integer_Overflow__int64_t_rand_square_61b_badSource
int64_t data
int64_t
int64_t
data
data
{    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    return data;}
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
return data;
data
data
-----joern-----
(9,5,0)
(3,4,0)
(4,3,0)
(0,3,0)
(5,7,0)
(0,2,0)
(0,7,0)
(1,5,0)
(5,0,0)
(6,3,0)
(3,6,0)
(8,0,0)
(3,0,0)
(5,2,0)
(5,1,1)
(0,7,1)
(5,0,1)
(1,0,1)
(9,5,1)
(6,8,1)
(3,6,1)
(0,3,1)
(3,4,1)
(5,7,1)
(9,5,2)
(0,7,2)
(0,3,2)
(3,4,2)
(5,0,2)
(5,7,2)
(3,6,2)
-----------------------------------
(0,data = (int64_t)
(1,data)
(2,)
(3,(int64_t)
(4,int64_t)
(5,return data;)
(6,RAND64()
(7,int64_t data)
(8,data)
(9,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^