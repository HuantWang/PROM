-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_add_04_bad()
{
    unsigned int data;
    data = 0;
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(STATIC_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,38,40,44,45,49,51
-----computeFrom-----
12,13
12,14
21,22
21,23
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_add_04_bad(){    unsigned int data;    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_add_04_bad()
CWE190_Integer_Overflow__unsigned_int_rand_add_04_bad
{    unsigned int data;    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(6,11,0)
(18,17,0)
(16,5,0)
(15,20,0)
(25,11,0)
(21,14,0)
(14,13,0)
(11,6,0)
(17,14,0)
(11,20,0)
(5,8,0)
(19,13,0)
(2,14,0)
(20,1,0)
(13,4,0)
(8,24,0)
(3,4,0)
(7,4,0)
(14,20,0)
(10,4,0)
(20,11,0)
(11,25,0)
(17,8,0)
(22,8,0)
(5,17,0)
(0,13,0)
(14,17,0)
(14,20,1)
(14,21,1)
(11,25,1)
(5,16,1)
(6,15,1)
(23,12,1)
(13,19,1)
(23,5,1)
(20,11,1)
(21,2,1)
(12,9,1)
(16,17,1)
(17,14,1)
(14,13,1)
(11,6,1)
(9,13,1)
(15,9,1)
(5,17,1)
(12,20,1)
(2,18,1)
(18,12,1)
(19,0,1)
(2,12,2)
(5,12,2)
(5,17,2)
(11,6,2)
(21,12,2)
(6,9,2)
(11,25,2)
(17,14,2)
(16,12,2)
(17,12,2)
(20,9,2)
(20,11,2)
(11,9,2)
(18,12,2)
(14,13,2)
(15,9,2)
(14,12,2)
(14,20,2)
-----------------------------------
(0,data)
(1,)
(2,data)
(3,if(STATIC_CONST_TRUE)
(4,)
(5,printUnsignedLine(result)
(6,RAND32()
(7,if(STATIC_CONST_TRUE)
(8,)
(9,STATIC_CONST_TRUE)
(10,data)
(11,(unsigned int)
(12,STATIC_CONST_TRUE)
(13,data = 0)
(14,data + 1)
(15,data)
(16,result)
(17,result = data + 1)
(18,result)
(19,0)
(20,data = (unsigned int)
(21,1)
(22,result)
(23,RET)
(24,)
(25,unsigned int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^