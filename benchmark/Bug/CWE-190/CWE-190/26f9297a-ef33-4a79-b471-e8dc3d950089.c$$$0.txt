-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_postinc_01_bad()
{
    char data;
    data = ' ';
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%c", &data);
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        char result = data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
24,25
26,27
26,28
26,29
27,28
28,29
29,30
31,32
32,33
32,34
34,35
34,36
36,37
37,38
39,40
40,41
40,42
41,42
43,44
-----nextToken-----
2,4,8,10,14,15,19,21,22,25,30,33,35,38,42,44
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_postinc_01_bad(){    char data;    data = ' ';    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%c", &data);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_fscanf_postinc_01_bad()
CWE190_Integer_Overflow__char_fscanf_postinc_01_bad
{    char data;    data = ' ';    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%c", &data);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }
data++;
data++
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(7,3,0)
(13,6,0)
(16,17,0)
(15,7,0)
(6,2,0)
(14,1,0)
(1,3,0)
(0,3,0)
(10,7,0)
(5,15,0)
(9,1,0)
(1,14,0)
(12,1,0)
(4,14,0)
(19,2,0)
(2,3,0)
(15,2,0)
(8,2,0)
(17,15,0)
(18,15,0)
(6,7,0)
(17,7,0)
(14,2,0)
(2,8,1)
(9,2,1)
(4,12,1)
(14,4,1)
(8,19,1)
(15,5,1)
(11,17,1)
(18,6,1)
(1,14,1)
(17,16,1)
(12,9,1)
(5,18,1)
(6,2,1)
(14,2,1)
(16,15,1)
(13,1,1)
(17,15,1)
(6,13,1)
(15,2,1)
(1,14,2)
(14,2,2)
(15,2,2)
(17,15,2)
(6,2,2)
-----------------------------------
(0,data)
(1,fscanf (stdin, "%c", &data)
(2,data = \\\' \\\')
(3,)
(4,data)
(5,data)
(6,data++)
(7,)
(8,\\\' \\\')
(9,stdin)
(10,result)
(11,RET)
(12,"%c")
(13,data)
(14,&data)
(15,result = data)
(16,result)
(17,printHexCharLine(result)
(18,result)
(19,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^