-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_add_17_bad()
{
    int i,j;
    unsigned int data;
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
38,39
38,40
39,40
41,42
41,43
42,43
42,44
45,46
46,47
48,49
48,50
48,51
48,52
49,50
50,51
50,52
51,52
54,55
54,56
55,56
58,59
59,60
61,62
62,63
62,64
63,64
64,65
64,66
66,67
66,68
68,69
69,70
69,71
70,71
73,74
74,75
74,76
75,76
77,78
-----nextToken-----
2,4,8,10,12,15,17,21,22,27,28,31,32,35,40,43,44,47,52,53,56,57,60,65,67,71,72,76,78
-----computeFrom-----
19,20
19,21
25,26
25,27
29,30
29,31
38,39
38,40
50,51
50,52
54,55
54,56
69,70
69,71
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_add_17_bad(){    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_add_17_bad()
CWE190_Integer_Overflow__unsigned_int_rand_add_17_bad
{    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(26,17,0)
(39,41,0)
(23,9,0)
(18,21,0)
(12,41,0)
(13,41,0)
(1,19,0)
(0,35,0)
(4,23,0)
(41,28,0)
(20,39,0)
(31,21,0)
(21,39,0)
(6,3,0)
(29,9,0)
(5,35,0)
(38,34,0)
(7,9,0)
(33,35,0)
(12,39,0)
(39,21,0)
(17,34,0)
(3,37,0)
(22,35,0)
(32,23,0)
(25,34,0)
(21,14,0)
(2,8,0)
(15,19,0)
(16,14,0)
(3,19,0)
(8,34,0)
(30,35,0)
(19,1,0)
(21,3,0)
(27,9,0)
(19,3,0)
(19,15,0)
(10,14,0)
(24,12,0)
(40,8,0)
(36,27,0)
(14,35,0)
(32,27,1)
(1,6,1)
(2,34,1)
(36,3,1)
(17,26,1)
(27,36,1)
(31,18,1)
(39,21,1)
(16,10,1)
(24,39,1)
(19,15,1)
(23,4,1)
(38,23,1)
(7,29,1)
(32,9,1)
(6,23,1)
(21,3,1)
(4,32,1)
(8,34,1)
(20,8,1)
(21,14,1)
(18,20,1)
(11,8,1)
(26,12,1)
(3,19,1)
(19,1,1)
(12,24,1)
(8,40,1)
(14,16,1)
(40,2,1)
(23,9,1)
(34,25,1)
(2,17,1)
(29,14,1)
(9,7,1)
(21,31,1)
(17,34,1)
(27,9,1)
(25,38,1)
(12,39,1)
(24,8,2)
(19,1,2)
(23,9,2)
(39,21,2)
(27,9,2)
(32,23,2)
(21,3,2)
(18,8,2)
(19,15,2)
(8,8,2)
(17,8,2)
(3,19,2)
(31,8,2)
(2,8,2)
(40,8,2)
(12,39,2)
(19,23,2)
(17,34,2)
(23,23,2)
(39,8,2)
(8,34,2)
(20,8,2)
(21,8,2)
(4,23,2)
(26,8,2)
(36,23,2)
(3,23,2)
(27,23,2)
(12,8,2)
(1,23,2)
(6,23,2)
(21,14,2)
-----------------------------------
(0,i)
(1,RAND32()
(2,j)
(3,data = (unsigned int)
(4,1)
(5,for(i = 0; i < 1; i++)
(6,data)
(7,0)
(8,j < 1)
(9,i = 0)
(10,data)
(11,RET)
(12,printUnsignedLine(result)
(13,result)
(14,data = 0)
(15,unsigned int)
(16,0)
(17,j++)
(18,data)
(19,(unsigned int)
(20,result)
(21,data + 1)
(22,data)
(23,i < 1)
(24,result)
(25,0)
(26,j)
(27,i++)
(28,)
(29,i)
(30,j)
(31,1)
(32,i)
(33,for(j = 0; j < 1; j++)
(34,j = 0)
(35,)
(36,i)
(37,)
(38,j)
(39,result = data + 1)
(40,1)
(41,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^