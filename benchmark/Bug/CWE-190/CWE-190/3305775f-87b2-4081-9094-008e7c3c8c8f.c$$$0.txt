-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_preinc_16_bad()
{
    char data;
    data = ' ';
    while(1)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = CHAR_MAX;
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            char result = data;
            printHexCharLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
21,22
23,24
26,27
26,28
28,29
28,30
29,30
29,31
29,32
30,31
31,32
32,33
34,35
35,36
35,37
37,38
37,39
39,40
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,27,33,36,38,41,45,47,48
-----computeFrom-----
12,13
12,14
20,21
20,22
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_preinc_16_bad(){    char data;    data = ' ';    while(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__char_max_preinc_16_bad()
CWE190_Integer_Overflow__char_max_preinc_16_bad
{    char data;    data = ' ';    while(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }        break;    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
while(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;        break;    }
1
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;        break;    }
data = CHAR_MAX;
data = CHAR_MAX
data
data
CHAR_MAX
CHAR_MAX
break;
while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
break;
-----joern-----
(24,3,0)
(26,4,0)
(26,8,0)
(1,16,0)
(22,19,0)
(21,22,0)
(14,26,0)
(10,5,0)
(20,26,0)
(25,17,0)
(5,4,0)
(6,19,0)
(26,22,0)
(7,4,0)
(12,4,0)
(17,26,0)
(11,8,0)
(5,8,0)
(0,3,0)
(17,8,0)
(4,3,0)
(2,3,0)
(8,16,0)
(5,22,0)
(18,22,0)
(17,26,1)
(21,13,1)
(23,9,1)
(5,10,1)
(26,20,1)
(13,4,1)
(4,12,1)
(25,26,1)
(12,7,1)
(9,13,1)
(17,25,1)
(5,22,1)
(14,5,1)
(23,1,1)
(26,4,1)
(1,17,1)
(9,6,1)
(20,14,1)
(18,21,1)
(10,9,1)
(5,4,1)
(6,22,1)
(26,22,1)
(22,18,1)
(21,13,2)
(26,4,2)
(26,9,2)
(22,13,2)
(17,9,2)
(26,22,2)
(10,9,2)
(5,4,2)
(5,22,2)
(20,9,2)
(6,13,2)
(25,9,2)
(17,26,2)
(5,9,2)
(1,9,2)
(14,9,2)
(18,13,2)
-----------------------------------
(0,data)
(1,break;)
(2,while(1)
(3,)
(4,data = \' \')
(5,++data)
(6,break;)
(7,data)
(8,)
(9,1)
(10,data)
(11,result)
(12,' ')
(13,1)
(14,result)
(15,data = ' ')
(16,)
(17,printHexCharLine(result)
(18,CHAR_MAX)
(19,)
(20,data)
(21,data)
(22,data = CHAR_MAX)
(23,RET)
(24,while(1)
(25,result)
(26,result = data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^