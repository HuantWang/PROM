-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_square_02_bad()
{
    int64_t data;
    data = 0LL;
    if(1)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
            int64_t result = data * data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
26,27
29,30
30,31
32,33
32,34
34,35
35,36
35,37
36,37
37,38
37,39
38,39
40,41
40,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,9,11,15,16,18,23,27,28,31,33,39,41,45,47,51,53
-----computeFrom-----
13,14
13,15
21,22
21,23
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_square_02_bad(){    int64_t data;    data = 0LL;    if(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_square_02_bad()
CWE190_Integer_Overflow__int64_t_rand_square_02_bad
{    int64_t data;    data = 0LL;    if(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
1
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(12,15,0)
(16,15,0)
(17,0,0)
(11,16,0)
(15,5,0)
(4,15,0)
(1,18,0)
(2,10,0)
(3,10,0)
(17,7,0)
(5,9,0)
(4,1,0)
(0,17,0)
(15,4,0)
(17,1,0)
(6,10,0)
(16,5,0)
(1,17,0)
(13,4,0)
(20,5,0)
(8,1,0)
(7,17,0)
(14,10,0)
(21,4,0)
(16,11,1)
(19,22,1)
(15,4,1)
(0,8,1)
(21,12,1)
(13,21,1)
(11,15,1)
(12,22,1)
(19,16,1)
(1,17,1)
(4,1,1)
(17,7,1)
(8,23,1)
(23,14,1)
(22,23,1)
(4,13,1)
(16,15,1)
(17,0,1)
(22,1,1)
(15,22,2)
(21,22,2)
(4,22,2)
(17,7,2)
(15,4,2)
(17,0,2)
(11,22,2)
(0,23,2)
(12,22,2)
(17,23,2)
(8,23,2)
(1,17,2)
(13,22,2)
(16,15,2)
(1,23,2)
(16,22,2)
(4,1,2)
-----------------------------------
(0,RAND64()
(1,data = (int64_t)
(2,if(1)
(3,if(1)
(4,data * data)
(5,)
(6,data)
(7,int64_t)
(8,data)
(9,)
(10,)
(11,result)
(12,result)
(13,data)
(14,L)
(15,result = data * data)
(16,printLongLongLine(result)
(17,(int64_t)
(18,)
(19,RET)
(20,result)
(21,data)
(22,1)
(23,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^