-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_postinc_66b_badSink(char dataArray[])
{
    /* copy data out of dataArray */
    char data = dataArray[2];
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        char result = data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
22,23
23,24
24,25
26,27
27,28
27,29
29,30
29,31
31,32
32,33
34,35
35,36
35,37
36,37
38,39
-----nextToken-----
2,4,6,8,9,13,15,19,20,25,28,30,33,37,39
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_postinc_66b_badSink(char dataArray[]){    /* copy data out of dataArray */    char data = dataArray[2];    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_max_postinc_66b_badSink(char dataArray[])
CWE190_Integer_Overflow__char_max_postinc_66b_badSink
char dataArray[]
char
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    char data = dataArray[2];    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
char data = dataArray[2];
char data = dataArray[2];
char
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }
data++;
data++
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(15,14,0)
(0,4,0)
(7,1,0)
(14,2,0)
(8,17,0)
(6,8,0)
(4,8,0)
(7,8,0)
(8,14,0)
(9,1,0)
(12,1,0)
(14,8,0)
(13,4,0)
(3,7,0)
(4,1,0)
(10,17,0)
(16,14,0)
(12,4,0)
(1,17,0)
(11,12,0)
(4,13,1)
(3,8,1)
(14,15,1)
(12,4,1)
(15,16,1)
(12,11,1)
(8,14,1)
(14,2,1)
(13,0,1)
(0,7,1)
(7,8,1)
(7,3,1)
(5,12,1)
(16,6,1)
(4,8,1)
(11,4,1)
(14,2,2)
(8,14,2)
(4,8,2)
(12,4,2)
(7,8,2)
-----------------------------------
(0,result)
(1,)
(2,char dataArray[])
(3,data)
(4,result = data)
(5,RET)
(6,data)
(7,data++)
(8,data = dataArray[2])
(9,result)
(10,data)
(11,result)
(12,printHexCharLine(result)
(13,data)
(14,dataArray[2])
(15,2)
(16,dataArray)
(17,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^