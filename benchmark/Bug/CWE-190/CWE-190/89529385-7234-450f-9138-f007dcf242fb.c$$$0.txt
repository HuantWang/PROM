-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_add_34_bad()
{
    int64_t data;
    CWE190_Integer_Overflow__int64_t_max_add_34_unionType myUnion;
    data = 0LL;
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = LLONG_MAX;
    myUnion.unionFirst = data;
    {
        int64_t data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int64_t result = data + 1;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
31,32
31,33
32,33
35,36
37,38
37,39
38,39
39,40
39,41
40,41
42,43
42,44
44,45
45,46
45,47
46,47
49,50
49,51
50,51
51,52
51,53
52,53
54,55
54,56
56,57
57,58
57,59
58,59
61,62
62,63
62,64
63,64
65,66
-----nextToken-----
2,4,9,11,15,17,21,22,26,28,33,34,36,41,43,47,48,53,55,59,60,64,66
-----computeFrom-----
19,20
19,21
24,25
24,26
30,31
30,32
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_add_34_bad(){    int64_t data;    CWE190_Integer_Overflow__int64_t_max_add_34_unionType myUnion;    data = 0LL;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = LLONG_MAX;    myUnion.unionFirst = data;    {        int64_t data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_max_add_34_bad()
CWE190_Integer_Overflow__int64_t_max_add_34_bad
{    int64_t data;    CWE190_Integer_Overflow__int64_t_max_add_34_unionType myUnion;    data = 0LL;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = LLONG_MAX;    myUnion.unionFirst = data;    {        int64_t data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
CWE190_Integer_Overflow__int64_t_max_add_34_unionType myUnion;
CWE190_Integer_Overflow__int64_t_max_add_34_unionType myUnion;
CWE190_Integer_Overflow__int64_t_max_add_34_unionType
CWE190_Integer_Overflow__int64_t_max_add_34_unionType
myUnion
myUnion
data = 0LL;
data = 0LL
data
data
0LL
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int64_t data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
int64_t data = myUnion.unionSecond;
int64_t data = myUnion.unionSecond;
int64_t
int64_t
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(14,16,0)
(13,14,0)
(26,11,0)
(12,14,0)
(25,21,0)
(21,25,0)
(20,16,0)
(17,16,0)
(9,16,0)
(25,15,0)
(4,25,0)
(21,11,0)
(2,24,0)
(0,24,0)
(8,16,0)
(5,20,0)
(11,24,0)
(27,9,0)
(15,20,0)
(1,21,0)
(22,16,0)
(11,20,0)
(28,7,0)
(7,15,0)
(10,15,0)
(19,3,0)
(6,21,0)
(7,25,0)
(3,9,0)
(24,11,0)
(9,14,0)
(18,3,0)
(26,9,1)
(24,2,1)
(14,12,1)
(27,3,1)
(9,27,1)
(3,18,1)
(4,11,1)
(21,11,1)
(25,21,1)
(21,6,1)
(1,4,1)
(7,25,1)
(2,0,1)
(12,13,1)
(7,28,1)
(28,25,1)
(13,22,1)
(11,24,1)
(23,7,1)
(18,19,1)
(19,14,1)
(0,26,1)
(6,1,1)
(9,14,1)
(25,21,2)
(9,14,2)
(7,25,2)
(21,11,2)
(11,24,2)
-----------------------------------
(0,myUnion)
(1,data)
(2,unionSecond)
(3,myUnion.unionFirst)
(4,result)
(5,data)
(6,1)
(7,printLongLongLine(result)
(8,myUnion)
(9,myUnion.unionFirst = data)
(10,result)
(11,data = myUnion.unionSecond)
(12,LLONG_MAX)
(13,data)
(14,data = LLONG_MAX)
(15,)
(16,)
(17,data)
(18,unionFirst)
(19,myUnion)
(20,)
(21,data + 1)
(22,L)
(23,RET)
(24,myUnion.unionSecond)
(25,result = data + 1)
(26,data)
(27,data)
(28,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^