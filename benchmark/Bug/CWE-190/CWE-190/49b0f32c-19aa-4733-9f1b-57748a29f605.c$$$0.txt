-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_add_14_bad()
{
    unsigned int data;
    data = 0;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(globalFive==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,37,39,43,44,48,50
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_add_14_bad(){    unsigned int data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_add_14_bad()
CWE190_Integer_Overflow__unsigned_int_max_add_14_bad
{    unsigned int data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(10,5,0)
(22,17,0)
(11,17,0)
(26,8,0)
(8,3,0)
(20,8,0)
(23,12,0)
(23,15,0)
(21,17,0)
(5,15,0)
(18,5,0)
(27,22,0)
(6,15,0)
(5,8,0)
(15,12,0)
(15,5,0)
(0,25,0)
(24,12,0)
(1,7,0)
(14,22,0)
(9,25,0)
(5,22,0)
(2,7,0)
(12,16,0)
(19,17,0)
(4,23,0)
(9,22,1)
(10,6,1)
(5,22,1)
(18,10,1)
(23,15,1)
(27,14,1)
(2,1,1)
(23,4,1)
(1,8,1)
(8,26,1)
(0,9,1)
(13,7,1)
(1,25,1)
(4,15,1)
(6,7,1)
(25,0,1)
(7,2,1)
(13,23,1)
(5,18,1)
(20,25,1)
(5,8,1)
(22,27,1)
(26,20,1)
(15,5,1)
(15,7,2)
(6,7,2)
(5,7,2)
(5,22,2)
(15,5,2)
(18,7,2)
(4,7,2)
(23,15,2)
(10,7,2)
(26,25,2)
(20,25,2)
(8,25,2)
(23,7,2)
(5,8,2)
-----------------------------------
(0,5)
(1,globalFive)
(2,5)
(3,)
(4,result)
(5,data + 1)
(6,result)
(7,globalFive==5)
(8,data = UINT_MAX)
(9,globalFive)
(10,data)
(11,if(globalFive==5)
(12,)
(13,RET)
(14,data)
(15,result = data + 1)
(16,)
(17,)
(18,1)
(19,data)
(20,data)
(21,if(globalFive==5)
(22,data = 0)
(23,printUnsignedLine(result)
(24,result)
(25,globalFive==5)
(26,UINT_MAX)
(27,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^