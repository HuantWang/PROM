-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_postinc_32_bad()
{
    int64_t data;
    int64_t *dataPtr1 = &data;
    int64_t *dataPtr2 = &data;
    data = 0LL;
    {
        int64_t data = *dataPtr1;
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
        *dataPtr1 = data;
    }
    {
        int64_t data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
32,33
34,35
35,36
35,37
36,37
39,40
39,41
39,42
40,41
41,42
41,43
42,43
44,45
44,46
46,47
47,48
48,49
50,51
51,52
51,53
52,53
54,55
54,56
55,56
55,57
56,57
59,60
60,61
62,63
63,64
63,65
64,65
65,66
67,68
69,70
69,71
70,71
71,72
71,73
72,73
74,75
74,76
76,77
77,78
78,79
80,81
80,82
80,83
81,82
82,83
83,84
85,86
86,87
86,88
87,88
89,90
89,91
91,92
92,93
94,95
95,96
95,97
96,97
98,99
-----nextToken-----
2,4,9,11,15,17,18,22,26,28,29,33,37,38,43,45,49,53,57,58,61,66,68,73,75,79,84,88,90,93,97,99
-----computeFrom-----
35,36
35,37
51,52
51,53
63,64
63,65
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_postinc_32_bad(){    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_postinc_32_bad()
CWE190_Integer_Overflow__int64_t_rand_postinc_32_bad
{    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
int64_t *dataPtr1 = &data;
int64_t *dataPtr1 = &data;
int64_t
int64_t
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int64_t *dataPtr2 = &data;
int64_t *dataPtr2 = &data;
int64_t
int64_t
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0LL;
data = 0LL
data
data
0LL
{        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();        *dataPtr1 = data;    }
int64_t data = *dataPtr1;
int64_t data = *dataPtr1;
int64_t
int64_t
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
int64_t data = *dataPtr2;
int64_t data = *dataPtr2;
int64_t
int64_t
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(29,17,0)
(22,41,0)
(40,34,0)
(41,31,0)
(9,3,0)
(41,34,0)
(39,17,0)
(30,9,0)
(36,3,0)
(21,17,0)
(23,9,0)
(34,41,0)
(6,21,0)
(26,41,0)
(31,3,0)
(39,21,0)
(24,27,0)
(28,30,0)
(13,38,0)
(14,9,0)
(25,3,0)
(2,30,0)
(16,3,0)
(10,8,0)
(30,28,0)
(1,16,0)
(38,14,0)
(38,15,0)
(4,33,0)
(26,17,0)
(37,14,0)
(20,31,0)
(17,31,0)
(8,16,0)
(37,9,0)
(0,24,0)
(27,3,0)
(18,28,0)
(27,33,0)
(34,16,0)
(33,27,0)
(14,38,0)
(35,26,0)
(42,27,0)
(43,14,0)
(15,38,0)
(38,13,0)
(16,8,0)
(32,39,0)
(11,3,0)
(5,21,0)
(19,3,0)
(21,41,0)
(24,37,0)
(12,37,0)
(28,27,0)
(2,36,1)
(34,40,1)
(7,39,1)
(13,43,1)
(28,18,1)
(0,14,1)
(26,41,1)
(24,27,1)
(26,35,1)
(36,16,1)
(37,12,1)
(43,30,1)
(21,5,1)
(24,0,1)
(14,38,1)
(38,13,1)
(40,22,1)
(41,34,1)
(21,41,1)
(8,10,1)
(38,15,1)
(4,42,1)
(28,27,1)
(5,6,1)
(34,16,1)
(27,33,1)
(16,8,1)
(10,1,1)
(39,21,1)
(37,14,1)
(33,4,1)
(1,27,1)
(39,32,1)
(30,28,1)
(18,2,1)
(12,24,1)
(35,41,1)
(22,37,1)
(32,21,1)
(6,26,1)
(24,27,2)
(37,14,2)
(28,27,2)
(38,13,2)
(41,34,2)
(14,38,2)
(34,16,2)
(39,21,2)
(30,28,2)
(38,15,2)
(26,41,2)
(16,8,2)
(21,41,2)
(27,33,2)
-----------------------------------
(0,dataPtr1)
(1,dataPtr2)
(2,data)
(3,)
(4,data)
(5,data)
(6,result)
(7,RET)
(8,&data)
(9,)
(10,data)
(11,data)
(12,data)
(13,RAND64()
(14,data = (int64_t)
(15,int64_t)
(16,*dataPtr2 = &data)
(17,)
(18,dataPtr1)
(19,dataPtr1)
(20,data)
(21,result = data)
(22,data)
(23,data)
(24,*dataPtr1)
(25,dataPtr2)
(26,data++)
(27,*dataPtr1 = &data)
(28,*dataPtr1)
(29,result)
(30,data = *dataPtr1)
(31,)
(32,result)
(33,&data)
(34,*dataPtr2)
(35,data)
(36,L)
(37,*dataPtr1 = data)
(38,(int64_t)
(39,printLongLongLine(result)
(40,dataPtr2)
(41,data = *dataPtr2)
(42,dataPtr1)
(43,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^