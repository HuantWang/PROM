-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_square_02_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(1)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
            int result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
29,30
29,31
31,32
32,33
32,34
33,34
34,35
34,36
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,30,35,37,41,43,47,49
-----computeFrom-----
12,13
12,14
39,40
39,41
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_square_02_bad(){    int data;    /* Initialize data */    data = 0;    if(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_square_02_bad()
CWE190_Integer_Overflow__int_fscanf_square_02_bad
{    int data;    /* Initialize data */    data = 0;    if(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
1
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(20,10,0)
(15,10,0)
(18,22,0)
(8,15,0)
(13,8,0)
(12,25,0)
(9,6,0)
(15,8,0)
(5,9,0)
(1,15,0)
(2,22,0)
(8,9,0)
(25,10,0)
(19,21,0)
(21,9,0)
(11,22,0)
(3,10,0)
(0,25,0)
(4,15,0)
(21,8,0)
(25,0,0)
(23,0,0)
(7,0,0)
(0,24,0)
(10,22,0)
(23,7,1)
(15,1,1)
(13,14,1)
(14,0,1)
(10,20,1)
(21,8,1)
(17,14,1)
(25,10,1)
(12,23,1)
(1,4,1)
(21,19,1)
(17,21,1)
(25,12,1)
(14,16,1)
(8,15,1)
(15,10,1)
(0,25,1)
(7,16,1)
(16,10,1)
(20,3,1)
(4,13,1)
(19,8,1)
(13,14,2)
(8,15,2)
(1,14,2)
(12,16,2)
(21,14,2)
(23,16,2)
(25,16,2)
(25,10,2)
(0,25,2)
(8,14,2)
(15,14,2)
(7,16,2)
(15,10,2)
(4,14,2)
(21,8,2)
(19,14,2)
(0,16,2)
-----------------------------------
(0,fscanf(stdin, "%d", &data)
(1,data)
(2,if(1)
(3,data)
(4,data)
(5,result)
(6,)
(7,stdin)
(8,result = data * data)
(9,)
(10,data = 0)
(11,if(1)
(12,data)
(13,result)
(14,1)
(15,data * data)
(16,1)
(17,RET)
(18,data)
(19,result)
(20,0)
(21,printIntLine(result)
(22,)
(23,"%d")
(24,)
(25,&data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^