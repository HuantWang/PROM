-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66b_badSink(unsigned int dataArray[])
{
    /* copy data out of dataArray */
    unsigned int data = dataArray[2];
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
        unsigned int result = data * 2;
        printUnsignedLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
22,23
22,24
23,24
26,27
26,28
27,28
28,29
28,30
30,31
30,32
32,33
33,34
33,35
34,35
37,38
38,39
38,40
39,40
41,42
-----nextToken-----
2,4,6,8,9,13,15,19,20,24,25,29,31,35,36,40,42
-----computeFrom-----
22,23
22,24
33,34
33,35
-----guardedBy-----
24,35
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66b_badSink(unsigned int dataArray[]){    /* copy data out of dataArray */    unsigned int data = dataArray[2];    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66b_badSink(unsigned int dataArray[])
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_66b_badSink
unsigned int dataArray[]
unsigned int
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    unsigned int data = dataArray[2];    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }}
unsigned int data = dataArray[2];
unsigned int data = dataArray[2];
unsigned int
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(1,11,0)
(14,10,0)
(3,11,0)
(21,2,0)
(5,11,0)
(12,8,0)
(19,13,0)
(4,5,0)
(8,15,0)
(0,10,0)
(3,5,0)
(17,15,0)
(16,13,0)
(2,15,0)
(18,8,0)
(15,13,0)
(20,3,0)
(10,15,0)
(5,10,0)
(9,2,0)
(15,2,0)
(10,5,0)
(2,6,0)
(7,8,1)
(5,10,1)
(14,4,1)
(4,8,1)
(8,18,1)
(0,14,1)
(18,12,1)
(8,15,1)
(2,6,1)
(3,20,1)
(2,21,1)
(12,15,1)
(7,3,1)
(10,15,1)
(3,5,1)
(10,0,1)
(21,9,1)
(20,5,1)
(15,2,1)
(9,17,1)
(20,8,2)
(4,8,2)
(3,5,2)
(10,8,2)
(5,10,2)
(10,15,2)
(15,2,2)
(0,8,2)
(14,8,2)
(5,8,2)
(8,15,2)
(2,6,2)
(3,8,2)
-----------------------------------
(0,2)
(1,result)
(2,dataArray[2])
(3,printUnsignedLine(result)
(4,result)
(5,result = data * 2)
(6,unsigned int dataArray[])
(7,RET)
(8,data > 0)
(9,dataArray)
(10,data * 2)
(11,)
(12,data)
(13,)
(14,data)
(15,data = dataArray[2])
(16,if(data > 0)
(17,data)
(18,0)
(19,data)
(20,result)
(21,2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^