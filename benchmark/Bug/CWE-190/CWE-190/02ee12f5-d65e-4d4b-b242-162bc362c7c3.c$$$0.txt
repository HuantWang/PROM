-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_postinc_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = 0;
    {
        int data = *dataPtr1;
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
55,56
57,58
59,60
59,61
60,61
61,62
61,63
63,64
63,65
65,66
66,67
67,68
69,70
69,71
69,72
70,71
71,72
72,73
74,75
75,76
75,77
77,78
77,79
79,80
80,81
82,83
83,84
83,85
84,85
86,87
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,51,56,58,62,64,68,73,76,78,81,85,87
-----computeFrom-----
32,33
32,34
47,48
47,49
53,54
53,55
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_postinc_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_postinc_32_bad()
CWE190_Integer_Overflow__int_max_postinc_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        int data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(39,21,0)
(36,2,0)
(38,37,0)
(33,39,0)
(14,15,0)
(4,27,0)
(30,11,0)
(42,10,0)
(35,4,0)
(21,32,0)
(29,11,0)
(32,13,0)
(11,39,0)
(7,36,0)
(25,32,0)
(11,36,0)
(40,21,0)
(26,13,0)
(18,1,0)
(35,37,0)
(22,33,0)
(27,4,0)
(9,32,0)
(4,13,0)
(33,36,0)
(1,19,0)
(6,2,0)
(24,4,0)
(3,39,0)
(19,13,0)
(43,13,0)
(2,13,0)
(10,1,0)
(0,12,0)
(37,35,0)
(12,13,0)
(21,39,0)
(16,1,0)
(30,36,0)
(28,35,0)
(5,19,0)
(10,19,0)
(15,4,0)
(31,30,0)
(20,11,0)
(32,25,0)
(41,13,0)
(17,25,0)
(15,10,0)
(34,27,0)
(37,19,0)
(39,2,0)
(23,12,0)
(21,32,1)
(22,39,1)
(15,4,1)
(10,42,1)
(4,27,1)
(12,0,1)
(0,23,1)
(27,34,1)
(10,1,1)
(14,1,1)
(11,29,1)
(23,32,1)
(21,40,1)
(30,11,1)
(33,39,1)
(9,4,1)
(39,21,1)
(20,33,1)
(35,4,1)
(31,11,1)
(34,24,1)
(18,16,1)
(1,18,1)
(38,12,1)
(16,37,1)
(17,9,1)
(15,14,1)
(29,20,1)
(28,38,1)
(25,17,1)
(32,25,1)
(40,3,1)
(3,10,1)
(30,31,1)
(35,28,1)
(42,15,1)
(37,35,1)
(8,30,1)
(33,22,1)
(11,39,1)
(21,32,2)
(11,39,2)
(32,25,2)
(39,21,2)
(10,1,2)
(35,4,2)
(4,27,2)
(33,39,2)
(15,4,2)
(30,11,2)
(37,35,2)
-----------------------------------
(0,0)
(1,data = INT_MAX)
(2,)
(3,data)
(4,*dataPtr1 = &data)
(5,data)
(6,data)
(7,result)
(8,RET)
(9,dataPtr2)
(10,*dataPtr1 = data)
(11,result = data)
(12,data = 0)
(13,)
(14,dataPtr1)
(15,*dataPtr1)
(16,data)
(17,data)
(18,INT_MAX)
(19,)
(20,result)
(21,*dataPtr2)
(22,data)
(23,data)
(24,dataPtr1)
(25,&data)
(26,dataPtr2)
(27,&data)
(28,dataPtr1)
(29,data)
(30,printIntLine(result)
(31,result)
(32,*dataPtr2 = &data)
(33,data++)
(34,data)
(35,*dataPtr1)
(36,)
(37,data = *dataPtr1)
(38,data)
(39,data = *dataPtr2)
(40,dataPtr2)
(41,dataPtr1)
(42,data)
(43,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^