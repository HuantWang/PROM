-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_multiply_22_badSink(int data)
{
    if(CWE190_Integer_Overflow__int_max_multiply_22_badGlobal)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */
            int result = data * 2;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
13,14
14,15
14,16
15,16
15,17
16,17
19,20
19,21
20,21
21,22
21,23
23,24
23,25
25,26
26,27
26,28
27,28
30,31
31,32
31,33
32,33
34,35
-----nextToken-----
2,4,6,8,12,17,18,22,24,28,29,33,35
-----computeFrom-----
15,16
15,17
26,27
26,28
-----guardedBy-----
17,28
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_multiply_22_badSink(int data){    if(CWE190_Integer_Overflow__int_max_multiply_22_badGlobal)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_multiply_22_badSink(int data)
CWE190_Integer_Overflow__int_max_multiply_22_badSink
int data
int
data
data
{    if(CWE190_Integer_Overflow__int_max_multiply_22_badGlobal)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }    }}
if(CWE190_Integer_Overflow__int_max_multiply_22_badGlobal)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }    }
CWE190_Integer_Overflow__int_max_multiply_22_badGlobal
CWE190_Integer_Overflow__int_max_multiply_22_badGlobal
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }
int result = data * 2;
int result = data * 2;
int
result = data * 2
result
= data * 2
data * 2
data
data
2
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(3,16,0)
(12,6,0)
(11,16,0)
(1,9,0)
(18,13,0)
(5,13,0)
(14,2,0)
(7,14,0)
(10,14,0)
(3,0,0)
(16,13,0)
(8,3,0)
(4,0,0)
(16,0,0)
(13,2,0)
(13,16,0)
(7,15,1)
(17,14,1)
(3,8,1)
(5,11,1)
(14,10,1)
(18,5,1)
(3,16,1)
(8,16,1)
(13,2,1)
(11,14,1)
(13,18,1)
(14,2,1)
(16,13,1)
(17,3,1)
(10,7,1)
(17,15,1)
(14,2,2)
(10,15,2)
(14,15,2)
(16,13,2)
(8,14,2)
(18,14,2)
(5,14,2)
(13,14,2)
(13,2,2)
(3,16,2)
(3,14,2)
(16,14,2)
(11,14,2)
(7,15,2)
-----------------------------------
(0,)
(1,if(data > 0)
(2,int data)
(3,printIntLine(result)
(4,result)
(5,data)
(6,)
(7,data)
(8,result)
(9,)
(10,0)
(11,result)
(12,if(CWE190_Integer_Overflow__int_max_multiply_22_badGlobal)
(13,data * 2)
(14,data > 0)
(15,CWE190_Integer_Overflow__int_max_multiply_22_badGlobal)
(16,result = data * 2)
(17,RET)
(18,2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^