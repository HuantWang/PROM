-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_multiply_63b_badSink(unsigned int * dataPtr)
{
    unsigned int data = *dataPtr;
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
        unsigned int result = data * 2;
        printUnsignedLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
18,19
20,21
20,22
21,22
21,23
22,23
25,26
25,27
26,27
27,28
27,29
29,30
29,31
31,32
32,33
32,34
33,34
36,37
37,38
37,39
38,39
40,41
-----nextToken-----
2,4,6,8,9,13,15,19,23,24,28,30,34,35,39,41
-----computeFrom-----
21,22
21,23
32,33
32,34
-----guardedBy-----
23,34
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_multiply_63b_badSink(unsigned int * dataPtr){    unsigned int data = *dataPtr;    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }}
void
CWE190_Integer_Overflow__unsigned_int_max_multiply_63b_badSink(unsigned int * dataPtr)
CWE190_Integer_Overflow__unsigned_int_max_multiply_63b_badSink
unsigned int * dataPtr
unsigned int
* dataPtr
*
dataPtr
{    unsigned int data = *dataPtr;    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }}
unsigned int data = *dataPtr;
unsigned int data = *dataPtr;
unsigned int
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(11,20,0)
(9,5,0)
(13,9,0)
(6,4,0)
(19,7,0)
(4,9,0)
(3,5,0)
(7,9,0)
(4,18,0)
(12,18,0)
(16,20,0)
(10,0,0)
(15,5,0)
(14,12,0)
(18,0,0)
(9,7,0)
(1,4,0)
(18,4,0)
(12,0,0)
(20,9,0)
(8,18,0)
(7,17,0)
(12,14,1)
(4,6,1)
(12,18,1)
(2,12,1)
(7,17,1)
(9,7,1)
(4,9,1)
(7,19,1)
(19,13,1)
(2,20,1)
(20,9,1)
(1,8,1)
(6,1,1)
(11,16,1)
(18,4,1)
(20,11,1)
(16,9,1)
(14,18,1)
(8,20,1)
(18,4,2)
(12,20,2)
(20,9,2)
(4,20,2)
(9,7,2)
(6,20,2)
(8,20,2)
(12,18,2)
(14,20,2)
(4,9,2)
(18,20,2)
(7,17,2)
(1,20,2)
-----------------------------------
(0,)
(1,data)
(2,RET)
(3,data)
(4,data * 2)
(5,)
(6,2)
(7,*dataPtr)
(8,result)
(9,data = *dataPtr)
(10,result)
(11,0)
(12,printUnsignedLine(result)
(13,data)
(14,result)
(15,if(data > 0)
(16,data)
(17,unsigned int * dataPtr)
(18,result = data * 2)
(19,dataPtr)
(20,data > 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^