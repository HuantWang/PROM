-----label-----
1
-----code-----
static void badSink()
{
    int64_t data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_45_badData;
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */
        int64_t result = data * 2;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
8,9
10,11
10,12
12,13
13,14
15,16
15,17
16,17
16,18
17,18
20,21
20,22
21,22
22,23
22,24
23,24
25,26
25,27
27,28
28,29
28,30
29,30
32,33
33,34
33,35
34,35
36,37
-----nextToken-----
2,4,9,11,14,18,19,24,26,30,31,35,37
-----computeFrom-----
16,17
16,18
28,29
28,30
-----guardedBy-----
18,30
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    int64_t data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_45_badData;    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }}
static void
badSink()
badSink
{    int64_t data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_45_badData;    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }}
int64_t data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_45_badData;
int64_t data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_45_badData;
int64_t
int64_t
data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_45_badData
data
= CWE190_Integer_Overflow__int64_t_fscanf_multiply_45_badData
CWE190_Integer_Overflow__int64_t_fscanf_multiply_45_badData
CWE190_Integer_Overflow__int64_t_fscanf_multiply_45_badData
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }
int64_t result = data * 2;
int64_t result = data * 2;
int64_t
int64_t
result = data * 2
result
= data * 2
data * 2
data
data
2
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(7,16,0)
(5,9,0)
(8,10,0)
(12,7,0)
(2,8,0)
(3,4,0)
(0,4,0)
(17,9,0)
(9,16,0)
(13,5,0)
(8,5,0)
(18,10,0)
(5,10,0)
(14,7,0)
(6,9,0)
(9,5,0)
(11,16,0)
(15,16,0)
(16,4,0)
(14,16,1)
(12,14,1)
(7,12,1)
(7,16,1)
(9,16,1)
(8,5,1)
(16,11,1)
(1,7,1)
(6,13,1)
(9,17,1)
(11,15,1)
(1,8,1)
(2,5,1)
(17,6,1)
(13,7,1)
(5,9,1)
(8,2,1)
(17,7,2)
(13,7,2)
(8,7,2)
(5,7,2)
(9,7,2)
(7,16,2)
(2,7,2)
(6,7,2)
(8,5,2)
(9,16,2)
(5,9,2)
-----------------------------------
(0,if(data > 0)
(1,RET)
(2,result)
(3,data)
(4,)
(5,result = data * 2)
(6,data)
(7,data > 0)
(8,printLongLongLine(result)
(9,data * 2)
(10,)
(11,CWE190_Integer_Overflow__int64_t_fscanf_multiply_45_badData)
(12,0)
(13,result)
(14,data)
(15,data)
(16,data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_45_badData)
(17,2)
(18,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^