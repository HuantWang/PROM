-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_add_65_bad()
{
    int64_t data;
    /* define a function pointer */
    void (*funcPtr) (int64_t) = CWE190_Integer_Overflow__int64_t_fscanf_add_65b_badSink;
    data = 0LL;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%lld", &data);
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
20,21
22,23
24,25
25,26
27,28
28,29
28,30
29,30
32,33
33,34
33,35
33,36
33,37
34,35
36,37
39,40
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,9,11,14,17,18,21,23,26,30,31,35,37,38,41,45,47
-----computeFrom-----
28,29
28,30
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_add_65_bad(){    int64_t data;    /* define a function pointer */    void (*funcPtr) (int64_t) = CWE190_Integer_Overflow__int64_t_fscanf_add_65b_badSink;    data = 0LL;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%lld", &data);    /* use the function pointer */    funcPtr(data);}
void
CWE190_Integer_Overflow__int64_t_fscanf_add_65_bad()
CWE190_Integer_Overflow__int64_t_fscanf_add_65_bad
{    int64_t data;    /* define a function pointer */    void (*funcPtr) (int64_t) = CWE190_Integer_Overflow__int64_t_fscanf_add_65b_badSink;    data = 0LL;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%lld", &data);    /* use the function pointer */    funcPtr(data);}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
void (*funcPtr) (int64_t) = CWE190_Integer_Overflow__int64_t_fscanf_add_65b_badSink;
void (*funcPtr) (int64_t) = CWE190_Integer_Overflow__int64_t_fscanf_add_65b_badSink;
void
(*funcPtr) (int64_t) = CWE190_Integer_Overflow__int64_t_fscanf_add_65b_badSink
*funcPtr
*
funcPtr
int64_t
int64_t
int64_t


= CWE190_Integer_Overflow__int64_t_fscanf_add_65b_badSink
CWE190_Integer_Overflow__int64_t_fscanf_add_65b_badSink
CWE190_Integer_Overflow__int64_t_fscanf_add_65b_badSink
data = 0LL;
data = 0LL
data
data
0LL
fscanf (stdin, "%lld", &data);
fscanf (stdin, "%lld", &data)
fscanf
fscanf
stdin
stdin
"%lld"
&data
data
data
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(3,1,0)
(11,6,0)
(9,2,0)
(8,2,0)
(13,1,0)
(0,14,0)
(5,2,0)
(6,2,0)
(7,6,0)
(12,6,0)
(14,2,0)
(1,2,0)
(10,11,0)
(6,11,0)
(9,1,1)
(10,12,1)
(12,7,1)
(14,0,1)
(6,11,1)
(3,13,1)
(7,9,1)
(4,14,1)
(0,6,1)
(11,10,1)
(1,3,1)
(6,11,2)
-----------------------------------
(0,data)
(1,(*funcPtr)
(2,)
(3,CWE190_Integer_Overflow__int64_t_fscanf_add_65b_badSink)
(4,RET)
(5,data)
(6,fscanf (stdin, "%lld", &data)
(7,stdin)
(8,funcPtr)
(9,L)
(10,data)
(11,&data)
(12,"%lld")
(13,funcPtr)
(14,funcPtr(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^