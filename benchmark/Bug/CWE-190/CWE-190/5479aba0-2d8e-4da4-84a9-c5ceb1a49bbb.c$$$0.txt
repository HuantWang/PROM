-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_square_05_bad()
{
    short data;
    data = 0;
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */
            short result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,33,35,39,41,45,47
-----computeFrom-----
12,13
12,14
21,22
21,23
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_square_05_bad(){    short data;    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_square_05_bad()
CWE190_Integer_Overflow__short_max_square_05_bad
{    short data;    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticTrue)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(staticTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }
short result = data * data;
short result = data * data;
short
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(22,8,0)
(9,10,0)
(22,5,0)
(8,22,0)
(6,7,0)
(17,8,0)
(5,20,0)
(14,5,0)
(18,15,0)
(8,10,0)
(0,15,0)
(10,3,0)
(13,22,0)
(19,10,0)
(4,15,0)
(8,0,0)
(2,8,0)
(21,0,0)
(16,0,0)
(7,5,0)
(23,15,0)
(7,22,0)
(7,6,1)
(1,11,1)
(9,19,1)
(6,22,1)
(8,10,1)
(10,9,1)
(8,0,1)
(13,11,1)
(22,8,1)
(7,22,1)
(17,13,1)
(11,12,1)
(8,2,1)
(2,17,1)
(0,21,1)
(1,7,1)
(21,16,1)
(12,0,1)
(19,12,1)
(11,10,1)
(8,10,2)
(19,12,2)
(13,11,2)
(17,11,2)
(22,8,2)
(2,11,2)
(8,0,2)
(9,12,2)
(8,11,2)
(6,11,2)
(7,11,2)
(10,12,2)
(7,22,2)
(22,11,2)
-----------------------------------
(0,data = 0)
(1,RET)
(2,data)
(3,)
(4,data)
(5,)
(6,result)
(7,printIntLine(result)
(8,data * data)
(9,SHRT_MAX)
(10,data = SHRT_MAX)
(11,staticTrue)
(12,staticTrue)
(13,result)
(14,result)
(15,)
(16,data)
(17,data)
(18,if(staticTrue)
(19,data)
(20,)
(21,0)
(22,result = data * data)
(23,if(staticTrue)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^