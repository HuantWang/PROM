-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_postinc_53d_badSink(short data)
{
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        short result = data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
10,13
11,12
12,13
13,14
15,16
16,17
16,18
18,19
18,20
20,21
21,22
23,24
24,25
24,26
25,26
27,28
-----nextToken-----
2,4,6,8,14,17,19,22,26,28
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_postinc_53d_badSink(short data){    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        short result = data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__short_fscanf_postinc_53d_badSink(short data)
CWE190_Integer_Overflow__short_fscanf_postinc_53d_badSink
short data
short
data
data
{    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        short result = data;        printIntLine(result);    }}
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        short result = data;        printIntLine(result);    }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(4,6,0)
(2,6,0)
(8,7,0)
(0,8,0)
(10,2,0)
(9,2,0)
(3,2,0)
(1,10,0)
(8,6,0)
(10,6,0)
(6,11,0)
(2,7,0)
(8,0,1)
(9,8,1)
(10,2,1)
(5,10,1)
(10,1,1)
(1,2,1)
(3,9,1)
(2,7,1)
(8,7,1)
(2,3,1)
(10,2,2)
(8,7,2)
(2,7,2)
-----------------------------------
(0,data)
(1,result)
(2,result = data)
(3,data)
(4,result)
(5,RET)
(6,)
(7,short data)
(8,data++)
(9,result)
(10,printIntLine(result)
(11,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^