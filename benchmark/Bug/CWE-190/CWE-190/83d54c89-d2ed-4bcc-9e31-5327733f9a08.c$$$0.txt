-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_multiply_68b_badSink()
{
    int64_t data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData;
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */
        int64_t result = data * 2;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
8,9
10,11
10,12
12,13
13,14
15,16
15,17
16,17
16,18
17,18
20,21
20,22
21,22
22,23
22,24
23,24
25,26
25,27
27,28
28,29
28,30
29,30
32,33
33,34
33,35
34,35
36,37
-----nextToken-----
2,4,9,11,14,18,19,24,26,30,31,35,37
-----computeFrom-----
16,17
16,18
28,29
28,30
-----guardedBy-----
18,30
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_multiply_68b_badSink(){    int64_t data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData;    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68b_badSink()
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68b_badSink
{    int64_t data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData;    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }}
int64_t data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData;
int64_t data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData;
int64_t
int64_t
data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData
data
= CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }
int64_t result = data * 2;
int64_t result = data * 2;
int64_t
int64_t
result = data * 2
result
= data * 2
data * 2
data
data
2
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(2,18,0)
(13,11,0)
(16,9,0)
(3,14,0)
(7,18,0)
(0,4,0)
(4,14,0)
(4,15,0)
(9,10,0)
(8,10,0)
(15,14,0)
(18,9,0)
(17,15,0)
(15,11,0)
(5,11,0)
(12,10,0)
(11,15,0)
(11,9,0)
(6,9,0)
(4,0,1)
(2,9,1)
(1,4,1)
(7,2,1)
(11,5,1)
(5,13,1)
(15,11,1)
(13,17,1)
(1,18,1)
(11,9,1)
(18,7,1)
(18,9,1)
(4,15,1)
(17,18,1)
(9,6,1)
(6,16,1)
(0,15,1)
(4,18,2)
(17,18,2)
(11,9,2)
(11,18,2)
(13,18,2)
(4,15,2)
(15,11,2)
(5,18,2)
(18,9,2)
(0,18,2)
(15,18,2)
-----------------------------------
(0,result)
(1,RET)
(2,data)
(3,result)
(4,printLongLongLine(result)
(5,2)
(6,CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData)
(7,0)
(8,data)
(9,data = CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData)
(10,)
(11,data * 2)
(12,if(data > 0)
(13,data)
(14,)
(15,result = data * 2)
(16,data)
(17,result)
(18,data > 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^