-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_multiply_67b_badSink(CWE190_Integer_Overflow__char_fscanf_multiply_67_structType myStruct)
{
    char data = myStruct.structFirst;
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */
        char result = data * 2;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
22,23
22,24
23,24
26,27
26,28
27,28
28,29
28,30
30,31
30,32
32,33
33,34
33,35
34,35
37,38
38,39
38,40
39,40
41,42
-----nextToken-----
2,4,7,9,13,15,19,20,24,25,29,31,35,36,40,42
-----computeFrom-----
22,23
22,24
33,34
33,35
-----guardedBy-----
24,35
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_multiply_67b_badSink(CWE190_Integer_Overflow__char_fscanf_multiply_67_structType myStruct){    char data = myStruct.structFirst;    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */        char result = data * 2;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_fscanf_multiply_67b_badSink(CWE190_Integer_Overflow__char_fscanf_multiply_67_structType myStruct)
CWE190_Integer_Overflow__char_fscanf_multiply_67b_badSink
CWE190_Integer_Overflow__char_fscanf_multiply_67_structType myStruct
CWE190_Integer_Overflow__char_fscanf_multiply_67_structType
CWE190_Integer_Overflow__char_fscanf_multiply_67_structType
myStruct
myStruct
{    char data = myStruct.structFirst;    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */        char result = data * 2;        printHexCharLine(result);    }}
char data = myStruct.structFirst;
char data = myStruct.structFirst;
char
data = myStruct.structFirst
data
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */        char result = data * 2;        printHexCharLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */        char result = data * 2;        printHexCharLine(result);    }
char result = data * 2;
char result = data * 2;
char
result = data * 2
result
= data * 2
data * 2
data
data
2
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(21,20,0)
(17,11,0)
(10,20,0)
(3,11,0)
(15,12,0)
(8,9,0)
(14,15,0)
(8,10,0)
(4,12,0)
(5,19,0)
(6,20,0)
(15,19,0)
(1,7,0)
(10,8,0)
(16,8,0)
(13,7,0)
(11,10,0)
(2,8,0)
(11,12,0)
(18,10,0)
(12,11,0)
(7,10,0)
(12,19,0)
(4,7,1)
(13,10,1)
(12,11,1)
(1,13,1)
(17,3,1)
(15,14,1)
(16,2,1)
(3,4,1)
(7,1,1)
(7,10,1)
(11,17,1)
(0,15,1)
(0,7,1)
(8,16,1)
(8,9,1)
(14,12,1)
(11,10,1)
(2,18,1)
(10,8,1)
(15,12,1)
(12,11,2)
(15,12,2)
(4,7,2)
(15,7,2)
(10,8,2)
(17,7,2)
(11,7,2)
(8,9,2)
(3,7,2)
(14,7,2)
(12,7,2)
(11,10,2)
(7,10,2)
-----------------------------------
(0,RET)
(1,0)
(2,myStruct)
(3,data)
(4,result)
(5,result)
(6,if(data > 0)
(7,data > 0)
(8,myStruct.structFirst)
(9,CWE190_Integer_Overflow__char_fscanf_multiply_67_structType myStruct)
(10,data = myStruct.structFirst)
(11,data * 2)
(12,result = data * 2)
(13,data)
(14,result)
(15,printHexCharLine(result)
(16,structFirst)
(17,2)
(18,data)
(19,)
(20,)
(21,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^