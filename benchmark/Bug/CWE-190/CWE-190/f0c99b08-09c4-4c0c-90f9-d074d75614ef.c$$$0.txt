-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_multiply_01_bad()
{
    short data;
    data = 0;
    /* POTENTIAL FLAW: Use a random value */
    data = (short)RAND32();
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */
        short result = data * 2;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
21,23
24,25
25,26
27,28
27,29
28,29
28,30
29,30
32,33
32,34
33,34
34,35
34,36
36,37
36,38
38,39
39,40
39,41
40,41
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,15,19,22,23,26,30,31,35,37,41,42,46,48
-----computeFrom-----
12,13
12,14
17,18
17,19
28,29
28,30
39,40
39,41
-----guardedBy-----
30,41
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_multiply_01_bad(){    short data;    data = 0;    /* POTENTIAL FLAW: Use a random value */    data = (short)RAND32();    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */        short result = data * 2;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__short_rand_multiply_01_bad()
CWE190_Integer_Overflow__short_rand_multiply_01_bad
{    short data;    data = 0;    /* POTENTIAL FLAW: Use a random value */    data = (short)RAND32();    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */        short result = data * 2;        printIntLine(result);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */        short result = data * 2;        printIntLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */        short result = data * 2;        printIntLine(result);    }
short result = data * 2;
short result = data * 2;
short
result = data * 2
result
= data * 2
data * 2
data
data
2
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(5,12,0)
(16,22,0)
(11,21,0)
(15,2,0)
(18,0,0)
(12,5,0)
(17,15,0)
(14,9,0)
(10,9,0)
(0,15,0)
(22,21,0)
(4,17,0)
(22,19,0)
(9,2,0)
(3,2,0)
(0,19,0)
(8,0,0)
(19,21,0)
(7,17,0)
(23,2,0)
(13,19,0)
(12,15,0)
(15,12,0)
(6,15,0)
(20,12,0)
(19,0,0)
(12,20,0)
(12,5,1)
(12,20,1)
(22,19,1)
(15,12,1)
(1,17,1)
(5,6,1)
(13,17,1)
(19,0,1)
(22,16,1)
(14,10,1)
(18,8,1)
(17,4,1)
(0,15,1)
(9,14,1)
(7,15,1)
(1,22,1)
(0,18,1)
(17,15,1)
(4,7,1)
(6,9,1)
(16,19,1)
(8,13,1)
(12,20,2)
(17,15,2)
(19,17,2)
(16,17,2)
(22,19,2)
(19,0,2)
(22,17,2)
(12,5,2)
(13,17,2)
(8,17,2)
(15,12,2)
(18,17,2)
(0,15,2)
(0,17,2)
-----------------------------------
(0,data * 2)
(1,RET)
(2,)
(3,data)
(4,0)
(5,RAND32()
(6,data)
(7,data)
(8,data)
(9,data = 0)
(10,data)
(11,result)
(12,(short)
(13,result)
(14,0)
(15,data = (short)
(16,result)
(17,data > 0)
(18,2)
(19,result = data * 2)
(20,short)
(21,)
(22,printIntLine(result)
(23,if(data > 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^