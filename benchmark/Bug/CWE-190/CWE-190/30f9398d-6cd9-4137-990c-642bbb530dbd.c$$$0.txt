-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_add_17_bad()
{
    int i,j;
    unsigned int data;
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
43,46
43,47
44,45
45,46
45,47
46,47
49,50
49,51
50,51
53,54
54,55
56,57
57,58
57,59
58,59
59,60
59,61
61,62
61,63
63,64
64,65
64,66
65,66
68,69
69,70
69,71
70,71
72,73
-----nextToken-----
2,4,8,10,12,15,17,21,22,27,28,31,32,35,40,42,47,48,51,52,55,60,62,66,67,71,73
-----computeFrom-----
19,20
19,21
25,26
25,27
29,30
29,31
38,39
38,40
45,46
45,47
49,50
49,51
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_add_17_bad(){    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_add_17_bad()
CWE190_Integer_Overflow__unsigned_int_max_add_17_bad
{    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(33,12,0)
(9,12,0)
(15,35,0)
(17,24,0)
(2,16,0)
(31,32,0)
(24,8,0)
(39,16,0)
(1,3,0)
(16,8,0)
(3,37,0)
(6,33,0)
(28,6,0)
(25,30,0)
(23,33,0)
(36,8,0)
(7,31,0)
(0,12,0)
(14,12,0)
(26,6,0)
(38,20,0)
(21,12,0)
(6,26,0)
(19,6,0)
(18,12,0)
(30,26,0)
(6,3,0)
(26,15,0)
(34,32,0)
(5,3,0)
(22,33,0)
(29,20,0)
(4,26,0)
(20,32,0)
(13,15,0)
(10,8,0)
(30,15,0)
(11,32,0)
(29,31,1)
(6,19,1)
(39,2,1)
(28,4,1)
(1,5,1)
(29,32,1)
(8,10,1)
(30,25,1)
(7,3,1)
(19,28,1)
(31,7,1)
(31,32,1)
(34,33,1)
(36,20,1)
(20,38,1)
(16,8,1)
(24,17,1)
(26,6,1)
(22,23,1)
(30,26,1)
(20,32,1)
(32,11,1)
(6,33,1)
(25,26,1)
(11,34,1)
(17,30,1)
(38,29,1)
(27,16,1)
(24,8,1)
(33,22,1)
(5,20,1)
(4,16,1)
(6,3,1)
(16,39,1)
(2,8,1)
(3,1,1)
(10,36,1)
(2,24,1)
(31,32,2)
(38,20,2)
(31,20,2)
(16,16,2)
(39,16,2)
(26,16,2)
(3,20,2)
(30,16,2)
(24,16,2)
(7,20,2)
(24,8,2)
(16,8,2)
(28,16,2)
(25,16,2)
(29,20,2)
(30,26,2)
(1,20,2)
(26,6,2)
(5,20,2)
(17,16,2)
(6,33,2)
(20,20,2)
(2,16,2)
(20,32,2)
(6,16,2)
(6,3,2)
(4,16,2)
(19,16,2)
-----------------------------------
(0,j)
(1,UINT_MAX)
(2,j)
(3,data = UINT_MAX)
(4,result)
(5,data)
(6,data + 1)
(7,i)
(8,j = 0)
(9,for(j = 0; j < 1; j++)
(10,0)
(11,0)
(12,)
(13,result)
(14,for(i = 0; i < 1; i++)
(15,)
(16,j < 1)
(17,j)
(18,i)
(19,1)
(20,i < 1)
(21,data)
(22,0)
(23,data)
(24,j++)
(25,result)
(26,result = data + 1)
(27,RET)
(28,data)
(29,i)
(30,printUnsignedLine(result)
(31,i++)
(32,i = 0)
(33,data = 0)
(34,i)
(35,)
(36,j)
(37,)
(38,1)
(39,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^