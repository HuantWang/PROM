-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_preinc_63b_badSink(int * dataPtr)
{
    int data = *dataPtr;
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        ++data;
        int result = data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
18,19
20,21
20,22
20,23
21,22
22,23
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
33,34
34,35
34,36
35,36
37,38
-----nextToken-----
2,4,6,8,9,13,15,19,24,27,29,32,36,38
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_preinc_63b_badSink(int * dataPtr){    int data = *dataPtr;    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        int result = data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_rand_preinc_63b_badSink(int * dataPtr)
CWE190_Integer_Overflow__int_rand_preinc_63b_badSink
int * dataPtr
int
* dataPtr
*
dataPtr
{    int data = *dataPtr;    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        int result = data;        printIntLine(result);    }}
int data = *dataPtr;
int data = *dataPtr;
int
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        int result = data;        printIntLine(result);    }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(12,6,0)
(11,6,0)
(16,9,0)
(4,7,0)
(5,12,0)
(13,12,0)
(9,6,0)
(1,12,0)
(3,13,0)
(15,16,0)
(0,9,0)
(7,9,0)
(7,12,0)
(10,13,0)
(16,13,0)
(12,1,0)
(13,9,0)
(1,2,0)
(14,1,0)
(1,2,1)
(7,4,1)
(4,12,1)
(1,14,1)
(16,13,1)
(16,15,1)
(13,10,1)
(12,1,1)
(10,3,1)
(7,12,1)
(8,16,1)
(13,12,1)
(14,5,1)
(15,13,1)
(3,7,1)
(13,12,2)
(1,2,2)
(16,13,2)
(7,12,2)
(12,1,2)
-----------------------------------
(0,result)
(1,*dataPtr)
(2,int * dataPtr)
(3,result)
(4,data)
(5,data)
(6,)
(7,++data)
(8,RET)
(9,)
(10,data)
(11,data)
(12,data = *dataPtr)
(13,result = data)
(14,dataPtr)
(15,result)
(16,printIntLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^