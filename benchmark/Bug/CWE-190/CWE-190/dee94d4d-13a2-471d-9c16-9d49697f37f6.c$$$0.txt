-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_postinc_10_bad()
{
    short data;
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,39,42,44,47,51,53
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_postinc_10_bad(){    short data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_postinc_10_bad()
CWE190_Integer_Overflow__short_rand_postinc_10_bad
{    short data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(10,1,0)
(17,7,0)
(7,3,0)
(12,25,0)
(0,23,0)
(15,9,0)
(7,8,0)
(23,8,0)
(3,16,0)
(20,3,0)
(22,1,0)
(6,8,0)
(6,19,0)
(5,1,0)
(8,6,0)
(6,14,0)
(18,8,0)
(7,9,0)
(25,7,0)
(25,3,0)
(8,13,0)
(23,9,0)
(14,6,0)
(19,6,0)
(9,1,0)
(11,7,0)
(24,9,0)
(23,3,0)
(21,9,1)
(17,11,1)
(7,9,1)
(4,25,1)
(6,14,1)
(25,12,1)
(9,24,1)
(12,7,1)
(25,7,1)
(19,18,1)
(8,6,1)
(4,2,1)
(23,0,1)
(2,21,1)
(11,23,1)
(7,17,1)
(0,2,1)
(6,19,1)
(18,21,1)
(2,8,1)
(7,8,1)
(23,9,1)
(23,8,1)
(24,15,1)
(18,21,2)
(8,6,2)
(25,7,2)
(7,2,2)
(23,8,2)
(6,19,2)
(7,9,2)
(7,8,2)
(17,2,2)
(12,2,2)
(19,21,2)
(25,2,2)
(23,2,2)
(0,2,2)
(6,14,2)
(8,21,2)
(11,2,2)
(6,21,2)
(23,9,2)
-----------------------------------
(0,data)
(1,)
(2,globalTrue)
(3,)
(4,RET)
(5,data)
(6,(short)
(7,result = data)
(8,data = (short)
(9,data = 0)
(10,if(globalTrue)
(11,result)
(12,result)
(13,)
(14,short)
(15,data)
(16,)
(17,data)
(18,data)
(19,RAND32()
(20,result)
(21,globalTrue)
(22,if(globalTrue)
(23,data++)
(24,0)
(25,printIntLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^