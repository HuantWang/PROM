-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_18_bad()
{
    unsigned int data;
    data = 0;
    goto source;
source:
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%u", &data);
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
        unsigned int result = data * data;
        printUnsignedLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
32,33
32,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,26,29,31,33,37,39,43,45,49,51
-----computeFrom-----
12,13
12,14
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_18_bad(){    unsigned int data;    data = 0;    goto source;source:    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_square_18_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_square_18_bad
{    unsigned int data;    data = 0;    goto source;source:    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);
source
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }
sink
{        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(18,9,0)
(13,17,0)
(14,9,0)
(0,3,0)
(17,4,0)
(12,3,0)
(22,1,0)
(14,15,0)
(5,4,0)
(6,3,0)
(7,11,0)
(16,15,0)
(1,15,0)
(10,1,0)
(11,17,0)
(19,11,0)
(20,3,0)
(15,9,0)
(17,11,0)
(11,3,0)
(15,1,0)
(2,3,0)
(21,14,0)
(1,4,0)
(23,4,0)
(9,3,0)
(4,3,0)
(22,10,1)
(7,19,1)
(1,22,1)
(20,11,1)
(19,12,1)
(16,20,1)
(21,15,1)
(12,4,1)
(4,23,1)
(13,7,1)
(17,13,1)
(17,4,1)
(15,1,1)
(10,16,1)
(1,4,1)
(11,17,1)
(14,21,1)
(14,15,1)
(8,14,1)
(23,5,1)
(17,4,2)
(1,4,2)
(15,1,2)
(11,17,2)
(14,15,2)
-----------------------------------
(0,sink:)
(1,data * data)
(2,source:)
(3,)
(4,data = 0)
(5,data)
(6,data)
(7,"%u")
(8,RET)
(9,)
(10,data)
(11,fscanf (stdin, "%u", &data)
(12,goto source;)
(13,data)
(14,printUnsignedLine(result)
(15,result = data * data)
(16,result)
(17,&data)
(18,result)
(19,stdin)
(20,goto sink;)
(21,result)
(22,data)
(23,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^