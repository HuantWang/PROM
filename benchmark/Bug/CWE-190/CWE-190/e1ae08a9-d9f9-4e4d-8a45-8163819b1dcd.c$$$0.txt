-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_bad()
{
    int i,j;
    unsigned int data;
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
38,39
38,40
39,40
41,42
41,43
42,43
42,44
45,46
46,47
48,49
48,50
48,51
48,52
49,50
50,51
50,52
51,52
54,55
54,56
55,56
58,59
59,60
61,62
62,63
62,64
62,65
63,64
64,65
65,66
67,68
68,69
68,70
70,71
70,72
72,73
73,74
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,8,10,12,15,17,21,22,27,28,31,32,35,40,43,44,47,52,53,56,57,60,66,69,71,74,78,80
-----computeFrom-----
19,20
19,21
25,26
25,27
29,30
29,31
38,39
38,40
50,51
50,52
54,55
54,56
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_bad(){    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_bad()
CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_bad
{    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(37,13,0)
(20,5,0)
(3,5,0)
(12,3,0)
(38,12,0)
(39,18,0)
(25,18,0)
(6,13,0)
(9,0,0)
(29,5,0)
(34,35,0)
(22,18,0)
(0,13,0)
(26,36,0)
(3,34,0)
(15,5,0)
(33,13,0)
(28,34,0)
(7,22,0)
(1,35,0)
(30,18,0)
(40,0,0)
(4,35,0)
(3,36,0)
(14,34,0)
(15,17,0)
(31,35,0)
(10,20,0)
(32,35,0)
(5,19,0)
(16,35,0)
(41,22,0)
(27,3,0)
(36,21,0)
(23,6,0)
(5,15,0)
(12,36,0)
(11,15,0)
(17,15,0)
(8,3,0)
(2,39,0)
(20,36,0)
(15,11,0)
(20,34,0)
(41,18,1)
(33,37,1)
(37,22,1)
(6,13,1)
(30,34,1)
(40,13,1)
(34,14,1)
(20,5,1)
(12,38,1)
(25,30,1)
(3,5,1)
(39,18,1)
(2,5,1)
(17,29,1)
(14,28,1)
(29,22,1)
(22,18,1)
(6,23,1)
(0,9,1)
(20,10,1)
(15,11,1)
(8,20,1)
(18,25,1)
(9,40,1)
(5,15,1)
(3,34,1)
(0,13,1)
(38,3,1)
(22,7,1)
(15,17,1)
(27,8,1)
(41,39,1)
(20,34,1)
(24,0,1)
(39,2,1)
(13,33,1)
(23,12,1)
(7,41,1)
(3,27,1)
(12,3,1)
(10,0,1)
(40,6,1)
(6,0,2)
(5,22,2)
(3,5,2)
(20,34,2)
(15,11,2)
(8,0,2)
(22,18,2)
(2,22,2)
(5,15,2)
(27,0,2)
(29,22,2)
(41,22,2)
(9,0,2)
(23,0,2)
(22,22,2)
(39,22,2)
(10,0,2)
(40,0,2)
(15,22,2)
(12,0,2)
(3,34,2)
(20,5,2)
(39,18,2)
(20,0,2)
(17,22,2)
(3,0,2)
(0,0,2)
(12,3,2)
(7,22,2)
(0,13,2)
(38,0,2)
(6,13,2)
(15,17,2)
-----------------------------------
(0,j < 1)
(1,for(j = 0; j < 1; j++)
(2,i)
(3,result = data)
(4,i)
(5,data = (unsigned int)
(6,j++)
(7,1)
(8,result)
(9,1)
(10,data)
(11,unsigned int)
(12,printUnsignedLine(result)
(13,j = 0)
(14,0)
(15,(unsigned int)
(16,j)
(17,RAND32()
(18,i = 0)
(19,)
(20,++data)
(21,)
(22,i < 1)
(23,j)
(24,RET)
(25,0)
(26,result)
(27,data)
(28,data)
(29,data)
(30,i)
(31,for(i = 0; i < 1; i++)
(32,data)
(33,0)
(34,data = 0)
(35,)
(36,)
(37,j)
(38,result)
(39,i++)
(40,j)
(41,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^