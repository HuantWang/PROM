-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_postinc_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = 0;
    {
        int data = *dataPtr1;
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
46,48
47,48
48,49
48,50
50,51
50,52
50,53
52,53
53,54
55,56
57,58
57,59
57,60
58,59
58,60
59,60
59,61
59,62
59,63
60,61
62,63
64,65
66,67
68,69
70,71
71,72
72,73
72,74
73,74
75,76
75,77
76,77
78,79
80,81
81,82
82,83
82,84
83,84
86,87
87,88
87,89
88,89
89,90
91,92
93,94
93,95
94,95
95,96
95,97
97,98
97,99
99,100
100,101
101,102
103,104
103,105
103,106
104,105
105,106
106,107
108,109
109,110
109,111
111,112
111,113
113,114
114,115
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,51,54,56,61,63,65,67,69,74,77,79,84,85,90,92,96,98,102,107,110,112,115,119,121
-----computeFrom-----
32,33
32,34
58,59
58,60
72,73
72,74
87,88
87,89
-----guardedBy-----
63,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_postinc_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_postinc_32_bad()
CWE190_Integer_Overflow__int_fgets_postinc_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        int data = *dataPtr1;        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(8,26,0)
(22,47,0)
(16,17,0)
(48,21,0)
(9,18,0)
(42,39,0)
(15,26,0)
(26,42,0)
(14,51,0)
(51,29,0)
(39,9,0)
(12,52,0)
(17,51,0)
(46,37,0)
(20,19,0)
(43,9,0)
(36,28,0)
(28,30,0)
(20,14,0)
(45,18,0)
(35,37,0)
(34,37,0)
(37,52,0)
(27,29,0)
(23,48,0)
(19,29,0)
(49,20,0)
(14,20,0)
(60,51,0)
(54,32,0)
(52,32,0)
(32,3,0)
(33,31,0)
(3,29,0)
(7,20,0)
(18,9,0)
(13,20,0)
(40,59,0)
(44,13,0)
(9,29,0)
(2,19,0)
(22,13,0)
(31,28,0)
(58,59,0)
(51,17,0)
(26,3,0)
(55,39,0)
(31,52,0)
(37,56,0)
(13,47,0)
(25,56,0)
(50,29,0)
(38,32,0)
(41,29,0)
(0,47,0)
(47,19,0)
(56,37,0)
(26,28,0)
(59,29,0)
(42,3,0)
(53,3,0)
(6,52,0)
(28,31,0)
(57,22,0)
(1,13,0)
(5,42,0)
(39,42,0)
(10,14,0)
(24,49,0)
(11,8,0)
(49,47,0)
(8,9,0)
(55,5,1)
(45,43,1)
(56,37,1)
(8,11,1)
(4,22,1)
(39,9,1)
(23,56,1)
(28,31,1)
(6,42,1)
(14,10,1)
(11,28,1)
(7,26,1)
(52,12,1)
(18,45,1)
(22,13,1)
(13,1,1)
(37,35,1)
(57,13,1)
(58,40,1)
(13,20,1)
(46,52,1)
(36,56,1)
(25,37,1)
(8,9,1)
(33,36,1)
(12,6,1)
(9,18,1)
(40,51,1)
(14,51,1)
(44,49,1)
(26,15,1)
(5,59,1)
(37,52,1)
(59,58,1)
(31,52,1)
(26,28,1)
(56,25,1)
(31,33,1)
(34,46,1)
(26,42,1)
(22,57,1)
(49,20,1)
(10,7,1)
(48,23,1)
(39,55,1)
(17,16,1)
(15,8,1)
(24,20,1)
(42,39,1)
(51,17,1)
(11,48,1)
(35,34,1)
(16,60,1)
(49,24,1)
(1,44,1)
(60,9,1)
(20,14,1)
(48,56,2)
(26,28,2)
(31,52,2)
(26,42,2)
(56,37,2)
(8,9,2)
(28,31,2)
(49,20,2)
(42,39,2)
(36,56,2)
(28,56,2)
(33,56,2)
(14,51,2)
(39,9,2)
(31,56,2)
(23,56,2)
(37,52,2)
(13,20,2)
(9,18,2)
(20,14,2)
(22,13,2)
(51,17,2)
-----------------------------------
(0,result)
(1,data)
(2,data)
(3,)
(4,RET)
(5,data)
(6,inputBuffer)
(7,data)
(8,*dataPtr1)
(9,*dataPtr1 = &data)
(10,dataPtr2)
(11,dataPtr1)
(12,"")
(13,result = data)
(14,*dataPtr2)
(15,data)
(16,data)
(17,&data)
(18,&data)
(19,)
(20,data = *dataPtr2)
(21,)
(22,printIntLine(result)
(23,"fgets()
(24,data)
(25,NULL)
(26,*dataPtr1 = data)
(27,dataPtr2)
(28,data = atoi(inputBuffer)
(29,)
(30,)
(31,atoi(inputBuffer)
(32,)
(33,inputBuffer)
(34,CHAR_ARRAY_SIZE)
(35,stdin)
(36,data)
(37,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(38,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(39,*dataPtr1)
(40,data)
(41,dataPtr1)
(42,data = *dataPtr1)
(43,dataPtr1)
(44,result)
(45,data)
(46,inputBuffer)
(47,)
(48,printLine("fgets()
(49,data++)
(50,data)
(51,*dataPtr2 = &data)
(52,inputBuffer[CHAR_ARRAY_SIZE] = "")
(53,data)
(54,inputBuffer)
(55,dataPtr1)
(56,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(57,result)
(58,0)
(59,data = 0)
(60,dataPtr2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^