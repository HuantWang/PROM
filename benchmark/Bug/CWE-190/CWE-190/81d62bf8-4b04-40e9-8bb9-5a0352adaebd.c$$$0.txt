-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_preinc_02_bad()
{
    char data;
    data = ' ';
    if(1)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = CHAR_MAX;
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            char result = data;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
21,22
23,24
25,26
25,27
27,28
28,29
28,30
28,31
29,30
30,31
31,32
33,34
34,35
34,36
36,37
36,38
38,39
39,40
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,8,10,14,15,17,22,24,26,32,35,37,40,44,46
-----computeFrom-----
12,13
12,14
20,21
20,22
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_preinc_02_bad(){    char data;    data = ' ';    if(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_max_preinc_02_bad()
CWE190_Integer_Overflow__char_max_preinc_02_bad
{    char data;    data = ' ';    if(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;    }
1
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;    }
data = CHAR_MAX;
data = CHAR_MAX
data
data
CHAR_MAX
CHAR_MAX
if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(16,20,0)
(4,24,0)
(11,23,0)
(11,24,0)
(20,9,0)
(20,23,0)
(17,9,0)
(9,12,0)
(19,16,0)
(23,6,0)
(20,24,0)
(0,11,0)
(2,12,0)
(3,9,0)
(11,9,0)
(1,20,0)
(21,12,0)
(18,23,0)
(16,23,0)
(14,12,0)
(8,24,0)
(15,20,0)
(24,10,0)
(24,8,1)
(20,24,1)
(15,1,1)
(20,15,1)
(17,3,1)
(11,24,1)
(9,17,1)
(11,9,1)
(19,20,1)
(16,19,1)
(8,4,1)
(16,20,1)
(5,24,1)
(20,9,1)
(22,5,1)
(22,16,1)
(4,7,1)
(5,7,1)
(11,0,1)
(1,11,1)
(0,5,1)
(7,9,1)
(16,5,2)
(19,5,2)
(20,5,2)
(16,20,2)
(11,24,2)
(4,7,2)
(1,5,2)
(24,7,2)
(0,5,2)
(20,24,2)
(11,9,2)
(15,5,2)
(8,7,2)
(20,9,2)
(11,5,2)
-----------------------------------
(0,data)
(1,result)
(2,if(1)
(3,data)
(4,data)
(5,1)
(6,)
(7,1)
(8,CHAR_MAX)
(9,data = \' \')
(10,)
(11,++data)
(12,)
(13,data = ' ')
(14,data)
(15,data)
(16,printHexCharLine(result)
(17,' ')
(18,result)
(19,result)
(20,result = data)
(21,if(1)
(22,RET)
(23,)
(24,data = CHAR_MAX)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^