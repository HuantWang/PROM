-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_add_66b_badSink(char dataArray[])
{
    /* copy data out of dataArray */
    char data = dataArray[2];
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        char result = data + 1;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
22,23
23,24
23,25
25,26
25,27
27,28
28,29
28,30
29,30
32,33
33,34
33,35
34,35
36,37
-----nextToken-----
2,4,6,8,9,13,15,19,20,24,26,30,31,35,37
-----computeFrom-----
28,29
28,30
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_add_66b_badSink(char dataArray[]){    /* copy data out of dataArray */    char data = dataArray[2];    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_max_add_66b_badSink(char dataArray[])
CWE190_Integer_Overflow__char_max_add_66b_badSink
char dataArray[]
char
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    char data = dataArray[2];    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
char data = dataArray[2];
char data = dataArray[2];
char
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(14,6,0)
(17,7,0)
(5,12,0)
(11,17,0)
(3,8,0)
(15,17,0)
(17,8,0)
(8,5,0)
(4,5,0)
(0,14,0)
(13,14,0)
(8,17,0)
(15,7,0)
(16,12,0)
(7,12,0)
(10,7,0)
(14,5,0)
(5,14,0)
(9,8,0)
(2,15,0)
(17,8,1)
(14,0,1)
(0,13,1)
(1,15,1)
(14,6,1)
(8,5,1)
(8,9,1)
(9,3,1)
(2,17,1)
(3,11,1)
(13,4,1)
(15,2,1)
(15,17,1)
(5,14,1)
(11,5,1)
(15,17,2)
(14,6,2)
(17,8,2)
(5,14,2)
(8,5,2)
-----------------------------------
(0,2)
(1,RET)
(2,result)
(3,data)
(4,data)
(5,data = dataArray[2])
(6,char dataArray[])
(7,)
(8,data + 1)
(9,1)
(10,result)
(11,result)
(12,)
(13,dataArray)
(14,dataArray[2])
(15,printHexCharLine(result)
(16,data)
(17,result = data + 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^