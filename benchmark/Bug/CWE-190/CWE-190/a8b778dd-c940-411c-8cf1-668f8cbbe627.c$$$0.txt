-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_31_bad()
{
    unsigned int data;
    data = 0;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%u", &data);
    {
        unsigned int dataCopy = data;
        unsigned int data = dataCopy;
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
24,25
26,27
26,28
26,29
27,28
28,29
28,30
30,31
30,32
32,33
33,34
35,36
36,37
36,38
38,39
38,40
40,41
41,42
43,44
43,45
44,45
45,46
45,47
47,48
47,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
59,60
-----nextToken-----
2,4,8,10,14,15,19,21,22,25,29,31,34,37,39,42,46,48,52,54,58,60
-----computeFrom-----
12,13
12,14
50,51
50,52
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_31_bad(){    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    {        unsigned int dataCopy = data;        unsigned int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_square_31_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_square_31_bad
{    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    {        unsigned int dataCopy = data;        unsigned int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
{        unsigned int dataCopy = data;        unsigned int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
unsigned int dataCopy = data;
unsigned int dataCopy = data;
unsigned int
dataCopy = data
dataCopy
= data
data
data
unsigned int data = dataCopy;
unsigned int data = dataCopy;
unsigned int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(14,6,0)
(5,18,0)
(20,16,0)
(19,6,0)
(24,5,0)
(0,16,0)
(14,5,0)
(27,5,0)
(11,10,0)
(16,10,0)
(10,16,0)
(28,14,0)
(15,12,0)
(6,18,0)
(2,27,0)
(21,15,0)
(8,18,0)
(11,27,0)
(12,18,0)
(3,14,0)
(25,10,0)
(16,24,0)
(7,5,0)
(13,12,0)
(17,24,0)
(1,5,0)
(9,11,0)
(4,12,0)
(22,6,0)
(15,6,0)
(12,15,0)
(10,27,0)
(23,24,0)
(24,14,0)
(24,17,1)
(23,14,1)
(12,15,1)
(21,13,1)
(15,6,1)
(6,22,1)
(22,19,1)
(0,25,1)
(16,20,1)
(9,10,1)
(15,21,1)
(25,24,1)
(16,24,1)
(13,4,1)
(20,0,1)
(14,28,1)
(11,9,1)
(11,10,1)
(14,6,1)
(3,12,1)
(10,16,1)
(24,14,1)
(17,23,1)
(26,11,1)
(4,6,1)
(28,3,1)
(16,24,2)
(12,15,2)
(11,10,2)
(10,16,2)
(24,14,2)
(15,6,2)
(14,6,2)
-----------------------------------
(0,data)
(1,dataCopy)
(2,result)
(3,dataCopy)
(4,stdin)
(5,)
(6,data = 0)
(7,data)
(8,data)
(9,result)
(10,result = data * data)
(11,printUnsignedLine(result)
(12,fscanf (stdin, "%u", &data)
(13,"%u")
(14,dataCopy = data)
(15,&data)
(16,data * data)
(17,dataCopy)
(18,)
(19,data)
(20,data)
(21,data)
(22,0)
(23,data)
(24,data = dataCopy)
(25,result)
(26,RET)
(27,)
(28,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^