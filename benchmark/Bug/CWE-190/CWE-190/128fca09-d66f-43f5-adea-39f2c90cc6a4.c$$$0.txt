-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_add_03_bad()
{
    short data;
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
32,34
35,36
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,27,30,33,34,39,41,45,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
32,33
32,34
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_add_03_bad(){    short data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_add_03_bad()
CWE190_Integer_Overflow__short_fscanf_add_03_bad
{    short data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
5==5
5
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(26,20,0)
(19,22,0)
(11,0,0)
(12,3,0)
(15,0,0)
(8,26,0)
(4,18,0)
(1,20,0)
(15,16,0)
(10,23,0)
(13,3,0)
(5,26,0)
(26,0,0)
(27,22,0)
(29,22,0)
(21,16,0)
(20,3,0)
(0,16,0)
(2,18,0)
(16,24,0)
(22,27,0)
(0,26,0)
(25,15,0)
(14,23,0)
(17,27,0)
(7,20,0)
(6,3,0)
(27,20,0)
(22,9,0)
(26,20,1)
(18,2,1)
(27,17,1)
(0,26,1)
(8,5,1)
(5,11,1)
(4,20,1)
(10,18,1)
(2,4,1)
(20,1,1)
(15,25,1)
(26,8,1)
(27,20,1)
(25,0,1)
(1,7,1)
(11,23,1)
(22,27,1)
(19,29,1)
(15,0,1)
(28,23,1)
(17,19,1)
(23,14,1)
(10,22,1)
(14,10,1)
(29,18,1)
(28,15,1)
(29,18,2)
(27,20,2)
(19,18,2)
(0,26,2)
(25,23,2)
(15,0,2)
(27,18,2)
(0,23,2)
(26,20,2)
(11,23,2)
(17,18,2)
(15,23,2)
(5,23,2)
(26,23,2)
(8,23,2)
(22,18,2)
(22,27,2)
-----------------------------------
(0,result = data + 1)
(1,0)
(2,5)
(3,)
(4,5)
(5,data)
(6,if(5==5)
(7,data)
(8,1)
(9,)
(10,5)
(11,result)
(12,data)
(13,if(5==5)
(14,5)
(15,printIntLine(result)
(16,)
(17,data)
(18,5==5)
(19,"%hd")
(20,data = 0)
(21,result)
(22,fscanf (stdin, "%hd", &data)
(23,5==5)
(24,)
(25,result)
(26,data + 1)
(27,&data)
(28,RET)
(29,stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^