-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_09_bad()
{
    unsigned int data;
    data = 0;
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,39,42,44,47,51,53
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_09_bad(){    unsigned int data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_preinc_09_bad()
CWE190_Integer_Overflow__unsigned_int_rand_preinc_09_bad
{    unsigned int data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(5,9,0)
(13,17,0)
(18,7,0)
(15,7,0)
(4,6,0)
(6,23,0)
(8,1,0)
(14,1,0)
(12,7,0)
(22,1,0)
(21,22,0)
(22,6,0)
(9,3,0)
(11,8,0)
(8,6,0)
(17,8,0)
(1,25,0)
(22,18,0)
(24,7,0)
(20,18,0)
(9,6,0)
(16,8,0)
(9,5,0)
(8,18,0)
(17,1,0)
(6,9,0)
(10,18,0)
(3,9,0)
(9,5,1)
(8,18,1)
(16,22,1)
(18,10,1)
(5,4,1)
(6,9,1)
(8,6,1)
(4,19,1)
(9,3,1)
(10,20,1)
(2,0,1)
(0,6,1)
(22,21,1)
(0,19,1)
(17,13,1)
(22,6,1)
(8,11,1)
(17,8,1)
(2,17,1)
(22,18,1)
(21,0,1)
(13,8,1)
(19,18,1)
(11,16,1)
(8,6,2)
(9,19,2)
(5,19,2)
(6,9,2)
(4,19,2)
(17,0,2)
(11,0,2)
(8,18,2)
(13,0,2)
(21,0,2)
(22,6,2)
(6,19,2)
(22,0,2)
(17,8,2)
(16,0,2)
(9,3,2)
(8,0,2)
(9,5,2)
(22,18,2)
-----------------------------------
(0,GLOBAL_CONST_TRUE)
(1,)
(2,RET)
(3,unsigned int)
(4,data)
(5,RAND32()
(6,data = (unsigned int)
(7,)
(8,result = data)
(9,(unsigned int)
(10,0)
(11,data)
(12,if(GLOBAL_CONST_TRUE)
(13,result)
(14,result)
(15,if(GLOBAL_CONST_TRUE)
(16,result)
(17,printUnsignedLine(result)
(18,data = 0)
(19,GLOBAL_CONST_TRUE)
(20,data)
(21,data)
(22,++data)
(23,)
(24,data)
(25,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^