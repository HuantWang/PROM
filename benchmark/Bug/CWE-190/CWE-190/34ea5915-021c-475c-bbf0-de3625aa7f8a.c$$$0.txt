-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_postinc_07_bad()
{
    short data;
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_postinc_07_bad(){    short data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_postinc_07_bad()
CWE190_Integer_Overflow__short_fscanf_postinc_07_bad
{    short data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(11,15,0)
(6,20,0)
(8,0,0)
(9,15,0)
(26,29,0)
(3,21,0)
(24,3,0)
(27,3,0)
(10,8,0)
(8,3,0)
(2,13,0)
(29,3,0)
(18,26,0)
(7,0,0)
(1,29,0)
(0,17,0)
(14,21,0)
(4,24,0)
(16,13,0)
(28,21,0)
(12,29,0)
(20,24,0)
(5,20,0)
(20,22,0)
(19,21,0)
(24,20,0)
(25,3,0)
(26,0,0)
(29,0,0)
(24,3,1)
(27,25,1)
(16,2,1)
(4,5,1)
(26,29,1)
(24,4,1)
(29,1,1)
(10,13,1)
(29,3,1)
(6,15,1)
(13,16,1)
(5,6,1)
(3,27,1)
(11,3,1)
(12,8,1)
(26,18,1)
(15,9,1)
(8,10,1)
(20,24,1)
(9,11,1)
(2,20,1)
(1,12,1)
(18,29,1)
(2,15,1)
(23,13,1)
(8,3,1)
(23,26,1)
(20,24,2)
(6,15,2)
(20,15,2)
(4,15,2)
(10,13,2)
(18,13,2)
(29,13,2)
(29,3,2)
(24,15,2)
(24,3,2)
(26,13,2)
(26,29,2)
(5,15,2)
(1,13,2)
(8,3,2)
(12,13,2)
(8,13,2)
-----------------------------------
(0,)
(1,data)
(2,staticFive)
(3,data = 0)
(4,data)
(5,"%hd")
(6,stdin)
(7,result)
(8,data++)
(9,5)
(10,data)
(11,staticFive)
(12,result)
(13,staticFive==5)
(14,data)
(15,staticFive==5)
(16,5)
(17,)
(18,result)
(19,if(staticFive==5)
(20,fscanf (stdin, "%hd", &data)
(21,)
(22,)
(23,RET)
(24,&data)
(25,data)
(26,printIntLine(result)
(27,0)
(28,if(staticFive==5)
(29,result = data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^