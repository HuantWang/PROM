-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_preinc_12_bad()
{
    int64_t data;
    data = 0LL;
    if(globalReturnsTrueOrFalse())
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
    }
    else
    {
        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */
        data = 2;
    }
    if(globalReturnsTrueOrFalse())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
    else
    {
        /* FIX: Add a check to prevent an overflow from occurring */
        if (data < LLONG_MAX)
        {
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
        else
        {
            printLine("data value is too large to perform arithmetic safely.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
17,20
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
28,29
31,32
32,33
34,35
35,36
36,37
36,38
37,38
40,41
40,42
40,43
41,42
42,43
44,45
45,46
45,47
45,48
46,47
47,48
48,49
50,51
51,52
51,53
52,53
54,55
54,56
56,57
57,58
59,60
60,61
60,62
61,62
63,64
65,66
66,67
66,68
66,69
67,68
67,69
68,69
70,71
72,73
72,74
72,75
73,74
74,75
75,76
77,78
78,79
78,80
79,80
81,82
81,83
83,84
84,85
86,87
87,88
87,89
88,89
90,91
92,93
93,94
94,95
94,96
95,96
-----nextToken-----
2,4,9,11,15,16,20,25,29,30,33,38,39,43,49,53,55,58,62,64,69,71,76,80,82,85,89,91,96,97
-----computeFrom-----
13,14
13,15
23,24
23,25
36,37
36,38
67,68
67,69
-----guardedBy-----
69,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_preinc_12_bad(){    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_preinc_12_bad()
CWE190_Integer_Overflow__int64_t_rand_preinc_12_bad
{    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
{        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
data = 2;
data = 2
data
data
2
if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }
data < LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
{            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{            printLine("data value is too large to perform arithmetic safely.");        }
printLine("data value is too large to perform arithmetic safely.");
printLine("data value is too large to perform arithmetic safely.")
printLine
printLine
"data value is too large to perform arithmetic safely."
-----joern-----
(27,33,0)
(6,21,0)
(15,33,0)
(39,21,0)
(38,9,0)
(14,3,0)
(18,12,0)
(36,21,0)
(1,9,0)
(36,44,0)
(43,17,0)
(42,44,0)
(36,32,0)
(37,12,0)
(32,43,0)
(43,32,0)
(43,20,0)
(26,39,0)
(15,21,0)
(0,19,0)
(42,21,0)
(41,12,0)
(9,32,0)
(20,43,0)
(21,5,0)
(11,15,0)
(15,32,0)
(25,27,0)
(31,23,0)
(13,32,0)
(16,36,0)
(9,21,0)
(39,33,0)
(44,8,0)
(23,36,0)
(35,21,0)
(39,32,0)
(30,42,0)
(17,43,0)
(7,36,0)
(34,39,0)
(40,12,0)
(29,33,0)
(42,32,0)
(32,2,0)
(22,0,0)
(27,39,0)
(23,44,0)
(28,44,0)
(34,15,1)
(16,7,1)
(39,26,1)
(23,36,1)
(36,32,1)
(24,32,1)
(42,30,1)
(6,35,1)
(35,4,1)
(13,4,1)
(11,9,1)
(39,32,1)
(25,39,1)
(15,21,1)
(38,1,1)
(27,25,1)
(7,42,1)
(23,31,1)
(20,13,1)
(39,21,1)
(26,34,1)
(36,21,1)
(36,16,1)
(27,39,1)
(30,24,1)
(15,32,1)
(43,17,1)
(22,9,1)
(4,40,1)
(10,27,1)
(42,32,1)
(1,24,1)
(15,11,1)
(10,23,1)
(9,32,1)
(42,21,1)
(24,21,1)
(9,38,1)
(9,21,1)
(32,43,1)
(31,36,1)
(21,6,1)
(0,22,1)
(10,0,1)
(43,20,1)
(43,4,2)
(39,21,2)
(39,9,2)
(32,43,2)
(36,21,2)
(15,21,2)
(15,32,2)
(36,24,2)
(39,32,2)
(9,32,2)
(20,4,2)
(9,24,2)
(23,24,2)
(30,24,2)
(7,24,2)
(11,9,2)
(21,4,2)
(27,9,2)
(43,20,2)
(32,4,2)
(36,32,2)
(31,24,2)
(16,24,2)
(15,9,2)
(42,24,2)
(9,21,2)
(22,9,2)
(1,24,2)
(23,36,2)
(35,4,2)
(0,9,2)
(42,32,2)
(38,24,2)
(6,4,2)
(25,9,2)
(13,4,2)
(34,9,2)
(26,9,2)
(43,17,2)
(27,39,2)
(42,21,2)
-----------------------------------
(0,printLine("data value is too large to perform arithmetic safely.")
(1,data)
(2,)
(3,)
(4,globalReturnsTrueOrFalse()
(5,)
(6,2)
(7,result)
(8,)
(9,data < LLONG_MAX)
(10,RET)
(11,data)
(12,)
(13,data)
(14,if (data < LLONG_MAX)
(15,++data)
(16,data)
(17,int64_t)
(18,if(globalReturnsTrueOrFalse()
(19,)
(20,RAND64()
(21,data = 2)
(22,"data value is too large to perform arithmetic safely.")
(23,printLongLongLine(result)
(24,globalReturnsTrueOrFalse()
(25,result)
(26,data)
(27,printLongLongLine(result)
(28,result)
(29,result)
(30,data)
(31,result)
(32,data = (int64_t)
(33,)
(34,result)
(35,data)
(36,result = data)
(37,if(globalReturnsTrueOrFalse()
(38,LLONG_MAX)
(39,result = data)
(40,L)
(41,data)
(42,++data)
(43,(int64_t)
(44,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^