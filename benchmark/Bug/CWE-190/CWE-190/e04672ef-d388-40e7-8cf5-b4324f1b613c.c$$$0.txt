-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_multiply_14_bad()
{
    char data;
    data = ' ';
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
    }
    if(globalFive==5)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */
            char result = data * 2;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
39,41
40,41
43,44
43,45
44,45
45,46
45,47
47,48
47,49
49,50
50,51
50,52
51,52
54,55
55,56
55,57
56,57
58,59
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,42,46,48,52,53,57,59
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
39,40
39,41
50,51
50,52
-----guardedBy-----
41,52
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_multiply_14_bad(){    char data;    data = ' ';    if(globalFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(globalFive==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_multiply_14_bad()
CWE190_Integer_Overflow__char_fscanf_multiply_14_bad
{    char data;    data = ' ';    if(globalFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(globalFive==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(globalFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
if(globalFive==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }
char result = data * 2;
char result = data * 2;
char
result = data * 2
result
= data * 2
data * 2
data
data
2
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(11,20,0)
(2,20,0)
(20,5,0)
(12,3,0)
(13,0,0)
(8,11,0)
(21,3,0)
(19,31,0)
(0,17,0)
(30,20,0)
(0,3,0)
(22,5,0)
(24,17,0)
(6,21,0)
(29,11,0)
(9,31,0)
(3,21,0)
(10,28,0)
(15,16,0)
(15,30,0)
(27,5,0)
(23,5,0)
(1,20,0)
(21,20,0)
(32,25,0)
(4,25,0)
(33,30,0)
(30,15,0)
(18,15,0)
(26,15,0)
(3,17,0)
(14,21,0)
(15,30,1)
(3,21,1)
(13,3,1)
(29,8,1)
(19,15,1)
(7,0,1)
(21,20,1)
(26,18,1)
(20,1,1)
(12,11,1)
(30,33,1)
(33,26,1)
(0,13,1)
(6,14,1)
(8,31,1)
(7,11,1)
(14,12,1)
(31,9,1)
(9,19,1)
(1,2,1)
(7,31,1)
(11,29,1)
(21,6,1)
(11,20,1)
(30,20,1)
(25,4,1)
(32,20,1)
(19,25,1)
(4,32,1)
(18,25,1)
(0,3,1)
(0,11,2)
(26,25,2)
(21,11,2)
(0,3,2)
(15,30,2)
(33,25,2)
(6,11,2)
(30,20,2)
(13,11,2)
(8,31,2)
(29,31,2)
(21,20,2)
(18,25,2)
(30,25,2)
(3,21,2)
(15,25,2)
(11,31,2)
(14,11,2)
(3,11,2)
(12,11,2)
(11,20,2)
-----------------------------------
(0,printHexCharLine(result)
(1,\\\' \\\')
(2,data)
(3,result = data * 2)
(4,5)
(5,)
(6,2)
(7,RET)
(8,data)
(9,5)
(10,if(data > 0)
(11,data > 0)
(12,result)
(13,result)
(14,data)
(15,fscanf (stdin, "%c", &data)
(16,)
(17,)
(18,stdin)
(19,globalFive)
(20,data = \\\' \\\')
(21,data * 2)
(22,if(globalFive==5)
(23,if(globalFive==5)
(24,result)
(25,globalFive==5)
(26,"%c")
(27,data)
(28,)
(29,0)
(30,&data)
(31,globalFive==5)
(32,globalFive)
(33,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^