-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_add_03_bad()
{
    unsigned int data;
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
31,32
32,33
32,34
33,34
34,35
34,36
36,37
36,38
38,39
39,40
39,41
40,41
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,29,30,35,37,41,42,46,48
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
28,29
28,30
39,40
39,41
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_add_03_bad(){    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_add_03_bad()
CWE190_Integer_Overflow__unsigned_int_max_add_03_bad
{    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
5==5
5
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(22,11,0)
(10,16,0)
(7,8,0)
(20,22,0)
(7,26,0)
(9,10,0)
(6,0,0)
(2,22,0)
(0,22,0)
(4,19,0)
(8,1,0)
(0,10,0)
(18,16,0)
(14,7,0)
(12,16,0)
(21,10,0)
(24,26,0)
(25,0,0)
(13,8,0)
(5,19,0)
(26,0,0)
(0,26,0)
(3,16,0)
(23,27,0)
(26,8,0)
(17,27,0)
(0,22,1)
(0,25,1)
(15,19,1)
(6,24,1)
(2,27,1)
(24,19,1)
(10,9,1)
(4,5,1)
(26,0,1)
(5,27,1)
(14,26,1)
(27,23,1)
(5,22,1)
(17,10,1)
(25,6,1)
(15,7,1)
(9,21,1)
(19,4,1)
(7,26,1)
(20,2,1)
(23,17,1)
(22,20,1)
(7,14,1)
(0,10,1)
(20,27,2)
(2,27,2)
(26,0,2)
(14,19,2)
(25,19,2)
(0,10,2)
(26,19,2)
(24,19,2)
(0,19,2)
(7,19,2)
(22,27,2)
(6,19,2)
(7,26,2)
(0,22,2)
-----------------------------------
(0,data + 1)
(1,)
(2,data)
(3,data)
(4,5)
(5,5)
(6,data)
(7,printUnsignedLine(result)
(8,)
(9,0)
(10,data = 0)
(11,)
(12,if(5==5)
(13,result)
(14,result)
(15,RET)
(16,)
(17,5)
(18,if(5==5)
(19,5==5)
(20,UINT_MAX)
(21,data)
(22,data = UINT_MAX)
(23,5)
(24,result)
(25,1)
(26,result = data + 1)
(27,5==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^