-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_10_bad()
{
    unsigned int data;
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_10_bad(){    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_10_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_10_bad
{    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(2,7,0)
(24,14,0)
(19,2,0)
(2,19,0)
(15,19,0)
(19,6,0)
(1,16,0)
(12,13,0)
(8,13,0)
(12,7,0)
(8,7,0)
(10,12,0)
(4,16,0)
(21,2,0)
(13,5,0)
(17,16,0)
(25,8,0)
(7,16,0)
(3,12,0)
(14,12,0)
(20,13,0)
(9,7,0)
(22,19,0)
(11,7,0)
(14,13,0)
(3,8,1)
(8,7,1)
(21,22,1)
(14,12,1)
(2,7,1)
(0,23,1)
(18,0,1)
(23,7,1)
(18,14,1)
(10,3,1)
(12,7,1)
(24,12,1)
(8,25,1)
(25,0,1)
(22,15,1)
(2,21,1)
(7,9,1)
(14,24,1)
(19,2,1)
(15,23,1)
(9,11,1)
(12,10,1)
(0,19,1)
(19,2,2)
(8,7,2)
(12,7,2)
(14,0,2)
(19,23,2)
(2,23,2)
(25,0,2)
(2,7,2)
(15,23,2)
(14,12,2)
(24,0,2)
(8,0,2)
(10,0,2)
(22,23,2)
(3,0,2)
(21,23,2)
(12,0,2)
-----------------------------------
(0,globalTrue)
(1,if(globalTrue)
(2,&data)
(3,result)
(4,if(globalTrue)
(5,)
(6,)
(7,data = 0)
(8,data++)
(9,0)
(10,data)
(11,data)
(12,result = data)
(13,)
(14,printUnsignedLine(result)
(15,stdin)
(16,)
(17,data)
(18,RET)
(19,fscanf (stdin, "%u", &data)
(20,result)
(21,data)
(22,"%u")
(23,globalTrue)
(24,result)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^