-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_postinc_02_bad()
{
    char data;
    data = ' ';
    if(1)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = CHAR_MAX;
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            char result = data;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
21,22
23,24
25,26
25,27
27,28
28,29
28,30
28,31
29,30
30,31
31,32
33,34
34,35
34,36
36,37
36,38
38,39
39,40
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,8,10,14,15,17,22,24,26,32,35,37,40,44,46
-----computeFrom-----
12,13
12,14
20,21
20,22
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_postinc_02_bad(){    char data;    data = ' ';    if(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            char result = data;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_max_postinc_02_bad()
CWE190_Integer_Overflow__char_max_postinc_02_bad
{    char data;    data = ' ';    if(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            char result = data;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;    }
1
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;    }
data = CHAR_MAX;
data = CHAR_MAX
data
data
CHAR_MAX
CHAR_MAX
if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            char result = data;            printHexCharLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            char result = data;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            char result = data;            printHexCharLine(result);        }
data++;
data++
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(2,17,0)
(21,3,0)
(18,17,0)
(20,2,0)
(9,11,0)
(4,0,0)
(1,16,0)
(2,3,0)
(18,16,0)
(3,10,0)
(0,3,0)
(17,15,0)
(7,17,0)
(16,11,0)
(0,2,0)
(14,17,0)
(13,11,0)
(2,16,0)
(18,3,0)
(8,11,0)
(24,18,0)
(12,2,0)
(19,16,0)
(18,16,1)
(0,2,1)
(5,16,1)
(18,17,1)
(20,18,1)
(4,2,1)
(6,5,1)
(17,14,1)
(0,4,1)
(12,20,1)
(2,16,1)
(23,0,1)
(2,12,1)
(24,6,1)
(2,17,1)
(6,17,1)
(18,24,1)
(16,19,1)
(14,7,1)
(7,5,1)
(19,1,1)
(23,6,1)
(17,5,2)
(2,6,2)
(2,16,2)
(18,6,2)
(18,16,2)
(12,6,2)
(24,6,2)
(0,2,2)
(14,5,2)
(0,6,2)
(4,6,2)
(2,17,2)
(20,6,2)
(7,5,2)
(18,17,2)
-----------------------------------
(0,printHexCharLine(result)
(1,data)
(2,result = data)
(3,)
(4,result)
(5,1)
(6,1)
(7,data)
(8,data)
(9,if(1)
(10,)
(11,)
(12,data)
(13,if(1)
(14,CHAR_MAX)
(15,)
(16,data = \' \')
(17,data = CHAR_MAX)
(18,data++)
(19,' ')
(20,result)
(21,result)
(22,data = ' ')
(23,RET)
(24,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^