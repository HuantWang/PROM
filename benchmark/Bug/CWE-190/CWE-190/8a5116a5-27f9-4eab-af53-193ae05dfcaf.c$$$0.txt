-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_add_01_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    /* POTENTIAL FLAW: Read data from the console using fscanf() */
    fscanf(stdin, "%d", &data);
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        int result = data + 1;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
24,25
26,27
26,28
27,28
28,29
28,30
30,31
30,32
32,33
33,34
33,35
34,35
37,38
38,39
38,40
39,40
41,42
-----nextToken-----
2,4,8,10,14,15,19,21,22,25,29,31,35,36,40,42
-----computeFrom-----
12,13
12,14
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_add_01_bad(){    int data;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_fscanf_add_01_bad()
CWE190_Integer_Overflow__int_fscanf_add_01_bad
{    int data;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(5,13,0)
(7,10,0)
(14,13,0)
(17,5,0)
(0,3,0)
(8,5,0)
(12,18,0)
(5,17,0)
(17,18,0)
(13,18,0)
(1,9,0)
(9,18,0)
(10,1,0)
(3,13,0)
(16,3,0)
(6,13,0)
(2,9,0)
(10,9,0)
(11,17,0)
(1,3,0)
(15,17,0)
(4,1,0)
(3,1,0)
(13,14,1)
(3,0,1)
(19,10,1)
(4,17,1)
(3,13,1)
(10,7,1)
(8,15,1)
(11,13,1)
(14,6,1)
(5,13,1)
(0,16,1)
(16,4,1)
(15,11,1)
(10,1,1)
(17,5,1)
(7,1,1)
(1,3,1)
(5,8,1)
(1,3,2)
(17,5,2)
(5,13,2)
(3,13,2)
(10,1,2)
-----------------------------------
(0,1)
(1,result = data + 1)
(2,result)
(3,data + 1)
(4,result)
(5,&data)
(6,data)
(7,result)
(8,data)
(9,)
(10,printIntLine(result)
(11,stdin)
(12,data)
(13,data = 0)
(14,0)
(15,"%d")
(16,data)
(17,fscanf(stdin, "%d", &data)
(18,)
(19,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^