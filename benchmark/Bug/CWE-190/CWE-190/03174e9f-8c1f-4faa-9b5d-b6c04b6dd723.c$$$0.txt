-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_02_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(1)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
19,21
20,21
21,22
21,23
23,24
23,25
23,26
25,26
26,27
28,29
30,31
30,32
30,33
31,32
31,33
32,33
32,34
32,35
32,36
33,34
35,36
37,38
39,40
41,42
43,44
44,45
45,46
45,47
46,47
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
59,60
59,61
61,62
62,63
62,64
63,64
64,65
64,66
66,67
66,68
68,69
69,70
69,71
70,71
73,74
74,75
74,76
75,76
77,78
-----nextToken-----
2,4,8,10,14,15,17,22,24,27,29,34,36,38,40,42,47,50,52,57,58,60,65,67,71,72,76,78
-----computeFrom-----
12,13
12,14
31,32
31,33
45,46
45,47
69,70
69,71
-----guardedBy-----
36,52
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_02_bad(){    int data;    /* Initialize data */    data = 0;    if(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_add_02_bad()
CWE190_Integer_Overflow__int_fgets_add_02_bad
{    int data;    /* Initialize data */    data = 0;    if(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
1
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(35,24,0)
(21,12,0)
(33,14,0)
(28,24,0)
(16,20,0)
(30,21,0)
(28,38,0)
(30,38,0)
(17,28,0)
(18,0,0)
(10,38,0)
(5,14,0)
(11,16,0)
(36,28,0)
(19,21,0)
(32,20,0)
(15,14,0)
(38,13,0)
(37,24,0)
(40,22,0)
(20,21,0)
(22,39,0)
(23,30,0)
(12,34,0)
(22,36,0)
(4,20,0)
(31,12,0)
(28,36,0)
(20,16,0)
(0,6,0)
(39,27,0)
(38,30,0)
(36,39,0)
(29,28,0)
(3,39,0)
(1,12,0)
(24,14,0)
(2,20,0)
(9,36,0)
(25,21,0)
(2,4,1)
(7,8,1)
(10,16,1)
(11,20,1)
(19,25,1)
(9,7,1)
(28,24,1)
(21,19,1)
(22,36,1)
(7,38,1)
(4,32,1)
(25,8,1)
(17,9,1)
(28,38,1)
(23,10,1)
(20,21,1)
(0,18,1)
(18,16,1)
(20,2,1)
(38,30,1)
(35,37,1)
(40,36,1)
(8,24,1)
(30,23,1)
(26,7,1)
(26,22,1)
(22,40,1)
(16,11,1)
(30,21,1)
(28,29,1)
(16,20,1)
(24,35,1)
(36,28,1)
(32,21,1)
(7,0,1)
(29,17,1)
(11,8,2)
(22,7,2)
(32,8,2)
(36,28,2)
(40,7,2)
(17,7,2)
(0,16,2)
(19,8,2)
(28,24,2)
(2,8,2)
(20,21,2)
(10,16,2)
(20,8,2)
(36,7,2)
(18,16,2)
(30,16,2)
(29,7,2)
(21,8,2)
(38,16,2)
(16,20,2)
(22,36,2)
(28,38,2)
(30,21,2)
(9,7,2)
(16,8,2)
(28,7,2)
(38,30,2)
(4,8,2)
(23,16,2)
(25,8,2)
-----------------------------------
(0,printLine("fgets()
(1,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(2,stdin)
(3,result)
(4,CHAR_ARRAY_SIZE)
(5,data)
(6,)
(7,1)
(8,1)
(9,result)
(10,data)
(11,NULL)
(12,)
(13,)
(14,)
(15,if(1)
(16,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(17,data)
(18,"fgets()
(19,"")
(20,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(21,inputBuffer[CHAR_ARRAY_SIZE] = "")
(22,printIntLine(result)
(23,inputBuffer)
(24,data = 0)
(25,inputBuffer)
(26,RET)
(27,)
(28,data + 1)
(29,1)
(30,atoi(inputBuffer)
(31,inputBuffer)
(32,inputBuffer)
(33,if(1)
(34,)
(35,0)
(36,result = data + 1)
(37,data)
(38,data = atoi(inputBuffer)
(39,)
(40,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^