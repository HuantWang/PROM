-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_postinc_16_bad()
{
    short data;
    data = 0;
    while(1)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
27,28
28,29
31,32
31,33
33,34
33,35
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,17,22,25,26,29,30,32,38,41,43,46,50,52,53
-----computeFrom-----
12,13
12,14
20,21
20,22
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_postinc_16_bad(){    short data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__short_rand_postinc_16_bad()
CWE190_Integer_Overflow__short_rand_postinc_16_bad
{    short data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }        break;    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();        break;    }
1
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();        break;    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
break;
while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
break;
-----joern-----
(27,23,0)
(0,12,0)
(15,10,0)
(7,27,0)
(18,0,0)
(2,23,0)
(1,18,0)
(26,12,0)
(4,17,0)
(20,25,0)
(23,27,0)
(18,17,0)
(27,21,0)
(14,0,0)
(22,10,0)
(18,27,0)
(9,14,0)
(11,25,0)
(25,27,0)
(23,3,0)
(19,17,0)
(13,21,0)
(16,0,0)
(23,2,0)
(17,10,0)
(6,10,0)
(25,0,0)
(25,17,0)
(3,23,0)
(14,25,0)
(18,27,1)
(23,3,1)
(25,20,1)
(2,7,1)
(19,4,1)
(8,26,1)
(9,25,1)
(1,24,1)
(11,18,1)
(26,14,1)
(13,27,1)
(18,1,1)
(25,17,1)
(24,13,1)
(25,27,1)
(14,9,1)
(20,11,1)
(24,5,1)
(7,5,1)
(14,25,1)
(27,23,1)
(23,2,1)
(8,24,1)
(17,19,1)
(5,17,1)
(18,17,1)
(2,5,2)
(25,24,2)
(13,5,2)
(1,24,2)
(25,17,2)
(18,17,2)
(7,5,2)
(23,2,2)
(26,24,2)
(9,24,2)
(14,25,2)
(25,27,2)
(23,3,2)
(27,5,2)
(18,24,2)
(18,27,2)
(27,23,2)
(20,24,2)
(14,24,2)
(11,24,2)
(23,5,2)
-----------------------------------
(0,)
(1,data)
(2,RAND32()
(3,short)
(4,data)
(5,1)
(6,data)
(7,data)
(8,RET)
(9,result)
(10,)
(11,result)
(12,)
(13,break;)
(14,printIntLine(result)
(15,while(1)
(16,result)
(17,data = 0)
(18,data++)
(19,0)
(20,data)
(21,)
(22,while(1)
(23,(short)
(24,1)
(25,result = data)
(26,break;)
(27,data = (short)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^