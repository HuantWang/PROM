-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_add_01_bad()
{
    char data;
    data = ' ';
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = CHAR_MAX;
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        char result = data + 1;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
22,23
22,24
23,24
24,25
24,26
26,27
26,28
28,29
29,30
29,31
30,31
33,34
34,35
34,36
35,36
37,38
-----nextToken-----
2,4,8,10,14,15,19,21,25,27,31,32,36,38
-----computeFrom-----
12,13
12,14
17,18
17,19
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_add_01_bad(){    char data;    data = ' ';    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_max_add_01_bad()
CWE190_Integer_Overflow__char_max_add_01_bad
{    char data;    data = ' ';    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
data = CHAR_MAX;
data = CHAR_MAX
data
data
CHAR_MAX
CHAR_MAX
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(2,6,0)
(10,2,0)
(1,8,0)
(2,14,0)
(13,0,0)
(8,7,0)
(6,8,0)
(16,10,0)
(12,8,0)
(17,6,0)
(11,14,0)
(10,14,0)
(6,2,0)
(9,2,0)
(14,7,0)
(4,7,0)
(0,7,0)
(3,0,0)
(5,6,0)
(15,10,1)
(16,2,1)
(5,17,1)
(2,6,1)
(1,0,1)
(6,8,1)
(8,12,1)
(10,2,1)
(6,5,1)
(10,16,1)
(9,8,1)
(13,3,1)
(17,9,1)
(0,13,1)
(12,1,1)
(2,6,2)
(6,8,2)
(10,2,2)
-----------------------------------
(0,data = ' ')
(1,data)
(2,result = data + 1)
(3,data)
(4,data)
(5,1)
(6,data + 1)
(7,)
(8,data = CHAR_MAX)
(9,result)
(10,printHexCharLine(result)
(11,result)
(12,CHAR_MAX)
(13,' ')
(14,)
(15,RET)
(16,result)
(17,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^