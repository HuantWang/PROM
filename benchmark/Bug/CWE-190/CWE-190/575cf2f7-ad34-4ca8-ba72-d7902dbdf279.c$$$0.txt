-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_add_16_bad()
{
    char data;
    data = ' ';
    while(1)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            char result = data + 1;
            printHexCharLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
30,31
30,32
32,33
32,34
33,34
33,35
34,35
35,36
35,37
37,38
37,39
39,40
40,41
40,42
41,42
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,29,31,36,38,42,43,47,49,50
-----computeFrom-----
12,13
12,14
40,41
40,42
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_add_16_bad(){    char data;    data = ' ';    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__char_fscanf_add_16_bad()
CWE190_Integer_Overflow__char_fscanf_add_16_bad
{    char data;    data = ' ';    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }        break;    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);        break;    }
1
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);        break;    }
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
break;
while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
break;
-----joern-----
(24,7,0)
(22,2,0)
(5,22,0)
(17,16,0)
(9,2,0)
(1,4,0)
(14,0,0)
(5,15,0)
(11,18,0)
(2,22,0)
(6,2,0)
(13,22,0)
(23,26,0)
(4,0,0)
(22,15,0)
(19,4,0)
(2,4,0)
(7,4,0)
(27,0,0)
(15,18,0)
(26,16,0)
(25,5,0)
(3,15,0)
(26,7,0)
(21,26,0)
(7,26,0)
(12,0,0)
(17,26,1)
(26,7,1)
(6,13,1)
(8,4,1)
(23,8,1)
(4,1,1)
(11,5,1)
(13,20,1)
(7,4,1)
(5,22,1)
(20,8,1)
(21,23,1)
(10,11,1)
(24,21,1)
(22,2,1)
(20,17,1)
(7,24,1)
(10,20,1)
(2,9,1)
(5,25,1)
(2,4,1)
(1,19,1)
(9,6,1)
(25,22,1)
(22,2,2)
(2,20,2)
(11,20,2)
(13,20,2)
(7,8,2)
(22,20,2)
(24,8,2)
(26,7,2)
(6,20,2)
(25,20,2)
(9,20,2)
(2,4,2)
(21,8,2)
(7,4,2)
(17,8,2)
(26,8,2)
(5,22,2)
(23,8,2)
(5,20,2)
-----------------------------------
(0,)
(1,\\\' \\\')
(2,data + 1)
(3,result)
(4,data = \\\' \\\')
(5,printHexCharLine(result)
(6,data)
(7,&data)
(8,1)
(9,1)
(10,RET)
(11,break;)
(12,data)
(13,result)
(14,while(1)
(15,)
(16,)
(17,break;)
(18,)
(19,data)
(20,1)
(21,"%c")
(22,result = data + 1)
(23,stdin)
(24,data)
(25,result)
(26,fscanf (stdin, "%c", &data)
(27,while(1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^