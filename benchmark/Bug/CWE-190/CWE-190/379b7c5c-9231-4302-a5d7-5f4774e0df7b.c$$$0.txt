-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_add_63b_badSink(int * dataPtr)
{
    int data = *dataPtr;
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        int result = data + 1;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
18,19
20,21
20,22
21,22
22,23
22,24
24,25
24,26
26,27
27,28
27,29
28,29
31,32
32,33
32,34
33,34
35,36
-----nextToken-----
2,4,6,8,9,13,15,19,23,25,29,30,34,36
-----computeFrom-----
27,28
27,29
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_add_63b_badSink(int * dataPtr){    int data = *dataPtr;    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_fscanf_add_63b_badSink(int * dataPtr)
CWE190_Integer_Overflow__int_fscanf_add_63b_badSink
int * dataPtr
int
* dataPtr
*
dataPtr
{    int data = *dataPtr;    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
int data = *dataPtr;
int data = *dataPtr;
int
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(3,2,0)
(4,8,0)
(7,15,0)
(7,8,0)
(12,2,0)
(9,1,0)
(8,7,0)
(16,13,0)
(8,13,0)
(3,16,0)
(14,13,0)
(1,16,0)
(2,3,0)
(2,8,0)
(6,7,0)
(0,16,0)
(1,3,0)
(11,3,0)
(10,2,0)
(5,1,1)
(1,9,1)
(2,8,1)
(7,15,1)
(9,3,1)
(3,2,1)
(2,10,1)
(1,3,1)
(7,6,1)
(10,12,1)
(8,7,1)
(6,4,1)
(12,11,1)
(11,8,1)
(3,2,2)
(2,8,2)
(1,3,2)
(8,7,2)
(7,15,2)
-----------------------------------
(0,result)
(1,printIntLine(result)
(2,data + 1)
(3,result = data + 1)
(4,data)
(5,RET)
(6,dataPtr)
(7,*dataPtr)
(8,data = *dataPtr)
(9,result)
(10,1)
(11,result)
(12,data)
(13,)
(14,data)
(15,int * dataPtr)
(16,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^