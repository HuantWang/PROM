-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_add_07_bad()
{
    short data;
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
40,41
41,42
41,43
43,44
43,45
45,46
46,47
46,48
47,48
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,42,44,48,49,53,55
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_add_07_bad(){    short data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_add_07_bad()
CWE190_Integer_Overflow__short_rand_add_07_bad
{    short data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(11,4,0)
(26,25,0)
(22,28,0)
(9,4,0)
(5,22,0)
(29,19,0)
(15,17,0)
(20,22,0)
(3,19,0)
(1,17,0)
(29,12,0)
(10,14,0)
(28,22,0)
(14,4,0)
(17,28,0)
(28,23,0)
(24,29,0)
(18,25,0)
(13,8,0)
(17,19,0)
(12,7,0)
(22,20,0)
(21,4,0)
(19,17,0)
(6,8,0)
(22,5,0)
(0,14,0)
(19,12,0)
(27,12,0)
(17,14,0)
(16,28,0)
(26,8,1)
(28,22,1)
(25,18,1)
(2,29,1)
(15,3,1)
(18,26,1)
(22,5,1)
(20,16,1)
(29,24,1)
(17,1,1)
(2,25,1)
(24,19,1)
(8,6,1)
(13,14,1)
(22,20,1)
(26,28,1)
(6,13,1)
(16,8,1)
(17,28,1)
(1,15,1)
(3,25,1)
(29,19,1)
(17,14,1)
(19,17,1)
(0,10,1)
(14,0,1)
(24,25,2)
(22,20,2)
(28,8,2)
(1,25,2)
(29,19,2)
(20,8,2)
(22,5,2)
(3,25,2)
(29,25,2)
(19,25,2)
(22,8,2)
(17,28,2)
(19,17,2)
(28,22,2)
(15,25,2)
(17,25,2)
(17,14,2)
(16,8,2)
-----------------------------------
(0,0)
(1,1)
(2,RET)
(3,result)
(4,)
(5,short)
(6,5)
(7,)
(8,staticFive==5)
(9,data)
(10,data)
(11,if(staticFive==5)
(12,)
(13,staticFive)
(14,data = 0)
(15,data)
(16,data)
(17,data + 1)
(18,5)
(19,result = data + 1)
(20,RAND32()
(21,if(staticFive==5)
(22,(short)
(23,)
(24,result)
(25,staticFive==5)
(26,staticFive)
(27,result)
(28,data = (short)
(29,printIntLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^