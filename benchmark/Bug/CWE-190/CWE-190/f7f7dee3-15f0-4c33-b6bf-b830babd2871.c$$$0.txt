-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_postinc_10_bad()
{
    short data;
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
30,31
30,32
30,33
31,32
32,33
33,34
35,36
36,37
36,38
38,39
38,40
40,41
41,42
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,34,37,39,42,46,48
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_postinc_10_bad(){    short data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_postinc_10_bad()
CWE190_Integer_Overflow__short_max_postinc_10_bad
{    short data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(1,7,0)
(8,23,0)
(12,18,0)
(23,1,0)
(23,12,0)
(10,12,0)
(23,0,0)
(9,0,0)
(22,0,0)
(5,12,0)
(5,1,0)
(0,17,0)
(11,17,0)
(21,23,0)
(20,5,0)
(14,17,0)
(2,17,0)
(13,8,0)
(6,1,0)
(5,0,0)
(4,23,0)
(16,1,0)
(8,12,0)
(5,0,1)
(4,5,1)
(21,4,1)
(0,9,1)
(19,3,1)
(16,6,1)
(13,23,1)
(23,21,1)
(20,19,1)
(1,16,1)
(5,20,1)
(5,1,1)
(6,3,1)
(9,22,1)
(23,1,1)
(15,8,1)
(8,13,1)
(23,0,1)
(8,23,1)
(15,19,1)
(3,0,1)
(19,1,1)
(23,19,2)
(8,23,2)
(4,19,2)
(20,19,2)
(5,1,2)
(6,3,2)
(1,3,2)
(23,0,2)
(13,19,2)
(8,19,2)
(5,0,2)
(5,19,2)
(16,3,2)
(23,1,2)
(21,19,2)
-----------------------------------
(0,data = 0)
(1,data = SHRT_MAX)
(2,data)
(3,globalTrue)
(4,result)
(5,data++)
(6,data)
(7,)
(8,printIntLine(result)
(9,0)
(10,result)
(11,if(globalTrue)
(12,)
(13,result)
(14,if(globalTrue)
(15,RET)
(16,SHRT_MAX)
(17,)
(18,)
(19,globalTrue)
(20,data)
(21,data)
(22,data)
(23,result = data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^