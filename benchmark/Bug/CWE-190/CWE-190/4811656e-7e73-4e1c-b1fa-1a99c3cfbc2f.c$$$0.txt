-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_11_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalReturnsTrue())
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
21,23
22,23
23,24
23,25
25,26
25,27
25,28
27,28
28,29
30,31
32,33
32,34
32,35
33,34
33,35
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
53,54
55,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
63,64
65,66
66,67
66,68
67,68
68,69
68,70
70,71
70,72
72,73
73,74
73,75
74,75
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,8,10,14,15,19,24,26,29,31,36,38,40,42,44,49,52,54,59,60,64,69,71,75,76,80,82
-----computeFrom-----
12,13
12,14
33,34
33,35
47,48
47,49
73,74
73,75
-----guardedBy-----
38,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_11_bad(){    int data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_add_11_bad()
CWE190_Integer_Overflow__int_fgets_add_11_bad
{    int data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(7,20,0)
(5,35,0)
(28,16,0)
(2,22,0)
(16,34,0)
(32,16,0)
(10,14,0)
(34,37,0)
(9,13,0)
(19,8,0)
(26,20,0)
(25,5,0)
(30,34,0)
(14,35,0)
(23,13,0)
(14,3,0)
(1,34,0)
(6,13,0)
(8,19,0)
(19,38,0)
(3,19,0)
(20,13,0)
(0,32,0)
(11,32,0)
(22,32,0)
(15,35,0)
(3,20,0)
(3,14,0)
(21,18,0)
(33,16,0)
(39,21,0)
(36,19,0)
(32,22,0)
(8,16,0)
(4,3,0)
(27,3,0)
(31,8,0)
(12,32,0)
(5,14,0)
(35,29,0)
(20,7,1)
(16,28,1)
(12,0,1)
(3,20,1)
(8,16,1)
(17,5,1)
(31,36,1)
(24,40,1)
(5,14,1)
(40,20,1)
(19,8,1)
(8,31,1)
(24,21,1)
(39,22,1)
(27,10,1)
(0,11,1)
(22,32,1)
(24,19,1)
(3,19,1)
(28,33,1)
(17,24,1)
(21,39,1)
(33,40,1)
(2,32,1)
(25,14,1)
(5,25,1)
(14,3,1)
(22,2,1)
(4,27,1)
(3,4,1)
(7,26,1)
(36,22,1)
(32,12,1)
(11,16,1)
(10,24,1)
(32,16,1)
(21,22,2)
(4,24,2)
(16,40,2)
(33,40,2)
(31,22,2)
(3,20,2)
(25,24,2)
(32,16,2)
(0,40,2)
(14,3,2)
(32,40,2)
(22,32,2)
(8,16,2)
(2,40,2)
(19,8,2)
(5,24,2)
(19,22,2)
(5,14,2)
(3,19,2)
(14,24,2)
(11,40,2)
(36,22,2)
(3,24,2)
(28,40,2)
(10,24,2)
(8,22,2)
(22,40,2)
(39,22,2)
(27,24,2)
(12,40,2)
-----------------------------------
(0,CHAR_ARRAY_SIZE)
(1,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(2,NULL)
(3,data + 1)
(4,1)
(5,printIntLine(result)
(6,data)
(7,0)
(8,atoi(inputBuffer)
(9,if(globalReturnsTrue()
(10,result)
(11,inputBuffer)
(12,stdin)
(13,)
(14,result = data + 1)
(15,result)
(16,inputBuffer[CHAR_ARRAY_SIZE] = "")
(17,RET)
(18,)
(19,data = atoi(inputBuffer)
(20,data = 0)
(21,printLine("fgets()
(22,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(23,if(globalReturnsTrue()
(24,globalReturnsTrue()
(25,result)
(26,data)
(27,data)
(28,"")
(29,)
(30,inputBuffer)
(31,inputBuffer)
(32,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(33,inputBuffer)
(34,)
(35,)
(36,data)
(37,)
(38,)
(39,"fgets()
(40,globalReturnsTrue()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^