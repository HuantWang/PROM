-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_31_bad()
{
    unsigned int data;
    data = 0;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%u", &data);
    {
        unsigned int dataCopy = data;
        unsigned int data = dataCopy;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
24,25
26,27
26,28
26,29
27,28
28,29
28,30
30,31
30,32
32,33
33,34
35,36
36,37
36,38
38,39
38,40
40,41
41,42
43,44
43,45
43,46
44,45
45,46
46,47
48,49
49,50
49,51
51,52
51,53
53,54
54,55
56,57
57,58
57,59
58,59
60,61
-----nextToken-----
2,4,8,10,14,15,19,21,22,25,29,31,34,37,39,42,47,50,52,55,59,61
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_31_bad(){    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    {        unsigned int dataCopy = data;        unsigned int data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_31_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_31_bad
{    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    {        unsigned int dataCopy = data;        unsigned int data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
{        unsigned int dataCopy = data;        unsigned int data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
unsigned int dataCopy = data;
unsigned int dataCopy = data;
unsigned int
dataCopy = data
dataCopy
= data
data
data
unsigned int data = dataCopy;
unsigned int data = dataCopy;
unsigned int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(6,28,0)
(26,24,0)
(8,18,0)
(18,10,0)
(24,11,0)
(25,10,0)
(20,0,0)
(0,13,0)
(17,2,0)
(12,11,0)
(10,24,0)
(1,15,0)
(19,13,0)
(24,23,0)
(11,23,0)
(22,10,0)
(13,28,0)
(11,2,0)
(26,15,0)
(15,23,0)
(9,26,0)
(14,13,0)
(16,24,0)
(21,23,0)
(0,2,0)
(13,0,0)
(2,28,0)
(10,15,0)
(7,24,0)
(3,2,0)
(18,15,0)
(4,23,0)
(23,28,0)
(27,11,0)
(10,24,1)
(19,14,1)
(27,12,1)
(2,3,1)
(8,10,1)
(24,11,1)
(24,7,1)
(26,24,1)
(10,22,1)
(11,27,1)
(22,25,1)
(20,19,1)
(5,18,1)
(25,26,1)
(7,16,1)
(26,9,1)
(3,17,1)
(12,13,1)
(11,2,1)
(9,24,1)
(0,20,1)
(18,10,1)
(13,0,1)
(18,8,1)
(14,2,1)
(16,11,1)
(0,2,1)
(13,0,2)
(26,24,2)
(11,2,2)
(0,2,2)
(18,10,2)
(10,24,2)
(24,11,2)
-----------------------------------
(0,&data)
(1,result)
(2,data = 0)
(3,0)
(4,dataCopy)
(5,RET)
(6,data)
(7,dataCopy)
(8,result)
(9,data)
(10,result = data)
(11,dataCopy = data)
(12,dataCopy)
(13,fscanf (stdin, "%u", &data)
(14,stdin)
(15,)
(16,data)
(17,data)
(18,printUnsignedLine(result)
(19,"%u")
(20,data)
(21,data)
(22,data)
(23,)
(24,data = dataCopy)
(25,result)
(26,data++)
(27,data)
(28,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^