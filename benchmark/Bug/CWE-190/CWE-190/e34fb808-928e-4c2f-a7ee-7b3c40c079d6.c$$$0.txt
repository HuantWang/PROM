-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_square_31_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    /* POTENTIAL FLAW: Set data to a random value */
    data = RAND32();
    {
        int dataCopy = data;
        int data = dataCopy;
        {
            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
            int result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
21,22
23,24
23,25
23,26
24,25
25,26
25,27
27,28
27,29
29,30
30,31
32,33
33,34
33,35
35,36
35,37
37,38
38,39
40,41
40,42
41,42
42,43
42,44
44,45
44,46
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,22,26,28,31,34,36,39,43,45,49,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
47,48
47,49
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_square_31_bad(){    int data;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_rand_square_31_bad()
CWE190_Integer_Overflow__int_rand_square_31_bad
{    int data;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
int dataCopy = data;
int dataCopy = data;
int
dataCopy = data
dataCopy
= data
data
data
int data = dataCopy;
int data = dataCopy;
int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(20,16,0)
(3,11,0)
(4,11,0)
(15,13,0)
(13,16,0)
(17,8,0)
(21,8,0)
(19,8,0)
(8,19,0)
(2,22,0)
(15,9,0)
(9,11,0)
(16,11,0)
(21,22,0)
(6,19,0)
(8,22,0)
(0,13,0)
(25,3,0)
(24,13,0)
(12,15,0)
(10,21,0)
(18,9,0)
(7,16,0)
(1,15,0)
(14,19,0)
(13,9,0)
(22,9,0)
(19,15,0)
(16,20,0)
(26,9,0)
(23,3,0)
(5,21,1)
(16,20,1)
(6,17,1)
(19,14,1)
(20,7,1)
(7,3,1)
(1,13,1)
(0,16,1)
(19,15,1)
(12,1,1)
(15,13,1)
(14,6,1)
(3,23,1)
(10,8,1)
(21,8,1)
(13,16,1)
(23,25,1)
(24,0,1)
(15,12,1)
(13,24,1)
(17,15,1)
(8,19,1)
(21,10,1)
(21,8,2)
(19,15,2)
(13,16,2)
(15,13,2)
(16,20,2)
(8,19,2)
-----------------------------------
(0,dataCopy)
(1,data)
(2,result)
(3,data = 0)
(4,data)
(5,RET)
(6,data)
(7,data)
(8,result = data * data)
(9,)
(10,result)
(11,)
(12,dataCopy)
(13,dataCopy = data)
(14,data)
(15,data = dataCopy)
(16,data = RAND32()
(17,result)
(18,data)
(19,data * data)
(20,RAND32()
(21,printIntLine(result)
(22,)
(23,0)
(24,data)
(25,data)
(26,dataCopy)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^