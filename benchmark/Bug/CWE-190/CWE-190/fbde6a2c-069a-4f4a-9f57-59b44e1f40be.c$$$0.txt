-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_16_bad()
{
    unsigned int data;
    data = 0;
    while(1)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
30,31
30,32
32,33
32,34
33,34
33,35
33,36
34,35
35,36
36,37
38,39
39,40
39,41
41,42
41,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,29,31,37,40,42,45,49,51,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_16_bad(){    unsigned int data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_16_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_16_bad
{    unsigned int data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }        break;    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        break;    }
1
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        break;    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
break;
while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
break;
-----joern-----
(25,22,0)
(7,12,0)
(19,21,0)
(4,8,0)
(23,12,0)
(18,14,0)
(27,8,0)
(3,1,0)
(14,25,0)
(16,9,0)
(21,8,0)
(13,26,0)
(10,4,0)
(15,21,0)
(17,25,0)
(8,12,0)
(1,21,0)
(0,22,0)
(4,9,0)
(14,8,0)
(9,26,0)
(1,9,0)
(6,8,0)
(5,12,0)
(25,14,0)
(20,25,0)
(21,9,0)
(13,1,1)
(19,15,1)
(21,19,1)
(14,18,1)
(24,2,1)
(21,8,1)
(25,14,1)
(20,17,1)
(2,8,1)
(11,13,1)
(8,6,1)
(0,25,1)
(18,20,1)
(24,0,1)
(1,21,1)
(6,27,1)
(10,24,1)
(17,2,1)
(14,8,1)
(3,21,1)
(11,24,1)
(15,4,1)
(4,10,1)
(1,3,1)
(4,8,1)
(3,24,2)
(18,2,2)
(17,2,2)
(1,24,2)
(15,24,2)
(1,21,2)
(21,24,2)
(4,24,2)
(25,2,2)
(0,2,2)
(14,2,2)
(14,8,2)
(13,24,2)
(19,24,2)
(4,8,2)
(10,24,2)
(21,8,2)
(25,14,2)
(20,2,2)
-----------------------------------
(0,break;)
(1,printUnsignedLine(result)
(2,1)
(3,result)
(4,++data)
(5,while(1)
(6,0)
(7,data)
(8,data = 0)
(9,)
(10,data)
(11,RET)
(12,)
(13,break;)
(14,&data)
(15,result)
(16,result)
(17,stdin)
(18,data)
(19,data)
(20,"%u")
(21,result = data)
(22,)
(23,while(1)
(24,1)
(25,fscanf (stdin, "%u", &data)
(26,)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^