-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_multiply_06_bad()
{
    int64_t data;
    data = 0LL;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%" SCNd64, &data);
    }
    if(STATIC_CONST_FIVE==5)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */
            int64_t result = data * 2;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
25,27
26,27
29,30
30,31
30,32
31,32
31,33
32,33
35,36
35,37
36,37
37,38
37,39
38,39
40,41
40,42
42,43
43,44
43,45
44,45
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,9,11,15,16,20,21,27,28,33,34,39,41,45,46,50,52
-----computeFrom-----
13,14
13,15
18,19
18,20
25,26
25,27
31,32
31,33
43,44
43,45
-----guardedBy-----
33,45
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ProblemStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_multiply_06_bad(){    int64_t data;    data = 0LL;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    if(STATIC_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_multiply_06_bad()
CWE190_Integer_Overflow__int64_t_fscanf_multiply_06_bad
{    int64_t data;    data = 0LL;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    if(STATIC_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
fscanf (stdin, "%" SCNd64, &data);
if(STATIC_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }
int64_t result = data * 2;
int64_t result = data * 2;
int64_t
int64_t
result = data * 2
result
= data * 2
data * 2
data
data
2
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(11,24,0)
(13,12,0)
(21,19,0)
(23,8,0)
(7,24,0)
(3,24,0)
(18,17,0)
(1,19,0)
(0,12,0)
(20,24,0)
(2,17,0)
(10,4,0)
(22,8,0)
(15,6,0)
(4,18,0)
(14,4,0)
(25,18,0)
(18,4,0)
(25,17,0)
(5,18,0)
(9,25,0)
(23,20,1)
(18,4,1)
(16,12,1)
(8,22,1)
(19,1,1)
(9,18,1)
(16,19,1)
(13,19,1)
(0,13,1)
(25,9,1)
(25,18,1)
(14,10,1)
(1,21,1)
(10,5,1)
(5,12,1)
(21,8,1)
(22,23,1)
(12,0,1)
(16,25,1)
(4,14,1)
(18,4,2)
(25,18,2)
(18,12,2)
(14,12,2)
(5,12,2)
(9,12,2)
(25,12,2)
(12,19,2)
(13,19,2)
(10,12,2)
(4,12,2)
(0,19,2)
-----------------------------------
(0,0)
(1,5)
(2,result)
(3,data)
(4,data * 2)
(5,result)
(6,)
(7,if(STATIC_CONST_FIVE==5)
(8,STATIC_CONST_FIVE==5)
(9,result)
(10,data)
(11,if(STATIC_CONST_FIVE==5)
(12,data > 0)
(13,data)
(14,2)
(15,if(data > 0)
(16,RET)
(17,)
(18,result = data * 2)
(19,STATIC_CONST_FIVE==5)
(20,L)
(21,STATIC_CONST_FIVE)
(22,5)
(23,STATIC_CONST_FIVE)
(24,)
(25,printLongLongLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^