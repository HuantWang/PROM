-----label-----
1
-----code-----
short CWE190_Integer_Overflow__short_fscanf_postinc_61b_badSource(short data)
{
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%hd", &data);
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
11,12
11,13
11,14
11,15
12,13
14,15
17,18
18,19
20,21
21,22
-----nextToken-----
2,4,6,8,13,15,16,19,22
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
short CWE190_Integer_Overflow__short_fscanf_postinc_61b_badSource(short data){    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%hd", &data);    return data;}
short
CWE190_Integer_Overflow__short_fscanf_postinc_61b_badSource(short data)
CWE190_Integer_Overflow__short_fscanf_postinc_61b_badSource
short data
short
data
data
{    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%hd", &data);    return data;}
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
return data;
data
data
-----joern-----
(4,6,0)
(1,9,0)
(7,1,0)
(6,9,0)
(1,5,0)
(8,6,0)
(0,8,0)
(6,8,0)
(3,1,0)
(8,5,0)
(2,8,0)
(7,1,1)
(4,0,1)
(0,2,1)
(1,9,1)
(8,6,1)
(3,8,1)
(6,9,1)
(1,3,1)
(6,4,1)
(7,1,2)
(8,6,2)
(1,9,2)
(6,9,2)
-----------------------------------
(0,"%hd")
(1,return data;)
(2,stdin)
(3,data)
(4,data)
(5,)
(6,&data)
(7,RET)
(8,fscanf (stdin, "%hd", &data)
(9,short data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^