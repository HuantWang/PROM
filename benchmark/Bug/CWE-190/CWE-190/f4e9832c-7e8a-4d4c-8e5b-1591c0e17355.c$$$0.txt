-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_postinc_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = 0;
    {
        int data = *dataPtr1;
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
54,55
56,57
57,58
57,59
58,59
59,60
61,62
63,64
63,65
64,65
65,66
65,67
67,68
67,69
69,70
70,71
71,72
73,74
73,75
73,76
74,75
75,76
76,77
78,79
79,80
79,81
81,82
81,83
83,84
84,85
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,51,52,55,60,62,66,68,72,77,80,82,85,89,91
-----computeFrom-----
32,33
32,34
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_postinc_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_postinc_32_bad()
CWE190_Integer_Overflow__int_fscanf_postinc_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        int data = *dataPtr1;        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(34,9,0)
(16,2,0)
(7,32,0)
(18,42,0)
(20,31,0)
(33,22,0)
(30,2,0)
(10,0,0)
(1,0,0)
(24,0,0)
(12,29,0)
(32,0,0)
(19,41,0)
(34,2,0)
(15,0,0)
(2,24,0)
(9,34,0)
(17,24,0)
(31,12,0)
(3,33,0)
(26,29,0)
(12,0,0)
(27,22,0)
(23,34,0)
(45,24,0)
(29,12,0)
(30,12,0)
(33,8,0)
(43,41,0)
(35,9,0)
(25,5,0)
(36,33,0)
(31,17,0)
(8,0,0)
(39,8,0)
(42,3,0)
(40,13,0)
(3,5,0)
(17,2,0)
(11,12,0)
(6,3,0)
(14,17,0)
(5,8,0)
(28,5,0)
(2,30,0)
(22,32,0)
(9,24,0)
(42,5,0)
(22,33,0)
(28,33,0)
(37,30,0)
(4,3,0)
(41,0,0)
(13,32,0)
(21,28,0)
(32,13,0)
(44,9,0)
(37,16,1)
(16,41,1)
(27,36,1)
(32,13,1)
(41,43,1)
(38,42,1)
(18,3,1)
(42,18,1)
(33,22,1)
(17,14,1)
(19,32,1)
(29,26,1)
(26,11,1)
(31,20,1)
(7,12,1)
(17,2,1)
(12,29,1)
(20,9,1)
(3,4,1)
(6,28,1)
(22,32,1)
(28,33,1)
(31,12,1)
(9,34,1)
(3,33,1)
(34,2,1)
(40,7,1)
(35,2,1)
(2,30,1)
(30,12,1)
(14,31,1)
(36,17,1)
(43,19,1)
(30,37,1)
(21,33,1)
(13,40,1)
(22,27,1)
(42,3,1)
(4,6,1)
(28,21,1)
(23,44,1)
(34,23,1)
(44,35,1)
(22,32,2)
(17,2,2)
(31,12,2)
(12,29,2)
(3,33,2)
(34,2,2)
(32,13,2)
(42,3,2)
(33,22,2)
(9,34,2)
(2,30,2)
(28,33,2)
(30,12,2)
-----------------------------------
(0,)
(1,data)
(2,data = *dataPtr1)
(3,result = data)
(4,data)
(5,)
(6,result)
(7,dataPtr2)
(8,)
(9,fscanf(stdin, "%d", &data)
(10,dataPtr1)
(11,dataPtr1)
(12,*dataPtr1 = &data)
(13,&data)
(14,data)
(15,dataPtr2)
(16,data)
(17,*dataPtr1 = data)
(18,result)
(19,data)
(20,dataPtr1)
(21,data)
(22,*dataPtr2)
(23,data)
(24,)
(25,result)
(26,data)
(27,dataPtr2)
(28,data++)
(29,&data)
(30,*dataPtr1)
(31,*dataPtr1)
(32,*dataPtr2 = &data)
(33,data = *dataPtr2)
(34,&data)
(35,stdin)
(36,data)
(37,dataPtr1)
(38,RET)
(39,data)
(40,data)
(41,data = 0)
(42,printIntLine(result)
(43,0)
(44,"%d")
(45,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^