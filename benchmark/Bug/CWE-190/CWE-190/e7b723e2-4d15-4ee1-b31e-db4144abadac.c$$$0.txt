-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_bad()
{
    unsigned int data;
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_bad(){    unsigned int data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_bad
{    unsigned int data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(22,13,0)
(6,27,0)
(5,29,0)
(25,3,0)
(13,0,0)
(0,15,0)
(1,8,0)
(16,3,0)
(17,8,0)
(1,3,0)
(26,11,0)
(25,1,0)
(3,14,0)
(24,8,0)
(8,27,0)
(4,25,0)
(9,27,0)
(17,3,0)
(19,0,0)
(13,8,0)
(28,0,0)
(21,27,0)
(2,1,0)
(0,13,0)
(18,8,0)
(23,17,0)
(10,1,0)
(20,29,0)
(12,11,0)
(22,19,1)
(8,18,1)
(26,0,1)
(4,1,1)
(0,13,1)
(18,24,1)
(2,17,1)
(19,28,1)
(20,8,1)
(10,2,1)
(1,8,1)
(17,8,1)
(12,26,1)
(5,20,1)
(13,22,1)
(7,11,1)
(25,1,1)
(1,10,1)
(23,11,1)
(17,23,1)
(28,29,1)
(11,12,1)
(13,8,1)
(25,4,1)
(29,5,1)
(7,25,1)
(26,29,1)
(10,11,2)
(19,29,2)
(17,11,2)
(13,8,2)
(1,8,2)
(0,13,2)
(28,29,2)
(1,11,2)
(17,8,2)
(0,29,2)
(22,29,2)
(25,1,2)
(13,29,2)
(2,11,2)
(23,11,2)
(25,11,2)
(4,11,2)
-----------------------------------
(0,fscanf (stdin, "%u", &data)
(1,result = data)
(2,result)
(3,)
(4,result)
(5,5)
(6,if(STATIC_CONST_FIVE==5)
(7,RET)
(8,data = 0)
(9,if(STATIC_CONST_FIVE==5)
(10,data)
(11,STATIC_CONST_FIVE==5)
(12,5)
(13,&data)
(14,)
(15,)
(16,result)
(17,data++)
(18,0)
(19,"%u")
(20,STATIC_CONST_FIVE)
(21,data)
(22,data)
(23,data)
(24,data)
(25,printUnsignedLine(result)
(26,STATIC_CONST_FIVE)
(27,)
(28,stdin)
(29,STATIC_CONST_FIVE==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^