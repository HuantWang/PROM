-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_44_bad()
{
    unsigned int data;
    /* define a function pointer */
    void (*funcPtr) (unsigned int) = badSink;
    data = 0;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%u", &data);
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
15,16
15,17
18,19
18,20
20,21
22,23
23,24
25,26
26,27
26,28
27,28
30,31
31,32
31,33
31,34
31,35
32,33
34,35
37,38
38,39
40,41
41,42
41,43
42,43
44,45
-----nextToken-----
2,4,8,10,13,16,17,19,21,24,28,29,33,35,36,39,43,45
-----computeFrom-----
26,27
26,28
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_44_bad(){    unsigned int data;    /* define a function pointer */    void (*funcPtr) (unsigned int) = badSink;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    /* use the function pointer */    funcPtr(data);}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_44_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_44_bad
{    unsigned int data;    /* define a function pointer */    void (*funcPtr) (unsigned int) = badSink;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    /* use the function pointer */    funcPtr(data);}
unsigned int data;
unsigned int data;
unsigned int
data
data
void (*funcPtr) (unsigned int) = badSink;
void (*funcPtr) (unsigned int) = badSink;
void
(*funcPtr) (unsigned int) = badSink
*funcPtr
*
funcPtr
unsigned int
unsigned int


= badSink
badSink
badSink
data = 0;
data = 0
data
data
0
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(1,6,0)
(10,11,0)
(15,8,0)
(3,8,0)
(14,15,0)
(8,15,0)
(11,0,0)
(13,15,0)
(15,0,0)
(11,6,0)
(16,0,0)
(12,6,0)
(5,0,0)
(6,0,0)
(9,2,0)
(4,2,0)
(2,0,0)
(8,6,0)
(9,4,1)
(7,11,1)
(10,15,1)
(3,14,1)
(1,2,1)
(12,1,1)
(14,13,1)
(11,6,1)
(8,6,1)
(6,12,1)
(8,3,1)
(2,9,1)
(11,10,1)
(13,6,1)
(15,8,1)
(15,8,2)
(11,6,2)
(8,6,2)
-----------------------------------
(0,)
(1,data)
(2,(*funcPtr)
(3,data)
(4,funcPtr)
(5,funcPtr)
(6,data = 0)
(7,RET)
(8,&data)
(9,badSink)
(10,data)
(11,funcPtr(data)
(12,0)
(13,stdin)
(14,"%u")
(15,fscanf (stdin, "%u", &data)
(16,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^