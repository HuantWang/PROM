-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_postinc_11_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
36,39
37,38
38,39
39,40
41,42
42,43
42,44
44,45
44,46
46,47
47,48
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,40,43,45,48,52,54
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_postinc_11_bad(){    int data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_postinc_11_bad()
CWE190_Integer_Overflow__int_fscanf_postinc_11_bad
{    int data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(4,7,0)
(17,25,0)
(20,23,0)
(7,20,0)
(19,14,0)
(14,21,0)
(3,17,0)
(14,10,0)
(17,22,0)
(16,22,0)
(8,25,0)
(22,15,0)
(0,21,0)
(1,14,0)
(9,23,0)
(7,22,0)
(21,14,0)
(2,20,0)
(24,23,0)
(12,23,0)
(25,22,0)
(6,25,0)
(18,20,0)
(21,20,0)
(25,20,0)
(4,13,1)
(2,18,1)
(13,14,1)
(7,20,1)
(25,6,1)
(13,11,1)
(0,19,1)
(20,2,1)
(17,3,1)
(7,4,1)
(14,21,1)
(21,0,1)
(5,17,1)
(5,13,1)
(19,1,1)
(6,8,1)
(11,20,1)
(8,7,1)
(21,20,1)
(3,25,1)
(1,11,1)
(17,25,1)
(25,20,1)
(0,11,2)
(25,13,2)
(7,13,2)
(1,11,2)
(7,20,2)
(21,20,2)
(6,13,2)
(8,13,2)
(17,25,2)
(4,13,2)
(17,13,2)
(21,11,2)
(3,13,2)
(25,20,2)
(14,21,2)
(14,11,2)
(19,11,2)
-----------------------------------
(0,data)
(1,stdin)
(2,0)
(3,result)
(4,data)
(5,RET)
(6,data)
(7,data++)
(8,result)
(9,data)
(10,)
(11,globalReturnsTrue()
(12,if(globalReturnsTrue()
(13,globalReturnsTrue()
(14,fscanf(stdin, "%d", &data)
(15,)
(16,result)
(17,printIntLine(result)
(18,data)
(19,"%d")
(20,data = 0)
(21,&data)
(22,)
(23,)
(24,if(globalReturnsTrue()
(25,result = data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^