-----label-----
1
-----code-----
static void badSink(int data)
{
    if(badStatic)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
13,14
14,15
14,16
14,17
15,16
16,17
17,18
19,20
20,21
20,22
22,23
22,24
24,25
25,26
27,28
28,29
28,30
29,30
31,32
-----nextToken-----
2,4,6,8,12,18,21,23,26,30,32
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(int data){    if(badStatic)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
static void
badSink(int data)
badSink
int data
int
data
data
{    if(badStatic)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
if(badStatic)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
badStatic
badStatic
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(6,5,0)
(9,8,0)
(4,8,0)
(8,5,0)
(2,6,0)
(5,13,0)
(0,5,0)
(8,1,0)
(14,8,0)
(4,5,0)
(6,1,0)
(12,4,0)
(7,11,0)
(4,8,1)
(8,1,1)
(9,6,1)
(6,1,1)
(4,12,1)
(12,8,1)
(14,9,1)
(8,14,1)
(10,3,1)
(2,3,1)
(6,2,1)
(10,4,1)
(4,3,2)
(8,3,2)
(6,3,2)
(6,1,2)
(4,8,2)
(12,3,2)
(14,3,2)
(8,1,2)
(9,3,2)
(2,3,2)
-----------------------------------
(0,result)
(1,int data)
(2,data)
(3,badStatic)
(4,printIntLine(result)
(5,)
(6,++data)
(7,if(badStatic)
(8,result = data)
(9,result)
(10,RET)
(11,)
(12,result)
(13,)
(14,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^