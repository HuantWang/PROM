-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_multiply_66b_badSink(short dataArray[])
{
    /* copy data out of dataArray */
    short data = dataArray[2];
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */
        short result = data * 2;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
22,23
22,24
23,24
26,27
26,28
27,28
28,29
28,30
30,31
30,32
32,33
33,34
33,35
34,35
37,38
38,39
38,40
39,40
41,42
-----nextToken-----
2,4,6,8,9,13,15,19,20,24,25,29,31,35,36,40,42
-----computeFrom-----
22,23
22,24
33,34
33,35
-----guardedBy-----
24,35
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_multiply_66b_badSink(short dataArray[]){    /* copy data out of dataArray */    short data = dataArray[2];    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */        short result = data * 2;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__short_rand_multiply_66b_badSink(short dataArray[])
CWE190_Integer_Overflow__short_rand_multiply_66b_badSink
short dataArray[]
short
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    short data = dataArray[2];    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */        short result = data * 2;        printIntLine(result);    }}
short data = dataArray[2];
short data = dataArray[2];
short
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */        short result = data * 2;        printIntLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */        short result = data * 2;        printIntLine(result);    }
short result = data * 2;
short result = data * 2;
short
result = data * 2
result
= data * 2
data * 2
data
data
2
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(12,13,0)
(19,13,0)
(4,3,0)
(2,21,0)
(0,5,0)
(21,5,0)
(1,6,0)
(20,5,0)
(14,2,0)
(17,2,0)
(3,21,0)
(16,6,0)
(11,14,0)
(2,14,0)
(15,3,0)
(6,21,0)
(12,14,0)
(14,13,0)
(10,12,0)
(18,21,0)
(3,8,0)
(7,2,0)
(21,3,0)
(12,14,1)
(2,17,1)
(3,8,1)
(17,7,1)
(10,14,1)
(4,18,1)
(9,6,1)
(15,4,1)
(3,15,1)
(12,10,1)
(21,3,1)
(16,1,1)
(1,21,1)
(11,6,1)
(9,12,1)
(2,21,1)
(6,16,1)
(6,21,1)
(7,11,1)
(14,2,1)
(2,6,2)
(3,8,2)
(17,6,2)
(2,21,2)
(14,6,2)
(7,6,2)
(12,14,2)
(12,6,2)
(10,6,2)
(6,21,2)
(14,2,2)
(11,6,2)
(21,3,2)
-----------------------------------
(0,if(data > 0)
(1,data)
(2,data * 2)
(3,dataArray[2])
(4,dataArray)
(5,)
(6,data > 0)
(7,data)
(8,short dataArray[])
(9,RET)
(10,result)
(11,result)
(12,printIntLine(result)
(13,)
(14,result = data * 2)
(15,2)
(16,0)
(17,2)
(18,data)
(19,result)
(20,data)
(21,data = dataArray[2])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^