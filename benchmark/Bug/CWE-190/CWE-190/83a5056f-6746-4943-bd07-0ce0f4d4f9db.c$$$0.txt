-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_add_11_bad()
{
    char data;
    data = ' ';
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            char result = data + 1;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,39,41,45,46,50,52
-----computeFrom-----
12,13
12,14
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_add_11_bad(){    char data;    data = ' ';    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_add_11_bad()
CWE190_Integer_Overflow__char_fscanf_add_11_bad
{    char data;    data = ' ';    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(20,16,0)
(24,5,0)
(3,22,0)
(5,21,0)
(0,15,0)
(5,7,0)
(15,0,0)
(14,0,0)
(0,21,0)
(21,16,0)
(17,7,0)
(1,15,0)
(19,16,0)
(22,2,0)
(6,21,0)
(8,1,0)
(23,0,0)
(13,16,0)
(15,22,0)
(4,21,0)
(9,7,0)
(1,22,0)
(18,15,0)
(7,11,0)
(7,5,0)
(0,21,1)
(25,21,1)
(5,21,1)
(12,1,1)
(15,0,1)
(17,9,1)
(18,10,1)
(12,10,1)
(23,18,1)
(10,25,1)
(8,15,1)
(24,17,1)
(10,7,1)
(14,23,1)
(9,25,1)
(7,5,1)
(1,8,1)
(1,15,1)
(4,6,1)
(0,14,1)
(21,4,1)
(5,24,1)
(24,25,2)
(8,10,2)
(15,0,2)
(7,25,2)
(9,25,2)
(14,10,2)
(23,10,2)
(1,10,2)
(5,25,2)
(18,10,2)
(0,10,2)
(15,10,2)
(1,15,2)
(17,25,2)
(7,5,2)
(5,21,2)
(0,21,2)
-----------------------------------
(0,data + 1)
(1,printHexCharLine(result)
(2,)
(3,result)
(4,\\\' \\\')
(5,&data)
(6,data)
(7,fscanf (stdin, "%c", &data)
(8,result)
(9,stdin)
(10,globalReturnsTrue()
(11,)
(12,RET)
(13,if(globalReturnsTrue()
(14,1)
(15,result = data + 1)
(16,)
(17,"%c")
(18,result)
(19,if(globalReturnsTrue()
(20,data)
(21,data = \\\' \\\')
(22,)
(23,data)
(24,data)
(25,globalReturnsTrue()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^