-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_multiply_53d_badSink(int64_t data)
{
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */
        int64_t result = data * 2;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
11,12
11,13
12,13
12,14
13,14
16,17
16,18
17,18
18,19
18,20
19,20
21,22
21,23
23,24
24,25
24,26
25,26
28,29
29,30
29,31
30,31
32,33
-----nextToken-----
2,4,7,9,14,15,20,22,26,27,31,33
-----computeFrom-----
12,13
12,14
24,25
24,26
-----guardedBy-----
14,26
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_multiply_53d_badSink(int64_t data){    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }}
void
CWE190_Integer_Overflow__int64_t_rand_multiply_53d_badSink(int64_t data)
CWE190_Integer_Overflow__int64_t_rand_multiply_53d_badSink
int64_t data
int64_t
int64_t
data
data
{    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }}
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }
int64_t result = data * 2;
int64_t result = data * 2;
int64_t
int64_t
result = data * 2
result
= data * 2
data * 2
data
data
2
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(8,1,0)
(0,5,0)
(7,12,0)
(13,4,0)
(10,8,0)
(5,1,0)
(12,8,0)
(8,12,0)
(5,8,0)
(11,12,0)
(9,14,0)
(14,2,0)
(3,1,0)
(12,2,0)
(15,14,0)
(14,15,1)
(15,9,1)
(8,12,1)
(0,8,1)
(12,2,1)
(14,2,1)
(6,5,1)
(5,8,1)
(6,14,1)
(11,10,1)
(5,0,1)
(7,11,1)
(10,14,1)
(12,7,1)
(0,14,2)
(12,2,2)
(12,14,2)
(8,14,2)
(14,2,2)
(5,14,2)
(5,8,2)
(11,14,2)
(8,12,2)
(7,14,2)
(10,14,2)
-----------------------------------
(0,result)
(1,)
(2,int64_t data)
(3,result)
(4,)
(5,printLongLongLine(result)
(6,RET)
(7,2)
(8,result = data * 2)
(9,data)
(10,result)
(11,data)
(12,data * 2)
(13,if(data > 0)
(14,data > 0)
(15,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^