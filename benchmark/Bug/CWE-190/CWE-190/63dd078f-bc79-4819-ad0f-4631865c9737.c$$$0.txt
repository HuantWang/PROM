-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_postinc_11_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalReturnsTrue())
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
21,23
22,23
23,24
23,25
25,26
25,27
25,28
27,28
28,29
30,31
32,33
32,34
32,35
33,34
33,35
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
53,54
55,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
63,64
65,66
66,67
66,68
66,69
67,68
68,69
69,70
71,72
72,73
72,74
74,75
74,76
76,77
77,78
79,80
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,8,10,14,15,19,24,26,29,31,36,38,40,42,44,49,52,54,59,60,64,70,73,75,78,82,84
-----computeFrom-----
12,13
12,14
33,34
33,35
47,48
47,49
-----guardedBy-----
38,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_postinc_11_bad(){    int data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_postinc_11_bad()
CWE190_Integer_Overflow__int_fgets_postinc_11_bad
{    int data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(2,29,0)
(3,11,0)
(9,18,0)
(13,23,0)
(40,22,0)
(32,1,0)
(34,29,0)
(38,37,0)
(10,16,0)
(18,1,0)
(19,23,0)
(11,4,0)
(16,11,0)
(28,17,0)
(8,15,0)
(33,18,0)
(37,19,0)
(22,23,0)
(3,16,0)
(22,17,0)
(20,16,0)
(15,37,0)
(26,22,0)
(39,22,0)
(14,19,0)
(25,11,0)
(19,37,0)
(37,30,0)
(5,0,0)
(31,23,0)
(16,18,0)
(24,3,0)
(29,21,0)
(15,18,0)
(12,1,0)
(0,7,0)
(17,22,0)
(15,11,0)
(16,37,0)
(35,1,0)
(23,29,0)
(36,6,1)
(37,19,1)
(39,40,1)
(31,27,1)
(20,15,1)
(3,16,1)
(16,18,1)
(26,23,1)
(15,37,1)
(15,18,1)
(0,5,1)
(16,37,1)
(24,16,1)
(14,38,1)
(19,14,1)
(19,23,1)
(33,9,1)
(27,18,1)
(22,23,1)
(17,28,1)
(6,0,1)
(18,33,1)
(40,26,1)
(6,37,1)
(22,39,1)
(38,17,1)
(28,22,1)
(8,6,1)
(17,22,1)
(5,17,1)
(16,10,1)
(23,13,1)
(13,31,1)
(10,20,1)
(6,27,1)
(36,3,1)
(3,24,1)
(15,8,1)
(19,17,2)
(16,37,2)
(28,27,2)
(14,17,2)
(17,27,2)
(39,27,2)
(3,6,2)
(13,27,2)
(16,6,2)
(22,23,2)
(23,27,2)
(5,17,2)
(15,37,2)
(31,27,2)
(20,6,2)
(16,18,2)
(26,27,2)
(3,16,2)
(15,18,2)
(40,27,2)
(8,6,2)
(15,6,2)
(22,27,2)
(10,6,2)
(0,17,2)
(38,17,2)
(24,6,2)
(19,23,2)
(17,22,2)
(37,17,2)
(37,19,2)
-----------------------------------
(0,printLine("fgets()
(1,)
(2,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(3,printIntLine(result)
(4,)
(5,"fgets()
(6,globalReturnsTrue()
(7,)
(8,data)
(9,data)
(10,data)
(11,)
(12,data)
(13,"")
(14,inputBuffer)
(15,data++)
(16,result = data)
(17,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(18,data = 0)
(19,atoi(inputBuffer)
(20,result)
(21,)
(22,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(23,inputBuffer[CHAR_ARRAY_SIZE] = "")
(24,result)
(25,result)
(26,inputBuffer)
(27,globalReturnsTrue()
(28,NULL)
(29,)
(30,)
(31,inputBuffer)
(32,if(globalReturnsTrue()
(33,0)
(34,inputBuffer)
(35,if(globalReturnsTrue()
(36,RET)
(37,data = atoi(inputBuffer)
(38,data)
(39,stdin)
(40,CHAR_ARRAY_SIZE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^