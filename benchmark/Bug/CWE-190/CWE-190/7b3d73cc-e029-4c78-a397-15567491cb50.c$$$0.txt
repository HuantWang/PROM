-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_square_18_bad()
{
    short data;
    data = 0;
    goto source;
source:
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = SHRT_MAX;
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */
        short result = data * data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
22,23
24,25
26,27
28,29
28,30
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,27,29,33,35,39,41,45,47
-----computeFrom-----
12,13
12,14
21,22
21,23
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_square_18_bad(){    short data;    data = 0;    goto source;source:    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = SHRT_MAX;    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__short_max_square_18_bad()
CWE190_Integer_Overflow__short_max_square_18_bad
{    short data;    data = 0;    goto source;source:    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = SHRT_MAX;    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = SHRT_MAX;
source
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }
sink
{        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }
short result = data * data;
short result = data * data;
short
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(19,13,0)
(12,8,0)
(13,17,0)
(0,8,0)
(10,8,0)
(4,21,0)
(5,8,0)
(21,14,0)
(3,17,0)
(21,13,0)
(9,8,0)
(2,17,0)
(14,8,0)
(13,21,0)
(17,8,0)
(16,13,0)
(6,20,0)
(11,14,0)
(1,14,0)
(15,11,0)
(11,21,0)
(18,20,0)
(20,8,0)
(7,11,1)
(0,20,1)
(9,17,1)
(20,18,1)
(21,13,1)
(11,15,1)
(17,3,1)
(2,0,1)
(11,21,1)
(16,4,1)
(13,19,1)
(3,2,1)
(13,17,1)
(4,9,1)
(15,21,1)
(18,6,1)
(19,16,1)
(21,13,2)
(13,17,2)
(11,21,2)
-----------------------------------
(0,goto source;)
(1,result)
(2,data)
(3,SHRT_MAX)
(4,result)
(5,sink:)
(6,data)
(7,RET)
(8,)
(9,goto sink;)
(10,data)
(11,printIntLine(result)
(12,source:)
(13,data * data)
(14,)
(15,result)
(16,data)
(17,data = SHRT_MAX)
(18,0)
(19,data)
(20,data = 0)
(21,result = data * data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^