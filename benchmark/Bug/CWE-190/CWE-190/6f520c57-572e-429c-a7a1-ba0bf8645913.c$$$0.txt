-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_postinc_05_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticTrue)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
20,22
21,22
22,23
22,24
24,25
24,26
24,27
26,27
27,28
29,30
31,32
31,33
31,34
32,33
32,34
33,34
33,35
33,36
33,37
34,35
36,37
38,39
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
60,61
60,62
61,62
63,64
64,65
64,66
64,67
65,66
66,67
67,68
69,70
70,71
70,72
72,73
72,74
74,75
75,76
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,30,35,37,39,41,43,48,51,53,58,59,62,68,71,73,76,80,82
-----computeFrom-----
12,13
12,14
32,33
32,34
46,47
46,48
-----guardedBy-----
37,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_postinc_05_bad(){    int data;    /* Initialize data */    data = 0;    if(staticTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_postinc_05_bad()
CWE190_Integer_Overflow__int_fgets_postinc_05_bad
{    int data;    /* Initialize data */    data = 0;    if(staticTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
staticTrue
staticTrue
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(40,31,0)
(28,37,0)
(35,19,0)
(7,34,0)
(18,39,0)
(2,36,0)
(0,13,0)
(15,28,0)
(34,32,0)
(36,31,0)
(27,13,0)
(33,38,0)
(24,23,0)
(37,39,0)
(6,37,0)
(23,31,0)
(21,22,0)
(23,13,0)
(33,19,0)
(9,12,0)
(23,33,0)
(16,12,0)
(36,33,0)
(25,37,0)
(3,5,0)
(31,17,0)
(22,26,0)
(20,12,0)
(36,13,0)
(8,23,0)
(37,28,0)
(19,33,0)
(19,39,0)
(5,31,0)
(14,37,0)
(13,12,0)
(11,33,0)
(10,34,0)
(5,23,0)
(39,34,0)
(30,39,0)
(4,13,1)
(39,30,1)
(21,28,1)
(28,15,1)
(19,39,1)
(1,4,1)
(28,37,1)
(23,8,1)
(2,1,1)
(3,23,1)
(29,5,1)
(23,33,1)
(23,13,1)
(30,18,1)
(29,1,1)
(37,39,1)
(36,2,1)
(25,14,1)
(13,27,1)
(18,4,1)
(11,28,1)
(8,24,1)
(19,35,1)
(1,33,1)
(5,3,1)
(22,21,1)
(14,39,1)
(6,25,1)
(36,33,1)
(1,22,1)
(33,19,1)
(35,11,1)
(37,6,1)
(24,36,1)
(27,0,1)
(15,37,1)
(5,23,1)
(36,13,1)
(24,1,2)
(22,28,2)
(5,1,2)
(23,13,2)
(8,1,2)
(33,28,2)
(25,4,2)
(19,39,2)
(28,37,2)
(28,4,2)
(3,1,2)
(23,33,2)
(2,1,2)
(15,4,2)
(36,33,2)
(36,1,2)
(19,28,2)
(36,13,2)
(21,28,2)
(6,4,2)
(33,19,2)
(39,4,2)
(30,4,2)
(14,4,2)
(5,23,2)
(11,28,2)
(18,4,2)
(37,4,2)
(37,39,2)
(23,1,2)
(35,28,2)
-----------------------------------
(0,data)
(1,staticTrue)
(2,data)
(3,result)
(4,staticTrue)
(5,printIntLine(result)
(6,stdin)
(7,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(8,data)
(9,if(staticTrue)
(10,inputBuffer)
(11,data)
(12,)
(13,data = 0)
(14,inputBuffer)
(15,NULL)
(16,data)
(17,)
(18,inputBuffer)
(19,atoi(inputBuffer)
(20,if(staticTrue)
(21,"fgets()
(22,printLine("fgets()
(23,result = data)
(24,result)
(25,CHAR_ARRAY_SIZE)
(26,)
(27,0)
(28,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(29,RET)
(30,"")
(31,)
(32,)
(33,data = atoi(inputBuffer)
(34,)
(35,inputBuffer)
(36,data++)
(37,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(38,)
(39,inputBuffer[CHAR_ARRAY_SIZE] = "")
(40,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^