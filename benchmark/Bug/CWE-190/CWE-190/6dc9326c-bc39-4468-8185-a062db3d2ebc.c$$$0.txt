-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_postinc_34_bad()
{
    int data;
    CWE190_Integer_Overflow__int_fgets_postinc_34_unionType myUnion;
    /* Initialize data */
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    myUnion.unionFirst = data;
    {
        int data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
22,23
22,24
23,24
24,25
24,26
26,27
26,28
26,29
28,29
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
35,37
35,38
35,39
36,37
38,39
40,41
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
51,53
52,53
54,55
56,57
57,58
58,59
58,60
59,60
62,63
63,64
63,65
64,65
64,66
65,66
68,69
70,71
70,72
71,72
72,73
72,74
74,75
74,76
76,77
77,78
77,79
78,79
81,82
81,83
81,84
82,83
83,84
84,85
86,87
87,88
87,89
89,90
89,91
91,92
92,93
94,95
95,96
95,97
96,97
98,99
-----nextToken-----
2,4,8,10,14,16,20,21,25,27,30,32,37,39,41,43,45,50,53,55,60,61,66,67,69,73,75,79,80,85,88,90,93,97,99
-----computeFrom-----
18,19
18,20
34,35
34,36
48,49
48,50
63,64
63,65
-----guardedBy-----
39,55
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_postinc_34_bad(){    int data;    CWE190_Integer_Overflow__int_fgets_postinc_34_unionType myUnion;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_postinc_34_bad()
CWE190_Integer_Overflow__int_fgets_postinc_34_bad
{    int data;    CWE190_Integer_Overflow__int_fgets_postinc_34_unionType myUnion;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
CWE190_Integer_Overflow__int_fgets_postinc_34_unionType myUnion;
CWE190_Integer_Overflow__int_fgets_postinc_34_unionType myUnion;
CWE190_Integer_Overflow__int_fgets_postinc_34_unionType
CWE190_Integer_Overflow__int_fgets_postinc_34_unionType
myUnion
myUnion
data = 0;
data = 0
data
data
0
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
int data = myUnion.unionSecond;
int data = myUnion.unionSecond;
int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(4,12,0)
(25,20,0)
(21,39,0)
(44,37,0)
(41,21,0)
(14,15,0)
(2,15,0)
(40,41,0)
(12,45,0)
(43,29,0)
(1,28,0)
(39,15,0)
(9,41,0)
(0,47,0)
(10,45,0)
(24,37,0)
(37,12,0)
(3,47,0)
(11,2,0)
(5,3,0)
(6,1,0)
(26,37,0)
(47,21,0)
(14,3,0)
(12,29,0)
(31,8,0)
(35,44,0)
(7,8,0)
(32,14,0)
(42,29,0)
(41,30,0)
(30,41,0)
(28,45,0)
(33,39,0)
(34,28,0)
(16,15,0)
(36,41,0)
(44,28,0)
(20,17,0)
(22,21,0)
(46,21,0)
(37,28,0)
(29,12,0)
(47,3,0)
(8,14,0)
(23,30,0)
(3,19,0)
(45,15,0)
(18,39,0)
(13,2,0)
(27,15,0)
(14,2,0)
(1,12,0)
(1,6,1)
(35,37,1)
(37,12,1)
(0,5,1)
(9,40,1)
(47,21,1)
(31,3,1)
(41,9,1)
(29,43,1)
(42,4,1)
(14,3,1)
(11,13,1)
(14,32,1)
(47,0,1)
(41,21,1)
(8,7,1)
(7,31,1)
(30,23,1)
(30,41,1)
(25,30,1)
(40,36,1)
(21,22,1)
(14,2,1)
(2,11,1)
(3,47,1)
(23,41,1)
(6,12,1)
(44,35,1)
(24,1,1)
(38,44,1)
(46,2,1)
(43,42,1)
(26,24,1)
(20,25,1)
(31,20,1)
(22,46,1)
(32,8,1)
(1,12,1)
(36,21,1)
(37,26,1)
(44,37,1)
(4,14,1)
(5,30,1)
(12,29,1)
(47,30,2)
(44,37,2)
(12,29,2)
(14,3,2)
(5,30,2)
(1,12,2)
(47,21,2)
(3,30,2)
(3,47,2)
(25,30,2)
(37,12,2)
(20,30,2)
(30,41,2)
(14,2,2)
(0,30,2)
(41,21,2)
-----------------------------------
(0,inputBuffer)
(1,data++)
(2,data = 0)
(3,data = atoi(inputBuffer)
(4,data)
(5,data)
(6,data)
(7,unionFirst)
(8,myUnion.unionFirst)
(9,stdin)
(10,data)
(11,0)
(12,data = myUnion.unionSecond)
(13,data)
(14,myUnion.unionFirst = data)
(15,)
(16,data)
(17,)
(18,inputBuffer)
(19,)
(20,printLine("fgets()
(21,inputBuffer[CHAR_ARRAY_SIZE] = "")
(22,"")
(23,NULL)
(24,result)
(25,"fgets()
(26,data)
(27,myUnion)
(28,)
(29,myUnion.unionSecond)
(30,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(31,myUnion)
(32,data)
(33,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(34,result)
(35,result)
(36,inputBuffer)
(37,result = data)
(38,RET)
(39,)
(40,CHAR_ARRAY_SIZE)
(41,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(42,myUnion)
(43,unionSecond)
(44,printIntLine(result)
(45,)
(46,inputBuffer)
(47,atoi(inputBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^