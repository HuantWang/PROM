-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_preinc_13_bad()
{
    short data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
47,48
47,49
49,50
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,43,46,48,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_preinc_13_bad(){    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_preinc_13_bad()
CWE190_Integer_Overflow__short_rand_preinc_13_bad
{    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(5,18,0)
(14,12,0)
(29,21,0)
(25,4,0)
(4,17,0)
(3,22,0)
(23,29,0)
(6,15,0)
(9,18,0)
(13,18,0)
(0,22,0)
(23,4,0)
(22,29,0)
(26,7,0)
(29,22,0)
(8,23,0)
(18,27,0)
(10,15,0)
(24,27,0)
(28,27,0)
(19,29,0)
(22,0,0)
(2,7,0)
(22,3,0)
(27,12,0)
(9,4,0)
(18,4,0)
(23,27,0)
(1,9,0)
(18,29,0)
(20,12,0)
(16,12,0)
(23,8,1)
(11,15,1)
(13,23,1)
(28,24,1)
(11,9,1)
(22,3,1)
(23,27,1)
(10,7,1)
(6,10,1)
(26,27,1)
(7,2,1)
(19,7,1)
(23,29,1)
(9,1,1)
(10,29,1)
(18,27,1)
(9,18,1)
(1,18,1)
(5,13,1)
(27,28,1)
(8,15,1)
(18,5,1)
(18,29,1)
(29,22,1)
(15,6,1)
(22,0,1)
(2,26,1)
(0,19,1)
(23,15,2)
(8,15,2)
(23,29,2)
(29,7,2)
(19,7,2)
(18,15,2)
(22,7,2)
(9,15,2)
(0,7,2)
(1,15,2)
(29,22,2)
(22,3,2)
(23,27,2)
(18,29,2)
(22,0,2)
(18,27,2)
(9,18,2)
(5,15,2)
(13,15,2)
-----------------------------------
(0,RAND32()
(1,result)
(2,5)
(3,short)
(4,)
(5,data)
(6,5)
(7,GLOBAL_CONST_FIVE==5)
(8,data)
(9,printIntLine(result)
(10,GLOBAL_CONST_FIVE)
(11,RET)
(12,)
(13,result)
(14,if(GLOBAL_CONST_FIVE==5)
(15,GLOBAL_CONST_FIVE==5)
(16,if(GLOBAL_CONST_FIVE==5)
(17,)
(18,result = data)
(19,data)
(20,data)
(21,)
(22,(short)
(23,++data)
(24,data)
(25,result)
(26,GLOBAL_CONST_FIVE)
(27,data = 0)
(28,0)
(29,data = (short)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^