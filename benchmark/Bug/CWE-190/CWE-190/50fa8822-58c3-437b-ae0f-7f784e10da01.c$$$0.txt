-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_01_bad()
{
    unsigned int data;
    data = 0;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%u", &data);
    {
        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
        unsigned int result = data * data;
        printUnsignedLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
24,25
26,27
26,28
27,28
28,29
28,30
30,31
30,32
32,33
33,34
33,35
34,35
36,37
38,39
39,40
39,41
40,41
42,43
-----nextToken-----
2,4,8,10,14,15,19,21,22,25,29,31,35,37,41,43
-----computeFrom-----
12,13
12,14
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_01_bad(){    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    {        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_square_01_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_square_01_bad
{    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    {        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
{        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(3,12,0)
(6,11,0)
(16,6,0)
(6,9,0)
(14,9,0)
(12,11,0)
(9,6,0)
(17,11,0)
(4,7,0)
(18,12,0)
(13,18,0)
(0,6,0)
(9,7,0)
(1,11,0)
(2,9,0)
(18,8,0)
(11,8,0)
(12,18,0)
(15,2,0)
(2,7,0)
(10,8,0)
(5,18,0)
(7,8,0)
(13,11,1)
(3,5,1)
(17,1,1)
(5,13,1)
(6,11,1)
(12,11,1)
(19,2,1)
(9,6,1)
(2,9,1)
(11,17,1)
(2,15,1)
(12,3,1)
(6,0,1)
(15,9,1)
(18,12,1)
(16,14,1)
(0,16,1)
(14,18,1)
(18,12,2)
(12,11,2)
(9,6,2)
(6,11,2)
(2,9,2)
-----------------------------------
(0,data)
(1,data)
(2,printUnsignedLine(result)
(3,data)
(4,result)
(5,"%u")
(6,data * data)
(7,)
(8,)
(9,result = data * data)
(10,data)
(11,data = 0)
(12,&data)
(13,stdin)
(14,result)
(15,result)
(16,data)
(17,0)
(18,fscanf (stdin, "%u", &data)
(19,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^