-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_add_16_bad()
{
    short data;
    data = 0;
    while(1)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
30,31
30,32
32,33
32,34
33,34
33,35
34,35
35,36
35,37
37,38
37,39
39,40
40,41
40,42
41,42
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,29,31,36,38,42,43,47,49,50
-----computeFrom-----
12,13
12,14
40,41
40,42
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_add_16_bad(){    short data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__short_fscanf_add_16_bad()
CWE190_Integer_Overflow__short_fscanf_add_16_bad
{    short data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }        break;    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);        break;    }
1
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);        break;    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
break;
while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
break;
-----joern-----
(14,23,0)
(17,3,0)
(18,17,0)
(25,16,0)
(11,3,0)
(17,18,0)
(15,21,0)
(2,21,0)
(13,11,0)
(12,18,0)
(11,17,0)
(1,16,0)
(4,21,0)
(27,25,0)
(5,4,0)
(3,23,0)
(8,4,0)
(0,5,0)
(25,5,0)
(22,25,0)
(5,25,0)
(18,4,0)
(9,4,0)
(20,18,0)
(7,17,0)
(6,3,0)
(10,21,0)
(18,4,1)
(7,26,1)
(11,13,1)
(5,0,1)
(20,7,1)
(9,8,1)
(19,26,1)
(11,17,1)
(13,17,1)
(24,4,1)
(18,12,1)
(0,22,1)
(1,25,1)
(5,4,1)
(22,27,1)
(4,9,1)
(26,24,1)
(26,1,1)
(17,18,1)
(27,24,1)
(25,5,1)
(14,11,1)
(12,20,1)
(19,14,1)
(7,26,2)
(11,26,2)
(25,24,2)
(1,24,2)
(18,26,2)
(17,26,2)
(5,4,2)
(14,26,2)
(17,18,2)
(22,24,2)
(12,26,2)
(0,24,2)
(18,4,2)
(11,17,2)
(25,5,2)
(5,24,2)
(13,26,2)
(20,26,2)
(27,24,2)
-----------------------------------
(0,data)
(1,break;)
(2,while(1)
(3,)
(4,data = 0)
(5,&data)
(6,result)
(7,result)
(8,data)
(9,0)
(10,data)
(11,printIntLine(result)
(12,1)
(13,result)
(14,break;)
(15,while(1)
(16,)
(17,result = data + 1)
(18,data + 1)
(19,RET)
(20,data)
(21,)
(22,"%hd")
(23,)
(24,1)
(25,fscanf (stdin, "%hd", &data)
(26,1)
(27,stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^