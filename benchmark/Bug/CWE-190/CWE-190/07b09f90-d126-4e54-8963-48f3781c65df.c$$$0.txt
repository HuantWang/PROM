-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_square_07_bad()
{
    short data;
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */
            short result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
40,41
40,42
42,43
42,44
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,43,47,49,53,55
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_square_07_bad(){    short data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_square_07_bad()
CWE190_Integer_Overflow__short_fscanf_square_07_bad
{    short data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(staticFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }
short result = data * data;
short result = data * data;
short
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(6,27,0)
(20,10,0)
(10,7,0)
(17,12,0)
(3,17,0)
(19,15,0)
(24,7,0)
(25,4,0)
(10,17,0)
(28,26,0)
(16,6,0)
(9,12,0)
(12,0,0)
(29,26,0)
(6,1,0)
(7,26,0)
(14,7,0)
(13,11,0)
(17,10,0)
(18,11,0)
(23,4,0)
(2,1,0)
(21,6,0)
(15,12,0)
(5,10,0)
(15,17,0)
(22,26,0)
(1,7,0)
(1,6,0)
(2,21,1)
(1,7,1)
(18,6,1)
(5,20,1)
(18,4,1)
(8,15,1)
(16,4,1)
(1,2,1)
(21,16,1)
(25,7,1)
(14,24,1)
(13,18,1)
(23,25,1)
(10,5,1)
(20,3,1)
(3,11,1)
(15,19,1)
(6,1,1)
(10,7,1)
(17,10,1)
(19,17,1)
(4,23,1)
(11,13,1)
(15,17,1)
(7,14,1)
(8,11,1)
(20,11,2)
(5,11,2)
(15,17,2)
(2,4,2)
(1,4,2)
(17,11,2)
(1,7,2)
(15,11,2)
(6,1,2)
(17,10,2)
(21,4,2)
(19,11,2)
(6,4,2)
(10,7,2)
(3,11,2)
(10,11,2)
(16,4,2)
-----------------------------------
(0,)
(1,&data)
(2,data)
(3,result)
(4,staticFive==5)
(5,data)
(6,fscanf (stdin, "%hd", &data)
(7,data = 0)
(8,RET)
(9,result)
(10,data * data)
(11,staticFive==5)
(12,)
(13,5)
(14,0)
(15,printIntLine(result)
(16,stdin)
(17,result = data * data)
(18,staticFive)
(19,result)
(20,data)
(21,"%hd")
(22,if(staticFive==5)
(23,5)
(24,data)
(25,staticFive)
(26,)
(27,)
(28,data)
(29,if(staticFive==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^