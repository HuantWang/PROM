-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_preinc_17_bad()
{
    int i,j;
    unsigned int data;
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
43,46
43,47
44,45
45,46
45,47
46,47
49,50
49,51
50,51
53,54
54,55
56,57
57,58
57,59
57,60
58,59
59,60
60,61
62,63
63,64
63,65
65,66
65,67
67,68
68,69
70,71
71,72
71,73
72,73
74,75
-----nextToken-----
2,4,8,10,12,15,17,21,22,27,28,31,32,35,40,42,47,48,51,52,55,61,64,66,69,73,75
-----computeFrom-----
19,20
19,21
25,26
25,27
29,30
29,31
38,39
38,40
45,46
45,47
49,50
49,51
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_preinc_17_bad(){    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_preinc_17_bad()
CWE190_Integer_Overflow__unsigned_int_max_preinc_17_bad
{    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(16,37,0)
(7,24,0)
(0,29,0)
(5,16,0)
(23,1,0)
(32,31,0)
(35,38,0)
(26,38,0)
(2,16,0)
(27,37,0)
(11,32,0)
(24,19,0)
(21,32,0)
(32,16,0)
(17,37,0)
(12,20,0)
(32,24,0)
(6,38,0)
(39,31,0)
(4,20,0)
(3,20,0)
(9,31,0)
(15,38,0)
(25,1,0)
(18,3,0)
(8,15,0)
(2,24,0)
(31,34,0)
(33,15,0)
(28,2,0)
(30,16,0)
(36,37,0)
(10,26,0)
(1,20,0)
(29,24,0)
(22,37,0)
(2,31,0)
(29,32,0)
(13,37,0)
(2,31,1)
(4,12,1)
(29,0,1)
(23,20,1)
(31,39,1)
(3,18,1)
(33,38,1)
(15,8,1)
(21,11,1)
(2,28,1)
(6,16,1)
(12,15,1)
(32,21,1)
(33,26,1)
(32,16,1)
(35,6,1)
(10,31,1)
(1,25,1)
(9,15,1)
(38,35,1)
(25,23,1)
(29,32,1)
(16,30,1)
(26,10,1)
(11,2,1)
(23,3,1)
(8,33,1)
(3,20,1)
(1,20,1)
(2,16,1)
(30,5,1)
(14,1,1)
(0,32,1)
(20,4,1)
(26,38,1)
(15,38,1)
(32,31,1)
(39,9,1)
(28,1,1)
(18,29,1)
(3,20,2)
(2,1,2)
(29,1,2)
(26,38,2)
(21,1,2)
(11,1,2)
(2,31,2)
(33,15,2)
(32,1,2)
(31,15,2)
(15,38,2)
(3,1,2)
(18,1,2)
(2,16,2)
(23,1,2)
(26,15,2)
(10,15,2)
(32,31,2)
(15,15,2)
(29,32,2)
(28,1,2)
(39,15,2)
(8,15,2)
(25,1,2)
(0,1,2)
(9,15,2)
(1,20,2)
(32,16,2)
(1,1,2)
-----------------------------------
(0,result)
(1,j < 1)
(2,++data)
(3,j++)
(4,0)
(5,data)
(6,i)
(7,result)
(8,1)
(9,data)
(10,i)
(11,result)
(12,j)
(13,i)
(14,RET)
(15,i < 1)
(16,data = 0)
(17,j)
(18,j)
(19,)
(20,j = 0)
(21,data)
(22,for(j = 0; j < 1; j++)
(23,j)
(24,)
(25,1)
(26,i++)
(27,for(i = 0; i < 1; i++)
(28,data)
(29,printUnsignedLine(result)
(30,0)
(31,data = UINT_MAX)
(32,result = data)
(33,i)
(34,)
(35,0)
(36,data)
(37,)
(38,i = 0)
(39,UINT_MAX)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^