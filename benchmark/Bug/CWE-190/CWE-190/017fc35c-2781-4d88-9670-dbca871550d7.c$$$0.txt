-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_multiply_66b_badSink(int64_t dataArray[])
{
    /* copy data out of dataArray */
    int64_t data = dataArray[2];
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */
        int64_t result = data * 2;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
13,14
13,15
14,15
16,17
16,18
18,19
19,20
19,21
20,21
23,24
23,25
24,25
24,26
25,26
28,29
28,30
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
40,41
41,42
41,43
42,43
44,45
-----nextToken-----
2,4,7,9,10,15,17,21,22,26,27,32,34,38,39,43,45
-----computeFrom-----
24,25
24,26
36,37
36,38
-----guardedBy-----
26,38
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_multiply_66b_badSink(int64_t dataArray[]){    /* copy data out of dataArray */    int64_t data = dataArray[2];    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_multiply_66b_badSink(int64_t dataArray[])
CWE190_Integer_Overflow__int64_t_fscanf_multiply_66b_badSink
int64_t dataArray[]
int64_t
int64_t
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    int64_t data = dataArray[2];    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }}
int64_t data = dataArray[2];
int64_t data = dataArray[2];
int64_t
int64_t
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }
int64_t result = data * 2;
int64_t result = data * 2;
int64_t
int64_t
result = data * 2
result
= data * 2
data * 2
data
data
2
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(13,15,0)
(15,1,0)
(10,14,0)
(17,10,0)
(15,13,0)
(10,19,0)
(21,15,0)
(3,13,0)
(14,10,0)
(5,21,0)
(21,1,0)
(2,20,0)
(18,1,0)
(13,14,0)
(6,15,0)
(7,20,0)
(4,12,0)
(12,14,0)
(14,20,0)
(0,12,0)
(8,10,0)
(9,14,0)
(16,13,0)
(16,6,1)
(10,8,1)
(3,16,1)
(12,14,1)
(13,3,1)
(13,14,1)
(0,14,1)
(8,17,1)
(11,21,1)
(21,5,1)
(10,19,1)
(11,12,1)
(5,15,1)
(15,13,1)
(17,9,1)
(12,4,1)
(21,15,1)
(4,0,1)
(14,10,1)
(6,12,1)
(6,12,2)
(16,12,2)
(10,19,2)
(13,12,2)
(5,12,2)
(3,12,2)
(21,12,2)
(14,10,2)
(15,12,2)
(15,13,2)
(13,14,2)
(12,14,2)
(21,15,2)
-----------------------------------
(0,data)
(1,)
(2,if(data > 0)
(3,2)
(4,0)
(5,result)
(6,result)
(7,data)
(8,2)
(9,data)
(10,dataArray[2])
(11,RET)
(12,data > 0)
(13,data * 2)
(14,data = dataArray[2])
(15,result = data * 2)
(16,data)
(17,dataArray)
(18,result)
(19,int64_t dataArray[])
(20,)
(21,printLongLongLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^