-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_preinc_31_bad()
{
    char data;
    data = ' ';
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = CHAR_MAX;
    {
        char dataCopy = data;
        char data = dataCopy;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            char result = data;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
23,24
24,25
24,26
26,27
26,28
28,29
29,30
31,32
32,33
32,34
34,35
34,36
36,37
37,38
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
47,48
47,49
49,50
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,21,25,27,30,33,35,38,43,46,48,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_preinc_31_bad(){    char data;    data = ' ';    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_max_preinc_31_bad()
CWE190_Integer_Overflow__char_max_preinc_31_bad
{    char data;    data = ' ';    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
data = CHAR_MAX;
data = CHAR_MAX
data
data
CHAR_MAX
CHAR_MAX
{        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
char dataCopy = data;
char dataCopy = data;
char
dataCopy = data
dataCopy
= data
data
data
char data = dataCopy;
char data = dataCopy;
char
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(13,24,0)
(21,0,0)
(11,9,0)
(14,21,0)
(23,6,0)
(20,13,0)
(22,8,0)
(18,0,0)
(15,0,0)
(22,9,0)
(8,13,0)
(19,6,0)
(21,8,0)
(7,3,0)
(16,24,0)
(9,13,0)
(6,24,0)
(10,22,0)
(9,5,0)
(12,8,0)
(3,24,0)
(0,9,0)
(26,3,0)
(5,13,0)
(5,6,0)
(1,9,0)
(4,13,0)
(25,5,0)
(2,5,0)
(0,8,0)
(3,26,1)
(5,2,1)
(0,18,1)
(5,6,1)
(22,9,1)
(9,5,1)
(11,5,1)
(17,21,1)
(21,14,1)
(18,15,1)
(0,9,1)
(15,22,1)
(14,0,1)
(21,0,1)
(26,7,1)
(19,3,1)
(9,1,1)
(2,25,1)
(10,9,1)
(22,10,1)
(25,6,1)
(23,19,1)
(6,23,1)
(1,11,1)
(5,6,2)
(0,9,2)
(21,0,2)
(22,9,2)
(9,5,2)
-----------------------------------
(0,result = data)
(1,dataCopy)
(2,data)
(3,data = ' ')
(4,data)
(5,dataCopy = data)
(6,data = CHAR_MAX)
(7,data)
(8,)
(9,data = dataCopy)
(10,data)
(11,data)
(12,result)
(13,)
(14,result)
(15,result)
(16,data)
(17,RET)
(18,data)
(19,data)
(20,dataCopy)
(21,printHexCharLine(result)
(22,++data)
(23,CHAR_MAX)
(24,)
(25,dataCopy)
(26,' ')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^