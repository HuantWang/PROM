-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_add_16_bad()
{
    unsigned int data;
    data = 0;
    while(1)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
30,31
30,32
32,33
32,34
33,34
33,35
34,35
35,36
35,37
37,38
37,39
39,40
40,41
40,42
41,42
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,29,31,36,38,42,43,47,49,50
-----computeFrom-----
12,13
12,14
40,41
40,42
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_add_16_bad(){    unsigned int data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_add_16_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_add_16_bad
{    unsigned int data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }        break;    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        break;    }
1
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        break;    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
break;
while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
break;
-----joern-----
(17,25,0)
(10,19,0)
(22,0,0)
(13,19,0)
(27,15,0)
(12,2,0)
(2,6,0)
(8,6,0)
(6,0,0)
(18,26,0)
(16,26,0)
(25,2,0)
(2,25,0)
(20,26,0)
(5,13,0)
(11,2,0)
(26,15,0)
(16,6,0)
(7,13,0)
(1,0,0)
(14,0,0)
(21,5,0)
(26,16,0)
(3,6,0)
(25,13,0)
(5,25,0)
(4,16,0)
(11,17,1)
(23,10,1)
(12,11,1)
(5,25,1)
(26,16,1)
(5,21,1)
(20,24,1)
(2,12,1)
(9,27,1)
(4,18,1)
(6,3,1)
(2,6,1)
(17,9,1)
(9,24,1)
(21,25,1)
(10,5,1)
(27,26,1)
(16,6,1)
(16,4,1)
(24,6,1)
(18,20,1)
(25,2,1)
(23,9,1)
(3,8,1)
(26,16,2)
(26,24,2)
(16,6,2)
(5,9,2)
(25,9,2)
(20,24,2)
(27,24,2)
(10,9,2)
(18,24,2)
(16,24,2)
(5,25,2)
(17,9,2)
(4,24,2)
(21,9,2)
(25,2,2)
(2,9,2)
(2,6,2)
(11,9,2)
(12,9,2)
-----------------------------------
(0,)
(1,data)
(2,data + 1)
(3,0)
(4,data)
(5,printUnsignedLine(result)
(6,data = 0)
(7,result)
(8,data)
(9,1)
(10,break;)
(11,data)
(12,1)
(13,)
(14,while(1)
(15,)
(16,&data)
(17,result)
(18,"%u")
(19,)
(20,stdin)
(21,result)
(22,while(1)
(23,RET)
(24,1)
(25,result = data + 1)
(26,fscanf (stdin, "%u", &data)
(27,break;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^