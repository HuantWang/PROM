-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_07_bad()
{
    unsigned int data;
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(staticFive==5)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
            unsigned int result = data * 2;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
39,41
40,41
43,44
43,45
44,45
45,46
45,47
47,48
47,49
49,50
50,51
50,52
51,52
54,55
55,56
55,57
56,57
58,59
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,42,46,48,52,53,57,59
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
39,40
39,41
50,51
50,52
-----guardedBy-----
41,52
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_07_bad(){    unsigned int data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(staticFive==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_07_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_07_bad
{    unsigned int data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(staticFive==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(staticFive==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(22,3,0)
(24,30,0)
(33,9,0)
(6,3,0)
(29,24,0)
(31,15,0)
(2,32,0)
(4,9,0)
(1,17,0)
(12,7,0)
(0,14,0)
(18,5,0)
(5,32,0)
(31,24,0)
(11,5,0)
(17,1,0)
(25,17,0)
(20,1,0)
(30,24,0)
(13,17,0)
(30,32,0)
(27,30,0)
(8,32,0)
(26,7,0)
(23,31,0)
(21,9,0)
(19,30,0)
(24,15,0)
(17,28,0)
(16,15,0)
(32,9,0)
(1,32,0)
(32,2,1)
(31,23,1)
(30,27,1)
(1,20,1)
(27,19,1)
(7,26,1)
(18,11,1)
(24,30,1)
(19,29,1)
(3,22,1)
(30,32,1)
(23,24,1)
(10,3,1)
(1,32,1)
(13,7,1)
(31,24,1)
(12,32,1)
(5,32,1)
(17,1,1)
(11,3,1)
(5,18,1)
(22,6,1)
(6,17,1)
(6,7,1)
(25,13,1)
(26,12,1)
(10,5,1)
(2,8,1)
(20,25,1)
(29,5,1)
(10,31,1)
(29,5,2)
(5,32,2)
(19,5,2)
(31,24,2)
(11,3,2)
(13,7,2)
(1,32,2)
(20,7,2)
(17,7,2)
(24,30,2)
(30,32,2)
(18,3,2)
(23,5,2)
(27,5,2)
(5,3,2)
(1,7,2)
(31,5,2)
(25,7,2)
(30,5,2)
(17,1,2)
(24,5,2)
-----------------------------------
(0,if(data > 0)
(1,&data)
(2,0)
(3,staticFive==5)
(4,data)
(5,data > 0)
(6,staticFive)
(7,staticFive==5)
(8,data)
(9,)
(10,RET)
(11,data)
(12,staticFive)
(13,stdin)
(14,)
(15,)
(16,result)
(17,fscanf (stdin, "%u", &data)
(18,0)
(19,data)
(20,data)
(21,if(staticFive==5)
(22,5)
(23,result)
(24,result = data * 2)
(25,"%u")
(26,5)
(27,2)
(28,)
(29,result)
(30,data * 2)
(31,printUnsignedLine(result)
(32,data = 0)
(33,if(staticFive==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^