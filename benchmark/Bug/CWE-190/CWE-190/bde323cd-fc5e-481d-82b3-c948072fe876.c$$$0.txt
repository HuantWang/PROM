-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_add_03_bad()
{
    short data;
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
33,34
33,35
36,37
37,38
37,39
38,39
39,40
39,41
41,42
41,43
43,44
44,45
44,46
45,46
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,18,19,24,27,28,31,34,35,40,42,46,47,51,53
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
33,34
33,35
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_add_03_bad(){    short data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_add_03_bad()
CWE190_Integer_Overflow__short_rand_add_03_bad
{    short data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
5==5
5
5
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(25,13,0)
(13,3,0)
(17,1,0)
(26,23,0)
(8,20,0)
(26,21,0)
(10,26,0)
(21,23,0)
(13,1,0)
(7,20,0)
(3,2,0)
(15,3,0)
(22,11,0)
(4,11,0)
(11,1,0)
(11,4,0)
(19,2,0)
(1,11,0)
(18,13,0)
(11,22,0)
(27,21,0)
(23,28,0)
(0,3,0)
(21,13,0)
(1,24,0)
(13,21,0)
(16,12,0)
(29,2,0)
(9,12,0)
(6,23,0)
(14,2,0)
(11,22,1)
(21,13,1)
(27,12,1)
(16,20,1)
(20,8,1)
(3,15,1)
(12,9,1)
(1,11,1)
(13,18,1)
(26,21,1)
(5,12,1)
(13,3,1)
(17,20,1)
(18,25,1)
(7,3,1)
(10,21,1)
(25,27,1)
(5,26,1)
(26,10,1)
(9,16,1)
(13,1,1)
(16,1,1)
(11,4,1)
(15,0,1)
(8,7,1)
(22,17,1)
(21,13,2)
(13,12,2)
(1,20,2)
(1,11,2)
(27,12,2)
(26,12,2)
(13,1,2)
(11,20,2)
(11,4,2)
(13,3,2)
(18,12,2)
(26,21,2)
(22,20,2)
(10,12,2)
(11,22,2)
(21,12,2)
(25,12,2)
(17,20,2)
-----------------------------------
(0,data)
(1,data = (short)
(2,)
(3,data = 0)
(4,short)
(5,RET)
(6,result)
(7,5)
(8,5)
(9,5)
(10,result)
(11,(short)
(12,5==5)
(13,data + 1)
(14,if(5==5)
(15,0)
(16,5)
(17,data)
(18,1)
(19,data)
(20,5==5)
(21,result = data + 1)
(22,RAND32()
(23,)
(24,)
(25,data)
(26,printIntLine(result)
(27,result)
(28,)
(29,if(5==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^