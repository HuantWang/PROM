-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_square_11_bad()
{
    unsigned int data;
    data = 0;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
29,30
31,32
32,33
32,34
33,34
34,35
34,36
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,8,10,14,15,19,24,26,30,35,37,41,43,47,49
-----computeFrom-----
12,13
12,14
22,23
22,24
39,40
39,41
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_square_11_bad(){    unsigned int data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_square_11_bad()
CWE190_Integer_Overflow__unsigned_int_max_square_11_bad
{    unsigned int data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(2,16,0)
(22,16,0)
(18,11,0)
(12,23,0)
(23,18,0)
(20,4,0)
(8,18,0)
(3,4,0)
(20,3,0)
(13,20,0)
(21,14,0)
(1,18,0)
(9,4,0)
(5,23,0)
(4,19,0)
(10,14,0)
(15,16,0)
(7,3,0)
(14,16,0)
(23,3,0)
(3,23,0)
(23,14,0)
(0,18,1)
(23,5,1)
(7,0,1)
(0,17,1)
(20,3,1)
(23,18,1)
(13,3,1)
(8,1,1)
(5,12,1)
(3,23,1)
(14,21,1)
(23,14,1)
(20,13,1)
(6,0,1)
(1,17,1)
(18,8,1)
(12,7,1)
(21,10,1)
(6,20,1)
(17,14,1)
(18,17,2)
(3,0,2)
(12,0,2)
(3,23,2)
(23,18,2)
(23,0,2)
(5,0,2)
(20,3,2)
(8,17,2)
(7,0,2)
(13,0,2)
(23,14,2)
(20,0,2)
(1,17,2)
-----------------------------------
(0,globalReturnsTrue()
(1,data)
(2,data)
(3,result = data * data)
(4,)
(5,data)
(6,RET)
(7,result)
(8,UINT_MAX)
(9,result)
(10,data)
(11,)
(12,data)
(13,result)
(14,data = 0)
(15,if(globalReturnsTrue()
(16,)
(17,globalReturnsTrue()
(18,data = UINT_MAX)
(19,)
(20,printUnsignedLine(result)
(21,0)
(22,if(globalReturnsTrue()
(23,data * data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^