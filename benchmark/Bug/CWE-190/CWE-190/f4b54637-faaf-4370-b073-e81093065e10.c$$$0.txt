-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_17_bad()
{
    int i,j;
    unsigned int data;
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    for(j = 0; j < 1; j++)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
            unsigned int result = data * 2;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
38,39
38,40
38,41
38,42
39,40
41,42
44,45
45,46
47,48
47,49
47,50
47,51
48,49
49,50
49,51
50,51
53,54
53,55
54,55
57,58
58,59
60,61
61,62
61,63
62,63
62,64
63,64
66,67
66,68
67,68
68,69
68,70
70,71
70,72
72,73
73,74
73,75
74,75
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,8,10,12,15,17,21,22,27,28,31,32,35,40,42,43,46,51,52,55,56,59,64,65,69,71,75,76,80,82
-----computeFrom-----
19,20
19,21
25,26
25,27
29,30
29,31
49,50
49,51
53,54
53,55
62,63
62,64
73,74
73,75
-----guardedBy-----
64,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_17_bad(){    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    for(j = 0; j < 1; j++)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_17_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_17_bad
{    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    for(j = 0; j < 1; j++)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
for(j = 0; j < 1; j++)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(1,43,0)
(22,29,0)
(13,16,0)
(5,25,0)
(19,17,0)
(29,22,0)
(11,45,0)
(17,26,0)
(16,25,0)
(41,24,0)
(7,22,0)
(1,40,0)
(6,25,0)
(43,1,0)
(36,8,0)
(38,1,0)
(14,22,0)
(42,1,0)
(33,45,0)
(21,24,0)
(22,16,0)
(2,26,0)
(15,25,0)
(8,16,0)
(18,2,0)
(27,25,0)
(20,43,0)
(3,16,0)
(29,24,0)
(12,8,0)
(37,26,0)
(39,26,0)
(34,21,0)
(31,28,0)
(0,23,0)
(35,29,0)
(44,4,0)
(30,25,0)
(43,16,0)
(23,4,0)
(10,17,0)
(32,4,0)
(45,4,0)
(21,29,0)
(17,26,1)
(43,16,1)
(23,0,1)
(21,29,1)
(2,18,1)
(21,34,1)
(38,42,1)
(2,26,1)
(42,17,1)
(11,4,1)
(18,1,1)
(43,20,1)
(8,36,1)
(10,19,1)
(22,14,1)
(14,7,1)
(19,2,1)
(33,11,1)
(0,21,1)
(36,12,1)
(45,4,1)
(22,16,1)
(20,38,1)
(23,4,1)
(37,16,1)
(17,10,1)
(9,45,1)
(45,33,1)
(3,13,1)
(19,26,1)
(16,3,1)
(44,32,1)
(34,29,1)
(39,37,1)
(35,8,1)
(26,39,1)
(4,44,1)
(29,22,1)
(0,8,1)
(8,16,1)
(12,45,1)
(1,43,1)
(11,23,1)
(32,17,1)
(7,35,1)
(7,8,2)
(42,17,2)
(17,17,2)
(1,17,2)
(23,45,2)
(34,8,2)
(17,26,2)
(21,8,2)
(20,17,2)
(0,45,2)
(10,17,2)
(2,26,2)
(21,29,2)
(14,8,2)
(43,16,2)
(38,17,2)
(8,16,2)
(11,45,2)
(43,17,2)
(18,17,2)
(22,16,2)
(29,22,2)
(23,4,2)
(29,8,2)
(22,8,2)
(45,45,2)
(35,8,2)
(1,43,2)
(45,4,2)
(19,17,2)
(2,17,2)
(8,45,2)
(33,45,2)
(36,45,2)
(12,45,2)
-----------------------------------
(0,j)
(1,fscanf (stdin, "%u", &data)
(2,i++)
(3,0)
(4,j = 0)
(5,data)
(6,i)
(7,data)
(8,data > 0)
(9,RET)
(10,1)
(11,j)
(12,data)
(13,data)
(14,2)
(15,for(i = 0; i < 1; i++)
(16,data = 0)
(17,i < 1)
(18,i)
(19,i)
(20,data)
(21,printUnsignedLine(result)
(22,data * 2)
(23,j++)
(24,)
(25,)
(26,i = 0)
(27,j)
(28,)
(29,result = data * 2)
(30,for(j = 0; j < 1; j++)
(31,if(data > 0)
(32,j)
(33,1)
(34,result)
(35,result)
(36,0)
(37,i)
(38,"%u")
(39,0)
(40,)
(41,result)
(42,stdin)
(43,&data)
(44,0)
(45,j < 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^