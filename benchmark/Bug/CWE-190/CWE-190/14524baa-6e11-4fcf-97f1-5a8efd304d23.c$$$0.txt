-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_preinc_65_bad()
{
    int64_t data;
    /* define a function pointer */
    void (*funcPtr) (int64_t) = CWE190_Integer_Overflow__int64_t_rand_preinc_65b_badSink;
    data = 0LL;
    /* POTENTIAL FLAW: Use a random value */
    data = (int64_t)RAND64();
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
20,21
22,23
24,25
25,26
27,28
28,29
28,30
29,30
32,33
33,34
33,35
34,35
36,37
36,38
37,38
37,39
38,39
41,42
42,43
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,9,11,14,17,18,21,23,26,30,31,35,39,40,43,47,49
-----computeFrom-----
28,29
28,30
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_preinc_65_bad(){    int64_t data;    /* define a function pointer */    void (*funcPtr) (int64_t) = CWE190_Integer_Overflow__int64_t_rand_preinc_65b_badSink;    data = 0LL;    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    /* use the function pointer */    funcPtr(data);}
void
CWE190_Integer_Overflow__int64_t_rand_preinc_65_bad()
CWE190_Integer_Overflow__int64_t_rand_preinc_65_bad
{    int64_t data;    /* define a function pointer */    void (*funcPtr) (int64_t) = CWE190_Integer_Overflow__int64_t_rand_preinc_65b_badSink;    data = 0LL;    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    /* use the function pointer */    funcPtr(data);}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
void (*funcPtr) (int64_t) = CWE190_Integer_Overflow__int64_t_rand_preinc_65b_badSink;
void (*funcPtr) (int64_t) = CWE190_Integer_Overflow__int64_t_rand_preinc_65b_badSink;
void
(*funcPtr) (int64_t) = CWE190_Integer_Overflow__int64_t_rand_preinc_65b_badSink
*funcPtr
*
funcPtr
int64_t
int64_t
int64_t


= CWE190_Integer_Overflow__int64_t_rand_preinc_65b_badSink
CWE190_Integer_Overflow__int64_t_rand_preinc_65b_badSink
CWE190_Integer_Overflow__int64_t_rand_preinc_65b_badSink
data = 0LL;
data = 0LL
data
data
0LL
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(9,14,0)
(6,10,0)
(12,8,0)
(0,10,0)
(5,13,0)
(13,14,0)
(1,8,0)
(0,14,0)
(10,14,0)
(10,8,0)
(8,1,0)
(8,12,0)
(8,10,0)
(3,14,0)
(4,14,0)
(2,13,0)
(7,0,0)
(7,10,1)
(12,6,1)
(8,12,1)
(0,10,1)
(10,8,1)
(13,5,1)
(4,13,1)
(0,7,1)
(5,2,1)
(6,4,1)
(11,0,1)
(8,1,1)
(10,8,2)
(0,10,2)
(8,12,2)
(8,1,2)
-----------------------------------
(0,funcPtr(data)
(1,int64_t)
(2,funcPtr)
(3,data)
(4,L)
(5,CWE190_Integer_Overflow__int64_t_rand_preinc_65b_badSink)
(6,data)
(7,data)
(8,(int64_t)
(9,funcPtr)
(10,data = (int64_t)
(11,RET)
(12,RAND64()
(13,(*funcPtr)
(14,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^