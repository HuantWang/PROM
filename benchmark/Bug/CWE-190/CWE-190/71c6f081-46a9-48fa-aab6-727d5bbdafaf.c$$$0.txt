-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_square_31_bad()
{
    unsigned int data;
    data = 0;
    /* POTENTIAL FLAW: Use a random value */
    data = (unsigned int)RAND32();
    {
        unsigned int dataCopy = data;
        unsigned int data = dataCopy;
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
21,23
24,25
25,26
27,28
27,29
27,30
28,29
29,30
29,31
31,32
31,33
33,34
34,35
36,37
37,38
37,39
39,40
39,41
41,42
42,43
44,45
44,46
45,46
46,47
46,48
48,49
48,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
58,59
60,61
-----nextToken-----
2,4,8,10,14,15,19,22,23,26,30,32,35,38,40,43,47,49,53,55,59,61
-----computeFrom-----
12,13
12,14
17,18
17,19
51,52
51,53
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_square_31_bad(){    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a random value */    data = (unsigned int)RAND32();    {        unsigned int dataCopy = data;        unsigned int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_square_31_bad()
CWE190_Integer_Overflow__unsigned_int_rand_square_31_bad
{    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a random value */    data = (unsigned int)RAND32();    {        unsigned int dataCopy = data;        unsigned int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
{        unsigned int dataCopy = data;        unsigned int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
unsigned int dataCopy = data;
unsigned int dataCopy = data;
unsigned int
dataCopy = data
dataCopy
= data
data
data
unsigned int data = dataCopy;
unsigned int data = dataCopy;
unsigned int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(16,0,0)
(4,15,0)
(24,2,0)
(28,8,0)
(9,25,0)
(27,15,0)
(23,0,0)
(3,6,0)
(4,2,0)
(17,2,0)
(23,14,0)
(0,23,0)
(7,14,0)
(28,25,0)
(6,4,0)
(25,2,0)
(8,6,0)
(20,6,0)
(11,7,0)
(13,0,0)
(2,14,0)
(1,28,0)
(5,23,0)
(15,2,0)
(12,15,0)
(0,16,0)
(6,8,0)
(19,8,0)
(0,13,0)
(8,25,0)
(22,4,0)
(15,23,0)
(18,14,0)
(26,7,0)
(10,4,0)
(1,8,1)
(13,5,1)
(3,19,1)
(8,6,1)
(28,1,1)
(19,4,1)
(0,16,1)
(21,28,1)
(23,0,1)
(12,27,1)
(20,3,1)
(4,10,1)
(5,7,1)
(0,13,1)
(27,23,1)
(22,15,1)
(15,12,1)
(15,23,1)
(10,22,1)
(6,20,1)
(28,8,1)
(6,4,1)
(7,26,1)
(26,11,1)
(4,15,1)
(28,8,2)
(0,16,2)
(0,13,2)
(4,15,2)
(6,4,2)
(15,23,2)
(8,6,2)
(23,0,2)
-----------------------------------
(0,(unsigned int)
(1,result)
(2,)
(3,data)
(4,data = dataCopy)
(5,data)
(6,data * data)
(7,data = 0)
(8,result = data * data)
(9,result)
(10,dataCopy)
(11,data)
(12,data)
(13,RAND32()
(14,)
(15,dataCopy = data)
(16,unsigned int)
(17,dataCopy)
(18,data)
(19,result)
(20,data)
(21,RET)
(22,data)
(23,data = (unsigned int)
(24,data)
(25,)
(26,0)
(27,dataCopy)
(28,printUnsignedLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^