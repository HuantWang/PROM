-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    int * dataPtr = (int *)dataVoidPtr;
    /* dereference dataPtr into data */
    int data = (*dataPtr);
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        int result = data + 1;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,38,40,44,45,49,51
-----computeFrom-----
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_fgets_add_64b_badSink(void * dataVoidPtr)
CWE190_Integer_Overflow__int_fgets_add_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
int * dataPtr = (int *)dataVoidPtr;
int * dataPtr = (int *)dataVoidPtr;
int
* dataPtr = (int *)dataVoidPtr
*
dataPtr
= (int *)dataVoidPtr
(int *)dataVoidPtr
int *
int
*
*
dataVoidPtr
dataVoidPtr
int data = (*dataPtr);
int data = (*dataPtr);
int
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(1,10,0)
(6,10,0)
(10,19,0)
(11,4,0)
(15,20,0)
(17,4,0)
(18,20,0)
(21,9,0)
(9,5,0)
(16,7,0)
(5,7,0)
(19,11,0)
(4,7,0)
(14,11,0)
(20,3,0)
(19,7,0)
(10,6,0)
(22,19,0)
(20,4,0)
(12,10,0)
(11,19,0)
(4,20,0)
(6,5,0)
(9,6,0)
(20,18,0)
(0,6,0)
(13,7,0)
(8,5,0)
(20,3,1)
(12,0,1)
(9,6,1)
(1,12,1)
(11,4,1)
(14,22,1)
(9,21,1)
(22,4,1)
(2,9,1)
(20,15,1)
(19,11,1)
(10,19,1)
(21,6,1)
(0,19,1)
(6,10,1)
(20,18,1)
(11,14,1)
(15,17,1)
(4,20,1)
(10,1,1)
(6,10,2)
(10,19,2)
(20,18,2)
(19,11,2)
(4,20,2)
(11,4,2)
(9,6,2)
(20,3,2)
-----------------------------------
(0,result)
(1,1)
(2,RET)
(3,void * dataVoidPtr)
(4,* dataPtr = (int *)
(5,)
(6,result = data + 1)
(7,)
(8,result)
(9,printIntLine(result)
(10,data + 1)
(11,*dataPtr)
(12,data)
(13,data)
(14,dataPtr)
(15,dataVoidPtr)
(16,dataPtr)
(17,dataPtr)
(18,int *)
(19,data = (*dataPtr)
(20,(int *)
(21,result)
(22,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^