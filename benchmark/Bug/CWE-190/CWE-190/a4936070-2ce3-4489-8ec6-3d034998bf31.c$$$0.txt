-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_bad()
{
    unsigned int data;
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_bad(){    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_bad
{    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(21,18,0)
(22,20,0)
(12,21,0)
(4,9,0)
(8,2,0)
(1,14,0)
(5,21,0)
(15,5,0)
(2,14,0)
(0,14,0)
(17,1,0)
(6,13,0)
(13,16,0)
(1,21,0)
(3,14,0)
(19,20,0)
(11,13,0)
(5,14,0)
(25,5,0)
(13,2,0)
(9,5,0)
(2,13,0)
(14,20,0)
(9,21,0)
(7,20,0)
(24,23,1)
(9,5,1)
(2,14,1)
(5,14,1)
(23,14,1)
(25,15,1)
(17,24,1)
(13,2,1)
(4,5,1)
(0,3,1)
(2,8,1)
(1,14,1)
(10,9,1)
(1,17,1)
(10,24,1)
(9,4,1)
(11,6,1)
(14,0,1)
(5,25,1)
(8,11,1)
(15,1,1)
(24,13,1)
(6,23,1)
(13,23,2)
(9,24,2)
(4,24,2)
(2,14,2)
(13,2,2)
(6,23,2)
(5,24,2)
(15,24,2)
(1,14,2)
(11,23,2)
(5,14,2)
(2,23,2)
(1,24,2)
(8,23,2)
(9,5,2)
(17,24,2)
(25,24,2)
-----------------------------------
(0,0)
(1,++data)
(2,&data)
(3,data)
(4,result)
(5,result = data)
(6,stdin)
(7,if(globalTrue)
(8,data)
(9,printUnsignedLine(result)
(10,RET)
(11,"%u")
(12,result)
(13,fscanf (stdin, "%u", &data)
(14,data = 0)
(15,result)
(16,)
(17,data)
(18,)
(19,data)
(20,)
(21,)
(22,if(globalTrue)
(23,globalTrue)
(24,globalTrue)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^