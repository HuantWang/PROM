-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_add_18_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    goto source;
source:
    /* POTENTIAL FLAW: Read data from the console using fscanf() */
    fscanf(stdin, "%d", &data);
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        int result = data + 1;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
32,33
32,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,26,29,31,33,37,39,43,44,48,50
-----computeFrom-----
12,13
12,14
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_add_18_bad(){    int data;    /* Initialize data */    data = 0;    goto source;source:    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    goto sink;sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_fscanf_add_18_bad()
CWE190_Integer_Overflow__int_fscanf_add_18_bad
{    int data;    /* Initialize data */    data = 0;    goto source;source:    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    goto sink;sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);
source
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }
sink
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(11,14,0)
(20,18,0)
(5,0,0)
(6,18,0)
(19,18,0)
(16,12,0)
(22,18,0)
(21,0,0)
(8,14,0)
(3,18,0)
(7,14,0)
(10,12,0)
(0,22,0)
(15,7,0)
(21,12,0)
(12,18,0)
(2,22,0)
(7,22,0)
(23,21,0)
(4,18,0)
(14,18,0)
(17,0,0)
(0,21,0)
(13,16,0)
(14,7,0)
(16,21,0)
(9,22,0)
(5,17,1)
(7,15,1)
(20,22,1)
(2,9,1)
(11,8,1)
(6,14,1)
(23,6,1)
(22,2,1)
(16,21,1)
(13,21,1)
(1,16,1)
(14,7,1)
(0,5,1)
(17,23,1)
(7,22,1)
(16,13,1)
(21,0,1)
(0,22,1)
(8,20,1)
(15,11,1)
(0,22,2)
(21,0,2)
(7,22,2)
(14,7,2)
(16,21,2)
-----------------------------------
(0,data + 1)
(1,RET)
(2,0)
(3,sink:)
(4,data)
(5,1)
(6,goto sink;)
(7,&data)
(8,stdin)
(9,data)
(10,result)
(11,"%d")
(12,)
(13,result)
(14,fscanf(stdin, "%d", &data)
(15,data)
(16,printIntLine(result)
(17,data)
(18,)
(19,source:)
(20,goto source;)
(21,result = data + 1)
(22,data = 0)
(23,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^