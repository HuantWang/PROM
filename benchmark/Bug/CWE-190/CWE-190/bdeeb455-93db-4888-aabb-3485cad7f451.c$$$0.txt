-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_31_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    {
        int dataCopy = data;
        int data = dataCopy;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
18,20
20,21
20,22
20,23
22,23
23,24
25,26
27,28
27,29
27,30
28,29
28,30
29,30
29,31
29,32
29,33
30,31
32,33
34,35
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
56,57
56,58
56,59
57,58
58,59
58,60
60,61
60,62
62,63
63,64
65,66
66,67
66,68
68,69
68,70
70,71
71,72
73,74
73,75
74,75
75,76
75,77
77,78
77,79
79,80
80,81
80,82
81,82
84,85
85,86
85,87
86,87
88,89
-----nextToken-----
2,4,8,10,14,15,19,21,24,26,31,33,35,37,39,44,47,49,54,55,59,61,64,67,69,72,76,78,82,83,87,89
-----computeFrom-----
12,13
12,14
28,29
28,30
42,43
42,44
80,81
80,82
-----guardedBy-----
33,49
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_31_bad(){    int data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_add_31_bad()
CWE190_Integer_Overflow__int_fgets_add_31_bad
{    int data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
int dataCopy = data;
int dataCopy = data;
int
dataCopy = data
dataCopy
= data
data
data
int data = dataCopy;
int data = dataCopy;
int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(36,19,0)
(6,2,0)
(36,35,0)
(29,2,0)
(14,37,0)
(35,38,0)
(42,4,0)
(37,21,0)
(19,4,0)
(37,16,0)
(12,6,0)
(38,17,0)
(25,17,0)
(2,17,0)
(41,6,0)
(27,6,0)
(18,11,0)
(28,2,0)
(12,31,0)
(0,14,0)
(34,36,0)
(7,12,0)
(13,19,0)
(31,12,0)
(5,15,0)
(19,36,0)
(15,36,0)
(26,18,0)
(14,10,0)
(23,19,0)
(9,12,0)
(4,38,0)
(21,37,0)
(10,17,0)
(43,10,0)
(21,6,0)
(4,14,0)
(8,4,0)
(32,35,0)
(30,38,0)
(15,35,0)
(20,14,0)
(40,21,0)
(39,31,0)
(24,12,0)
(14,38,0)
(33,38,0)
(22,10,0)
(1,37,0)
(7,24,1)
(19,4,1)
(14,0,1)
(13,34,1)
(4,8,1)
(34,4,1)
(9,6,1)
(15,36,1)
(12,6,1)
(40,1,1)
(12,7,1)
(31,12,1)
(19,23,1)
(20,37,1)
(37,21,1)
(4,14,1)
(18,26,1)
(41,10,1)
(0,20,1)
(21,40,1)
(26,31,1)
(43,22,1)
(14,37,1)
(36,19,1)
(5,36,1)
(10,43,1)
(27,41,1)
(1,31,1)
(42,14,1)
(31,39,1)
(15,5,1)
(14,10,1)
(24,9,1)
(23,13,1)
(8,42,1)
(39,12,1)
(6,27,1)
(3,15,1)
(21,6,1)
(20,18,1)
(31,12,2)
(21,6,2)
(36,19,2)
(18,31,2)
(1,31,2)
(12,6,2)
(15,36,2)
(40,31,2)
(4,14,2)
(37,31,2)
(19,4,2)
(21,31,2)
(37,21,2)
(14,37,2)
(14,10,2)
(26,31,2)
-----------------------------------
(0,data)
(1,data)
(2,)
(3,RET)
(4,data = dataCopy)
(5,result)
(6,inputBuffer[CHAR_ARRAY_SIZE] = "")
(7,stdin)
(8,dataCopy)
(9,inputBuffer)
(10,data = 0)
(11,)
(12,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(13,data)
(14,dataCopy = data)
(15,printIntLine(result)
(16,)
(17,)
(18,printLine("fgets()
(19,data + 1)
(20,dataCopy)
(21,atoi(inputBuffer)
(22,data)
(23,1)
(24,CHAR_ARRAY_SIZE)
(25,data)
(26,"fgets()
(27,"")
(28,inputBuffer)
(29,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(30,data)
(31,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(32,result)
(33,dataCopy)
(34,result)
(35,)
(36,result = data + 1)
(37,data = atoi(inputBuffer)
(38,)
(39,NULL)
(40,inputBuffer)
(41,inputBuffer)
(42,data)
(43,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^