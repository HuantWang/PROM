-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_rand_preinc_53d_badSink(char data)
{
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        ++data;
        char result = data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
10,13
11,12
12,13
13,14
15,16
16,17
16,18
18,19
18,20
20,21
21,22
23,24
24,25
24,26
25,26
27,28
-----nextToken-----
2,4,6,8,14,17,19,22,26,28
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_rand_preinc_53d_badSink(char data){    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_rand_preinc_53d_badSink(char data)
CWE190_Integer_Overflow__char_rand_preinc_53d_badSink
char data
char
data
data
{    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }}
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(4,1,0)
(0,3,0)
(0,10,0)
(1,10,0)
(11,1,0)
(1,3,0)
(6,10,0)
(9,10,0)
(2,0,0)
(6,1,0)
(8,6,0)
(10,5,0)
(0,3,1)
(1,3,1)
(6,1,1)
(7,6,1)
(11,0,1)
(0,2,1)
(1,4,1)
(6,8,1)
(8,1,1)
(4,11,1)
(1,3,2)
(0,3,2)
(6,1,2)
-----------------------------------
(0,++data)
(1,result = data)
(2,data)
(3,char data)
(4,data)
(5,)
(6,printHexCharLine(result)
(7,RET)
(8,result)
(9,result)
(10,)
(11,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^