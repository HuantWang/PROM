-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_add_14_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    if(globalFive==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
27,28
29,30
29,31
30,31
30,32
31,32
34,35
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,32,33,38,40,44,45,49,51
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
30,31
30,32
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_add_14_bad(){    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_rand_add_14_bad()
CWE190_Integer_Overflow__int_rand_add_14_bad
{    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(26,6,0)
(6,20,0)
(6,1,0)
(20,16,0)
(0,12,0)
(18,1,0)
(1,8,0)
(12,3,0)
(20,15,0)
(13,21,0)
(5,8,0)
(3,23,0)
(6,7,0)
(16,20,0)
(17,21,0)
(19,7,0)
(7,6,0)
(24,6,0)
(27,8,0)
(25,2,0)
(12,7,0)
(9,20,0)
(7,3,0)
(4,3,0)
(14,2,0)
(22,1,0)
(10,8,0)
(13,1,1)
(12,7,1)
(20,16,1)
(14,21,1)
(25,14,1)
(1,18,1)
(7,6,1)
(26,19,1)
(11,12,1)
(16,9,1)
(9,21,1)
(18,22,1)
(12,0,1)
(6,24,1)
(24,26,1)
(0,7,1)
(14,20,1)
(6,1,1)
(17,13,1)
(21,17,1)
(11,2,1)
(6,20,1)
(19,2,1)
(2,25,1)
(26,2,2)
(6,2,2)
(12,7,2)
(16,21,2)
(9,21,2)
(7,2,2)
(6,20,2)
(7,6,2)
(20,21,2)
(19,2,2)
(20,16,2)
(24,2,2)
(12,2,2)
(0,2,2)
(6,1,2)
-----------------------------------
(0,result)
(1,data = 0)
(2,globalFive==5)
(3,)
(4,result)
(5,data)
(6,data + 1)
(7,result = data + 1)
(8,)
(9,data)
(10,if(globalFive==5)
(11,RET)
(12,printIntLine(result)
(13,globalFive)
(14,globalFive)
(15,)
(16,RAND32()
(17,5)
(18,0)
(19,result)
(20,data = RAND32()
(21,globalFive==5)
(22,data)
(23,)
(24,1)
(25,5)
(26,data)
(27,if(globalFive==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^