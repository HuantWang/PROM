-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_add_06_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,37,39,43,44,48,50
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_add_06_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_add_06_bad()
CWE190_Integer_Overflow__int_max_add_06_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(0,22,0)
(24,17,0)
(7,14,0)
(23,26,0)
(22,7,0)
(26,5,0)
(12,7,0)
(9,27,0)
(3,11,0)
(11,5,0)
(22,26,0)
(8,16,0)
(22,1,0)
(11,26,0)
(21,22,0)
(18,5,0)
(5,4,0)
(13,16,0)
(10,7,0)
(15,17,0)
(6,1,0)
(20,17,0)
(26,22,0)
(1,17,0)
(2,27,0)
(25,1,0)
(13,7,1)
(21,0,1)
(22,1,1)
(26,22,1)
(27,9,1)
(10,27,1)
(23,16,1)
(8,13,1)
(19,16,1)
(22,21,1)
(22,7,1)
(25,6,1)
(16,8,1)
(19,11,1)
(11,3,1)
(9,2,1)
(12,10,1)
(11,26,1)
(3,26,1)
(7,12,1)
(1,25,1)
(13,27,1)
(0,23,1)
(2,1,1)
(21,16,2)
(22,1,2)
(23,16,2)
(12,27,2)
(11,26,2)
(22,16,2)
(0,16,2)
(7,27,2)
(26,16,2)
(11,16,2)
(26,22,2)
(10,27,2)
(3,16,2)
(22,7,2)
-----------------------------------
(0,data)
(1,data = 0)
(2,STATIC_CONST_FIVE)
(3,result)
(4,)
(5,)
(6,data)
(7,data = INT_MAX)
(8,5)
(9,5)
(10,data)
(11,printIntLine(result)
(12,INT_MAX)
(13,STATIC_CONST_FIVE)
(14,)
(15,if(STATIC_CONST_FIVE==5)
(16,STATIC_CONST_FIVE==5)
(17,)
(18,result)
(19,RET)
(20,data)
(21,1)
(22,data + 1)
(23,result)
(24,if(STATIC_CONST_FIVE==5)
(25,0)
(26,result = data + 1)
(27,STATIC_CONST_FIVE==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^