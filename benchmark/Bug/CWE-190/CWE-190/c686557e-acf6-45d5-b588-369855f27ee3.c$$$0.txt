-----label-----
1
-----code-----
static int64_t badSource(int64_t data)
{
    /* POTENTIAL FLAW: Use a random value */
    data = (int64_t)RAND64();
    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
6,7
6,8
7,8
9,10
11,12
11,13
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
18,19
21,22
22,23
24,25
25,26
-----nextToken-----
3,5,8,10,15,19,20,23,26
-----computeFrom-----
13,14
13,15
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static int64_t badSource(int64_t data){    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    return data;}
static int64_t
int64_t
badSource(int64_t data)
badSource
int64_t data
int64_t
int64_t
data
data
{    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    return data;}
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
return data;
data
data
-----joern-----
(9,6,0)
(6,1,0)
(4,1,0)
(8,6,0)
(6,9,0)
(4,3,0)
(5,4,0)
(6,8,0)
(0,1,0)
(4,7,0)
(1,3,0)
(2,4,0)
(1,7,0)
(1,6,0)
(6,8,1)
(2,1,1)
(4,2,1)
(1,6,1)
(1,7,1)
(4,1,1)
(6,9,1)
(5,4,1)
(8,0,1)
(4,7,1)
(4,7,2)
(1,6,2)
(6,9,2)
(6,8,2)
(1,7,2)
(4,1,2)
(5,4,2)
-----------------------------------
(0,data)
(1,data = (int64_t)
(2,data)
(3,)
(4,return data;)
(5,RET)
(6,(int64_t)
(7,int64_t data)
(8,RAND64()
(9,int64_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^