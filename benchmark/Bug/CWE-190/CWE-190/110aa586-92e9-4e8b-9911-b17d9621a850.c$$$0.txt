-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_preinc_32_bad()
{
    int64_t data;
    int64_t *dataPtr1 = &data;
    int64_t *dataPtr2 = &data;
    data = 0LL;
    {
        int64_t data = *dataPtr1;
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = LLONG_MAX;
        *dataPtr1 = data;
    }
    {
        int64_t data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
32,33
34,35
35,36
35,37
36,37
39,40
39,41
39,42
40,41
41,42
41,43
42,43
44,45
44,46
46,47
47,48
48,49
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
58,59
59,60
61,62
63,64
63,65
64,65
65,66
65,67
66,67
68,69
68,70
70,71
71,72
72,73
74,75
74,76
74,77
75,76
76,77
77,78
79,80
80,81
80,82
81,82
83,84
83,85
85,86
86,87
88,89
89,90
89,91
90,91
92,93
-----nextToken-----
2,4,9,11,15,17,18,22,26,28,29,33,37,38,43,45,49,53,55,60,62,67,69,73,78,82,84,87,91,93
-----computeFrom-----
35,36
35,37
51,52
51,53
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_preinc_32_bad(){    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_max_preinc_32_bad()
CWE190_Integer_Overflow__int64_t_max_preinc_32_bad
{    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
int64_t *dataPtr1 = &data;
int64_t *dataPtr1 = &data;
int64_t
int64_t
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int64_t *dataPtr2 = &data;
int64_t *dataPtr2 = &data;
int64_t
int64_t
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0LL;
data = 0LL
data
data
0LL
{        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;        *dataPtr1 = data;    }
int64_t data = *dataPtr1;
int64_t data = *dataPtr1;
int64_t
int64_t
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
int64_t data = *dataPtr2;
int64_t data = *dataPtr2;
int64_t
int64_t
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(14,9,0)
(1,34,0)
(4,9,0)
(40,2,0)
(0,23,0)
(25,4,0)
(20,23,0)
(11,39,0)
(15,4,0)
(19,41,0)
(28,26,0)
(29,22,0)
(41,2,0)
(1,4,0)
(12,39,0)
(17,41,0)
(6,5,0)
(31,23,0)
(33,1,0)
(35,31,0)
(26,30,0)
(30,5,0)
(34,2,0)
(37,19,0)
(8,30,0)
(34,1,0)
(26,22,0)
(3,11,0)
(10,22,0)
(18,34,0)
(16,23,0)
(11,12,0)
(25,19,0)
(5,30,0)
(12,22,0)
(19,2,0)
(36,12,0)
(10,39,0)
(38,23,0)
(30,23,0)
(4,23,0)
(24,39,0)
(7,25,0)
(27,10,0)
(2,23,0)
(22,31,0)
(9,4,0)
(39,31,0)
(21,12,0)
(13,41,0)
(22,26,0)
(36,21,1)
(19,37,1)
(25,7,1)
(19,41,1)
(9,14,1)
(0,30,1)
(6,8,1)
(8,4,1)
(13,34,1)
(4,9,1)
(14,15,1)
(5,6,1)
(7,41,1)
(12,36,1)
(33,18,1)
(10,27,1)
(29,19,1)
(10,22,1)
(11,3,1)
(27,22,1)
(22,26,1)
(34,1,1)
(21,10,1)
(37,25,1)
(18,0,1)
(32,11,1)
(17,13,1)
(25,4,1)
(26,28,1)
(28,29,1)
(3,12,1)
(1,33,1)
(26,30,1)
(30,5,1)
(12,22,1)
(41,17,1)
(11,12,1)
(1,4,1)
(10,22,2)
(4,9,2)
(11,12,2)
(19,41,2)
(34,1,2)
(30,5,2)
(26,30,2)
(22,26,2)
(1,4,2)
(12,22,2)
(25,4,2)
-----------------------------------
(0,L)
(1,*dataPtr1)
(2,)
(3,result)
(4,*dataPtr1 = &data)
(5,&data)
(6,data)
(7,dataPtr1)
(8,dataPtr2)
(9,&data)
(10,++data)
(11,printLongLongLine(result)
(12,result = data)
(13,data)
(14,data)
(15,dataPtr1)
(16,dataPtr1)
(17,LLONG_MAX)
(18,data)
(19,*dataPtr1 = data)
(20,data)
(21,result)
(22,data = *dataPtr2)
(23,)
(24,result)
(25,*dataPtr1)
(26,*dataPtr2)
(27,data)
(28,dataPtr2)
(29,data)
(30,*dataPtr2 = &data)
(31,)
(32,RET)
(33,dataPtr1)
(34,data = *dataPtr1)
(35,data)
(36,data)
(37,data)
(38,dataPtr2)
(39,)
(40,data)
(41,data = LLONG_MAX)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^