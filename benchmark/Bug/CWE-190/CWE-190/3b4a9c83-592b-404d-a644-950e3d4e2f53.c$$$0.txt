-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_preinc_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = 0;
    {
        int data = *dataPtr1;
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
54,55
56,57
57,58
57,59
58,59
59,60
61,62
63,64
63,65
64,65
65,66
65,67
67,68
67,69
69,70
70,71
71,72
73,74
73,75
73,76
74,75
75,76
76,77
78,79
79,80
79,81
81,82
81,83
83,84
84,85
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,51,52,55,60,62,66,68,72,77,80,82,85,89,91
-----computeFrom-----
32,33
32,34
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_preinc_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_preinc_32_bad()
CWE190_Integer_Overflow__int_fscanf_preinc_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        int data = *dataPtr1;        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(20,37,0)
(21,17,0)
(40,39,0)
(6,15,0)
(8,42,0)
(33,11,0)
(17,15,0)
(28,17,0)
(18,2,0)
(27,41,0)
(32,13,0)
(22,1,0)
(9,32,0)
(14,33,0)
(34,29,0)
(33,41,0)
(8,33,0)
(14,42,0)
(44,14,0)
(7,33,0)
(43,1,0)
(10,37,0)
(4,14,0)
(29,38,0)
(31,42,0)
(45,39,0)
(38,22,0)
(1,36,0)
(36,1,0)
(26,8,0)
(29,2,0)
(11,33,0)
(35,37,0)
(25,43,0)
(13,32,0)
(19,22,0)
(15,17,0)
(43,29,0)
(4,42,0)
(12,36,0)
(38,2,0)
(15,38,0)
(17,2,0)
(16,1,0)
(30,4,0)
(24,13,0)
(3,11,0)
(42,41,0)
(1,37,0)
(11,32,0)
(22,38,0)
(32,37,0)
(39,37,0)
(5,14,0)
(41,37,0)
(23,38,0)
(2,37,0)
(14,5,1)
(25,17,1)
(33,11,1)
(15,38,1)
(11,3,1)
(39,45,1)
(8,33,1)
(3,7,1)
(6,21,1)
(36,12,1)
(12,16,1)
(7,29,1)
(23,39,1)
(11,32,1)
(29,38,1)
(29,34,1)
(13,24,1)
(26,33,1)
(0,4,1)
(44,8,1)
(38,22,1)
(45,40,1)
(28,38,1)
(15,6,1)
(30,14,1)
(4,14,1)
(1,36,1)
(22,19,1)
(24,9,1)
(21,28,1)
(8,26,1)
(19,23,1)
(5,44,1)
(14,33,1)
(43,25,1)
(34,43,1)
(22,1,1)
(4,30,1)
(17,15,1)
(40,32,1)
(43,1,1)
(9,1,1)
(32,13,1)
(11,32,2)
(43,1,2)
(4,14,2)
(32,13,2)
(33,11,2)
(22,1,2)
(17,15,2)
(8,33,2)
(14,33,2)
(29,38,2)
(38,22,2)
(1,36,2)
(15,38,2)
-----------------------------------
(0,RET)
(1,*dataPtr1 = &data)
(2,)
(3,dataPtr2)
(4,printIntLine(result)
(5,data)
(6,data)
(7,data)
(8,++data)
(9,dataPtr2)
(10,dataPtr1)
(11,*dataPtr2)
(12,data)
(13,&data)
(14,result = data)
(15,&data)
(16,dataPtr1)
(17,fscanf(stdin, "%d", &data)
(18,data)
(19,dataPtr1)
(20,data)
(21,"%d")
(22,*dataPtr1)
(23,data)
(24,data)
(25,dataPtr1)
(26,data)
(27,data)
(28,stdin)
(29,*dataPtr1 = data)
(30,result)
(31,result)
(32,*dataPtr2 = &data)
(33,data = *dataPtr2)
(34,data)
(35,dataPtr2)
(36,&data)
(37,)
(38,data = *dataPtr1)
(39,data = 0)
(40,data)
(41,)
(42,)
(43,*dataPtr1)
(44,result)
(45,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^