-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_square_18_bad()
{
    int64_t data;
    data = 0LL;
    goto source;
source:
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%" SCNd64, &data);
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
        int64_t result = data * data;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
19,20
20,21
22,23
22,24
24,25
24,26
25,26
26,27
26,28
27,28
29,30
29,31
31,32
32,33
32,34
33,34
35,36
37,38
38,39
38,40
39,40
41,42
-----nextToken-----
2,4,9,11,15,16,18,21,23,28,30,34,36,40,42
-----computeFrom-----
13,14
13,15
32,33
32,34
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;ProblemStatement;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_square_18_bad(){    int64_t data;    data = 0LL;    goto source;source:    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_square_18_bad()
CWE190_Integer_Overflow__int64_t_fscanf_square_18_bad
{    int64_t data;    data = 0LL;    goto source;source:    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
goto source;
source
source:    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }
sink
{        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(16,3,0)
(11,15,0)
(2,15,0)
(3,8,0)
(0,3,0)
(1,0,0)
(6,15,0)
(10,8,0)
(12,0,0)
(9,8,0)
(14,15,0)
(8,15,0)
(7,9,0)
(9,3,0)
(3,0,0)
(13,15,0)
(5,15,0)
(6,5,1)
(7,3,1)
(16,11,1)
(12,1,1)
(9,7,1)
(11,6,1)
(0,12,1)
(1,16,1)
(3,0,1)
(9,3,1)
(4,9,1)
(9,3,2)
(3,0,2)
-----------------------------------
(0,data * data)
(1,data)
(2,sink:)
(3,result = data * data)
(4,RET)
(5,L)
(6,goto source;)
(7,result)
(8,)
(9,printLongLongLine(result)
(10,result)
(11,goto sink;)
(12,data)
(13,source:)
(14,data)
(15,)
(16,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^