-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_13_bad()
{
    unsigned int data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_13_bad(){    unsigned int data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_13_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_13_bad
{    unsigned int data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(12,21,0)
(9,15,0)
(19,11,0)
(13,11,0)
(0,15,0)
(10,21,0)
(6,19,0)
(19,9,0)
(22,4,0)
(13,9,0)
(21,24,0)
(17,11,0)
(24,21,0)
(25,23,0)
(27,9,0)
(20,23,0)
(1,17,0)
(24,9,0)
(21,5,0)
(17,19,0)
(29,24,0)
(11,26,0)
(2,11,0)
(28,9,0)
(8,15,0)
(14,13,0)
(16,19,0)
(18,15,0)
(7,4,0)
(22,7,1)
(16,6,1)
(1,19,1)
(20,25,1)
(3,23,1)
(24,29,1)
(3,17,1)
(10,4,1)
(23,20,1)
(12,10,1)
(17,1,1)
(19,9,1)
(9,28,1)
(13,9,1)
(4,22,1)
(25,21,1)
(25,4,1)
(7,9,1)
(13,14,1)
(24,9,1)
(28,27,1)
(21,24,1)
(6,13,1)
(17,19,1)
(29,12,1)
(19,16,1)
(14,23,1)
(29,4,2)
(21,24,2)
(24,9,2)
(10,4,2)
(19,9,2)
(19,23,2)
(13,9,2)
(6,23,2)
(1,23,2)
(16,23,2)
(21,4,2)
(17,23,2)
(24,4,2)
(13,23,2)
(12,4,2)
(14,23,2)
(17,19,2)
-----------------------------------
(0,if(GLOBAL_CONST_FIVE==5)
(1,result)
(2,result)
(3,RET)
(4,GLOBAL_CONST_FIVE==5)
(5,)
(6,result)
(7,GLOBAL_CONST_FIVE)
(8,if(GLOBAL_CONST_FIVE==5)
(9,data = 0)
(10,stdin)
(11,)
(12,"%u")
(13,data++)
(14,data)
(15,)
(16,data)
(17,printUnsignedLine(result)
(18,data)
(19,result = data)
(20,5)
(21,fscanf (stdin, "%u", &data)
(22,5)
(23,GLOBAL_CONST_FIVE==5)
(24,&data)
(25,GLOBAL_CONST_FIVE)
(26,)
(27,data)
(28,0)
(29,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^