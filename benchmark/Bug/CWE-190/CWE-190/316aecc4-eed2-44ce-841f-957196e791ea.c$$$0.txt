-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_03_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(5==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
21,23
22,23
23,24
23,25
25,26
25,27
25,28
27,28
28,29
30,31
32,33
32,34
32,35
33,34
33,35
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
53,54
55,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
62,64
65,66
66,67
66,68
67,68
68,69
68,70
70,71
70,72
72,73
73,74
73,75
74,75
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,29,31,36,38,40,42,44,49,52,54,59,60,63,64,69,71,75,76,80,82
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
47,48
47,49
62,63
62,64
73,74
73,75
-----guardedBy-----
38,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_03_bad(){    int data;    /* Initialize data */    data = 0;    if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_add_03_bad()
CWE190_Integer_Overflow__int_fgets_add_03_bad
{    int data;    /* Initialize data */    data = 0;    if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
5==5
5
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(0,16,0)
(27,14,0)
(19,5,0)
(44,41,0)
(41,12,0)
(16,18,0)
(31,4,0)
(13,9,0)
(19,31,0)
(11,18,0)
(12,30,0)
(25,3,0)
(9,18,0)
(1,5,0)
(8,14,0)
(24,34,0)
(28,16,0)
(6,30,0)
(15,17,0)
(9,31,0)
(20,19,0)
(37,16,0)
(23,3,0)
(35,28,0)
(40,31,0)
(39,5,0)
(7,12,0)
(22,18,0)
(12,19,0)
(5,3,0)
(36,32,0)
(30,33,0)
(14,10,0)
(43,17,0)
(2,19,0)
(34,38,0)
(26,16,0)
(19,12,0)
(16,28,0)
(31,9,0)
(21,3,0)
(18,14,0)
(42,32,0)
(41,30,0)
(44,12,1)
(35,16,1)
(12,19,1)
(37,18,1)
(28,35,1)
(36,42,1)
(1,39,1)
(41,44,1)
(34,24,1)
(43,15,1)
(9,13,1)
(16,0,1)
(40,28,1)
(18,11,1)
(19,31,1)
(7,17,1)
(26,37,1)
(13,40,1)
(22,32,1)
(2,7,1)
(29,41,1)
(16,18,1)
(19,20,1)
(28,16,1)
(31,9,1)
(9,18,1)
(24,28,1)
(41,12,1)
(5,1,1)
(15,32,1)
(11,22,1)
(17,43,1)
(15,34,1)
(29,17,1)
(19,5,1)
(0,26,1)
(42,5,1)
(20,2,1)
(15,31,1)
(32,36,1)
(12,19,2)
(9,28,2)
(31,9,2)
(19,17,2)
(41,17,2)
(34,28,2)
(44,17,2)
(7,17,2)
(0,32,2)
(37,32,2)
(11,32,2)
(9,18,2)
(35,32,2)
(24,28,2)
(13,28,2)
(16,32,2)
(19,31,2)
(20,17,2)
(19,5,2)
(31,28,2)
(16,18,2)
(12,17,2)
(41,12,2)
(2,17,2)
(22,32,2)
(28,16,2)
(40,28,2)
(28,32,2)
(18,32,2)
(26,32,2)
-----------------------------------
(0,stdin)
(1,0)
(2,data)
(3,)
(4,)
(5,data = 0)
(6,result)
(7,result)
(8,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(9,atoi(inputBuffer)
(10,)
(11,"")
(12,result = data + 1)
(13,inputBuffer)
(14,)
(15,5)
(16,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(17,5==5)
(18,inputBuffer[CHAR_ARRAY_SIZE] = "")
(19,data + 1)
(20,1)
(21,if(5==5)
(22,inputBuffer)
(23,if(5==5)
(24,"fgets()
(25,data)
(26,CHAR_ARRAY_SIZE)
(27,inputBuffer)
(28,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(29,RET)
(30,)
(31,data = atoi(inputBuffer)
(32,5==5)
(33,)
(34,printLine("fgets()
(35,NULL)
(36,5)
(37,inputBuffer)
(38,)
(39,data)
(40,data)
(41,printIntLine(result)
(42,5)
(43,5)
(44,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^