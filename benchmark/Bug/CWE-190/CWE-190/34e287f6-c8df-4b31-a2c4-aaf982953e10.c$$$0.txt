-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_04_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_TRUE)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(STATIC_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
20,22
21,22
22,23
22,24
24,25
24,26
24,27
26,27
27,28
29,30
31,32
31,33
31,34
32,33
32,34
33,34
33,35
33,36
33,37
34,35
36,37
38,39
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
60,61
60,62
61,62
63,64
64,65
64,66
65,66
66,67
66,68
68,69
68,70
70,71
71,72
71,73
72,73
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,30,35,37,39,41,43,48,51,53,58,59,62,67,69,73,74,78,80
-----computeFrom-----
12,13
12,14
32,33
32,34
46,47
46,48
71,72
71,73
-----guardedBy-----
37,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_04_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_add_04_bad()
CWE190_Integer_Overflow__int_fgets_add_04_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_TRUE)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(16,5,0)
(26,24,0)
(24,23,0)
(4,2,0)
(24,25,0)
(9,37,0)
(7,39,0)
(21,14,0)
(23,2,0)
(5,12,0)
(13,40,0)
(37,40,0)
(12,22,0)
(33,21,0)
(20,2,0)
(34,37,0)
(37,7,0)
(35,2,0)
(25,15,0)
(39,18,0)
(1,25,0)
(25,1,0)
(27,24,0)
(1,7,0)
(36,39,0)
(29,23,0)
(10,12,0)
(5,26,0)
(17,24,0)
(38,37,0)
(40,37,0)
(6,7,0)
(26,12,0)
(0,26,0)
(19,7,0)
(30,1,0)
(31,39,0)
(24,26,0)
(11,23,0)
(28,25,0)
(23,11,1)
(3,23,1)
(1,30,1)
(34,7,1)
(7,6,1)
(33,40,1)
(16,26,1)
(8,5,1)
(32,3,1)
(21,33,1)
(27,17,1)
(24,25,1)
(40,13,1)
(8,32,1)
(5,26,1)
(30,28,1)
(24,27,1)
(19,3,1)
(24,23,1)
(37,38,1)
(9,34,1)
(0,32,1)
(32,21,1)
(38,9,1)
(13,37,1)
(1,7,1)
(26,24,1)
(37,7,1)
(28,40,1)
(40,37,1)
(6,19,1)
(11,29,1)
(25,1,1)
(17,0,1)
(5,16,1)
(32,25,1)
(30,40,2)
(16,32,2)
(25,1,2)
(5,32,2)
(1,7,2)
(38,3,2)
(24,23,2)
(21,40,2)
(37,3,2)
(7,3,2)
(40,3,2)
(0,32,2)
(24,25,2)
(17,32,2)
(24,32,2)
(1,40,2)
(34,3,2)
(26,24,2)
(33,40,2)
(27,32,2)
(28,40,2)
(13,3,2)
(25,40,2)
(19,3,2)
(26,32,2)
(5,26,2)
(40,37,2)
(6,3,2)
(37,7,2)
(9,3,2)
-----------------------------------
(0,result)
(1,atoi(inputBuffer)
(2,)
(3,STATIC_CONST_TRUE)
(4,if(STATIC_CONST_TRUE)
(5,printIntLine(result)
(6,"")
(7,inputBuffer[CHAR_ARRAY_SIZE] = "")
(8,RET)
(9,CHAR_ARRAY_SIZE)
(10,result)
(11,0)
(12,)
(13,NULL)
(14,)
(15,)
(16,result)
(17,data)
(18,)
(19,inputBuffer)
(20,if(STATIC_CONST_TRUE)
(21,printLine("fgets()
(22,)
(23,data = 0)
(24,data + 1)
(25,data = atoi(inputBuffer)
(26,result = data + 1)
(27,1)
(28,data)
(29,data)
(30,inputBuffer)
(31,inputBuffer)
(32,STATIC_CONST_TRUE)
(33,"fgets()
(34,inputBuffer)
(35,data)
(36,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(37,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(38,stdin)
(39,)
(40,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^