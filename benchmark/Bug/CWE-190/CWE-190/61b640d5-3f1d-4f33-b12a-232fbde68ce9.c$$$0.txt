-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_square_05_bad()
{
    short data;
    data = 0;
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */
            short result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,37,39,43,45,49,51
-----computeFrom-----
12,13
12,14
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_square_05_bad(){    short data;    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_square_05_bad()
CWE190_Integer_Overflow__short_fscanf_square_05_bad
{    short data;    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(staticTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }
short result = data * data;
short result = data * data;
short
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(19,13,0)
(7,5,0)
(11,2,0)
(19,22,0)
(0,25,0)
(16,22,0)
(13,19,0)
(13,10,0)
(6,18,0)
(11,5,0)
(3,11,0)
(21,2,0)
(22,18,0)
(25,5,0)
(14,19,0)
(5,2,0)
(2,9,0)
(25,22,0)
(15,18,0)
(4,13,0)
(20,13,0)
(17,25,0)
(1,18,0)
(8,22,0)
(5,25,0)
(12,22,1)
(0,7,1)
(7,24,1)
(25,17,1)
(20,12,1)
(3,5,1)
(23,24,1)
(23,11,1)
(22,16,1)
(5,25,1)
(13,19,1)
(24,13,1)
(11,5,1)
(11,3,1)
(17,0,1)
(25,22,1)
(24,12,1)
(19,22,1)
(4,20,1)
(14,4,1)
(19,14,1)
(16,8,1)
(4,12,2)
(3,24,2)
(19,12,2)
(13,12,2)
(19,22,2)
(25,24,2)
(25,22,2)
(11,5,2)
(20,12,2)
(11,24,2)
(5,24,2)
(14,12,2)
(0,24,2)
(13,19,2)
(17,24,2)
(5,25,2)
(7,24,2)
-----------------------------------
(0,data)
(1,if(staticTrue)
(2,)
(3,result)
(4,"%hd")
(5,result = data * data)
(6,data)
(7,result)
(8,data)
(9,)
(10,)
(11,printIntLine(result)
(12,staticTrue)
(13,fscanf (stdin, "%hd", &data)
(14,data)
(15,if(staticTrue)
(16,0)
(17,data)
(18,)
(19,&data)
(20,stdin)
(21,result)
(22,data = 0)
(23,RET)
(24,staticTrue)
(25,data * data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^