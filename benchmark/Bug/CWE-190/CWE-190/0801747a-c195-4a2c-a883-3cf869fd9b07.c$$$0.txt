-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_multiply_18_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    goto source;
source:
    /* POTENTIAL FLAW: Use the maximum value for this type */
    data = INT_MAX;
    goto sink;
sink:
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */
        int result = data * 2;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
22,23
24,25
26,27
28,29
28,30
30,31
30,32
31,32
31,33
32,33
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,27,29,33,34,38,40,44,45,49,51
-----computeFrom-----
12,13
12,14
21,22
21,23
31,32
31,33
42,43
42,44
-----guardedBy-----
33,44
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_multiply_18_bad(){    int data;    /* Initialize data */    data = 0;    goto source;source:    /* POTENTIAL FLAW: Use the maximum value for this type */    data = INT_MAX;    goto sink;sink:    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_max_multiply_18_bad()
CWE190_Integer_Overflow__int_max_multiply_18_bad
{    int data;    /* Initialize data */    data = 0;    goto source;source:    /* POTENTIAL FLAW: Use the maximum value for this type */    data = INT_MAX;    goto sink;sink:    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    /* POTENTIAL FLAW: Use the maximum value for this type */    data = INT_MAX;
source
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
goto sink;
sink
sink:    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }
sink
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }
int result = data * 2;
int result = data * 2;
int
result = data * 2
result
= data * 2
data * 2
data
data
2
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(14,25,0)
(24,17,0)
(1,25,0)
(11,10,0)
(6,14,0)
(1,11,0)
(11,1,0)
(19,16,0)
(23,17,0)
(12,11,0)
(21,25,0)
(20,16,0)
(9,10,0)
(18,9,0)
(4,17,0)
(13,1,0)
(16,17,0)
(8,17,0)
(9,11,0)
(25,17,0)
(15,25,0)
(0,10,0)
(22,17,0)
(3,14,0)
(5,17,0)
(2,1,0)
(9,11,1)
(20,19,1)
(14,25,1)
(18,11,1)
(7,14,1)
(13,2,1)
(4,25,1)
(16,20,1)
(2,12,1)
(3,6,1)
(6,4,1)
(25,15,1)
(11,1,1)
(21,23,1)
(23,16,1)
(12,14,1)
(7,9,1)
(14,3,1)
(1,13,1)
(1,25,1)
(15,21,1)
(9,18,1)
(9,14,2)
(14,25,2)
(18,14,2)
(11,1,2)
(2,14,2)
(13,14,2)
(12,14,2)
(1,14,2)
(9,11,2)
(11,14,2)
(1,25,2)
-----------------------------------
(0,result)
(1,data * 2)
(2,data)
(3,0)
(4,goto sink;)
(5,source:)
(6,data)
(7,RET)
(8,sink:)
(9,printIntLine(result)
(10,)
(11,result = data * 2)
(12,result)
(13,2)
(14,data > 0)
(15,INT_MAX)
(16,data = 0)
(17,)
(18,result)
(19,data)
(20,0)
(21,data)
(22,if(data > 0)
(23,goto source;)
(24,data)
(25,data = INT_MAX)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^