-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_postinc_13_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_postinc_13_bad(){    int data;    /* Initialize data */    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_postinc_13_bad()
CWE190_Integer_Overflow__int_fscanf_postinc_13_bad
{    int data;    /* Initialize data */    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(27,9,0)
(11,23,0)
(23,16,0)
(18,0,0)
(22,0,0)
(1,16,0)
(29,9,0)
(23,0,0)
(26,16,0)
(1,17,0)
(4,1,0)
(0,25,0)
(21,18,0)
(20,6,0)
(2,16,0)
(12,7,0)
(8,19,0)
(3,23,0)
(13,17,0)
(16,7,0)
(17,5,0)
(15,7,0)
(18,16,0)
(17,1,0)
(14,6,0)
(19,0,0)
(10,17,0)
(24,7,0)
(19,23,0)
(6,14,1)
(17,1,1)
(19,23,1)
(3,11,1)
(18,21,1)
(29,27,1)
(13,10,1)
(18,16,1)
(21,6,1)
(4,13,1)
(27,16,1)
(23,16,1)
(16,2,1)
(28,19,1)
(28,6,1)
(1,16,1)
(19,8,1)
(23,3,1)
(14,20,1)
(9,29,1)
(1,4,1)
(20,17,1)
(11,18,1)
(20,9,1)
(8,23,1)
(10,9,1)
(2,26,1)
(10,9,2)
(17,9,2)
(23,6,2)
(8,6,2)
(18,16,2)
(3,6,2)
(1,16,2)
(18,6,2)
(13,9,2)
(17,1,2)
(23,16,2)
(19,23,2)
(11,6,2)
(4,9,2)
(1,9,2)
(21,6,2)
(19,6,2)
-----------------------------------
(0,)
(1,&data)
(2,0)
(3,data)
(4,data)
(5,)
(6,GLOBAL_CONST_FIVE==5)
(7,)
(8,result)
(9,GLOBAL_CONST_FIVE==5)
(10,stdin)
(11,result)
(12,data)
(13,"%d")
(14,5)
(15,if(GLOBAL_CONST_FIVE==5)
(16,data = 0)
(17,fscanf(stdin, "%d", &data)
(18,data++)
(19,printIntLine(result)
(20,GLOBAL_CONST_FIVE)
(21,data)
(22,result)
(23,result = data)
(24,if(GLOBAL_CONST_FIVE==5)
(25,)
(26,data)
(27,GLOBAL_CONST_FIVE)
(28,RET)
(29,5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^