-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_bad()
{
    int64_t data;
    int64_t *dataPtr1 = &data;
    int64_t *dataPtr2 = &data;
    data = 0LL;
    {
        int64_t data = *dataPtr1;
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%" SCNd64, &data);
        *dataPtr1 = data;
    }
    {
        int64_t data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
32,33
34,35
35,36
35,37
36,37
39,40
39,41
39,42
40,41
41,42
41,43
42,43
44,45
44,46
46,47
47,48
48,49
50,51
51,52
52,53
52,54
53,54
54,55
56,57
58,59
58,60
59,60
60,61
60,62
61,62
63,64
63,65
65,66
66,67
67,68
69,70
69,71
69,72
70,71
71,72
72,73
74,75
75,76
75,77
76,77
78,79
78,80
80,81
81,82
83,84
84,85
84,86
85,86
87,88
-----nextToken-----
2,4,9,11,15,17,18,22,26,28,29,33,37,38,43,45,49,55,57,62,64,68,73,77,79,82,86,88
-----computeFrom-----
35,36
35,37
52,53
52,54
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ProblemStatement;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_bad(){    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_bad()
CWE190_Integer_Overflow__int64_t_fscanf_postinc_32_bad
{    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
int64_t *dataPtr1 = &data;
int64_t *dataPtr1 = &data;
int64_t
int64_t
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int64_t *dataPtr2 = &data;
int64_t *dataPtr2 = &data;
int64_t
int64_t
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0LL;
data = 0LL
data
data
0LL
{        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);        *dataPtr1 = data;    }
int64_t data = *dataPtr1;
int64_t data = *dataPtr1;
int64_t
int64_t
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
fscanf (stdin, "%" SCNd64, &data);
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
int64_t data = *dataPtr2;
int64_t data = *dataPtr2;
int64_t
int64_t
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(21,19,0)
(4,7,0)
(29,4,0)
(22,12,0)
(37,38,0)
(38,12,0)
(18,33,0)
(5,13,0)
(27,10,0)
(17,38,0)
(10,12,0)
(11,30,0)
(32,38,0)
(31,17,0)
(8,32,0)
(23,9,0)
(20,21,0)
(13,4,0)
(23,32,0)
(35,12,0)
(36,29,0)
(30,17,0)
(9,33,0)
(8,17,0)
(26,9,0)
(34,32,0)
(32,23,0)
(19,29,0)
(15,6,0)
(6,17,0)
(29,19,0)
(24,12,0)
(6,32,0)
(3,7,0)
(28,19,0)
(16,12,0)
(1,4,0)
(13,21,0)
(2,8,0)
(4,12,0)
(9,12,0)
(33,9,0)
(0,23,0)
(25,6,0)
(7,4,0)
(21,10,0)
(19,10,0)
(30,6,0)
(21,20,1)
(29,4,1)
(20,13,1)
(36,28,1)
(6,25,1)
(35,9,1)
(29,36,1)
(23,9,1)
(7,3,1)
(25,15,1)
(19,29,1)
(8,2,1)
(11,6,1)
(26,4,1)
(4,7,1)
(33,18,1)
(13,4,1)
(21,19,1)
(30,11,1)
(14,30,1)
(5,19,1)
(34,21,1)
(0,34,1)
(32,23,1)
(18,26,1)
(15,8,1)
(8,32,1)
(23,0,1)
(30,6,1)
(13,5,1)
(28,35,1)
(3,1,1)
(6,32,1)
(9,33,1)
(2,32,1)
(23,9,2)
(9,33,2)
(19,29,2)
(29,4,2)
(21,19,2)
(4,7,2)
(6,32,2)
(32,23,2)
(13,4,2)
(8,32,2)
(30,6,2)
-----------------------------------
(0,dataPtr2)
(1,dataPtr1)
(2,data)
(3,data)
(4,*dataPtr1 = &data)
(5,dataPtr1)
(6,result = data)
(7,&data)
(8,data++)
(9,*dataPtr2 = &data)
(10,)
(11,result)
(12,)
(13,*dataPtr1)
(14,RET)
(15,result)
(16,data)
(17,)
(18,data)
(19,data = *dataPtr1)
(20,data)
(21,*dataPtr1 = data)
(22,dataPtr2)
(23,*dataPtr2)
(24,dataPtr1)
(25,data)
(26,dataPtr2)
(27,data)
(28,data)
(29,*dataPtr1)
(30,printLongLongLine(result)
(31,result)
(32,data = *dataPtr2)
(33,&data)
(34,data)
(35,L)
(36,dataPtr1)
(37,data)
(38,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^