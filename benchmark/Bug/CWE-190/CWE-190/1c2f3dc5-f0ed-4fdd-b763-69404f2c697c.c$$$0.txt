-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_square_07_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
            int result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
27,28
29,30
29,31
30,31
30,32
31,32
34,35
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,32,33,38,40,44,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
30,31
30,32
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_square_07_bad(){    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_rand_square_07_bad()
CWE190_Integer_Overflow__int_rand_square_07_bad
{    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
if(staticFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(24,25,0)
(17,9,0)
(5,0,0)
(16,13,0)
(26,19,0)
(19,3,0)
(21,19,0)
(15,7,0)
(3,27,0)
(0,19,0)
(4,9,0)
(10,1,0)
(20,1,0)
(0,9,0)
(14,0,0)
(22,1,0)
(12,13,0)
(9,17,0)
(0,7,0)
(11,3,0)
(8,21,0)
(21,3,0)
(6,25,0)
(19,0,0)
(7,1,0)
(9,2,0)
(18,7,0)
(9,17,1)
(17,4,1)
(0,5,1)
(21,8,1)
(16,12,1)
(24,7,1)
(25,6,1)
(19,0,1)
(7,18,1)
(18,15,1)
(0,9,1)
(8,19,1)
(12,9,1)
(4,25,1)
(12,25,1)
(5,14,1)
(21,19,1)
(26,13,1)
(23,21,1)
(6,24,1)
(23,13,1)
(14,26,1)
(0,7,1)
(13,16,1)
(5,13,2)
(9,17,2)
(0,9,2)
(0,7,2)
(4,25,2)
(19,13,2)
(21,19,2)
(14,13,2)
(19,0,2)
(26,13,2)
(21,13,2)
(17,25,2)
(8,13,2)
(0,13,2)
(9,25,2)
-----------------------------------
(0,data * data)
(1,)
(2,)
(3,)
(4,data)
(5,data)
(6,5)
(7,data = 0)
(8,result)
(9,data = RAND32()
(10,if(staticFive==5)
(11,result)
(12,staticFive)
(13,staticFive==5)
(14,data)
(15,data)
(16,5)
(17,RAND32()
(18,0)
(19,result = data * data)
(20,if(staticFive==5)
(21,printIntLine(result)
(22,data)
(23,RET)
(24,staticFive)
(25,staticFive==5)
(26,result)
(27,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^