-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_preinc_34_bad()
{
    short data;
    CWE190_Integer_Overflow__short_max_preinc_34_unionType myUnion;
    data = 0;
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = SHRT_MAX;
    myUnion.unionFirst = data;
    {
        short data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
30,32
31,32
34,35
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
47,50
48,49
49,50
50,51
52,53
53,54
53,55
55,56
55,57
57,58
58,59
60,61
61,62
61,63
62,63
64,65
-----nextToken-----
2,4,8,10,14,16,20,21,25,27,32,33,35,39,41,45,46,51,54,56,59,63,65
-----computeFrom-----
18,19
18,20
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_preinc_34_bad(){    short data;    CWE190_Integer_Overflow__short_max_preinc_34_unionType myUnion;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = SHRT_MAX;    myUnion.unionFirst = data;    {        short data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_preinc_34_bad()
CWE190_Integer_Overflow__short_max_preinc_34_bad
{    short data;    CWE190_Integer_Overflow__short_max_preinc_34_unionType myUnion;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = SHRT_MAX;    myUnion.unionFirst = data;    {        short data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
CWE190_Integer_Overflow__short_max_preinc_34_unionType myUnion;
CWE190_Integer_Overflow__short_max_preinc_34_unionType myUnion;
CWE190_Integer_Overflow__short_max_preinc_34_unionType
CWE190_Integer_Overflow__short_max_preinc_34_unionType
myUnion
myUnion
data = 0;
data = 0
data
data
0
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        short data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
short data = myUnion.unionSecond;
short data = myUnion.unionSecond;
short
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(11,17,0)
(19,20,0)
(29,27,0)
(6,2,0)
(8,19,0)
(26,1,0)
(7,22,0)
(23,1,0)
(26,19,0)
(28,6,0)
(18,26,0)
(30,15,0)
(25,2,0)
(24,13,0)
(13,17,0)
(3,27,0)
(12,4,0)
(14,20,0)
(1,20,0)
(22,1,0)
(27,1,0)
(20,2,0)
(9,2,0)
(16,17,0)
(4,26,0)
(10,6,0)
(13,2,0)
(5,26,0)
(1,27,0)
(15,13,0)
(17,2,0)
(4,19,0)
(0,15,0)
(22,19,0)
(29,3,1)
(26,1,1)
(13,17,1)
(11,16,1)
(6,28,1)
(4,26,1)
(23,13,1)
(13,24,1)
(27,29,1)
(24,15,1)
(7,1,1)
(17,11,1)
(3,23,1)
(1,27,1)
(22,7,1)
(21,4,1)
(30,17,1)
(18,5,1)
(4,12,1)
(28,10,1)
(0,30,1)
(22,1,1)
(5,22,1)
(12,26,1)
(16,6,1)
(26,18,1)
(15,0,1)
(13,17,2)
(1,27,2)
(26,1,2)
(4,26,2)
(22,1,2)
-----------------------------------
(0,unionFirst)
(1,data = myUnion.unionSecond)
(2,)
(3,myUnion)
(4,printIntLine(result)
(5,result)
(6,data = 0)
(7,data)
(8,result)
(9,myUnion)
(10,data)
(11,SHRT_MAX)
(12,result)
(13,myUnion.unionFirst = data)
(14,data)
(15,myUnion.unionFirst)
(16,data)
(17,data = SHRT_MAX)
(18,data)
(19,)
(20,)
(21,RET)
(22,++data)
(23,data)
(24,data)
(25,data)
(26,result = data)
(27,myUnion.unionSecond)
(28,0)
(29,unionSecond)
(30,myUnion)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^