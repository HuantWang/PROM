-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_preinc_03_bad()
{
    short data;
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
33,34
33,35
36,37
37,38
37,39
37,40
38,39
39,40
40,41
42,43
43,44
43,45
45,46
45,47
47,48
48,49
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,8,10,14,15,18,19,24,27,28,31,34,35,41,44,46,49,53,55
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_preinc_03_bad(){    short data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_preinc_03_bad()
CWE190_Integer_Overflow__short_rand_preinc_03_bad
{    short data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
5==5
5
5
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(22,17,0)
(28,4,0)
(0,23,0)
(25,14,0)
(25,10,0)
(9,25,0)
(14,19,0)
(9,24,0)
(8,7,0)
(27,24,0)
(29,14,0)
(17,5,0)
(27,5,0)
(15,9,0)
(24,7,0)
(14,25,0)
(20,25,0)
(13,24,0)
(18,27,0)
(14,29,0)
(11,7,0)
(5,2,0)
(16,4,0)
(26,24,0)
(12,27,0)
(9,5,0)
(19,14,0)
(27,25,0)
(3,7,0)
(1,23,0)
(21,5,0)
(17,27,0)
(25,14,1)
(14,29,1)
(27,18,1)
(24,26,1)
(6,17,1)
(26,13,1)
(12,9,1)
(14,19,1)
(18,12,1)
(9,15,1)
(4,28,1)
(16,25,1)
(9,24,1)
(17,22,1)
(17,27,1)
(0,1,1)
(16,23,1)
(9,25,1)
(23,0,1)
(27,25,1)
(20,23,1)
(22,27,1)
(28,16,1)
(15,4,1)
(1,24,1)
(29,20,1)
(27,24,1)
(6,4,1)
(18,4,2)
(14,23,2)
(17,4,2)
(27,24,2)
(25,14,2)
(9,25,2)
(14,29,2)
(14,19,2)
(29,23,2)
(15,4,2)
(20,23,2)
(17,27,2)
(12,4,2)
(25,23,2)
(27,4,2)
(27,25,2)
(9,24,2)
(9,4,2)
(22,4,2)
-----------------------------------
(0,5)
(1,5)
(2,)
(3,data)
(4,5==5)
(5,)
(6,RET)
(7,)
(8,if(5==5)
(9,++data)
(10,)
(11,if(5==5)
(12,result)
(13,data)
(14,(short)
(15,data)
(16,5)
(17,printIntLine(result)
(18,data)
(19,short)
(20,data)
(21,result)
(22,result)
(23,5==5)
(24,data = 0)
(25,data = (short)
(26,0)
(27,result = data)
(28,5)
(29,RAND32()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^