-----label-----
1
-----code-----
static void badSink()
{
    short data = CWE190_Integer_Overflow__short_fscanf_square_45_badData;
    {
        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */
        short result = data * data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
15,16
16,17
16,18
18,19
18,20
20,21
21,22
21,23
22,23
24,25
26,27
27,28
27,29
28,29
30,31
-----nextToken-----
2,4,8,10,13,17,19,23,25,29,31
-----computeFrom-----
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    short data = CWE190_Integer_Overflow__short_fscanf_square_45_badData;    {        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }}
static void
badSink()
badSink
{    short data = CWE190_Integer_Overflow__short_fscanf_square_45_badData;    {        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }}
short data = CWE190_Integer_Overflow__short_fscanf_square_45_badData;
short data = CWE190_Integer_Overflow__short_fscanf_square_45_badData;
short
data = CWE190_Integer_Overflow__short_fscanf_square_45_badData
data
= CWE190_Integer_Overflow__short_fscanf_square_45_badData
CWE190_Integer_Overflow__short_fscanf_square_45_badData
CWE190_Integer_Overflow__short_fscanf_square_45_badData
{        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }
short result = data * data;
short result = data * data;
short
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(4,11,0)
(10,11,0)
(8,4,0)
(2,5,0)
(14,12,0)
(7,12,0)
(14,4,0)
(4,12,0)
(12,5,0)
(9,13,0)
(3,13,0)
(6,11,0)
(13,5,0)
(11,4,0)
(1,14,0)
(11,13,0)
(11,13,1)
(9,3,1)
(10,6,1)
(6,8,1)
(13,9,1)
(4,11,1)
(8,13,1)
(11,10,1)
(14,1,1)
(14,4,1)
(1,4,1)
(0,14,1)
(11,13,2)
(4,11,2)
(14,4,2)
-----------------------------------
(0,RET)
(1,result)
(2,data)
(3,data)
(4,result = data * data)
(5,)
(6,data)
(7,result)
(8,result)
(9,CWE190_Integer_Overflow__short_fscanf_square_45_badData)
(10,data)
(11,data * data)
(12,)
(13,data = CWE190_Integer_Overflow__short_fscanf_square_45_badData)
(14,printIntLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^