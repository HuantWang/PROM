-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_preinc_63b_badSink(char * dataPtr)
{
    char data = *dataPtr;
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        ++data;
        char result = data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
18,19
20,21
20,22
20,23
21,22
22,23
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
33,34
34,35
34,36
35,36
37,38
-----nextToken-----
2,4,6,8,9,13,15,19,24,27,29,32,36,38
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_preinc_63b_badSink(char * dataPtr){    char data = *dataPtr;    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_max_preinc_63b_badSink(char * dataPtr)
CWE190_Integer_Overflow__char_max_preinc_63b_badSink
char * dataPtr
char
* dataPtr
*
dataPtr
{    char data = *dataPtr;    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }}
char data = *dataPtr;
char data = *dataPtr;
char
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(12,0,0)
(7,2,0)
(16,6,0)
(10,8,0)
(14,9,0)
(8,6,0)
(15,1,0)
(11,2,0)
(1,8,0)
(0,14,0)
(14,0,0)
(1,0,0)
(4,8,0)
(2,0,0)
(2,8,0)
(13,14,0)
(5,4,0)
(4,2,0)
(0,6,0)
(7,1,1)
(2,0,1)
(3,4,1)
(14,13,1)
(2,11,1)
(4,5,1)
(0,14,1)
(1,0,1)
(1,15,1)
(11,7,1)
(5,2,1)
(4,2,1)
(15,0,1)
(13,12,1)
(14,9,1)
(1,0,2)
(2,0,2)
(14,9,2)
(4,2,2)
(0,14,2)
-----------------------------------
(0,data = *dataPtr)
(1,++data)
(2,result = data)
(3,RET)
(4,printHexCharLine(result)
(5,result)
(6,)
(7,result)
(8,)
(9,char * dataPtr)
(10,result)
(11,data)
(12,data)
(13,dataPtr)
(14,*dataPtr)
(15,data)
(16,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^