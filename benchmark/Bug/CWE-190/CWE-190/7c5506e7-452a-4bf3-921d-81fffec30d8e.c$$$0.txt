-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_square_10_bad()
{
    unsigned int data;
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,38,40,44,46,50,52
-----computeFrom-----
12,13
12,14
21,22
21,23
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_square_10_bad(){    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_square_10_bad()
CWE190_Integer_Overflow__unsigned_int_rand_square_10_bad
{    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(globalTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(5,4,0)
(2,11,0)
(18,1,0)
(6,4,0)
(15,11,0)
(25,11,0)
(4,12,0)
(8,7,0)
(8,13,0)
(23,4,0)
(16,2,0)
(19,13,0)
(23,1,0)
(1,13,0)
(22,8,0)
(13,20,0)
(7,8,0)
(1,23,0)
(8,22,0)
(1,2,0)
(6,23,0)
(3,23,0)
(9,11,0)
(13,8,0)
(21,1,0)
(0,2,0)
(17,6,0)
(21,3,1)
(10,13,1)
(1,2,1)
(24,10,1)
(18,21,1)
(1,13,1)
(23,1,1)
(1,18,1)
(13,8,1)
(24,6,1)
(10,14,1)
(19,14,1)
(8,22,1)
(6,23,1)
(7,19,1)
(14,2,1)
(17,23,1)
(3,10,1)
(16,0,1)
(8,7,1)
(6,17,1)
(2,16,1)
(17,10,2)
(6,23,2)
(23,10,2)
(3,10,2)
(23,1,2)
(7,14,2)
(1,2,2)
(13,14,2)
(1,13,2)
(8,22,2)
(13,8,2)
(1,10,2)
(18,10,2)
(19,14,2)
(6,10,2)
(8,14,2)
(21,10,2)
(8,7,2)
-----------------------------------
(0,data)
(1,data * data)
(2,data = 0)
(3,result)
(4,)
(5,result)
(6,printUnsignedLine(result)
(7,RAND32()
(8,(unsigned int)
(9,data)
(10,globalTrue)
(11,)
(12,)
(13,data = (unsigned int)
(14,globalTrue)
(15,if(globalTrue)
(16,0)
(17,result)
(18,data)
(19,data)
(20,)
(21,data)
(22,unsigned int)
(23,result = data * data)
(24,RET)
(25,if(globalTrue)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^