-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_square_16_bad()
{
    unsigned int data;
    data = 0;
    while(1)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
21,22
23,24
26,27
26,28
28,29
28,30
29,30
29,31
30,31
31,32
31,33
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,27,32,34,38,40,44,46,47
-----computeFrom-----
12,13
12,14
20,21
20,22
36,37
36,38
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_square_16_bad(){    unsigned int data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;        break;    }    while(1)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__unsigned_int_max_square_16_bad()
CWE190_Integer_Overflow__unsigned_int_max_square_16_bad
{    unsigned int data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;        break;    }    while(1)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }        break;    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;        break;    }
1
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;        break;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
break;
while(1)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }        break;    }
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
break;
-----joern-----
(20,0,0)
(7,0,0)
(9,19,0)
(6,7,0)
(5,23,0)
(18,7,0)
(23,19,0)
(19,23,0)
(21,11,0)
(12,4,0)
(17,23,0)
(19,22,0)
(1,22,0)
(13,25,0)
(3,0,0)
(8,5,0)
(19,7,0)
(11,4,0)
(22,25,0)
(5,11,0)
(16,19,0)
(24,0,0)
(15,22,0)
(23,11,0)
(22,15,1)
(2,7,1)
(9,17,1)
(10,14,1)
(6,18,1)
(16,9,1)
(19,7,1)
(1,2,1)
(5,23,1)
(19,22,1)
(10,12,1)
(15,1,1)
(13,22,1)
(14,13,1)
(23,19,1)
(19,16,1)
(12,5,1)
(14,2,1)
(5,8,1)
(8,23,1)
(17,14,1)
(7,6,1)
(19,22,2)
(17,14,2)
(19,7,2)
(5,14,2)
(12,14,2)
(1,2,2)
(13,2,2)
(23,14,2)
(23,19,2)
(8,14,2)
(22,2,2)
(5,23,2)
(15,2,2)
(9,14,2)
(16,14,2)
(19,14,2)
-----------------------------------
(0,)
(1,data)
(2,1)
(3,while(1)
(4,)
(5,printUnsignedLine(result)
(6,0)
(7,data = 0)
(8,result)
(9,data)
(10,RET)
(11,)
(12,break;)
(13,break;)
(14,1)
(15,UINT_MAX)
(16,data)
(17,result)
(18,data)
(19,data * data)
(20,data)
(21,result)
(22,data = UINT_MAX)
(23,result = data * data)
(24,while(1)
(25,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^