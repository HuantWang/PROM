-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_preinc_06_bad()
{
    short data;
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
47,48
47,49
49,50
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,43,46,48,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_preinc_06_bad(){    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_preinc_06_bad()
CWE190_Integer_Overflow__short_rand_preinc_06_bad
{    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(8,19,0)
(21,22,0)
(26,16,0)
(4,8,0)
(20,22,0)
(19,16,0)
(6,4,0)
(11,14,0)
(17,22,0)
(9,28,0)
(0,19,0)
(23,8,0)
(24,8,0)
(12,16,0)
(8,21,0)
(16,26,0)
(19,15,0)
(10,19,0)
(16,12,0)
(7,27,0)
(28,13,0)
(16,19,0)
(29,10,0)
(1,14,0)
(10,21,0)
(25,22,0)
(4,28,0)
(10,28,0)
(8,28,0)
(3,21,0)
(2,21,0)
(5,27,0)
(18,4,1)
(10,19,1)
(16,26,1)
(8,23,1)
(18,27,1)
(8,19,1)
(10,21,1)
(11,21,1)
(21,3,1)
(5,19,1)
(0,14,1)
(19,16,1)
(8,21,1)
(26,0,1)
(23,24,1)
(10,29,1)
(7,5,1)
(3,2,1)
(16,12,1)
(14,1,1)
(6,8,1)
(29,27,1)
(27,7,1)
(4,6,1)
(5,14,1)
(24,10,1)
(4,8,1)
(1,11,1)
(10,27,2)
(4,27,2)
(4,8,2)
(8,21,2)
(26,14,2)
(24,27,2)
(8,19,2)
(10,21,2)
(19,16,2)
(10,19,2)
(6,27,2)
(8,27,2)
(16,12,2)
(16,14,2)
(0,14,2)
(29,27,2)
(16,26,2)
(19,14,2)
(23,27,2)
-----------------------------------
(0,data)
(1,5)
(2,data)
(3,0)
(4,printIntLine(result)
(5,STATIC_CONST_FIVE)
(6,result)
(7,5)
(8,result = data)
(9,result)
(10,++data)
(11,STATIC_CONST_FIVE)
(12,short)
(13,)
(14,STATIC_CONST_FIVE==5)
(15,)
(16,(short)
(17,data)
(18,RET)
(19,data = (short)
(20,if(STATIC_CONST_FIVE==5)
(21,data = 0)
(22,)
(23,data)
(24,result)
(25,if(STATIC_CONST_FIVE==5)
(26,RAND32()
(27,STATIC_CONST_FIVE==5)
(28,)
(29,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^