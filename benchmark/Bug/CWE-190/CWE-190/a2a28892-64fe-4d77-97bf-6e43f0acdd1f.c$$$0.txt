-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_postinc_03_bad()
{
    short data;
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
31,32
32,33
32,34
32,35
33,34
34,35
35,36
37,38
38,39
38,40
40,41
40,42
42,43
43,44
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,29,30,36,39,41,44,48,50
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
28,29
28,30
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_postinc_03_bad(){    short data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_postinc_03_bad()
CWE190_Integer_Overflow__short_max_postinc_03_bad
{    short data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
5==5
5
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(10,18,0)
(4,13,0)
(14,22,0)
(20,11,0)
(19,18,0)
(6,13,0)
(5,27,0)
(12,13,0)
(3,1,0)
(7,3,0)
(7,16,0)
(15,16,0)
(16,3,0)
(25,14,0)
(16,14,0)
(0,17,0)
(11,17,0)
(26,17,0)
(11,14,0)
(2,14,0)
(16,17,0)
(17,13,0)
(8,7,0)
(9,27,0)
(11,3,0)
(24,3,0)
(23,16,0)
(18,10,1)
(11,14,1)
(20,18,1)
(9,5,1)
(11,17,1)
(2,27,1)
(16,17,1)
(17,26,1)
(10,19,1)
(27,9,1)
(16,14,1)
(7,8,1)
(11,20,1)
(8,16,1)
(21,7,1)
(7,16,1)
(15,11,1)
(5,17,1)
(19,14,1)
(14,25,1)
(26,0,1)
(21,18,1)
(23,15,1)
(19,27,1)
(16,23,1)
(25,2,1)
(11,18,2)
(7,16,2)
(15,18,2)
(7,18,2)
(8,18,2)
(16,14,2)
(11,14,2)
(14,27,2)
(16,17,2)
(23,18,2)
(11,17,2)
(16,18,2)
(20,18,2)
(2,27,2)
(25,27,2)
-----------------------------------
(0,data)
(1,)
(2,data)
(3,)
(4,if(5==5)
(5,5)
(6,if(5==5)
(7,printIntLine(result)
(8,result)
(9,5)
(10,5)
(11,data++)
(12,data)
(13,)
(14,data = SHRT_MAX)
(15,result)
(16,result = data)
(17,data = 0)
(18,5==5)
(19,5)
(20,data)
(21,RET)
(22,)
(23,data)
(24,result)
(25,SHRT_MAX)
(26,0)
(27,5==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^