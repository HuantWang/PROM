-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_preinc_06_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
22,24
23,24
24,25
24,26
26,27
26,28
26,29
28,29
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
35,37
35,38
35,39
36,37
38,39
40,41
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
51,53
52,53
54,55
56,57
57,58
58,59
58,60
59,60
62,63
62,64
63,64
63,65
64,65
67,68
68,69
68,70
68,71
69,70
70,71
71,72
73,74
74,75
74,76
76,77
76,78
78,79
79,80
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,30,32,37,39,41,43,45,50,53,55,60,61,65,66,72,75,77,80,84,86
-----computeFrom-----
12,13
12,14
17,18
17,19
34,35
34,36
48,49
48,50
63,64
63,65
-----guardedBy-----
39,55
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_preinc_06_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_preinc_06_bad()
CWE190_Integer_Overflow__int_fgets_preinc_06_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(10,7,0)
(31,14,0)
(43,25,0)
(13,42,0)
(33,13,0)
(16,35,0)
(38,27,0)
(30,38,0)
(21,25,0)
(37,10,0)
(5,27,0)
(9,41,0)
(12,34,0)
(39,13,0)
(29,34,0)
(35,7,0)
(0,34,0)
(7,24,0)
(36,3,0)
(14,10,0)
(27,2,0)
(1,8,0)
(34,0,0)
(15,32,0)
(10,27,0)
(18,3,0)
(35,33,0)
(7,35,0)
(23,10,0)
(10,8,0)
(14,27,0)
(40,13,0)
(34,33,0)
(22,0,0)
(19,41,0)
(4,7,0)
(20,33,0)
(17,15,0)
(26,41,0)
(38,7,0)
(44,34,0)
(11,8,0)
(8,41,0)
(38,8,0)
(6,33,0)
(44,12,1)
(38,8,1)
(38,30,1)
(4,0,1)
(15,17,1)
(33,20,1)
(23,38,1)
(36,25,1)
(43,8,1)
(21,43,1)
(7,35,1)
(6,25,1)
(10,37,1)
(14,10,1)
(30,3,1)
(14,31,1)
(36,15,1)
(10,8,1)
(25,21,1)
(20,6,1)
(37,23,1)
(0,34,1)
(8,1,1)
(28,3,1)
(35,33,1)
(0,22,1)
(17,0,1)
(36,7,1)
(22,34,1)
(16,4,1)
(28,14,1)
(10,7,1)
(29,44,1)
(34,33,1)
(1,11,1)
(38,7,1)
(3,18,1)
(18,36,1)
(35,16,1)
(34,29,1)
(31,10,1)
(12,33,1)
(22,25,2)
(38,7,2)
(16,0,2)
(37,3,2)
(0,34,2)
(12,25,2)
(35,0,2)
(38,8,2)
(44,25,2)
(31,3,2)
(14,10,2)
(6,25,2)
(10,8,2)
(0,25,2)
(20,25,2)
(7,35,2)
(7,0,2)
(38,3,2)
(10,7,2)
(29,25,2)
(10,3,2)
(34,25,2)
(33,25,2)
(15,0,2)
(34,33,2)
(17,0,2)
(23,3,2)
(14,3,2)
(4,0,2)
(30,3,2)
(35,33,2)
-----------------------------------
(0,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(1,0)
(2,)
(3,STATIC_CONST_FIVE==5)
(4,data)
(5,result)
(6,inputBuffer)
(7,data = atoi(inputBuffer)
(8,data = 0)
(9,if(STATIC_CONST_FIVE==5)
(10,result = data)
(11,data)
(12,inputBuffer)
(13,)
(14,printIntLine(result)
(15,printLine("fgets()
(16,inputBuffer)
(17,"fgets()
(18,5)
(19,data)
(20,"")
(21,5)
(22,NULL)
(23,result)
(24,)
(25,STATIC_CONST_FIVE==5)
(26,if(STATIC_CONST_FIVE==5)
(27,)
(28,RET)
(29,stdin)
(30,data)
(31,result)
(32,)
(33,inputBuffer[CHAR_ARRAY_SIZE] = "")
(34,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(35,atoi(inputBuffer)
(36,STATIC_CONST_FIVE)
(37,data)
(38,++data)
(39,inputBuffer)
(40,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(41,)
(42,)
(43,STATIC_CONST_FIVE)
(44,CHAR_ARRAY_SIZE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^