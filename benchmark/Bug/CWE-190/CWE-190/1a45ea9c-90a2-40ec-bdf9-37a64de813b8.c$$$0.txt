-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_add_08_bad()
{
    short data;
    data = 0;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
33,34
34,35
36,37
37,38
37,39
38,39
39,40
39,41
41,42
41,43
43,44
44,45
44,46
45,46
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,19,24,27,28,31,35,40,42,46,47,51,53
-----computeFrom-----
12,13
12,14
22,23
22,24
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_add_08_bad(){    short data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_add_08_bad()
CWE190_Integer_Overflow__short_rand_add_08_bad
{    short data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(6,9,0)
(2,1,0)
(15,0,0)
(11,9,0)
(0,8,0)
(9,6,0)
(7,12,0)
(4,22,0)
(20,19,0)
(6,19,0)
(9,12,0)
(1,9,0)
(3,22,0)
(22,14,0)
(16,6,0)
(19,13,0)
(10,6,0)
(0,19,0)
(6,22,0)
(17,14,0)
(8,0,0)
(24,14,0)
(12,25,0)
(19,0,0)
(0,15,0)
(18,14,0)
(1,12,0)
(5,21,1)
(21,22,1)
(22,3,1)
(6,19,1)
(0,15,1)
(6,16,1)
(15,20,1)
(2,9,1)
(23,1,1)
(20,21,1)
(1,2,1)
(5,19,1)
(9,6,1)
(10,11,1)
(1,9,1)
(19,0,1)
(16,10,1)
(6,22,1)
(3,4,1)
(0,8,1)
(11,5,1)
(23,5,1)
(20,21,2)
(11,5,2)
(6,5,2)
(1,5,2)
(0,21,2)
(0,15,2)
(6,22,2)
(15,21,2)
(6,19,2)
(19,21,2)
(16,5,2)
(9,5,2)
(10,5,2)
(0,8,2)
(2,5,2)
(19,0,2)
(9,6,2)
(1,9,2)
-----------------------------------
(0,(short)
(1,printIntLine(result)
(2,result)
(3,0)
(4,data)
(5,staticReturnsTrue()
(6,data + 1)
(7,result)
(8,short)
(9,result = data + 1)
(10,data)
(11,result)
(12,)
(13,)
(14,)
(15,RAND32()
(16,1)
(17,if(staticReturnsTrue()
(18,data)
(19,data = (short)
(20,data)
(21,staticReturnsTrue()
(22,data = 0)
(23,RET)
(24,if(staticReturnsTrue()
(25,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^