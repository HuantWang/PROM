-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_bad()
{
    int64_t data;
    data = 0LL;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%lld", &data);
    CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData = data;
    CWE190_Integer_Overflow__int64_t_fscanf_multiply_68b_badSink();
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
18,19
18,20
18,21
18,22
19,20
21,22
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
34,35
35,36
-----nextToken-----
2,4,9,11,15,16,20,22,23,26,30,32,36
-----computeFrom-----
13,14
13,15
28,29
28,30
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_bad(){    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%lld", &data);    CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData = data;    CWE190_Integer_Overflow__int64_t_fscanf_multiply_68b_badSink();}
void
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_bad()
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_bad
{    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%lld", &data);    CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData = data;    CWE190_Integer_Overflow__int64_t_fscanf_multiply_68b_badSink();}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
fscanf (stdin, "%lld", &data);
fscanf (stdin, "%lld", &data)
fscanf
fscanf
stdin
stdin
"%lld"
&data
data
data
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData = data;
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData = data
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData
data
data
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68b_badSink();
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68b_badSink()
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68b_badSink
CWE190_Integer_Overflow__int64_t_fscanf_multiply_68b_badSink
-----joern-----
(12,8,0)
(10,8,0)
(6,11,0)
(2,8,0)
(0,11,0)
(5,11,0)
(7,0,0)
(11,8,0)
(9,8,0)
(4,10,0)
(11,0,0)
(1,10,0)
(7,6,1)
(4,1,1)
(12,10,1)
(5,9,1)
(6,5,1)
(11,0,1)
(1,11,1)
(3,12,1)
(10,4,1)
(0,7,1)
(11,0,2)
-----------------------------------
(0,&data)
(1,CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData)
(2,data)
(3,RET)
(4,data)
(5,stdin)
(6,"%lld")
(7,data)
(8,)
(9,L)
(10,CWE190_Integer_Overflow__int64_t_fscanf_multiply_68_badData = data)
(11,fscanf (stdin, "%lld", &data)
(12,CWE190_Integer_Overflow__int64_t_fscanf_multiply_68b_badSink()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^