-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_rand_square_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    char * dataPtr = (char *)dataVoidPtr;
    /* dereference dataPtr into data */
    char data = (*dataPtr);
    {
        /* POTENTIAL FLAW: if (data*data) > CHAR_MAX, this will overflow */
        char result = data * data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,38,40,44,46,50,52
-----computeFrom-----
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_rand_square_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    char * dataPtr = (char *)dataVoidPtr;    /* dereference dataPtr into data */    char data = (*dataPtr);    {        /* POTENTIAL FLAW: if (data*data) > CHAR_MAX, this will overflow */        char result = data * data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_rand_square_64b_badSink(void * dataVoidPtr)
CWE190_Integer_Overflow__char_rand_square_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    char * dataPtr = (char *)dataVoidPtr;    /* dereference dataPtr into data */    char data = (*dataPtr);    {        /* POTENTIAL FLAW: if (data*data) > CHAR_MAX, this will overflow */        char result = data * data;        printHexCharLine(result);    }}
char * dataPtr = (char *)dataVoidPtr;
char * dataPtr = (char *)dataVoidPtr;
char
* dataPtr = (char *)dataVoidPtr
*
dataPtr
= (char *)dataVoidPtr
(char *)dataVoidPtr
char *
char
*
*
dataVoidPtr
dataVoidPtr
char data = (*dataPtr);
char data = (*dataPtr);
char
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: if (data*data) > CHAR_MAX, this will overflow */        char result = data * data;        printHexCharLine(result);    }
char result = data * data;
char result = data * data;
char
result = data * data
result
= data * data
data * data
data
data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(12,9,0)
(7,12,0)
(3,9,0)
(19,4,0)
(18,16,0)
(2,4,0)
(20,16,0)
(9,0,0)
(7,20,0)
(2,14,0)
(9,12,0)
(15,14,0)
(10,7,0)
(14,16,0)
(13,2,0)
(22,16,0)
(21,19,0)
(0,9,0)
(1,19,0)
(4,14,0)
(5,12,0)
(8,20,0)
(6,4,0)
(20,7,0)
(9,17,0)
(19,20,0)
(12,16,0)
(4,19,0)
(19,1,1)
(12,9,1)
(1,21,1)
(3,5,1)
(7,12,1)
(21,6,1)
(20,7,1)
(10,8,1)
(13,4,1)
(19,20,1)
(2,4,1)
(9,3,1)
(7,10,1)
(9,17,1)
(9,0,1)
(11,2,1)
(2,13,1)
(4,19,1)
(6,20,1)
(8,12,1)
(2,4,2)
(12,9,2)
(9,0,2)
(19,20,2)
(20,7,2)
(7,12,2)
(9,17,2)
(4,19,2)
-----------------------------------
(0,char *)
(1,data)
(2,printHexCharLine(result)
(3,dataVoidPtr)
(4,result = data * data)
(5,dataPtr)
(6,result)
(7,*dataPtr)
(8,data)
(9,(char *)
(10,dataPtr)
(11,RET)
(12,* dataPtr = (char *)
(13,result)
(14,)
(15,result)
(16,)
(17,void * dataVoidPtr)
(18,data)
(19,data * data)
(20,data = (*dataPtr)
(21,data)
(22,dataPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^