-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_preinc_10_bad()
{
    int64_t data;
    data = 0LL;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
27,28
30,31
31,32
33,34
33,35
34,35
36,37
37,38
37,39
37,40
38,39
39,40
40,41
42,43
43,44
43,45
44,45
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,9,11,15,16,19,24,28,29,32,35,41,45,47,50,54,56
-----computeFrom-----
13,14
13,15
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_preinc_10_bad(){    int64_t data;    data = 0LL;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_preinc_10_bad()
CWE190_Integer_Overflow__int64_t_rand_preinc_10_bad
{    int64_t data;    data = 0LL;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(19,9,0)
(2,15,0)
(17,10,0)
(17,9,0)
(3,9,0)
(12,15,0)
(0,10,0)
(21,3,0)
(14,10,0)
(9,7,0)
(3,21,0)
(18,0,0)
(16,10,0)
(1,15,0)
(8,3,0)
(20,0,0)
(23,15,0)
(3,8,0)
(10,22,0)
(0,9,0)
(9,3,0)
(5,14,0)
(11,17,0)
(14,0,0)
(3,8,1)
(14,5,1)
(18,20,1)
(6,9,1)
(3,21,1)
(0,9,1)
(11,6,1)
(20,17,1)
(0,18,1)
(6,4,1)
(14,0,1)
(19,4,1)
(17,9,1)
(4,23,1)
(13,14,1)
(9,3,1)
(21,19,1)
(17,11,1)
(13,6,1)
(5,0,1)
(5,6,2)
(18,6,2)
(20,6,2)
(3,21,2)
(14,6,2)
(0,6,2)
(3,4,2)
(21,4,2)
(9,3,2)
(17,6,2)
(11,6,2)
(3,8,2)
(9,4,2)
(0,9,2)
(17,9,2)
(19,4,2)
(14,0,2)
-----------------------------------
(0,result = data)
(1,data)
(2,if(globalTrue)
(3,(int64_t)
(4,globalTrue)
(5,result)
(6,globalTrue)
(7,)
(8,int64_t)
(9,data = (int64_t)
(10,)
(11,data)
(12,if(globalTrue)
(13,RET)
(14,printLongLongLine(result)
(15,)
(16,result)
(17,++data)
(18,data)
(19,data)
(20,result)
(21,RAND64()
(22,)
(23,L)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^