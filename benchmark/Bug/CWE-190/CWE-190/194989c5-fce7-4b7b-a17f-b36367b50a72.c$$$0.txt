-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_square_42_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    data = badSource(data);
    {
        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
        int result = data * data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
23,24
25,26
25,27
26,27
27,28
27,29
29,30
29,31
31,32
32,33
32,34
33,34
35,36
37,38
38,39
38,40
39,40
41,42
-----nextToken-----
2,4,8,10,14,15,19,22,24,28,30,34,36,40,42
-----computeFrom-----
12,13
12,14
17,18
17,19
32,33
32,34
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_square_42_bad(){    int data;    /* Initialize data */    data = 0;    data = badSource(data);    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_rand_square_42_bad()
CWE190_Integer_Overflow__int_rand_square_42_bad
{    int data;    /* Initialize data */    data = 0;    data = badSource(data);    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(9,5,0)
(18,7,0)
(9,18,0)
(7,6,0)
(16,6,0)
(7,18,0)
(6,16,0)
(0,5,0)
(5,14,0)
(1,17,0)
(13,6,0)
(8,14,0)
(12,18,0)
(17,14,0)
(15,17,0)
(16,17,0)
(2,9,0)
(10,7,0)
(6,14,0)
(3,7,0)
(11,16,0)
(18,5,0)
(7,3,1)
(15,1,1)
(10,12,1)
(18,7,1)
(11,13,1)
(16,11,1)
(9,18,1)
(17,15,1)
(12,6,1)
(13,17,1)
(7,6,1)
(4,9,1)
(9,2,1)
(6,16,1)
(16,17,1)
(3,10,1)
(2,18,1)
(6,16,2)
(9,18,2)
(18,7,2)
(7,6,2)
(16,17,2)
-----------------------------------
(0,result)
(1,data)
(2,result)
(3,data)
(4,RET)
(5,)
(6,data = badSource(data)
(7,data * data)
(8,data)
(9,printIntLine(result)
(10,data)
(11,data)
(12,result)
(13,data)
(14,)
(15,0)
(16,badSource(data)
(17,data = 0)
(18,result = data * data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^