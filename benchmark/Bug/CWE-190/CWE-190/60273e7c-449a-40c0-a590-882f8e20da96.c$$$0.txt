-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_multiply_44_bad()
{
    unsigned int data;
    /* define a function pointer */
    void (*funcPtr) (unsigned int) = badSink;
    data = 0;
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = UINT_MAX;
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
15,16
15,17
18,19
18,20
20,21
22,23
23,24
25,26
26,27
26,28
27,28
30,31
31,32
31,33
32,33
34,35
36,37
37,38
37,39
38,39
40,41
-----nextToken-----
2,4,8,10,13,16,17,19,21,24,28,29,33,35,39,41
-----computeFrom-----
26,27
26,28
31,32
31,33
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_multiply_44_bad(){    unsigned int data;    /* define a function pointer */    void (*funcPtr) (unsigned int) = badSink;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = UINT_MAX;    /* use the function pointer */    funcPtr(data);}
void
CWE190_Integer_Overflow__unsigned_int_max_multiply_44_bad()
CWE190_Integer_Overflow__unsigned_int_max_multiply_44_bad
{    unsigned int data;    /* define a function pointer */    void (*funcPtr) (unsigned int) = badSink;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = UINT_MAX;    /* use the function pointer */    funcPtr(data);}
unsigned int data;
unsigned int data;
unsigned int
data
data
void (*funcPtr) (unsigned int) = badSink;
void (*funcPtr) (unsigned int) = badSink;
void
(*funcPtr) (unsigned int) = badSink
*funcPtr
*
funcPtr
unsigned int
unsigned int


= badSink
badSink
badSink
data = 0;
data = 0
data
data
0
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(5,6,0)
(13,9,0)
(14,9,0)
(8,9,0)
(1,9,0)
(11,14,0)
(8,13,0)
(7,6,0)
(2,9,0)
(10,13,0)
(6,9,0)
(4,13,0)
(0,14,0)
(3,8,0)
(7,14,1)
(11,0,1)
(10,4,1)
(6,5,1)
(4,6,1)
(5,7,1)
(3,13,1)
(13,10,1)
(14,11,1)
(8,13,1)
(12,8,1)
(8,3,1)
(8,13,2)
-----------------------------------
(0,funcPtr)
(1,data)
(2,funcPtr)
(3,data)
(4,data)
(5,0)
(6,data = 0)
(7,data)
(8,funcPtr(data)
(9,)
(10,UINT_MAX)
(11,badSink)
(12,RET)
(13,data = UINT_MAX)
(14,(*funcPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^