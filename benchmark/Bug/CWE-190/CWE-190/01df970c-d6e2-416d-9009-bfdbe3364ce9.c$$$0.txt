-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_add_10_bad()
{
    short data;
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,33,35,39,40,44,46
-----computeFrom-----
12,13
12,14
21,22
21,23
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_add_10_bad(){    short data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_add_10_bad()
CWE190_Integer_Overflow__short_max_add_10_bad
{    short data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(4,18,0)
(7,6,0)
(9,20,0)
(12,20,0)
(10,16,0)
(21,4,0)
(1,13,0)
(7,10,0)
(2,4,0)
(22,6,0)
(4,13,0)
(18,23,0)
(3,18,0)
(4,6,0)
(14,18,0)
(6,10,0)
(8,10,0)
(11,20,0)
(13,20,0)
(17,7,0)
(6,4,0)
(5,13,0)
(5,1,1)
(15,7,1)
(0,18,1)
(13,5,1)
(0,19,1)
(19,13,1)
(7,17,1)
(4,2,1)
(21,22,1)
(22,0,1)
(7,6,1)
(17,6,1)
(4,18,1)
(15,0,1)
(14,19,1)
(6,4,1)
(3,14,1)
(18,3,1)
(2,21,1)
(4,13,1)
(22,0,2)
(7,0,2)
(4,13,2)
(21,0,2)
(2,0,2)
(18,19,2)
(6,0,2)
(4,18,2)
(14,19,2)
(6,4,2)
(3,19,2)
(7,6,2)
(4,0,2)
(17,0,2)
-----------------------------------
(0,globalTrue)
(1,data)
(2,1)
(3,SHRT_MAX)
(4,data + 1)
(5,0)
(6,result = data + 1)
(7,printIntLine(result)
(8,result)
(9,if(globalTrue)
(10,)
(11,if(globalTrue)
(12,data)
(13,data = 0)
(14,data)
(15,RET)
(16,)
(17,result)
(18,data = SHRT_MAX)
(19,globalTrue)
(20,)
(21,data)
(22,result)
(23,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^