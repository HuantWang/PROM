-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_preinc_02_bad()
{
    short data;
    data = 0;
    if(1)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
27,28
28,29
30,31
30,32
32,33
33,34
33,35
33,36
34,35
35,36
36,37
38,39
39,40
39,41
41,42
41,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,17,22,25,26,29,31,37,40,42,45,49,51
-----computeFrom-----
12,13
12,14
20,21
20,22
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_preinc_02_bad(){    short data;    data = 0;    if(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_preinc_02_bad()
CWE190_Integer_Overflow__short_rand_preinc_02_bad
{    short data;    data = 0;    if(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
1
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(15,0,0)
(11,2,0)
(7,6,0)
(6,14,0)
(17,12,0)
(3,0,0)
(10,9,0)
(3,6,0)
(2,11,0)
(11,4,0)
(5,2,0)
(12,14,0)
(0,1,0)
(23,9,0)
(12,11,0)
(12,0,0)
(2,20,0)
(25,14,0)
(16,11,0)
(14,9,0)
(6,11,0)
(20,2,0)
(6,0,0)
(18,6,0)
(24,14,0)
(2,5,0)
(19,3,0)
(22,9,0)
(6,14,1)
(8,21,1)
(7,18,1)
(14,24,1)
(18,12,1)
(17,21,1)
(2,20,1)
(21,11,1)
(2,5,1)
(5,16,1)
(12,14,1)
(12,17,1)
(3,6,1)
(3,19,1)
(13,14,1)
(21,13,1)
(11,2,1)
(24,25,1)
(6,7,1)
(19,6,1)
(16,13,1)
(8,3,1)
(6,11,1)
(12,11,1)
(12,14,2)
(5,13,2)
(6,11,2)
(19,21,2)
(16,13,2)
(12,21,2)
(11,13,2)
(12,11,2)
(17,21,2)
(3,21,2)
(3,6,2)
(6,21,2)
(7,21,2)
(11,2,2)
(6,14,2)
(2,13,2)
(18,21,2)
(2,5,2)
(2,20,2)
-----------------------------------
(0,)
(1,)
(2,(short)
(3,printIntLine(result)
(4,)
(5,RAND32()
(6,result = data)
(7,data)
(8,RET)
(9,)
(10,data)
(11,data = (short)
(12,++data)
(13,1)
(14,data = 0)
(15,result)
(16,data)
(17,data)
(18,result)
(19,result)
(20,short)
(21,1)
(22,if(1)
(23,if(1)
(24,0)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^