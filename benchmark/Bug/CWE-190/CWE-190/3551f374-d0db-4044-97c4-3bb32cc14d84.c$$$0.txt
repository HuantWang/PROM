-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_preinc_31_bad()
{
    char data;
    data = ' ';
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%c", &data);
    {
        char dataCopy = data;
        char data = dataCopy;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            char result = data;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
24,25
26,27
26,28
26,29
27,28
28,29
28,30
30,31
30,32
32,33
33,34
35,36
36,37
36,38
38,39
38,40
40,41
41,42
43,44
43,45
43,46
44,45
45,46
46,47
48,49
49,50
49,51
51,52
51,53
53,54
54,55
56,57
57,58
57,59
58,59
60,61
-----nextToken-----
2,4,8,10,14,15,19,21,22,25,29,31,34,37,39,42,47,50,52,55,59,61
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_preinc_31_bad(){    char data;    data = ' ';    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%c", &data);    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_preinc_31_bad()
CWE190_Integer_Overflow__char_fscanf_preinc_31_bad
{    char data;    data = ' ';    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%c", &data);    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
{        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
char dataCopy = data;
char dataCopy = data;
char
dataCopy = data
dataCopy
= data
data
data
char data = dataCopy;
char data = dataCopy;
char
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(6,11,0)
(27,8,0)
(2,12,0)
(15,27,0)
(7,8,0)
(7,3,0)
(28,8,0)
(22,12,0)
(16,4,0)
(17,4,0)
(11,3,0)
(25,27,0)
(11,27,0)
(0,8,0)
(10,5,0)
(9,21,0)
(16,21,0)
(18,4,0)
(12,5,0)
(4,23,0)
(20,7,0)
(14,3,0)
(13,5,0)
(21,23,0)
(1,16,0)
(12,4,0)
(8,5,0)
(24,21,0)
(19,23,0)
(3,5,0)
(21,16,0)
(5,23,0)
(8,12,0)
(27,3,0)
(15,7,1)
(6,27,1)
(11,6,1)
(26,11,1)
(28,0,1)
(16,1,1)
(20,8,1)
(8,28,1)
(0,12,1)
(2,21,1)
(24,9,1)
(27,8,1)
(1,24,1)
(4,17,1)
(12,22,1)
(7,8,1)
(8,12,1)
(16,4,1)
(17,18,1)
(27,25,1)
(22,2,1)
(11,27,1)
(21,16,1)
(12,4,1)
(25,15,1)
(9,4,1)
(7,20,1)
(12,4,2)
(8,12,2)
(16,4,2)
(27,8,2)
(7,8,2)
(21,16,2)
(11,27,2)
-----------------------------------
(0,data)
(1,data)
(2,dataCopy)
(3,)
(4,data = \\\' \\\')
(5,)
(6,result)
(7,++data)
(8,data = dataCopy)
(9,stdin)
(10,data)
(11,printHexCharLine(result)
(12,dataCopy = data)
(13,dataCopy)
(14,result)
(15,result)
(16,&data)
(17,\\\' \\\')
(18,data)
(19,data)
(20,data)
(21,fscanf (stdin, "%c", &data)
(22,data)
(23,)
(24,"%c")
(25,data)
(26,RET)
(27,result = data)
(28,dataCopy)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^