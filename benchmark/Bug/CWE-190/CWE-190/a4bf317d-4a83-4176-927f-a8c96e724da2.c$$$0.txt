-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_preinc_03_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(5==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
21,23
22,23
23,24
23,25
25,26
25,27
25,28
27,28
28,29
30,31
32,33
32,34
32,35
33,34
33,35
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
53,54
55,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
62,64
65,66
66,67
66,68
66,69
67,68
68,69
69,70
71,72
72,73
72,74
74,75
74,76
76,77
77,78
79,80
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,29,31,36,38,40,42,44,49,52,54,59,60,63,64,70,73,75,78,82,84
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
47,48
47,49
62,63
62,64
-----guardedBy-----
38,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_preinc_03_bad(){    int data;    /* Initialize data */    data = 0;    if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_preinc_03_bad()
CWE190_Integer_Overflow__int_fgets_preinc_03_bad
{    int data;    /* Initialize data */    data = 0;    if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
5==5
5
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(13,22,0)
(32,34,0)
(25,37,0)
(6,23,0)
(34,32,0)
(21,34,0)
(43,34,0)
(28,22,0)
(42,37,0)
(2,9,0)
(35,39,0)
(26,24,0)
(20,1,0)
(12,17,0)
(23,40,0)
(7,27,0)
(40,44,0)
(14,34,0)
(34,23,0)
(3,27,0)
(29,35,0)
(4,36,0)
(0,9,0)
(13,27,0)
(33,23,0)
(13,35,0)
(1,23,0)
(35,1,0)
(5,15,0)
(27,17,0)
(41,40,0)
(36,22,0)
(18,24,0)
(30,5,0)
(37,22,0)
(11,40,0)
(1,35,0)
(16,32,0)
(36,37,0)
(37,35,0)
(38,13,0)
(22,10,0)
(31,17,0)
(19,17,0)
(37,27,0)
(37,35,1)
(8,36,1)
(14,43,1)
(26,5,1)
(13,35,1)
(32,34,1)
(3,7,1)
(36,37,1)
(33,9,1)
(5,30,1)
(21,14,1)
(23,6,1)
(2,27,1)
(30,32,1)
(9,0,1)
(26,35,1)
(29,32,1)
(35,1,1)
(20,29,1)
(13,38,1)
(43,23,1)
(27,3,1)
(24,18,1)
(38,24,1)
(13,27,1)
(4,37,1)
(42,25,1)
(8,24,1)
(37,42,1)
(32,16,1)
(25,13,1)
(34,21,1)
(18,26,1)
(26,9,1)
(37,27,1)
(16,34,1)
(0,2,1)
(1,23,1)
(1,20,1)
(34,23,1)
(36,4,1)
(6,33,1)
(32,34,2)
(34,9,2)
(36,24,2)
(35,1,2)
(42,24,2)
(35,32,2)
(1,32,2)
(29,32,2)
(13,24,2)
(37,35,2)
(25,24,2)
(38,24,2)
(23,9,2)
(30,32,2)
(36,37,2)
(16,9,2)
(6,9,2)
(13,35,2)
(37,27,2)
(14,9,2)
(37,24,2)
(34,23,2)
(1,23,2)
(32,9,2)
(21,9,2)
(43,9,2)
(20,32,2)
(33,9,2)
(4,24,2)
(5,32,2)
(13,27,2)
-----------------------------------
(0,5)
(1,atoi(inputBuffer)
(2,5)
(3,0)
(4,result)
(5,printLine("fgets()
(6,"")
(7,data)
(8,RET)
(9,5==5)
(10,)
(11,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(12,data)
(13,++data)
(14,CHAR_ARRAY_SIZE)
(15,)
(16,NULL)
(17,)
(18,5)
(19,if(5==5)
(20,inputBuffer)
(21,stdin)
(22,)
(23,inputBuffer[CHAR_ARRAY_SIZE] = "")
(24,5==5)
(25,result)
(26,5)
(27,data = 0)
(28,result)
(29,data)
(30,"fgets()
(31,if(5==5)
(32,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(33,inputBuffer)
(34,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(35,data = atoi(inputBuffer)
(36,printIntLine(result)
(37,result = data)
(38,data)
(39,)
(40,)
(41,inputBuffer)
(42,data)
(43,inputBuffer)
(44,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^