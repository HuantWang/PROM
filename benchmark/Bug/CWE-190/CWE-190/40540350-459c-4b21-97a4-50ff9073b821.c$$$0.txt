-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_postinc_18_bad()
{
    char data;
    data = ' ';
    goto source;
source:
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = CHAR_MAX;
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        char result = data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
22,23
24,25
26,27
28,29
28,30
30,31
30,32
30,33
31,32
32,33
33,34
35,36
36,37
36,38
38,39
38,40
40,41
41,42
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,27,29,34,37,39,42,46,48
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_postinc_18_bad(){    char data;    data = ' ';    goto source;source:    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    goto sink;sink:    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_max_postinc_18_bad()
CWE190_Integer_Overflow__char_max_postinc_18_bad
{    char data;    data = ' ';    goto source;source:    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    goto sink;sink:    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
goto source;
source
source:    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;
source
data = CHAR_MAX;
data = CHAR_MAX
data
data
CHAR_MAX
CHAR_MAX
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }
sink
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }
data++;
data++
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(2,19,0)
(17,13,0)
(19,5,0)
(1,13,0)
(0,12,0)
(3,5,0)
(6,5,0)
(4,13,0)
(16,3,0)
(19,20,0)
(3,20,0)
(14,13,0)
(21,14,0)
(12,20,0)
(11,20,0)
(10,13,0)
(20,13,0)
(8,14,0)
(12,3,0)
(5,13,0)
(15,3,0)
(7,5,0)
(9,13,0)
(21,8,1)
(12,3,1)
(3,15,1)
(5,6,1)
(19,5,1)
(12,0,1)
(1,14,1)
(19,2,1)
(6,7,1)
(0,3,1)
(14,21,1)
(3,5,1)
(15,16,1)
(7,1,1)
(4,5,1)
(2,4,1)
(18,12,1)
(16,19,1)
(3,5,2)
(19,5,2)
(12,3,2)
-----------------------------------
(0,result)
(1,goto source;)
(2,data)
(3,result = data)
(4,goto sink;)
(5,data = CHAR_MAX)
(6,CHAR_MAX)
(7,data)
(8,data)
(9,source:)
(10,sink:)
(11,result)
(12,printHexCharLine(result)
(13,)
(14,data = ' ')
(15,data)
(16,result)
(17,data)
(18,RET)
(19,data++)
(20,)
(21,' ')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^