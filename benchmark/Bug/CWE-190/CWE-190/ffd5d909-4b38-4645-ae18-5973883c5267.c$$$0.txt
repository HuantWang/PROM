-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_add_03_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
26,27
28,29
28,30
29,30
29,31
32,33
33,34
33,35
34,35
35,36
35,37
37,38
37,39
39,40
40,41
40,42
41,42
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,8,10,14,15,18,19,24,27,30,31,36,38,42,43,47,49
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
29,30
29,31
40,41
40,42
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_add_03_bad(){    int data;    /* Initialize data */    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_rand_add_03_bad()
CWE190_Integer_Overflow__int_rand_add_03_bad
{    int data;    /* Initialize data */    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
5==5
5
5
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(11,24,0)
(4,18,0)
(23,7,0)
(15,0,0)
(1,18,0)
(16,22,0)
(20,19,0)
(2,12,0)
(5,20,0)
(22,6,0)
(8,23,0)
(8,6,0)
(21,23,0)
(8,12,0)
(25,24,0)
(12,18,0)
(23,21,0)
(9,23,0)
(22,20,0)
(6,20,0)
(14,0,0)
(13,6,0)
(27,18,0)
(10,8,0)
(26,8,0)
(6,8,0)
(3,12,0)
(11,0,1)
(8,12,1)
(9,0,1)
(0,15,1)
(12,2,1)
(25,11,1)
(8,23,1)
(13,24,1)
(26,13,1)
(14,12,1)
(11,23,1)
(16,6,1)
(24,25,1)
(21,9,1)
(6,8,1)
(17,24,1)
(17,22,1)
(8,10,1)
(2,3,1)
(22,16,1)
(15,14,1)
(22,6,1)
(23,21,1)
(10,26,1)
(13,24,2)
(8,12,2)
(9,0,2)
(10,24,2)
(22,6,2)
(23,21,2)
(22,24,2)
(16,24,2)
(8,24,2)
(23,0,2)
(21,0,2)
(8,23,2)
(6,8,2)
(26,24,2)
(6,24,2)
-----------------------------------
(0,5==5)
(1,if(5==5)
(2,0)
(3,data)
(4,if(5==5)
(5,result)
(6,result = data + 1)
(7,)
(8,data + 1)
(9,data)
(10,1)
(11,5)
(12,data = 0)
(13,result)
(14,5)
(15,5)
(16,result)
(17,RET)
(18,)
(19,)
(20,)
(21,RAND32()
(22,printIntLine(result)
(23,data = RAND32()
(24,5==5)
(25,5)
(26,data)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^