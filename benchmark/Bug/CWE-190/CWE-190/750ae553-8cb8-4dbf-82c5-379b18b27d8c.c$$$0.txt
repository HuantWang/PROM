-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_rand_preinc_31_bad()
{
    char data;
    data = ' ';
    /* POTENTIAL FLAW: Use a random value */
    data = (char)RAND32();
    {
        char dataCopy = data;
        char data = dataCopy;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            char result = data;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
21,23
24,25
25,26
27,28
27,29
27,30
28,29
29,30
29,31
31,32
31,33
33,34
34,35
36,37
37,38
37,39
39,40
39,41
41,42
42,43
44,45
44,46
44,47
45,46
46,47
47,48
49,50
50,51
50,52
52,53
52,54
54,55
55,56
57,58
58,59
58,60
59,60
61,62
-----nextToken-----
2,4,8,10,14,15,19,22,23,26,30,32,35,38,40,43,48,51,53,56,60,62
-----computeFrom-----
12,13
12,14
17,18
17,19
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_rand_preinc_31_bad(){    char data;    data = ' ';    /* POTENTIAL FLAW: Use a random value */    data = (char)RAND32();    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_rand_preinc_31_bad()
CWE190_Integer_Overflow__char_rand_preinc_31_bad
{    char data;    data = ' ';    /* POTENTIAL FLAW: Use a random value */    data = (char)RAND32();    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
data = (char)RAND32();
data = (char)RAND32()
data
data
(char)RAND32()
char
char

RAND32()
RAND32
RAND32
{        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
char dataCopy = data;
char dataCopy = data;
char
dataCopy = data
dataCopy
= data
data
data
char data = dataCopy;
char data = dataCopy;
char
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(15,19,0)
(0,9,0)
(15,28,0)
(13,22,0)
(23,11,0)
(5,24,0)
(28,9,0)
(16,9,0)
(26,28,0)
(24,26,0)
(19,15,0)
(3,12,0)
(26,0,0)
(11,12,0)
(13,12,0)
(28,15,0)
(25,22,0)
(8,0,0)
(22,24,0)
(1,24,0)
(18,28,0)
(21,26,0)
(7,27,0)
(2,27,0)
(20,0,0)
(22,12,0)
(17,26,0)
(10,15,0)
(27,9,0)
(24,0,0)
(12,0,0)
(15,10,0)
(6,13,0)
(11,24,0)
(4,22,0)
(13,6,1)
(22,24,1)
(1,26,1)
(22,4,1)
(25,11,1)
(15,10,1)
(23,24,1)
(28,15,1)
(26,21,1)
(17,28,1)
(11,23,1)
(7,2,1)
(24,5,1)
(24,26,1)
(18,27,1)
(26,28,1)
(13,22,1)
(15,19,1)
(6,22,1)
(5,1,1)
(27,7,1)
(11,24,1)
(19,18,1)
(4,25,1)
(21,17,1)
(14,13,1)
(24,26,2)
(11,24,2)
(13,22,2)
(28,15,2)
(15,10,2)
(26,28,2)
(15,19,2)
(22,24,2)
-----------------------------------
(0,)
(1,data)
(2,data)
(3,result)
(4,data)
(5,dataCopy)
(6,result)
(7,' ')
(8,dataCopy)
(9,)
(10,char)
(11,++data)
(12,)
(13,printHexCharLine(result)
(14,RET)
(15,(char)
(16,data)
(17,dataCopy)
(18,data)
(19,RAND32()
(20,data)
(21,data)
(22,result = data)
(23,data)
(24,data = dataCopy)
(25,result)
(26,dataCopy = data)
(27,data = ' ')
(28,data = (char)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^