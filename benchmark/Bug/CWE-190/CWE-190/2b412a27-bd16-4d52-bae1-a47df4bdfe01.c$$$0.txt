-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_postinc_17_bad()
{
    int i,j;
    unsigned int data;
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
43,46
43,47
44,45
45,46
45,47
46,47
49,50
49,51
50,51
53,54
54,55
56,57
57,58
57,59
57,60
58,59
59,60
60,61
62,63
63,64
63,65
65,66
65,67
67,68
68,69
70,71
71,72
71,73
72,73
74,75
-----nextToken-----
2,4,8,10,12,15,17,21,22,27,28,31,32,35,40,42,47,48,51,52,55,61,64,66,69,73,75
-----computeFrom-----
19,20
19,21
25,26
25,27
29,30
29,31
38,39
38,40
45,46
45,47
49,50
49,51
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_postinc_17_bad(){    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_postinc_17_bad()
CWE190_Integer_Overflow__unsigned_int_max_postinc_17_bad
{    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(22,7,0)
(15,9,0)
(12,33,0)
(23,32,0)
(36,6,0)
(34,3,0)
(30,9,0)
(16,32,0)
(19,39,0)
(5,1,0)
(3,14,0)
(6,33,0)
(37,30,0)
(9,13,0)
(32,39,0)
(4,6,0)
(25,18,0)
(38,39,0)
(30,18,0)
(34,30,0)
(18,1,0)
(29,18,0)
(10,2,0)
(8,1,0)
(17,9,0)
(28,3,0)
(30,3,0)
(2,33,0)
(7,18,0)
(31,30,0)
(27,1,0)
(11,34,0)
(20,39,0)
(26,1,0)
(0,33,0)
(7,9,0)
(21,20,0)
(35,1,0)
(7,3,0)
(33,0,1)
(21,34,1)
(34,30,1)
(31,7,1)
(19,38,1)
(2,10,1)
(10,9,1)
(36,4,1)
(30,18,1)
(30,37,1)
(6,33,1)
(4,2,1)
(7,18,1)
(22,32,1)
(18,29,1)
(32,39,1)
(37,31,1)
(7,9,1)
(12,18,1)
(2,33,1)
(38,6,1)
(15,6,1)
(0,12,1)
(4,33,1)
(6,36,1)
(9,17,1)
(32,16,1)
(16,23,1)
(23,20,1)
(11,30,1)
(20,21,1)
(7,22,1)
(29,25,1)
(20,39,1)
(24,32,1)
(30,9,1)
(23,39,1)
(39,19,1)
(34,11,1)
(17,15,1)
(10,6,2)
(16,32,2)
(36,6,2)
(4,6,2)
(6,33,2)
(21,32,2)
(32,39,2)
(2,33,2)
(34,32,2)
(20,32,2)
(9,6,2)
(17,6,2)
(7,32,2)
(31,32,2)
(11,32,2)
(23,32,2)
(32,32,2)
(30,32,2)
(30,9,2)
(7,9,2)
(34,30,2)
(6,6,2)
(37,32,2)
(2,6,2)
(20,39,2)
(7,18,2)
(22,32,2)
(30,18,2)
(15,6,2)
-----------------------------------
(0,0)
(1,)
(2,i++)
(3,)
(4,i)
(5,j)
(6,i < 1)
(7,data++)
(8,for(j = 0; j < 1; j++)
(9,data = UINT_MAX)
(10,i)
(11,result)
(12,i)
(13,)
(14,)
(15,data)
(16,1)
(17,UINT_MAX)
(18,data = 0)
(19,0)
(20,j++)
(21,j)
(22,data)
(23,j)
(24,RET)
(25,data)
(26,for(i = 0; i < 1; i++)
(27,i)
(28,result)
(29,0)
(30,result = data)
(31,result)
(32,j < 1)
(33,i = 0)
(34,printUnsignedLine(result)
(35,data)
(36,1)
(37,data)
(38,j)
(39,j = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^