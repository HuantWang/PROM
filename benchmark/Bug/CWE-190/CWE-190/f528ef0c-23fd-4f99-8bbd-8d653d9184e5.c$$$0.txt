-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_postinc_10_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalTrue)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
20,22
21,22
22,23
22,24
24,25
24,26
24,27
26,27
27,28
29,30
31,32
31,33
31,34
32,33
32,34
33,34
33,35
33,36
33,37
34,35
36,37
38,39
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
60,61
60,62
61,62
63,64
64,65
64,66
64,67
65,66
66,67
67,68
69,70
70,71
70,72
72,73
72,74
74,75
75,76
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,30,35,37,39,41,43,48,51,53,58,59,62,68,71,73,76,80,82
-----computeFrom-----
12,13
12,14
32,33
32,34
46,47
46,48
-----guardedBy-----
37,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_postinc_10_bad(){    int data;    /* Initialize data */    data = 0;    if(globalTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_postinc_10_bad()
CWE190_Integer_Overflow__int_fgets_postinc_10_bad
{    int data;    /* Initialize data */    data = 0;    if(globalTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
globalTrue
globalTrue
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(3,23,0)
(5,4,0)
(12,26,0)
(34,2,0)
(21,19,0)
(40,33,0)
(35,40,0)
(39,12,0)
(5,20,0)
(4,5,0)
(6,12,0)
(30,23,0)
(17,5,0)
(10,7,0)
(2,33,0)
(4,37,0)
(14,23,0)
(1,37,0)
(23,37,0)
(0,5,0)
(17,7,0)
(25,17,0)
(2,7,0)
(28,18,0)
(16,7,0)
(2,5,0)
(31,18,0)
(32,4,0)
(40,17,0)
(36,17,0)
(33,13,0)
(17,33,0)
(29,33,0)
(7,18,0)
(24,23,0)
(38,18,0)
(15,21,0)
(23,14,0)
(9,37,0)
(37,12,0)
(22,14,0)
(27,8,1)
(30,3,1)
(14,23,1)
(23,37,1)
(22,23,1)
(25,2,1)
(7,10,1)
(40,35,1)
(21,15,1)
(11,40,1)
(17,7,1)
(40,17,1)
(2,7,1)
(24,30,1)
(3,37,1)
(2,34,1)
(5,4,1)
(2,5,1)
(1,9,1)
(11,27,1)
(32,0,1)
(34,27,1)
(36,25,1)
(9,8,1)
(15,14,1)
(27,5,1)
(35,17,1)
(17,5,1)
(23,24,1)
(17,36,1)
(37,1,1)
(4,37,1)
(27,21,1)
(8,7,1)
(0,14,1)
(14,22,1)
(10,16,1)
(4,32,1)
(9,8,2)
(32,14,2)
(21,14,2)
(3,8,2)
(2,7,2)
(24,8,2)
(5,14,2)
(4,14,2)
(35,27,2)
(17,27,2)
(34,27,2)
(1,8,2)
(23,8,2)
(37,8,2)
(23,37,2)
(25,27,2)
(22,8,2)
(40,17,2)
(0,14,2)
(15,14,2)
(30,8,2)
(40,27,2)
(2,5,2)
(36,27,2)
(2,27,2)
(5,4,2)
(4,37,2)
(17,5,2)
(17,7,2)
(14,23,2)
(14,8,2)
-----------------------------------
(0,data)
(1,"")
(2,data++)
(3,inputBuffer)
(4,atoi(inputBuffer)
(5,data = atoi(inputBuffer)
(6,inputBuffer)
(7,data = 0)
(8,globalTrue)
(9,inputBuffer)
(10,0)
(11,RET)
(12,)
(13,)
(14,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(15,"fgets()
(16,data)
(17,result = data)
(18,)
(19,)
(20,)
(21,printLine("fgets()
(22,NULL)
(23,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(24,stdin)
(25,result)
(26,)
(27,globalTrue)
(28,if(globalTrue)
(29,result)
(30,CHAR_ARRAY_SIZE)
(31,data)
(32,inputBuffer)
(33,)
(34,data)
(35,result)
(36,data)
(37,inputBuffer[CHAR_ARRAY_SIZE] = "")
(38,if(globalTrue)
(39,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(40,printIntLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^