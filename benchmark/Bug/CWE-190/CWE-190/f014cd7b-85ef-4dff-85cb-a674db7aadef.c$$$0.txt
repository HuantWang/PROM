-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_postinc_06_bad()
{
    short data;
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_postinc_06_bad(){    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_postinc_06_bad()
CWE190_Integer_Overflow__short_max_postinc_06_bad
{    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(9,2,0)
(25,23,0)
(24,11,0)
(3,15,0)
(8,23,0)
(22,24,0)
(23,26,0)
(24,23,0)
(11,0,0)
(12,24,0)
(20,23,0)
(4,2,0)
(7,11,0)
(24,2,0)
(20,2,0)
(20,11,0)
(16,11,0)
(2,5,0)
(18,5,0)
(19,15,0)
(27,5,0)
(10,6,0)
(1,20,0)
(25,24,0)
(14,6,0)
(21,25,0)
(17,5,0)
(13,25,1)
(19,6,1)
(10,2,1)
(24,11,1)
(22,12,1)
(24,2,1)
(25,21,1)
(6,14,1)
(4,9,1)
(7,6,1)
(20,1,1)
(21,24,1)
(13,15,1)
(1,15,1)
(20,11,1)
(24,22,1)
(16,7,1)
(14,10,1)
(12,20,1)
(20,2,1)
(19,11,1)
(2,4,1)
(3,19,1)
(11,16,1)
(15,3,1)
(25,24,1)
(24,2,2)
(20,2,2)
(25,24,2)
(25,15,2)
(20,15,2)
(7,6,2)
(21,15,2)
(16,6,2)
(1,15,2)
(24,11,2)
(12,15,2)
(22,15,2)
(24,15,2)
(11,6,2)
(20,11,2)
-----------------------------------
(0,)
(1,data)
(2,data = 0)
(3,5)
(4,0)
(5,)
(6,STATIC_CONST_FIVE==5)
(7,data)
(8,result)
(9,data)
(10,STATIC_CONST_FIVE)
(11,data = SHRT_MAX)
(12,result)
(13,RET)
(14,5)
(15,STATIC_CONST_FIVE==5)
(16,SHRT_MAX)
(17,if(STATIC_CONST_FIVE==5)
(18,if(STATIC_CONST_FIVE==5)
(19,STATIC_CONST_FIVE)
(20,data++)
(21,result)
(22,data)
(23,)
(24,result = data)
(25,printIntLine(result)
(26,)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^