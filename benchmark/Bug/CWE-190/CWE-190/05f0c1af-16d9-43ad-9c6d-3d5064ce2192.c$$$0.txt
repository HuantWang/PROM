-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_postinc_09_bad()
{
    short data;
    data = 0;
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
30,31
30,32
30,33
31,32
32,33
33,34
35,36
36,37
36,38
38,39
38,40
40,41
41,42
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,34,37,39,42,46,48
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_postinc_09_bad(){    short data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_postinc_09_bad()
CWE190_Integer_Overflow__short_max_postinc_09_bad
{    short data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(7,4,0)
(1,21,0)
(22,2,0)
(11,21,0)
(6,9,0)
(19,14,0)
(8,2,0)
(14,2,0)
(0,5,0)
(13,14,0)
(8,0,0)
(2,21,0)
(12,2,0)
(4,14,0)
(15,21,0)
(18,6,0)
(8,6,0)
(4,6,0)
(14,6,0)
(3,0,0)
(17,0,0)
(20,8,0)
(14,0,0)
(4,7,1)
(20,10,1)
(8,20,1)
(23,2,1)
(7,14,1)
(14,0,1)
(4,14,1)
(22,12,1)
(0,17,1)
(10,0,1)
(16,4,1)
(16,10,1)
(8,2,1)
(3,23,1)
(17,3,1)
(8,0,1)
(14,19,1)
(2,22,1)
(10,23,1)
(19,13,1)
(14,2,1)
(13,8,1)
(0,23,2)
(8,2,2)
(3,23,2)
(4,14,2)
(4,10,2)
(7,10,2)
(8,0,2)
(20,10,2)
(17,23,2)
(19,10,2)
(13,10,2)
(14,2,2)
(8,10,2)
(14,10,2)
(14,0,2)
-----------------------------------
(0,data = SHRT_MAX)
(1,if(GLOBAL_CONST_TRUE)
(2,data = 0)
(3,data)
(4,printIntLine(result)
(5,)
(6,)
(7,result)
(8,data++)
(9,)
(10,GLOBAL_CONST_TRUE)
(11,data)
(12,data)
(13,result)
(14,result = data)
(15,if(GLOBAL_CONST_TRUE)
(16,RET)
(17,SHRT_MAX)
(18,result)
(19,data)
(20,data)
(21,)
(22,0)
(23,GLOBAL_CONST_TRUE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^