-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_preinc_16_bad()
{
    char data;
    data = ' ';
    while(1)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            char result = data;
            printHexCharLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
30,31
30,32
32,33
32,34
33,34
33,35
33,36
34,35
35,36
36,37
38,39
39,40
39,41
41,42
41,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,29,31,37,40,42,45,49,51,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_preinc_16_bad(){    char data;    data = ' ';    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__char_fscanf_preinc_16_bad()
CWE190_Integer_Overflow__char_fscanf_preinc_16_bad
{    char data;    data = ' ';    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }        break;    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);        break;    }
1
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);        break;    }
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
break;
while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
break;
-----joern-----
(1,0,0)
(18,25,0)
(7,14,0)
(20,22,0)
(27,0,0)
(22,5,0)
(0,6,0)
(14,21,0)
(5,22,0)
(24,1,0)
(23,0,0)
(12,6,0)
(21,18,0)
(14,18,0)
(13,17,0)
(21,0,0)
(1,18,0)
(26,22,0)
(22,17,0)
(9,21,0)
(8,6,0)
(19,6,0)
(10,21,0)
(5,0,0)
(2,25,0)
(3,18,0)
(4,5,0)
(22,5,1)
(11,15,1)
(5,4,1)
(4,20,1)
(1,0,1)
(23,27,1)
(16,11,1)
(13,22,1)
(1,24,1)
(14,21,1)
(9,10,1)
(5,0,1)
(24,11,1)
(16,2,1)
(26,15,1)
(14,7,1)
(21,9,1)
(7,21,1)
(20,26,1)
(21,0,1)
(15,0,1)
(0,23,1)
(2,14,1)
(10,1,1)
(11,13,1)
(1,11,2)
(5,0,2)
(26,15,2)
(14,21,2)
(22,15,2)
(21,0,2)
(10,11,2)
(7,11,2)
(9,11,2)
(5,15,2)
(20,15,2)
(14,11,2)
(13,15,2)
(4,15,2)
(21,11,2)
(2,11,2)
(22,5,2)
(1,0,2)
(24,11,2)
-----------------------------------
(0,data = \\\' \\\')
(1,++data)
(2,break;)
(3,result)
(4,data)
(5,&data)
(6,)
(7,result)
(8,while(1)
(9,data)
(10,result)
(11,1)
(12,while(1)
(13,break;)
(14,printHexCharLine(result)
(15,1)
(16,RET)
(17,)
(18,)
(19,data)
(20,"%c")
(21,result = data)
(22,fscanf (stdin, "%c", &data)
(23,\\\' \\\')
(24,data)
(25,)
(26,stdin)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^