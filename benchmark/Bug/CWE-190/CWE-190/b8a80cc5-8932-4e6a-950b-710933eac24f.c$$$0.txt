-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_18_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    goto source;
source:
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        int result = data + 1;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
20,22
21,22
22,23
22,24
24,25
24,26
24,27
26,27
27,28
29,30
31,32
31,33
31,34
32,33
32,34
33,34
33,35
33,36
33,37
34,35
36,37
38,39
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
60,61
62,63
62,64
64,65
64,66
65,66
66,67
66,68
68,69
68,70
70,71
71,72
71,73
72,73
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,28,30,35,37,39,41,43,48,51,53,58,59,61,63,67,69,73,74,78,80
-----computeFrom-----
12,13
12,14
32,33
32,34
46,47
46,48
71,72
71,73
-----guardedBy-----
37,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_18_bad(){    int data;    /* Initialize data */    data = 0;    goto source;source:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    goto sink;sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_fgets_add_18_bad()
CWE190_Integer_Overflow__int_fgets_add_18_bad
{    int data;    /* Initialize data */    data = 0;    goto source;source:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    goto sink;sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
source
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }
sink
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(17,32,0)
(29,30,0)
(31,13,0)
(30,37,0)
(15,13,0)
(7,36,0)
(13,10,0)
(21,5,0)
(31,15,0)
(6,1,0)
(33,10,0)
(8,18,0)
(14,32,0)
(24,9,0)
(0,15,0)
(1,2,0)
(3,18,0)
(25,1,0)
(6,15,0)
(18,5,0)
(5,32,0)
(28,5,0)
(15,6,0)
(35,10,0)
(27,10,0)
(22,31,0)
(23,6,0)
(38,9,0)
(20,6,0)
(1,21,0)
(26,21,0)
(6,9,0)
(16,5,0)
(21,1,0)
(32,10,0)
(9,10,0)
(11,10,0)
(18,36,0)
(4,18,0)
(12,13,0)
(36,18,0)
(34,10,0)
(7,18,1)
(35,1,1)
(5,28,1)
(28,16,1)
(18,5,1)
(36,18,1)
(15,6,1)
(36,7,1)
(6,9,1)
(22,15,1)
(31,22,1)
(18,3,1)
(6,23,1)
(21,5,1)
(38,24,1)
(29,36,1)
(25,36,1)
(4,8,1)
(20,0,1)
(23,20,1)
(30,29,1)
(0,35,1)
(8,5,1)
(31,15,1)
(16,27,1)
(9,38,1)
(27,9,1)
(1,21,1)
(35,30,1)
(21,26,1)
(6,1,1)
(19,31,1)
(3,4,1)
(26,25,1)
(30,36,2)
(21,36,2)
(26,36,2)
(31,15,2)
(21,5,2)
(36,18,2)
(18,5,2)
(25,36,2)
(1,21,2)
(6,1,2)
(15,6,2)
(6,9,2)
(1,36,2)
(29,36,2)
-----------------------------------
(0,result)
(1,data = atoi(inputBuffer)
(2,)
(3,stdin)
(4,CHAR_ARRAY_SIZE)
(5,inputBuffer[CHAR_ARRAY_SIZE] = "")
(6,data + 1)
(7,NULL)
(8,inputBuffer)
(9,data = 0)
(10,)
(11,data)
(12,result)
(13,)
(14,inputBuffer)
(15,result = data + 1)
(16,inputBuffer)
(17,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(18,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(19,RET)
(20,data)
(21,atoi(inputBuffer)
(22,result)
(23,1)
(24,data)
(25,data)
(26,inputBuffer)
(27,goto source;)
(28,"")
(29,"fgets()
(30,printLine("fgets()
(31,printIntLine(result)
(32,)
(33,sink:)
(34,source:)
(35,goto sink;)
(36,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(37,)
(38,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^