-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_multiply_54e_badSink(int data)
{
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */
        int result = data * 2;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
11,13
12,13
15,16
15,17
16,17
17,18
17,19
19,20
19,21
21,22
22,23
22,24
23,24
26,27
27,28
27,29
28,29
30,31
-----nextToken-----
2,4,6,8,13,14,18,20,24,25,29,31
-----computeFrom-----
11,12
11,13
22,23
22,24
-----guardedBy-----
13,24
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_multiply_54e_badSink(int data){    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_max_multiply_54e_badSink(int data)
CWE190_Integer_Overflow__int_max_multiply_54e_badSink
int data
int
data
data
{    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }}
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }
int result = data * 2;
int result = data * 2;
int
result = data * 2
result
= data * 2
data * 2
data
data
2
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(5,3,0)
(2,6,0)
(3,9,0)
(9,3,0)
(12,6,0)
(9,11,0)
(7,9,0)
(12,3,0)
(10,12,0)
(3,6,0)
(14,11,0)
(1,14,0)
(4,15,0)
(0,14,0)
(13,9,0)
(8,14,1)
(13,5,1)
(9,11,1)
(8,12,1)
(7,13,1)
(10,3,1)
(9,7,1)
(0,1,1)
(3,9,1)
(12,10,1)
(5,14,1)
(14,11,1)
(12,3,1)
(14,0,1)
(3,9,2)
(9,14,2)
(14,11,2)
(12,3,2)
(7,14,2)
(13,14,2)
(10,14,2)
(12,14,2)
(5,14,2)
(9,11,2)
(3,14,2)
-----------------------------------
(0,0)
(1,data)
(2,result)
(3,result = data * 2)
(4,if(data > 0)
(5,result)
(6,)
(7,2)
(8,RET)
(9,data * 2)
(10,result)
(11,int data)
(12,printIntLine(result)
(13,data)
(14,data > 0)
(15,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^