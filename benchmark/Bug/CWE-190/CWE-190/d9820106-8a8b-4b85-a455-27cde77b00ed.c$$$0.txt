-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_multiply_13_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */
            int result = data * 2;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
39,41
40,41
43,44
43,45
44,45
45,46
45,47
47,48
47,49
49,50
50,51
50,52
51,52
54,55
55,56
55,57
56,57
58,59
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,42,46,48,52,53,57,59
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
39,40
39,41
50,51
50,52
-----guardedBy-----
41,52
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_multiply_13_bad(){    int data;    /* Initialize data */    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_multiply_13_bad()
CWE190_Integer_Overflow__int_fscanf_multiply_13_bad
{    int data;    /* Initialize data */    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }
int result = data * 2;
int result = data * 2;
int
result = data * 2
result
= data * 2
data * 2
data
data
2
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(18,21,0)
(10,7,0)
(30,16,0)
(3,16,0)
(21,10,0)
(29,14,0)
(13,0,0)
(19,18,0)
(5,14,0)
(6,10,0)
(15,20,0)
(25,20,0)
(21,18,0)
(12,30,0)
(11,7,0)
(31,23,0)
(8,18,0)
(2,7,0)
(1,0,0)
(32,23,0)
(30,14,0)
(24,28,0)
(29,30,0)
(4,10,0)
(27,16,0)
(22,21,0)
(33,29,0)
(16,30,0)
(16,10,0)
(18,26,0)
(17,7,0)
(0,10,0)
(9,23,1)
(18,21,1)
(0,10,1)
(10,6,1)
(9,29,1)
(3,12,1)
(21,22,1)
(30,16,1)
(16,27,1)
(9,0,1)
(31,32,1)
(6,4,1)
(23,31,1)
(15,25,1)
(32,20,1)
(16,10,1)
(20,15,1)
(19,8,1)
(32,18,1)
(33,30,1)
(29,30,1)
(0,13,1)
(27,3,1)
(25,10,1)
(13,1,1)
(12,0,1)
(8,20,1)
(29,33,1)
(21,10,1)
(1,23,1)
(22,19,1)
(0,10,2)
(1,23,2)
(22,20,2)
(33,0,2)
(29,0,2)
(21,10,2)
(16,10,2)
(30,16,2)
(0,23,2)
(27,0,2)
(8,20,2)
(21,20,2)
(13,23,2)
(19,20,2)
(16,0,2)
(12,0,2)
(3,0,2)
(30,0,2)
(29,30,2)
(18,21,2)
(18,20,2)
-----------------------------------
(0,data > 0)
(1,data)
(2,data)
(3,data)
(4,data)
(5,result)
(6,0)
(7,)
(8,stdin)
(9,RET)
(10,data = 0)
(11,if(GLOBAL_CONST_FIVE==5)
(12,result)
(13,0)
(14,)
(15,5)
(16,data * 2)
(17,if(GLOBAL_CONST_FIVE==5)
(18,fscanf(stdin, "%d", &data)
(19,"%d")
(20,GLOBAL_CONST_FIVE==5)
(21,&data)
(22,data)
(23,GLOBAL_CONST_FIVE==5)
(24,if(data > 0)
(25,GLOBAL_CONST_FIVE)
(26,)
(27,2)
(28,)
(29,printIntLine(result)
(30,result = data * 2)
(31,5)
(32,GLOBAL_CONST_FIVE)
(33,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^