-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_14_bad()
{
    unsigned int data;
    data = 0;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(globalFive==5)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
            unsigned int result = data * 2;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
39,41
40,41
43,44
43,45
44,45
45,46
45,47
47,48
47,49
49,50
50,51
50,52
51,52
54,55
55,56
55,57
56,57
58,59
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,42,46,48,52,53,57,59
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
39,40
39,41
50,51
50,52
-----guardedBy-----
41,52
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_14_bad(){    unsigned int data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalFive==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_14_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_14_bad
{    unsigned int data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalFive==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(globalFive==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(1,29,0)
(21,33,0)
(27,24,0)
(5,24,0)
(25,12,0)
(18,32,0)
(6,33,0)
(33,12,0)
(14,5,0)
(15,13,0)
(4,28,0)
(33,21,0)
(12,11,0)
(0,14,0)
(14,24,0)
(20,29,0)
(5,29,0)
(30,25,0)
(23,12,0)
(10,13,0)
(21,7,0)
(29,12,0)
(3,12,0)
(31,5,0)
(16,21,0)
(29,5,0)
(8,11,0)
(19,32,0)
(17,25,0)
(2,21,0)
(9,11,0)
(26,11,0)
(14,0,1)
(19,13,1)
(10,15,1)
(33,12,1)
(0,5,1)
(16,2,1)
(14,5,1)
(13,10,1)
(23,3,1)
(5,29,1)
(1,31,1)
(2,13,1)
(19,21,1)
(31,25,1)
(25,12,1)
(30,32,1)
(33,6,1)
(12,23,1)
(6,16,1)
(32,18,1)
(22,32,1)
(29,12,1)
(18,19,1)
(17,30,1)
(25,17,1)
(29,20,1)
(22,14,1)
(21,33,1)
(20,1,1)
(15,12,1)
(22,25,1)
(16,13,2)
(5,25,2)
(25,12,2)
(1,25,2)
(14,5,2)
(5,29,2)
(0,25,2)
(25,32,2)
(14,25,2)
(21,33,2)
(33,13,2)
(20,25,2)
(17,32,2)
(30,32,2)
(2,13,2)
(6,13,2)
(33,12,2)
(29,25,2)
(29,12,2)
(21,13,2)
(31,25,2)
-----------------------------------
(0,result)
(1,data)
(2,stdin)
(3,data)
(4,if(data > 0)
(5,result = data * 2)
(6,data)
(7,)
(8,if(globalFive==5)
(9,if(globalFive==5)
(10,5)
(11,)
(12,data = 0)
(13,globalFive==5)
(14,printUnsignedLine(result)
(15,globalFive)
(16,"%u")
(17,0)
(18,5)
(19,globalFive)
(20,2)
(21,fscanf (stdin, "%u", &data)
(22,RET)
(23,0)
(24,)
(25,data > 0)
(26,data)
(27,result)
(28,)
(29,data * 2)
(30,data)
(31,result)
(32,globalFive==5)
(33,&data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^