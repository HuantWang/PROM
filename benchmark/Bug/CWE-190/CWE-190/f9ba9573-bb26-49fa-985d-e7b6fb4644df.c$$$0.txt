-----label-----
1
-----code-----
short CWE190_Integer_Overflow__short_rand_square_61b_badSource(short data)
{
    /* POTENTIAL FLAW: Use a random value */
    data = (short)RAND32();
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
11,12
11,13
12,13
14,15
14,16
15,16
15,17
18,19
19,20
21,22
22,23
-----nextToken-----
2,4,6,8,13,16,17,20,23
-----computeFrom-----
11,12
11,13
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
short CWE190_Integer_Overflow__short_rand_square_61b_badSource(short data){    /* POTENTIAL FLAW: Use a random value */    data = (short)RAND32();    return data;}
short
CWE190_Integer_Overflow__short_rand_square_61b_badSource(short data)
CWE190_Integer_Overflow__short_rand_square_61b_badSource
short data
short
data
data
{    /* POTENTIAL FLAW: Use a random value */    data = (short)RAND32();    return data;}
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
return data;
data
data
-----joern-----
(8,5,0)
(1,8,0)
(7,8,0)
(3,5,0)
(8,3,0)
(6,2,0)
(8,9,0)
(0,2,0)
(3,2,0)
(2,3,0)
(4,3,0)
(3,9,0)
(2,6,0)
(2,0,0)
(3,2,1)
(2,6,1)
(7,8,1)
(6,4,1)
(8,1,1)
(1,3,1)
(3,9,1)
(8,3,1)
(2,0,1)
(8,9,1)
(2,0,2)
(3,2,2)
(8,3,2)
(3,9,2)
(8,9,2)
(2,6,2)
(7,8,2)
-----------------------------------
(0,short)
(1,data)
(2,(short)
(3,data = (short)
(4,data)
(5,)
(6,RAND32()
(7,RET)
(8,return data;)
(9,short data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^