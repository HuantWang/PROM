-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_square_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    int * dataPtr = (int *)dataVoidPtr;
    /* dereference dataPtr into data */
    int data = (*dataPtr);
    {
        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
        int result = data * data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,38,40,44,46,50,52
-----computeFrom-----
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_square_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_fscanf_square_64b_badSink(void * dataVoidPtr)
CWE190_Integer_Overflow__int_fscanf_square_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
int * dataPtr = (int *)dataVoidPtr;
int * dataPtr = (int *)dataVoidPtr;
int
* dataPtr = (int *)dataVoidPtr
*
dataPtr
= (int *)dataVoidPtr
(int *)dataVoidPtr
int *
int
*
*
dataVoidPtr
dataVoidPtr
int data = (*dataPtr);
int data = (*dataPtr);
int
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(14,19,0)
(22,0,0)
(21,15,0)
(16,7,0)
(20,15,0)
(22,14,0)
(18,7,0)
(12,18,0)
(11,7,0)
(3,18,0)
(11,20,0)
(17,19,0)
(15,21,0)
(5,19,0)
(20,19,0)
(13,11,0)
(10,0,0)
(0,14,0)
(15,4,0)
(18,0,0)
(7,11,0)
(9,15,0)
(15,20,0)
(0,18,0)
(1,20,0)
(6,22,0)
(7,19,0)
(2,14,0)
(13,16,1)
(10,7,1)
(18,3,1)
(22,6,1)
(16,20,1)
(6,0,1)
(8,22,1)
(3,12,1)
(18,7,1)
(9,1,1)
(15,9,1)
(0,18,1)
(15,21,1)
(20,15,1)
(11,13,1)
(11,20,1)
(15,4,1)
(7,11,1)
(12,10,1)
(22,0,1)
(15,21,2)
(18,7,2)
(11,20,2)
(22,0,2)
(15,4,2)
(0,18,2)
(7,11,2)
(20,15,2)
-----------------------------------
(0,result = data * data)
(1,dataPtr)
(2,result)
(3,data)
(4,void * dataVoidPtr)
(5,data)
(6,result)
(7,data = (*dataPtr)
(8,RET)
(9,dataVoidPtr)
(10,result)
(11,*dataPtr)
(12,data)
(13,dataPtr)
(14,)
(15,(int *)
(16,data)
(17,dataPtr)
(18,data * data)
(19,)
(20,* dataPtr = (int *)
(21,int *)
(22,printIntLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^