-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_rand_add_05_bad()
{
    char data;
    data = ' ';
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (char)RAND32();
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            char result = data + 1;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,38,40,44,45,49,51
-----computeFrom-----
12,13
12,14
21,22
21,23
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_rand_add_05_bad(){    char data;    data = ' ';    if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (char)RAND32();    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_rand_add_05_bad()
CWE190_Integer_Overflow__char_rand_add_05_bad
{    char data;    data = ' ';    if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (char)RAND32();    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (char)RAND32();    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (char)RAND32();    }
data = (char)RAND32();
data = (char)RAND32()
data
data
(char)RAND32()
char
char

RAND32()
RAND32
RAND32
if(staticTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(4,6,0)
(12,6,0)
(22,8,0)
(12,21,0)
(24,0,0)
(24,8,0)
(7,6,0)
(7,0,0)
(2,17,0)
(10,17,0)
(14,7,0)
(8,18,0)
(6,1,0)
(23,3,0)
(3,17,0)
(0,7,0)
(6,12,0)
(12,9,0)
(16,17,0)
(20,0,0)
(13,3,0)
(7,3,0)
(26,24,0)
(0,8,0)
(5,7,0)
(21,12,0)
(9,12,0)
(25,15,1)
(5,20,1)
(12,21,1)
(15,19,1)
(20,15,1)
(13,23,1)
(6,12,1)
(7,14,1)
(21,4,1)
(24,0,1)
(26,0,1)
(25,24,1)
(3,13,1)
(15,6,1)
(19,3,1)
(4,19,1)
(24,26,1)
(7,3,1)
(0,7,1)
(14,5,1)
(12,9,1)
(7,6,1)
(12,9,2)
(6,19,2)
(0,15,2)
(20,15,2)
(26,15,2)
(7,15,2)
(12,19,2)
(12,21,2)
(6,12,2)
(7,3,2)
(7,6,2)
(24,0,2)
(24,15,2)
(21,19,2)
(5,15,2)
(14,15,2)
(4,19,2)
(0,7,2)
-----------------------------------
(0,result = data + 1)
(1,)
(2,if(staticTrue)
(3,data = ' ')
(4,data)
(5,data)
(6,data = (char)
(7,data + 1)
(8,)
(9,char)
(10,if(staticTrue)
(11,data = \' \')
(12,(char)
(13,' ')
(14,1)
(15,staticTrue)
(16,data)
(17,)
(18,)
(19,staticTrue)
(20,result)
(21,RAND32()
(22,result)
(23,data)
(24,printHexCharLine(result)
(25,RET)
(26,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^