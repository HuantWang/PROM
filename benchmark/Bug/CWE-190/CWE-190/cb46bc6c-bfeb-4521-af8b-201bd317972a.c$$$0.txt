-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_10_bad()
{
    unsigned int data;
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,39,42,44,47,51,53
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_10_bad(){    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_preinc_10_bad()
CWE190_Integer_Overflow__unsigned_int_rand_preinc_10_bad
{    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(8,21,0)
(4,23,0)
(22,7,0)
(13,2,0)
(2,21,0)
(5,12,0)
(11,3,0)
(20,6,0)
(7,17,0)
(23,21,0)
(23,3,0)
(14,21,0)
(8,12,0)
(16,6,0)
(9,23,0)
(12,6,0)
(19,12,0)
(8,3,0)
(23,12,0)
(7,3,0)
(7,22,0)
(1,8,0)
(10,6,0)
(17,7,0)
(21,0,0)
(3,24,0)
(3,7,0)
(2,23,0)
(9,8,1)
(2,13,1)
(18,2,1)
(15,25,1)
(8,1,1)
(3,7,1)
(8,12,1)
(11,25,1)
(4,9,1)
(13,23,1)
(7,17,1)
(5,19,1)
(1,15,1)
(18,15,1)
(7,22,1)
(22,11,1)
(8,3,1)
(23,12,1)
(23,4,1)
(12,5,1)
(15,3,1)
(23,3,1)
(2,23,1)
(25,12,1)
(8,3,2)
(23,12,2)
(2,23,2)
(22,25,2)
(3,7,2)
(7,22,2)
(8,12,2)
(7,17,2)
(23,3,2)
(11,25,2)
(7,25,2)
(23,15,2)
(4,15,2)
(13,15,2)
(1,15,2)
(2,15,2)
(9,15,2)
(3,25,2)
(8,15,2)
-----------------------------------
(0,)
(1,data)
(2,printUnsignedLine(result)
(3,data = (unsigned int)
(4,data)
(5,0)
(6,)
(7,(unsigned int)
(8,++data)
(9,result)
(10,if(globalTrue)
(11,data)
(12,data = 0)
(13,result)
(14,result)
(15,globalTrue)
(16,data)
(17,unsigned int)
(18,RET)
(19,data)
(20,if(globalTrue)
(21,)
(22,RAND32()
(23,result = data)
(24,)
(25,globalTrue)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^