-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_32_bad()
{
    unsigned int data;
    unsigned int *dataPtr1 = &data;
    unsigned int *dataPtr2 = &data;
    data = 0;
    {
        unsigned int data = *dataPtr1;
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
        *dataPtr1 = data;
    }
    {
        unsigned int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
54,55
56,57
57,58
57,59
58,59
59,60
61,62
63,64
63,65
64,65
65,66
65,67
67,68
67,69
69,70
70,71
71,72
73,74
73,75
74,75
75,76
75,77
77,78
77,79
79,80
80,81
80,82
81,82
83,84
85,86
86,87
86,88
87,88
89,90
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,51,52,55,60,62,66,68,72,76,78,82,84,88,90
-----computeFrom-----
32,33
32,34
57,58
57,59
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_32_bad(){    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_square_32_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_square_32_bad
{    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
unsigned int *dataPtr1 = &data;
unsigned int *dataPtr1 = &data;
unsigned int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
unsigned int *dataPtr2 = &data;
unsigned int *dataPtr2 = &data;
unsigned int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        *dataPtr1 = data;    }
unsigned int data = *dataPtr1;
unsigned int data = *dataPtr1;
unsigned int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
unsigned int data = *dataPtr2;
unsigned int data = *dataPtr2;
unsigned int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(19,23,0)
(29,28,0)
(27,33,0)
(0,23,0)
(42,14,0)
(25,41,0)
(20,30,0)
(39,20,0)
(21,28,0)
(35,18,0)
(24,41,0)
(29,23,0)
(20,22,0)
(33,37,0)
(37,33,0)
(32,29,0)
(24,25,0)
(4,2,0)
(33,0,0)
(4,25,0)
(25,4,0)
(26,37,0)
(44,33,0)
(7,40,0)
(2,18,0)
(6,30,0)
(38,29,0)
(37,22,0)
(40,22,0)
(22,0,0)
(11,41,0)
(36,23,0)
(43,0,0)
(3,30,0)
(41,18,0)
(34,30,0)
(16,14,0)
(17,24,0)
(12,4,0)
(13,22,0)
(18,23,0)
(5,23,0)
(30,6,0)
(45,2,0)
(2,32,0)
(15,6,0)
(10,4,0)
(30,23,0)
(28,29,0)
(9,25,0)
(32,2,0)
(1,34,0)
(34,40,0)
(22,20,0)
(14,23,0)
(40,0,0)
(31,32,0)
(44,22,1)
(17,25,1)
(4,12,1)
(16,29,1)
(13,14,1)
(1,33,1)
(6,15,1)
(42,16,1)
(30,6,1)
(32,29,1)
(20,30,1)
(7,34,1)
(15,3,1)
(40,7,1)
(39,13,1)
(20,39,1)
(29,28,1)
(32,31,1)
(8,24,1)
(33,37,1)
(40,22,1)
(24,25,1)
(34,1,1)
(26,27,1)
(14,42,1)
(21,38,1)
(4,2,1)
(25,4,1)
(9,2,1)
(38,30,1)
(24,17,1)
(45,40,1)
(28,21,1)
(2,32,1)
(34,30,1)
(37,22,1)
(22,20,1)
(31,45,1)
(37,26,1)
(12,10,1)
(27,44,1)
(10,9,1)
(24,25,2)
(2,32,2)
(29,28,2)
(33,37,2)
(30,6,2)
(25,4,2)
(37,22,2)
(4,2,2)
(22,20,2)
(34,30,2)
(20,30,2)
(32,29,2)
(40,22,2)
-----------------------------------
(0,)
(1,dataPtr1)
(2,data = *dataPtr2)
(3,dataPtr1)
(4,data * data)
(5,data)
(6,&data)
(7,data)
(8,RET)
(9,result)
(10,data)
(11,result)
(12,data)
(13,data)
(14,data = 0)
(15,data)
(16,data)
(17,result)
(18,)
(19,dataPtr1)
(20,*dataPtr1)
(21,data)
(22,data = *dataPtr1)
(23,)
(24,printUnsignedLine(result)
(25,result = data * data)
(26,data)
(27,"%u")
(28,&data)
(29,*dataPtr2 = &data)
(30,*dataPtr1 = &data)
(31,dataPtr2)
(32,*dataPtr2)
(33,fscanf (stdin, "%u", &data)
(34,*dataPtr1)
(35,data)
(36,dataPtr2)
(37,&data)
(38,dataPtr2)
(39,dataPtr1)
(40,*dataPtr1 = data)
(41,)
(42,0)
(43,data)
(44,stdin)
(45,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^