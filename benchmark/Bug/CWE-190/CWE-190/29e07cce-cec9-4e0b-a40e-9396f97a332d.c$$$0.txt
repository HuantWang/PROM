-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_postinc_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    char * dataPtr = (char *)dataVoidPtr;
    /* dereference dataPtr into data */
    char data = (*dataPtr);
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        char result = data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,39,42,44,47,51,53
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_postinc_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    char * dataPtr = (char *)dataVoidPtr;    /* dereference dataPtr into data */    char data = (*dataPtr);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_max_postinc_64b_badSink(void * dataVoidPtr)
CWE190_Integer_Overflow__char_max_postinc_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    char * dataPtr = (char *)dataVoidPtr;    /* dereference dataPtr into data */    char data = (*dataPtr);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
char * dataPtr = (char *)dataVoidPtr;
char * dataPtr = (char *)dataVoidPtr;
char
* dataPtr = (char *)dataVoidPtr
*
dataPtr
= (char *)dataVoidPtr
(char *)dataVoidPtr
char *
char
*
*
dataVoidPtr
dataVoidPtr
char data = (*dataPtr);
char data = (*dataPtr);
char
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }
data++;
data++
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(9,22,0)
(2,14,0)
(11,18,0)
(3,20,0)
(0,14,0)
(19,7,0)
(6,22,0)
(22,1,0)
(16,0,0)
(22,21,0)
(9,14,0)
(12,20,0)
(1,22,0)
(8,0,0)
(16,20,0)
(18,20,0)
(4,9,0)
(7,0,0)
(18,16,0)
(17,14,0)
(5,16,0)
(0,7,0)
(10,16,0)
(20,14,0)
(12,0,0)
(22,9,0)
(15,12,0)
(7,9,0)
(7,19,1)
(0,7,1)
(5,10,1)
(16,5,1)
(13,18,1)
(18,16,1)
(22,21,1)
(12,15,1)
(22,6,1)
(22,1,1)
(18,11,1)
(7,9,1)
(15,0,1)
(10,12,1)
(6,4,1)
(12,0,1)
(8,9,1)
(16,0,1)
(9,22,1)
(11,16,1)
(19,8,1)
(12,0,2)
(16,0,2)
(22,21,2)
(0,7,2)
(22,1,2)
(7,9,2)
(9,22,2)
(18,16,2)
-----------------------------------
(0,data = (*dataPtr)
(1,char *)
(2,dataPtr)
(3,result)
(4,dataPtr)
(5,data)
(6,dataVoidPtr)
(7,*dataPtr)
(8,data)
(9,* dataPtr = (char *)
(10,result)
(11,result)
(12,data++)
(13,RET)
(14,)
(15,data)
(16,result = data)
(17,data)
(18,printHexCharLine(result)
(19,dataPtr)
(20,)
(21,void * dataVoidPtr)
(22,(char *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^