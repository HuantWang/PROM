-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_06_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
22,24
23,24
24,25
24,26
26,27
26,28
26,29
28,29
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
35,37
35,38
35,39
36,37
38,39
40,41
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
51,53
52,53
54,55
56,57
57,58
58,59
58,60
59,60
62,63
62,64
63,64
63,65
64,65
67,68
68,69
68,70
69,70
70,71
70,72
72,73
72,74
74,75
75,76
75,77
76,77
79,80
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,30,32,37,39,41,43,45,50,53,55,60,61,65,66,71,73,77,78,82,84
-----computeFrom-----
12,13
12,14
17,18
17,19
34,35
34,36
48,49
48,50
63,64
63,65
75,76
75,77
-----guardedBy-----
39,55
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_06_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_add_06_bad()
CWE190_Integer_Overflow__int_fgets_add_06_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(40,24,0)
(16,10,0)
(35,0,0)
(41,13,0)
(6,40,0)
(18,1,0)
(5,8,0)
(24,7,0)
(29,24,0)
(22,38,0)
(36,8,0)
(5,2,0)
(40,8,0)
(43,32,0)
(26,21,0)
(21,6,0)
(12,40,0)
(6,43,0)
(14,38,0)
(37,0,0)
(34,24,0)
(40,6,0)
(4,2,0)
(3,7,0)
(30,1,0)
(27,41,0)
(25,22,0)
(21,43,0)
(23,6,0)
(22,2,0)
(8,5,0)
(15,40,0)
(42,22,0)
(39,7,0)
(17,7,0)
(10,28,0)
(19,5,0)
(2,10,0)
(9,43,0)
(38,22,0)
(8,33,0)
(44,10,0)
(31,2,0)
(20,22,0)
(37,41,1)
(40,24,1)
(42,25,1)
(4,1,1)
(40,8,1)
(38,22,1)
(31,4,1)
(40,12,1)
(18,24,1)
(41,27,1)
(6,40,1)
(14,22,1)
(2,31,1)
(15,23,1)
(8,5,1)
(34,29,1)
(20,42,1)
(38,14,1)
(19,36,1)
(5,19,1)
(11,21,1)
(0,35,1)
(26,6,1)
(37,1,1)
(12,15,1)
(36,38,1)
(1,30,1)
(23,0,1)
(24,34,1)
(11,0,1)
(25,2,1)
(27,38,1)
(22,2,1)
(21,6,1)
(21,26,1)
(37,8,1)
(22,20,1)
(35,37,1)
(5,2,1)
(30,18,1)
(26,0,2)
(5,38,2)
(31,1,2)
(21,0,2)
(42,1,2)
(2,1,2)
(20,1,2)
(12,0,2)
(8,5,2)
(6,0,2)
(8,38,2)
(41,38,2)
(4,1,2)
(38,1,2)
(15,0,2)
(36,38,2)
(14,1,2)
(40,24,2)
(40,0,2)
(5,2,2)
(22,2,2)
(6,40,2)
(22,1,2)
(19,38,2)
(38,22,2)
(40,8,2)
(25,1,2)
(21,6,2)
(23,0,2)
(27,38,2)
-----------------------------------
(0,STATIC_CONST_FIVE==5)
(1,STATIC_CONST_FIVE==5)
(2,inputBuffer[CHAR_ARRAY_SIZE] = "")
(3,if(STATIC_CONST_FIVE==5)
(4,inputBuffer)
(5,atoi(inputBuffer)
(6,result = data + 1)
(7,)
(8,data = atoi(inputBuffer)
(9,result)
(10,)
(11,RET)
(12,1)
(13,)
(14,NULL)
(15,data)
(16,inputBuffer)
(17,if(STATIC_CONST_FIVE==5)
(18,STATIC_CONST_FIVE)
(19,inputBuffer)
(20,stdin)
(21,printIntLine(result)
(22,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(23,result)
(24,data = 0)
(25,inputBuffer)
(26,result)
(27,"fgets()
(28,)
(29,data)
(30,5)
(31,"")
(32,)
(33,)
(34,0)
(35,5)
(36,data)
(37,STATIC_CONST_FIVE)
(38,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(39,data)
(40,data + 1)
(41,printLine("fgets()
(42,CHAR_ARRAY_SIZE)
(43,)
(44,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^