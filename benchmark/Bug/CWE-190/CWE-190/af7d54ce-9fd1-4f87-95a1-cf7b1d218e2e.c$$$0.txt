-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_postinc_11_bad()
{
    short data;
    data = 0;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
33,34
34,35
36,37
37,38
37,39
37,40
38,39
39,40
40,41
42,43
43,44
43,45
45,46
45,47
47,48
48,49
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,8,10,14,15,19,24,27,28,31,35,41,44,46,49,53,55
-----computeFrom-----
12,13
12,14
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_postinc_11_bad(){    short data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_postinc_11_bad()
CWE190_Integer_Overflow__short_rand_postinc_11_bad
{    short data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(19,3,0)
(16,9,0)
(23,7,0)
(8,19,0)
(6,3,0)
(25,3,0)
(24,23,0)
(22,12,0)
(20,23,0)
(22,17,0)
(5,8,0)
(1,7,0)
(20,7,0)
(2,16,0)
(17,22,0)
(18,3,0)
(10,19,0)
(22,16,0)
(16,22,0)
(8,16,0)
(13,23,0)
(21,20,0)
(23,19,0)
(12,22,0)
(15,19,0)
(8,7,0)
(7,0,0)
(23,16,0)
(14,11,1)
(19,15,1)
(4,19,1)
(2,4,1)
(13,8,1)
(21,23,1)
(20,23,1)
(8,19,1)
(23,24,1)
(5,11,1)
(8,5,1)
(11,4,1)
(8,16,1)
(12,2,1)
(22,17,1)
(23,19,1)
(24,13,1)
(16,22,1)
(11,16,1)
(15,10,1)
(20,21,1)
(22,12,1)
(23,16,1)
(14,20,1)
(8,19,2)
(16,22,2)
(8,16,2)
(8,11,2)
(20,23,2)
(22,4,2)
(22,17,2)
(2,4,2)
(5,11,2)
(24,11,2)
(22,12,2)
(16,4,2)
(20,11,2)
(12,4,2)
(23,11,2)
(21,11,2)
(23,16,2)
(13,11,2)
(23,19,2)
-----------------------------------
(0,)
(1,result)
(2,data)
(3,)
(4,globalReturnsTrue()
(5,data)
(6,data)
(7,)
(8,data++)
(9,)
(10,data)
(11,globalReturnsTrue()
(12,RAND32()
(13,result)
(14,RET)
(15,0)
(16,data = (short)
(17,short)
(18,if(globalReturnsTrue()
(19,data = 0)
(20,printIntLine(result)
(21,result)
(22,(short)
(23,result = data)
(24,data)
(25,if(globalReturnsTrue()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^