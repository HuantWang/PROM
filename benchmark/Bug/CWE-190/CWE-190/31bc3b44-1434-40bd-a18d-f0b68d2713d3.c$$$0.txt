-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_postinc_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    char * dataPtr = (char *)dataVoidPtr;
    /* dereference dataPtr into data */
    char data = (*dataPtr);
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        char result = data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,39,42,44,47,51,53
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_postinc_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    char * dataPtr = (char *)dataVoidPtr;    /* dereference dataPtr into data */    char data = (*dataPtr);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_fscanf_postinc_64b_badSink(void * dataVoidPtr)
CWE190_Integer_Overflow__char_fscanf_postinc_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    char * dataPtr = (char *)dataVoidPtr;    /* dereference dataPtr into data */    char data = (*dataPtr);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
char * dataPtr = (char *)dataVoidPtr;
char * dataPtr = (char *)dataVoidPtr;
char
* dataPtr = (char *)dataVoidPtr
*
dataPtr
= (char *)dataVoidPtr
(char *)dataVoidPtr
char *
char
*
*
dataVoidPtr
dataVoidPtr
char data = (*dataPtr);
char data = (*dataPtr);
char
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }
data++;
data++
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(2,11,0)
(22,1,0)
(21,7,0)
(6,14,0)
(11,2,0)
(12,22,0)
(7,1,0)
(10,15,0)
(7,8,0)
(0,8,0)
(15,18,0)
(3,2,0)
(22,15,0)
(1,7,0)
(14,1,0)
(19,1,0)
(2,9,0)
(16,15,0)
(17,10,0)
(8,18,0)
(14,15,0)
(8,2,0)
(2,8,0)
(20,18,0)
(10,14,0)
(4,14,0)
(5,18,0)
(1,18,0)
(2,3,1)
(14,6,1)
(3,0,1)
(21,19,1)
(7,21,1)
(1,7,1)
(22,12,1)
(6,4,1)
(2,9,1)
(12,1,1)
(22,1,1)
(2,11,1)
(13,10,1)
(8,2,1)
(17,14,1)
(19,8,1)
(14,1,1)
(7,8,1)
(4,22,1)
(10,14,1)
(10,17,1)
(22,1,2)
(7,8,2)
(2,11,2)
(2,9,2)
(14,1,2)
(8,2,2)
(1,7,2)
(10,14,2)
-----------------------------------
(0,dataPtr)
(1,data = (*dataPtr)
(2,(char *)
(3,dataVoidPtr)
(4,result)
(5,dataPtr)
(6,data)
(7,*dataPtr)
(8,* dataPtr = (char *)
(9,void * dataVoidPtr)
(10,printHexCharLine(result)
(11,char *)
(12,data)
(13,RET)
(14,result = data)
(15,)
(16,result)
(17,result)
(18,)
(19,data)
(20,data)
(21,dataPtr)
(22,data++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^