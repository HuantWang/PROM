-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_add_07_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
40,41
40,42
42,43
42,44
44,45
45,46
45,47
46,47
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,43,47,48,52,54
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_add_07_bad(){    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_add_07_bad()
CWE190_Integer_Overflow__int_fscanf_add_07_bad
{    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(26,23,0)
(17,25,0)
(19,26,0)
(26,20,0)
(9,17,0)
(15,20,0)
(0,22,0)
(1,12,0)
(21,13,0)
(18,11,0)
(9,11,0)
(24,18,0)
(20,26,0)
(25,13,0)
(29,17,0)
(10,12,0)
(18,9,0)
(27,25,0)
(4,13,0)
(17,9,0)
(28,26,0)
(16,11,0)
(7,17,0)
(20,25,0)
(6,22,0)
(14,9,0)
(2,13,0)
(8,25,0)
(11,3,0)
(22,6,1)
(15,28,1)
(17,29,1)
(6,0,1)
(29,7,1)
(10,1,1)
(28,19,1)
(20,15,1)
(17,25,1)
(18,24,1)
(24,9,1)
(9,17,1)
(14,22,1)
(5,22,1)
(5,18,1)
(0,12,1)
(18,9,1)
(26,20,1)
(12,10,1)
(1,25,1)
(0,26,1)
(7,14,1)
(27,8,1)
(19,12,1)
(20,25,1)
(25,27,1)
(29,22,2)
(24,22,2)
(17,22,2)
(26,12,2)
(18,9,2)
(18,22,2)
(20,12,2)
(9,17,2)
(15,12,2)
(17,25,2)
(7,22,2)
(20,25,2)
(14,22,2)
(19,12,2)
(26,20,2)
(28,12,2)
(9,22,2)
-----------------------------------
(0,staticFive)
(1,staticFive)
(2,if(staticFive==5)
(3,)
(4,if(staticFive==5)
(5,RET)
(6,5)
(7,data)
(8,data)
(9,result = data + 1)
(10,5)
(11,)
(12,staticFive==5)
(13,)
(14,result)
(15,data)
(16,result)
(17,data + 1)
(18,printIntLine(result)
(19,stdin)
(20,&data)
(21,data)
(22,staticFive==5)
(23,)
(24,result)
(25,data = 0)
(26,fscanf(stdin, "%d", &data)
(27,0)
(28,"%d")
(29,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^