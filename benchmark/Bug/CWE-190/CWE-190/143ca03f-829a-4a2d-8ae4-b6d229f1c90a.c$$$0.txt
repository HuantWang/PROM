-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_13_bad()
{
    unsigned int data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
            unsigned int result = data * 2;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
39,41
40,41
43,44
43,45
44,45
45,46
45,47
47,48
47,49
49,50
50,51
50,52
51,52
54,55
55,56
55,57
56,57
58,59
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,42,46,48,52,53,57,59
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
39,40
39,41
50,51
50,52
-----guardedBy-----
41,52
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_13_bad(){    unsigned int data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_13_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_13_bad
{    unsigned int data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(0,8,0)
(20,31,0)
(33,2,0)
(8,9,0)
(11,28,0)
(18,2,0)
(30,19,0)
(1,13,0)
(17,29,0)
(13,17,0)
(3,19,0)
(7,31,0)
(14,12,0)
(24,29,0)
(13,29,0)
(25,20,0)
(27,23,0)
(22,2,0)
(17,20,0)
(6,10,0)
(15,8,0)
(20,17,0)
(16,12,0)
(31,2,0)
(23,31,0)
(21,31,0)
(4,10,0)
(10,31,0)
(26,20,0)
(23,8,0)
(8,23,0)
(32,17,0)
(17,20,1)
(31,21,1)
(10,4,1)
(6,19,1)
(19,30,1)
(5,19,1)
(16,31,1)
(3,8,1)
(13,17,1)
(12,14,1)
(23,27,1)
(1,17,1)
(0,12,1)
(10,31,1)
(20,31,1)
(13,1,1)
(23,31,1)
(5,10,1)
(21,7,1)
(4,6,1)
(3,12,1)
(8,23,1)
(14,16,1)
(27,15,1)
(30,3,1)
(32,10,1)
(15,0,1)
(25,32,1)
(5,13,1)
(20,26,1)
(26,25,1)
(32,10,2)
(15,12,2)
(8,23,2)
(10,31,2)
(23,12,2)
(26,10,2)
(8,12,2)
(23,31,2)
(20,31,2)
(27,12,2)
(25,10,2)
(1,10,2)
(6,19,2)
(10,19,2)
(0,12,2)
(20,10,2)
(4,19,2)
(17,20,2)
(17,10,2)
(13,10,2)
(13,17,2)
-----------------------------------
(0,stdin)
(1,result)
(2,)
(3,GLOBAL_CONST_FIVE)
(4,0)
(5,RET)
(6,data)
(7,data)
(8,fscanf (stdin, "%u", &data)
(9,)
(10,data > 0)
(11,if(data > 0)
(12,GLOBAL_CONST_FIVE==5)
(13,printUnsignedLine(result)
(14,5)
(15,"%u")
(16,GLOBAL_CONST_FIVE)
(17,result = data * 2)
(18,if(GLOBAL_CONST_FIVE==5)
(19,GLOBAL_CONST_FIVE==5)
(20,data * 2)
(21,0)
(22,data)
(23,&data)
(24,result)
(25,data)
(26,2)
(27,data)
(28,)
(29,)
(30,5)
(31,data = 0)
(32,result)
(33,if(GLOBAL_CONST_FIVE==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^