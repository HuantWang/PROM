-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_32_bad()
{
    unsigned int data;
    unsigned int *dataPtr1 = &data;
    unsigned int *dataPtr2 = &data;
    data = 0;
    {
        unsigned int data = *dataPtr1;
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
        *dataPtr1 = data;
    }
    {
        unsigned int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
54,55
56,57
57,58
57,59
58,59
59,60
61,62
63,64
63,65
64,65
65,66
65,67
67,68
67,69
69,70
70,71
71,72
73,74
73,75
73,76
74,75
75,76
76,77
78,79
79,80
79,81
81,82
81,83
83,84
84,85
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,51,52,55,60,62,66,68,72,77,80,82,85,89,91
-----computeFrom-----
32,33
32,34
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_32_bad(){    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_32_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_32_bad
{    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
unsigned int *dataPtr1 = &data;
unsigned int *dataPtr1 = &data;
unsigned int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
unsigned int *dataPtr2 = &data;
unsigned int *dataPtr2 = &data;
unsigned int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        *dataPtr1 = data;    }
unsigned int data = *dataPtr1;
unsigned int data = *dataPtr1;
unsigned int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
unsigned int data = *dataPtr2;
unsigned int data = *dataPtr2;
unsigned int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(34,14,0)
(36,18,0)
(40,7,0)
(26,11,0)
(41,6,0)
(1,14,0)
(10,7,0)
(31,4,0)
(33,41,0)
(14,13,0)
(42,45,0)
(40,21,0)
(13,15,0)
(24,16,0)
(18,26,0)
(20,11,0)
(27,11,0)
(19,40,0)
(13,10,0)
(6,3,0)
(32,3,0)
(9,10,0)
(28,34,0)
(14,34,0)
(6,7,0)
(9,13,0)
(15,13,0)
(30,19,0)
(11,7,0)
(25,15,0)
(38,6,0)
(23,40,0)
(44,21,0)
(0,4,0)
(12,9,0)
(22,7,0)
(4,20,0)
(37,7,0)
(43,10,0)
(21,40,0)
(2,13,0)
(45,7,0)
(18,20,0)
(16,20,0)
(16,4,0)
(19,9,0)
(8,20,0)
(4,26,0)
(17,34,0)
(26,41,0)
(34,10,0)
(39,26,0)
(35,7,0)
(29,45,0)
(15,40,0)
(41,26,0)
(3,6,0)
(3,32,1)
(15,40,1)
(42,29,1)
(21,44,1)
(31,0,1)
(34,14,1)
(19,30,1)
(14,1,1)
(19,40,1)
(14,13,1)
(18,26,1)
(4,26,1)
(32,38,1)
(44,23,1)
(0,18,1)
(13,15,1)
(40,21,1)
(33,39,1)
(28,13,1)
(41,6,1)
(6,3,1)
(16,24,1)
(16,4,1)
(9,13,1)
(5,16,1)
(17,28,1)
(38,40,1)
(41,33,1)
(45,42,1)
(2,45,1)
(15,25,1)
(1,17,1)
(25,2,1)
(18,36,1)
(29,6,1)
(36,26,1)
(39,9,1)
(30,34,1)
(4,31,1)
(26,41,1)
(12,19,1)
(9,12,1)
(24,4,1)
(15,40,2)
(18,26,2)
(16,4,2)
(34,14,2)
(41,6,2)
(13,15,2)
(14,13,2)
(9,13,2)
(4,26,2)
(6,3,2)
(40,21,2)
(19,40,2)
(26,41,2)
-----------------------------------
(0,result)
(1,data)
(2,data)
(3,&data)
(4,result = data)
(5,RET)
(6,*dataPtr2 = &data)
(7,)
(8,result)
(9,*dataPtr1 = data)
(10,)
(11,)
(12,data)
(13,data = *dataPtr1)
(14,&data)
(15,*dataPtr1)
(16,printUnsignedLine(result)
(17,"%u")
(18,data++)
(19,*dataPtr1)
(20,)
(21,&data)
(22,dataPtr1)
(23,dataPtr1)
(24,result)
(25,dataPtr1)
(26,data = *dataPtr2)
(27,data)
(28,stdin)
(29,data)
(30,dataPtr1)
(31,data)
(32,data)
(33,dataPtr2)
(34,fscanf (stdin, "%u", &data)
(35,dataPtr2)
(36,data)
(37,data)
(38,dataPtr2)
(39,data)
(40,*dataPtr1 = &data)
(41,*dataPtr2)
(42,0)
(43,data)
(44,data)
(45,data = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^