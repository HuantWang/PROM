-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_postinc_02_bad()
{
    short data;
    data = 0;
    if(1)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
27,28
28,29
30,31
30,32
32,33
33,34
33,35
33,36
34,35
35,36
36,37
38,39
39,40
39,41
41,42
41,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,17,22,25,26,29,31,37,40,42,45,49,51
-----computeFrom-----
12,13
12,14
20,21
20,22
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_postinc_02_bad(){    short data;    data = 0;    if(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_postinc_02_bad()
CWE190_Integer_Overflow__short_rand_postinc_02_bad
{    short data;    data = 0;    if(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
1
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(25,5,0)
(17,3,0)
(16,4,0)
(5,4,0)
(15,23,0)
(12,22,0)
(17,18,0)
(17,14,0)
(8,4,0)
(3,17,0)
(11,23,0)
(5,22,0)
(24,22,0)
(18,17,0)
(24,4,0)
(20,14,0)
(24,14,0)
(14,17,0)
(2,1,0)
(19,23,0)
(4,23,0)
(1,24,0)
(22,6,0)
(14,0,0)
(5,14,0)
(9,24,0)
(1,22,0)
(13,24,0)
(5,25,1)
(2,24,1)
(24,4,1)
(24,14,1)
(1,2,1)
(5,14,1)
(21,14,1)
(10,4,1)
(14,17,1)
(7,21,1)
(24,13,1)
(8,16,1)
(25,21,1)
(9,5,1)
(21,10,1)
(13,9,1)
(4,8,1)
(7,1,1)
(17,3,1)
(5,4,1)
(20,10,1)
(17,18,1)
(1,24,1)
(18,20,1)
(9,21,2)
(5,21,2)
(25,21,2)
(24,21,2)
(5,4,2)
(17,10,2)
(20,10,2)
(13,21,2)
(5,14,2)
(24,4,2)
(17,3,2)
(1,24,2)
(18,10,2)
(24,14,2)
(14,10,2)
(2,21,2)
(17,18,2)
(14,17,2)
(1,21,2)
-----------------------------------
(0,)
(1,printIntLine(result)
(2,result)
(3,short)
(4,data = 0)
(5,data++)
(6,)
(7,RET)
(8,0)
(9,result)
(10,1)
(11,data)
(12,result)
(13,data)
(14,data = (short)
(15,if(1)
(16,data)
(17,(short)
(18,RAND32()
(19,if(1)
(20,data)
(21,1)
(22,)
(23,)
(24,result = data)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^