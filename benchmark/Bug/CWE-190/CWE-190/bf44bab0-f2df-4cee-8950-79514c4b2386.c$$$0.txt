-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_postinc_07_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_postinc_07_bad(){    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_postinc_07_bad()
CWE190_Integer_Overflow__int_fscanf_postinc_07_bad
{    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(24,10,0)
(25,26,0)
(20,0,0)
(4,10,0)
(5,22,0)
(17,15,0)
(10,8,0)
(8,10,0)
(5,15,0)
(11,22,0)
(18,13,0)
(16,5,0)
(27,5,0)
(15,0,0)
(14,26,0)
(3,13,0)
(8,15,0)
(7,0,0)
(10,19,0)
(12,0,0)
(23,27,0)
(27,22,0)
(2,5,0)
(22,6,0)
(21,11,0)
(11,15,0)
(1,8,0)
(9,22,0)
(28,15,0)
(24,4,1)
(18,10,1)
(15,17,1)
(23,5,1)
(26,14,1)
(21,13,1)
(8,1,1)
(8,15,1)
(5,2,1)
(4,26,1)
(3,18,1)
(27,23,1)
(10,8,1)
(11,15,1)
(13,3,1)
(14,25,1)
(16,11,1)
(2,16,1)
(1,24,1)
(29,13,1)
(17,28,1)
(25,15,1)
(5,15,1)
(18,26,1)
(27,5,1)
(11,21,1)
(29,27,1)
(11,13,2)
(27,5,2)
(2,13,2)
(10,8,2)
(4,26,2)
(5,15,2)
(8,15,2)
(16,13,2)
(11,15,2)
(23,13,2)
(21,13,2)
(5,13,2)
(8,26,2)
(24,26,2)
(27,13,2)
(10,26,2)
(1,26,2)
-----------------------------------
(0,)
(1,data)
(2,data)
(3,5)
(4,stdin)
(5,result = data)
(6,)
(7,data)
(8,&data)
(9,result)
(10,fscanf(stdin, "%d", &data)
(11,data++)
(12,if(staticFive==5)
(13,staticFive==5)
(14,5)
(15,data = 0)
(16,result)
(17,0)
(18,staticFive)
(19,)
(20,if(staticFive==5)
(21,data)
(22,)
(23,result)
(24,"%d")
(25,staticFive)
(26,staticFive==5)
(27,printIntLine(result)
(28,data)
(29,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^