-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_add_32_bad()
{
    int64_t data;
    int64_t *dataPtr1 = &data;
    int64_t *dataPtr2 = &data;
    data = 0LL;
    {
        int64_t data = *dataPtr1;
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
        *dataPtr1 = data;
    }
    {
        int64_t data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int64_t result = data + 1;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
32,33
34,35
35,36
35,37
36,37
39,40
39,41
39,42
40,41
41,42
41,43
42,43
44,45
44,46
46,47
47,48
48,49
50,51
51,52
51,53
52,53
54,55
54,56
55,56
55,57
56,57
59,60
60,61
62,63
63,64
63,65
64,65
65,66
67,68
69,70
69,71
70,71
71,72
71,73
72,73
74,75
74,76
76,77
77,78
78,79
80,81
80,82
81,82
82,83
82,84
83,84
85,86
85,87
87,88
88,89
88,90
89,90
92,93
93,94
93,95
94,95
96,97
-----nextToken-----
2,4,9,11,15,17,18,22,26,28,29,33,37,38,43,45,49,53,57,58,61,66,68,73,75,79,84,86,90,91,95,97
-----computeFrom-----
35,36
35,37
51,52
51,53
63,64
63,65
88,89
88,90
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_add_32_bad(){    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_add_32_bad()
CWE190_Integer_Overflow__int64_t_rand_add_32_bad
{    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
int64_t *dataPtr1 = &data;
int64_t *dataPtr1 = &data;
int64_t
int64_t
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int64_t *dataPtr2 = &data;
int64_t *dataPtr2 = &data;
int64_t
int64_t
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0LL;
data = 0LL
data
data
0LL
{        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();        *dataPtr1 = data;    }
int64_t data = *dataPtr1;
int64_t data = *dataPtr1;
int64_t
int64_t
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
int64_t data = *dataPtr2;
int64_t data = *dataPtr2;
int64_t
int64_t
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(22,36,0)
(9,15,0)
(8,11,0)
(33,6,0)
(16,37,0)
(28,42,0)
(43,25,0)
(31,11,0)
(3,2,0)
(43,8,0)
(20,14,0)
(29,25,0)
(15,23,0)
(24,2,0)
(5,39,0)
(18,42,0)
(36,9,0)
(9,36,0)
(6,33,0)
(6,1,0)
(25,10,0)
(0,8,0)
(8,43,0)
(42,11,0)
(27,6,0)
(6,27,0)
(13,2,0)
(41,33,0)
(39,23,0)
(37,14,0)
(40,9,0)
(33,11,0)
(10,25,0)
(17,15,0)
(42,33,0)
(26,9,0)
(21,2,0)
(5,36,0)
(4,43,0)
(32,20,0)
(34,14,0)
(36,39,0)
(20,15,0)
(7,5,0)
(14,2,0)
(1,6,0)
(15,20,0)
(30,10,0)
(35,18,0)
(11,2,0)
(18,25,0)
(38,23,0)
(14,37,0)
(23,2,0)
(19,39,0)
(25,2,0)
(20,14,1)
(6,1,1)
(30,29,1)
(32,17,1)
(43,25,1)
(8,43,1)
(37,16,1)
(26,40,1)
(3,14,1)
(28,18,1)
(36,9,1)
(17,42,1)
(22,15,1)
(12,5,1)
(16,34,1)
(0,3,1)
(5,36,1)
(4,0,1)
(5,7,1)
(18,25,1)
(25,10,1)
(40,22,1)
(18,35,1)
(7,36,1)
(9,26,1)
(42,28,1)
(14,37,1)
(34,25,1)
(35,33,1)
(10,30,1)
(9,15,1)
(15,20,1)
(42,33,1)
(41,8,1)
(20,32,1)
(27,41,1)
(43,4,1)
(6,27,1)
(33,6,1)
(20,14,2)
(33,6,2)
(6,1,2)
(18,25,2)
(25,10,2)
(6,27,2)
(9,15,2)
(5,36,2)
(15,20,2)
(36,9,2)
(14,37,2)
(43,25,2)
(8,43,2)
(42,33,2)
-----------------------------------
(0,data)
(1,int64_t)
(2,)
(3,L)
(4,dataPtr1)
(5,printLongLongLine(result)
(6,(int64_t)
(7,result)
(8,data = *dataPtr1)
(9,data + 1)
(10,&data)
(11,)
(12,RET)
(13,dataPtr1)
(14,*dataPtr2 = &data)
(15,data = *dataPtr2)
(16,data)
(17,data)
(18,*dataPtr1)
(19,result)
(20,*dataPtr2)
(21,dataPtr2)
(22,result)
(23,)
(24,data)
(25,*dataPtr1 = &data)
(26,1)
(27,RAND64()
(28,data)
(29,dataPtr1)
(30,data)
(31,data)
(32,dataPtr2)
(33,data = (int64_t)
(34,dataPtr2)
(35,dataPtr1)
(36,result = data + 1)
(37,&data)
(38,data)
(39,)
(40,data)
(41,data)
(42,*dataPtr1 = data)
(43,*dataPtr1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^