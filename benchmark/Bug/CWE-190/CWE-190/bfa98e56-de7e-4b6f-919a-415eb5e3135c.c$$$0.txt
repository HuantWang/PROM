-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_preinc_31_bad()
{
    short data;
    data = 0;
    /* POTENTIAL FLAW: Use a random value */
    data = (short)RAND32();
    {
        short dataCopy = data;
        short data = dataCopy;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
21,23
24,25
25,26
27,28
27,29
27,30
28,29
29,30
29,31
31,32
31,33
33,34
34,35
36,37
37,38
37,39
39,40
39,41
41,42
42,43
44,45
44,46
44,47
45,46
46,47
47,48
49,50
50,51
50,52
52,53
52,54
54,55
55,56
57,58
58,59
58,60
59,60
61,62
-----nextToken-----
2,4,8,10,14,15,19,22,23,26,30,32,35,38,40,43,48,51,53,56,60,62
-----computeFrom-----
12,13
12,14
17,18
17,19
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_preinc_31_bad(){    short data;    data = 0;    /* POTENTIAL FLAW: Use a random value */    data = (short)RAND32();    {        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_preinc_31_bad()
CWE190_Integer_Overflow__short_rand_preinc_31_bad
{    short data;    data = 0;    /* POTENTIAL FLAW: Use a random value */    data = (short)RAND32();    {        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
short dataCopy = data;
short dataCopy = data;
short
dataCopy = data
dataCopy
= data
data
data
short data = dataCopy;
short data = dataCopy;
short
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(21,12,0)
(22,14,0)
(19,14,0)
(24,13,0)
(14,12,0)
(11,14,0)
(0,20,0)
(17,23,0)
(25,13,0)
(9,16,0)
(21,25,0)
(25,0,0)
(28,0,0)
(1,12,0)
(16,11,0)
(3,12,0)
(5,21,0)
(4,25,0)
(23,13,0)
(11,3,0)
(6,11,0)
(16,3,0)
(12,13,0)
(14,21,0)
(7,14,0)
(26,23,0)
(0,28,0)
(15,21,0)
(18,12,0)
(20,0,0)
(22,3,0)
(10,11,0)
(27,22,0)
(0,25,0)
(8,3,0)
(14,21,1)
(22,14,1)
(5,15,1)
(27,14,1)
(7,19,1)
(23,26,1)
(20,4,1)
(16,11,1)
(11,14,1)
(0,28,1)
(25,0,1)
(2,16,1)
(26,17,1)
(0,20,1)
(15,25,1)
(16,9,1)
(19,21,1)
(22,27,1)
(10,22,1)
(6,10,1)
(9,11,1)
(11,6,1)
(14,7,1)
(21,25,1)
(4,23,1)
(21,5,1)
(0,20,2)
(14,21,2)
(25,0,2)
(16,11,2)
(21,25,2)
(0,28,2)
(11,14,2)
(22,14,2)
-----------------------------------
(0,(short)
(1,data)
(2,RET)
(3,)
(4,data)
(5,data)
(6,data)
(7,dataCopy)
(8,result)
(9,result)
(10,result)
(11,result = data)
(12,)
(13,)
(14,data = dataCopy)
(15,dataCopy)
(16,printIntLine(result)
(17,data)
(18,dataCopy)
(19,data)
(20,RAND32()
(21,dataCopy = data)
(22,++data)
(23,data = 0)
(24,data)
(25,data = (short)
(26,0)
(27,data)
(28,short)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^