-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_preinc_09_bad()
{
    char data;
    data = ' ';
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
    }
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            char result = data;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_preinc_09_bad(){    char data;    data = ' ';    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_preinc_09_bad()
CWE190_Integer_Overflow__char_fscanf_preinc_09_bad
{    char data;    data = ' ';    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(5,11,0)
(2,5,0)
(0,9,0)
(2,7,0)
(17,11,0)
(10,11,0)
(19,23,0)
(4,25,0)
(6,2,0)
(22,21,0)
(5,2,0)
(1,25,0)
(3,25,0)
(21,23,0)
(11,25,0)
(15,21,0)
(23,16,0)
(9,23,0)
(21,11,0)
(8,5,0)
(24,19,0)
(13,2,0)
(9,21,0)
(20,23,0)
(19,11,0)
(17,10,1)
(9,0,1)
(13,6,1)
(21,11,1)
(22,15,1)
(0,21,1)
(9,21,1)
(5,11,1)
(15,19,1)
(21,22,1)
(12,2,1)
(6,14,1)
(24,12,1)
(8,13,1)
(5,8,1)
(2,5,1)
(18,9,1)
(18,12,1)
(19,11,1)
(12,14,1)
(19,24,1)
(11,17,1)
(14,11,1)
(22,12,2)
(2,14,2)
(8,14,2)
(21,12,2)
(24,12,2)
(6,14,2)
(15,12,2)
(21,11,2)
(9,12,2)
(5,14,2)
(13,14,2)
(0,12,2)
(19,11,2)
(19,12,2)
(2,5,2)
(5,11,2)
(9,21,2)
-----------------------------------
(0,result)
(1,data)
(2,fscanf (stdin, "%c", &data)
(3,if(GLOBAL_CONST_TRUE)
(4,if(GLOBAL_CONST_TRUE)
(5,&data)
(6,stdin)
(7,)
(8,data)
(9,printHexCharLine(result)
(10,data)
(11,data = \\\' \\\')
(12,GLOBAL_CONST_TRUE)
(13,"%c")
(14,GLOBAL_CONST_TRUE)
(15,result)
(16,)
(17,\\\' \\\')
(18,RET)
(19,++data)
(20,result)
(21,result = data)
(22,data)
(23,)
(24,data)
(25,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^