-----label-----
1
-----code-----
static void badSink(unsigned int data)
{
    if(badStatic)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
            unsigned int result = data * 2;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
13,14
14,15
14,16
15,16
15,17
16,17
19,20
19,21
20,21
21,22
21,23
23,24
23,25
25,26
26,27
26,28
27,28
30,31
31,32
31,33
32,33
34,35
-----nextToken-----
2,4,6,8,12,17,18,22,24,28,29,33,35
-----computeFrom-----
15,16
15,17
26,27
26,28
-----guardedBy-----
17,28
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(unsigned int data){    if(badStatic)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
static void
badSink(unsigned int data)
badSink
unsigned int data
unsigned int
data
data
{    if(badStatic)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
if(badStatic)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
badStatic
badStatic
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(7,15,0)
(8,2,0)
(2,15,0)
(17,4,0)
(12,15,0)
(15,16,0)
(13,2,0)
(9,0,0)
(14,7,0)
(15,2,0)
(2,10,0)
(7,16,0)
(4,10,0)
(5,6,0)
(1,4,0)
(11,16,0)
(14,15,1)
(2,13,1)
(3,7,1)
(8,12,1)
(4,17,1)
(15,2,1)
(3,4,1)
(1,18,1)
(13,8,1)
(7,15,1)
(17,1,1)
(4,10,1)
(2,10,1)
(3,18,1)
(7,14,1)
(12,4,1)
(1,18,2)
(2,4,2)
(8,4,2)
(15,4,2)
(17,18,2)
(7,15,2)
(2,10,2)
(7,4,2)
(15,2,2)
(13,4,2)
(12,4,2)
(4,18,2)
(14,4,2)
(4,10,2)
-----------------------------------
(0,)
(1,data)
(2,data * 2)
(3,RET)
(4,data > 0)
(5,if(data > 0)
(6,)
(7,printUnsignedLine(result)
(8,data)
(9,if(badStatic)
(10,unsigned int data)
(11,result)
(12,result)
(13,2)
(14,result)
(15,result = data * 2)
(16,)
(17,0)
(18,badStatic)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^