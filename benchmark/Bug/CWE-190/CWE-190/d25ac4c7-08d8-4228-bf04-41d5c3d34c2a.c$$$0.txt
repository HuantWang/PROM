-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_rand_add_01_bad()
{
    char data;
    data = ' ';
    /* POTENTIAL FLAW: Use a random value */
    data = (char)RAND32();
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        char result = data + 1;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
21,23
24,25
25,26
27,28
27,29
28,29
29,30
29,31
31,32
31,33
33,34
34,35
34,36
35,36
38,39
39,40
39,41
40,41
42,43
-----nextToken-----
2,4,8,10,14,15,19,22,23,26,30,32,36,37,41,43
-----computeFrom-----
12,13
12,14
17,18
17,19
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_rand_add_01_bad(){    char data;    data = ' ';    /* POTENTIAL FLAW: Use a random value */    data = (char)RAND32();    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_rand_add_01_bad()
CWE190_Integer_Overflow__char_rand_add_01_bad
{    char data;    data = ' ';    /* POTENTIAL FLAW: Use a random value */    data = (char)RAND32();    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
data = (char)RAND32();
data = (char)RAND32()
data
data
(char)RAND32()
char
char

RAND32()
RAND32
RAND32
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(7,9,0)
(11,12,0)
(2,17,0)
(18,9,0)
(14,10,0)
(19,18,0)
(3,17,0)
(9,18,0)
(0,14,0)
(1,12,0)
(9,7,0)
(9,5,0)
(8,15,0)
(17,15,0)
(12,10,0)
(13,11,0)
(16,10,0)
(18,10,0)
(11,15,0)
(6,14,0)
(15,17,0)
(17,18,0)
(5,9,0)
(15,12,0)
(8,18,1)
(9,7,1)
(18,9,1)
(2,8,1)
(3,2,1)
(11,13,1)
(6,0,1)
(14,6,1)
(11,15,1)
(5,19,1)
(17,18,1)
(17,3,1)
(4,11,1)
(13,15,1)
(15,17,1)
(9,5,1)
(19,14,1)
(9,5,2)
(17,18,2)
(18,9,2)
(9,7,2)
(11,15,2)
(15,17,2)
-----------------------------------
(0,data)
(1,result)
(2,data)
(3,1)
(4,RET)
(5,RAND32()
(6,' ')
(7,char)
(8,result)
(9,(char)
(10,)
(11,printHexCharLine(result)
(12,)
(13,result)
(14,data = ' ')
(15,result = data + 1)
(16,data)
(17,data + 1)
(18,data = (char)
(19,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^