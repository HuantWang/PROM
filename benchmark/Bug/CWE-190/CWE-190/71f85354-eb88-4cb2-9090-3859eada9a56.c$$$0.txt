-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_preinc_08_bad()
{
    short data;
    data = 0;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
29,30
31,32
32,33
32,34
32,35
33,34
34,35
35,36
37,38
38,39
38,40
40,41
40,42
42,43
43,44
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,19,24,26,30,36,39,41,44,48,50
-----computeFrom-----
12,13
12,14
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_preinc_08_bad(){    short data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_preinc_08_bad()
CWE190_Integer_Overflow__short_max_preinc_08_bad
{    short data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(4,14,0)
(5,8,0)
(0,8,0)
(0,5,0)
(5,14,0)
(12,8,0)
(17,12,0)
(7,13,0)
(14,20,0)
(16,0,0)
(13,18,0)
(10,5,0)
(8,19,0)
(21,18,0)
(3,13,0)
(9,8,0)
(23,5,0)
(2,14,0)
(12,13,0)
(5,13,0)
(12,14,0)
(6,18,0)
(11,18,0)
(5,14,1)
(22,13,1)
(16,5,1)
(3,7,1)
(5,13,1)
(12,17,1)
(23,10,1)
(12,13,1)
(15,22,1)
(5,23,1)
(0,5,1)
(17,15,1)
(15,14,1)
(1,0,1)
(0,16,1)
(1,15,1)
(12,14,1)
(2,22,1)
(10,12,1)
(14,4,1)
(4,2,1)
(13,3,1)
(0,15,2)
(23,15,2)
(5,15,2)
(10,15,2)
(0,5,2)
(17,15,2)
(12,15,2)
(5,14,2)
(5,13,2)
(12,13,2)
(2,22,2)
(12,14,2)
(4,22,2)
(14,22,2)
(16,15,2)
-----------------------------------
(0,printIntLine(result)
(1,RET)
(2,data)
(3,0)
(4,SHRT_MAX)
(5,result = data)
(6,if(staticReturnsTrue()
(7,data)
(8,)
(9,result)
(10,result)
(11,data)
(12,++data)
(13,data = 0)
(14,data = SHRT_MAX)
(15,staticReturnsTrue()
(16,result)
(17,data)
(18,)
(19,)
(20,)
(21,if(staticReturnsTrue()
(22,staticReturnsTrue()
(23,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^