-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_add_10_bad()
{
    short data;
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,38,40,44,45,49,51
-----computeFrom-----
12,13
12,14
21,22
21,23
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_add_10_bad(){    short data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_add_10_bad()
CWE190_Integer_Overflow__short_rand_add_10_bad
{    short data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(20,10,0)
(8,18,0)
(12,2,0)
(4,16,0)
(10,21,0)
(16,5,0)
(21,10,0)
(24,5,0)
(10,0,0)
(21,7,0)
(10,20,0)
(0,10,0)
(3,21,0)
(2,23,0)
(23,3,0)
(13,3,0)
(9,16,0)
(18,15,0)
(19,21,0)
(3,23,0)
(25,5,0)
(17,5,0)
(2,18,0)
(14,3,0)
(23,18,0)
(3,16,0)
(22,23,0)
(1,21,1)
(4,9,1)
(14,13,1)
(1,11,1)
(3,16,1)
(13,22,1)
(10,0,1)
(23,3,1)
(19,11,1)
(3,21,1)
(0,19,1)
(12,23,1)
(11,16,1)
(22,1,1)
(3,14,1)
(2,23,1)
(16,4,1)
(2,12,1)
(10,20,1)
(6,1,1)
(21,10,1)
(6,2,1)
(12,1,2)
(10,20,2)
(0,11,2)
(23,1,2)
(13,1,2)
(14,1,2)
(2,1,2)
(3,1,2)
(2,23,2)
(21,10,2)
(10,0,2)
(23,3,2)
(19,11,2)
(21,11,2)
(22,1,2)
(3,16,2)
(10,11,2)
(3,21,2)
-----------------------------------
(0,RAND32()
(1,globalTrue)
(2,printIntLine(result)
(3,data + 1)
(4,0)
(5,)
(6,RET)
(7,)
(8,result)
(9,data)
(10,(short)
(11,globalTrue)
(12,result)
(13,data)
(14,1)
(15,)
(16,data = 0)
(17,if(globalTrue)
(18,)
(19,data)
(20,short)
(21,data = (short)
(22,result)
(23,result = data + 1)
(24,if(globalTrue)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^