-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_square_18_bad()
{
    short data;
    data = 0;
    goto source;
source:
    /* POTENTIAL FLAW: Use a random value */
    data = (short)RAND32();
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */
        short result = data * data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
33,34
33,35
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,17,19,23,26,27,30,32,34,38,40,44,46,50,52
-----computeFrom-----
12,13
12,14
21,22
21,23
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_square_18_bad(){    short data;    data = 0;    goto source;source:    /* POTENTIAL FLAW: Use a random value */    data = (short)RAND32();    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__short_rand_square_18_bad()
CWE190_Integer_Overflow__short_rand_square_18_bad
{    short data;    data = 0;    goto source;source:    /* POTENTIAL FLAW: Use a random value */    data = (short)RAND32();    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    /* POTENTIAL FLAW: Use a random value */    data = (short)RAND32();
source
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }
sink
{        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }
short result = data * data;
short result = data * data;
short
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(18,6,0)
(21,0,0)
(17,2,0)
(15,6,0)
(4,8,0)
(5,8,0)
(14,19,0)
(11,5,0)
(2,1,0)
(12,14,0)
(14,16,0)
(19,6,0)
(2,5,0)
(2,17,0)
(6,5,0)
(5,2,0)
(19,16,0)
(1,2,0)
(16,8,0)
(13,16,0)
(23,8,0)
(10,19,0)
(6,19,0)
(3,8,0)
(0,8,0)
(7,8,0)
(9,0,0)
(20,8,0)
(6,18,1)
(14,19,1)
(15,10,1)
(20,5,1)
(22,14,1)
(6,5,1)
(18,15,1)
(23,0,1)
(19,6,1)
(14,12,1)
(1,11,1)
(2,1,1)
(10,20,1)
(2,17,1)
(11,23,1)
(9,21,1)
(5,2,1)
(0,9,1)
(12,19,1)
(6,5,2)
(2,17,2)
(5,2,2)
(14,19,2)
(19,6,2)
(2,1,2)
-----------------------------------
(0,data = 0)
(1,RAND32()
(2,(short)
(3,source:)
(4,sink:)
(5,data = (short)
(6,data * data)
(7,data)
(8,)
(9,0)
(10,result)
(11,data)
(12,result)
(13,result)
(14,printIntLine(result)
(15,data)
(16,)
(17,short)
(18,data)
(19,result = data * data)
(20,goto sink;)
(21,data)
(22,RET)
(23,goto source;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^