-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_preinc_66b_badSink(char dataArray[])
{
    /* copy data out of dataArray */
    char data = dataArray[2];
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        ++data;
        char result = data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
22,23
23,24
24,25
26,27
27,28
27,29
29,30
29,31
31,32
32,33
34,35
35,36
35,37
36,37
38,39
-----nextToken-----
2,4,6,8,9,13,15,19,20,25,28,30,33,37,39
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_preinc_66b_badSink(char dataArray[]){    /* copy data out of dataArray */    char data = dataArray[2];    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_max_preinc_66b_badSink(char dataArray[])
CWE190_Integer_Overflow__char_max_preinc_66b_badSink
char dataArray[]
char
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    char data = dataArray[2];    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }}
char data = dataArray[2];
char data = dataArray[2];
char
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(17,3,0)
(4,5,0)
(2,11,0)
(3,16,0)
(11,2,0)
(11,5,0)
(12,16,0)
(1,3,0)
(16,5,0)
(13,2,0)
(6,11,0)
(9,3,0)
(7,16,0)
(9,16,0)
(2,8,0)
(14,2,0)
(12,11,0)
(0,12,0)
(3,11,0)
(15,9,0)
(3,11,1)
(15,3,1)
(14,6,1)
(9,3,1)
(1,12,1)
(2,13,1)
(3,17,1)
(0,11,1)
(11,2,1)
(12,0,1)
(13,14,1)
(9,15,1)
(12,11,1)
(2,8,1)
(10,9,1)
(17,1,1)
(2,8,2)
(3,11,2)
(9,3,2)
(12,11,2)
(11,2,2)
-----------------------------------
(0,data)
(1,result)
(2,dataArray[2])
(3,result = data)
(4,data)
(5,)
(6,data)
(7,result)
(8,char dataArray[])
(9,printHexCharLine(result)
(10,RET)
(11,data = dataArray[2])
(12,++data)
(13,2)
(14,dataArray)
(15,result)
(16,)
(17,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^