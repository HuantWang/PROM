-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_add_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = 0;
    {
        int data = *dataPtr1;
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
55,56
57,58
59,60
59,61
60,61
61,62
61,63
63,64
63,65
65,66
66,67
67,68
69,70
69,71
70,71
71,72
71,73
73,74
73,75
75,76
76,77
76,78
77,78
80,81
81,82
81,83
82,83
84,85
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,51,56,58,62,64,68,72,74,78,79,83,85
-----computeFrom-----
32,33
32,34
47,48
47,49
53,54
53,55
76,77
76,78
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_add_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_add_32_bad()
CWE190_Integer_Overflow__int_max_add_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        int data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(4,28,0)
(42,23,0)
(43,15,0)
(29,11,0)
(15,25,0)
(8,26,0)
(0,22,0)
(40,14,0)
(18,11,0)
(31,7,0)
(15,19,0)
(40,37,0)
(19,22,0)
(5,18,0)
(18,5,0)
(6,33,0)
(20,22,0)
(37,40,0)
(26,33,0)
(23,25,0)
(34,33,0)
(25,33,0)
(9,18,0)
(12,37,0)
(11,33,0)
(41,26,0)
(22,27,0)
(30,5,0)
(38,33,0)
(27,33,0)
(7,28,0)
(3,25,0)
(24,37,0)
(39,19,0)
(38,1,0)
(19,27,0)
(21,32,0)
(1,38,0)
(5,38,0)
(28,7,0)
(32,14,0)
(25,23,0)
(37,18,0)
(28,25,0)
(36,1,0)
(7,27,0)
(35,33,0)
(2,38,0)
(32,40,0)
(10,40,0)
(13,27,0)
(14,11,0)
(17,14,0)
(15,43,1)
(37,18,1)
(9,19,1)
(26,41,1)
(20,7,1)
(43,22,1)
(24,12,1)
(21,40,1)
(39,15,1)
(36,2,1)
(28,4,1)
(19,39,1)
(30,9,1)
(0,20,1)
(22,0,1)
(19,22,1)
(32,21,1)
(1,36,1)
(7,28,1)
(23,42,1)
(5,38,1)
(28,25,1)
(40,37,1)
(31,26,1)
(42,3,1)
(8,38,1)
(32,40,1)
(18,5,1)
(5,30,1)
(4,31,1)
(10,18,1)
(41,8,1)
(37,24,1)
(15,25,1)
(12,10,1)
(25,23,1)
(38,1,1)
(16,32,1)
(2,25,1)
(7,28,2)
(28,25,2)
(38,1,2)
(19,22,2)
(5,38,2)
(40,37,2)
(37,18,2)
(25,23,2)
(18,5,2)
(32,40,2)
(15,25,2)
-----------------------------------
(0,INT_MAX)
(1,&data)
(2,dataPtr2)
(3,dataPtr1)
(4,dataPtr1)
(5,*dataPtr2)
(6,data)
(7,data = *dataPtr1)
(8,data)
(9,data)
(10,result)
(11,)
(12,data)
(13,data)
(14,)
(15,*dataPtr1)
(16,RET)
(17,result)
(18,data = *dataPtr2)
(19,*dataPtr1 = data)
(20,data)
(21,result)
(22,data = INT_MAX)
(23,&data)
(24,1)
(25,*dataPtr1 = &data)
(26,data = 0)
(27,)
(28,*dataPtr1)
(29,data)
(30,dataPtr2)
(31,data)
(32,printIntLine(result)
(33,)
(34,dataPtr1)
(35,dataPtr2)
(36,data)
(37,data + 1)
(38,*dataPtr2 = &data)
(39,data)
(40,result = data + 1)
(41,0)
(42,data)
(43,dataPtr1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^