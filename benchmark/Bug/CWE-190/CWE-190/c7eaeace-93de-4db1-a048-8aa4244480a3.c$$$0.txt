-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_postinc_18_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    goto source;
source:
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        int result = data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
20,22
21,22
22,23
22,24
24,25
24,26
24,27
26,27
27,28
29,30
31,32
31,33
31,34
32,33
32,34
33,34
33,35
33,36
33,37
34,35
36,37
38,39
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
60,61
62,63
62,64
64,65
64,66
64,67
65,66
66,67
67,68
69,70
70,71
70,72
72,73
72,74
74,75
75,76
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,28,30,35,37,39,41,43,48,51,53,58,59,61,63,68,71,73,76,80,82
-----computeFrom-----
12,13
12,14
32,33
32,34
46,47
46,48
-----guardedBy-----
37,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_postinc_18_bad(){    int data;    /* Initialize data */    data = 0;    goto source;source:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    goto sink;sink:    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int result = data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_fgets_postinc_18_bad()
CWE190_Integer_Overflow__int_fgets_postinc_18_bad
{    int data;    /* Initialize data */    data = 0;    goto source;source:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    goto sink;sink:    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int result = data;        printIntLine(result);    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
source
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int result = data;        printIntLine(result);    }
sink
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int result = data;        printIntLine(result);    }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(35,34,0)
(33,31,0)
(13,19,0)
(33,7,0)
(32,21,0)
(34,32,0)
(31,33,0)
(34,18,0)
(38,18,0)
(0,3,0)
(17,6,0)
(36,21,0)
(20,12,0)
(9,19,0)
(16,31,0)
(1,20,0)
(25,32,0)
(12,20,0)
(32,31,0)
(2,7,0)
(3,29,0)
(4,21,0)
(24,6,0)
(18,6,0)
(37,6,0)
(8,6,0)
(28,12,0)
(7,19,0)
(27,31,0)
(15,12,0)
(12,7,0)
(32,18,0)
(31,5,0)
(23,6,0)
(21,6,0)
(16,21,0)
(19,6,0)
(10,7,0)
(22,33,0)
(26,32,0)
(30,16,0)
(16,18,0)
(14,12,0)
(33,22,1)
(0,20,1)
(15,7,1)
(31,33,1)
(8,3,1)
(20,12,1)
(32,21,1)
(35,32,1)
(27,20,1)
(20,1,1)
(2,10,1)
(21,36,1)
(36,4,1)
(25,26,1)
(33,7,1)
(7,2,1)
(12,7,1)
(3,0,1)
(32,31,1)
(11,34,1)
(34,35,1)
(30,8,1)
(28,14,1)
(34,32,1)
(26,16,1)
(16,30,1)
(12,28,1)
(10,17,1)
(16,31,1)
(16,21,1)
(22,27,1)
(14,15,1)
(1,12,1)
(17,21,1)
(8,31,1)
(32,25,1)
(32,31,2)
(22,20,2)
(33,7,2)
(3,20,2)
(31,33,2)
(34,32,2)
(16,31,2)
(0,20,2)
(20,12,2)
(31,20,2)
(32,21,2)
(33,20,2)
(27,20,2)
(16,21,2)
(12,7,2)
-----------------------------------
(0,"fgets()
(1,NULL)
(2,"")
(3,printLine("fgets()
(4,data)
(5,)
(6,)
(7,inputBuffer[CHAR_ARRAY_SIZE] = "")
(8,goto sink;)
(9,inputBuffer)
(10,inputBuffer)
(11,RET)
(12,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(13,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(14,CHAR_ARRAY_SIZE)
(15,inputBuffer)
(16,data++)
(17,goto source;)
(18,)
(19,)
(20,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(21,data = 0)
(22,inputBuffer)
(23,sink:)
(24,data)
(25,data)
(26,result)
(27,data)
(28,stdin)
(29,)
(30,data)
(31,data = atoi(inputBuffer)
(32,result = data)
(33,atoi(inputBuffer)
(34,printIntLine(result)
(35,result)
(36,0)
(37,source:)
(38,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^