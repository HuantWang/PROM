-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_17_bad()
{
    int i,j;
    int data;
    /* Initialize data */
    data = 0;
    for(i = 0; i < 1; i++)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
37,39
38,39
39,40
39,41
41,42
41,43
41,44
43,44
44,45
46,47
48,49
48,50
48,51
49,50
49,51
50,51
50,52
50,53
50,54
51,52
53,54
55,56
57,58
59,60
61,62
62,63
63,64
63,65
64,65
66,67
66,68
67,68
69,70
71,72
72,73
73,74
73,75
74,75
77,78
77,79
77,80
77,81
78,79
79,80
79,81
80,81
83,84
83,85
84,85
87,88
88,89
90,91
91,92
91,93
92,93
93,94
93,95
95,96
95,97
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
106,107
-----nextToken-----
2,4,8,10,12,15,17,21,22,27,28,31,32,35,40,42,45,47,52,54,56,58,60,65,68,70,75,76,81,82,85,86,89,94,96,100,101,105,107
-----computeFrom-----
19,20
19,21
25,26
25,27
29,30
29,31
49,50
49,51
63,64
63,65
79,80
79,81
83,84
83,85
98,99
98,100
-----guardedBy-----
54,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_17_bad(){    int i,j;    int data;    /* Initialize data */    data = 0;    for(i = 0; i < 1; i++)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_add_17_bad()
CWE190_Integer_Overflow__int_fgets_add_17_bad
{    int i,j;    int data;    /* Initialize data */    data = 0;    for(i = 0; i < 1; i++)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(10,46,0)
(47,16,0)
(25,46,0)
(15,0,0)
(40,6,0)
(27,21,0)
(42,16,0)
(7,13,0)
(48,50,0)
(10,26,0)
(39,13,0)
(53,1,0)
(47,51,0)
(36,2,0)
(56,52,0)
(55,33,0)
(33,46,0)
(47,52,0)
(33,51,0)
(2,43,0)
(51,8,0)
(26,10,0)
(24,12,0)
(18,51,0)
(20,6,0)
(22,16,0)
(45,24,0)
(28,14,0)
(0,21,0)
(29,13,0)
(52,47,0)
(16,13,0)
(52,34,0)
(41,20,0)
(3,26,0)
(5,10,0)
(23,47,0)
(14,6,0)
(46,2,0)
(11,2,0)
(17,10,0)
(51,33,0)
(1,34,0)
(54,20,0)
(19,50,0)
(30,46,0)
(4,10,0)
(32,13,0)
(37,34,0)
(49,47,0)
(1,52,0)
(31,6,0)
(50,21,0)
(34,38,0)
(44,13,0)
(9,21,0)
(19,0,1)
(9,27,1)
(55,18,1)
(0,15,1)
(41,14,1)
(33,55,1)
(47,16,1)
(56,50,1)
(48,19,1)
(18,26,1)
(51,33,1)
(41,6,1)
(26,10,1)
(46,25,1)
(1,52,1)
(28,51,1)
(50,21,1)
(1,53,1)
(50,48,1)
(5,4,1)
(0,21,1)
(25,30,1)
(31,40,1)
(19,21,1)
(49,23,1)
(42,22,1)
(35,50,1)
(15,1,1)
(17,5,1)
(45,26,1)
(10,17,1)
(27,20,1)
(52,47,1)
(53,52,1)
(30,20,1)
(20,6,1)
(54,41,1)
(3,10,1)
(14,28,1)
(21,9,1)
(6,31,1)
(47,49,1)
(24,45,1)
(47,51,1)
(33,46,1)
(4,46,1)
(26,3,1)
(40,16,1)
(10,46,1)
(16,42,1)
(14,6,1)
(28,24,1)
(23,56,1)
(20,54,1)
(15,50,2)
(33,46,2)
(10,20,2)
(47,50,2)
(14,6,2)
(23,50,2)
(20,20,2)
(45,26,2)
(26,20,2)
(19,50,2)
(47,16,2)
(50,50,2)
(0,50,2)
(51,26,2)
(41,20,2)
(30,20,2)
(10,46,2)
(46,20,2)
(1,52,2)
(3,20,2)
(1,50,2)
(4,20,2)
(20,6,2)
(52,47,2)
(52,50,2)
(14,20,2)
(54,20,2)
(18,26,2)
(56,50,2)
(48,50,2)
(33,26,2)
(0,21,2)
(5,20,2)
(17,20,2)
(51,33,2)
(25,20,2)
(47,51,2)
(26,10,2)
(49,50,2)
(50,21,2)
(55,26,2)
(53,50,2)
(28,20,2)
(24,26,2)
-----------------------------------
(0,j++)
(1,printIntLine(result)
(2,)
(3,NULL)
(4,inputBuffer)
(5,CHAR_ARRAY_SIZE)
(6,i = 0)
(7,i)
(8,)
(9,0)
(10,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(11,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(12,)
(13,)
(14,i++)
(15,j)
(16,data = 0)
(17,stdin)
(18,data)
(19,j)
(20,i < 1)
(21,j = 0)
(22,data)
(23,data)
(24,printLine("fgets()
(25,"")
(26,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(27,j)
(28,i)
(29,for(i = 0; i < 1; i++)
(30,inputBuffer)
(31,0)
(32,data)
(33,atoi(inputBuffer)
(34,)
(35,RET)
(36,inputBuffer)
(37,result)
(38,)
(39,j)
(40,i)
(41,i)
(42,0)
(43,)
(44,for(j = 0; j < 1; j++)
(45,"fgets()
(46,inputBuffer[CHAR_ARRAY_SIZE] = "")
(47,data + 1)
(48,1)
(49,1)
(50,j < 1)
(51,data = atoi(inputBuffer)
(52,result = data + 1)
(53,result)
(54,1)
(55,inputBuffer)
(56,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^