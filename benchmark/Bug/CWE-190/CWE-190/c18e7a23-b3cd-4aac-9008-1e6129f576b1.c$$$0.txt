-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_postinc_14_bad()
{
    unsigned int data;
    data = 0;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(globalFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_postinc_14_bad(){    unsigned int data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_postinc_14_bad()
CWE190_Integer_Overflow__unsigned_int_max_postinc_14_bad
{    unsigned int data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(21,11,0)
(24,27,0)
(4,23,0)
(17,6,0)
(4,24,0)
(7,12,0)
(26,3,0)
(6,24,0)
(4,14,0)
(13,14,0)
(10,14,0)
(0,11,0)
(2,4,0)
(20,11,0)
(22,4,0)
(16,24,0)
(9,23,0)
(23,5,0)
(15,12,0)
(18,3,0)
(6,23,0)
(8,23,0)
(14,11,0)
(6,14,0)
(19,24,0)
(19,4,0)
(25,19,0)
(22,6,1)
(3,26,1)
(18,12,1)
(25,4,1)
(19,25,1)
(18,23,1)
(4,14,1)
(19,4,1)
(17,3,1)
(4,2,1)
(14,10,1)
(1,3,1)
(6,14,1)
(4,23,1)
(15,14,1)
(12,7,1)
(8,12,1)
(9,8,1)
(23,9,1)
(6,17,1)
(7,15,1)
(1,19,1)
(10,13,1)
(6,23,1)
(26,18,1)
(2,22,1)
(22,3,2)
(9,12,2)
(19,4,2)
(4,23,2)
(17,3,2)
(4,3,2)
(6,23,2)
(8,12,2)
(19,3,2)
(6,3,2)
(2,3,2)
(23,12,2)
(25,3,2)
(6,14,2)
(4,14,2)
-----------------------------------
(0,if(globalFive==5)
(1,RET)
(2,data)
(3,globalFive==5)
(4,result = data)
(5,)
(6,data++)
(7,5)
(8,data)
(9,UINT_MAX)
(10,0)
(11,)
(12,globalFive==5)
(13,data)
(14,data = 0)
(15,globalFive)
(16,result)
(17,data)
(18,globalFive)
(19,printUnsignedLine(result)
(20,data)
(21,if(globalFive==5)
(22,result)
(23,data = UINT_MAX)
(24,)
(25,result)
(26,5)
(27,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^