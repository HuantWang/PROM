-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_preinc_11_bad()
{
    short data;
    data = 0;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
33,34
34,35
36,37
37,38
37,39
37,40
38,39
39,40
40,41
42,43
43,44
43,45
45,46
45,47
47,48
48,49
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,8,10,14,15,19,24,27,28,31,35,41,44,46,49,53,55
-----computeFrom-----
12,13
12,14
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_preinc_11_bad(){    short data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_preinc_11_bad()
CWE190_Integer_Overflow__short_rand_preinc_11_bad
{    short data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(21,22,0)
(23,8,0)
(11,1,0)
(1,23,0)
(11,25,0)
(10,11,0)
(25,20,0)
(2,20,0)
(3,22,0)
(13,20,0)
(19,25,0)
(17,25,0)
(1,18,0)
(22,0,0)
(16,1,0)
(6,20,0)
(23,1,0)
(5,23,0)
(24,4,0)
(23,5,0)
(3,4,0)
(4,25,0)
(11,22,0)
(8,23,0)
(9,3,0)
(4,1,0)
(4,22,0)
(15,4,0)
(25,17,1)
(10,14,1)
(4,1,1)
(17,19,1)
(1,23,1)
(12,25,1)
(14,12,1)
(23,5,1)
(14,1,1)
(5,16,1)
(7,3,1)
(11,25,1)
(11,1,1)
(3,4,1)
(4,25,1)
(3,9,1)
(9,4,1)
(4,24,1)
(11,10,1)
(23,8,1)
(7,14,1)
(16,12,1)
(15,11,1)
(24,15,1)
(3,14,2)
(4,1,2)
(16,12,2)
(1,12,2)
(9,14,2)
(5,12,2)
(23,5,2)
(11,1,2)
(4,25,2)
(4,14,2)
(3,4,2)
(24,14,2)
(11,14,2)
(23,12,2)
(11,25,2)
(10,14,2)
(23,8,2)
(15,14,2)
(1,23,2)
-----------------------------------
(0,)
(1,data = (short)
(2,if(globalReturnsTrue()
(3,printIntLine(result)
(4,result = data)
(5,RAND32()
(6,data)
(7,RET)
(8,short)
(9,result)
(10,data)
(11,++data)
(12,globalReturnsTrue()
(13,if(globalReturnsTrue()
(14,globalReturnsTrue()
(15,result)
(16,data)
(17,0)
(18,)
(19,data)
(20,)
(21,result)
(22,)
(23,(short)
(24,data)
(25,data = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^