-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_preinc_06_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_preinc_06_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_preinc_06_bad()
CWE190_Integer_Overflow__int_fscanf_preinc_06_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(13,21,0)
(15,9,0)
(16,21,0)
(28,0,0)
(11,4,0)
(12,4,0)
(4,23,0)
(11,7,0)
(25,7,0)
(5,18,0)
(6,7,0)
(7,21,0)
(6,20,0)
(17,21,0)
(10,18,0)
(0,20,0)
(3,6,0)
(27,7,0)
(19,26,0)
(22,0,0)
(14,9,0)
(26,20,0)
(26,0,0)
(4,11,0)
(20,1,0)
(29,4,0)
(8,20,0)
(0,7,0)
(2,11,0)
(3,18,1)
(7,27,1)
(28,6,1)
(0,22,1)
(26,0,1)
(9,14,1)
(6,3,1)
(4,11,1)
(11,7,1)
(22,28,1)
(24,26,1)
(18,10,1)
(19,0,1)
(6,7,1)
(5,9,1)
(27,25,1)
(29,12,1)
(10,5,1)
(26,19,1)
(14,15,1)
(11,2,1)
(5,4,1)
(24,18,1)
(15,7,1)
(2,29,1)
(0,7,1)
(12,9,1)
(28,18,2)
(19,18,2)
(11,9,2)
(4,11,2)
(2,9,2)
(6,7,2)
(11,7,2)
(0,18,2)
(4,9,2)
(3,18,2)
(12,9,2)
(26,18,2)
(22,18,2)
(29,9,2)
(26,0,2)
(0,7,2)
(6,18,2)
-----------------------------------
(0,result = data)
(1,)
(2,data)
(3,data)
(4,fscanf(stdin, "%d", &data)
(5,STATIC_CONST_FIVE)
(6,++data)
(7,data = 0)
(8,result)
(9,STATIC_CONST_FIVE==5)
(10,5)
(11,&data)
(12,stdin)
(13,if(STATIC_CONST_FIVE==5)
(14,5)
(15,STATIC_CONST_FIVE)
(16,data)
(17,if(STATIC_CONST_FIVE==5)
(18,STATIC_CONST_FIVE==5)
(19,result)
(20,)
(21,)
(22,data)
(23,)
(24,RET)
(25,data)
(26,printIntLine(result)
(27,0)
(28,result)
(29,"%d")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^