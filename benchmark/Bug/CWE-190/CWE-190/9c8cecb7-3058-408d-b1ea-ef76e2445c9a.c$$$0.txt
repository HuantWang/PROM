-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_square_31_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    /* POTENTIAL FLAW: Use the maximum value for this type */
    data = INT_MAX;
    {
        int dataCopy = data;
        int data = dataCopy;
        {
            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
            int result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
23,24
24,25
24,26
26,27
26,28
28,29
29,30
31,32
32,33
32,34
34,35
34,36
36,37
37,38
39,40
39,41
40,41
41,42
41,43
43,44
43,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,21,25,27,30,33,35,38,42,44,48,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_square_31_bad(){    int data;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Use the maximum value for this type */    data = INT_MAX;    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_square_31_bad()
CWE190_Integer_Overflow__int_max_square_31_bad
{    int data;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Use the maximum value for this type */    data = INT_MAX;    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
{        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
int dataCopy = data;
int dataCopy = data;
int
dataCopy = data
dataCopy
= data
data
data
int data = dataCopy;
int data = dataCopy;
int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(3,10,0)
(0,24,0)
(2,23,0)
(9,6,0)
(24,5,0)
(6,1,0)
(16,23,0)
(17,24,0)
(20,16,0)
(12,0,0)
(19,5,0)
(11,1,0)
(10,3,0)
(13,5,0)
(25,23,0)
(8,3,0)
(15,7,0)
(21,7,0)
(3,16,0)
(14,3,0)
(16,5,0)
(26,6,0)
(23,6,0)
(5,1,0)
(18,10,0)
(0,10,0)
(7,1,0)
(10,24,0)
(23,5,0)
(4,16,0)
(25,2,1)
(4,20,1)
(23,6,1)
(20,23,1)
(10,3,1)
(3,14,1)
(2,6,1)
(8,18,1)
(0,10,1)
(26,9,1)
(3,16,1)
(15,21,1)
(22,0,1)
(18,16,1)
(14,8,1)
(9,7,1)
(16,4,1)
(6,26,1)
(7,15,1)
(23,25,1)
(12,10,1)
(0,12,1)
(16,23,1)
(3,16,2)
(23,6,2)
(10,3,2)
(0,10,2)
(16,23,2)
-----------------------------------
(0,printIntLine(result)
(1,)
(2,dataCopy)
(3,data * data)
(4,dataCopy)
(5,)
(6,data = INT_MAX)
(7,data = 0)
(8,data)
(9,data)
(10,result = data * data)
(11,data)
(12,result)
(13,dataCopy)
(14,data)
(15,0)
(16,data = dataCopy)
(17,result)
(18,result)
(19,data)
(20,data)
(21,data)
(22,RET)
(23,dataCopy = data)
(24,)
(25,data)
(26,INT_MAX)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^