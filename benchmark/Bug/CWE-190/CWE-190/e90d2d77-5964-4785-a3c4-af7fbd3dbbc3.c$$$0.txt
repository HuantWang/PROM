-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_square_08_bad()
{
    unsigned int data;
    data = 0;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
29,30
31,32
32,33
32,34
33,34
34,35
34,36
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,8,10,14,15,19,24,26,30,35,37,41,43,47,49
-----computeFrom-----
12,13
12,14
22,23
22,24
39,40
39,41
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_square_08_bad(){    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_square_08_bad()
CWE190_Integer_Overflow__unsigned_int_max_square_08_bad
{    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(22,8,0)
(2,4,0)
(15,4,0)
(11,2,0)
(17,22,0)
(18,6,0)
(22,17,0)
(10,4,0)
(13,21,0)
(9,4,0)
(14,2,0)
(23,17,0)
(20,8,0)
(21,17,0)
(16,18,0)
(0,22,0)
(22,2,0)
(21,18,0)
(17,18,0)
(5,8,0)
(8,1,0)
(7,22,0)
(22,0,1)
(20,3,1)
(14,11,1)
(21,17,1)
(2,14,1)
(8,5,1)
(12,19,1)
(23,19,1)
(13,17,1)
(12,21,1)
(3,2,1)
(19,3,1)
(17,22,1)
(21,13,1)
(19,8,1)
(22,2,1)
(22,8,1)
(0,7,1)
(5,20,1)
(7,23,1)
(8,3,2)
(17,19,2)
(0,19,2)
(17,22,2)
(5,3,2)
(21,17,2)
(7,19,2)
(20,3,2)
(13,19,2)
(22,19,2)
(22,2,2)
(21,19,2)
(22,8,2)
(23,19,2)
-----------------------------------
(0,data)
(1,)
(2,data = 0)
(3,staticReturnsTrue()
(4,)
(5,UINT_MAX)
(6,)
(7,data)
(8,data = UINT_MAX)
(9,if(staticReturnsTrue()
(10,if(staticReturnsTrue()
(11,data)
(12,RET)
(13,result)
(14,0)
(15,data)
(16,result)
(17,result = data * data)
(18,)
(19,staticReturnsTrue()
(20,data)
(21,printUnsignedLine(result)
(22,data * data)
(23,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^