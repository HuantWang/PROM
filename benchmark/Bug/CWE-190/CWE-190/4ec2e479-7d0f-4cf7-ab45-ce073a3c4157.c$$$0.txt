-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    unsigned int * dataPtr = (unsigned int *)dataVoidPtr;
    /* dereference dataPtr into data */
    unsigned int data = (*dataPtr);
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
        unsigned int result = data * 2;
        printUnsignedLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
35,37
36,37
36,38
37,38
40,41
40,42
41,42
42,43
42,44
44,45
44,46
46,47
47,48
47,49
48,49
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,38,39,43,45,49,50,54,56
-----computeFrom-----
36,37
36,38
47,48
47,49
-----guardedBy-----
38,49
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    unsigned int * dataPtr = (unsigned int *)dataVoidPtr;    /* dereference dataPtr into data */    unsigned int data = (*dataPtr);    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64b_badSink(void * dataVoidPtr)
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    unsigned int * dataPtr = (unsigned int *)dataVoidPtr;    /* dereference dataPtr into data */    unsigned int data = (*dataPtr);    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }}
unsigned int * dataPtr = (unsigned int *)dataVoidPtr;
unsigned int * dataPtr = (unsigned int *)dataVoidPtr;
unsigned int
* dataPtr = (unsigned int *)dataVoidPtr
*
dataPtr
= (unsigned int *)dataVoidPtr
(unsigned int *)dataVoidPtr
unsigned int *
unsigned int
*
*
dataVoidPtr
dataVoidPtr
unsigned int data = (*dataPtr);
unsigned int data = (*dataPtr);
unsigned int
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(0,25,0)
(26,8,0)
(11,6,0)
(21,11,0)
(2,0,0)
(24,13,0)
(0,2,0)
(0,10,0)
(5,26,0)
(12,6,0)
(6,13,0)
(6,11,0)
(9,25,0)
(14,15,0)
(22,4,0)
(18,12,0)
(25,13,0)
(8,4,0)
(7,13,0)
(1,0,0)
(8,15,0)
(15,8,0)
(20,15,0)
(15,6,0)
(16,8,0)
(26,4,0)
(11,25,0)
(23,6,0)
(25,0,0)
(3,13,0)
(19,12,0)
(19,18,1)
(8,15,1)
(26,8,1)
(11,21,1)
(15,6,1)
(11,25,1)
(14,20,1)
(12,6,1)
(0,10,1)
(26,5,1)
(17,12,1)
(5,8,1)
(1,9,1)
(17,26,1)
(21,23,1)
(0,1,1)
(0,2,1)
(25,0,1)
(20,16,1)
(6,11,1)
(12,19,1)
(16,12,1)
(23,25,1)
(18,6,1)
(15,14,1)
(11,25,2)
(8,12,2)
(0,2,2)
(15,6,2)
(15,12,2)
(20,12,2)
(0,10,2)
(25,0,2)
(16,12,2)
(26,12,2)
(5,12,2)
(12,6,2)
(6,11,2)
(8,15,2)
(14,12,2)
(26,8,2)
-----------------------------------
(0,(unsigned int *)
(1,dataVoidPtr)
(2,unsigned int *)
(3,if(data > 0)
(4,)
(5,result)
(6,data = (*dataPtr)
(7,data)
(8,result = data * 2)
(9,dataPtr)
(10,void * dataVoidPtr)
(11,*dataPtr)
(12,data > 0)
(13,)
(14,2)
(15,data * 2)
(16,result)
(17,RET)
(18,data)
(19,0)
(20,data)
(21,dataPtr)
(22,result)
(23,data)
(24,dataPtr)
(25,* dataPtr = (unsigned int *)
(26,printUnsignedLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^