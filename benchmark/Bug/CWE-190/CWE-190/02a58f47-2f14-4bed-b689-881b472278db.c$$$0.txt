-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_postinc_14_bad()
{
    short data;
    data = 0;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(globalFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
47,48
47,49
49,50
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,43,46,48,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_postinc_14_bad(){    short data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_postinc_14_bad()
CWE190_Integer_Overflow__short_rand_postinc_14_bad
{    short data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(17,22,0)
(1,4,0)
(23,24,0)
(27,17,0)
(20,11,0)
(16,18,0)
(7,18,0)
(0,5,0)
(29,10,0)
(15,9,0)
(5,19,0)
(19,2,0)
(17,27,0)
(5,15,0)
(24,15,0)
(14,15,0)
(3,5,0)
(8,26,0)
(24,19,0)
(28,11,0)
(4,5,0)
(4,19,0)
(25,26,0)
(10,26,0)
(21,19,0)
(24,10,0)
(12,26,0)
(15,17,0)
(22,17,0)
(5,10,0)
(6,10,0)
(17,15,0)
(11,28,1)
(28,20,1)
(17,27,1)
(18,16,1)
(22,14,1)
(15,17,1)
(13,18,1)
(14,11,1)
(4,1,1)
(24,15,1)
(16,7,1)
(7,15,1)
(23,18,1)
(4,5,1)
(29,6,1)
(13,4,1)
(20,10,1)
(3,0,1)
(10,29,1)
(24,10,1)
(5,3,1)
(5,10,1)
(24,23,1)
(0,24,1)
(7,11,1)
(17,22,1)
(5,15,1)
(1,5,1)
(24,10,2)
(1,18,2)
(4,5,2)
(15,17,2)
(17,11,2)
(5,15,2)
(5,18,2)
(14,11,2)
(3,18,2)
(24,18,2)
(17,22,2)
(15,11,2)
(23,18,2)
(22,11,2)
(24,15,2)
(0,18,2)
(5,10,2)
(17,27,2)
(4,18,2)
-----------------------------------
(0,result)
(1,result)
(2,)
(3,data)
(4,printIntLine(result)
(5,result = data)
(6,data)
(7,globalFive)
(8,if(globalFive==5)
(9,)
(10,data = 0)
(11,globalFive==5)
(12,data)
(13,RET)
(14,data)
(15,data = (short)
(16,5)
(17,(short)
(18,globalFive==5)
(19,)
(20,globalFive)
(21,result)
(22,RAND32()
(23,data)
(24,data++)
(25,if(globalFive==5)
(26,)
(27,short)
(28,5)
(29,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^