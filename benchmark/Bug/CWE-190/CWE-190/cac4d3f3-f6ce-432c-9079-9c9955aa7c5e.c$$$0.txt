-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_multiply_03_bad()
{
    unsigned int data;
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(5==5)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
            unsigned int result = data * 2;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
33,34
33,35
36,37
37,38
37,39
38,39
38,40
39,40
42,43
42,44
43,44
44,45
44,46
46,47
46,48
48,49
49,50
49,51
50,51
53,54
54,55
54,56
55,56
57,58
-----nextToken-----
2,4,8,10,14,15,18,19,24,27,28,31,34,35,40,41,45,47,51,52,56,58
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
33,34
33,35
38,39
38,40
49,50
49,51
-----guardedBy-----
40,51
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_multiply_03_bad(){    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(5==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_multiply_03_bad()
CWE190_Integer_Overflow__unsigned_int_rand_multiply_03_bad
{    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(5==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
5==5
5
5
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(5==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
5==5
5
5
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(18,17,0)
(9,17,0)
(0,21,0)
(31,12,0)
(2,6,0)
(12,31,0)
(20,12,0)
(15,6,0)
(7,15,0)
(8,26,0)
(10,31,0)
(16,5,0)
(5,15,0)
(6,15,0)
(31,15,0)
(3,24,0)
(11,24,0)
(30,24,0)
(23,24,0)
(12,17,0)
(28,3,0)
(27,21,0)
(6,2,0)
(5,3,0)
(4,29,0)
(1,18,0)
(32,31,0)
(22,29,0)
(31,3,0)
(14,5,0)
(15,25,0)
(18,12,0)
(19,3,0)
(6,33,0)
(33,6,0)
(19,28,1)
(13,18,1)
(16,21,1)
(10,20,1)
(31,15,1)
(7,29,1)
(5,15,1)
(6,2,1)
(2,7,1)
(21,27,1)
(22,3,1)
(4,22,1)
(1,12,1)
(32,10,1)
(31,32,1)
(12,31,1)
(13,5,1)
(15,6,1)
(31,3,1)
(18,12,1)
(5,3,1)
(27,0,1)
(0,29,1)
(3,19,1)
(29,4,1)
(6,33,1)
(0,15,1)
(14,16,1)
(13,21,1)
(18,1,1)
(20,5,1)
(5,14,1)
(10,5,2)
(31,5,2)
(1,5,2)
(31,15,2)
(15,6,2)
(6,2,2)
(7,29,2)
(12,31,2)
(6,33,2)
(5,15,2)
(20,5,2)
(31,3,2)
(5,3,2)
(2,29,2)
(32,5,2)
(16,21,2)
(15,29,2)
(5,21,2)
(14,21,2)
(12,5,2)
(18,12,2)
(18,5,2)
(6,29,2)
-----------------------------------
(0,5)
(1,result)
(2,RAND32()
(3,data = 0)
(4,5)
(5,data > 0)
(6,(unsigned int)
(7,data)
(8,if(data > 0)
(9,result)
(10,data)
(11,if(5==5)
(12,result = data * 2)
(13,RET)
(14,0)
(15,data = (unsigned int)
(16,data)
(17,)
(18,printUnsignedLine(result)
(19,0)
(20,result)
(21,5==5)
(22,5)
(23,data)
(24,)
(25,)
(26,)
(27,5)
(28,data)
(29,5==5)
(30,if(5==5)
(31,data * 2)
(32,2)
(33,unsigned int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^