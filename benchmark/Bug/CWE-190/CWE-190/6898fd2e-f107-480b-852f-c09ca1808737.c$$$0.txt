-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_postinc_06_bad()
{
    unsigned int data;
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_postinc_06_bad(){    unsigned int data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_postinc_06_bad()
CWE190_Integer_Overflow__unsigned_int_max_postinc_06_bad
{    unsigned int data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(7,8,0)
(8,26,0)
(5,26,0)
(21,3,0)
(1,3,0)
(13,8,0)
(14,12,0)
(8,3,0)
(9,17,0)
(8,17,0)
(19,8,0)
(25,0,0)
(27,17,0)
(2,18,0)
(27,3,0)
(24,27,0)
(19,17,0)
(11,26,0)
(10,18,0)
(26,18,0)
(15,19,0)
(23,0,0)
(27,26,0)
(3,4,0)
(6,12,0)
(20,18,0)
(17,22,0)
(25,23,1)
(8,3,1)
(26,5,1)
(8,13,1)
(5,11,1)
(19,15,1)
(27,26,1)
(23,3,1)
(0,25,1)
(21,12,1)
(27,24,1)
(8,26,1)
(14,26,1)
(27,3,1)
(3,1,1)
(1,21,1)
(12,6,1)
(24,0,1)
(16,0,1)
(16,19,1)
(15,8,1)
(6,14,1)
(23,12,1)
(19,8,1)
(7,27,1)
(13,7,1)
(27,3,2)
(24,0,2)
(27,26,2)
(19,8,2)
(27,0,2)
(8,26,2)
(8,0,2)
(8,3,2)
(19,0,2)
(15,0,2)
(21,12,2)
(7,0,2)
(3,12,2)
(1,12,2)
(13,0,2)
-----------------------------------
(0,STATIC_CONST_FIVE==5)
(1,UINT_MAX)
(2,if(STATIC_CONST_FIVE==5)
(3,data = UINT_MAX)
(4,)
(5,0)
(6,5)
(7,result)
(8,result = data)
(9,result)
(10,if(STATIC_CONST_FIVE==5)
(11,data)
(12,STATIC_CONST_FIVE==5)
(13,data)
(14,STATIC_CONST_FIVE)
(15,result)
(16,RET)
(17,)
(18,)
(19,printUnsignedLine(result)
(20,data)
(21,data)
(22,)
(23,STATIC_CONST_FIVE)
(24,data)
(25,5)
(26,data = 0)
(27,data++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^