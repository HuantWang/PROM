-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_square_01_bad()
{
    unsigned int data;
    data = 0;
    /* POTENTIAL FLAW: Use a random value */
    data = (unsigned int)RAND32();
    {
        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
        unsigned int result = data * data;
        printUnsignedLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
21,23
24,25
25,26
27,28
27,29
28,29
29,30
29,31
31,32
31,33
33,34
34,35
34,36
35,36
37,38
39,40
40,41
40,42
41,42
43,44
-----nextToken-----
2,4,8,10,14,15,19,22,23,26,30,32,36,38,42,44
-----computeFrom-----
12,13
12,14
17,18
17,19
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_square_01_bad(){    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a random value */    data = (unsigned int)RAND32();    {        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_square_01_bad()
CWE190_Integer_Overflow__unsigned_int_rand_square_01_bad
{    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a random value */    data = (unsigned int)RAND32();    {        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
{        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(7,1,0)
(13,4,0)
(3,1,0)
(15,2,0)
(0,9,0)
(4,1,0)
(6,4,0)
(19,10,0)
(10,19,0)
(8,6,0)
(12,10,0)
(16,2,0)
(6,9,0)
(9,2,0)
(17,3,0)
(4,10,0)
(9,6,0)
(14,6,0)
(10,12,0)
(2,1,0)
(15,9,0)
(10,4,0)
(11,3,0)
(5,15,0)
(0,4,1)
(9,6,1)
(19,13,1)
(4,10,1)
(10,12,1)
(17,11,1)
(15,9,1)
(14,8,1)
(10,19,1)
(3,17,1)
(8,0,1)
(15,5,1)
(6,14,1)
(6,4,1)
(13,3,1)
(5,9,1)
(18,15,1)
(4,10,2)
(9,6,2)
(6,4,2)
(15,9,2)
(10,12,2)
(10,19,2)
-----------------------------------
(0,result)
(1,)
(2,)
(3,data = 0)
(4,data = (unsigned int)
(5,result)
(6,data * data)
(7,data)
(8,data)
(9,result = data * data)
(10,(unsigned int)
(11,data)
(12,unsigned int)
(13,data)
(14,data)
(15,printUnsignedLine(result)
(16,result)
(17,0)
(18,RET)
(19,RAND32()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^