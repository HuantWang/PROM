-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_postinc_05_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_postinc_05_bad(){    int data;    /* Initialize data */    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_postinc_05_bad()
CWE190_Integer_Overflow__int_fscanf_postinc_05_bad
{    int data;    /* Initialize data */    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(2,22,0)
(3,1,0)
(0,16,0)
(14,22,0)
(13,22,0)
(20,22,0)
(4,1,0)
(17,15,0)
(17,22,0)
(16,18,0)
(12,13,0)
(24,15,0)
(5,2,0)
(25,6,0)
(9,1,0)
(2,16,0)
(21,15,0)
(22,1,0)
(6,13,0)
(7,13,0)
(6,16,0)
(15,10,0)
(13,16,0)
(11,17,0)
(15,17,0)
(24,23,1)
(2,5,1)
(22,20,1)
(25,13,1)
(19,15,1)
(13,22,1)
(2,22,1)
(5,19,1)
(6,25,1)
(13,12,1)
(19,23,1)
(20,14,1)
(17,22,1)
(17,11,1)
(23,22,1)
(11,21,1)
(6,13,1)
(8,19,1)
(7,2,1)
(12,7,1)
(21,24,1)
(15,17,1)
(8,6,1)
(5,19,2)
(13,22,2)
(15,17,2)
(24,23,2)
(2,22,2)
(6,13,2)
(12,19,2)
(13,19,2)
(15,23,2)
(17,23,2)
(7,19,2)
(21,23,2)
(2,19,2)
(6,19,2)
(17,22,2)
(25,19,2)
(11,23,2)
-----------------------------------
(0,result)
(1,)
(2,data++)
(3,data)
(4,if(staticTrue)
(5,data)
(6,printIntLine(result)
(7,result)
(8,RET)
(9,if(staticTrue)
(10,)
(11,data)
(12,data)
(13,result = data)
(14,data)
(15,fscanf(stdin, "%d", &data)
(16,)
(17,&data)
(18,)
(19,staticTrue)
(20,0)
(21,"%d")
(22,data = 0)
(23,staticTrue)
(24,stdin)
(25,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^