-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_multiply_06_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(STATIC_CONST_FIVE==5)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */
            int result = data * 2;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
22,24
23,24
24,25
24,26
26,27
26,28
26,29
28,29
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
35,37
35,38
35,39
36,37
38,39
40,41
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
51,53
52,53
54,55
56,57
57,58
58,59
58,60
59,60
62,63
62,64
63,64
63,65
64,65
67,68
68,69
68,70
69,70
69,71
70,71
73,74
73,75
74,75
75,76
75,77
77,78
77,79
79,80
80,81
80,82
81,82
84,85
85,86
85,87
86,87
88,89
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,30,32,37,39,41,43,45,50,53,55,60,61,65,66,71,72,76,78,82,83,87,89
-----computeFrom-----
12,13
12,14
17,18
17,19
34,35
34,36
48,49
48,50
63,64
63,65
69,70
69,71
80,81
80,82
-----guardedBy-----
39,55
71,82
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_multiply_06_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(STATIC_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_multiply_06_bad()
CWE190_Integer_Overflow__int_fgets_multiply_06_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(STATIC_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(STATIC_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */            int result = data * 2;            printIntLine(result);        }
int result = data * 2;
int result = data * 2;
int
result = data * 2
result
= data * 2
data * 2
data
data
2
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(16,47,0)
(13,10,0)
(47,46,0)
(3,15,0)
(23,17,0)
(19,9,0)
(21,38,0)
(39,22,0)
(26,9,0)
(9,19,0)
(10,0,0)
(40,0,0)
(12,41,0)
(13,48,0)
(8,0,0)
(35,19,0)
(9,48,0)
(14,0,0)
(42,47,0)
(36,9,0)
(30,2,0)
(48,25,0)
(2,20,0)
(43,48,0)
(28,46,0)
(45,33,0)
(7,31,0)
(27,15,0)
(33,34,0)
(6,2,0)
(1,31,0)
(19,31,0)
(7,19,0)
(17,15,0)
(18,10,0)
(44,7,0)
(46,47,0)
(11,10,0)
(32,13,0)
(29,22,0)
(4,38,0)
(47,15,0)
(15,2,0)
(37,13,0)
(17,48,0)
(48,17,0)
(9,10,0)
(5,47,0)
(16,15,1)
(36,26,1)
(17,15,1)
(39,29,1)
(28,47,1)
(46,47,1)
(3,27,1)
(38,4,1)
(13,48,1)
(22,39,1)
(15,3,1)
(32,37,1)
(23,43,1)
(29,10,1)
(35,13,1)
(37,38,1)
(47,15,1)
(21,48,1)
(10,18,1)
(4,21,1)
(13,32,1)
(7,44,1)
(9,48,1)
(43,46,1)
(19,9,1)
(27,22,1)
(5,16,1)
(9,36,1)
(44,19,1)
(24,38,1)
(13,10,1)
(21,33,1)
(24,7,1)
(45,46,1)
(26,35,1)
(18,11,1)
(7,19,1)
(47,42,1)
(17,23,1)
(9,10,1)
(48,17,1)
(33,45,1)
(46,28,1)
(24,13,1)
(42,5,1)
(21,22,1)
(33,46,2)
(5,22,2)
(13,10,2)
(9,10,2)
(7,13,2)
(19,13,2)
(46,22,2)
(15,22,2)
(32,38,2)
(7,19,2)
(45,46,2)
(42,22,2)
(44,13,2)
(46,47,2)
(47,22,2)
(13,38,2)
(37,38,2)
(19,9,2)
(28,22,2)
(47,15,2)
(23,46,2)
(48,46,2)
(9,48,2)
(43,46,2)
(36,13,2)
(16,22,2)
(35,13,2)
(13,48,2)
(27,22,2)
(17,15,2)
(17,46,2)
(26,13,2)
(9,13,2)
(3,22,2)
(48,17,2)
-----------------------------------
(0,)
(1,result)
(2,)
(3,"")
(4,5)
(5,CHAR_ARRAY_SIZE)
(6,inputBuffer)
(7,printIntLine(result)
(8,data)
(9,data * 2)
(10,data = 0)
(11,data)
(12,if(data > 0)
(13,data > 0)
(14,if(STATIC_CONST_FIVE==5)
(15,inputBuffer[CHAR_ARRAY_SIZE] = "")
(16,inputBuffer)
(17,atoi(inputBuffer)
(18,0)
(19,result = data * 2)
(20,)
(21,STATIC_CONST_FIVE)
(22,STATIC_CONST_FIVE==5)
(23,inputBuffer)
(24,RET)
(25,)
(26,data)
(27,inputBuffer)
(28,NULL)
(29,STATIC_CONST_FIVE)
(30,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(31,)
(32,0)
(33,printLine("fgets()
(34,)
(35,result)
(36,2)
(37,data)
(38,STATIC_CONST_FIVE==5)
(39,5)
(40,if(STATIC_CONST_FIVE==5)
(41,)
(42,stdin)
(43,data)
(44,result)
(45,"fgets()
(46,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(47,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(48,data = atoi(inputBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^