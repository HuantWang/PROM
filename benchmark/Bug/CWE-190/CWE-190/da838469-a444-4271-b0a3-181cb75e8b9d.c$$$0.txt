-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_postinc_10_bad()
{
    int64_t data;
    data = 0LL;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
27,28
30,31
31,32
33,34
33,35
34,35
36,37
37,38
37,39
37,40
38,39
39,40
40,41
42,43
43,44
43,45
44,45
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,9,11,15,16,19,24,28,29,32,35,41,45,47,50,54,56
-----computeFrom-----
13,14
13,15
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_postinc_10_bad(){    int64_t data;    data = 0LL;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_postinc_10_bad()
CWE190_Integer_Overflow__int64_t_rand_postinc_10_bad
{    int64_t data;    data = 0LL;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(14,21,0)
(10,12,0)
(11,12,0)
(13,12,0)
(21,8,0)
(20,15,0)
(3,10,0)
(22,2,0)
(18,13,0)
(10,13,0)
(13,22,0)
(0,15,0)
(21,14,0)
(17,15,0)
(8,21,0)
(4,22,0)
(23,13,0)
(22,21,0)
(21,22,0)
(16,22,0)
(16,12,0)
(12,5,0)
(6,15,0)
(19,16,0)
(21,8,1)
(9,1,1)
(16,19,1)
(19,9,1)
(21,14,1)
(22,21,1)
(10,3,1)
(7,10,1)
(3,13,1)
(13,22,1)
(1,6,1)
(13,18,1)
(18,23,1)
(9,22,1)
(7,9,1)
(16,22,1)
(10,13,1)
(4,1,1)
(8,4,1)
(23,16,1)
(22,1,2)
(16,9,2)
(18,9,2)
(21,8,2)
(21,14,2)
(16,22,2)
(23,9,2)
(10,9,2)
(22,21,2)
(21,1,2)
(19,9,2)
(8,1,2)
(13,9,2)
(3,9,2)
(13,22,2)
(4,1,2)
(10,13,2)
-----------------------------------
(0,data)
(1,globalTrue)
(2,)
(3,result)
(4,data)
(5,)
(6,L)
(7,RET)
(8,RAND64()
(9,globalTrue)
(10,printLongLongLine(result)
(11,result)
(12,)
(13,result = data)
(14,int64_t)
(15,)
(16,data++)
(17,if(globalTrue)
(18,data)
(19,data)
(20,if(globalTrue)
(21,(int64_t)
(22,data = (int64_t)
(23,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^