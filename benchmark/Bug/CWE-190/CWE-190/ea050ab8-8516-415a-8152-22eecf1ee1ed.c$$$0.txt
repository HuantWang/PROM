-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_postinc_13_bad()
{
    short data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_postinc_13_bad(){    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_postinc_13_bad()
CWE190_Integer_Overflow__short_max_postinc_13_bad
{    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(11,2,0)
(2,27,0)
(24,0,0)
(21,17,0)
(20,8,0)
(18,11,0)
(12,2,0)
(11,21,0)
(11,20,0)
(18,20,0)
(23,2,0)
(5,11,0)
(16,27,0)
(19,21,0)
(13,27,0)
(22,18,0)
(9,21,0)
(1,20,0)
(3,12,0)
(6,0,0)
(10,27,0)
(12,21,0)
(12,20,0)
(26,2,0)
(7,25,0)
(15,25,0)
(4,11,0)
(4,12,1)
(12,21,1)
(11,21,1)
(3,25,1)
(5,4,1)
(14,25,1)
(2,23,1)
(21,19,1)
(23,26,1)
(11,2,1)
(14,18,1)
(9,0,1)
(18,22,1)
(12,3,1)
(19,9,1)
(0,6,1)
(7,15,1)
(15,21,1)
(25,7,1)
(6,24,1)
(24,2,1)
(11,5,1)
(18,11,1)
(22,11,1)
(15,0,1)
(12,2,1)
(5,25,2)
(18,11,2)
(9,0,2)
(11,25,2)
(11,2,2)
(4,25,2)
(11,21,2)
(12,2,2)
(21,0,2)
(3,25,2)
(19,0,2)
(22,25,2)
(18,25,2)
(12,21,2)
(12,25,2)
-----------------------------------
(0,GLOBAL_CONST_FIVE==5)
(1,result)
(2,data = 0)
(3,data)
(4,result)
(5,data)
(6,5)
(7,5)
(8,)
(9,data)
(10,data)
(11,result = data)
(12,data++)
(13,if(GLOBAL_CONST_FIVE==5)
(14,RET)
(15,GLOBAL_CONST_FIVE)
(16,if(GLOBAL_CONST_FIVE==5)
(17,)
(18,printIntLine(result)
(19,SHRT_MAX)
(20,)
(21,data = SHRT_MAX)
(22,result)
(23,0)
(24,GLOBAL_CONST_FIVE)
(25,GLOBAL_CONST_FIVE==5)
(26,data)
(27,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^