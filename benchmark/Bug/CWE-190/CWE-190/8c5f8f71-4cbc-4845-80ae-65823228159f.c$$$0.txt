-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_preinc_06_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_preinc_06_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_preinc_06_bad()
CWE190_Integer_Overflow__int_max_preinc_06_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(2,25,0)
(12,15,0)
(10,24,0)
(20,13,0)
(8,25,0)
(21,19,0)
(25,7,0)
(14,2,0)
(18,25,0)
(24,25,0)
(26,9,0)
(24,2,0)
(19,16,0)
(1,8,0)
(23,9,0)
(15,22,0)
(8,15,0)
(2,15,0)
(0,13,0)
(8,19,0)
(4,2,0)
(11,16,0)
(3,16,0)
(17,16,0)
(6,19,0)
(5,15,0)
(2,19,0)
(8,15,1)
(26,19,1)
(27,24,1)
(20,9,1)
(2,14,1)
(14,4,1)
(27,13,1)
(23,26,1)
(1,13,1)
(2,19,1)
(24,10,1)
(13,0,1)
(12,5,1)
(8,1,1)
(4,8,1)
(15,12,1)
(8,19,1)
(20,15,1)
(10,2,1)
(5,9,1)
(9,23,1)
(0,20,1)
(24,2,1)
(2,15,1)
(21,6,1)
(19,21,1)
(10,13,2)
(8,19,2)
(15,9,2)
(8,15,2)
(2,19,2)
(4,13,2)
(8,13,2)
(1,13,2)
(24,2,2)
(2,15,2)
(24,13,2)
(14,13,2)
(2,13,2)
(5,9,2)
(12,9,2)
-----------------------------------
(0,5)
(1,data)
(2,result = data)
(3,if(STATIC_CONST_FIVE==5)
(4,result)
(5,data)
(6,data)
(7,)
(8,++data)
(9,STATIC_CONST_FIVE==5)
(10,result)
(11,if(STATIC_CONST_FIVE==5)
(12,INT_MAX)
(13,STATIC_CONST_FIVE==5)
(14,data)
(15,data = INT_MAX)
(16,)
(17,data)
(18,result)
(19,data = 0)
(20,STATIC_CONST_FIVE)
(21,0)
(22,)
(23,5)
(24,printIntLine(result)
(25,)
(26,STATIC_CONST_FIVE)
(27,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^