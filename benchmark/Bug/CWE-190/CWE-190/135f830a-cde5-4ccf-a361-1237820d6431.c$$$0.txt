-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_square_11_bad()
{
    int64_t data;
    data = 0LL;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = LLONG_MAX;
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
            int64_t result = data * data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,9,11,15,16,20,25,27,31,37,39,43,45,49,51
-----computeFrom-----
13,14
13,15
23,24
23,25
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_square_11_bad(){    int64_t data;    data = 0LL;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_max_square_11_bad()
CWE190_Integer_Overflow__int64_t_max_square_11_bad
{    int64_t data;    data = 0LL;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(10,3,0)
(12,10,0)
(19,20,0)
(5,15,0)
(0,10,0)
(7,20,0)
(6,0,0)
(16,0,0)
(17,5,0)
(9,10,0)
(21,6,0)
(2,20,0)
(14,17,0)
(0,6,0)
(17,6,0)
(4,0,0)
(11,20,0)
(6,5,0)
(18,5,0)
(1,10,1)
(8,1,1)
(16,4,1)
(6,0,1)
(13,11,1)
(0,10,1)
(21,1,1)
(17,6,1)
(1,13,1)
(0,16,1)
(9,12,1)
(8,17,1)
(12,13,1)
(14,6,1)
(4,21,1)
(10,9,1)
(17,14,1)
(0,1,2)
(12,13,2)
(17,6,2)
(17,1,2)
(4,1,2)
(21,1,2)
(10,13,2)
(6,1,2)
(14,1,2)
(6,0,2)
(9,13,2)
(0,10,2)
(16,1,2)
-----------------------------------
(0,data * data)
(1,globalReturnsTrue()
(2,if(globalReturnsTrue()
(3,)
(4,data)
(5,)
(6,result = data * data)
(7,if(globalReturnsTrue()
(8,RET)
(9,LLONG_MAX)
(10,data = LLONG_MAX)
(11,L)
(12,data)
(13,globalReturnsTrue()
(14,result)
(15,)
(16,data)
(17,printLongLongLine(result)
(18,result)
(19,data)
(20,)
(21,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^