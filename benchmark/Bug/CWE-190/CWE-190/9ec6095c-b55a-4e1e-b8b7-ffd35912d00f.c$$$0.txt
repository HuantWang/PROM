-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_add_18_bad()
{
    int64_t data;
    data = 0LL;
    goto source;
source:
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%" SCNd64, &data);
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        int64_t result = data + 1;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
19,20
20,21
22,23
22,24
24,25
24,26
25,26
26,27
26,28
27,28
29,30
29,31
31,32
32,33
32,34
33,34
36,37
37,38
37,39
38,39
40,41
-----nextToken-----
2,4,9,11,15,16,18,21,23,28,30,34,35,39,41
-----computeFrom-----
13,14
13,15
32,33
32,34
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;ProblemStatement;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_add_18_bad(){    int64_t data;    data = 0LL;    goto source;source:    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);    goto sink;sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int64_t result = data + 1;        printLongLongLine(result);    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_add_18_bad()
CWE190_Integer_Overflow__int64_t_fscanf_add_18_bad
{    int64_t data;    data = 0LL;    goto source;source:    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);    goto sink;sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int64_t result = data + 1;        printLongLongLine(result);    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
goto source;
source
source:    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int64_t result = data + 1;        printLongLongLine(result);    }
sink
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int64_t result = data + 1;        printLongLongLine(result);    }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(1,12,0)
(2,12,0)
(10,14,0)
(3,12,0)
(0,14,0)
(15,14,0)
(9,14,0)
(13,14,0)
(2,11,0)
(12,3,0)
(8,14,0)
(4,3,0)
(11,14,0)
(12,11,0)
(6,11,0)
(7,3,0)
(16,2,0)
(2,16,1)
(5,2,1)
(10,9,1)
(1,15,1)
(7,1,1)
(2,12,1)
(15,10,1)
(12,3,1)
(3,4,1)
(16,12,1)
(4,7,1)
(2,12,2)
(12,3,2)
-----------------------------------
(0,sink:)
(1,result)
(2,printLongLongLine(result)
(3,data + 1)
(4,1)
(5,RET)
(6,result)
(7,data)
(8,source:)
(9,L)
(10,goto source;)
(11,)
(12,result = data + 1)
(13,data)
(14,)
(15,goto sink;)
(16,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^