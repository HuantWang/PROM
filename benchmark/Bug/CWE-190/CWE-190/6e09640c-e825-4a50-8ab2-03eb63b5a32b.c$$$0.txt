-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_add_13_bad()
{
    char data;
    data = ' ';
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            char result = data + 1;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
40,41
40,42
42,43
42,44
44,45
45,46
45,47
46,47
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,43,47,48,52,54
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_add_13_bad(){    char data;    data = ' ';    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_add_13_bad()
CWE190_Integer_Overflow__char_fscanf_add_13_bad
{    char data;    data = ' ';    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(29,28,0)
(1,16,0)
(19,7,0)
(22,28,0)
(15,19,0)
(10,24,0)
(10,5,0)
(9,10,0)
(26,19,0)
(0,17,0)
(27,7,0)
(23,7,0)
(25,28,0)
(18,10,0)
(7,28,0)
(3,19,0)
(8,15,0)
(5,10,0)
(20,5,0)
(5,7,0)
(4,16,0)
(19,15,0)
(2,15,0)
(14,11,0)
(2,17,0)
(15,17,0)
(17,12,0)
(21,2,0)
(13,11,0)
(5,7,1)
(2,21,1)
(5,20,1)
(14,10,1)
(13,14,1)
(19,26,1)
(6,2,1)
(9,18,1)
(23,27,1)
(2,15,1)
(8,11,1)
(18,16,1)
(11,13,1)
(14,16,1)
(1,4,1)
(15,19,1)
(4,7,1)
(6,11,1)
(20,9,1)
(10,5,1)
(26,3,1)
(19,7,1)
(3,8,1)
(7,23,1)
(21,15,1)
(16,1,1)
(15,19,2)
(8,11,2)
(5,16,2)
(18,16,2)
(26,11,2)
(10,5,2)
(9,16,2)
(5,7,2)
(2,11,2)
(10,16,2)
(19,11,2)
(2,15,2)
(15,11,2)
(21,11,2)
(19,7,2)
(3,11,2)
(20,16,2)
-----------------------------------
(0,result)
(1,5)
(2,printHexCharLine(result)
(3,data)
(4,GLOBAL_CONST_FIVE)
(5,&data)
(6,RET)
(7,data = \\\' \\\')
(8,result)
(9,"%c")
(10,fscanf (stdin, "%c", &data)
(11,GLOBAL_CONST_FIVE==5)
(12,)
(13,5)
(14,GLOBAL_CONST_FIVE)
(15,result = data + 1)
(16,GLOBAL_CONST_FIVE==5)
(17,)
(18,stdin)
(19,data + 1)
(20,data)
(21,result)
(22,if(GLOBAL_CONST_FIVE==5)
(23,\\\' \\\')
(24,)
(25,data)
(26,1)
(27,data)
(28,)
(29,if(GLOBAL_CONST_FIVE==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^