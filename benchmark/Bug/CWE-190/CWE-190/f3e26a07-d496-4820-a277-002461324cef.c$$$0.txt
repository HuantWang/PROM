-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_preinc_16_bad()
{
    short data;
    data = 0;
    while(1)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
27,28
28,29
31,32
31,33
33,34
33,35
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,17,22,25,26,29,30,32,38,41,43,46,50,52,53
-----computeFrom-----
12,13
12,14
20,21
20,22
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_preinc_16_bad(){    short data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__short_rand_preinc_16_bad()
CWE190_Integer_Overflow__short_rand_preinc_16_bad
{    short data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }        break;    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();        break;    }
1
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();        break;    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
break;
while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
break;
-----joern-----
(6,5,0)
(3,16,0)
(18,2,0)
(24,21,0)
(14,27,0)
(5,10,0)
(10,5,0)
(1,2,0)
(10,9,0)
(25,2,0)
(4,21,0)
(23,5,0)
(21,2,0)
(24,5,0)
(23,27,0)
(11,27,0)
(9,10,0)
(24,27,0)
(10,26,0)
(13,21,0)
(8,24,0)
(20,11,0)
(7,24,0)
(11,24,0)
(12,19,0)
(17,23,0)
(5,16,0)
(27,19,0)
(23,21,0)
(26,10,0)
(17,0,1)
(23,5,1)
(24,5,1)
(6,22,1)
(11,20,1)
(24,21,1)
(0,22,1)
(4,13,1)
(7,23,1)
(0,3,1)
(23,21,1)
(21,4,1)
(10,9,1)
(5,10,1)
(11,24,1)
(26,6,1)
(24,8,1)
(8,7,1)
(3,5,1)
(23,17,1)
(22,21,1)
(20,24,1)
(12,11,1)
(10,26,1)
(15,12,1)
(15,0,1)
(3,22,2)
(7,0,2)
(5,22,2)
(12,0,2)
(10,9,2)
(10,22,2)
(6,22,2)
(24,5,2)
(26,22,2)
(24,0,2)
(17,0,2)
(23,21,2)
(11,0,2)
(8,0,2)
(5,10,2)
(24,21,2)
(20,0,2)
(11,24,2)
(10,26,2)
(23,5,2)
(23,0,2)
-----------------------------------
(0,1)
(1,data)
(2,)
(3,break;)
(4,0)
(5,data = (short)
(6,data)
(7,result)
(8,data)
(9,short)
(10,(short)
(11,printIntLine(result)
(12,break;)
(13,data)
(14,result)
(15,RET)
(16,)
(17,data)
(18,while(1)
(19,)
(20,result)
(21,data = 0)
(22,1)
(23,++data)
(24,result = data)
(25,while(1)
(26,RAND32()
(27,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^