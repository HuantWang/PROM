-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_preinc_05_bad()
{
    short data;
    data = 0;
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,39,42,44,47,51,53
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_preinc_05_bad(){    short data;    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_preinc_05_bad()
CWE190_Integer_Overflow__short_rand_preinc_05_bad
{    short data;    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(15,0,0)
(23,12,0)
(0,24,0)
(7,12,0)
(2,12,0)
(18,19,0)
(19,22,0)
(13,3,0)
(3,19,0)
(0,3,0)
(4,22,0)
(21,24,0)
(21,14,0)
(21,19,0)
(22,4,0)
(20,22,0)
(22,20,0)
(5,3,0)
(3,24,0)
(14,12,0)
(8,21,0)
(22,19,0)
(16,14,0)
(3,14,0)
(24,10,0)
(25,14,0)
(19,17,0)
(1,24,0)
(15,3,1)
(22,20,1)
(21,14,1)
(9,0,1)
(3,13,1)
(3,19,1)
(22,4,1)
(0,15,1)
(18,6,1)
(9,11,1)
(21,8,1)
(14,25,1)
(3,14,1)
(8,11,1)
(25,16,1)
(0,3,1)
(19,22,1)
(11,19,1)
(6,14,1)
(11,6,1)
(5,21,1)
(4,18,1)
(13,5,1)
(21,19,1)
(21,11,2)
(22,4,2)
(19,22,2)
(0,3,2)
(3,11,2)
(15,11,2)
(3,19,2)
(19,6,2)
(8,11,2)
(22,20,2)
(22,6,2)
(21,14,2)
(0,11,2)
(13,11,2)
(5,11,2)
(4,6,2)
(18,6,2)
(21,19,2)
(3,14,2)
-----------------------------------
(0,printIntLine(result)
(1,result)
(2,data)
(3,result = data)
(4,RAND32()
(5,result)
(6,staticTrue)
(7,if(staticTrue)
(8,data)
(9,RET)
(10,)
(11,staticTrue)
(12,)
(13,data)
(14,data = 0)
(15,result)
(16,data)
(17,)
(18,data)
(19,data = (short)
(20,short)
(21,++data)
(22,(short)
(23,if(staticTrue)
(24,)
(25,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^