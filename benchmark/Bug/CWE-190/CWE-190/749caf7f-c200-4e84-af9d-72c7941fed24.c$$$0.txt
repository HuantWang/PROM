-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_square_01_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    /* POTENTIAL FLAW: Use the maximum value for this type */
    data = INT_MAX;
    {
        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
        int result = data * data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
22,23
22,24
23,24
24,25
24,26
26,27
26,28
28,29
29,30
29,31
30,31
32,33
34,35
35,36
35,37
36,37
38,39
-----nextToken-----
2,4,8,10,14,15,19,21,25,27,31,33,37,39
-----computeFrom-----
12,13
12,14
17,18
17,19
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_square_01_bad(){    int data;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Use the maximum value for this type */    data = INT_MAX;    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_max_square_01_bad()
CWE190_Integer_Overflow__int_max_square_01_bad
{    int data;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Use the maximum value for this type */    data = INT_MAX;    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
{        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(10,14,0)
(11,17,0)
(0,6,0)
(16,2,0)
(6,17,0)
(5,8,0)
(7,13,0)
(8,2,0)
(3,13,0)
(13,2,0)
(14,11,0)
(14,8,0)
(15,14,0)
(12,11,0)
(6,11,0)
(9,8,0)
(1,17,0)
(17,2,0)
(11,14,0)
(9,13,1)
(8,5,1)
(14,8,1)
(12,8,1)
(3,7,1)
(0,11,1)
(6,11,1)
(4,6,1)
(10,15,1)
(13,3,1)
(6,0,1)
(14,10,1)
(5,9,1)
(11,14,1)
(15,12,1)
(6,11,2)
(11,14,2)
(14,8,2)
-----------------------------------
(0,result)
(1,result)
(2,)
(3,0)
(4,RET)
(5,INT_MAX)
(6,printIntLine(result)
(7,data)
(8,data = INT_MAX)
(9,data)
(10,data)
(11,result = data * data)
(12,result)
(13,data = 0)
(14,data * data)
(15,data)
(16,data)
(17,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^