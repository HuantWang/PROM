-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_postinc_03_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
31,32
32,33
32,34
32,35
33,34
34,35
35,36
37,38
38,39
38,40
40,41
40,42
42,43
43,44
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,29,30,36,39,41,44,48,50
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
28,29
28,30
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_postinc_03_bad(){    int data;    /* Initialize data */    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_postinc_03_bad()
CWE190_Integer_Overflow__int_max_postinc_03_bad
{    int data;    /* Initialize data */    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
5==5
5
5
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(19,11,0)
(10,11,0)
(26,11,0)
(5,12,0)
(3,13,0)
(13,2,0)
(2,9,0)
(8,23,0)
(27,15,0)
(7,1,0)
(20,1,0)
(18,23,0)
(17,12,0)
(21,2,0)
(25,13,0)
(16,15,0)
(0,1,0)
(12,1,0)
(24,26,0)
(13,12,0)
(13,11,0)
(11,6,0)
(4,3,0)
(26,2,0)
(14,13,0)
(26,12,0)
(3,2,0)
(3,4,1)
(5,17,1)
(25,26,1)
(12,5,1)
(22,3,1)
(23,8,1)
(24,23,1)
(19,10,1)
(10,15,1)
(27,16,1)
(18,11,1)
(14,25,1)
(26,12,1)
(18,15,1)
(8,18,1)
(22,23,1)
(3,13,1)
(13,12,1)
(16,12,1)
(26,24,1)
(11,19,1)
(15,27,1)
(13,14,1)
(4,13,1)
(26,11,1)
(13,11,1)
(14,23,2)
(26,12,2)
(13,23,2)
(4,23,2)
(26,23,2)
(13,12,2)
(3,13,2)
(24,23,2)
(13,11,2)
(3,23,2)
(11,15,2)
(19,15,2)
(26,11,2)
(10,15,2)
(25,23,2)
-----------------------------------
(0,if(5==5)
(1,)
(2,)
(3,printIntLine(result)
(4,result)
(5,0)
(6,)
(7,data)
(8,5)
(9,)
(10,data)
(11,data = INT_MAX)
(12,data = 0)
(13,result = data)
(14,data)
(15,5==5)
(16,5)
(17,data)
(18,5)
(19,INT_MAX)
(20,if(5==5)
(21,result)
(22,RET)
(23,5==5)
(24,data)
(25,result)
(26,data++)
(27,5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^