-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_postinc_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = 0;
    {
        int data = *dataPtr1;
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
51,52
53,54
54,55
54,56
55,56
56,57
58,59
60,61
60,62
61,62
62,63
62,64
64,65
64,66
66,67
67,68
68,69
70,71
70,72
70,73
71,72
72,73
73,74
75,76
76,77
76,78
78,79
78,80
80,81
81,82
83,84
84,85
84,86
85,86
87,88
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,52,57,59,63,65,69,74,77,79,82,86,88
-----computeFrom-----
32,33
32,34
47,48
47,49
54,55
54,56
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_postinc_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_rand_postinc_32_bad()
CWE190_Integer_Overflow__int_rand_postinc_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(31,2,0)
(21,37,0)
(11,37,0)
(39,41,0)
(32,15,0)
(41,34,0)
(38,37,0)
(28,15,0)
(24,37,0)
(18,35,0)
(17,35,0)
(7,1,0)
(2,11,0)
(6,23,0)
(10,32,0)
(23,1,0)
(34,16,0)
(7,34,0)
(39,34,0)
(30,41,0)
(13,42,0)
(1,23,0)
(5,34,0)
(1,16,0)
(20,24,0)
(0,1,0)
(15,24,0)
(40,31,0)
(4,2,0)
(20,31,0)
(23,29,0)
(22,29,0)
(29,37,0)
(42,24,0)
(29,9,0)
(32,11,0)
(15,32,0)
(36,9,0)
(9,29,0)
(24,42,0)
(26,24,0)
(14,16,0)
(19,37,0)
(43,20,0)
(27,39,0)
(35,37,0)
(33,2,0)
(41,1,0)
(12,7,0)
(8,41,0)
(31,11,0)
(25,11,0)
(16,37,0)
(2,4,0)
(33,32,1)
(40,20,1)
(30,8,1)
(20,24,1)
(6,0,1)
(22,24,1)
(39,41,1)
(15,28,1)
(0,31,1)
(42,13,1)
(28,10,1)
(7,12,1)
(3,39,1)
(2,4,1)
(23,6,1)
(18,17,1)
(29,9,1)
(7,1,1)
(41,1,1)
(43,2,1)
(17,29,1)
(9,36,1)
(24,42,1)
(1,23,1)
(8,7,1)
(4,33,1)
(15,24,1)
(31,40,1)
(36,22,1)
(31,2,1)
(23,29,1)
(10,35,1)
(12,1,1)
(20,43,1)
(32,15,1)
(41,30,1)
(35,18,1)
(39,27,1)
(27,41,1)
(13,26,1)
(7,1,2)
(39,41,2)
(31,2,2)
(2,4,2)
(23,29,2)
(29,9,2)
(15,24,2)
(20,24,2)
(41,1,2)
(24,42,2)
(32,15,2)
(1,23,2)
-----------------------------------
(0,data)
(1,data = *dataPtr2)
(2,data = RAND32()
(3,RET)
(4,RAND32()
(5,result)
(6,dataPtr2)
(7,data++)
(8,result)
(9,&data)
(10,data)
(11,)
(12,data)
(13,data)
(14,data)
(15,*dataPtr1)
(16,)
(17,data)
(18,0)
(19,dataPtr2)
(20,*dataPtr1)
(21,dataPtr1)
(22,dataPtr2)
(23,*dataPtr2)
(24,*dataPtr1 = &data)
(25,data)
(26,dataPtr1)
(27,result)
(28,dataPtr1)
(29,*dataPtr2 = &data)
(30,data)
(31,*dataPtr1 = data)
(32,data = *dataPtr1)
(33,data)
(34,)
(35,data = 0)
(36,data)
(37,)
(38,data)
(39,printIntLine(result)
(40,data)
(41,result = data)
(42,&data)
(43,dataPtr1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^