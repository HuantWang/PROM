-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_preinc_10_bad()
{
    char data;
    data = ' ';
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            char result = data;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_preinc_10_bad(){    char data;    data = ' ';    if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_preinc_10_bad()
CWE190_Integer_Overflow__char_fscanf_preinc_10_bad
{    char data;    data = ' ';    if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(20,17,0)
(3,12,0)
(13,24,0)
(4,5,0)
(12,20,0)
(22,18,0)
(0,20,0)
(9,8,0)
(12,17,0)
(13,4,0)
(11,4,0)
(14,24,0)
(23,24,0)
(1,13,0)
(25,17,0)
(8,17,0)
(6,20,0)
(7,18,0)
(8,24,0)
(15,18,0)
(4,13,0)
(20,24,0)
(24,18,0)
(21,4,0)
(17,10,0)
(16,4,1)
(3,20,1)
(13,24,1)
(12,20,1)
(6,8,1)
(16,19,1)
(11,21,1)
(21,19,1)
(8,9,1)
(20,0,1)
(12,3,1)
(1,11,1)
(4,13,1)
(23,14,1)
(20,24,1)
(2,16,1)
(19,24,1)
(2,12,1)
(9,16,1)
(24,23,1)
(0,6,1)
(8,24,1)
(13,1,1)
(1,19,2)
(9,16,2)
(6,16,2)
(3,16,2)
(13,24,2)
(12,16,2)
(20,16,2)
(0,16,2)
(11,19,2)
(8,24,2)
(8,16,2)
(4,13,2)
(21,19,2)
(20,24,2)
(4,19,2)
(12,20,2)
(13,19,2)
-----------------------------------
(0,data)
(1,data)
(2,RET)
(3,result)
(4,fscanf (stdin, "%c", &data)
(5,)
(6,result)
(7,data)
(8,++data)
(9,data)
(10,)
(11,"%c")
(12,printHexCharLine(result)
(13,&data)
(14,data)
(15,if(globalTrue)
(16,globalTrue)
(17,)
(18,)
(19,globalTrue)
(20,result = data)
(21,stdin)
(22,if(globalTrue)
(23,\\\' \\\')
(24,data = \\\' \\\')
(25,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^