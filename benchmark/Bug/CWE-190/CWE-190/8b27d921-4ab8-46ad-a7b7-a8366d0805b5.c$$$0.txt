-----label-----
1
-----code-----
static void badSink()
{
    char data = CWE190_Integer_Overflow__char_fscanf_add_45_badData;
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        char result = data + 1;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
15,16
16,17
16,18
18,19
18,20
20,21
21,22
21,23
22,23
25,26
26,27
26,28
27,28
29,30
-----nextToken-----
2,4,8,10,13,17,19,23,24,28,30
-----computeFrom-----
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    char data = CWE190_Integer_Overflow__char_fscanf_add_45_badData;    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
static void
badSink()
badSink
{    char data = CWE190_Integer_Overflow__char_fscanf_add_45_badData;    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
char data = CWE190_Integer_Overflow__char_fscanf_add_45_badData;
char data = CWE190_Integer_Overflow__char_fscanf_add_45_badData;
char
data = CWE190_Integer_Overflow__char_fscanf_add_45_badData
data
= CWE190_Integer_Overflow__char_fscanf_add_45_badData
CWE190_Integer_Overflow__char_fscanf_add_45_badData
CWE190_Integer_Overflow__char_fscanf_add_45_badData
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(13,2,0)
(9,5,0)
(12,9,0)
(10,9,0)
(2,7,0)
(4,2,0)
(1,8,0)
(10,5,0)
(0,8,0)
(9,8,0)
(5,7,0)
(8,2,0)
(6,10,0)
(11,5,0)
(3,7,0)
(8,9,0)
(1,0,1)
(10,9,1)
(8,1,1)
(12,2,1)
(14,10,1)
(6,9,1)
(4,13,1)
(9,8,1)
(8,2,1)
(10,6,1)
(2,4,1)
(0,12,1)
(8,2,2)
(10,9,2)
(9,8,2)
-----------------------------------
(0,data)
(1,1)
(2,data = CWE190_Integer_Overflow__char_fscanf_add_45_badData)
(3,data)
(4,CWE190_Integer_Overflow__char_fscanf_add_45_badData)
(5,)
(6,result)
(7,)
(8,data + 1)
(9,result = data + 1)
(10,printHexCharLine(result)
(11,result)
(12,result)
(13,data)
(14,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^