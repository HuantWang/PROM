-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_square_18_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    goto source;
source:
    /* POTENTIAL FLAW: Use the maximum value for this type */
    data = INT_MAX;
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
        int result = data * data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
22,23
24,25
26,27
28,29
28,30
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,27,29,33,35,39,41,45,47
-----computeFrom-----
12,13
12,14
21,22
21,23
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_square_18_bad(){    int data;    /* Initialize data */    data = 0;    goto source;source:    /* POTENTIAL FLAW: Use the maximum value for this type */    data = INT_MAX;    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_max_square_18_bad()
CWE190_Integer_Overflow__int_max_square_18_bad
{    int data;    /* Initialize data */    data = 0;    goto source;source:    /* POTENTIAL FLAW: Use the maximum value for this type */    data = INT_MAX;    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    /* POTENTIAL FLAW: Use the maximum value for this type */    data = INT_MAX;
source
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }
sink
{        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(14,5,0)
(0,18,0)
(18,11,0)
(1,16,0)
(0,11,0)
(10,20,0)
(5,4,0)
(2,5,0)
(21,16,0)
(9,4,0)
(8,0,0)
(5,18,0)
(15,16,0)
(20,16,0)
(13,4,0)
(3,18,0)
(18,5,0)
(11,16,0)
(12,11,0)
(17,16,0)
(4,16,0)
(7,20,0)
(6,16,0)
(5,14,1)
(7,10,1)
(0,18,1)
(9,15,1)
(0,8,1)
(4,13,1)
(3,1,1)
(5,4,1)
(18,5,1)
(14,2,1)
(13,9,1)
(2,3,1)
(19,0,1)
(20,7,1)
(15,20,1)
(1,4,1)
(8,18,1)
(0,18,2)
(18,5,2)
(5,4,2)
-----------------------------------
(0,printIntLine(result)
(1,goto sink;)
(2,data)
(3,result)
(4,data = INT_MAX)
(5,data * data)
(6,sink:)
(7,0)
(8,result)
(9,data)
(10,data)
(11,)
(12,result)
(13,INT_MAX)
(14,data)
(15,goto source;)
(16,)
(17,source:)
(18,result = data * data)
(19,RET)
(20,data = 0)
(21,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^