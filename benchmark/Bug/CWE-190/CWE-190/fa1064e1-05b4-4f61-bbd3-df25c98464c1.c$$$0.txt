-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_postinc_12_bad()
{
    int64_t data;
    data = 0LL;
    if(globalReturnsTrueOrFalse())
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = LLONG_MAX;
    }
    else
    {
        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */
        data = 2;
    }
    if(globalReturnsTrueOrFalse())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
    else
    {
        /* FIX: Add a check to prevent an overflow from occurring */
        if (data < LLONG_MAX)
        {
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
        else
        {
            printLine("data value is too large to perform arithmetic safely.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
17,20
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
28,29
29,30
30,31
30,32
31,32
34,35
34,36
34,37
35,36
36,37
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
46,47
48,49
48,50
50,51
51,52
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
60,63
61,62
61,63
62,63
64,65
66,67
66,68
66,69
67,68
68,69
69,70
71,72
72,73
72,74
73,74
75,76
75,77
77,78
78,79
80,81
81,82
81,83
82,83
84,85
86,87
87,88
88,89
88,90
89,90
-----nextToken-----
2,4,9,11,15,16,20,25,27,32,33,37,43,47,49,52,56,58,63,65,70,74,76,79,83,85,90,91
-----computeFrom-----
13,14
13,15
23,24
23,25
30,31
30,32
61,62
61,63
-----guardedBy-----
63,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_postinc_12_bad(){    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            data++;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
void
CWE190_Integer_Overflow__int64_t_max_postinc_12_bad()
CWE190_Integer_Overflow__int64_t_max_postinc_12_bad
{    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            data++;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
{        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
data = 2;
data = 2
data
data
2
if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            data++;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            data++;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
if (data < LLONG_MAX)        {            data++;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }
data < LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
{            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{            printLine("data value is too large to perform arithmetic safely.");        }
printLine("data value is too large to perform arithmetic safely.");
printLine("data value is too large to perform arithmetic safely.")
printLine
printLine
"data value is too large to perform arithmetic safely."
-----joern-----
(32,15,0)
(16,31,0)
(17,2,0)
(37,2,0)
(29,30,0)
(1,38,0)
(10,19,0)
(39,17,0)
(40,19,0)
(31,27,0)
(29,2,0)
(22,23,0)
(26,2,0)
(23,21,0)
(34,19,0)
(13,31,0)
(0,38,0)
(41,30,0)
(31,30,0)
(4,29,0)
(18,34,0)
(29,19,0)
(34,27,0)
(37,19,0)
(6,27,0)
(37,30,0)
(33,40,0)
(9,37,0)
(19,42,0)
(31,19,0)
(8,19,0)
(17,37,0)
(40,30,0)
(36,31,0)
(34,30,0)
(16,27,0)
(14,16,0)
(2,35,0)
(12,37,0)
(11,38,0)
(30,20,0)
(5,40,0)
(7,38,0)
(24,30,0)
(30,41,1)
(28,11,1)
(37,12,1)
(40,5,1)
(4,25,1)
(37,19,1)
(29,4,1)
(9,29,1)
(25,19,1)
(18,40,1)
(8,10,1)
(31,30,1)
(24,28,1)
(22,40,1)
(12,9,1)
(3,17,1)
(19,8,1)
(34,18,1)
(16,14,1)
(40,19,1)
(34,30,1)
(34,19,1)
(33,25,1)
(3,23,1)
(40,30,1)
(31,13,1)
(41,24,1)
(29,30,1)
(17,37,1)
(5,33,1)
(23,22,1)
(13,36,1)
(39,37,1)
(36,34,1)
(10,28,1)
(29,19,1)
(3,16,1)
(14,31,1)
(16,31,1)
(37,30,1)
(31,19,1)
(25,30,1)
(17,39,1)
(5,25,2)
(29,25,2)
(37,30,2)
(34,19,2)
(34,30,2)
(24,28,2)
(37,25,2)
(33,25,2)
(36,40,2)
(9,25,2)
(29,30,2)
(4,25,2)
(18,40,2)
(14,40,2)
(31,19,2)
(31,30,2)
(22,40,2)
(12,25,2)
(16,31,2)
(37,19,2)
(40,25,2)
(10,28,2)
(13,40,2)
(31,40,2)
(40,19,2)
(29,19,2)
(8,28,2)
(30,28,2)
(40,30,2)
(41,28,2)
(16,40,2)
(19,28,2)
(17,25,2)
(17,37,2)
(23,40,2)
(39,25,2)
(34,40,2)
-----------------------------------
(0,if(globalReturnsTrueOrFalse()
(1,data)
(2,)
(3,RET)
(4,data)
(5,LLONG_MAX)
(6,result)
(7,if(globalReturnsTrueOrFalse()
(8,2)
(9,result)
(10,data)
(11,L)
(12,data)
(13,data)
(14,result)
(15,)
(16,printLongLongLine(result)
(17,printLongLongLine(result)
(18,data)
(19,data = 2)
(20,)
(21,)
(22,"data value is too large to perform arithmetic safely.")
(23,printLine("data value is too large to perform arithmetic safely.")
(24,data)
(25,globalReturnsTrueOrFalse()
(26,result)
(27,)
(28,globalReturnsTrueOrFalse()
(29,data++)
(30,data = LLONG_MAX)
(31,result = data)
(32,if (data < LLONG_MAX)
(33,data)
(34,data++)
(35,)
(36,result)
(37,result = data)
(38,)
(39,result)
(40,data < LLONG_MAX)
(41,LLONG_MAX)
(42,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^