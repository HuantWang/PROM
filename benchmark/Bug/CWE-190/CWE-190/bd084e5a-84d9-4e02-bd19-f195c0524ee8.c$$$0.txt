-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_rand_add_18_bad()
{
    char data;
    data = ' ';
    goto source;
source:
    /* POTENTIAL FLAW: Use a random value */
    data = (char)RAND32();
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        char result = data + 1;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
33,34
33,35
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,17,19,23,26,27,30,32,34,38,40,44,45,49,51
-----computeFrom-----
12,13
12,14
21,22
21,23
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_rand_add_18_bad(){    char data;    data = ' ';    goto source;source:    /* POTENTIAL FLAW: Use a random value */    data = (char)RAND32();    goto sink;sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_rand_add_18_bad()
CWE190_Integer_Overflow__char_rand_add_18_bad
{    char data;    data = ' ';    goto source;source:    /* POTENTIAL FLAW: Use a random value */    data = (char)RAND32();    goto sink;sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
goto source;
source
source:    /* POTENTIAL FLAW: Use a random value */    data = (char)RAND32();
source
data = (char)RAND32();
data = (char)RAND32()
data
data
(char)RAND32()
char
char

RAND32()
RAND32
RAND32
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }
sink
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(0,20,0)
(15,20,0)
(14,2,0)
(4,15,0)
(17,15,0)
(3,9,0)
(22,2,0)
(13,2,0)
(7,2,0)
(16,10,0)
(1,9,0)
(9,2,0)
(3,16,0)
(18,2,0)
(21,16,0)
(19,2,0)
(16,9,0)
(15,17,0)
(8,10,0)
(23,13,0)
(20,15,0)
(12,10,0)
(11,3,0)
(5,13,0)
(10,20,0)
(10,16,0)
(15,4,0)
(20,2,0)
(10,20,1)
(10,8,1)
(20,15,1)
(0,19,1)
(5,23,1)
(17,0,1)
(11,16,1)
(13,5,1)
(3,16,1)
(19,13,1)
(21,18,1)
(15,4,1)
(6,3,1)
(18,20,1)
(16,10,1)
(12,21,1)
(8,12,1)
(15,17,1)
(3,11,1)
(16,10,2)
(15,17,2)
(20,15,2)
(10,20,2)
(15,4,2)
(3,16,2)
-----------------------------------
(0,data)
(1,result)
(2,)
(3,printHexCharLine(result)
(4,char)
(5,' ')
(6,RET)
(7,sink:)
(8,1)
(9,)
(10,data + 1)
(11,result)
(12,data)
(13,data = ' ')
(14,source:)
(15,(char)
(16,result = data + 1)
(17,RAND32()
(18,goto sink;)
(19,goto source;)
(20,data = (char)
(21,result)
(22,data)
(23,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^