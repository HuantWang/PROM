-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_square_02_bad()
{
    int64_t data;
    data = 0LL;
    if(1)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = LLONG_MAX;
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
            int64_t result = data * data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
28,29
29,30
29,31
30,31
31,32
31,33
32,33
34,35
34,36
36,37
37,38
37,39
38,39
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,9,11,15,16,18,23,25,27,33,35,39,41,45,47
-----computeFrom-----
13,14
13,15
21,22
21,23
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_square_02_bad(){    int64_t data;    data = 0LL;    if(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_max_square_02_bad()
CWE190_Integer_Overflow__int64_t_max_square_02_bad
{    int64_t data;    data = 0LL;    if(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
1
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(13,7,0)
(18,7,0)
(17,7,0)
(4,20,0)
(14,12,0)
(3,4,0)
(11,12,0)
(0,4,0)
(8,18,0)
(13,10,0)
(16,12,0)
(19,12,0)
(7,18,0)
(18,4,0)
(21,13,0)
(7,10,0)
(1,18,0)
(10,15,0)
(6,10,0)
(18,4,1)
(5,14,1)
(7,18,1)
(2,5,1)
(1,17,1)
(21,7,1)
(3,5,1)
(8,1,1)
(13,21,1)
(17,2,1)
(9,13,1)
(18,8,1)
(4,0,1)
(9,2,1)
(13,7,1)
(2,4,1)
(0,3,1)
(21,2,2)
(4,5,2)
(17,2,2)
(1,2,2)
(13,2,2)
(7,2,2)
(8,2,2)
(3,5,2)
(13,7,2)
(18,4,2)
(0,5,2)
(18,2,2)
(7,18,2)
-----------------------------------
(0,LLONG_MAX)
(1,data)
(2,1)
(3,data)
(4,data = LLONG_MAX)
(5,1)
(6,result)
(7,result = data * data)
(8,data)
(9,RET)
(10,)
(11,if(1)
(12,)
(13,printLongLongLine(result)
(14,L)
(15,)
(16,if(1)
(17,result)
(18,data * data)
(19,data)
(20,)
(21,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^