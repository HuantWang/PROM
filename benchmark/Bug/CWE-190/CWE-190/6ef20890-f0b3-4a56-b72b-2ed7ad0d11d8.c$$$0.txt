-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_postinc_31_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    {
        int dataCopy = data;
        int data = dataCopy;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
18,20
20,21
20,22
20,23
22,23
23,24
25,26
27,28
27,29
27,30
28,29
28,30
29,30
29,31
29,32
29,33
30,31
32,33
34,35
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
56,57
56,58
56,59
57,58
58,59
58,60
60,61
60,62
62,63
63,64
65,66
66,67
66,68
68,69
68,70
70,71
71,72
73,74
73,75
73,76
74,75
75,76
76,77
78,79
79,80
79,81
81,82
81,83
83,84
84,85
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,14,15,19,21,24,26,31,33,35,37,39,44,47,49,54,55,59,61,64,67,69,72,77,80,82,85,89,91
-----computeFrom-----
12,13
12,14
28,29
28,30
42,43
42,44
-----guardedBy-----
33,49
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_postinc_31_bad(){    int data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_postinc_31_bad()
CWE190_Integer_Overflow__int_fgets_postinc_31_bad
{    int data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
int dataCopy = data;
int dataCopy = data;
int
dataCopy = data
dataCopy
= data
data
data
int data = dataCopy;
int data = dataCopy;
int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(25,9,0)
(33,43,0)
(29,40,0)
(11,12,0)
(15,4,0)
(9,40,0)
(1,15,0)
(30,41,0)
(20,41,0)
(32,43,0)
(37,20,0)
(14,29,0)
(9,1,0)
(29,1,0)
(26,40,0)
(15,30,0)
(17,10,0)
(3,12,0)
(5,30,0)
(38,42,0)
(24,12,0)
(2,20,0)
(22,4,0)
(4,33,0)
(18,43,0)
(33,4,0)
(7,25,0)
(6,10,0)
(12,11,0)
(39,9,0)
(8,11,0)
(16,30,0)
(23,1,0)
(19,38,0)
(35,12,0)
(1,10,0)
(0,15,0)
(15,10,0)
(27,41,0)
(28,33,0)
(34,9,0)
(4,36,0)
(40,10,0)
(25,40,0)
(13,15,0)
(31,1,0)
(10,41,0)
(43,20,0)
(12,43,0)
(21,25,1)
(11,12,1)
(24,43,1)
(15,30,1)
(31,23,1)
(8,12,1)
(9,1,1)
(22,11,1)
(23,15,1)
(34,39,1)
(13,38,1)
(28,22,1)
(33,28,1)
(0,13,1)
(29,14,1)
(11,8,1)
(39,29,1)
(15,4,1)
(30,16,1)
(3,35,1)
(12,3,1)
(29,1,1)
(14,1,1)
(25,9,1)
(4,33,1)
(38,19,1)
(12,43,1)
(15,0,1)
(16,5,1)
(33,43,1)
(9,34,1)
(32,18,1)
(25,7,1)
(19,11,1)
(18,30,1)
(1,15,1)
(35,24,1)
(43,32,1)
(1,31,1)
(7,9,1)
(13,4,1)
(12,43,2)
(1,15,2)
(29,1,2)
(4,11,2)
(33,43,2)
(15,4,2)
(22,11,2)
(38,11,2)
(9,1,2)
(25,9,2)
(15,30,2)
(28,11,2)
(33,11,2)
(4,33,2)
(11,12,2)
(19,11,2)
-----------------------------------
(0,data)
(1,data = dataCopy)
(2,inputBuffer)
(3,stdin)
(4,data = atoi(inputBuffer)
(5,data)
(6,dataCopy)
(7,result)
(8,NULL)
(9,result = data)
(10,)
(11,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(12,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(13,dataCopy)
(14,data)
(15,dataCopy = data)
(16,0)
(17,data)
(18,inputBuffer)
(19,"fgets()
(20,)
(21,RET)
(22,data)
(23,data)
(24,inputBuffer)
(25,printIntLine(result)
(26,result)
(27,data)
(28,inputBuffer)
(29,data++)
(30,data = 0)
(31,dataCopy)
(32,"")
(33,atoi(inputBuffer)
(34,data)
(35,CHAR_ARRAY_SIZE)
(36,)
(37,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(38,printLine("fgets()
(39,result)
(40,)
(41,)
(42,)
(43,inputBuffer[CHAR_ARRAY_SIZE] = "")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^