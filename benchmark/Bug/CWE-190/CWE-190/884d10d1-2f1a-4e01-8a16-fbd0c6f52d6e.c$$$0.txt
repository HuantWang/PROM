-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_square_13_bad()
{
    short data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */
            short result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
40,41
40,42
42,43
42,44
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,43,47,49,53,55
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_square_13_bad(){    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_square_13_bad()
CWE190_Integer_Overflow__short_fscanf_square_13_bad
{    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }
short result = data * data;
short result = data * data;
short
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(8,19,0)
(15,11,0)
(17,4,0)
(25,11,0)
(12,22,0)
(9,19,0)
(4,29,0)
(6,7,0)
(10,23,0)
(2,19,0)
(16,0,0)
(20,11,0)
(7,5,0)
(13,29,0)
(4,2,0)
(7,1,0)
(14,22,0)
(23,11,0)
(2,29,0)
(21,7,0)
(18,2,0)
(26,5,0)
(3,23,0)
(5,23,0)
(29,27,0)
(19,2,0)
(19,23,0)
(24,0,0)
(5,7,0)
(19,8,1)
(14,23,1)
(7,5,1)
(22,12,1)
(5,26,1)
(28,4,1)
(8,9,1)
(24,16,1)
(17,2,1)
(16,22,1)
(21,6,1)
(16,7,1)
(26,21,1)
(6,22,1)
(18,0,1)
(12,14,1)
(28,0,1)
(9,18,1)
(19,23,1)
(10,3,1)
(2,19,1)
(0,24,1)
(4,2,1)
(4,17,1)
(5,23,1)
(23,10,1)
(4,0,2)
(4,2,2)
(6,22,2)
(17,0,2)
(5,23,2)
(8,0,2)
(18,0,2)
(19,0,2)
(19,23,2)
(7,22,2)
(9,0,2)
(21,22,2)
(5,22,2)
(7,5,2)
(2,0,2)
(26,22,2)
(2,19,2)
-----------------------------------
(0,GLOBAL_CONST_FIVE==5)
(1,)
(2,result = data * data)
(3,data)
(4,printIntLine(result)
(5,&data)
(6,stdin)
(7,fscanf (stdin, "%hd", &data)
(8,data)
(9,data)
(10,0)
(11,)
(12,5)
(13,result)
(14,GLOBAL_CONST_FIVE)
(15,data)
(16,GLOBAL_CONST_FIVE)
(17,result)
(18,result)
(19,data * data)
(20,if(GLOBAL_CONST_FIVE==5)
(21,"%hd")
(22,GLOBAL_CONST_FIVE==5)
(23,data = 0)
(24,5)
(25,if(GLOBAL_CONST_FIVE==5)
(26,data)
(27,)
(28,RET)
(29,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^