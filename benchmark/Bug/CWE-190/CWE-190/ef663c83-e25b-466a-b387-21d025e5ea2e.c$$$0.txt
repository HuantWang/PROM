-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_add_10_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,33,35,39,40,44,46
-----computeFrom-----
12,13
12,14
21,22
21,23
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_add_10_bad(){    int data;    /* Initialize data */    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_add_10_bad()
CWE190_Integer_Overflow__int_max_add_10_bad
{    int data;    /* Initialize data */    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(20,7,0)
(5,22,0)
(17,9,0)
(23,9,0)
(18,20,0)
(15,22,0)
(11,7,0)
(9,5,0)
(19,22,0)
(7,2,0)
(1,5,0)
(21,8,0)
(8,13,0)
(0,23,0)
(6,5,0)
(9,23,0)
(9,8,0)
(23,7,0)
(12,8,0)
(16,9,0)
(20,23,0)
(14,22,0)
(1,6,1)
(8,12,1)
(9,5,1)
(18,23,1)
(20,23,1)
(0,4,1)
(21,3,1)
(20,18,1)
(16,17,1)
(5,1,1)
(17,0,1)
(10,4,1)
(4,3,1)
(3,5,1)
(4,8,1)
(23,9,1)
(12,21,1)
(9,16,1)
(10,20,1)
(9,8,1)
(17,4,2)
(23,9,2)
(0,4,2)
(8,3,2)
(20,4,2)
(23,4,2)
(12,3,2)
(9,4,2)
(16,4,2)
(9,8,2)
(9,5,2)
(20,23,2)
(21,3,2)
(18,4,2)
-----------------------------------
(0,result)
(1,0)
(2,)
(3,globalTrue)
(4,globalTrue)
(5,data = 0)
(6,data)
(7,)
(8,data = INT_MAX)
(9,data + 1)
(10,RET)
(11,result)
(12,INT_MAX)
(13,)
(14,data)
(15,if(globalTrue)
(16,1)
(17,data)
(18,result)
(19,if(globalTrue)
(20,printIntLine(result)
(21,data)
(22,)
(23,result = data + 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^