-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_postinc_14_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    if(globalFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
27,28
29,30
29,31
30,31
30,32
31,32
34,35
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,32,33,39,42,44,47,51,53
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
30,31
30,32
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_postinc_14_bad(){    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_rand_postinc_14_bad()
CWE190_Integer_Overflow__int_rand_postinc_14_bad
{    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(25,9,0)
(10,25,0)
(7,24,0)
(8,14,0)
(20,26,0)
(22,18,0)
(23,24,0)
(9,3,0)
(17,1,0)
(5,1,0)
(10,9,0)
(11,26,0)
(4,1,0)
(6,5,0)
(25,18,0)
(5,9,0)
(2,18,0)
(15,26,0)
(12,14,0)
(1,16,0)
(18,26,0)
(27,9,0)
(25,1,0)
(19,25,0)
(5,18,0)
(21,10,0)
(0,25,0)
(1,17,0)
(8,1,1)
(10,21,1)
(19,0,1)
(12,8,1)
(4,24,1)
(13,14,1)
(21,25,1)
(24,23,1)
(25,18,1)
(7,18,1)
(18,2,1)
(6,14,1)
(23,7,1)
(25,1,1)
(13,10,1)
(14,12,1)
(10,25,1)
(17,4,1)
(5,1,1)
(25,19,1)
(2,22,1)
(0,5,1)
(1,17,1)
(5,6,1)
(5,18,1)
(8,24,1)
(5,14,2)
(21,14,2)
(17,24,2)
(4,24,2)
(10,25,2)
(5,18,2)
(25,14,2)
(5,1,2)
(6,14,2)
(10,14,2)
(0,14,2)
(1,24,2)
(25,18,2)
(25,1,2)
(19,14,2)
(1,17,2)
-----------------------------------
(0,result)
(1,data = RAND32()
(2,0)
(3,)
(4,data)
(5,data++)
(6,data)
(7,globalFive)
(8,globalFive)
(9,)
(10,printIntLine(result)
(11,if(globalFive==5)
(12,5)
(13,RET)
(14,globalFive==5)
(15,if(globalFive==5)
(16,)
(17,RAND32()
(18,data = 0)
(19,data)
(20,data)
(21,result)
(22,data)
(23,5)
(24,globalFive==5)
(25,result = data)
(26,)
(27,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^