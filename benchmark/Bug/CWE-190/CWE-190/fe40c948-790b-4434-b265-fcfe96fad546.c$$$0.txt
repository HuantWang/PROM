-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_14_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalFive==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(globalFive==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
22,24
23,24
24,25
24,26
26,27
26,28
26,29
28,29
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
35,37
35,38
35,39
36,37
38,39
40,41
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
51,53
52,53
54,55
56,57
57,58
58,59
58,60
59,60
62,63
62,64
63,64
63,65
64,65
67,68
68,69
68,70
69,70
70,71
70,72
72,73
72,74
74,75
75,76
75,77
76,77
79,80
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,30,32,37,39,41,43,45,50,53,55,60,61,65,66,71,73,77,78,82,84
-----computeFrom-----
12,13
12,14
17,18
17,19
34,35
34,36
48,49
48,50
63,64
63,65
75,76
75,77
-----guardedBy-----
39,55
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_14_bad(){    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_add_14_bad()
CWE190_Integer_Overflow__int_fgets_add_14_bad
{    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
globalFive==5
globalFive
globalFive
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(0,28,0)
(21,12,0)
(30,40,0)
(38,23,0)
(3,36,0)
(40,35,0)
(30,41,0)
(10,2,0)
(16,36,0)
(43,44,0)
(28,35,0)
(29,38,0)
(31,30,0)
(8,25,0)
(39,41,0)
(6,40,0)
(28,40,0)
(2,14,0)
(5,44,0)
(19,9,0)
(18,38,0)
(44,9,0)
(24,12,0)
(30,4,0)
(7,4,0)
(33,35,0)
(11,25,0)
(13,44,0)
(25,38,0)
(17,27,0)
(9,44,0)
(4,15,0)
(44,25,0)
(37,11,0)
(41,36,0)
(11,4,0)
(1,27,0)
(35,20,0)
(34,41,0)
(42,30,0)
(4,11,0)
(40,30,0)
(32,36,0)
(26,25,0)
(37,7,1)
(1,2,1)
(30,4,1)
(25,26,1)
(43,25,1)
(9,44,1)
(26,8,1)
(22,27,1)
(27,17,1)
(4,11,1)
(24,41,1)
(6,27,1)
(12,21,1)
(44,25,1)
(5,43,1)
(0,40,1)
(2,10,1)
(44,13,1)
(1,12,1)
(8,12,1)
(40,30,1)
(30,42,1)
(30,41,1)
(31,6,1)
(10,9,1)
(42,31,1)
(1,4,1)
(11,37,1)
(13,5,1)
(21,24,1)
(19,44,1)
(17,1,1)
(28,40,1)
(11,25,1)
(41,39,1)
(9,19,1)
(28,0,1)
(7,9,1)
(39,34,1)
(22,28,1)
(37,9,2)
(0,27,2)
(25,12,2)
(9,12,2)
(11,9,2)
(44,12,2)
(40,30,2)
(28,27,2)
(28,40,2)
(30,4,2)
(4,11,2)
(7,9,2)
(9,44,2)
(5,12,2)
(19,12,2)
(13,12,2)
(40,27,2)
(30,27,2)
(11,25,2)
(8,12,2)
(44,25,2)
(30,41,2)
(26,12,2)
(42,27,2)
(4,9,2)
(43,12,2)
(10,9,2)
(6,27,2)
(2,9,2)
(31,27,2)
-----------------------------------
(0,result)
(1,globalFive)
(2,printLine("fgets()
(3,if(globalFive==5)
(4,data = atoi(inputBuffer)
(5,CHAR_ARRAY_SIZE)
(6,result)
(7,data)
(8,inputBuffer)
(9,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(10,"fgets()
(11,atoi(inputBuffer)
(12,globalFive==5)
(13,stdin)
(14,)
(15,)
(16,data)
(17,5)
(18,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(19,NULL)
(20,)
(21,5)
(22,RET)
(23,)
(24,globalFive)
(25,inputBuffer[CHAR_ARRAY_SIZE] = "")
(26,"")
(27,globalFive==5)
(28,printIntLine(result)
(29,inputBuffer)
(30,data + 1)
(31,data)
(32,if(globalFive==5)
(33,result)
(34,data)
(35,)
(36,)
(37,inputBuffer)
(38,)
(39,0)
(40,result = data + 1)
(41,data = 0)
(42,1)
(43,inputBuffer)
(44,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^