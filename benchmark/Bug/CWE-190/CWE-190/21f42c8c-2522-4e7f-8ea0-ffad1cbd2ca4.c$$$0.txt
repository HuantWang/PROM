-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_listen_socket_add_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    int * dataPtr = (int *)dataVoidPtr;
    /* dereference dataPtr into data */
    int data = (*dataPtr);
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        int result = data + 1;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,38,40,44,45,49,51
-----computeFrom-----
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_listen_socket_add_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_listen_socket_add_64b_badSink(void * dataVoidPtr)
CWE190_Integer_Overflow__int_listen_socket_add_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
int * dataPtr = (int *)dataVoidPtr;
int * dataPtr = (int *)dataVoidPtr;
int
* dataPtr = (int *)dataVoidPtr
*
dataPtr
= (int *)dataVoidPtr
(int *)dataVoidPtr
int *
int
*
*
dataVoidPtr
dataVoidPtr
int data = (*dataPtr);
int data = (*dataPtr);
int
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(0,5,0)
(20,7,0)
(15,7,0)
(17,4,0)
(0,15,0)
(6,9,0)
(9,6,0)
(11,9,0)
(9,4,0)
(10,0,0)
(21,6,0)
(12,15,0)
(16,9,0)
(13,3,0)
(17,15,0)
(3,6,0)
(4,7,0)
(3,1,0)
(1,7,0)
(0,10,0)
(18,0,0)
(8,7,0)
(4,17,0)
(14,1,0)
(22,4,0)
(6,1,0)
(15,0,0)
(2,17,0)
(15,0,1)
(22,15,1)
(18,12,1)
(2,22,1)
(17,15,1)
(16,21,1)
(13,6,1)
(9,11,1)
(11,16,1)
(17,2,1)
(0,5,1)
(4,17,1)
(0,18,1)
(6,9,1)
(9,4,1)
(19,3,1)
(3,6,1)
(21,4,1)
(0,10,1)
(3,13,1)
(3,6,2)
(6,9,2)
(9,4,2)
(0,10,2)
(17,15,2)
(0,5,2)
(4,17,2)
(15,0,2)
-----------------------------------
(0,(int *)
(1,)
(2,dataPtr)
(3,printIntLine(result)
(4,data = (*dataPtr)
(5,void * dataVoidPtr)
(6,result = data + 1)
(7,)
(8,dataPtr)
(9,data + 1)
(10,int *)
(11,1)
(12,dataPtr)
(13,result)
(14,result)
(15,* dataPtr = (int *)
(16,data)
(17,*dataPtr)
(18,dataVoidPtr)
(19,RET)
(20,data)
(21,result)
(22,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^