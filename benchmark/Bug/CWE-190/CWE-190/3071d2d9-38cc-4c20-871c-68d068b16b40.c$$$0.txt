-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_multiply_01_bad()
{
    unsigned int data;
    data = 0;
    /* POTENTIAL FLAW: Use a random value */
    data = (unsigned int)RAND32();
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
        unsigned int result = data * 2;
        printUnsignedLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
21,23
24,25
25,26
27,28
27,29
28,29
28,30
29,30
32,33
32,34
33,34
34,35
34,36
36,37
36,38
38,39
39,40
39,41
40,41
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,15,19,22,23,26,30,31,35,37,41,42,46,48
-----computeFrom-----
12,13
12,14
17,18
17,19
28,29
28,30
39,40
39,41
-----guardedBy-----
30,41
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_multiply_01_bad(){    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a random value */    data = (unsigned int)RAND32();    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_multiply_01_bad()
CWE190_Integer_Overflow__unsigned_int_rand_multiply_01_bad
{    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a random value */    data = (unsigned int)RAND32();    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(14,23,0)
(2,5,0)
(12,7,0)
(9,2,0)
(23,14,0)
(4,23,0)
(0,7,0)
(15,5,0)
(19,20,0)
(21,0,0)
(17,0,0)
(23,2,0)
(13,22,0)
(12,10,0)
(20,2,0)
(6,5,0)
(22,5,0)
(16,7,0)
(8,10,0)
(23,4,0)
(7,0,0)
(7,10,0)
(2,23,0)
(0,2,0)
(1,22,0)
(3,12,0)
(11,20,0)
(18,12,1)
(22,13,1)
(20,2,1)
(13,1,1)
(11,2,1)
(21,17,1)
(14,9,1)
(9,22,1)
(16,20,1)
(2,23,1)
(19,11,1)
(0,2,1)
(20,19,1)
(18,20,1)
(7,0,1)
(23,4,1)
(23,14,1)
(17,16,1)
(0,21,1)
(12,7,1)
(12,3,1)
(3,7,1)
(12,20,2)
(12,7,2)
(17,20,2)
(7,20,2)
(20,2,2)
(21,20,2)
(7,0,2)
(23,4,2)
(3,20,2)
(0,20,2)
(16,20,2)
(0,2,2)
(2,23,2)
(23,14,2)
-----------------------------------
(0,data * 2)
(1,data)
(2,data = (unsigned int)
(3,result)
(4,unsigned int)
(5,)
(6,if(data > 0)
(7,result = data * 2)
(8,result)
(9,data)
(10,)
(11,data)
(12,printUnsignedLine(result)
(13,0)
(14,RAND32()
(15,data)
(16,result)
(17,data)
(18,RET)
(19,0)
(20,data > 0)
(21,2)
(22,data = 0)
(23,(unsigned int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^