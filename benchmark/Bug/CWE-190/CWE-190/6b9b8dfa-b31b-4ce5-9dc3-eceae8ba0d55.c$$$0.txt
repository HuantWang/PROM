-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_05_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticTrue)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
20,22
21,22
22,23
22,24
24,25
24,26
24,27
26,27
27,28
29,30
31,32
31,33
31,34
32,33
32,34
33,34
33,35
33,36
33,37
34,35
36,37
38,39
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
60,61
60,62
61,62
63,64
64,65
64,66
65,66
66,67
66,68
68,69
68,70
70,71
71,72
71,73
72,73
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,30,35,37,39,41,43,48,51,53,58,59,62,67,69,73,74,78,80
-----computeFrom-----
12,13
12,14
32,33
32,34
46,47
46,48
71,72
71,73
-----guardedBy-----
37,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_05_bad(){    int data;    /* Initialize data */    data = 0;    if(staticTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_add_05_bad()
CWE190_Integer_Overflow__int_fgets_add_05_bad
{    int data;    /* Initialize data */    data = 0;    if(staticTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
staticTrue
staticTrue
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(staticTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(32,0,0)
(14,6,0)
(10,13,0)
(26,20,0)
(18,4,0)
(15,34,0)
(4,6,0)
(16,31,0)
(11,13,0)
(8,35,0)
(10,35,0)
(31,0,0)
(35,20,0)
(25,22,0)
(13,22,0)
(15,4,0)
(40,15,0)
(35,10,0)
(2,4,0)
(39,31,0)
(12,30,0)
(20,21,0)
(6,3,0)
(26,35,0)
(34,15,0)
(28,6,0)
(1,10,0)
(7,12,0)
(17,22,0)
(19,26,0)
(31,4,0)
(0,31,0)
(27,13,0)
(24,20,0)
(5,34,0)
(36,31,0)
(10,34,0)
(33,10,0)
(34,38,0)
(9,22,0)
(15,4,1)
(26,19,1)
(34,15,1)
(32,31,1)
(36,39,1)
(26,35,1)
(23,12,1)
(29,23,1)
(23,34,1)
(13,11,1)
(19,35,1)
(8,23,1)
(11,27,1)
(31,16,1)
(2,37,1)
(23,37,1)
(29,26,1)
(16,36,1)
(18,2,1)
(31,4,1)
(39,4,1)
(37,13,1)
(4,18,1)
(5,0,1)
(10,34,1)
(1,8,1)
(10,33,1)
(15,40,1)
(0,32,1)
(33,1,1)
(10,13,1)
(40,5,1)
(35,10,1)
(12,7,1)
(7,0,1)
(0,31,1)
(35,10,2)
(0,31,2)
(0,37,2)
(12,0,2)
(26,23,2)
(10,34,2)
(15,0,2)
(10,23,2)
(35,23,2)
(32,37,2)
(36,37,2)
(40,0,2)
(39,37,2)
(26,35,2)
(8,23,2)
(7,0,2)
(5,0,2)
(4,37,2)
(31,4,2)
(34,15,2)
(2,37,2)
(34,0,2)
(19,23,2)
(33,23,2)
(10,13,2)
(18,37,2)
(1,23,2)
(16,37,2)
(31,37,2)
(15,4,2)
-----------------------------------
(0,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(1,data)
(2,inputBuffer)
(3,)
(4,inputBuffer[CHAR_ARRAY_SIZE] = "")
(5,data)
(6,)
(7,"fgets()
(8,result)
(9,if(staticTrue)
(10,data + 1)
(11,0)
(12,printLine("fgets()
(13,data = 0)
(14,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(15,atoi(inputBuffer)
(16,stdin)
(17,if(staticTrue)
(18,"")
(19,result)
(20,)
(21,)
(22,)
(23,staticTrue)
(24,result)
(25,data)
(26,printIntLine(result)
(27,data)
(28,inputBuffer)
(29,RET)
(30,)
(31,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(32,NULL)
(33,1)
(34,data = atoi(inputBuffer)
(35,result = data + 1)
(36,CHAR_ARRAY_SIZE)
(37,staticTrue)
(38,)
(39,inputBuffer)
(40,inputBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^