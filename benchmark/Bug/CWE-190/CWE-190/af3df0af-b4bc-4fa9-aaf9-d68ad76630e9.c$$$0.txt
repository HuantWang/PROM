-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_65b_badSink(unsigned int data)
{
    {
        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
        unsigned int result = data * data;
        printUnsignedLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
20,21
22,23
23,24
23,25
24,25
26,27
-----nextToken-----
2,4,6,8,13,15,19,21,25,27
-----computeFrom-----
17,18
17,19
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_65b_badSink(unsigned int data){    {        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_square_65b_badSink(unsigned int data)
CWE190_Integer_Overflow__unsigned_int_fscanf_square_65b_badSink
unsigned int data
unsigned int
data
data
{    {        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }}
{        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(11,1,0)
(6,0,0)
(5,0,0)
(9,5,0)
(3,10,0)
(1,10,0)
(7,1,0)
(5,10,0)
(10,0,0)
(1,4,0)
(10,1,0)
(0,2,0)
(5,10,1)
(11,7,1)
(1,4,1)
(7,3,1)
(1,11,1)
(9,10,1)
(10,1,1)
(8,5,1)
(5,9,1)
(1,4,2)
(10,1,2)
(5,10,2)
-----------------------------------
(0,)
(1,data * data)
(2,)
(3,result)
(4,unsigned int data)
(5,printUnsignedLine(result)
(6,result)
(7,data)
(8,RET)
(9,result)
(10,result = data * data)
(11,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^