-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_06_bad()
{
    unsigned int data;
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
47,48
47,49
49,50
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,43,46,48,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_06_bad(){    unsigned int data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_postinc_06_bad()
CWE190_Integer_Overflow__unsigned_int_rand_postinc_06_bad
{    unsigned int data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(5,25,0)
(14,18,0)
(8,0,0)
(14,0,0)
(17,25,0)
(2,22,0)
(14,20,0)
(7,20,0)
(22,2,0)
(4,22,0)
(6,0,0)
(19,14,0)
(18,15,0)
(18,22,0)
(11,7,0)
(22,18,0)
(7,14,0)
(6,18,0)
(22,4,0)
(23,13,0)
(24,13,0)
(20,1,0)
(0,25,0)
(26,20,0)
(3,6,0)
(10,18,0)
(9,12,0)
(16,25,0)
(6,20,0)
(28,0,0)
(21,12,0)
(27,14,0)
(19,6,1)
(6,3,1)
(13,23,1)
(12,21,1)
(11,14,1)
(7,11,1)
(21,9,1)
(29,7,1)
(24,18,1)
(27,19,1)
(7,14,1)
(14,18,1)
(9,0,1)
(0,8,1)
(22,2,1)
(24,12,1)
(3,13,1)
(6,0,1)
(2,10,1)
(23,24,1)
(29,13,1)
(22,4,1)
(10,12,1)
(8,28,1)
(18,22,1)
(14,0,1)
(6,18,1)
(14,27,1)
(22,4,2)
(7,14,2)
(14,18,2)
(19,13,2)
(27,13,2)
(11,13,2)
(3,13,2)
(18,12,2)
(10,12,2)
(6,18,2)
(6,13,2)
(7,13,2)
(22,12,2)
(18,22,2)
(6,0,2)
(2,12,2)
(22,2,2)
(14,0,2)
(14,13,2)
-----------------------------------
(0,data = 0)
(1,)
(2,RAND32()
(3,data)
(4,unsigned int)
(5,data)
(6,data++)
(7,printUnsignedLine(result)
(8,0)
(9,STATIC_CONST_FIVE)
(10,data)
(11,result)
(12,STATIC_CONST_FIVE==5)
(13,STATIC_CONST_FIVE==5)
(14,result = data)
(15,)
(16,if(STATIC_CONST_FIVE==5)
(17,if(STATIC_CONST_FIVE==5)
(18,data = (unsigned int)
(19,result)
(20,)
(21,5)
(22,(unsigned int)
(23,5)
(24,STATIC_CONST_FIVE)
(25,)
(26,result)
(27,data)
(28,data)
(29,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^