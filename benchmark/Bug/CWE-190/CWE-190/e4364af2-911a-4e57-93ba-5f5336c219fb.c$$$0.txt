-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_add_32_bad()
{
    unsigned int data;
    unsigned int *dataPtr1 = &data;
    unsigned int *dataPtr2 = &data;
    data = 0;
    {
        unsigned int data = *dataPtr1;
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
        *dataPtr1 = data;
    }
    {
        unsigned int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
50,52
51,52
51,53
54,55
55,56
57,58
58,59
58,60
59,60
60,61
62,63
64,65
64,66
65,66
66,67
66,68
68,69
68,70
70,71
71,72
72,73
74,75
74,76
75,76
76,77
76,78
78,79
78,80
80,81
81,82
81,83
82,83
85,86
86,87
86,88
87,88
89,90
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,52,53,56,61,63,67,69,73,77,79,83,84,88,90
-----computeFrom-----
32,33
32,34
47,48
47,49
58,59
58,60
81,82
81,83
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_add_32_bad(){    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_add_32_bad()
CWE190_Integer_Overflow__unsigned_int_rand_add_32_bad
{    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
unsigned int *dataPtr1 = &data;
unsigned int *dataPtr1 = &data;
unsigned int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
unsigned int *dataPtr2 = &data;
unsigned int *dataPtr2 = &data;
unsigned int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        *dataPtr1 = data;    }
unsigned int data = *dataPtr1;
unsigned int data = *dataPtr1;
unsigned int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
unsigned int data = *dataPtr2;
unsigned int data = *dataPtr2;
unsigned int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(7,5,0)
(2,14,0)
(6,5,0)
(12,6,0)
(3,41,0)
(14,26,0)
(26,7,0)
(32,34,0)
(10,13,0)
(1,21,0)
(26,14,0)
(23,27,0)
(42,0,0)
(13,2,0)
(9,31,0)
(45,5,0)
(41,12,0)
(0,42,0)
(40,14,0)
(21,5,0)
(29,20,0)
(31,21,0)
(13,31,0)
(19,5,0)
(7,34,0)
(23,6,0)
(4,12,0)
(11,27,0)
(14,21,0)
(15,23,0)
(35,17,0)
(41,20,0)
(34,7,0)
(30,5,0)
(37,19,0)
(27,23,0)
(25,24,0)
(18,0,0)
(0,6,0)
(24,13,0)
(39,19,0)
(38,7,0)
(2,13,0)
(27,44,0)
(44,27,0)
(8,6,0)
(17,20,0)
(12,23,0)
(20,5,0)
(28,42,0)
(42,20,0)
(16,2,0)
(24,31,0)
(33,5,0)
(27,11,0)
(20,17,0)
(36,2,0)
(22,26,0)
(13,2,1)
(37,7,1)
(32,38,1)
(17,35,1)
(42,20,1)
(41,3,1)
(36,16,1)
(35,29,1)
(10,14,1)
(38,20,1)
(42,28,1)
(0,42,1)
(7,34,1)
(20,17,1)
(12,4,1)
(27,11,1)
(22,40,1)
(26,22,1)
(18,19,1)
(24,13,1)
(41,20,1)
(28,18,1)
(2,36,1)
(40,12,1)
(26,7,1)
(2,14,1)
(43,24,1)
(19,39,1)
(25,13,1)
(34,32,1)
(24,25,1)
(3,23,1)
(23,27,1)
(39,37,1)
(27,44,1)
(11,15,1)
(15,0,1)
(12,23,1)
(14,26,1)
(4,41,1)
(16,10,1)
(24,13,2)
(14,26,2)
(7,34,2)
(26,7,2)
(23,27,2)
(42,20,2)
(27,11,2)
(27,44,2)
(13,2,2)
(41,20,2)
(2,14,2)
(0,42,2)
(20,17,2)
(12,23,2)
-----------------------------------
(0,data = *dataPtr1)
(1,data)
(2,data + 1)
(3,dataPtr1)
(4,data)
(5,)
(6,)
(7,*dataPtr2 = &data)
(8,data)
(9,result)
(10,result)
(11,RAND32()
(12,*dataPtr1 = data)
(13,result = data + 1)
(14,data = *dataPtr2)
(15,data)
(16,data)
(17,&data)
(18,data)
(19,data = 0)
(20,*dataPtr1 = &data)
(21,)
(22,dataPtr2)
(23,data = (unsigned int)
(24,printUnsignedLine(result)
(25,result)
(26,*dataPtr2)
(27,(unsigned int)
(28,dataPtr1)
(29,dataPtr1)
(30,data)
(31,)
(32,data)
(33,dataPtr2)
(34,&data)
(35,data)
(36,1)
(37,data)
(38,dataPtr2)
(39,0)
(40,data)
(41,*dataPtr1)
(42,*dataPtr1)
(43,RET)
(44,unsigned int)
(45,dataPtr1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^