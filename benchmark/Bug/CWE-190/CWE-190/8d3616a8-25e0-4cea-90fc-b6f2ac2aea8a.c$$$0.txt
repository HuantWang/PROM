-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_preinc_09_bad()
{
    short data;
    data = 0;
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,39,42,44,47,51,53
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_preinc_09_bad(){    short data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_preinc_09_bad()
CWE190_Integer_Overflow__short_rand_preinc_09_bad
{    short data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(3,5,0)
(15,21,0)
(16,19,0)
(5,6,0)
(3,21,0)
(13,15,0)
(12,1,0)
(0,19,0)
(22,19,0)
(2,6,0)
(7,21,0)
(6,24,0)
(1,15,0)
(20,5,0)
(5,4,0)
(6,5,0)
(24,6,0)
(11,19,0)
(18,16,0)
(8,3,0)
(9,15,0)
(6,2,0)
(15,16,0)
(1,21,0)
(3,16,0)
(14,16,0)
(21,23,0)
(15,5,0)
(16,18,1)
(17,1,1)
(1,15,1)
(15,5,1)
(20,25,1)
(3,16,1)
(9,3,1)
(25,16,1)
(18,14,1)
(15,13,1)
(1,12,1)
(10,25,1)
(12,15,1)
(10,5,1)
(6,2,1)
(3,5,1)
(17,10,1)
(6,24,1)
(8,10,1)
(15,16,1)
(13,9,1)
(5,6,1)
(3,8,1)
(24,20,1)
(9,10,2)
(3,10,2)
(12,10,2)
(3,16,2)
(15,5,2)
(13,10,2)
(8,10,2)
(6,2,2)
(5,6,2)
(15,16,2)
(1,10,2)
(6,25,2)
(6,24,2)
(1,15,2)
(5,25,2)
(20,25,2)
(15,10,2)
(24,25,2)
(3,5,2)
-----------------------------------
(0,if(GLOBAL_CONST_TRUE)
(1,printIntLine(result)
(2,short)
(3,++data)
(4,)
(5,data = (short)
(6,(short)
(7,result)
(8,data)
(9,result)
(10,GLOBAL_CONST_TRUE)
(11,if(GLOBAL_CONST_TRUE)
(12,result)
(13,data)
(14,data)
(15,result = data)
(16,data = 0)
(17,RET)
(18,0)
(19,)
(20,data)
(21,)
(22,data)
(23,)
(24,RAND32()
(25,GLOBAL_CONST_TRUE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^