-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_postinc_01_bad()
{
    char data;
    data = ' ';
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = CHAR_MAX;
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        char result = data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
23,24
24,25
25,26
27,28
28,29
28,30
30,31
30,32
32,33
33,34
35,36
36,37
36,38
37,38
39,40
-----nextToken-----
2,4,8,10,14,15,19,21,26,29,31,34,38,40
-----computeFrom-----
12,13
12,14
17,18
17,19
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_postinc_01_bad(){    char data;    data = ' ';    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_max_postinc_01_bad()
CWE190_Integer_Overflow__char_max_postinc_01_bad
{    char data;    data = ' ';    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
data = CHAR_MAX;
data = CHAR_MAX
data
data
CHAR_MAX
CHAR_MAX
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }
data++;
data++
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(13,6,0)
(2,6,0)
(8,3,0)
(0,3,0)
(9,10,0)
(1,3,0)
(14,0,0)
(5,17,0)
(3,2,0)
(16,4,0)
(15,17,0)
(3,17,0)
(0,2,0)
(17,6,0)
(10,2,0)
(7,2,0)
(10,17,0)
(11,4,0)
(4,6,0)
(16,11,1)
(9,17,1)
(15,4,1)
(5,15,1)
(17,5,1)
(1,10,1)
(0,14,1)
(0,3,1)
(4,16,1)
(8,1,1)
(3,17,1)
(12,0,1)
(10,9,1)
(14,3,1)
(3,8,1)
(10,17,1)
(0,3,2)
(3,17,2)
(10,17,2)
-----------------------------------
(0,printHexCharLine(result)
(1,result)
(2,)
(3,result = data)
(4,data = ' ')
(5,CHAR_MAX)
(6,)
(7,result)
(8,data)
(9,data)
(10,data++)
(11,data)
(12,RET)
(13,data)
(14,result)
(15,data)
(16,' ')
(17,data = CHAR_MAX)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^