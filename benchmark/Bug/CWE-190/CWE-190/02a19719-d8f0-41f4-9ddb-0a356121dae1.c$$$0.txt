-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_05_bad()
{
    unsigned int data;
    data = 0;
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,39,42,44,47,51,53
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_05_bad(){    unsigned int data;    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_postinc_05_bad()
CWE190_Integer_Overflow__unsigned_int_rand_postinc_05_bad
{    unsigned int data;    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(6,19,0)
(8,1,0)
(21,12,0)
(19,17,0)
(17,10,0)
(3,21,0)
(12,23,0)
(5,22,0)
(25,22,0)
(7,21,0)
(19,21,0)
(20,12,0)
(11,12,0)
(12,13,0)
(20,1,0)
(20,17,0)
(23,14,0)
(9,1,0)
(18,17,0)
(23,2,0)
(4,20,0)
(1,22,0)
(16,22,0)
(23,12,0)
(2,23,0)
(14,23,0)
(21,1,0)
(21,17,0)
(0,15,1)
(23,2,1)
(1,9,1)
(21,1,1)
(0,12,1)
(20,4,1)
(24,0,1)
(20,12,1)
(20,1,1)
(21,7,1)
(9,8,1)
(14,11,1)
(3,20,1)
(23,14,1)
(6,21,1)
(19,6,1)
(7,3,1)
(24,19,1)
(15,1,1)
(19,21,1)
(11,15,1)
(12,23,1)
(4,0,1)
(21,12,1)
(12,23,2)
(19,21,2)
(21,0,2)
(20,1,2)
(21,1,2)
(14,15,2)
(19,0,2)
(20,0,2)
(21,12,2)
(6,0,2)
(23,2,2)
(3,0,2)
(20,12,2)
(11,15,2)
(12,15,2)
(4,0,2)
(23,14,2)
(23,15,2)
(7,0,2)
-----------------------------------
(0,staticTrue)
(1,data = 0)
(2,unsigned int)
(3,result)
(4,data)
(5,if(staticTrue)
(6,result)
(7,data)
(8,data)
(9,0)
(10,)
(11,data)
(12,data = (unsigned int)
(13,)
(14,RAND32()
(15,staticTrue)
(16,data)
(17,)
(18,result)
(19,printUnsignedLine(result)
(20,data++)
(21,result = data)
(22,)
(23,(unsigned int)
(24,RET)
(25,if(staticTrue)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^