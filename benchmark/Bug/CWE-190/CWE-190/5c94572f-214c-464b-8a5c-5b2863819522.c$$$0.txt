-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_postinc_17_bad()
{
    int i,j;
    int64_t data;
    data = 0LL;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = LLONG_MAX;
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
24,25
24,26
24,27
24,28
25,26
26,27
26,28
27,28
30,31
30,32
31,32
34,35
35,36
37,38
38,39
39,40
39,41
40,41
42,43
44,45
44,46
44,47
44,48
45,46
46,47
46,48
47,48
50,51
50,52
51,52
54,55
55,56
57,58
58,59
58,60
58,61
59,60
60,61
61,62
63,64
64,65
64,66
65,66
67,68
67,69
69,70
70,71
72,73
73,74
73,75
74,75
76,77
-----nextToken-----
2,4,8,10,12,16,18,22,23,28,29,32,33,36,41,43,48,49,52,53,56,62,66,68,71,75,77
-----computeFrom-----
20,21
20,22
26,27
26,28
30,31
30,32
39,40
39,41
46,47
46,48
50,51
50,52
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_postinc_17_bad(){    int i,j;    int64_t data;    data = 0LL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_max_postinc_17_bad()
CWE190_Integer_Overflow__int64_t_max_postinc_17_bad
{    int i,j;    int64_t data;    data = 0LL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(5,17,0)
(3,12,0)
(6,7,0)
(20,7,0)
(4,12,0)
(33,14,0)
(27,33,0)
(32,26,0)
(15,4,0)
(7,22,0)
(24,12,0)
(13,17,0)
(37,35,0)
(26,35,0)
(18,27,0)
(31,33,0)
(29,17,0)
(1,27,0)
(31,27,0)
(11,35,0)
(20,33,0)
(9,31,0)
(36,17,0)
(27,7,0)
(2,35,0)
(25,7,0)
(21,17,0)
(23,20,0)
(0,12,0)
(8,17,0)
(28,26,0)
(19,33,0)
(30,0,0)
(10,4,0)
(34,11,0)
(35,2,1)
(4,10,1)
(26,35,1)
(20,23,1)
(4,12,1)
(27,18,1)
(30,31,1)
(0,12,1)
(24,3,1)
(34,7,1)
(10,15,1)
(15,0,1)
(6,26,1)
(16,4,1)
(25,6,1)
(0,30,1)
(7,25,1)
(31,9,1)
(1,20,1)
(37,13,1)
(11,35,1)
(32,35,1)
(9,27,1)
(32,11,1)
(20,7,1)
(12,24,1)
(23,4,1)
(3,26,1)
(18,1,1)
(11,34,1)
(2,37,1)
(31,27,1)
(27,7,1)
(28,32,1)
(26,28,1)
(15,12,1)
(6,26,2)
(0,12,2)
(4,4,2)
(11,26,2)
(10,4,2)
(23,4,2)
(7,26,2)
(28,26,2)
(27,7,2)
(11,35,2)
(26,26,2)
(20,4,2)
(27,4,2)
(15,4,2)
(25,26,2)
(9,4,2)
(26,35,2)
(32,26,2)
(1,4,2)
(20,7,2)
(34,26,2)
(0,4,2)
(31,4,2)
(31,27,2)
(4,12,2)
(30,4,2)
(18,4,2)
-----------------------------------
(0,j++)
(1,result)
(2,0)
(3,j)
(4,j < 1)
(5,j)
(6,data)
(7,data = LLONG_MAX)
(8,for(j = 0; j < 1; j++)
(9,result)
(10,1)
(11,i++)
(12,j = 0)
(13,L)
(14,)
(15,j)
(16,RET)
(17,)
(18,data)
(19,result)
(20,data++)
(21,for(i = 0; i < 1; i++)
(22,)
(23,data)
(24,0)
(25,LLONG_MAX)
(26,i < 1)
(27,result = data)
(28,1)
(29,data)
(30,j)
(31,printLongLongLine(result)
(32,i)
(33,)
(34,i)
(35,i = 0)
(36,i)
(37,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^