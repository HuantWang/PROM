-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_preinc_31_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    {
        int dataCopy = data;
        int data = dataCopy;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
18,20
20,21
20,22
20,23
22,23
23,24
25,26
27,28
27,29
27,30
28,29
28,30
29,30
29,31
29,32
29,33
30,31
32,33
34,35
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
56,57
56,58
56,59
57,58
58,59
58,60
60,61
60,62
62,63
63,64
65,66
66,67
66,68
68,69
68,70
70,71
71,72
73,74
73,75
73,76
74,75
75,76
76,77
78,79
79,80
79,81
81,82
81,83
83,84
84,85
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,14,15,19,21,24,26,31,33,35,37,39,44,47,49,54,55,59,61,64,67,69,72,77,80,82,85,89,91
-----computeFrom-----
12,13
12,14
28,29
28,30
42,43
42,44
-----guardedBy-----
33,49
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_preinc_31_bad(){    int data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_preinc_31_bad()
CWE190_Integer_Overflow__int_fgets_preinc_31_bad
{    int data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
int dataCopy = data;
int dataCopy = data;
int
dataCopy = data
dataCopy
= data
data
data
int data = dataCopy;
int data = dataCopy;
int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(25,20,0)
(35,12,0)
(34,36,0)
(26,9,0)
(33,39,0)
(29,7,0)
(8,40,0)
(40,12,0)
(41,28,0)
(27,12,0)
(23,12,0)
(3,21,0)
(0,31,0)
(20,2,0)
(32,36,0)
(21,22,0)
(2,9,0)
(4,2,0)
(6,9,0)
(17,29,0)
(5,10,0)
(19,27,0)
(28,26,0)
(42,27,0)
(11,10,0)
(28,36,0)
(10,9,0)
(36,2,0)
(9,22,0)
(29,40,0)
(36,26,0)
(27,31,0)
(13,9,0)
(16,27,0)
(2,10,0)
(31,27,0)
(39,22,0)
(10,29,0)
(20,26,0)
(38,21,0)
(18,15,0)
(12,21,0)
(24,26,0)
(30,39,0)
(10,39,0)
(1,22,0)
(14,18,0)
(37,2,0)
(40,29,0)
(10,5,1)
(11,29,1)
(35,23,1)
(25,2,1)
(16,12,1)
(40,8,1)
(20,2,1)
(18,14,1)
(5,11,1)
(32,34,1)
(37,10,1)
(36,2,1)
(36,32,1)
(8,17,1)
(2,4,1)
(19,16,1)
(40,12,1)
(10,39,1)
(31,0,1)
(28,36,1)
(17,31,1)
(29,40,1)
(31,27,1)
(28,41,1)
(27,12,1)
(12,35,1)
(27,42,1)
(20,25,1)
(10,29,1)
(11,18,1)
(43,28,1)
(41,36,1)
(0,27,1)
(34,20,1)
(2,10,1)
(42,19,1)
(4,37,1)
(30,33,1)
(23,39,1)
(14,31,1)
(39,30,1)
(27,12,2)
(10,39,2)
(40,31,2)
(20,2,2)
(31,27,2)
(2,10,2)
(28,36,2)
(8,31,2)
(40,12,2)
(36,2,2)
(29,40,2)
(29,31,2)
(10,29,2)
(18,31,2)
(14,31,2)
(17,31,2)
-----------------------------------
(0,NULL)
(1,data)
(2,data = dataCopy)
(3,inputBuffer)
(4,dataCopy)
(5,data)
(6,data)
(7,)
(8,inputBuffer)
(9,)
(10,dataCopy = data)
(11,dataCopy)
(12,inputBuffer[CHAR_ARRAY_SIZE] = "")
(13,dataCopy)
(14,"fgets()
(15,)
(16,inputBuffer)
(17,data)
(18,printLine("fgets()
(19,CHAR_ARRAY_SIZE)
(20,++data)
(21,)
(22,)
(23,inputBuffer)
(24,result)
(25,data)
(26,)
(27,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(28,printIntLine(result)
(29,data = atoi(inputBuffer)
(30,0)
(31,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(32,data)
(33,data)
(34,result)
(35,"")
(36,result = data)
(37,data)
(38,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(39,data = 0)
(40,atoi(inputBuffer)
(41,result)
(42,stdin)
(43,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^