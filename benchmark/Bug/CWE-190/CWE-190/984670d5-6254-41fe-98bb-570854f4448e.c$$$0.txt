-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_postinc_63b_badSink(int * dataPtr)
{
    int data = *dataPtr;
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        int result = data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
18,19
20,21
20,22
20,23
21,22
22,23
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
33,34
34,35
34,36
35,36
37,38
-----nextToken-----
2,4,6,8,9,13,15,19,24,27,29,32,36,38
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_postinc_63b_badSink(int * dataPtr){    int data = *dataPtr;    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int result = data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_max_postinc_63b_badSink(int * dataPtr)
CWE190_Integer_Overflow__int_max_postinc_63b_badSink
int * dataPtr
int
* dataPtr
*
dataPtr
{    int data = *dataPtr;    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int result = data;        printIntLine(result);    }}
int data = *dataPtr;
int data = *dataPtr;
int
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int result = data;        printIntLine(result);    }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(7,4,0)
(5,7,0)
(4,13,0)
(7,0,0)
(1,9,0)
(13,4,0)
(3,0,0)
(4,14,0)
(2,14,0)
(9,4,0)
(0,14,0)
(10,3,0)
(6,7,0)
(16,13,0)
(3,7,0)
(13,15,0)
(12,0,0)
(9,0,0)
(11,4,0)
(3,10,1)
(6,5,1)
(7,6,1)
(5,9,1)
(9,4,1)
(3,7,1)
(4,13,1)
(9,1,1)
(10,7,1)
(1,4,1)
(7,4,1)
(16,11,1)
(8,3,1)
(13,16,1)
(13,15,1)
(3,7,2)
(13,15,2)
(9,4,2)
(4,13,2)
(7,4,2)
-----------------------------------
(0,)
(1,data)
(2,data)
(3,printIntLine(result)
(4,data = *dataPtr)
(5,result)
(6,data)
(7,result = data)
(8,RET)
(9,data++)
(10,result)
(11,data)
(12,result)
(13,*dataPtr)
(14,)
(15,int * dataPtr)
(16,dataPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^