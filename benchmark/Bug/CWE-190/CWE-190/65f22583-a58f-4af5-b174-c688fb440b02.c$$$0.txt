-----label-----
1
-----code-----
static unsigned int badSource(unsigned int data)
{
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%u", &data);
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
11,12
11,13
11,14
11,15
12,13
14,15
17,18
18,19
20,21
21,22
-----nextToken-----
2,4,6,8,13,15,16,19,22
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static unsigned int badSource(unsigned int data){    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    return data;}
static unsigned int
badSource(unsigned int data)
badSource
unsigned int data
unsigned int
data
data
{    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    return data;}
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
return data;
data
data
-----joern-----
(0,6,0)
(1,6,0)
(1,7,0)
(2,9,0)
(9,3,0)
(8,6,0)
(9,7,0)
(6,3,0)
(4,9,0)
(5,1,0)
(6,1,0)
(4,9,1)
(1,5,1)
(9,7,1)
(6,1,1)
(5,0,1)
(0,8,1)
(1,7,1)
(9,2,1)
(2,6,1)
(9,7,2)
(6,1,2)
(4,9,2)
(1,7,2)
-----------------------------------
(0,"%u")
(1,&data)
(2,data)
(3,)
(4,RET)
(5,data)
(6,fscanf (stdin, "%u", &data)
(7,unsigned int data)
(8,stdin)
(9,return data;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^