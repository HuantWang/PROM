-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_postinc_06_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
22,24
23,24
24,25
24,26
26,27
26,28
26,29
28,29
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
35,37
35,38
35,39
36,37
38,39
40,41
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
51,53
52,53
54,55
56,57
57,58
58,59
58,60
59,60
62,63
62,64
63,64
63,65
64,65
67,68
68,69
68,70
68,71
69,70
70,71
71,72
73,74
74,75
74,76
76,77
76,78
78,79
79,80
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,30,32,37,39,41,43,45,50,53,55,60,61,65,66,72,75,77,80,84,86
-----computeFrom-----
12,13
12,14
17,18
17,19
34,35
34,36
48,49
48,50
63,64
63,65
-----guardedBy-----
39,55
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_postinc_06_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_postinc_06_bad()
CWE190_Integer_Overflow__int_fgets_postinc_06_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(16,19,0)
(34,16,0)
(39,27,0)
(12,11,0)
(5,12,0)
(21,27,0)
(42,20,0)
(43,39,0)
(15,27,0)
(40,34,0)
(10,9,0)
(33,23,0)
(34,9,0)
(7,27,0)
(27,17,0)
(27,39,0)
(8,32,0)
(0,2,0)
(16,20,0)
(6,9,0)
(4,2,0)
(17,12,0)
(14,29,0)
(32,18,0)
(26,18,0)
(18,36,0)
(35,16,0)
(32,6,0)
(13,23,0)
(37,12,0)
(6,16,0)
(44,28,0)
(6,18,0)
(38,6,0)
(3,28,0)
(25,17,0)
(34,18,0)
(31,9,0)
(20,16,0)
(29,22,0)
(9,28,0)
(1,17,0)
(30,6,0)
(20,17,0)
(24,28,0)
(30,38,1)
(1,25,1)
(35,39,1)
(38,34,1)
(43,27,1)
(32,8,1)
(6,9,1)
(32,6,1)
(25,2,1)
(6,16,1)
(23,33,1)
(27,15,1)
(0,4,1)
(41,23,1)
(4,9,1)
(42,35,1)
(6,30,1)
(20,42,1)
(13,16,1)
(2,0,1)
(8,6,1)
(39,27,1)
(20,17,1)
(27,17,1)
(21,7,1)
(15,21,1)
(16,20,1)
(34,9,1)
(14,39,1)
(9,31,1)
(40,23,1)
(33,13,1)
(34,16,1)
(17,1,1)
(39,43,1)
(31,10,1)
(7,17,1)
(13,2,1)
(41,32,1)
(13,29,1)
(29,14,1)
(34,40,1)
(21,2,2)
(8,23,2)
(17,2,2)
(34,9,2)
(42,39,2)
(30,23,2)
(20,17,2)
(16,39,2)
(16,20,2)
(34,23,2)
(20,39,2)
(7,2,2)
(27,17,2)
(27,2,2)
(39,27,2)
(29,39,2)
(25,2,2)
(34,16,2)
(6,23,2)
(1,2,2)
(14,39,2)
(35,39,2)
(38,23,2)
(40,23,2)
(6,16,2)
(6,9,2)
(32,6,2)
(43,2,2)
(32,23,2)
(39,2,2)
(15,2,2)
-----------------------------------
(0,5)
(1,"")
(2,STATIC_CONST_FIVE==5)
(3,if(STATIC_CONST_FIVE==5)
(4,STATIC_CONST_FIVE)
(5,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(6,result = data)
(7,inputBuffer)
(8,result)
(9,data = 0)
(10,data)
(11,)
(12,)
(13,STATIC_CONST_FIVE)
(14,"fgets()
(15,stdin)
(16,data = atoi(inputBuffer)
(17,inputBuffer[CHAR_ARRAY_SIZE] = "")
(18,)
(19,)
(20,atoi(inputBuffer)
(21,CHAR_ARRAY_SIZE)
(22,)
(23,STATIC_CONST_FIVE==5)
(24,if(STATIC_CONST_FIVE==5)
(25,inputBuffer)
(26,result)
(27,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(28,)
(29,printLine("fgets()
(30,data)
(31,0)
(32,printIntLine(result)
(33,5)
(34,data++)
(35,data)
(36,)
(37,inputBuffer)
(38,result)
(39,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(40,data)
(41,RET)
(42,inputBuffer)
(43,NULL)
(44,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^