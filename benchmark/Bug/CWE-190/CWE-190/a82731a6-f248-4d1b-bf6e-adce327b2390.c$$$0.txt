-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_add_05_bad()
{
    char data;
    data = ' ';
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            char result = data + 1;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,37,39,43,44,48,50
-----computeFrom-----
12,13
12,14
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_add_05_bad(){    char data;    data = ' ';    if(staticTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_add_05_bad()
CWE190_Integer_Overflow__char_fscanf_add_05_bad
{    char data;    data = ' ';    if(staticTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(staticTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
if(staticTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(8,0,0)
(10,23,0)
(19,10,0)
(20,16,0)
(4,16,0)
(16,4,0)
(16,21,0)
(11,0,0)
(13,21,0)
(9,7,0)
(18,21,0)
(25,4,0)
(10,7,0)
(4,8,0)
(5,8,0)
(7,8,0)
(24,10,0)
(21,2,0)
(1,0,0)
(7,10,0)
(14,0,0)
(22,8,0)
(18,16,0)
(17,4,0)
(3,18,0)
(10,7,1)
(25,17,1)
(17,20,1)
(16,4,1)
(15,8,1)
(20,12,1)
(8,5,1)
(3,16,1)
(12,15,1)
(9,19,1)
(24,15,1)
(18,16,1)
(18,3,1)
(19,24,1)
(12,10,1)
(6,12,1)
(4,25,1)
(6,18,1)
(4,8,1)
(5,22,1)
(7,8,1)
(7,9,1)
(4,8,2)
(10,15,2)
(19,15,2)
(18,12,2)
(16,4,2)
(4,12,2)
(16,12,2)
(20,12,2)
(7,15,2)
(9,15,2)
(3,12,2)
(10,7,2)
(25,12,2)
(24,15,2)
(7,8,2)
(17,12,2)
(18,16,2)
-----------------------------------
(0,)
(1,data)
(2,)
(3,result)
(4,data + 1)
(5,\\\' \\\')
(6,RET)
(7,&data)
(8,data = \\\' \\\')
(9,data)
(10,fscanf (stdin, "%c", &data)
(11,if(staticTrue)
(12,staticTrue)
(13,result)
(14,if(staticTrue)
(15,staticTrue)
(16,result = data + 1)
(17,data)
(18,printHexCharLine(result)
(19,"%c")
(20,result)
(21,)
(22,data)
(23,)
(24,stdin)
(25,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^