-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_postinc_06_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_postinc_06_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_postinc_06_bad()
CWE190_Integer_Overflow__int_fscanf_postinc_06_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(1,9,0)
(29,28,0)
(2,21,0)
(8,12,0)
(18,9,0)
(28,12,0)
(10,5,0)
(14,28,0)
(17,21,0)
(6,20,0)
(25,21,0)
(19,2,0)
(7,9,0)
(13,17,0)
(13,21,0)
(4,17,0)
(23,1,0)
(3,5,0)
(21,15,0)
(27,20,0)
(16,9,0)
(12,28,0)
(24,1,0)
(28,26,0)
(12,1,0)
(11,17,0)
(2,1,0)
(0,13,0)
(17,1,0)
(3,10,1)
(12,8,1)
(10,1,1)
(12,1,1)
(0,17,1)
(14,29,1)
(22,20,1)
(13,0,1)
(5,3,1)
(20,27,1)
(27,6,1)
(13,17,1)
(8,14,1)
(4,11,1)
(19,20,1)
(29,5,1)
(23,24,1)
(2,19,1)
(28,12,1)
(17,4,1)
(6,28,1)
(11,2,1)
(17,1,1)
(1,23,1)
(2,1,1)
(22,13,1)
(6,5,1)
(13,17,2)
(28,12,2)
(2,1,2)
(0,20,2)
(17,20,2)
(8,5,2)
(17,1,2)
(19,20,2)
(28,5,2)
(4,20,2)
(12,1,2)
(11,20,2)
(13,20,2)
(29,5,2)
(12,5,2)
(2,20,2)
(14,5,2)
-----------------------------------
(0,result)
(1,data = 0)
(2,data++)
(3,5)
(4,data)
(5,STATIC_CONST_FIVE==5)
(6,STATIC_CONST_FIVE)
(7,if(STATIC_CONST_FIVE==5)
(8,data)
(9,)
(10,STATIC_CONST_FIVE)
(11,result)
(12,&data)
(13,printIntLine(result)
(14,"%d")
(15,)
(16,data)
(17,result = data)
(18,if(STATIC_CONST_FIVE==5)
(19,data)
(20,STATIC_CONST_FIVE==5)
(21,)
(22,RET)
(23,0)
(24,data)
(25,result)
(26,)
(27,5)
(28,fscanf(stdin, "%d", &data)
(29,stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^