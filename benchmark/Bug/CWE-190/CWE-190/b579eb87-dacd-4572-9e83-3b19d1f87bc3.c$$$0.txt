-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_add_32_bad()
{
    int64_t data;
    int64_t *dataPtr1 = &data;
    int64_t *dataPtr2 = &data;
    data = 0LL;
    {
        int64_t data = *dataPtr1;
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%" SCNd64, &data);
        *dataPtr1 = data;
    }
    {
        int64_t data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int64_t result = data + 1;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
32,33
34,35
35,36
35,37
36,37
39,40
39,41
39,42
40,41
41,42
41,43
42,43
44,45
44,46
46,47
47,48
48,49
50,51
51,52
52,53
52,54
53,54
54,55
56,57
58,59
58,60
59,60
60,61
60,62
61,62
63,64
63,65
65,66
66,67
67,68
69,70
69,71
70,71
71,72
71,73
72,73
74,75
74,76
76,77
77,78
77,79
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,9,11,15,17,18,22,26,28,29,33,37,38,43,45,49,55,57,62,64,68,73,75,79,80,84,86
-----computeFrom-----
35,36
35,37
52,53
52,54
77,78
77,79
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ProblemStatement;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_add_32_bad(){    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_add_32_bad()
CWE190_Integer_Overflow__int64_t_fscanf_add_32_bad
{    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
int64_t *dataPtr1 = &data;
int64_t *dataPtr1 = &data;
int64_t
int64_t
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int64_t *dataPtr2 = &data;
int64_t *dataPtr2 = &data;
int64_t
int64_t
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0LL;
data = 0LL
data
data
0LL
{        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);        *dataPtr1 = data;    }
int64_t data = *dataPtr1;
int64_t data = *dataPtr1;
int64_t
int64_t
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
fscanf (stdin, "%" SCNd64, &data);
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
int64_t data = *dataPtr2;
int64_t data = *dataPtr2;
int64_t
int64_t
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(29,25,0)
(32,2,0)
(1,16,0)
(11,7,0)
(12,3,0)
(36,25,0)
(25,29,0)
(26,17,0)
(28,29,0)
(34,32,0)
(7,3,0)
(32,8,0)
(8,32,0)
(24,8,0)
(7,36,0)
(30,13,0)
(2,16,0)
(27,9,0)
(37,22,0)
(30,9,0)
(22,30,0)
(38,36,0)
(33,25,0)
(29,3,0)
(35,3,0)
(2,31,0)
(18,13,0)
(25,17,0)
(3,16,0)
(21,16,0)
(9,8,0)
(15,2,0)
(17,16,0)
(22,13,0)
(5,12,0)
(31,2,0)
(14,16,0)
(13,14,0)
(9,30,0)
(23,16,0)
(0,9,0)
(19,14,0)
(36,17,0)
(8,14,0)
(4,16,0)
(20,30,0)
(3,12,0)
(10,31,0)
(38,7,1)
(27,20,1)
(3,12,1)
(12,5,1)
(29,28,1)
(25,29,1)
(7,3,1)
(22,30,1)
(6,22,1)
(11,25,1)
(29,3,1)
(30,9,1)
(33,4,1)
(24,36,1)
(32,2,1)
(8,32,1)
(34,24,1)
(31,10,1)
(20,8,1)
(0,27,1)
(32,34,1)
(36,25,1)
(36,38,1)
(2,31,1)
(37,30,1)
(10,15,1)
(22,37,1)
(7,11,1)
(9,0,1)
(15,3,1)
(5,35,1)
(4,2,1)
(28,33,1)
(9,8,1)
(25,29,2)
(3,12,2)
(36,25,2)
(29,3,2)
(9,8,2)
(7,3,2)
(2,31,2)
(8,32,2)
(32,2,2)
(30,9,2)
(22,30,2)
-----------------------------------
(0,1)
(1,dataPtr2)
(2,*dataPtr2 = &data)
(3,*dataPtr1 = &data)
(4,L)
(5,data)
(6,RET)
(7,*dataPtr1)
(8,data = *dataPtr2)
(9,data + 1)
(10,data)
(11,dataPtr1)
(12,&data)
(13,)
(14,)
(15,dataPtr2)
(16,)
(17,)
(18,result)
(19,data)
(20,result)
(21,dataPtr1)
(22,printLongLongLine(result)
(23,data)
(24,data)
(25,data = *dataPtr1)
(26,data)
(27,data)
(28,dataPtr1)
(29,*dataPtr1)
(30,result = data + 1)
(31,&data)
(32,*dataPtr2)
(33,data)
(34,dataPtr2)
(35,dataPtr1)
(36,*dataPtr1 = data)
(37,result)
(38,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^