-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_multiply_18_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    goto source;
source:
    /* POTENTIAL FLAW: Set data to a random value */
    data = RAND32();
    goto sink;
sink:
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */
        int result = data * 2;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
22,23
24,25
25,26
27,28
29,30
29,31
31,32
31,33
32,33
32,34
33,34
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,17,19,23,26,28,30,34,35,39,41,45,46,50,52
-----computeFrom-----
12,13
12,14
21,22
21,23
32,33
32,34
43,44
43,45
-----guardedBy-----
34,45
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_multiply_18_bad(){    int data;    /* Initialize data */    data = 0;    goto source;source:    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    goto sink;sink:    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_rand_multiply_18_bad()
CWE190_Integer_Overflow__int_rand_multiply_18_bad
{    int data;    /* Initialize data */    data = 0;    goto source;source:    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    goto sink;sink:    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();
source
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
goto sink;
sink
sink:    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }
sink
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }
int result = data * 2;
int result = data * 2;
int
result = data * 2
result
= data * 2
data * 2
data
data
2
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(17,10,0)
(20,3,0)
(2,20,0)
(18,20,0)
(24,10,0)
(20,7,0)
(0,25,0)
(18,3,0)
(15,1,0)
(7,20,0)
(9,12,0)
(7,10,0)
(16,25,0)
(14,3,0)
(5,1,0)
(21,18,0)
(6,1,0)
(10,1,0)
(12,1,0)
(4,12,0)
(22,7,0)
(8,1,0)
(23,7,0)
(25,10,0)
(10,17,0)
(13,1,0)
(11,1,0)
(17,24,1)
(15,12,1)
(16,0,1)
(12,4,1)
(25,10,1)
(7,22,1)
(24,15,1)
(10,17,1)
(19,18,1)
(0,13,1)
(25,16,1)
(20,7,1)
(19,25,1)
(22,23,1)
(13,10,1)
(18,20,1)
(4,9,1)
(7,10,1)
(21,20,1)
(18,21,1)
(23,2,1)
(2,25,1)
(7,10,2)
(25,10,2)
(21,25,2)
(22,25,2)
(18,20,2)
(20,7,2)
(18,25,2)
(7,25,2)
(10,17,2)
(2,25,2)
(23,25,2)
(20,25,2)
-----------------------------------
(0,data)
(1,)
(2,result)
(3,)
(4,0)
(5,source:)
(6,sink:)
(7,data * 2)
(8,if(data > 0)
(9,data)
(10,data = RAND32()
(11,data)
(12,data = 0)
(13,goto sink;)
(14,result)
(15,goto source;)
(16,0)
(17,RAND32()
(18,printIntLine(result)
(19,RET)
(20,result = data * 2)
(21,result)
(22,2)
(23,data)
(24,data)
(25,data > 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^