-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_add_01_bad()
{
    int64_t data;
    data = 0LL;
    /* POTENTIAL FLAW: Use a random value */
    data = (int64_t)RAND64();
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        int64_t result = data + 1;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
18,19
18,20
19,20
21,22
21,23
22,23
22,24
23,24
26,27
27,28
29,30
29,31
30,31
31,32
31,33
32,33
34,35
34,36
36,37
37,38
37,39
38,39
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,9,11,15,16,20,24,25,28,33,35,39,40,44,46
-----computeFrom-----
13,14
13,15
18,19
18,20
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_add_01_bad(){    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int64_t result = data + 1;        printLongLongLine(result);    }}
void
CWE190_Integer_Overflow__int64_t_rand_add_01_bad()
CWE190_Integer_Overflow__int64_t_rand_add_01_bad
{    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int64_t result = data + 1;        printLongLongLine(result);    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int64_t result = data + 1;        printLongLongLine(result);    }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(14,12,0)
(5,8,0)
(7,5,0)
(9,14,0)
(0,14,0)
(17,8,0)
(10,16,0)
(4,12,0)
(4,14,0)
(8,16,0)
(12,16,0)
(3,16,0)
(6,5,0)
(8,5,0)
(2,0,0)
(1,4,0)
(15,0,0)
(5,7,0)
(5,6,0)
(11,12,0)
(0,8,0)
(14,0,0)
(6,17,1)
(5,6,1)
(0,8,1)
(1,14,1)
(4,1,1)
(4,14,1)
(15,9,1)
(14,0,1)
(17,10,1)
(2,15,1)
(8,5,1)
(0,2,1)
(13,4,1)
(5,7,1)
(9,8,1)
(5,6,2)
(5,7,2)
(4,14,2)
(0,8,2)
(8,5,2)
(14,0,2)
-----------------------------------
(0,data + 1)
(1,result)
(2,1)
(3,data)
(4,printLongLongLine(result)
(5,(int64_t)
(6,RAND64()
(7,int64_t)
(8,data = (int64_t)
(9,result)
(10,L)
(11,result)
(12,)
(13,RET)
(14,result = data + 1)
(15,data)
(16,)
(17,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^