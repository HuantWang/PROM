-----label-----
1
-----code-----
int CWE190_Integer_Overflow__int_fscanf_preinc_61b_badSource(int data)
{
    /* POTENTIAL FLAW: Read data from the console using fscanf() */
    fscanf(stdin, "%d", &data);
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
11,12
11,13
11,14
11,15
12,13
14,15
17,18
18,19
20,21
21,22
-----nextToken-----
2,4,6,8,13,15,16,19,22
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
int CWE190_Integer_Overflow__int_fscanf_preinc_61b_badSource(int data){    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    return data;}
int
CWE190_Integer_Overflow__int_fscanf_preinc_61b_badSource(int data)
CWE190_Integer_Overflow__int_fscanf_preinc_61b_badSource
int data
int
data
data
{    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    return data;}
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
return data;
data
data
-----joern-----
(6,1,0)
(9,6,0)
(5,0,0)
(5,1,0)
(7,0,0)
(8,5,0)
(7,6,0)
(6,7,0)
(4,7,0)
(2,7,0)
(3,5,0)
(6,1,1)
(4,2,1)
(7,6,1)
(5,3,1)
(8,5,1)
(3,7,1)
(5,1,1)
(6,9,1)
(9,4,1)
(7,6,2)
(6,1,2)
(5,1,2)
(8,5,2)
-----------------------------------
(0,)
(1,int data)
(2,stdin)
(3,data)
(4,"%d")
(5,return data;)
(6,&data)
(7,fscanf(stdin, "%d", &data)
(8,RET)
(9,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^