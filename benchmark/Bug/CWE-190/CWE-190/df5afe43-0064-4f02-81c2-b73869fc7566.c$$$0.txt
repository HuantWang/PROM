-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_add_03_bad()
{
    int64_t data;
    data = 0LL;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%" SCNd64, &data);
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int64_t result = data + 1;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
18,20
21,22
22,23
23,24
23,25
24,25
24,26
27,28
28,29
28,30
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
40,41
41,42
41,43
42,43
44,45
-----nextToken-----
2,4,9,11,15,16,19,20,25,26,32,34,38,39,43,45
-----computeFrom-----
13,14
13,15
18,19
18,20
24,25
24,26
36,37
36,38
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ProblemStatement;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_add_03_bad(){    int64_t data;    data = 0LL;    if(5==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_add_03_bad()
CWE190_Integer_Overflow__int64_t_fscanf_add_03_bad
{    int64_t data;    data = 0LL;    if(5==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(5==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
5==5
5
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
fscanf (stdin, "%" SCNd64, &data);
if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(8,4,0)
(4,6,0)
(17,21,0)
(7,6,0)
(14,21,0)
(6,4,0)
(5,18,0)
(19,20,0)
(10,21,0)
(16,6,0)
(0,5,0)
(4,5,0)
(9,4,0)
(8,5,0)
(2,8,0)
(11,21,0)
(13,15,0)
(3,20,0)
(1,15,0)
(2,4,1)
(20,3,1)
(16,7,1)
(8,4,1)
(8,2,1)
(13,1,1)
(12,20,1)
(15,13,1)
(9,20,1)
(6,16,1)
(7,9,1)
(4,6,1)
(12,8,1)
(19,15,1)
(3,19,1)
(1,14,1)
(9,20,2)
(8,20,2)
(4,20,2)
(2,20,2)
(6,20,2)
(8,4,2)
(16,20,2)
(7,20,2)
(4,6,2)
-----------------------------------
(0,result)
(1,5)
(2,result)
(3,5)
(4,result = data + 1)
(5,)
(6,data + 1)
(7,data)
(8,printLongLongLine(result)
(9,result)
(10,if(5==5)
(11,if(5==5)
(12,RET)
(13,5)
(14,L)
(15,5==5)
(16,1)
(17,data)
(18,)
(19,5)
(20,5==5)
(21,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^