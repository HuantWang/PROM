-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_postinc_42_bad()
{
    char data;
    data = ' ';
    data = badSource(data);
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        char result = data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
23,24
25,26
25,27
25,28
26,27
27,28
28,29
30,31
31,32
31,33
33,34
33,35
35,36
36,37
38,39
39,40
39,41
40,41
42,43
-----nextToken-----
2,4,8,10,14,15,19,22,24,29,32,34,37,41,43
-----computeFrom-----
12,13
12,14
17,18
17,19
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_postinc_42_bad(){    char data;    data = ' ';    data = badSource(data);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_fscanf_postinc_42_bad()
CWE190_Integer_Overflow__char_fscanf_postinc_42_bad
{    char data;    data = ' ';    data = badSource(data);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }
data++;
data++
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(5,12,0)
(1,6,0)
(15,12,0)
(18,7,0)
(7,8,0)
(2,8,0)
(12,7,0)
(19,4,0)
(16,6,0)
(6,4,0)
(11,13,0)
(6,1,0)
(12,1,0)
(5,7,0)
(13,1,0)
(13,7,0)
(1,8,0)
(14,4,0)
(0,5,0)
(4,8,0)
(9,1,0)
(17,12,0)
(16,9,1)
(6,4,1)
(17,15,1)
(12,17,1)
(11,1,1)
(9,4,1)
(5,12,1)
(13,11,1)
(0,12,1)
(4,14,1)
(1,6,1)
(12,1,1)
(14,19,1)
(15,13,1)
(5,0,1)
(13,1,1)
(3,5,1)
(6,16,1)
(12,1,2)
(1,6,2)
(6,4,2)
(13,1,2)
(5,12,2)
-----------------------------------
(0,result)
(1,data = badSource(data)
(2,data)
(3,RET)
(4,data = \' \')
(5,printHexCharLine(result)
(6,badSource(data)
(7,)
(8,)
(9,data)
(10,data = ' ')
(11,data)
(12,result = data)
(13,data++)
(14,' ')
(15,result)
(16,data)
(17,data)
(18,result)
(19,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^