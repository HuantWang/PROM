-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_rand_multiply_13_bad()
{
    char data;
    data = ' ';
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (char)RAND32();
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */
            char result = data * 2;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
40,41
40,42
41,42
44,45
44,46
45,46
46,47
46,48
48,49
48,50
50,51
51,52
51,53
52,53
55,56
56,57
56,58
57,58
59,60
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,42,43,47,49,53,54,58,60
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
40,41
40,42
51,52
51,53
-----guardedBy-----
42,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_rand_multiply_13_bad(){    char data;    data = ' ';    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (char)RAND32();    }    if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_rand_multiply_13_bad()
CWE190_Integer_Overflow__char_rand_multiply_13_bad
{    char data;    data = ' ';    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (char)RAND32();    }    if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (char)RAND32();    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (char)RAND32();    }
data = (char)RAND32();
data = (char)RAND32()
data
data
(char)RAND32()
char
char

RAND32()
RAND32
RAND32
if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }
char result = data * 2;
char result = data * 2;
char
result = data * 2
result
= data * 2
data * 2
data
data
2
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(31,1,0)
(1,26,0)
(14,17,0)
(0,26,0)
(10,4,0)
(32,24,0)
(33,0,0)
(27,8,0)
(9,16,0)
(25,4,0)
(30,16,0)
(5,8,0)
(18,21,0)
(7,1,0)
(34,27,0)
(19,16,0)
(1,7,0)
(12,10,0)
(6,8,0)
(26,15,0)
(20,21,0)
(22,17,0)
(10,27,0)
(10,26,0)
(2,10,0)
(23,5,0)
(11,0,0)
(26,1,0)
(5,27,0)
(1,31,0)
(4,16,0)
(29,26,0)
(0,4,0)
(13,4,0)
(27,10,0)
(20,17,1)
(27,10,1)
(26,1,1)
(17,14,1)
(18,20,1)
(29,17,1)
(11,33,1)
(33,21,1)
(14,22,1)
(20,26,1)
(10,26,1)
(25,13,1)
(1,31,1)
(12,34,1)
(23,27,1)
(10,2,1)
(5,27,1)
(10,4,1)
(4,25,1)
(0,11,1)
(2,12,1)
(3,0,1)
(3,21,1)
(22,4,1)
(1,7,1)
(21,18,1)
(0,26,1)
(0,4,1)
(5,23,1)
(3,5,1)
(7,29,1)
(34,0,1)
(5,27,2)
(27,0,2)
(26,1,2)
(34,0,2)
(10,4,2)
(1,31,2)
(0,21,2)
(1,7,2)
(33,21,2)
(0,4,2)
(27,10,2)
(26,17,2)
(29,17,2)
(10,0,2)
(23,0,2)
(12,0,2)
(5,0,2)
(10,26,2)
(7,17,2)
(1,17,2)
(2,0,2)
(11,21,2)
(0,26,2)
-----------------------------------
(0,data > 0)
(1,(char)
(2,2)
(3,RET)
(4,data = ' ')
(5,printHexCharLine(result)
(6,result)
(7,RAND32()
(8,)
(9,data)
(10,data * 2)
(11,0)
(12,data)
(13,data)
(14,5)
(15,)
(16,)
(17,GLOBAL_CONST_FIVE==5)
(18,5)
(19,if(GLOBAL_CONST_FIVE==5)
(20,GLOBAL_CONST_FIVE)
(21,GLOBAL_CONST_FIVE==5)
(22,GLOBAL_CONST_FIVE)
(23,result)
(24,)
(25,' ')
(26,data = (char)
(27,result = data * 2)
(28,data = \' \')
(29,data)
(30,if(GLOBAL_CONST_FIVE==5)
(31,char)
(32,if(data > 0)
(33,data)
(34,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^