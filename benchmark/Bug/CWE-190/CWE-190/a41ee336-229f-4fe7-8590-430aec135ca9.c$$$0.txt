-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_preinc_03_bad()
{
    int64_t data;
    data = 0LL;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%" SCNd64, &data);
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
18,20
21,22
22,23
23,24
23,25
24,25
24,26
27,28
28,29
28,30
28,31
29,30
30,31
31,32
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,9,11,15,16,19,20,25,26,32,36,38,41,45,47
-----computeFrom-----
13,14
13,15
18,19
18,20
24,25
24,26
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ProblemStatement;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_preinc_03_bad(){    int64_t data;    data = 0LL;    if(5==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_preinc_03_bad()
CWE190_Integer_Overflow__int64_t_fscanf_preinc_03_bad
{    int64_t data;    data = 0LL;    if(5==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(5==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
5==5
5
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
fscanf (stdin, "%" SCNd64, &data);
if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(11,9,0)
(2,17,0)
(10,5,0)
(13,9,0)
(18,14,0)
(3,9,0)
(5,16,0)
(6,10,0)
(20,0,0)
(19,5,0)
(1,5,0)
(8,14,0)
(12,9,0)
(21,19,0)
(7,10,0)
(17,5,0)
(15,0,0)
(19,10,0)
(8,18,1)
(18,0,1)
(4,14,1)
(4,19,1)
(6,7,1)
(21,10,1)
(7,17,1)
(10,6,1)
(2,14,1)
(20,13,1)
(0,15,1)
(17,2,1)
(15,20,1)
(19,21,1)
(14,8,1)
(19,10,1)
(19,10,2)
(21,14,2)
(2,14,2)
(6,14,2)
(10,14,2)
(17,14,2)
(19,14,2)
(7,14,2)
-----------------------------------
(0,5==5)
(1,result)
(2,data)
(3,data)
(4,RET)
(5,)
(6,data)
(7,result)
(8,5)
(9,)
(10,result = data)
(11,if(5==5)
(12,if(5==5)
(13,L)
(14,5==5)
(15,5)
(16,)
(17,++data)
(18,5)
(19,printLongLongLine(result)
(20,5)
(21,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^