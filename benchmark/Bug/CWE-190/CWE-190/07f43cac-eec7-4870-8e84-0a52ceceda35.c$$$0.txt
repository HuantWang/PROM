-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_square_63b_badSink(int * dataPtr)
{
    int data = *dataPtr;
    {
        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
        int result = data * data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
18,19
20,21
20,22
21,22
22,23
22,24
24,25
24,26
26,27
27,28
27,29
28,29
30,31
32,33
33,34
33,35
34,35
36,37
-----nextToken-----
2,4,6,8,9,13,15,19,23,25,29,31,35,37
-----computeFrom-----
27,28
27,29
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_square_63b_badSink(int * dataPtr){    int data = *dataPtr;    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_rand_square_63b_badSink(int * dataPtr)
CWE190_Integer_Overflow__int_rand_square_63b_badSink
int * dataPtr
int
* dataPtr
*
dataPtr
{    int data = *dataPtr;    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
int data = *dataPtr;
int data = *dataPtr;
int
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(15,5,0)
(7,4,0)
(9,5,0)
(9,1,0)
(3,9,0)
(1,16,0)
(10,16,0)
(11,16,0)
(8,1,0)
(5,15,0)
(0,5,0)
(5,4,0)
(16,4,0)
(1,9,0)
(6,15,0)
(15,12,0)
(11,1,0)
(2,9,0)
(14,11,0)
(13,11,1)
(2,3,1)
(6,0,1)
(8,5,1)
(11,1,1)
(9,2,1)
(1,9,1)
(3,8,1)
(5,15,1)
(15,12,1)
(9,5,1)
(11,14,1)
(14,1,1)
(15,6,1)
(11,1,2)
(15,12,2)
(5,15,2)
(1,9,2)
(9,5,2)
-----------------------------------
(0,data)
(1,result = data * data)
(2,data)
(3,data)
(4,)
(5,data = *dataPtr)
(6,dataPtr)
(7,data)
(8,result)
(9,data * data)
(10,result)
(11,printIntLine(result)
(12,int * dataPtr)
(13,RET)
(14,result)
(15,*dataPtr)
(16,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^