-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_preinc_31_bad()
{
    short data;
    data = 0;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%hd", &data);
    {
        short dataCopy = data;
        short data = dataCopy;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
24,25
26,27
26,28
26,29
27,28
28,29
28,30
30,31
30,32
32,33
33,34
35,36
36,37
36,38
38,39
38,40
40,41
41,42
43,44
43,45
43,46
44,45
45,46
46,47
48,49
49,50
49,51
51,52
51,53
53,54
54,55
56,57
57,58
57,59
58,59
60,61
-----nextToken-----
2,4,8,10,14,15,19,21,22,25,29,31,34,37,39,42,47,50,52,55,59,61
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_preinc_31_bad(){    short data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%hd", &data);    {        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_preinc_31_bad()
CWE190_Integer_Overflow__short_fscanf_preinc_31_bad
{    short data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%hd", &data);    {        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
short dataCopy = data;
short dataCopy = data;
short
dataCopy = data
dataCopy
= data
data
data
short data = dataCopy;
short data = dataCopy;
short
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(4,12,0)
(1,21,0)
(17,12,0)
(15,24,0)
(24,5,0)
(23,25,0)
(27,7,0)
(3,9,0)
(11,12,0)
(1,25,0)
(0,21,0)
(8,21,0)
(11,24,0)
(6,9,0)
(20,24,0)
(4,7,0)
(7,5,0)
(22,25,0)
(2,12,0)
(21,24,0)
(9,25,0)
(7,4,0)
(25,11,0)
(26,5,0)
(28,11,0)
(16,11,0)
(25,24,0)
(19,1,0)
(9,21,0)
(13,4,0)
(10,7,0)
(12,5,0)
(14,8,0)
(8,9,0)
(1,19,1)
(8,14,1)
(10,27,1)
(27,12,1)
(3,1,1)
(2,17,1)
(1,25,1)
(4,13,1)
(25,23,1)
(6,3,1)
(7,4,1)
(4,12,1)
(9,25,1)
(11,28,1)
(22,11,1)
(16,7,1)
(23,22,1)
(19,25,1)
(8,9,1)
(13,10,1)
(12,2,1)
(28,16,1)
(14,9,1)
(9,6,1)
(18,8,1)
(25,11,1)
(11,12,1)
(4,12,2)
(7,4,2)
(8,9,2)
(25,11,2)
(1,25,2)
(11,12,2)
(9,25,2)
-----------------------------------
(0,result)
(1,++data)
(2,0)
(3,result)
(4,&data)
(5,)
(6,data)
(7,fscanf (stdin, "%hd", &data)
(8,printIntLine(result)
(9,result = data)
(10,"%hd")
(11,dataCopy = data)
(12,data = 0)
(13,data)
(14,result)
(15,dataCopy)
(16,dataCopy)
(17,data)
(18,RET)
(19,data)
(20,data)
(21,)
(22,data)
(23,dataCopy)
(24,)
(25,data = dataCopy)
(26,data)
(27,stdin)
(28,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^