-----label-----
1
-----code-----
static void badSink(short data)
{
    if(badStatic)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
13,14
14,15
14,16
14,17
15,16
16,17
17,18
19,20
20,21
20,22
22,23
22,24
24,25
25,26
27,28
28,29
28,30
29,30
31,32
-----nextToken-----
2,4,6,8,12,18,21,23,26,30,32
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(short data){    if(badStatic)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
static void
badSink(short data)
badSink
short data
short
data
data
{    if(badStatic)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
if(badStatic)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
badStatic
badStatic
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(3,11,0)
(1,3,0)
(6,3,0)
(13,3,0)
(13,14,0)
(0,14,0)
(7,4,0)
(1,13,0)
(9,13,0)
(0,3,0)
(2,13,0)
(8,1,0)
(10,0,0)
(5,1,1)
(1,8,1)
(5,12,1)
(0,14,1)
(13,2,1)
(1,13,1)
(2,9,1)
(9,0,1)
(10,12,1)
(0,10,1)
(8,13,1)
(13,14,1)
(8,12,2)
(0,12,2)
(2,12,2)
(9,12,2)
(0,14,2)
(1,13,2)
(13,12,2)
(13,14,2)
(10,12,2)
(1,12,2)
-----------------------------------
(0,++data)
(1,printIntLine(result)
(2,data)
(3,)
(4,)
(5,RET)
(6,result)
(7,if(badStatic)
(8,result)
(9,result)
(10,data)
(11,)
(12,badStatic)
(13,result = data)
(14,short data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^