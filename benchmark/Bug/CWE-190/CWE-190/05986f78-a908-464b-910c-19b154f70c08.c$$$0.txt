-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_add_18_bad()
{
    char data;
    data = ' ';
    goto source;
source:
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = CHAR_MAX;
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        char result = data + 1;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
22,23
24,25
26,27
28,29
28,30
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,27,29,33,35,39,40,44,46
-----computeFrom-----
12,13
12,14
21,22
21,23
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_add_18_bad(){    char data;    data = ' ';    goto source;source:    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    goto sink;sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_max_add_18_bad()
CWE190_Integer_Overflow__char_max_add_18_bad
{    char data;    data = ' ';    goto source;source:    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    goto sink;sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
goto source;
source
source:    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;
source
data = CHAR_MAX;
data = CHAR_MAX
data
data
CHAR_MAX
CHAR_MAX
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }
sink
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(12,2,0)
(1,20,0)
(15,6,0)
(0,8,0)
(9,20,0)
(1,21,0)
(13,8,0)
(16,8,0)
(11,1,0)
(5,13,0)
(17,8,0)
(3,1,0)
(18,13,0)
(14,8,0)
(19,8,0)
(20,8,0)
(6,2,0)
(4,20,0)
(21,2,0)
(21,1,0)
(7,21,0)
(6,21,0)
(2,8,0)
(1,11,1)
(5,18,1)
(9,14,1)
(6,21,1)
(11,3,1)
(10,6,1)
(14,13,1)
(3,7,1)
(13,5,1)
(7,19,1)
(21,1,1)
(20,4,1)
(6,15,1)
(19,20,1)
(15,21,1)
(1,20,1)
(4,9,1)
(21,1,2)
(6,21,2)
(1,20,2)
-----------------------------------
(0,data)
(1,data + 1)
(2,)
(3,data)
(4,CHAR_MAX)
(5,' ')
(6,printHexCharLine(result)
(7,result)
(8,)
(9,data)
(10,RET)
(11,1)
(12,result)
(13,data = ' ')
(14,goto source;)
(15,result)
(16,source:)
(17,sink:)
(18,data)
(19,goto sink;)
(20,data = CHAR_MAX)
(21,result = data + 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^