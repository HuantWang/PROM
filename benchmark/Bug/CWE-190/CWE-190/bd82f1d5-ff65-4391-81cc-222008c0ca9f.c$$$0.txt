-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_add_08_bad()
{
    unsigned int data;
    data = 0;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,39,41,45,46,50,52
-----computeFrom-----
12,13
12,14
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_add_08_bad(){    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_add_08_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_add_08_bad
{    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(2,4,0)
(22,16,0)
(1,21,0)
(10,21,0)
(12,4,0)
(20,0,0)
(4,16,0)
(3,1,0)
(16,14,0)
(1,5,0)
(12,16,0)
(19,8,0)
(0,4,0)
(23,0,0)
(5,24,0)
(17,21,0)
(11,8,0)
(5,1,0)
(15,5,0)
(0,21,0)
(7,12,0)
(25,8,0)
(6,5,0)
(21,8,0)
(4,0,0)
(21,10,1)
(12,7,1)
(9,5,1)
(15,6,1)
(12,4,1)
(23,2,1)
(5,1,1)
(9,13,1)
(1,21,1)
(4,0,1)
(18,9,1)
(20,23,1)
(18,12,1)
(0,20,1)
(0,21,1)
(2,9,1)
(13,21,1)
(7,4,1)
(6,13,1)
(3,15,1)
(10,17,1)
(1,3,1)
(2,9,2)
(0,9,2)
(6,13,2)
(7,9,2)
(3,13,2)
(20,9,2)
(12,9,2)
(1,21,2)
(5,1,2)
(15,13,2)
(4,9,2)
(23,9,2)
(12,4,2)
(5,13,2)
(1,13,2)
(4,0,2)
(0,21,2)
-----------------------------------
(0,data + 1)
(1,&data)
(2,result)
(3,data)
(4,result = data + 1)
(5,fscanf (stdin, "%u", &data)
(6,stdin)
(7,result)
(8,)
(9,staticReturnsTrue()
(10,0)
(11,if(staticReturnsTrue()
(12,printUnsignedLine(result)
(13,staticReturnsTrue()
(14,)
(15,"%u")
(16,)
(17,data)
(18,RET)
(19,if(staticReturnsTrue()
(20,1)
(21,data = 0)
(22,result)
(23,data)
(24,)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^