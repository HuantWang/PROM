-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_add_66b_badSink(int dataArray[])
{
    /* copy data out of dataArray */
    int data = dataArray[2];
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        int result = data + 1;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
22,23
23,24
23,25
25,26
25,27
27,28
28,29
28,30
29,30
32,33
33,34
33,35
34,35
36,37
-----nextToken-----
2,4,6,8,9,13,15,19,20,24,26,30,31,35,37
-----computeFrom-----
28,29
28,30
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_add_66b_badSink(int dataArray[]){    /* copy data out of dataArray */    int data = dataArray[2];    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_rand_add_66b_badSink(int dataArray[])
CWE190_Integer_Overflow__int_rand_add_66b_badSink
int dataArray[]
int
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    int data = dataArray[2];    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
int data = dataArray[2];
int data = dataArray[2];
int
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(4,14,0)
(10,9,0)
(13,9,0)
(6,4,0)
(8,16,0)
(0,14,0)
(9,17,0)
(14,4,0)
(9,1,0)
(15,3,0)
(3,16,0)
(17,16,0)
(2,14,0)
(14,3,0)
(12,17,0)
(17,9,0)
(5,4,0)
(11,0,0)
(4,17,0)
(0,3,0)
(7,0,1)
(4,17,1)
(0,11,1)
(14,4,1)
(17,9,1)
(0,14,1)
(9,1,1)
(6,5,1)
(2,17,1)
(11,14,1)
(4,6,1)
(9,10,1)
(13,12,1)
(5,2,1)
(10,13,1)
(4,17,2)
(9,1,2)
(14,4,2)
(17,9,2)
(0,14,2)
-----------------------------------
(0,printIntLine(result)
(1,int dataArray[])
(2,result)
(3,)
(4,data + 1)
(5,data)
(6,1)
(7,RET)
(8,data)
(9,dataArray[2])
(10,2)
(11,result)
(12,data)
(13,dataArray)
(14,result = data + 1)
(15,result)
(16,)
(17,data = dataArray[2])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^