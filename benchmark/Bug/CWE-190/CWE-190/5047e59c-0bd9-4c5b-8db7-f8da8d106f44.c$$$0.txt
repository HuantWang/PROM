-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_square_04_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(STATIC_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
            int result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,33,35,39,41,45,47
-----computeFrom-----
12,13
12,14
21,22
21,23
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_square_04_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_square_04_bad()
CWE190_Integer_Overflow__int_max_square_04_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(19,7,0)
(11,19,0)
(10,22,0)
(3,7,0)
(18,7,0)
(7,19,0)
(21,23,0)
(6,3,0)
(4,22,0)
(14,19,0)
(7,13,0)
(2,9,0)
(5,9,0)
(3,13,0)
(1,23,0)
(15,9,0)
(19,22,0)
(17,13,0)
(23,9,0)
(22,0,0)
(19,23,0)
(13,12,0)
(14,11,1)
(19,22,1)
(19,14,1)
(7,19,1)
(10,8,1)
(3,6,1)
(11,18,1)
(8,23,1)
(6,7,1)
(23,21,1)
(16,22,1)
(4,10,1)
(16,8,1)
(21,1,1)
(3,7,1)
(20,16,1)
(18,16,1)
(22,4,1)
(19,23,1)
(20,3,1)
(18,16,2)
(19,23,2)
(22,8,2)
(14,16,2)
(19,16,2)
(10,8,2)
(4,8,2)
(7,16,2)
(19,22,2)
(3,16,2)
(6,16,2)
(11,16,2)
(7,19,2)
(3,7,2)
-----------------------------------
(0,)
(1,data)
(2,if(STATIC_CONST_TRUE)
(3,printIntLine(result)
(4,INT_MAX)
(5,if(STATIC_CONST_TRUE)
(6,result)
(7,result = data * data)
(8,STATIC_CONST_TRUE)
(9,)
(10,data)
(11,data)
(12,)
(13,)
(14,data)
(15,data)
(16,STATIC_CONST_TRUE)
(17,result)
(18,result)
(19,data * data)
(20,RET)
(21,0)
(22,data = INT_MAX)
(23,data = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^