-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_preinc_04_bad()
{
    unsigned int data;
    data = 0;
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(STATIC_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
30,31
30,32
30,33
31,32
32,33
33,34
35,36
36,37
36,38
38,39
38,40
40,41
41,42
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,34,37,39,42,46,48
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_preinc_04_bad(){    unsigned int data;    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_preinc_04_bad()
CWE190_Integer_Overflow__unsigned_int_max_preinc_04_bad
{    unsigned int data;    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(13,15,0)
(10,14,0)
(2,17,0)
(3,9,0)
(12,11,0)
(19,9,0)
(17,14,0)
(19,15,0)
(8,17,0)
(16,4,0)
(23,14,0)
(9,21,0)
(4,15,0)
(15,7,0)
(18,15,0)
(4,17,0)
(4,9,0)
(11,9,0)
(11,4,0)
(19,17,0)
(0,4,0)
(20,14,0)
(1,19,0)
(13,5,1)
(11,4,1)
(4,15,1)
(8,2,1)
(0,19,1)
(5,17,1)
(6,5,1)
(6,15,1)
(4,17,1)
(11,12,1)
(22,11,1)
(17,8,1)
(18,13,1)
(19,17,1)
(15,18,1)
(19,15,1)
(1,6,1)
(16,0,1)
(19,1,1)
(22,6,1)
(4,16,1)
(12,4,1)
(4,15,2)
(15,5,2)
(19,6,2)
(4,6,2)
(19,17,2)
(18,5,2)
(4,17,2)
(12,6,2)
(13,5,2)
(19,15,2)
(11,4,2)
(0,6,2)
(16,6,2)
(1,6,2)
(11,6,2)
-----------------------------------
(0,result)
(1,data)
(2,data)
(3,result)
(4,result = data)
(5,STATIC_CONST_TRUE)
(6,STATIC_CONST_TRUE)
(7,)
(8,0)
(9,)
(10,if(STATIC_CONST_TRUE)
(11,printUnsignedLine(result)
(12,result)
(13,data)
(14,)
(15,data = UINT_MAX)
(16,data)
(17,data = 0)
(18,UINT_MAX)
(19,++data)
(20,if(STATIC_CONST_TRUE)
(21,)
(22,RET)
(23,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^