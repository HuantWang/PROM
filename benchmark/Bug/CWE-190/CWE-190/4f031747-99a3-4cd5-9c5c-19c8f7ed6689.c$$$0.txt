-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_postinc_44_bad()
{
    int data;
    /* define a function pointer */
    void (*funcPtr) (int) = badSink;
    /* Initialize data */
    data = 0;
    /* POTENTIAL FLAW: Set data to a random value */
    data = RAND32();
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
15,16
15,17
18,19
18,20
20,21
22,23
23,24
25,26
26,27
26,28
27,28
30,31
31,32
31,33
32,33
34,35
35,36
37,38
38,39
38,40
39,40
41,42
-----nextToken-----
2,4,8,10,13,16,17,19,21,24,28,29,33,36,40,42
-----computeFrom-----
26,27
26,28
31,32
31,33
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_postinc_44_bad(){    int data;    /* define a function pointer */    void (*funcPtr) (int) = badSink;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    /* use the function pointer */    funcPtr(data);}
void
CWE190_Integer_Overflow__int_rand_postinc_44_bad()
CWE190_Integer_Overflow__int_rand_postinc_44_bad
{    int data;    /* define a function pointer */    void (*funcPtr) (int) = badSink;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    /* use the function pointer */    funcPtr(data);}
int data;
int data;
int
data
data
void (*funcPtr) (int) = badSink;
void (*funcPtr) (int) = badSink;
void
(*funcPtr) (int) = badSink
*funcPtr
*
funcPtr
int
int


= badSink
badSink
badSink
data = 0;
data = 0
data
data
0
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(4,1,0)
(8,3,0)
(2,7,0)
(5,14,0)
(3,8,0)
(6,14,0)
(1,7,0)
(14,7,0)
(13,3,0)
(10,7,0)
(3,7,0)
(9,3,0)
(0,9,0)
(11,1,0)
(9,7,0)
(13,1,1)
(1,11,1)
(12,9,1)
(9,3,1)
(14,5,1)
(5,6,1)
(9,0,1)
(4,14,1)
(0,3,1)
(11,4,1)
(8,13,1)
(3,8,1)
(9,3,2)
(3,8,2)
-----------------------------------
(0,data)
(1,data = 0)
(2,data)
(3,data = RAND32()
(4,data)
(5,badSink)
(6,funcPtr)
(7,)
(8,RAND32()
(9,funcPtr(data)
(10,funcPtr)
(11,0)
(12,RET)
(13,data)
(14,(*funcPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^