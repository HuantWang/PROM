-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_add_12_bad()
{
    int64_t data;
    data = 0LL;
    if(globalReturnsTrueOrFalse())
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%" SCNd64, &data);
    }
    else
    {
        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */
        data = 2;
    }
    if(globalReturnsTrueOrFalse())
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int64_t result = data + 1;
            printLongLongLine(result);
        }
    }
    else
    {
        /* FIX: Add a check to prevent an overflow from occurring */
        if (data < LLONG_MAX)
        {
            int64_t result = data + 1;
            printLongLongLine(result);
        }
        else
        {
            printLine("data value is too large to perform arithmetic safely.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
17,20
18,19
19,20
21,22
22,23
23,24
24,25
25,26
25,27
26,27
29,30
29,31
29,32
30,31
31,32
33,34
34,35
34,36
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
53,56
54,55
54,56
55,56
57,58
59,60
59,61
60,61
61,62
61,63
62,63
64,65
64,66
66,67
67,68
67,69
68,69
71,72
72,73
72,74
73,74
75,76
77,78
78,79
79,80
79,81
80,81
-----nextToken-----
2,4,9,11,15,16,20,27,28,32,38,40,44,45,49,51,56,58,63,65,69,70,74,76,81,82
-----computeFrom-----
13,14
13,15
25,26
25,27
42,43
42,44
54,55
54,56
67,68
67,69
-----guardedBy-----
56,69
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ProblemStatement;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_add_12_bad(){    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            int64_t result = data + 1;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_add_12_bad()
CWE190_Integer_Overflow__int64_t_fscanf_add_12_bad
{    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            int64_t result = data + 1;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
fscanf (stdin, "%" SCNd64, &data);
{        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
data = 2;
data = 2
data
data
2
if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            int64_t result = data + 1;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            int64_t result = data + 1;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
if (data < LLONG_MAX)        {            int64_t result = data + 1;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }
data < LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
{            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{            printLine("data value is too large to perform arithmetic safely.");        }
printLine("data value is too large to perform arithmetic safely.");
printLine("data value is too large to perform arithmetic safely.")
printLine
printLine
"data value is too large to perform arithmetic safely."
-----joern-----
(25,26,0)
(36,31,0)
(23,24,0)
(35,8,0)
(9,17,0)
(11,29,0)
(15,33,0)
(12,2,0)
(17,24,0)
(31,27,0)
(2,12,0)
(36,12,0)
(37,33,0)
(33,29,0)
(21,29,0)
(7,20,0)
(6,37,0)
(22,17,0)
(24,18,0)
(19,24,0)
(38,20,0)
(33,14,0)
(29,33,0)
(10,36,0)
(16,20,0)
(29,24,0)
(30,31,0)
(1,20,0)
(28,14,0)
(13,25,0)
(3,2,0)
(37,14,0)
(2,24,0)
(5,2,0)
(0,12,0)
(12,31,0)
(32,37,1)
(2,3,1)
(25,13,1)
(17,24,1)
(22,34,1)
(36,12,1)
(34,24,1)
(29,21,1)
(33,29,1)
(37,33,1)
(17,9,1)
(21,11,1)
(32,36,1)
(15,17,1)
(4,38,1)
(32,25,1)
(3,5,1)
(19,4,1)
(5,0,1)
(29,24,1)
(13,17,1)
(6,33,1)
(9,22,1)
(12,2,1)
(23,19,1)
(0,34,1)
(10,12,1)
(36,10,1)
(2,24,1)
(24,23,1)
(11,15,1)
(37,6,1)
(34,4,1)
(29,17,2)
(17,34,2)
(5,34,2)
(36,12,2)
(2,24,2)
(24,4,2)
(21,17,2)
(10,34,2)
(33,29,2)
(3,34,2)
(37,33,2)
(2,34,2)
(23,4,2)
(33,17,2)
(37,17,2)
(15,17,2)
(0,34,2)
(11,17,2)
(13,17,2)
(9,34,2)
(22,34,2)
(17,24,2)
(6,17,2)
(36,34,2)
(25,17,2)
(29,24,2)
(12,2,2)
(12,34,2)
(19,4,2)
-----------------------------------
(0,result)
(1,if(globalReturnsTrueOrFalse()
(2,data + 1)
(3,1)
(4,globalReturnsTrueOrFalse()
(5,data)
(6,result)
(7,if(globalReturnsTrueOrFalse()
(8,)
(9,LLONG_MAX)
(10,result)
(11,data)
(12,result = data + 1)
(13,"data value is too large to perform arithmetic safely.")
(14,)
(15,result)
(16,data)
(17,data < LLONG_MAX)
(18,)
(19,data)
(20,)
(21,1)
(22,data)
(23,2)
(24,data = 2)
(25,printLine("data value is too large to perform arithmetic safely.")
(26,)
(27,)
(28,result)
(29,data + 1)
(30,result)
(31,)
(32,RET)
(33,result = data + 1)
(34,globalReturnsTrueOrFalse()
(35,if (data < LLONG_MAX)
(36,printLongLongLine(result)
(37,printLongLongLine(result)
(38,L)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^