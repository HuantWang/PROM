-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_multiply_13_bad()
{
    int64_t data;
    data = 0LL;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */
            int64_t result = data * 2;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
32,33
33,34
35,36
35,37
36,37
36,38
37,38
40,41
41,42
41,43
42,43
42,44
43,44
46,47
46,48
47,48
48,49
48,50
49,50
51,52
51,53
53,54
54,55
54,56
55,56
58,59
59,60
59,61
60,61
62,63
-----nextToken-----
2,4,9,11,15,16,20,21,26,30,31,34,38,39,44,45,50,52,56,57,61,63
-----computeFrom-----
13,14
13,15
18,19
18,20
24,25
24,26
36,37
36,38
42,43
42,44
54,55
54,56
-----guardedBy-----
44,56
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_multiply_13_bad(){    int64_t data;    data = 0LL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_multiply_13_bad()
CWE190_Integer_Overflow__int64_t_rand_multiply_13_bad
{    int64_t data;    data = 0LL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
if(GLOBAL_CONST_FIVE==5)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }
int64_t result = data * 2;
int64_t result = data * 2;
int64_t
int64_t
result = data * 2
result
= data * 2
data * 2
data
data
2
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(11,20,0)
(21,6,0)
(24,23,0)
(28,2,0)
(11,31,0)
(6,26,0)
(6,16,0)
(31,6,0)
(19,21,0)
(25,6,0)
(26,13,0)
(30,23,0)
(13,26,0)
(22,14,0)
(1,3,0)
(0,2,0)
(10,21,0)
(27,20,0)
(3,20,0)
(26,4,0)
(3,11,0)
(17,2,0)
(26,6,0)
(4,26,0)
(7,31,0)
(29,31,0)
(15,14,0)
(18,2,0)
(31,11,0)
(9,11,0)
(8,12,0)
(5,3,1)
(3,11,1)
(14,15,1)
(23,30,1)
(22,28,1)
(5,23,1)
(31,7,1)
(19,10,1)
(5,21,1)
(21,6,1)
(10,23,1)
(21,19,1)
(29,9,1)
(26,13,1)
(25,14,1)
(1,11,1)
(11,31,1)
(4,25,1)
(24,6,1)
(7,29,1)
(26,4,1)
(6,26,1)
(9,21,1)
(3,1,1)
(15,22,1)
(31,6,1)
(24,14,1)
(30,24,1)
(31,21,2)
(10,23,2)
(6,14,2)
(7,21,2)
(11,31,2)
(11,21,2)
(26,4,2)
(9,21,2)
(26,13,2)
(3,11,2)
(21,23,2)
(31,6,2)
(21,6,2)
(1,21,2)
(19,23,2)
(29,21,2)
(26,14,2)
(4,14,2)
(25,14,2)
(6,26,2)
(3,21,2)
-----------------------------------
(0,if(GLOBAL_CONST_FIVE==5)
(1,result)
(2,)
(3,printLongLongLine(result)
(4,RAND64()
(5,RET)
(6,data = (int64_t)
(7,2)
(8,if(data > 0)
(9,result)
(10,data)
(11,result = data * 2)
(12,)
(13,int64_t)
(14,GLOBAL_CONST_FIVE==5)
(15,5)
(16,)
(17,if(GLOBAL_CONST_FIVE==5)
(18,data)
(19,0)
(20,)
(21,data > 0)
(22,GLOBAL_CONST_FIVE)
(23,GLOBAL_CONST_FIVE==5)
(24,GLOBAL_CONST_FIVE)
(25,data)
(26,(int64_t)
(27,result)
(28,L)
(29,data)
(30,5)
(31,data * 2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^