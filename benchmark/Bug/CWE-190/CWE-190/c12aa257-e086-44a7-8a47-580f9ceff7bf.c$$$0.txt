-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_square_08_bad()
{
    int64_t data;
    data = 0LL;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
            int64_t result = data * data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
28,29
31,32
32,33
34,35
34,36
35,36
36,37
38,39
39,40
39,41
40,41
41,42
41,43
42,43
44,45
44,46
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,9,11,15,16,20,25,29,30,33,37,43,45,49,51,55,57
-----computeFrom-----
13,14
13,15
23,24
23,25
47,48
47,49
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_square_08_bad(){    int64_t data;    data = 0LL;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_square_08_bad()
CWE190_Integer_Overflow__int64_t_rand_square_08_bad
{    int64_t data;    data = 0LL;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(10,17,0)
(10,21,0)
(9,22,0)
(18,2,0)
(7,3,0)
(10,6,0)
(21,10,0)
(20,17,0)
(6,10,0)
(17,12,0)
(14,23,0)
(13,22,0)
(8,18,0)
(0,23,0)
(15,23,0)
(11,23,0)
(3,18,0)
(19,9,0)
(22,9,0)
(3,22,0)
(9,17,0)
(5,9,0)
(22,18,0)
(17,10,0)
(10,6,1)
(10,21,1)
(3,7,1)
(16,11,1)
(9,17,1)
(5,19,1)
(21,20,1)
(9,5,1)
(19,13,1)
(17,10,1)
(22,9,1)
(1,3,1)
(7,22,1)
(20,16,1)
(4,16,1)
(4,17,1)
(13,4,1)
(3,22,1)
(1,4,1)
(20,16,2)
(9,4,2)
(9,17,2)
(13,4,2)
(3,4,2)
(22,9,2)
(21,16,2)
(17,10,2)
(10,21,2)
(22,4,2)
(10,16,2)
(17,16,2)
(7,4,2)
(19,4,2)
(3,22,2)
(10,6,2)
(5,4,2)
-----------------------------------
(0,data)
(1,RET)
(2,)
(3,printLongLongLine(result)
(4,staticReturnsTrue()
(5,data)
(6,int64_t)
(7,result)
(8,result)
(9,data * data)
(10,(int64_t)
(11,L)
(12,)
(13,result)
(14,if(staticReturnsTrue()
(15,if(staticReturnsTrue()
(16,staticReturnsTrue()
(17,data = (int64_t)
(18,)
(19,data)
(20,data)
(21,RAND64()
(22,result = data * data)
(23,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^