-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_postinc_06_bad()
{
    int64_t data;
    data = 0LL;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
32,33
33,34
35,36
35,37
36,37
36,38
37,38
40,41
41,42
41,43
41,44
42,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
50,52
52,53
53,54
55,56
56,57
56,58
57,58
59,60
-----nextToken-----
2,4,9,11,15,16,20,21,26,30,31,34,38,39,45,49,51,54,58,60
-----computeFrom-----
13,14
13,15
18,19
18,20
24,25
24,26
36,37
36,38
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_postinc_06_bad(){    int64_t data;    data = 0LL;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_postinc_06_bad()
CWE190_Integer_Overflow__int64_t_rand_postinc_06_bad
{    int64_t data;    data = 0LL;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(0,11,0)
(5,0,0)
(3,6,0)
(1,11,0)
(20,0,0)
(24,6,0)
(27,2,0)
(25,26,0)
(5,15,0)
(11,13,0)
(7,15,0)
(8,7,0)
(7,11,0)
(14,22,0)
(26,12,0)
(11,26,0)
(0,15,0)
(26,11,0)
(17,22,0)
(19,2,0)
(26,25,0)
(10,15,0)
(4,0,0)
(15,18,0)
(23,22,0)
(12,26,0)
(21,22,0)
(16,5,0)
(26,12,1)
(20,7,1)
(6,3,1)
(25,1,1)
(24,11,1)
(2,27,1)
(7,8,1)
(11,26,1)
(0,11,1)
(9,6,1)
(5,16,1)
(8,6,1)
(3,24,1)
(7,11,1)
(27,19,1)
(24,2,1)
(0,4,1)
(16,0,1)
(19,14,1)
(4,20,1)
(26,25,1)
(1,2,1)
(9,5,1)
(5,0,1)
(7,6,2)
(25,2,2)
(8,6,2)
(0,6,2)
(5,6,2)
(7,11,2)
(1,2,2)
(26,25,2)
(4,6,2)
(11,26,2)
(20,6,2)
(5,0,2)
(16,6,2)
(11,2,2)
(26,12,2)
(26,2,2)
(0,11,2)
-----------------------------------
(0,result = data)
(1,data)
(2,STATIC_CONST_FIVE==5)
(3,5)
(4,data)
(5,printLongLongLine(result)
(6,STATIC_CONST_FIVE==5)
(7,data++)
(8,data)
(9,RET)
(10,result)
(11,data = (int64_t)
(12,int64_t)
(13,)
(14,L)
(15,)
(16,result)
(17,if(STATIC_CONST_FIVE==5)
(18,)
(19,STATIC_CONST_FIVE)
(20,result)
(21,if(STATIC_CONST_FIVE==5)
(22,)
(23,data)
(24,STATIC_CONST_FIVE)
(25,RAND64()
(26,(int64_t)
(27,5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^