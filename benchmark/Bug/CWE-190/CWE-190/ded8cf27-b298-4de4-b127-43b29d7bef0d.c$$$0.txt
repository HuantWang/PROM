-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_add_06_bad()
{
    short data;
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
40,41
41,42
41,43
43,44
43,45
45,46
46,47
46,48
47,48
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,42,44,48,49,53,55
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_add_06_bad(){    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_add_06_bad()
CWE190_Integer_Overflow__short_rand_add_06_bad
{    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(14,28,0)
(19,24,0)
(17,13,0)
(12,17,0)
(28,14,0)
(15,16,0)
(20,13,0)
(7,22,0)
(1,17,0)
(24,22,0)
(23,17,0)
(22,25,0)
(6,1,0)
(29,18,0)
(5,18,0)
(26,13,0)
(2,16,0)
(11,14,0)
(0,6,0)
(14,11,0)
(1,28,0)
(24,6,0)
(21,1,0)
(9,14,0)
(14,9,0)
(1,6,0)
(3,13,0)
(6,22,0)
(28,10,0)
(27,1,0)
(8,28,0)
(24,6,1)
(28,14,1)
(4,24,1)
(6,1,1)
(15,2,1)
(2,28,1)
(8,18,1)
(21,27,1)
(1,28,1)
(16,15,1)
(11,8,1)
(1,17,1)
(2,18,1)
(29,5,1)
(19,6,1)
(18,29,1)
(0,16,1)
(17,23,1)
(4,16,1)
(24,19,1)
(14,9,1)
(14,11,1)
(27,0,1)
(23,12,1)
(5,17,1)
(1,21,1)
(14,18,2)
(24,6,2)
(1,28,2)
(6,16,2)
(27,16,2)
(6,1,2)
(28,14,2)
(8,18,2)
(24,16,2)
(19,16,2)
(0,16,2)
(21,16,2)
(11,18,2)
(1,16,2)
(1,17,2)
(14,11,2)
(28,18,2)
(14,9,2)
-----------------------------------
(0,result)
(1,data + 1)
(2,STATIC_CONST_FIVE)
(3,if(STATIC_CONST_FIVE==5)
(4,RET)
(5,STATIC_CONST_FIVE)
(6,result = data + 1)
(7,result)
(8,data)
(9,short)
(10,)
(11,RAND32()
(12,data)
(13,)
(14,(short)
(15,5)
(16,STATIC_CONST_FIVE==5)
(17,data = 0)
(18,STATIC_CONST_FIVE==5)
(19,result)
(20,data)
(21,1)
(22,)
(23,0)
(24,printIntLine(result)
(25,)
(26,if(STATIC_CONST_FIVE==5)
(27,data)
(28,data = (short)
(29,5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^