-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_06_bad()
{
    unsigned int data;
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
47,48
47,49
49,50
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,43,46,48,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_06_bad(){    unsigned int data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_preinc_06_bad()
CWE190_Integer_Overflow__unsigned_int_rand_preinc_06_bad
{    unsigned int data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(29,18,0)
(11,23,0)
(5,14,0)
(23,8,0)
(8,23,0)
(28,1,0)
(12,7,0)
(25,27,0)
(24,17,0)
(19,27,0)
(10,0,0)
(4,1,0)
(23,11,0)
(14,20,0)
(20,27,0)
(3,20,0)
(26,19,0)
(23,27,0)
(27,23,0)
(16,24,0)
(14,24,0)
(27,21,0)
(19,24,0)
(9,1,0)
(20,24,0)
(20,7,0)
(13,20,0)
(19,7,0)
(7,1,0)
(6,18,0)
(2,7,0)
(15,0,0)
(18,6,1)
(22,14,1)
(13,3,1)
(12,2,1)
(20,13,1)
(15,27,1)
(19,7,1)
(19,26,1)
(22,0,1)
(26,0,1)
(11,25,1)
(29,7,1)
(5,20,1)
(7,12,1)
(0,10,1)
(10,15,1)
(14,20,1)
(15,18,1)
(23,11,1)
(27,23,1)
(25,18,1)
(14,5,1)
(6,29,1)
(20,7,1)
(3,19,1)
(19,27,1)
(20,27,1)
(23,8,1)
(20,0,2)
(20,7,2)
(25,18,2)
(19,7,2)
(23,8,2)
(27,18,2)
(23,18,2)
(20,27,2)
(3,0,2)
(5,0,2)
(27,23,2)
(19,0,2)
(26,0,2)
(23,11,2)
(11,18,2)
(13,0,2)
(14,0,2)
(14,20,2)
(19,27,2)
-----------------------------------
(0,STATIC_CONST_FIVE==5)
(1,)
(2,data)
(3,result)
(4,data)
(5,result)
(6,5)
(7,data = 0)
(8,unsigned int)
(9,if(STATIC_CONST_FIVE==5)
(10,5)
(11,RAND32()
(12,0)
(13,data)
(14,printUnsignedLine(result)
(15,STATIC_CONST_FIVE)
(16,result)
(17,)
(18,STATIC_CONST_FIVE==5)
(19,++data)
(20,result = data)
(21,)
(22,RET)
(23,(unsigned int)
(24,)
(25,data)
(26,data)
(27,data = (unsigned int)
(28,if(STATIC_CONST_FIVE==5)
(29,STATIC_CONST_FIVE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^