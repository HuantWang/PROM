-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_square_61_bad()
{
    short data;
    data = 0;
    data = CWE190_Integer_Overflow__short_rand_square_61b_badSource(data);
    {
        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */
        short result = data * data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
23,24
25,26
25,27
26,27
27,28
27,29
29,30
29,31
31,32
32,33
32,34
33,34
35,36
37,38
38,39
38,40
39,40
41,42
-----nextToken-----
2,4,8,10,14,15,19,22,24,28,30,34,36,40,42
-----computeFrom-----
12,13
12,14
17,18
17,19
32,33
32,34
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_square_61_bad(){    short data;    data = 0;    data = CWE190_Integer_Overflow__short_rand_square_61b_badSource(data);    {        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__short_rand_square_61_bad()
CWE190_Integer_Overflow__short_rand_square_61_bad
{    short data;    data = 0;    data = CWE190_Integer_Overflow__short_rand_square_61b_badSource(data);    {        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
data = CWE190_Integer_Overflow__short_rand_square_61b_badSource(data);
data = CWE190_Integer_Overflow__short_rand_square_61b_badSource(data)
data
data
CWE190_Integer_Overflow__short_rand_square_61b_badSource(data)
CWE190_Integer_Overflow__short_rand_square_61b_badSource
CWE190_Integer_Overflow__short_rand_square_61b_badSource
data
data
{        /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */        short result = data * data;        printIntLine(result);    }
short result = data * data;
short result = data * data;
short
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(16,3,0)
(10,14,0)
(13,9,0)
(18,9,0)
(2,7,0)
(12,15,0)
(14,3,0)
(0,5,0)
(8,11,0)
(3,15,0)
(3,11,0)
(11,7,0)
(9,5,0)
(14,9,0)
(9,14,0)
(13,5,0)
(7,15,0)
(4,13,0)
(6,14,0)
(11,3,0)
(1,7,0)
(5,15,0)
(11,8,1)
(10,6,1)
(13,9,1)
(3,11,1)
(9,14,1)
(7,1,1)
(4,9,1)
(14,3,1)
(13,4,1)
(8,16,1)
(6,18,1)
(17,13,1)
(1,2,1)
(11,7,1)
(14,10,1)
(18,3,1)
(16,7,1)
(13,9,2)
(14,3,2)
(11,7,2)
(9,14,2)
(3,11,2)
-----------------------------------
(0,result)
(1,0)
(2,data)
(3,data = CWE190_Integer_Overflow__short_rand_square_61b_badSource(data)
(4,result)
(5,)
(6,data)
(7,data = 0)
(8,data)
(9,result = data * data)
(10,data)
(11,CWE190_Integer_Overflow__short_rand_square_61b_badSource(data)
(12,data)
(13,printIntLine(result)
(14,data * data)
(15,)
(16,data)
(17,RET)
(18,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^