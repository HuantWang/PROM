-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_09_bad()
{
    unsigned int data;
    data = 0;
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,39,42,44,47,51,53
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_09_bad(){    unsigned int data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_postinc_09_bad()
CWE190_Integer_Overflow__unsigned_int_rand_postinc_09_bad
{    unsigned int data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(15,5,0)
(3,19,0)
(0,1,0)
(14,20,0)
(18,11,0)
(3,9,0)
(25,24,0)
(19,3,0)
(3,11,0)
(8,20,0)
(0,20,0)
(8,11,0)
(21,0,0)
(17,5,0)
(16,5,0)
(1,2,0)
(0,11,0)
(9,3,0)
(22,20,0)
(24,0,0)
(10,8,0)
(11,7,0)
(8,1,0)
(6,0,0)
(11,3,0)
(13,1,0)
(20,5,0)
(24,1,0)
(8,20,1)
(3,19,1)
(23,24,1)
(23,4,1)
(10,4,1)
(24,25,1)
(4,11,1)
(25,0,1)
(24,0,1)
(8,10,1)
(14,22,1)
(21,6,1)
(19,18,1)
(20,14,1)
(0,11,1)
(8,11,1)
(18,12,1)
(12,20,1)
(4,12,1)
(3,9,1)
(11,3,1)
(6,8,1)
(0,20,1)
(0,21,1)
(0,11,2)
(0,4,2)
(3,12,2)
(3,9,2)
(11,12,2)
(24,4,2)
(19,12,2)
(8,4,2)
(24,0,2)
(10,4,2)
(11,3,2)
(6,4,2)
(8,11,2)
(18,12,2)
(8,20,2)
(3,19,2)
(0,20,2)
(21,4,2)
(25,4,2)
-----------------------------------
(0,result = data)
(1,)
(2,)
(3,(unsigned int)
(4,GLOBAL_CONST_TRUE)
(5,)
(6,result)
(7,)
(8,data++)
(9,unsigned int)
(10,data)
(11,data = (unsigned int)
(12,GLOBAL_CONST_TRUE)
(13,result)
(14,0)
(15,if(GLOBAL_CONST_TRUE)
(16,data)
(17,if(GLOBAL_CONST_TRUE)
(18,data)
(19,RAND32()
(20,data = 0)
(21,data)
(22,data)
(23,RET)
(24,printUnsignedLine(result)
(25,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^