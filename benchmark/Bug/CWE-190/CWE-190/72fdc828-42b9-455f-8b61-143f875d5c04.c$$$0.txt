-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_04_bad()
{
    unsigned int data;
    data = 0;
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(STATIC_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,39,42,44,47,51,53
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_04_bad(){    unsigned int data;    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_postinc_04_bad()
CWE190_Integer_Overflow__unsigned_int_rand_postinc_04_bad
{    unsigned int data;    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(14,17,0)
(1,12,0)
(17,16,0)
(23,17,0)
(11,25,0)
(14,20,0)
(20,17,0)
(9,17,0)
(15,19,0)
(18,14,0)
(5,12,0)
(20,5,0)
(9,5,0)
(20,25,0)
(13,19,0)
(9,25,0)
(0,12,0)
(5,3,0)
(12,5,0)
(24,20,0)
(6,20,0)
(4,25,0)
(7,19,0)
(8,9,0)
(12,1,0)
(21,5,0)
(12,0,0)
(25,19,0)
(8,10,1)
(12,0,1)
(5,12,1)
(0,21,1)
(12,1,1)
(9,8,1)
(14,18,1)
(9,5,1)
(2,10,1)
(10,5,1)
(24,6,1)
(10,22,1)
(25,4,1)
(18,20,1)
(21,22,1)
(20,5,1)
(14,20,1)
(20,25,1)
(22,25,1)
(20,24,1)
(9,25,1)
(6,9,1)
(2,14,1)
(4,11,1)
(9,5,2)
(8,10,2)
(20,10,2)
(24,10,2)
(12,0,2)
(20,25,2)
(9,25,2)
(20,5,2)
(14,10,2)
(21,22,2)
(14,20,2)
(12,22,2)
(9,10,2)
(12,1,2)
(5,12,2)
(5,22,2)
(0,22,2)
(18,10,2)
(6,10,2)
-----------------------------------
(0,RAND32()
(1,unsigned int)
(2,RET)
(3,)
(4,0)
(5,data = (unsigned int)
(6,result)
(7,if(STATIC_CONST_TRUE)
(8,data)
(9,data++)
(10,STATIC_CONST_TRUE)
(11,data)
(12,(unsigned int)
(13,data)
(14,printUnsignedLine(result)
(15,if(STATIC_CONST_TRUE)
(16,)
(17,)
(18,result)
(19,)
(20,result = data)
(21,data)
(22,STATIC_CONST_TRUE)
(23,result)
(24,data)
(25,data = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^