-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_07_bad()
{
    unsigned int data;
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_07_bad(){    unsigned int data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_07_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_07_bad
{    unsigned int data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(20,29,0)
(10,20,0)
(24,10,0)
(16,18,0)
(7,18,0)
(26,18,0)
(10,29,0)
(11,13,0)
(29,15,0)
(2,8,0)
(23,29,0)
(13,25,0)
(27,8,0)
(21,20,0)
(18,7,0)
(5,7,0)
(0,25,0)
(12,3,0)
(4,20,0)
(9,3,0)
(20,13,0)
(1,25,0)
(11,29,0)
(18,14,0)
(22,13,0)
(19,25,0)
(28,11,0)
(6,13,0)
(7,13,0)
(27,3,1)
(22,6,1)
(7,13,1)
(10,24,1)
(2,27,1)
(11,13,1)
(8,2,1)
(17,10,1)
(26,3,1)
(17,8,1)
(4,11,1)
(3,12,1)
(20,21,1)
(13,22,1)
(7,5,1)
(10,20,1)
(27,18,1)
(9,13,1)
(11,28,1)
(16,26,1)
(18,7,1)
(21,4,1)
(20,13,1)
(28,8,1)
(24,20,1)
(5,16,1)
(12,9,1)
(18,3,2)
(28,8,2)
(26,3,2)
(11,8,2)
(10,8,2)
(7,3,2)
(7,13,2)
(11,13,2)
(10,20,2)
(24,8,2)
(4,8,2)
(16,3,2)
(20,8,2)
(20,13,2)
(18,7,2)
(5,3,2)
(21,8,2)
-----------------------------------
(0,if(staticFive==5)
(1,data)
(2,5)
(3,staticFive==5)
(4,result)
(5,data)
(6,data)
(7,&data)
(8,staticFive==5)
(9,staticFive)
(10,printUnsignedLine(result)
(11,data++)
(12,5)
(13,data = 0)
(14,)
(15,)
(16,"%u")
(17,RET)
(18,fscanf (stdin, "%u", &data)
(19,if(staticFive==5)
(20,result = data)
(21,data)
(22,0)
(23,result)
(24,result)
(25,)
(26,stdin)
(27,staticFive)
(28,data)
(29,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^