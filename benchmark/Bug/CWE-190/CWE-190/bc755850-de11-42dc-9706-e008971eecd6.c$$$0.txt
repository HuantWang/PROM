-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_multiply_08_bad()
{
    unsigned int data;
    data = 0;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(staticReturnsTrue())
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
            unsigned int result = data * 2;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
33,34
34,35
36,37
37,38
37,39
38,39
38,40
39,40
42,43
42,44
43,44
44,45
44,46
46,47
46,48
48,49
49,50
49,51
50,51
53,54
54,55
54,56
55,56
57,58
-----nextToken-----
2,4,8,10,14,15,19,24,27,28,31,35,40,41,45,47,51,52,56,58
-----computeFrom-----
12,13
12,14
22,23
22,24
38,39
38,40
49,50
49,51
-----guardedBy-----
40,51
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_multiply_08_bad(){    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(staticReturnsTrue())    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_multiply_08_bad()
CWE190_Integer_Overflow__unsigned_int_rand_multiply_08_bad
{    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(staticReturnsTrue())    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(staticReturnsTrue())    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */            unsigned int result = data * 2;            printUnsignedLine(result);        }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(14,10,0)
(28,18,0)
(22,20,0)
(13,29,0)
(4,18,0)
(29,13,0)
(18,3,0)
(27,5,0)
(29,26,0)
(24,23,0)
(7,15,0)
(12,4,0)
(4,22,0)
(22,4,0)
(9,10,0)
(15,0,0)
(4,0,0)
(11,10,0)
(0,10,0)
(19,0,0)
(29,18,0)
(21,4,0)
(23,22,0)
(2,0,0)
(26,29,0)
(15,18,0)
(1,15,0)
(25,22,0)
(18,29,0)
(16,20,0)
(23,20,0)
(13,28,1)
(7,1,1)
(8,23,1)
(12,21,1)
(8,6,1)
(15,18,1)
(22,4,1)
(4,0,1)
(1,6,1)
(29,26,1)
(17,0,1)
(4,12,1)
(21,25,1)
(25,15,1)
(29,13,1)
(18,29,1)
(4,18,1)
(15,0,1)
(23,22,1)
(23,24,1)
(6,17,1)
(8,15,1)
(15,7,1)
(6,18,1)
(2,19,1)
(24,22,1)
(0,2,1)
(28,17,1)
(18,17,2)
(29,17,2)
(22,4,2)
(15,6,2)
(18,29,2)
(4,0,2)
(4,18,2)
(28,17,2)
(29,13,2)
(15,18,2)
(1,6,2)
(23,15,2)
(15,0,2)
(12,15,2)
(24,15,2)
(29,26,2)
(23,22,2)
(22,15,2)
(7,6,2)
(4,15,2)
(13,17,2)
(25,15,2)
(21,15,2)
-----------------------------------
(0,data = 0)
(1,data)
(2,0)
(3,)
(4,data * 2)
(5,)
(6,staticReturnsTrue()
(7,0)
(8,RET)
(9,if(staticReturnsTrue()
(10,)
(11,if(staticReturnsTrue()
(12,2)
(13,RAND32()
(14,data)
(15,data > 0)
(16,result)
(17,staticReturnsTrue()
(18,data = (unsigned int)
(19,data)
(20,)
(21,data)
(22,result = data * 2)
(23,printUnsignedLine(result)
(24,result)
(25,result)
(26,unsigned int)
(27,if(data > 0)
(28,data)
(29,(unsigned int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^