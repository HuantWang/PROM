-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_add_10_bad()
{
    unsigned int data;
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,33,35,39,40,44,46
-----computeFrom-----
12,13
12,14
21,22
21,23
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_add_10_bad(){    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_add_10_bad()
CWE190_Integer_Overflow__unsigned_int_max_add_10_bad
{    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(5,9,0)
(22,20,0)
(12,19,0)
(17,4,0)
(16,10,0)
(10,19,0)
(3,2,0)
(6,9,0)
(15,9,0)
(18,2,0)
(4,2,0)
(11,4,0)
(8,6,0)
(19,20,0)
(1,6,0)
(2,0,0)
(13,9,0)
(4,6,0)
(10,20,0)
(4,19,0)
(20,21,0)
(19,4,0)
(12,14,1)
(19,4,1)
(3,18,1)
(4,11,1)
(14,2,1)
(10,19,1)
(14,23,1)
(10,16,1)
(11,17,1)
(7,14,1)
(18,23,1)
(16,19,1)
(17,12,1)
(4,2,1)
(4,6,1)
(6,8,1)
(7,10,1)
(8,1,1)
(2,3,1)
(23,6,1)
(19,4,2)
(16,14,2)
(18,23,2)
(12,14,2)
(11,14,2)
(4,14,2)
(19,14,2)
(2,23,2)
(10,19,2)
(4,6,2)
(10,14,2)
(17,14,2)
(3,23,2)
(4,2,2)
-----------------------------------
(0,)
(1,data)
(2,data = UINT_MAX)
(3,UINT_MAX)
(4,data + 1)
(5,data)
(6,data = 0)
(7,RET)
(8,0)
(9,)
(10,printUnsignedLine(result)
(11,1)
(12,result)
(13,if(globalTrue)
(14,globalTrue)
(15,if(globalTrue)
(16,result)
(17,data)
(18,data)
(19,result = data + 1)
(20,)
(21,)
(22,result)
(23,globalTrue)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^