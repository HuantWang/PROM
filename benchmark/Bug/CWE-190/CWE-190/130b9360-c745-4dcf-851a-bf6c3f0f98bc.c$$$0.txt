-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_preinc_01_bad()
{
    short data;
    data = 0;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%hd", &data);
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        ++data;
        short result = data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
24,25
26,27
26,28
26,29
27,28
28,29
29,30
31,32
32,33
32,34
34,35
34,36
36,37
37,38
39,40
40,41
40,42
41,42
43,44
-----nextToken-----
2,4,8,10,14,15,19,21,22,25,30,33,35,38,42,44
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_preinc_01_bad(){    short data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%hd", &data);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        short result = data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__short_fscanf_preinc_01_bad()
CWE190_Integer_Overflow__short_fscanf_preinc_01_bad
{    short data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%hd", &data);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        short result = data;        printIntLine(result);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        short result = data;        printIntLine(result);    }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(18,6,0)
(6,7,0)
(1,6,0)
(14,7,0)
(19,1,0)
(8,10,0)
(18,1,0)
(11,16,0)
(9,1,0)
(10,5,0)
(16,6,0)
(1,4,0)
(5,4,0)
(4,7,0)
(13,4,0)
(3,4,0)
(5,10,0)
(10,7,0)
(12,18,0)
(17,6,0)
(15,10,0)
(0,5,0)
(16,4,0)
(18,1,1)
(13,3,1)
(4,13,1)
(16,4,1)
(0,15,1)
(19,9,1)
(11,10,1)
(5,4,1)
(9,16,1)
(8,4,1)
(16,11,1)
(1,19,1)
(2,18,1)
(1,4,1)
(5,0,1)
(10,5,1)
(15,8,1)
(12,1,1)
(18,12,1)
(1,4,2)
(10,5,2)
(16,4,2)
(5,4,2)
(18,1,2)
-----------------------------------
(0,data)
(1,result = data)
(2,RET)
(3,data)
(4,data = 0)
(5,&data)
(6,)
(7,)
(8,stdin)
(9,result)
(10,fscanf (stdin, "%hd", &data)
(11,data)
(12,result)
(13,0)
(14,data)
(15,"%hd")
(16,++data)
(17,result)
(18,printIntLine(result)
(19,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^