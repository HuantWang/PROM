-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_multiply_54e_badSink(unsigned int data)
{
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
        unsigned int result = data * 2;
        printUnsignedLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
11,13
12,13
15,16
15,17
16,17
17,18
17,19
19,20
19,21
21,22
22,23
22,24
23,24
26,27
27,28
27,29
28,29
30,31
-----nextToken-----
2,4,6,8,13,14,18,20,24,25,29,31
-----computeFrom-----
11,12
11,13
22,23
22,24
-----guardedBy-----
13,24
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_multiply_54e_badSink(unsigned int data){    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }}
void
CWE190_Integer_Overflow__unsigned_int_max_multiply_54e_badSink(unsigned int data)
CWE190_Integer_Overflow__unsigned_int_max_multiply_54e_badSink
unsigned int data
unsigned int
data
data
{    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }}
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(11,3,0)
(8,6,0)
(6,4,0)
(10,8,0)
(7,9,0)
(9,1,0)
(12,6,0)
(9,8,0)
(14,13,0)
(6,8,0)
(0,13,0)
(8,1,0)
(2,6,0)
(5,1,0)
(13,4,0)
(6,4,1)
(15,9,1)
(13,4,1)
(13,0,1)
(9,7,1)
(12,10,1)
(6,2,1)
(8,6,1)
(15,13,1)
(7,8,1)
(2,12,1)
(10,13,1)
(9,8,1)
(0,14,1)
(9,13,2)
(10,13,2)
(6,4,2)
(7,13,2)
(13,4,2)
(6,13,2)
(8,13,2)
(8,6,2)
(12,13,2)
(2,13,2)
(9,8,2)
-----------------------------------
(0,0)
(1,)
(2,2)
(3,)
(4,unsigned int data)
(5,result)
(6,data * 2)
(7,result)
(8,result = data * 2)
(9,printUnsignedLine(result)
(10,result)
(11,if(data > 0)
(12,data)
(13,data > 0)
(14,data)
(15,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^