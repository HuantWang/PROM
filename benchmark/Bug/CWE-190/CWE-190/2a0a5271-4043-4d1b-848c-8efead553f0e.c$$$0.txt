-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_15_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    switch(6)
    {
    case 6:
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    switch(7)
    {
    case 7:
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        int result = data + 1;
        printIntLine(result);
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
18,21
18,22
18,23
18,24
19,20
21,22
21,23
22,23
23,24
23,25
25,26
25,27
25,28
27,28
28,29
30,31
32,33
32,34
32,35
33,34
33,35
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
53,54
55,56
56,57
57,58
57,59
58,59
63,64
64,65
64,66
65,66
69,70
69,71
71,72
71,73
71,74
71,75
71,76
71,77
72,73
74,75
74,76
75,76
76,77
76,78
78,79
78,80
80,81
81,82
81,83
82,83
85,86
86,87
86,88
87,88
89,90
93,94
94,95
94,96
95,96
-----nextToken-----
2,4,8,10,14,15,17,20,24,26,29,31,36,38,40,42,44,49,52,54,59,60,61,62,66,67,68,70,73,77,79,83,84,88,90,91,92,96,97,98
-----computeFrom-----
12,13
12,14
33,34
33,35
47,48
47,49
81,82
81,83
-----guardedBy-----
38,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_15_bad(){    int data;    /* Initialize data */    data = 0;    switch(6)    {    case 6:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    switch(7)    {    case 7:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
void
CWE190_Integer_Overflow__int_fgets_add_15_bad()
CWE190_Integer_Overflow__int_fgets_add_15_bad
{    int data;    /* Initialize data */    data = 0;    switch(6)    {    case 6:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    switch(7)    {    case 7:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
switch(6)    {    case 6:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
switch(7)    {    case 7:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
7
{    case 7:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 7:
7
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
-----joern-----
(25,18,0)
(3,0,0)
(19,48,0)
(1,45,0)
(23,31,0)
(9,26,0)
(21,9,0)
(22,18,0)
(46,2,0)
(50,48,0)
(16,43,0)
(38,2,0)
(17,0,0)
(29,31,0)
(7,31,0)
(48,19,0)
(12,13,0)
(19,0,0)
(5,27,0)
(27,5,0)
(45,31,0)
(47,16,0)
(0,36,0)
(33,4,0)
(36,31,0)
(30,19,0)
(52,36,0)
(49,43,0)
(20,2,0)
(42,5,0)
(43,13,0)
(40,22,0)
(48,34,0)
(32,36,0)
(15,27,0)
(4,2,0)
(13,48,0)
(14,31,0)
(13,43,0)
(28,2,0)
(44,5,0)
(10,13,0)
(16,4,0)
(35,5,0)
(39,38,0)
(51,2,0)
(5,0,0)
(41,22,0)
(13,22,0)
(43,4,0)
(24,18,0)
(6,18,0)
(38,39,1)
(47,43,1)
(8,46,1)
(5,44,1)
(41,40,1)
(11,7,1)
(23,9,1)
(44,35,1)
(19,30,1)
(11,23,1)
(0,3,1)
(10,49,1)
(12,10,1)
(13,22,1)
(22,41,1)
(48,19,1)
(17,37,1)
(8,28,1)
(13,48,1)
(21,27,1)
(19,0,1)
(16,43,1)
(45,1,1)
(43,13,1)
(37,22,1)
(27,15,1)
(3,17,1)
(39,11,1)
(9,21,1)
(13,12,1)
(23,48,1)
(1,37,1)
(27,5,1)
(16,47,1)
(46,16,1)
(30,50,1)
(42,0,1)
(50,27,1)
(7,45,1)
(49,11,1)
(28,38,1)
(35,42,1)
(15,5,1)
(5,0,1)
(46,11,2)
(13,11,2)
(19,0,2)
(10,11,2)
(42,37,2)
(12,11,2)
(50,27,2)
(0,37,2)
(19,27,2)
(49,11,2)
(44,37,2)
(1,37,2)
(27,37,2)
(17,37,2)
(43,13,2)
(7,37,2)
(23,37,2)
(5,0,2)
(5,37,2)
(48,19,2)
(43,11,2)
(39,11,2)
(45,37,2)
(27,5,2)
(48,27,2)
(30,27,2)
(3,37,2)
(28,11,2)
(16,43,2)
(13,48,2)
(21,27,2)
(13,22,2)
(35,37,2)
(9,27,2)
(38,11,2)
(16,11,2)
(15,37,2)
(47,11,2)
-----------------------------------
(0,inputBuffer[CHAR_ARRAY_SIZE] = "")
(1,"Benign, fixed string")
(2,)
(3,"")
(4,)
(5,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(6,switch(7)
(7,break;)
(8,RET)
(9,printLine("fgets()
(10,data)
(11,7)
(12,1)
(13,data + 1)
(14,default:)
(15,NULL)
(16,printIntLine(result)
(17,inputBuffer)
(18,)
(19,atoi(inputBuffer)
(20,case 7:)
(21,"fgets()
(22,data = 0)
(23,break;)
(24,switch(6)
(25,data)
(26,)
(27,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(28,break;)
(29,case 6:)
(30,inputBuffer)
(31,)
(32,inputBuffer)
(33,result)
(34,)
(35,CHAR_ARRAY_SIZE)
(36,)
(37,6)
(38,printLine("Benign, fixed string")
(39,"Benign, fixed string")
(40,data)
(41,0)
(42,inputBuffer)
(43,result = data + 1)
(44,stdin)
(45,printLine("Benign, fixed string")
(46,break;)
(47,result)
(48,data = atoi(inputBuffer)
(49,result)
(50,data)
(51,default:)
(52,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^