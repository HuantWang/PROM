-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_square_66_bad()
{
    int data;
    int dataArray[5];
    /* Initialize data */
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    /* put data in array */
    dataArray[2] = data;
    CWE190_Integer_Overflow__int_fgets_square_66b_badSink(dataArray);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
23,24
23,25
24,25
25,26
25,27
27,28
27,29
27,30
29,30
30,31
32,33
34,35
34,36
34,37
35,36
35,37
36,37
36,38
36,39
36,40
37,38
39,40
41,42
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
63,64
64,65
64,66
65,66
65,67
66,67
69,70
71,72
72,73
72,74
73,74
75,76
-----nextToken-----
2,4,8,10,13,15,17,21,22,26,28,31,33,38,40,42,44,46,51,54,56,61,62,67,68,70,74,76
-----computeFrom-----
19,20
19,21
35,36
35,37
49,50
49,51
64,65
64,66
-----guardedBy-----
40,56
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_square_66_bad(){    int data;    int dataArray[5];    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    /* put data in array */    dataArray[2] = data;    CWE190_Integer_Overflow__int_fgets_square_66b_badSink(dataArray);}
void
CWE190_Integer_Overflow__int_fgets_square_66_bad()
CWE190_Integer_Overflow__int_fgets_square_66_bad
{    int data;    int dataArray[5];    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    /* put data in array */    dataArray[2] = data;    CWE190_Integer_Overflow__int_fgets_square_66b_badSink(dataArray);}
int data;
int data;
int
data
data
int dataArray[5];
int dataArray[5];
int
dataArray[5]
dataArray
[5]
5
data = 0;
data = 0
data
data
0
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
dataArray[2] = data;
dataArray[2] = data
dataArray[2]
dataArray
dataArray
2
data
data
CWE190_Integer_Overflow__int_fgets_square_66b_badSink(dataArray);
CWE190_Integer_Overflow__int_fgets_square_66b_badSink(dataArray)
CWE190_Integer_Overflow__int_fgets_square_66b_badSink
CWE190_Integer_Overflow__int_fgets_square_66b_badSink
dataArray
dataArray
-----joern-----
(0,4,0)
(5,25,0)
(8,19,0)
(27,29,0)
(25,14,0)
(10,31,0)
(1,14,0)
(29,27,0)
(20,8,0)
(2,26,0)
(22,12,0)
(30,27,0)
(30,14,0)
(26,30,0)
(28,4,0)
(13,24,0)
(9,24,0)
(16,22,0)
(30,24,0)
(21,12,0)
(3,14,0)
(6,22,0)
(29,22,0)
(18,29,0)
(12,14,0)
(31,4,0)
(27,32,0)
(23,30,0)
(24,14,0)
(4,31,0)
(15,26,0)
(7,4,0)
(33,12,0)
(11,27,0)
(4,22,0)
(4,28,1)
(8,20,1)
(4,22,1)
(31,10,1)
(22,16,1)
(24,13,1)
(15,2,1)
(2,27,1)
(0,7,1)
(26,15,1)
(7,22,1)
(17,25,1)
(27,29,1)
(20,31,1)
(28,0,1)
(2,8,1)
(31,4,1)
(29,22,1)
(29,18,1)
(6,24,1)
(30,23,1)
(30,24,1)
(23,26,1)
(11,31,1)
(13,9,1)
(16,6,1)
(18,11,1)
(25,5,1)
(10,4,1)
(30,27,1)
(5,30,1)
(18,31,2)
(20,31,2)
(11,31,2)
(30,24,2)
(8,31,2)
(4,22,2)
(31,4,2)
(29,22,2)
(30,27,2)
(27,31,2)
(27,29,2)
(29,31,2)
-----------------------------------
(0,CHAR_ARRAY_SIZE)
(1,data)
(2,dataArray)
(3,dataArray)
(4,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(5,dataArray)
(6,inputBuffer)
(7,inputBuffer)
(8,printLine("fgets()
(9,data)
(10,NULL)
(11,data)
(12,)
(13,0)
(14,)
(15,2)
(16,"")
(17,RET)
(18,inputBuffer)
(19,)
(20,"fgets()
(21,inputBuffer)
(22,inputBuffer[CHAR_ARRAY_SIZE] = "")
(23,data)
(24,data = 0)
(25,CWE190_Integer_Overflow__int_fgets_square_66b_badSink(dataArray)
(26,dataArray[2])
(27,data = atoi(inputBuffer)
(28,stdin)
(29,atoi(inputBuffer)
(30,dataArray[2] = data)
(31,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(32,)
(33,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^