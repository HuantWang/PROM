-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_add_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    short * dataPtr = (short *)dataVoidPtr;
    /* dereference dataPtr into data */
    short data = (*dataPtr);
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        short result = data + 1;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,38,40,44,45,49,51
-----computeFrom-----
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_add_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    short * dataPtr = (short *)dataVoidPtr;    /* dereference dataPtr into data */    short data = (*dataPtr);    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        short result = data + 1;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__short_rand_add_64b_badSink(void * dataVoidPtr)
CWE190_Integer_Overflow__short_rand_add_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    short * dataPtr = (short *)dataVoidPtr;    /* dereference dataPtr into data */    short data = (*dataPtr);    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        short result = data + 1;        printIntLine(result);    }}
short * dataPtr = (short *)dataVoidPtr;
short * dataPtr = (short *)dataVoidPtr;
short
* dataPtr = (short *)dataVoidPtr
*
dataPtr
= (short *)dataVoidPtr
(short *)dataVoidPtr
short *
short
*
*
dataVoidPtr
dataVoidPtr
short data = (*dataPtr);
short data = (*dataPtr);
short
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        short result = data + 1;        printIntLine(result);    }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(20,8,0)
(13,3,0)
(17,16,0)
(8,13,0)
(17,21,0)
(21,5,0)
(22,16,0)
(5,21,0)
(10,21,0)
(9,13,0)
(11,16,0)
(2,16,0)
(8,11,0)
(3,13,0)
(14,12,0)
(21,7,0)
(14,16,0)
(15,17,0)
(12,14,0)
(4,14,0)
(18,3,0)
(21,17,0)
(0,11,0)
(12,17,0)
(3,14,0)
(13,11,0)
(19,3,0)
(6,12,0)
(12,17,1)
(20,13,1)
(14,12,1)
(19,9,1)
(10,15,1)
(6,4,1)
(3,18,1)
(17,21,1)
(21,5,1)
(21,10,1)
(3,14,1)
(18,19,1)
(9,14,1)
(1,8,1)
(8,13,1)
(13,3,1)
(4,17,1)
(21,7,1)
(12,6,1)
(8,20,1)
(12,17,2)
(8,13,2)
(3,14,2)
(13,3,2)
(14,12,2)
(21,7,2)
(17,21,2)
(21,5,2)
-----------------------------------
(0,result)
(1,RET)
(2,data)
(3,data + 1)
(4,data)
(5,short *)
(6,dataPtr)
(7,void * dataVoidPtr)
(8,printIntLine(result)
(9,result)
(10,dataVoidPtr)
(11,)
(12,*dataPtr)
(13,result = data + 1)
(14,data = (*dataPtr)
(15,dataPtr)
(16,)
(17,* dataPtr = (short *)
(18,1)
(19,data)
(20,result)
(21,(short *)
(22,dataPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^