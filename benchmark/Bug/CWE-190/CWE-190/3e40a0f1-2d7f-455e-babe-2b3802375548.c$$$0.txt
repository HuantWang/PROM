-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_preinc_17_bad()
{
    int i,j;
    int64_t data;
    data = 0LL;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = LLONG_MAX;
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
24,25
24,26
24,27
24,28
25,26
26,27
26,28
27,28
30,31
30,32
31,32
34,35
35,36
37,38
38,39
39,40
39,41
40,41
42,43
44,45
44,46
44,47
44,48
45,46
46,47
46,48
47,48
50,51
50,52
51,52
54,55
55,56
57,58
58,59
58,60
58,61
59,60
60,61
61,62
63,64
64,65
64,66
65,66
67,68
67,69
69,70
70,71
72,73
73,74
73,75
74,75
76,77
-----nextToken-----
2,4,8,10,12,16,18,22,23,28,29,32,33,36,41,43,48,49,52,53,56,62,66,68,71,75,77
-----computeFrom-----
20,21
20,22
26,27
26,28
30,31
30,32
39,40
39,41
46,47
46,48
50,51
50,52
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_preinc_17_bad(){    int i,j;    int64_t data;    data = 0LL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_max_preinc_17_bad()
CWE190_Integer_Overflow__int64_t_max_preinc_17_bad
{    int i,j;    int64_t data;    data = 0LL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(34,0,0)
(14,8,0)
(23,27,0)
(16,20,0)
(11,3,0)
(37,2,0)
(36,0,0)
(8,30,0)
(1,30,0)
(15,30,0)
(18,33,0)
(35,18,0)
(13,27,0)
(4,0,0)
(5,34,0)
(9,18,0)
(10,0,0)
(3,16,0)
(2,30,0)
(31,3,0)
(7,2,0)
(22,27,0)
(24,4,0)
(29,16,0)
(21,3,0)
(26,16,0)
(28,34,0)
(32,9,0)
(21,18,0)
(25,27,0)
(17,27,0)
(3,18,0)
(6,27,0)
(9,16,0)
(19,21,0)
(29,2,1)
(8,14,1)
(16,26,1)
(21,19,1)
(2,7,1)
(21,3,1)
(19,3,1)
(3,11,1)
(26,29,1)
(5,0,1)
(8,30,1)
(37,8,1)
(7,37,1)
(3,16,1)
(1,22,1)
(11,31,1)
(15,1,1)
(34,0,1)
(14,16,1)
(0,36,1)
(4,0,1)
(9,32,1)
(32,34,1)
(28,5,1)
(5,4,1)
(10,2,1)
(9,16,1)
(34,28,1)
(36,10,1)
(2,30,1)
(37,30,1)
(30,15,1)
(31,9,1)
(12,34,1)
(4,24,1)
(24,21,1)
(21,34,2)
(2,30,2)
(8,30,2)
(16,2,2)
(9,34,2)
(9,16,2)
(7,2,2)
(2,2,2)
(4,34,2)
(11,34,2)
(31,34,2)
(26,2,2)
(3,34,2)
(28,34,2)
(4,0,2)
(32,34,2)
(19,34,2)
(8,2,2)
(34,0,2)
(34,34,2)
(29,2,2)
(14,2,2)
(21,3,2)
(5,34,2)
(37,2,2)
(3,16,2)
(24,34,2)
-----------------------------------
(0,j = 0)
(1,i)
(2,i < 1)
(3,result = data)
(4,j++)
(5,j)
(6,for(j = 0; j < 1; j++)
(7,1)
(8,i++)
(9,++data)
(10,j)
(11,data)
(12,RET)
(13,i)
(14,i)
(15,0)
(16,data = LLONG_MAX)
(17,for(i = 0; i < 1; i++)
(18,)
(19,result)
(20,)
(21,printLongLongLine(result)
(22,L)
(23,j)
(24,j)
(25,data)
(26,LLONG_MAX)
(27,)
(28,1)
(29,data)
(30,i = 0)
(31,result)
(32,data)
(33,)
(34,j < 1)
(35,result)
(36,0)
(37,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^