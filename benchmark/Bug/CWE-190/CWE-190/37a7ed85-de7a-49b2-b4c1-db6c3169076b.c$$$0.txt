-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_bad()
{
    int64_t data;
    data = 0LL;
    if(globalReturnsTrueOrFalse())
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%" SCNd64, &data);
    }
    else
    {
        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */
        data = 2;
    }
    if(globalReturnsTrueOrFalse())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
    else
    {
        /* FIX: Add a check to prevent an overflow from occurring */
        if (data < LLONG_MAX)
        {
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
        else
        {
            printLine("data value is too large to perform arithmetic safely.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
17,20
18,19
19,20
21,22
22,23
23,24
24,25
25,26
25,27
26,27
29,30
29,31
29,32
30,31
31,32
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
41,42
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
54,55
55,56
55,57
55,58
56,57
56,58
57,58
59,60
61,62
61,63
61,64
62,63
63,64
64,65
66,67
67,68
67,69
68,69
70,71
70,72
72,73
73,74
75,76
76,77
76,78
77,78
79,80
81,82
82,83
83,84
83,85
84,85
-----nextToken-----
2,4,9,11,15,16,20,27,28,32,38,42,44,47,51,53,58,60,65,69,71,74,78,80,85,86
-----computeFrom-----
13,14
13,15
25,26
25,27
56,57
56,58
-----guardedBy-----
58,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ProblemStatement;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_bad(){    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_bad()
CWE190_Integer_Overflow__int64_t_fscanf_preinc_12_bad
{    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
fscanf (stdin, "%" SCNd64, &data);
{        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
data = 2;
data = 2
data
data
2
if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
if (data < LLONG_MAX)        {            ++data;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }
data < LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
{            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{            printLine("data value is too large to perform arithmetic safely.");        }
printLine("data value is too large to perform arithmetic safely.");
printLine("data value is too large to perform arithmetic safely.")
printLine
printLine
"data value is too large to perform arithmetic safely."
-----joern-----
(36,0,0)
(0,26,0)
(1,3,0)
(35,15,0)
(12,15,0)
(8,4,0)
(2,6,0)
(32,10,0)
(16,6,0)
(14,11,0)
(21,3,0)
(34,9,0)
(31,1,0)
(5,18,0)
(10,26,0)
(22,26,0)
(27,21,0)
(37,0,0)
(3,30,0)
(38,26,0)
(25,10,0)
(4,17,0)
(1,26,0)
(33,36,0)
(9,26,0)
(26,23,0)
(36,18,0)
(10,3,0)
(24,0,0)
(0,18,0)
(29,3,0)
(28,15,0)
(9,18,0)
(19,15,0)
(6,26,0)
(21,10,0)
(1,26,1)
(37,24,1)
(7,12,1)
(21,27,1)
(20,4,1)
(0,26,1)
(31,13,1)
(10,26,1)
(16,13,1)
(32,1,1)
(20,36,1)
(36,33,1)
(0,37,1)
(21,10,1)
(24,9,1)
(2,16,1)
(8,6,1)
(9,34,1)
(27,10,1)
(1,31,1)
(9,26,1)
(6,26,1)
(20,21,1)
(22,38,1)
(34,6,1)
(33,0,1)
(6,2,1)
(10,25,1)
(13,7,1)
(25,32,1)
(36,0,1)
(26,22,1)
(38,7,1)
(4,8,1)
(13,26,1)
(31,13,2)
(1,26,2)
(21,13,2)
(22,7,2)
(25,13,2)
(10,26,2)
(1,13,2)
(37,6,2)
(36,0,2)
(27,13,2)
(38,7,2)
(0,6,2)
(9,26,2)
(26,7,2)
(2,13,2)
(0,26,2)
(21,10,2)
(9,6,2)
(32,13,2)
(8,6,2)
(36,6,2)
(24,6,2)
(6,26,2)
(33,6,2)
(6,13,2)
(34,6,2)
(10,13,2)
(16,13,2)
(4,6,2)
-----------------------------------
(0,result = data)
(1,++data)
(2,LLONG_MAX)
(3,)
(4,printLine("data value is too large to perform arithmetic safely.")
(5,result)
(6,data < LLONG_MAX)
(7,globalReturnsTrueOrFalse()
(8,"data value is too large to perform arithmetic safely.")
(9,++data)
(10,result = data)
(11,)
(12,L)
(13,globalReturnsTrueOrFalse()
(14,if (data < LLONG_MAX)
(15,)
(16,data)
(17,)
(18,)
(19,data)
(20,RET)
(21,printLongLongLine(result)
(22,2)
(23,)
(24,result)
(25,data)
(26,data = 2)
(27,result)
(28,if(globalReturnsTrueOrFalse()
(29,result)
(30,)
(31,data)
(32,result)
(33,result)
(34,data)
(35,if(globalReturnsTrueOrFalse()
(36,printLongLongLine(result)
(37,data)
(38,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^