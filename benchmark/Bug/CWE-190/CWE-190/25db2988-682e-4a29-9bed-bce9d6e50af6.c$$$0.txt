-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_add_10_bad()
{
    unsigned int data;
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,38,40,44,45,49,51
-----computeFrom-----
12,13
12,14
21,22
21,23
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_add_10_bad(){    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_add_10_bad()
CWE190_Integer_Overflow__unsigned_int_rand_add_10_bad
{    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(11,4,0)
(3,10,0)
(6,1,0)
(18,6,0)
(10,6,0)
(12,0,0)
(6,18,0)
(10,22,0)
(13,12,0)
(4,24,0)
(7,10,0)
(4,7,0)
(2,12,0)
(1,6,0)
(9,0,0)
(11,24,0)
(20,0,0)
(16,4,0)
(23,11,0)
(8,7,0)
(6,10,0)
(24,14,0)
(17,7,0)
(19,0,0)
(25,24,0)
(7,4,0)
(7,12,0)
(11,4,1)
(23,4,1)
(15,12,1)
(13,2,1)
(5,11,1)
(21,10,1)
(6,1,1)
(8,17,1)
(5,21,1)
(4,7,1)
(7,12,1)
(6,18,1)
(21,15,1)
(3,15,1)
(12,13,1)
(16,21,1)
(7,10,1)
(17,16,1)
(10,6,1)
(7,8,1)
(11,23,1)
(18,3,1)
(11,21,2)
(6,1,2)
(4,21,2)
(7,21,2)
(7,10,2)
(10,15,2)
(10,6,2)
(17,21,2)
(7,12,2)
(6,15,2)
(18,15,2)
(16,21,2)
(4,7,2)
(3,15,2)
(11,4,2)
(6,18,2)
(8,21,2)
(23,21,2)
-----------------------------------
(0,)
(1,unsigned int)
(2,data)
(3,data)
(4,result = data + 1)
(5,RET)
(6,(unsigned int)
(7,data + 1)
(8,1)
(9,data)
(10,data = (unsigned int)
(11,printUnsignedLine(result)
(12,data = 0)
(13,0)
(14,)
(15,globalTrue)
(16,result)
(17,data)
(18,RAND32()
(19,if(globalTrue)
(20,if(globalTrue)
(21,globalTrue)
(22,)
(23,result)
(24,)
(25,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^