-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_add_18_bad()
{
    char data;
    data = ' ';
    goto source;
source:
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%c", &data);
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        char result = data + 1;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
32,33
32,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,26,29,31,33,37,39,43,44,48,50
-----computeFrom-----
12,13
12,14
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_add_18_bad(){    char data;    data = ' ';    goto source;source:    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%c", &data);    goto sink;sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_fscanf_add_18_bad()
CWE190_Integer_Overflow__char_fscanf_add_18_bad
{    char data;    data = ' ';    goto source;source:    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%c", &data);    goto sink;sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
goto source;
source
source:    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%c", &data);
source
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }
sink
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(14,7,0)
(20,4,0)
(4,0,0)
(18,17,0)
(16,7,0)
(12,9,0)
(21,4,0)
(11,7,0)
(3,19,0)
(4,19,0)
(17,18,0)
(18,7,0)
(9,7,0)
(1,17,0)
(22,7,0)
(15,19,0)
(0,4,0)
(17,19,0)
(19,7,0)
(13,0,0)
(8,18,0)
(6,0,0)
(2,6,0)
(23,7,0)
(0,9,0)
(10,18,0)
(6,9,0)
(2,0,1)
(14,19,1)
(15,3,1)
(13,11,1)
(4,20,1)
(6,2,1)
(8,14,1)
(17,19,1)
(4,19,1)
(18,17,1)
(21,13,1)
(0,4,1)
(10,8,1)
(19,15,1)
(5,6,1)
(20,21,1)
(1,10,1)
(11,18,1)
(6,0,1)
(17,1,1)
(18,17,2)
(6,0,2)
(4,19,2)
(0,4,2)
(17,19,2)
-----------------------------------
(0,result = data + 1)
(1,data)
(2,result)
(3,data)
(4,data + 1)
(5,RET)
(6,printHexCharLine(result)
(7,)
(8,stdin)
(9,)
(10,"%c")
(11,goto sink;)
(12,result)
(13,result)
(14,goto source;)
(15,\\\' \\\')
(16,sink:)
(17,&data)
(18,fscanf (stdin, "%c", &data)
(19,data = \\\' \\\')
(20,1)
(21,data)
(22,data)
(23,source:)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^