-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_listen_socket_add_63b_badSink(int * dataPtr)
{
    int data = *dataPtr;
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        int result = data + 1;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
18,19
20,21
20,22
21,22
22,23
22,24
24,25
24,26
26,27
27,28
27,29
28,29
31,32
32,33
32,34
33,34
35,36
-----nextToken-----
2,4,6,8,9,13,15,19,23,25,29,30,34,36
-----computeFrom-----
27,28
27,29
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_listen_socket_add_63b_badSink(int * dataPtr){    int data = *dataPtr;    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_listen_socket_add_63b_badSink(int * dataPtr)
CWE190_Integer_Overflow__int_listen_socket_add_63b_badSink
int * dataPtr
int
* dataPtr
*
dataPtr
{    int data = *dataPtr;    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
int data = *dataPtr;
int data = *dataPtr;
int
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(7,12,0)
(4,12,0)
(1,5,0)
(6,5,0)
(12,4,0)
(0,14,0)
(5,1,0)
(4,1,0)
(3,1,0)
(13,4,0)
(2,4,0)
(10,7,0)
(15,11,0)
(16,12,0)
(14,11,0)
(5,8,0)
(7,14,0)
(1,11,0)
(12,14,0)
(7,12,1)
(12,4,1)
(2,16,1)
(7,10,1)
(16,1,1)
(5,6,1)
(4,1,1)
(1,5,1)
(4,13,1)
(10,12,1)
(9,7,1)
(13,2,1)
(5,8,1)
(6,3,1)
(12,4,2)
(7,12,2)
(1,5,2)
(5,8,2)
(4,1,2)
-----------------------------------
(0,result)
(1,data = *dataPtr)
(2,data)
(3,data)
(4,data + 1)
(5,*dataPtr)
(6,dataPtr)
(7,printIntLine(result)
(8,int * dataPtr)
(9,RET)
(10,result)
(11,)
(12,result = data + 1)
(13,1)
(14,)
(15,data)
(16,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^