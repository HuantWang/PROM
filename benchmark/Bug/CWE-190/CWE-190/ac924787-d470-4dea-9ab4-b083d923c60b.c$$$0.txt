-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_multiply_41_bad()
{
    int64_t data;
    data = 0LL;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%" SCNd64, &data);
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
18,19
19,20
19,21
20,21
22,23
-----nextToken-----
2,4,9,11,15,16,21,23
-----computeFrom-----
13,14
13,15
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ProblemStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_multiply_41_bad(){    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);    badSink(data);}
void
CWE190_Integer_Overflow__int64_t_fscanf_multiply_41_bad()
CWE190_Integer_Overflow__int64_t_fscanf_multiply_41_bad
{    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);    badSink(data);}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
fscanf (stdin, "%" SCNd64, &data);
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(3,1,0)
(4,5,0)
(1,5,0)
(0,5,0)
(1,3,1)
(2,1,1)
(3,4,1)
-----------------------------------
(0,data)
(1,badSink(data)
(2,RET)
(3,data)
(4,L)
(5,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^