-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_preinc_04_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_TRUE)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(STATIC_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
20,22
21,22
22,23
22,24
24,25
24,26
24,27
26,27
27,28
29,30
31,32
31,33
31,34
32,33
32,34
33,34
33,35
33,36
33,37
34,35
36,37
38,39
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
60,61
60,62
61,62
63,64
64,65
64,66
64,67
65,66
66,67
67,68
69,70
70,71
70,72
72,73
72,74
74,75
75,76
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,30,35,37,39,41,43,48,51,53,58,59,62,68,71,73,76,80,82
-----computeFrom-----
12,13
12,14
32,33
32,34
46,47
46,48
-----guardedBy-----
37,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_preinc_04_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_preinc_04_bad()
CWE190_Integer_Overflow__int_fgets_preinc_04_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_TRUE)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(13,0,0)
(18,6,0)
(25,13,0)
(5,23,0)
(29,33,0)
(8,29,0)
(20,14,0)
(31,18,0)
(7,10,0)
(6,26,0)
(3,30,0)
(29,23,0)
(2,23,0)
(6,23,0)
(35,6,0)
(24,26,0)
(28,6,0)
(15,0,0)
(2,26,0)
(4,30,0)
(36,30,0)
(22,7,0)
(2,13,0)
(18,26,0)
(30,1,0)
(26,19,0)
(37,2,0)
(32,33,0)
(33,7,0)
(16,0,0)
(30,33,0)
(6,13,0)
(14,39,0)
(27,33,0)
(11,13,0)
(17,1,0)
(1,30,0)
(12,7,0)
(38,0,0)
(23,29,0)
(23,9,0)
(40,21,1)
(8,5,1)
(30,36,1)
(28,35,1)
(23,29,1)
(30,33,1)
(34,40,1)
(6,13,1)
(5,1,1)
(40,23,1)
(27,21,1)
(1,17,1)
(4,33,1)
(6,28,1)
(40,14,1)
(21,13,1)
(25,11,1)
(18,6,1)
(2,37,1)
(37,40,1)
(2,13,1)
(29,8,1)
(34,18,1)
(13,25,1)
(1,30,1)
(18,31,1)
(3,4,1)
(32,27,1)
(36,3,1)
(20,1,1)
(2,23,1)
(35,2,1)
(31,6,1)
(6,23,1)
(14,20,1)
(33,32,1)
(29,33,1)
(17,30,1)
(28,40,2)
(18,40,2)
(29,33,2)
(30,21,2)
(2,23,2)
(5,1,2)
(23,29,2)
(3,21,2)
(6,13,2)
(1,21,2)
(31,40,2)
(6,23,2)
(36,21,2)
(35,40,2)
(23,1,2)
(17,21,2)
(2,13,2)
(20,1,2)
(1,30,2)
(30,33,2)
(33,21,2)
(37,40,2)
(29,1,2)
(18,6,2)
(6,40,2)
(32,21,2)
(2,40,2)
(27,21,2)
(4,21,2)
(14,1,2)
(8,1,2)
-----------------------------------
(0,)
(1,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(2,++data)
(3,CHAR_ARRAY_SIZE)
(4,inputBuffer)
(5,data)
(6,result = data)
(7,)
(8,inputBuffer)
(9,)
(10,)
(11,data)
(12,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(13,data = 0)
(14,printLine("fgets()
(15,if(STATIC_CONST_TRUE)
(16,data)
(17,NULL)
(18,printIntLine(result)
(19,)
(20,"fgets()
(21,STATIC_CONST_TRUE)
(22,inputBuffer)
(23,data = atoi(inputBuffer)
(24,result)
(25,0)
(26,)
(27,inputBuffer)
(28,data)
(29,atoi(inputBuffer)
(30,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(31,result)
(32,"")
(33,inputBuffer[CHAR_ARRAY_SIZE] = "")
(34,RET)
(35,result)
(36,stdin)
(37,data)
(38,if(STATIC_CONST_TRUE)
(39,)
(40,STATIC_CONST_TRUE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^