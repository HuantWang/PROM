-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_add_32_bad()
{
    char data;
    char *dataPtr1 = &data;
    char *dataPtr2 = &data;
    data = ' ';
    {
        char data = *dataPtr1;
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
        *dataPtr1 = data;
    }
    {
        char data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            char result = data + 1;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
54,55
56,57
57,58
57,59
58,59
59,60
61,62
63,64
63,65
64,65
65,66
65,67
67,68
67,69
69,70
70,71
71,72
73,74
73,75
74,75
75,76
75,77
77,78
77,79
79,80
80,81
80,82
81,82
84,85
85,86
85,87
86,87
88,89
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,51,52,55,60,62,66,68,72,76,78,82,83,87,89
-----computeFrom-----
32,33
32,34
57,58
57,59
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_add_32_bad(){    char data;    char *dataPtr1 = &data;    char *dataPtr2 = &data;    data = ' ';    {        char data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);        *dataPtr1 = data;    }    {        char data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_add_32_bad()
CWE190_Integer_Overflow__char_fscanf_add_32_bad
{    char data;    char *dataPtr1 = &data;    char *dataPtr2 = &data;    data = ' ';    {        char data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);        *dataPtr1 = data;    }    {        char data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
char *dataPtr1 = &data;
char *dataPtr1 = &data;
char
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
char *dataPtr2 = &data;
char *dataPtr2 = &data;
char
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = ' ';
data = ' '
data
data
' '
{        char data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);        *dataPtr1 = data;    }
char data = *dataPtr1;
char data = *dataPtr1;
char
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        char data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
char data = *dataPtr2;
char data = *dataPtr2;
char
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(11,37,0)
(40,0,0)
(3,36,0)
(8,20,0)
(4,7,0)
(20,0,0)
(42,35,0)
(41,30,0)
(19,1,0)
(28,30,0)
(25,12,0)
(29,38,0)
(35,4,0)
(4,37,0)
(30,41,0)
(41,32,0)
(43,17,0)
(38,31,0)
(15,11,0)
(24,1,0)
(7,4,0)
(31,36,0)
(34,3,0)
(45,32,0)
(6,41,0)
(44,19,0)
(16,20,0)
(14,37,0)
(17,37,0)
(5,37,0)
(12,32,0)
(33,21,0)
(32,21,0)
(13,4,0)
(12,11,0)
(8,12,0)
(26,37,0)
(39,31,0)
(32,11,0)
(1,19,0)
(18,1,0)
(3,35,0)
(35,3,0)
(21,32,0)
(21,20,0)
(19,31,0)
(1,3,0)
(0,20,0)
(30,11,0)
(10,36,0)
(27,17,0)
(2,30,0)
(38,19,0)
(9,7,0)
(20,37,0)
(23,8,0)
(36,37,0)
(27,4,1)
(41,6,1)
(8,20,1)
(1,18,1)
(35,42,1)
(8,23,1)
(42,34,1)
(1,3,1)
(25,8,1)
(30,41,1)
(29,19,1)
(7,9,1)
(24,44,1)
(35,4,1)
(3,35,1)
(33,45,1)
(45,17,1)
(18,24,1)
(34,12,1)
(19,1,1)
(9,13,1)
(20,0,1)
(43,27,1)
(12,32,1)
(13,20,1)
(12,25,1)
(40,16,1)
(28,2,1)
(41,32,1)
(21,20,1)
(4,7,1)
(21,33,1)
(44,3,1)
(0,40,1)
(23,30,1)
(38,19,1)
(17,43,1)
(6,28,1)
(32,21,1)
(2,32,1)
(38,29,1)
(22,38,1)
(4,7,2)
(32,21,2)
(38,19,2)
(30,41,2)
(35,4,2)
(41,32,2)
(20,0,2)
(19,1,2)
(1,3,2)
(21,20,2)
(3,35,2)
(8,20,2)
(12,32,2)
-----------------------------------
(0,&data)
(1,data + 1)
(2,stdin)
(3,data = *dataPtr2)
(4,*dataPtr2 = &data)
(5,data)
(6,data)
(7,&data)
(8,*dataPtr1)
(9,data)
(10,data)
(11,)
(12,*dataPtr1 = data)
(13,dataPtr2)
(14,dataPtr2)
(15,data)
(16,dataPtr1)
(17,data = \\\' \\\')
(18,1)
(19,result = data + 1)
(20,*dataPtr1 = &data)
(21,*dataPtr1)
(22,RET)
(23,dataPtr1)
(24,data)
(25,data)
(26,dataPtr1)
(27,data)
(28,"%c")
(29,result)
(30,fscanf (stdin, "%c", &data)
(31,)
(32,data = *dataPtr1)
(33,dataPtr1)
(34,data)
(35,*dataPtr2)
(36,)
(37,)
(38,printHexCharLine(result)
(39,result)
(40,data)
(41,&data)
(42,dataPtr2)
(43,\\\' \\\')
(44,result)
(45,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^