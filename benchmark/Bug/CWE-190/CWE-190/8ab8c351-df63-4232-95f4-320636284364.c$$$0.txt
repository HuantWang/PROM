-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_rand_add_31_bad()
{
    char data;
    data = ' ';
    /* POTENTIAL FLAW: Use a random value */
    data = (char)RAND32();
    {
        char dataCopy = data;
        char data = dataCopy;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            char result = data + 1;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
21,23
24,25
25,26
27,28
27,29
27,30
28,29
29,30
29,31
31,32
31,33
33,34
34,35
36,37
37,38
37,39
39,40
39,41
41,42
42,43
44,45
44,46
45,46
46,47
46,48
48,49
48,50
50,51
51,52
51,53
52,53
55,56
56,57
56,58
57,58
59,60
-----nextToken-----
2,4,8,10,14,15,19,22,23,26,30,32,35,38,40,43,47,49,53,54,58,60
-----computeFrom-----
12,13
12,14
17,18
17,19
51,52
51,53
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_rand_add_31_bad(){    char data;    data = ' ';    /* POTENTIAL FLAW: Use a random value */    data = (char)RAND32();    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_rand_add_31_bad()
CWE190_Integer_Overflow__char_rand_add_31_bad
{    char data;    data = ' ';    /* POTENTIAL FLAW: Use a random value */    data = (char)RAND32();    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
data = (char)RAND32();
data = (char)RAND32()
data
data
(char)RAND32()
char
char

RAND32()
RAND32
RAND32
{        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
char dataCopy = data;
char dataCopy = data;
char
dataCopy = data
dataCopy
= data
data
data
char data = dataCopy;
char data = dataCopy;
char
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(27,26,0)
(5,14,0)
(6,3,0)
(17,9,0)
(20,26,0)
(1,3,0)
(16,14,0)
(28,16,0)
(10,22,0)
(15,2,0)
(14,5,0)
(23,9,0)
(22,26,0)
(7,14,0)
(18,11,0)
(11,3,0)
(25,19,0)
(19,2,0)
(8,17,0)
(6,11,0)
(9,22,0)
(12,19,0)
(11,17,0)
(26,2,0)
(13,17,0)
(22,16,0)
(14,16,0)
(16,2,0)
(17,11,0)
(0,22,0)
(3,26,0)
(24,6,0)
(14,7,0)
(21,9,0)
(9,26,0)
(19,25,1)
(18,9,1)
(10,0,1)
(14,5,1)
(8,18,1)
(13,8,1)
(14,7,1)
(16,14,1)
(4,6,1)
(9,21,1)
(28,19,1)
(24,11,1)
(17,9,1)
(7,28,1)
(6,24,1)
(9,22,1)
(25,12,1)
(23,22,1)
(6,11,1)
(0,16,1)
(11,17,1)
(22,16,1)
(17,13,1)
(21,23,1)
(22,10,1)
(17,9,2)
(9,22,2)
(14,7,2)
(22,16,2)
(6,11,2)
(16,14,2)
(11,17,2)
(14,5,2)
-----------------------------------
(0,dataCopy)
(1,result)
(2,)
(3,)
(4,RET)
(5,char)
(6,printHexCharLine(result)
(7,RAND32()
(8,data)
(9,data = dataCopy)
(10,data)
(11,result = data + 1)
(12,data)
(13,1)
(14,(char)
(15,data)
(16,data = (char)
(17,data + 1)
(18,result)
(19,data = ' ')
(20,data)
(21,dataCopy)
(22,dataCopy = data)
(23,data)
(24,result)
(25,' ')
(26,)
(27,dataCopy)
(28,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^