-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_preinc_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = 0;
    {
        int data = *dataPtr1;
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
51,52
53,54
54,55
54,56
55,56
56,57
58,59
60,61
60,62
61,62
62,63
62,64
64,65
64,66
66,67
67,68
68,69
70,71
70,72
70,73
71,72
72,73
73,74
75,76
76,77
76,78
78,79
78,80
80,81
81,82
83,84
84,85
84,86
85,86
87,88
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,52,57,59,63,65,69,74,77,79,82,86,88
-----computeFrom-----
32,33
32,34
47,48
47,49
54,55
54,56
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_preinc_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_rand_preinc_32_bad()
CWE190_Integer_Overflow__int_rand_preinc_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(40,26,0)
(1,20,0)
(16,21,0)
(32,1,0)
(17,22,0)
(23,39,0)
(39,23,0)
(28,1,0)
(4,26,0)
(37,24,0)
(12,34,0)
(22,17,0)
(18,34,0)
(29,34,0)
(25,20,0)
(6,41,0)
(37,18,0)
(38,12,0)
(1,39,0)
(41,14,0)
(7,12,0)
(10,28,0)
(39,21,0)
(41,26,0)
(22,18,0)
(15,34,0)
(23,29,0)
(43,34,0)
(36,39,0)
(29,33,0)
(31,20,0)
(11,22,0)
(14,18,0)
(2,37,0)
(19,17,0)
(30,40,0)
(26,34,0)
(3,14,0)
(24,37,0)
(26,40,0)
(8,33,0)
(14,37,0)
(25,39,0)
(27,25,0)
(13,18,0)
(21,34,0)
(9,1,0)
(20,21,0)
(17,26,0)
(33,29,0)
(35,23,0)
(28,20,0)
(5,34,0)
(0,29,0)
(9,25,1)
(17,19,1)
(12,7,1)
(23,29,1)
(25,39,1)
(7,38,1)
(23,35,1)
(1,32,1)
(35,36,1)
(6,37,1)
(25,27,1)
(33,8,1)
(41,26,1)
(26,40,1)
(19,11,1)
(42,28,1)
(27,39,1)
(3,41,1)
(30,4,1)
(22,17,1)
(41,6,1)
(32,9,1)
(8,0,1)
(14,37,1)
(38,29,1)
(39,23,1)
(37,24,1)
(36,14,1)
(24,2,1)
(17,26,1)
(10,1,1)
(28,10,1)
(1,39,1)
(40,30,1)
(0,26,1)
(2,22,1)
(29,33,1)
(28,1,1)
(14,3,1)
(11,12,1)
(23,29,2)
(17,26,2)
(25,39,2)
(28,1,2)
(41,26,2)
(29,33,2)
(26,40,2)
(22,17,2)
(37,24,2)
(14,37,2)
(39,23,2)
(1,39,2)
-----------------------------------
(0,dataPtr2)
(1,result = data)
(2,data)
(3,data)
(4,dataPtr1)
(5,dataPtr2)
(6,dataPtr1)
(7,0)
(8,data)
(9,result)
(10,result)
(11,data)
(12,data = 0)
(13,data)
(14,*dataPtr1 = data)
(15,dataPtr1)
(16,data)
(17,*dataPtr1)
(18,)
(19,dataPtr1)
(20,)
(21,)
(22,data = *dataPtr1)
(23,*dataPtr2)
(24,RAND32()
(25,++data)
(26,*dataPtr1 = &data)
(27,data)
(28,printIntLine(result)
(29,*dataPtr2 = &data)
(30,data)
(31,result)
(32,data)
(33,&data)
(34,)
(35,dataPtr2)
(36,data)
(37,data = RAND32()
(38,data)
(39,data = *dataPtr2)
(40,&data)
(41,*dataPtr1)
(42,RET)
(43,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^