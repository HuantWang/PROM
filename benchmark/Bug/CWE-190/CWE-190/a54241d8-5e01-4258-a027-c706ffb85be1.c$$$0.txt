-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_postinc_17_bad()
{
    int i,j;
    int data;
    /* Initialize data */
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
43,46
43,47
44,45
45,46
45,47
46,47
49,50
49,51
50,51
53,54
54,55
56,57
57,58
57,59
57,60
58,59
59,60
60,61
62,63
63,64
63,65
65,66
65,67
67,68
68,69
70,71
71,72
71,73
72,73
74,75
-----nextToken-----
2,4,8,10,12,15,17,21,22,27,28,31,32,35,40,42,47,48,51,52,55,61,64,66,69,73,75
-----computeFrom-----
19,20
19,21
25,26
25,27
29,30
29,31
38,39
38,40
45,46
45,47
49,50
49,51
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_postinc_17_bad(){    int i,j;    int data;    /* Initialize data */    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_postinc_17_bad()
CWE190_Integer_Overflow__int_max_postinc_17_bad
{    int i,j;    int data;    /* Initialize data */    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(32,5,0)
(21,33,0)
(14,5,0)
(16,10,0)
(3,6,0)
(31,26,0)
(36,2,0)
(28,6,0)
(10,2,0)
(19,31,0)
(12,34,0)
(13,2,0)
(11,34,0)
(39,33,0)
(35,26,0)
(9,33,0)
(15,29,0)
(18,29,0)
(29,6,0)
(29,10,0)
(30,32,0)
(21,10,0)
(6,7,0)
(33,1,0)
(8,2,0)
(9,29,0)
(17,21,0)
(38,14,0)
(21,6,0)
(37,2,0)
(0,9,0)
(24,32,0)
(29,33,0)
(4,26,0)
(23,2,0)
(34,26,0)
(27,10,0)
(22,5,0)
(25,5,0)
(26,4,1)
(21,10,1)
(17,32,1)
(9,29,1)
(0,29,1)
(30,14,1)
(10,27,1)
(11,26,1)
(5,25,1)
(22,34,1)
(27,16,1)
(28,3,1)
(12,11,1)
(3,34,1)
(15,18,1)
(11,31,1)
(21,6,1)
(24,30,1)
(6,28,1)
(14,38,1)
(29,15,1)
(32,24,1)
(18,21,1)
(34,12,1)
(30,5,1)
(31,26,1)
(34,26,1)
(32,5,1)
(29,6,1)
(21,17,1)
(29,10,1)
(19,6,1)
(20,32,1)
(4,35,1)
(25,22,1)
(14,5,1)
(38,9,1)
(35,10,1)
(31,19,1)
(9,0,1)
(32,32,2)
(11,34,2)
(24,32,2)
(29,10,2)
(15,32,2)
(9,29,2)
(18,32,2)
(21,6,2)
(31,26,2)
(31,34,2)
(12,34,2)
(28,34,2)
(21,10,2)
(14,32,2)
(0,32,2)
(30,32,2)
(14,5,2)
(19,34,2)
(6,34,2)
(34,34,2)
(17,32,2)
(29,6,2)
(9,32,2)
(32,5,2)
(29,32,2)
(3,34,2)
(38,32,2)
(21,32,2)
(34,26,2)
-----------------------------------
(0,result)
(1,)
(2,)
(3,data)
(4,0)
(5,j = 0)
(6,data = INT_MAX)
(7,)
(8,j)
(9,printIntLine(result)
(10,data = 0)
(11,i)
(12,1)
(13,data)
(14,j++)
(15,data)
(16,data)
(17,data)
(18,result)
(19,i)
(20,RET)
(21,data++)
(22,j)
(23,for(i = 0; i < 1; i++)
(24,1)
(25,0)
(26,i = 0)
(27,0)
(28,INT_MAX)
(29,result = data)
(30,j)
(31,i++)
(32,j < 1)
(33,)
(34,i < 1)
(35,i)
(36,i)
(37,for(j = 0; j < 1; j++)
(38,j)
(39,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^