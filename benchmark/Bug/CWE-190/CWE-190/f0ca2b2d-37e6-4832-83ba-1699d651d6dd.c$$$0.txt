-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_multiply_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    int64_t * dataPtr = (int64_t *)dataVoidPtr;
    /* dereference dataPtr into data */
    int64_t data = (*dataPtr);
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */
        int64_t result = data * 2;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
13,14
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
21,22
23,24
25,26
27,28
28,29
28,30
29,30
31,32
31,33
33,34
34,35
35,36
36,37
38,39
38,40
39,40
39,41
40,41
43,44
43,45
44,45
45,46
45,47
46,47
48,49
48,50
50,51
51,52
51,53
52,53
55,56
56,57
56,58
57,58
59,60
-----nextToken-----
2,4,6,8,9,14,16,17,22,24,26,30,32,37,41,42,47,49,53,54,58,60
-----computeFrom-----
39,40
39,41
51,52
51,53
-----guardedBy-----
41,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_multiply_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    int64_t * dataPtr = (int64_t *)dataVoidPtr;    /* dereference dataPtr into data */    int64_t data = (*dataPtr);    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }}
void
CWE190_Integer_Overflow__int64_t_max_multiply_64b_badSink(void * dataVoidPtr)
CWE190_Integer_Overflow__int64_t_max_multiply_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    int64_t * dataPtr = (int64_t *)dataVoidPtr;    /* dereference dataPtr into data */    int64_t data = (*dataPtr);    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }}
int64_t * dataPtr = (int64_t *)dataVoidPtr;
int64_t * dataPtr = (int64_t *)dataVoidPtr;
int64_t
int64_t
* dataPtr = (int64_t *)dataVoidPtr
*
dataPtr
= (int64_t *)dataVoidPtr
(int64_t *)dataVoidPtr
int64_t *
int64_t
int64_t
*
*
dataVoidPtr
dataVoidPtr
int64_t data = (*dataPtr);
int64_t data = (*dataPtr);
int64_t
int64_t
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */        int64_t result = data * 2;        printLongLongLine(result);    }
int64_t result = data * 2;
int64_t result = data * 2;
int64_t
int64_t
result = data * 2
result
= data * 2
data * 2
data
data
2
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(16,3,0)
(10,12,0)
(2,16,0)
(6,13,0)
(7,22,0)
(15,14,0)
(0,13,0)
(9,22,0)
(21,15,0)
(19,12,0)
(5,9,0)
(17,15,0)
(25,15,0)
(13,12,0)
(23,22,0)
(18,21,0)
(1,25,0)
(26,14,0)
(19,9,0)
(4,19,0)
(12,19,0)
(21,12,0)
(3,16,0)
(24,22,0)
(9,16,0)
(25,14,0)
(16,9,0)
(15,21,0)
(16,11,0)
(12,22,0)
(8,21,0)
(17,13,1)
(20,25,1)
(19,9,1)
(16,11,1)
(13,12,1)
(1,15,1)
(12,19,1)
(13,0,1)
(0,6,1)
(8,17,1)
(6,12,1)
(21,12,1)
(20,13,1)
(9,16,1)
(25,1,1)
(18,8,1)
(15,21,1)
(4,10,1)
(21,18,1)
(10,9,1)
(16,3,1)
(2,5,1)
(25,15,1)
(19,4,1)
(16,2,1)
(15,21,2)
(19,9,2)
(9,16,2)
(25,13,2)
(8,13,2)
(21,12,2)
(21,13,2)
(17,13,2)
(18,13,2)
(1,13,2)
(13,12,2)
(25,15,2)
(15,13,2)
(16,3,2)
(12,19,2)
(16,11,2)
-----------------------------------
(0,0)
(1,result)
(2,dataVoidPtr)
(3,int64_t *)
(4,dataPtr)
(5,dataPtr)
(6,data)
(7,if(data > 0)
(8,data)
(9,* dataPtr = (int64_t *)
(10,data)
(11,void * dataVoidPtr)
(12,data = (*dataPtr)
(13,data > 0)
(14,)
(15,result = data * 2)
(16,(int64_t *)
(17,result)
(18,2)
(19,*dataPtr)
(20,RET)
(21,data * 2)
(22,)
(23,data)
(24,dataPtr)
(25,printLongLongLine(result)
(26,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^