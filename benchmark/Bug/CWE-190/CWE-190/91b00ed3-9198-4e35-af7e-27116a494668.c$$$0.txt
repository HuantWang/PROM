-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_add_03_bad()
{
    unsigned int data;
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
33,34
33,35
36,37
37,38
37,39
38,39
39,40
39,41
41,42
41,43
43,44
44,45
44,46
45,46
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,18,19,24,27,28,31,34,35,40,42,46,47,51,53
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
33,34
33,35
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_add_03_bad(){    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_add_03_bad()
CWE190_Integer_Overflow__unsigned_int_rand_add_03_bad
{    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
5==5
5
5
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(18,28,0)
(1,25,0)
(22,5,0)
(22,3,0)
(13,22,0)
(9,26,0)
(8,3,0)
(26,18,0)
(3,26,0)
(17,25,0)
(5,15,0)
(26,3,0)
(25,19,0)
(11,6,0)
(25,17,0)
(19,12,0)
(14,28,0)
(23,21,0)
(2,28,0)
(24,6,0)
(0,28,0)
(20,19,0)
(29,18,0)
(3,5,0)
(19,25,0)
(27,18,0)
(25,1,0)
(26,19,0)
(4,21,0)
(10,5,0)
(7,26,0)
(26,9,1)
(24,21,1)
(18,27,1)
(7,8,1)
(19,25,1)
(13,3,1)
(22,13,1)
(17,20,1)
(22,3,1)
(11,24,1)
(25,17,1)
(26,18,1)
(8,6,1)
(27,29,1)
(9,7,1)
(20,21,1)
(6,11,1)
(21,23,1)
(26,19,1)
(25,1,1)
(3,26,1)
(4,18,1)
(16,22,1)
(16,6,1)
(23,4,1)
(24,19,1)
(7,6,2)
(26,19,2)
(13,6,2)
(8,6,2)
(9,6,2)
(25,1,2)
(22,3,2)
(19,21,2)
(3,6,2)
(26,6,2)
(17,21,2)
(20,21,2)
(25,21,2)
(19,25,2)
(26,18,2)
(22,6,2)
(3,26,2)
(25,17,2)
-----------------------------------
(0,if(5==5)
(1,unsigned int)
(2,data)
(3,result = data + 1)
(4,5)
(5,)
(6,5==5)
(7,data)
(8,result)
(9,1)
(10,result)
(11,5)
(12,)
(13,result)
(14,if(5==5)
(15,)
(16,RET)
(17,RAND32()
(18,data = 0)
(19,data = (unsigned int)
(20,data)
(21,5==5)
(22,printUnsignedLine(result)
(23,5)
(24,5)
(25,(unsigned int)
(26,data + 1)
(27,0)
(28,)
(29,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^