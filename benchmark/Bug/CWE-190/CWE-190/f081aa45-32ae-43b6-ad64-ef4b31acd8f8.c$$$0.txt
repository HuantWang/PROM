-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_preinc_17_bad()
{
    int i,j;
    short data;
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
43,46
43,47
44,45
45,46
45,47
46,47
49,50
49,51
50,51
53,54
54,55
56,57
57,58
57,59
57,60
58,59
59,60
60,61
62,63
63,64
63,65
65,66
65,67
67,68
68,69
70,71
71,72
71,73
72,73
74,75
-----nextToken-----
2,4,8,10,12,15,17,21,22,27,28,31,32,35,40,42,47,48,51,52,55,61,64,66,69,73,75
-----computeFrom-----
19,20
19,21
25,26
25,27
29,30
29,31
38,39
38,40
45,46
45,47
49,50
49,51
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_preinc_17_bad(){    int i,j;    short data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_preinc_17_bad()
CWE190_Integer_Overflow__short_max_preinc_17_bad
{    int i,j;    short data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(30,32,0)
(4,6,0)
(21,5,0)
(35,16,0)
(18,4,0)
(17,13,0)
(39,20,0)
(37,24,0)
(26,25,0)
(16,29,0)
(23,25,0)
(22,29,0)
(28,20,0)
(0,6,0)
(15,12,0)
(31,33,0)
(3,4,0)
(2,25,0)
(32,29,0)
(13,25,0)
(16,13,0)
(32,24,0)
(24,13,0)
(20,36,0)
(1,38,0)
(24,29,0)
(33,38,0)
(24,20,0)
(16,20,0)
(19,6,0)
(12,6,0)
(8,13,0)
(29,34,0)
(10,38,0)
(7,5,0)
(5,38,0)
(14,25,0)
(27,25,0)
(11,24,0)
(31,32,1)
(18,6,1)
(9,5,1)
(30,24,1)
(24,20,1)
(13,17,1)
(4,6,1)
(21,7,1)
(39,28,1)
(38,1,1)
(24,13,1)
(7,33,1)
(19,0,1)
(0,13,1)
(3,18,1)
(5,21,1)
(5,38,1)
(20,39,1)
(11,16,1)
(17,8,1)
(28,4,1)
(37,11,1)
(6,19,1)
(10,4,1)
(7,38,1)
(18,12,1)
(33,38,1)
(4,3,1)
(16,35,1)
(24,37,1)
(32,30,1)
(16,13,1)
(32,24,1)
(12,6,1)
(12,15,1)
(15,20,1)
(33,31,1)
(1,10,1)
(16,20,1)
(35,5,1)
(20,4,2)
(5,5,2)
(24,20,2)
(3,4,2)
(33,38,2)
(30,5,2)
(24,13,2)
(21,5,2)
(16,13,2)
(16,20,2)
(35,5,2)
(32,5,2)
(12,6,2)
(4,4,2)
(11,5,2)
(31,5,2)
(28,4,2)
(15,4,2)
(33,5,2)
(16,5,2)
(12,4,2)
(5,38,2)
(32,24,2)
(4,6,2)
(7,5,2)
(39,4,2)
(24,5,2)
(37,5,2)
(18,4,2)
-----------------------------------
(0,i)
(1,0)
(2,i)
(3,1)
(4,i < 1)
(5,j < 1)
(6,i = 0)
(7,j)
(8,data)
(9,RET)
(10,j)
(11,result)
(12,i++)
(13,data = 0)
(14,for(i = 0; i < 1; i++)
(15,i)
(16,++data)
(17,0)
(18,i)
(19,0)
(20,data = SHRT_MAX)
(21,1)
(22,result)
(23,j)
(24,result = data)
(25,)
(26,data)
(27,for(j = 0; j < 1; j++)
(28,data)
(29,)
(30,result)
(31,j)
(32,printIntLine(result)
(33,j++)
(34,)
(35,data)
(36,)
(37,data)
(38,j = 0)
(39,SHRT_MAX)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^