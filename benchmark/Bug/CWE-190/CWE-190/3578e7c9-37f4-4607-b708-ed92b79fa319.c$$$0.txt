-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_square_07_bad()
{
    unsigned int data;
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
40,41
41,42
41,43
43,44
43,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,42,44,48,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_square_07_bad(){    unsigned int data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_square_07_bad()
CWE190_Integer_Overflow__unsigned_int_rand_square_07_bad
{    unsigned int data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(staticFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(28,29,0)
(9,25,0)
(22,29,0)
(22,2,0)
(12,7,0)
(29,22,0)
(29,14,0)
(27,7,0)
(5,29,0)
(18,1,0)
(6,13,0)
(28,25,0)
(23,28,0)
(10,3,0)
(1,25,0)
(8,12,0)
(16,22,0)
(0,21,0)
(25,28,0)
(26,13,0)
(25,0,0)
(19,12,0)
(1,0,0)
(17,3,0)
(20,7,0)
(24,0,0)
(28,12,0)
(11,28,0)
(22,16,0)
(2,22,0)
(15,7,0)
(22,2,1)
(3,10,1)
(29,22,1)
(18,25,1)
(13,26,1)
(22,16,1)
(16,5,1)
(6,12,1)
(1,18,1)
(17,29,1)
(5,13,1)
(10,17,1)
(4,3,1)
(25,28,1)
(28,12,1)
(23,11,1)
(26,6,1)
(19,8,1)
(28,29,1)
(28,23,1)
(17,13,1)
(1,25,1)
(12,19,1)
(11,9,1)
(4,1,1)
(9,3,1)
(25,28,2)
(22,2,2)
(29,13,2)
(22,16,2)
(22,13,2)
(9,3,2)
(18,3,2)
(28,12,2)
(28,29,2)
(5,13,2)
(1,25,2)
(23,3,2)
(25,3,2)
(29,22,2)
(1,3,2)
(16,13,2)
(11,3,2)
(28,3,2)
-----------------------------------
(0,)
(1,printUnsignedLine(result)
(2,unsigned int)
(3,staticFive==5)
(4,RET)
(5,data)
(6,staticFive)
(7,)
(8,data)
(9,result)
(10,5)
(11,data)
(12,data = 0)
(13,staticFive==5)
(14,)
(15,data)
(16,RAND32()
(17,staticFive)
(18,result)
(19,0)
(20,if(staticFive==5)
(21,)
(22,(unsigned int)
(23,data)
(24,result)
(25,result = data * data)
(26,5)
(27,if(staticFive==5)
(28,data * data)
(29,data = (unsigned int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^