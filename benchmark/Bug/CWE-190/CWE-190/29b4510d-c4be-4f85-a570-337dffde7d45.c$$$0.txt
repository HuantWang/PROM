-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_bad()
{
    unsigned int data;
    data = 0;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
36,39
37,38
38,39
39,40
41,42
42,43
42,44
44,45
44,46
46,47
47,48
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,40,43,45,48,52,54
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_bad(){    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_bad
{    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(7,22,0)
(8,14,0)
(23,14,0)
(15,22,0)
(22,18,0)
(25,14,0)
(3,17,0)
(0,1,0)
(5,17,0)
(20,1,0)
(19,25,0)
(12,3,0)
(17,14,0)
(16,17,0)
(6,1,0)
(18,14,0)
(14,1,0)
(11,18,0)
(22,13,0)
(18,22,0)
(9,24,0)
(17,24,0)
(3,24,0)
(24,2,0)
(25,24,0)
(4,21,1)
(11,15,1)
(15,7,1)
(25,19,1)
(21,22,1)
(10,14,1)
(25,14,1)
(14,23,1)
(5,16,1)
(17,14,1)
(18,14,1)
(22,18,1)
(3,12,1)
(19,21,1)
(4,3,1)
(23,8,1)
(3,17,1)
(16,25,1)
(12,17,1)
(21,10,1)
(17,5,1)
(7,10,1)
(18,11,1)
(25,21,2)
(12,21,2)
(5,21,2)
(22,18,2)
(15,10,2)
(25,14,2)
(22,10,2)
(17,14,2)
(18,14,2)
(16,21,2)
(11,10,2)
(7,10,2)
(17,21,2)
(3,17,2)
(18,10,2)
(19,21,2)
(3,21,2)
-----------------------------------
(0,data)
(1,)
(2,)
(3,printUnsignedLine(result)
(4,RET)
(5,data)
(6,if(staticReturnsTrue()
(7,stdin)
(8,data)
(9,result)
(10,staticReturnsTrue()
(11,data)
(12,result)
(13,)
(14,data = 0)
(15,"%u")
(16,result)
(17,result = data)
(18,&data)
(19,data)
(20,if(staticReturnsTrue()
(21,staticReturnsTrue()
(22,fscanf (stdin, "%u", &data)
(23,0)
(24,)
(25,data++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^