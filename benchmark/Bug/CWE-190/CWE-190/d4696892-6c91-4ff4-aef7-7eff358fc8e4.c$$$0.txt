-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_multiply_12_bad()
{
    int64_t data;
    data = 0LL;
    if(globalReturnsTrueOrFalse())
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
    }
    else
    {
        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */
        data = 2;
    }
    if(globalReturnsTrueOrFalse())
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */
            int64_t result = data * 2;
            printLongLongLine(result);
        }
    }
    else
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* FIX: Add a check to prevent an overflow from occurring */
            if (data < (LLONG_MAX/2))
            {
                int64_t result = data * 2;
                printLongLongLine(result);
            }
            else
            {
                printLine("data value is too large to perform arithmetic safely.");
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
17,20
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
28,29
31,32
32,33
34,35
35,36
36,37
36,38
37,38
40,41
40,42
40,43
41,42
42,43
44,45
45,46
45,47
46,47
46,48
47,48
50,51
50,52
51,52
52,53
52,54
53,54
55,56
55,57
57,58
58,59
58,60
59,60
62,63
63,64
63,65
64,65
66,67
68,69
69,70
69,71
70,71
70,72
71,72
74,75
75,76
75,77
75,78
76,77
76,78
77,78
79,80
80,81
80,82
81,82
84,85
84,86
85,86
86,87
86,88
87,88
89,90
89,91
91,92
92,93
92,94
93,94
96,97
97,98
97,99
98,99
100,101
102,103
103,104
104,105
104,106
105,106
-----nextToken-----
2,4,9,11,15,16,20,25,29,30,33,38,39,43,48,49,54,56,60,61,65,67,72,73,78,82,83,88,90,94,95,99,101,106,107
-----computeFrom-----
13,14
13,15
23,24
23,25
36,37
36,38
46,47
46,48
58,59
58,60
70,71
70,72
76,77
76,78
80,81
80,82
92,93
92,94
-----guardedBy-----
48,60
72,94
78,94
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_multiply_12_bad(){    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }    }    else    {        if(data > 0) /* ensure we won't have an underflow */        {            /* FIX: Add a check to prevent an overflow from occurring */            if (data < (LLONG_MAX/2))            {                int64_t result = data * 2;                printLongLongLine(result);            }            else            {                printLine("data value is too large to perform arithmetic safely.");            }        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_multiply_12_bad()
CWE190_Integer_Overflow__int64_t_rand_multiply_12_bad
{    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }    }    else    {        if(data > 0) /* ensure we won't have an underflow */        {            /* FIX: Add a check to prevent an overflow from occurring */            if (data < (LLONG_MAX/2))            {                int64_t result = data * 2;                printLongLongLine(result);            }            else            {                printLine("data value is too large to perform arithmetic safely.");            }        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
{        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
data = 2;
data = 2
data
data
2
if(globalReturnsTrueOrFalse())    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }    }    else    {        if(data > 0) /* ensure we won't have an underflow */        {            /* FIX: Add a check to prevent an overflow from occurring */            if (data < (LLONG_MAX/2))            {                int64_t result = data * 2;                printLongLongLine(result);            }            else            {                printLine("data value is too large to perform arithmetic safely.");            }        }    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > LLONG_MAX, this will overflow */            int64_t result = data * 2;            printLongLongLine(result);        }
int64_t result = data * 2;
int64_t result = data * 2;
int64_t
int64_t
result = data * 2
result
= data * 2
data * 2
data
data
2
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{        if(data > 0) /* ensure we won't have an underflow */        {            /* FIX: Add a check to prevent an overflow from occurring */            if (data < (LLONG_MAX/2))            {                int64_t result = data * 2;                printLongLongLine(result);            }            else            {                printLine("data value is too large to perform arithmetic safely.");            }        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* FIX: Add a check to prevent an overflow from occurring */            if (data < (LLONG_MAX/2))            {                int64_t result = data * 2;                printLongLongLine(result);            }            else            {                printLine("data value is too large to perform arithmetic safely.");            }        }
data > 0
data
data
0
{            /* FIX: Add a check to prevent an overflow from occurring */            if (data < (LLONG_MAX/2))            {                int64_t result = data * 2;                printLongLongLine(result);            }            else            {                printLine("data value is too large to perform arithmetic safely.");            }        }
if (data < (LLONG_MAX/2))            {                int64_t result = data * 2;                printLongLongLine(result);            }            else            {                printLine("data value is too large to perform arithmetic safely.");            }
data < (LLONG_MAX/2)
data
data
(LLONG_MAX/2)
LLONG_MAX/2
LLONG_MAX
LLONG_MAX
2
{                int64_t result = data * 2;                printLongLongLine(result);            }
int64_t result = data * 2;
int64_t result = data * 2;
int64_t
int64_t
result = data * 2
result
= data * 2
data * 2
data
data
2
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{                printLine("data value is too large to perform arithmetic safely.");            }
printLine("data value is too large to perform arithmetic safely.");
printLine("data value is too large to perform arithmetic safely.")
printLine
printLine
"data value is too large to perform arithmetic safely."
-----joern-----
(20,26,0)
(28,12,0)
(33,42,0)
(4,5,0)
(47,27,0)
(48,35,0)
(38,26,0)
(16,7,0)
(35,13,0)
(22,13,0)
(28,27,0)
(37,29,0)
(30,13,0)
(47,28,0)
(36,41,0)
(15,25,0)
(15,13,0)
(49,30,0)
(25,11,0)
(41,15,0)
(52,13,0)
(12,28,0)
(18,22,0)
(43,42,0)
(22,25,0)
(51,5,0)
(13,55,0)
(50,2,0)
(12,13,0)
(2,44,0)
(54,30,0)
(34,25,0)
(30,25,0)
(17,28,0)
(23,22,0)
(53,35,0)
(7,5,0)
(26,13,0)
(40,42,0)
(39,19,0)
(35,53,0)
(14,32,0)
(8,27,0)
(26,25,0)
(10,41,0)
(15,41,0)
(13,35,0)
(6,25,0)
(21,42,0)
(46,12,0)
(12,25,0)
(7,4,0)
(30,4,0)
(9,47,0)
(24,4,0)
(35,48,0)
(45,12,0)
(0,15,0)
(4,30,0)
(17,15,1)
(20,38,1)
(7,4,1)
(26,20,1)
(50,15,1)
(24,26,1)
(28,12,1)
(35,48,1)
(16,4,1)
(36,10,1)
(23,18,1)
(22,23,1)
(18,3,1)
(49,24,1)
(1,26,1)
(2,50,1)
(15,25,1)
(13,35,1)
(1,22,1)
(45,17,1)
(12,46,1)
(30,25,1)
(54,49,1)
(9,28,1)
(52,31,1)
(15,41,1)
(1,7,1)
(30,54,1)
(22,25,1)
(47,9,1)
(31,33,1)
(22,13,1)
(30,13,1)
(53,52,1)
(26,13,1)
(12,13,1)
(7,16,1)
(4,30,1)
(1,2,1)
(15,13,1)
(34,6,1)
(25,34,1)
(46,45,1)
(12,25,1)
(41,36,1)
(6,31,1)
(38,3,1)
(3,13,1)
(47,28,1)
(10,0,1)
(35,53,1)
(26,25,1)
(0,22,1)
(1,47,1)
(3,25,1)
(30,25,2)
(28,15,2)
(7,26,2)
(22,25,2)
(35,31,2)
(12,15,2)
(41,22,2)
(50,15,2)
(26,13,2)
(25,31,2)
(53,31,2)
(23,3,2)
(35,48,2)
(38,3,2)
(36,22,2)
(13,31,2)
(13,35,2)
(22,3,2)
(35,53,2)
(16,26,2)
(47,28,2)
(26,3,2)
(54,26,2)
(6,31,2)
(34,31,2)
(26,25,2)
(45,15,2)
(15,22,2)
(30,13,2)
(4,26,2)
(12,25,2)
(46,15,2)
(52,31,2)
(12,13,2)
(28,12,2)
(30,26,2)
(10,22,2)
(9,15,2)
(20,3,2)
(17,15,2)
(15,41,2)
(0,22,2)
(49,26,2)
(24,26,2)
(15,25,2)
(2,15,2)
(18,3,2)
(7,4,2)
(4,30,2)
(15,13,2)
(47,15,2)
(22,13,2)
-----------------------------------
(0,data)
(1,RET)
(2,printLine("data value is too large to perform arithmetic safely.")
(3,globalReturnsTrueOrFalse()
(4,result = data * 2)
(5,)
(6,data)
(7,printLongLongLine(result)
(8,result)
(9,result)
(10,LLONG_MAX)
(11,)
(12,data * 2)
(13,data = (int64_t)
(14,if(data > 0)
(15,data < (LLONG_MAX/2)
(16,result)
(17,result)
(18,data)
(19,)
(20,0)
(21,if(globalReturnsTrueOrFalse()
(22,data > 0)
(23,0)
(24,result)
(25,data = 2)
(26,data > 0)
(27,)
(28,result = data * 2)
(29,)
(30,data * 2)
(31,globalReturnsTrueOrFalse()
(32,)
(33,L)
(34,2)
(35,(int64_t)
(36,2)
(37,if (data < (LLONG_MAX/2)
(38,data)
(39,if(data > 0)
(40,data)
(41,LLONG_MAX/2)
(42,)
(43,if(globalReturnsTrueOrFalse()
(44,)
(45,data)
(46,2)
(47,printLongLongLine(result)
(48,int64_t)
(49,data)
(50,"data value is too large to perform arithmetic safely.")
(51,result)
(52,data)
(53,RAND64()
(54,2)
(55,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^