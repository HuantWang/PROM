-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_postinc_16_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    while(1)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
21,22
23,24
24,25
27,28
27,29
29,30
29,31
30,31
30,32
30,33
31,32
32,33
33,34
35,36
36,37
36,38
38,39
38,40
40,41
41,42
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,15,17,22,25,26,28,34,37,39,42,46,48,49
-----computeFrom-----
12,13
12,14
20,21
20,22
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_postinc_16_bad(){    int data;    /* Initialize data */    data = 0;    while(1)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__int_rand_postinc_16_bad()
CWE190_Integer_Overflow__int_rand_postinc_16_bad
{    int data;    /* Initialize data */    data = 0;    while(1)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }        break;    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    }
1
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
break;
while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
break;
-----joern-----
(21,7,0)
(8,0,0)
(10,8,0)
(3,25,0)
(16,14,0)
(4,7,0)
(13,22,0)
(5,0,0)
(19,14,0)
(18,19,0)
(9,0,0)
(15,19,0)
(17,23,0)
(19,7,0)
(7,23,0)
(8,7,0)
(18,14,0)
(11,23,0)
(0,25,0)
(12,23,0)
(19,0,0)
(24,18,0)
(14,22,0)
(0,5,0)
(8,14,0)
(2,19,0)
(10,1,1)
(8,10,1)
(18,24,1)
(19,2,1)
(24,19,1)
(20,7,1)
(2,15,1)
(9,20,1)
(19,7,1)
(5,9,1)
(8,7,1)
(13,18,1)
(1,3,1)
(0,5,1)
(7,21,1)
(15,8,1)
(6,13,1)
(21,4,1)
(1,20,1)
(19,0,1)
(3,0,1)
(6,1,1)
(18,19,1)
(8,0,1)
(18,1,2)
(13,1,2)
(18,19,2)
(8,1,2)
(8,0,2)
(24,1,2)
(19,7,2)
(2,1,2)
(19,1,2)
(19,0,2)
(10,1,2)
(5,20,2)
(8,7,2)
(0,5,2)
(15,1,2)
(9,20,2)
(0,20,2)
(3,20,2)
-----------------------------------
(0,data = RAND32()
(1,1)
(2,data)
(3,break;)
(4,data)
(5,RAND32()
(6,RET)
(7,data = 0)
(8,data++)
(9,data)
(10,data)
(11,data)
(12,while(1)
(13,break;)
(14,)
(15,result)
(16,result)
(17,while(1)
(18,printIntLine(result)
(19,result = data)
(20,1)
(21,0)
(22,)
(23,)
(24,result)
(25,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^