-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_add_10_bad()
{
    short data;
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,37,39,43,44,48,50
-----computeFrom-----
12,13
12,14
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_add_10_bad(){    short data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_add_10_bad()
CWE190_Integer_Overflow__short_fscanf_add_10_bad
{    short data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(globalTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(13,22,0)
(5,25,0)
(9,22,0)
(20,14,0)
(25,12,0)
(2,12,0)
(18,22,0)
(1,10,0)
(6,12,0)
(16,7,0)
(12,10,0)
(25,7,0)
(22,19,0)
(4,25,0)
(15,10,0)
(11,14,0)
(9,12,0)
(7,14,0)
(22,9,0)
(17,10,0)
(3,11,0)
(8,9,0)
(7,25,0)
(11,7,0)
(14,24,0)
(23,21,1)
(0,23,1)
(6,2,1)
(7,25,1)
(12,6,1)
(18,13,1)
(4,16,1)
(11,7,1)
(0,11,1)
(16,23,1)
(21,12,1)
(11,3,1)
(25,12,1)
(9,12,1)
(25,5,1)
(23,22,1)
(9,8,1)
(8,18,1)
(13,21,1)
(5,4,1)
(22,9,1)
(3,7,1)
(13,21,2)
(11,23,2)
(8,21,2)
(22,21,2)
(4,23,2)
(5,23,2)
(25,23,2)
(3,23,2)
(18,21,2)
(9,12,2)
(22,9,2)
(25,12,2)
(9,21,2)
(16,23,2)
(7,25,2)
(11,7,2)
(7,23,2)
-----------------------------------
(0,RET)
(1,data)
(2,data)
(3,result)
(4,data)
(5,1)
(6,0)
(7,result = data + 1)
(8,data)
(9,&data)
(10,)
(11,printIntLine(result)
(12,data = 0)
(13,stdin)
(14,)
(15,if(globalTrue)
(16,result)
(17,if(globalTrue)
(18,"%hd")
(19,)
(20,result)
(21,globalTrue)
(22,fscanf (stdin, "%hd", &data)
(23,globalTrue)
(24,)
(25,data + 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^