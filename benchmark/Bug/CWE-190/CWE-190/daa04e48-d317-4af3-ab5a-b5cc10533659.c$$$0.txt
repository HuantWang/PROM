-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_add_11_bad()
{
    short data;
    data = 0;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,39,41,45,46,50,52
-----computeFrom-----
12,13
12,14
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_add_11_bad(){    short data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_add_11_bad()
CWE190_Integer_Overflow__short_fscanf_add_11_bad
{    short data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(23,12,0)
(9,15,0)
(1,13,0)
(25,1,0)
(20,1,0)
(5,15,0)
(10,8,0)
(7,9,0)
(3,16,0)
(4,16,0)
(4,22,0)
(13,1,0)
(12,10,0)
(1,9,0)
(2,15,0)
(12,13,0)
(13,10,0)
(11,15,0)
(16,4,0)
(18,9,0)
(21,10,0)
(16,9,0)
(19,4,0)
(17,4,0)
(24,13,0)
(17,0,1)
(25,24,1)
(16,3,1)
(1,9,1)
(12,13,1)
(16,9,1)
(3,19,1)
(24,14,1)
(0,9,1)
(1,20,1)
(20,25,1)
(6,14,1)
(6,12,1)
(14,4,1)
(4,16,1)
(7,18,1)
(9,7,1)
(13,1,1)
(23,13,1)
(12,23,1)
(19,17,1)
(14,0,1)
(4,0,2)
(19,0,2)
(13,14,2)
(1,9,2)
(12,14,2)
(17,0,2)
(16,0,2)
(24,14,2)
(23,14,2)
(3,0,2)
(12,13,2)
(16,9,2)
(4,16,2)
(1,14,2)
(13,1,2)
(25,14,2)
(20,14,2)
-----------------------------------
(0,globalReturnsTrue()
(1,data + 1)
(2,if(globalReturnsTrue()
(3,data)
(4,fscanf (stdin, "%hd", &data)
(5,if(globalReturnsTrue()
(6,RET)
(7,0)
(8,)
(9,data = 0)
(10,)
(11,data)
(12,printIntLine(result)
(13,result = data + 1)
(14,globalReturnsTrue()
(15,)
(16,&data)
(17,stdin)
(18,data)
(19,"%hd")
(20,1)
(21,result)
(22,)
(23,result)
(24,result)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^