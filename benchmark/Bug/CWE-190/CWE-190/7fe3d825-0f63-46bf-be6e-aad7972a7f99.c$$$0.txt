-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_add_03_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
32,34
35,36
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,27,30,33,34,39,41,45,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
32,33
32,34
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_add_03_bad(){    int data;    /* Initialize data */    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_add_03_bad()
CWE190_Integer_Overflow__int_fscanf_add_03_bad
{    int data;    /* Initialize data */    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
5==5
5
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(13,12,0)
(18,16,0)
(9,24,0)
(6,16,0)
(1,18,0)
(23,21,0)
(2,18,0)
(16,17,0)
(7,10,0)
(8,14,0)
(28,21,0)
(26,18,0)
(22,2,0)
(15,24,0)
(18,2,0)
(2,15,0)
(12,14,0)
(19,1,0)
(14,12,0)
(25,24,0)
(0,15,0)
(27,2,0)
(3,24,0)
(14,5,0)
(11,10,0)
(4,14,0)
(12,15,0)
(1,16,0)
(29,15,0)
(1,19,1)
(14,12,1)
(4,8,1)
(13,4,1)
(23,28,1)
(12,15,1)
(0,29,1)
(18,2,1)
(2,27,1)
(20,10,1)
(20,1,1)
(28,15,1)
(8,21,1)
(26,10,1)
(22,26,1)
(27,22,1)
(15,0,1)
(2,15,1)
(7,21,1)
(7,14,1)
(11,7,1)
(21,23,1)
(12,13,1)
(10,11,1)
(1,18,1)
(19,18,1)
(8,21,2)
(26,10,2)
(18,10,2)
(12,21,2)
(2,10,2)
(13,21,2)
(2,15,2)
(14,12,2)
(27,10,2)
(4,21,2)
(18,2,2)
(12,15,2)
(1,10,2)
(14,21,2)
(22,10,2)
(19,10,2)
(1,18,2)
-----------------------------------
(0,0)
(1,printIntLine(result)
(2,data + 1)
(3,if(5==5)
(4,"%d")
(5,)
(6,result)
(7,5)
(8,stdin)
(9,if(5==5)
(10,5==5)
(11,5)
(12,&data)
(13,data)
(14,fscanf(stdin, "%d", &data)
(15,data = 0)
(16,)
(17,)
(18,result = data + 1)
(19,result)
(20,RET)
(21,5==5)
(22,data)
(23,5)
(24,)
(25,data)
(26,result)
(27,1)
(28,5)
(29,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^