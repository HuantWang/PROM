-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_bad()
{
    int i,j;
    unsigned int data;
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
38,39
38,40
39,40
41,42
41,43
42,43
42,44
45,46
46,47
48,49
48,50
48,51
48,52
49,50
50,51
50,52
51,52
54,55
54,56
55,56
58,59
59,60
61,62
62,63
62,64
62,65
63,64
64,65
65,66
67,68
68,69
68,70
70,71
70,72
72,73
73,74
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,8,10,12,15,17,21,22,27,28,31,32,35,40,43,44,47,52,53,56,57,60,66,69,71,74,78,80
-----computeFrom-----
19,20
19,21
25,26
25,27
29,30
29,31
38,39
38,40
50,51
50,52
54,55
54,56
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_bad(){    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_bad()
CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_bad
{    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(36,15,0)
(23,26,0)
(28,29,0)
(29,33,0)
(31,14,0)
(0,14,0)
(32,33,0)
(4,33,0)
(30,8,0)
(18,24,0)
(5,33,0)
(16,24,0)
(21,23,0)
(9,30,0)
(24,15,0)
(25,29,0)
(12,8,0)
(10,15,0)
(23,11,0)
(1,14,0)
(19,14,0)
(22,10,0)
(11,27,0)
(8,14,0)
(11,23,0)
(13,15,0)
(30,37,0)
(37,20,0)
(41,14,0)
(34,11,0)
(35,21,0)
(6,5,0)
(35,37,0)
(17,35,0)
(21,8,0)
(21,37,0)
(38,23,0)
(2,8,0)
(11,34,0)
(7,21,0)
(39,37,0)
(30,23,0)
(3,21,0)
(27,11,0)
(35,17,1)
(40,29,1)
(17,21,1)
(35,21,1)
(32,4,1)
(24,15,1)
(2,12,1)
(25,33,1)
(21,3,1)
(16,10,1)
(18,16,1)
(8,2,1)
(11,34,1)
(30,9,1)
(25,5,1)
(21,8,1)
(21,23,1)
(4,24,1)
(16,15,1)
(27,38,1)
(10,15,1)
(23,11,1)
(33,32,1)
(22,23,1)
(38,24,1)
(29,33,1)
(30,23,1)
(3,7,1)
(29,28,1)
(30,8,1)
(10,22,1)
(13,8,1)
(15,36,1)
(28,25,1)
(5,6,1)
(11,27,1)
(36,13,1)
(5,33,1)
(6,35,1)
(7,30,1)
(9,29,1)
(24,18,1)
(5,29,2)
(11,34,2)
(21,8,2)
(35,21,2)
(23,11,2)
(35,29,2)
(16,24,2)
(21,29,2)
(6,29,2)
(11,27,2)
(25,29,2)
(22,24,2)
(29,33,2)
(23,24,2)
(30,23,2)
(21,23,2)
(27,24,2)
(29,29,2)
(17,29,2)
(38,24,2)
(10,15,2)
(11,24,2)
(24,15,2)
(30,29,2)
(10,24,2)
(5,33,2)
(3,29,2)
(24,24,2)
(9,29,2)
(18,24,2)
(7,29,2)
(28,29,2)
(30,8,2)
-----------------------------------
(0,data)
(1,for(j = 0; j < 1; j++)
(2,0)
(3,data)
(4,j)
(5,j++)
(6,j)
(7,result)
(8,data = 0)
(9,data)
(10,i++)
(11,(unsigned int)
(12,data)
(13,i)
(14,)
(15,i = 0)
(16,i)
(17,result)
(18,1)
(19,j)
(20,)
(21,result = data)
(22,i)
(23,data = (unsigned int)
(24,i < 1)
(25,j)
(26,)
(27,RAND32()
(28,1)
(29,j < 1)
(30,data++)
(31,for(i = 0; i < 1; i++)
(32,0)
(33,j = 0)
(34,unsigned int)
(35,printUnsignedLine(result)
(36,0)
(37,)
(38,data)
(39,result)
(40,RET)
(41,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^