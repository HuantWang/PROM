-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_postinc_34_bad()
{
    short data;
    CWE190_Integer_Overflow__short_max_postinc_34_unionType myUnion;
    data = 0;
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = SHRT_MAX;
    myUnion.unionFirst = data;
    {
        short data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
30,32
31,32
34,35
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
47,50
48,49
49,50
50,51
52,53
53,54
53,55
55,56
55,57
57,58
58,59
60,61
61,62
61,63
62,63
64,65
-----nextToken-----
2,4,8,10,14,16,20,21,25,27,32,33,35,39,41,45,46,51,54,56,59,63,65
-----computeFrom-----
18,19
18,20
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_postinc_34_bad(){    short data;    CWE190_Integer_Overflow__short_max_postinc_34_unionType myUnion;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = SHRT_MAX;    myUnion.unionFirst = data;    {        short data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_postinc_34_bad()
CWE190_Integer_Overflow__short_max_postinc_34_bad
{    short data;    CWE190_Integer_Overflow__short_max_postinc_34_unionType myUnion;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = SHRT_MAX;    myUnion.unionFirst = data;    {        short data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
CWE190_Integer_Overflow__short_max_postinc_34_unionType myUnion;
CWE190_Integer_Overflow__short_max_postinc_34_unionType myUnion;
CWE190_Integer_Overflow__short_max_postinc_34_unionType
CWE190_Integer_Overflow__short_max_postinc_34_unionType
myUnion
myUnion
data = 0;
data = 0
data
data
0
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        short data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
short data = myUnion.unionSecond;
short data = myUnion.unionSecond;
short
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(27,10,0)
(25,3,0)
(10,18,0)
(8,18,0)
(11,2,0)
(20,3,0)
(1,6,0)
(28,0,0)
(10,0,0)
(6,28,0)
(4,0,0)
(23,0,0)
(3,28,0)
(9,28,0)
(29,6,0)
(18,0,0)
(21,12,0)
(29,12,0)
(12,6,0)
(30,29,0)
(24,12,0)
(1,3,0)
(7,0,0)
(19,6,0)
(5,4,0)
(2,10,0)
(15,4,0)
(16,1,0)
(14,20,0)
(3,20,0)
(17,18,0)
(12,3,0)
(13,20,0)
(22,2,0)
(17,8,1)
(13,14,1)
(1,3,1)
(8,4,1)
(5,15,1)
(12,3,1)
(30,12,1)
(20,13,1)
(10,18,1)
(27,2,1)
(16,3,1)
(14,25,1)
(29,30,1)
(1,16,1)
(10,27,1)
(26,29,1)
(2,22,1)
(29,12,1)
(25,10,1)
(22,11,1)
(11,18,1)
(12,24,1)
(18,17,1)
(21,1,1)
(3,20,1)
(4,5,1)
(24,21,1)
(3,20,2)
(1,3,2)
(12,3,2)
(29,12,2)
(10,18,2)
-----------------------------------
(0,)
(1,data++)
(2,myUnion.unionFirst)
(3,data = myUnion.unionSecond)
(4,data = 0)
(5,0)
(6,)
(7,data)
(8,data)
(9,data)
(10,myUnion.unionFirst = data)
(11,myUnion)
(12,result = data)
(13,unionSecond)
(14,myUnion)
(15,data)
(16,data)
(17,SHRT_MAX)
(18,data = SHRT_MAX)
(19,result)
(20,myUnion.unionSecond)
(21,result)
(22,unionFirst)
(23,myUnion)
(24,data)
(25,data)
(26,RET)
(27,data)
(28,)
(29,printIntLine(result)
(30,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^