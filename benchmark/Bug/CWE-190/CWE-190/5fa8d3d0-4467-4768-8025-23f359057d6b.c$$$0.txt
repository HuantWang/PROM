-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_34_bad()
{
    int data;
    CWE190_Integer_Overflow__int_fgets_add_34_unionType myUnion;
    /* Initialize data */
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    myUnion.unionFirst = data;
    {
        int data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
22,23
22,24
23,24
24,25
24,26
26,27
26,28
26,29
28,29
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
35,37
35,38
35,39
36,37
38,39
40,41
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
51,53
52,53
54,55
56,57
57,58
58,59
58,60
59,60
62,63
63,64
63,65
64,65
64,66
65,66
68,69
70,71
70,72
71,72
72,73
72,74
74,75
74,76
76,77
77,78
77,79
78,79
81,82
81,83
82,83
83,84
83,85
85,86
85,87
87,88
88,89
88,90
89,90
92,93
93,94
93,95
94,95
96,97
-----nextToken-----
2,4,8,10,14,16,20,21,25,27,30,32,37,39,41,43,45,50,53,55,60,61,66,67,69,73,75,79,80,84,86,90,91,95,97
-----computeFrom-----
18,19
18,20
34,35
34,36
48,49
48,50
63,64
63,65
88,89
88,90
-----guardedBy-----
39,55
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_34_bad(){    int data;    CWE190_Integer_Overflow__int_fgets_add_34_unionType myUnion;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_add_34_bad()
CWE190_Integer_Overflow__int_fgets_add_34_bad
{    int data;    CWE190_Integer_Overflow__int_fgets_add_34_unionType myUnion;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
CWE190_Integer_Overflow__int_fgets_add_34_unionType myUnion;
CWE190_Integer_Overflow__int_fgets_add_34_unionType myUnion;
CWE190_Integer_Overflow__int_fgets_add_34_unionType
CWE190_Integer_Overflow__int_fgets_add_34_unionType
myUnion
myUnion
data = 0;
data = 0
data
data
0
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
int data = myUnion.unionSecond;
int data = myUnion.unionSecond;
int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(3,27,0)
(35,16,0)
(20,11,0)
(10,4,0)
(27,3,0)
(46,17,0)
(15,41,0)
(28,44,0)
(7,4,0)
(31,12,0)
(16,9,0)
(11,44,0)
(4,10,0)
(32,22,0)
(47,16,0)
(3,10,0)
(2,26,0)
(14,24,0)
(9,26,0)
(44,41,0)
(42,24,0)
(13,24,0)
(17,21,0)
(44,12,0)
(23,3,0)
(45,37,0)
(18,3,0)
(0,4,0)
(44,26,0)
(25,16,0)
(37,27,0)
(34,27,0)
(24,13,0)
(27,22,0)
(19,25,0)
(12,25,0)
(38,9,0)
(12,40,0)
(36,10,0)
(6,39,0)
(24,16,0)
(22,39,0)
(30,9,0)
(29,24,0)
(1,13,0)
(37,22,0)
(25,12,0)
(33,26,0)
(43,41,0)
(5,11,0)
(39,26,0)
(41,26,0)
(10,39,0)
(42,29,1)
(5,17,1)
(44,12,1)
(41,15,1)
(8,37,1)
(1,24,1)
(34,10,1)
(24,42,1)
(24,16,1)
(27,3,1)
(46,13,1)
(10,4,1)
(18,34,1)
(16,35,1)
(36,44,1)
(17,46,1)
(7,36,1)
(44,41,1)
(13,1,1)
(23,18,1)
(35,47,1)
(4,0,1)
(28,11,1)
(29,14,1)
(47,41,1)
(12,25,1)
(3,23,1)
(25,16,1)
(5,12,1)
(37,45,1)
(25,19,1)
(0,7,1)
(11,20,1)
(31,13,1)
(14,16,1)
(15,43,1)
(19,31,1)
(45,27,1)
(44,28,1)
(3,10,1)
(20,5,1)
(13,24,1)
(37,27,1)
(44,41,2)
(37,27,2)
(31,13,2)
(10,4,2)
(27,3,2)
(19,13,2)
(17,13,2)
(12,25,2)
(12,13,2)
(44,12,2)
(3,10,2)
(24,16,2)
(25,16,2)
(46,13,2)
(13,24,2)
(25,13,2)
-----------------------------------
(0,unionSecond)
(1,NULL)
(2,data)
(3,data + 1)
(4,myUnion.unionSecond)
(5,myUnion)
(6,data)
(7,myUnion)
(8,RET)
(9,)
(10,data = myUnion.unionSecond)
(11,myUnion.unionFirst)
(12,data = atoi(inputBuffer)
(13,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(14,inputBuffer)
(15,0)
(16,inputBuffer[CHAR_ARRAY_SIZE] = "")
(17,printLine("fgets()
(18,data)
(19,inputBuffer)
(20,unionFirst)
(21,)
(22,)
(23,1)
(24,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(25,atoi(inputBuffer)
(26,)
(27,result = data + 1)
(28,data)
(29,CHAR_ARRAY_SIZE)
(30,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(31,data)
(32,result)
(33,myUnion)
(34,result)
(35,"")
(36,data)
(37,printIntLine(result)
(38,inputBuffer)
(39,)
(40,)
(41,data = 0)
(42,stdin)
(43,data)
(44,myUnion.unionFirst = data)
(45,result)
(46,"fgets()
(47,inputBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^