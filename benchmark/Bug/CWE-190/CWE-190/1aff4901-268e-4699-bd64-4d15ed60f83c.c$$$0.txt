-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_add_13_bad()
{
    short data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
40,41
41,42
41,43
43,44
43,45
45,46
46,47
46,48
47,48
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,42,44,48,49,53,55
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_add_13_bad(){    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_add_13_bad()
CWE190_Integer_Overflow__short_rand_add_13_bad
{    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(16,29,0)
(7,29,0)
(24,8,0)
(23,13,0)
(26,21,0)
(14,0,0)
(5,21,0)
(28,13,0)
(8,21,0)
(3,9,0)
(3,10,0)
(3,18,0)
(19,6,0)
(11,13,0)
(18,20,0)
(1,24,0)
(17,13,0)
(24,6,0)
(2,28,0)
(4,0,0)
(9,3,0)
(27,18,0)
(21,28,0)
(18,3,0)
(15,28,0)
(22,8,0)
(21,8,0)
(8,6,0)
(21,18,0)
(10,3,0)
(6,12,0)
(28,15,1)
(4,29,1)
(21,18,1)
(25,24,1)
(14,4,1)
(22,0,1)
(3,10,1)
(16,28,1)
(3,9,1)
(1,8,1)
(15,2,1)
(5,26,1)
(7,16,1)
(0,14,1)
(18,3,1)
(8,21,1)
(27,29,1)
(24,8,1)
(21,28,1)
(25,0,1)
(29,7,1)
(24,1,1)
(21,5,1)
(26,22,1)
(9,27,1)
(4,18,1)
(5,0,2)
(8,0,2)
(21,28,2)
(24,8,2)
(9,29,2)
(1,0,2)
(18,3,2)
(3,29,2)
(21,18,2)
(3,9,2)
(24,0,2)
(8,21,2)
(22,0,2)
(26,0,2)
(3,10,2)
(21,0,2)
(18,29,2)
(27,29,2)
-----------------------------------
(0,GLOBAL_CONST_FIVE==5)
(1,result)
(2,data)
(3,(short)
(4,GLOBAL_CONST_FIVE)
(5,1)
(6,)
(7,5)
(8,result = data + 1)
(9,RAND32()
(10,short)
(11,if(GLOBAL_CONST_FIVE==5)
(12,)
(13,)
(14,5)
(15,0)
(16,GLOBAL_CONST_FIVE)
(17,data)
(18,data = (short)
(19,result)
(20,)
(21,data + 1)
(22,result)
(23,if(GLOBAL_CONST_FIVE==5)
(24,printIntLine(result)
(25,RET)
(26,data)
(27,data)
(28,data = 0)
(29,GLOBAL_CONST_FIVE==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^