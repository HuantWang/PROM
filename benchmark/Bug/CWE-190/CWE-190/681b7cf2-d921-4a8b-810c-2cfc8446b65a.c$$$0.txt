-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_add_01_bad()
{
    unsigned int data;
    data = 0;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%u", &data);
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        unsigned int result = data + 1;
        printUnsignedLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
24,25
26,27
26,28
27,28
28,29
28,30
30,31
30,32
32,33
33,34
33,35
34,35
37,38
38,39
38,40
39,40
41,42
-----nextToken-----
2,4,8,10,14,15,19,21,22,25,29,31,35,36,40,42
-----computeFrom-----
12,13
12,14
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_add_01_bad(){    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        unsigned int result = data + 1;        printUnsignedLine(result);    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_add_01_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_add_01_bad
{    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        unsigned int result = data + 1;        printUnsignedLine(result);    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        unsigned int result = data + 1;        printUnsignedLine(result);    }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(19,5,0)
(1,14,0)
(17,2,0)
(16,2,0)
(7,14,0)
(6,0,0)
(5,3,0)
(9,2,0)
(17,14,0)
(12,11,0)
(4,5,0)
(4,2,0)
(15,4,0)
(3,11,0)
(5,4,0)
(0,5,0)
(13,3,0)
(2,11,0)
(14,11,0)
(0,3,0)
(10,4,0)
(14,17,0)
(8,17,0)
(0,6,1)
(0,5,1)
(5,4,1)
(18,0,1)
(19,14,1)
(7,2,1)
(9,16,1)
(10,15,1)
(17,2,1)
(8,1,1)
(14,17,1)
(4,10,1)
(15,19,1)
(2,9,1)
(6,5,1)
(1,7,1)
(4,2,1)
(17,8,1)
(0,5,2)
(17,2,2)
(5,4,2)
(14,17,2)
(4,2,2)
-----------------------------------
(0,printUnsignedLine(result)
(1,"%u")
(2,data = 0)
(3,)
(4,data + 1)
(5,result = data + 1)
(6,result)
(7,stdin)
(8,data)
(9,0)
(10,1)
(11,)
(12,data)
(13,result)
(14,fscanf (stdin, "%u", &data)
(15,data)
(16,data)
(17,&data)
(18,RET)
(19,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^