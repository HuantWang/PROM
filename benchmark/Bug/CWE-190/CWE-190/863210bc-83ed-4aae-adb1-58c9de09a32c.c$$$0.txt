-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_add_14_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(globalFive==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,37,39,43,44,48,50
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_add_14_bad(){    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_add_14_bad()
CWE190_Integer_Overflow__int_max_add_14_bad
{    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(14,6,0)
(4,15,0)
(18,9,0)
(2,24,0)
(17,27,0)
(26,14,0)
(19,9,0)
(21,0,0)
(3,1,0)
(11,15,0)
(14,24,0)
(8,21,0)
(14,15,0)
(16,27,0)
(1,6,0)
(22,27,0)
(23,24,0)
(1,21,0)
(20,7,0)
(12,7,0)
(6,21,0)
(24,27,0)
(15,10,0)
(13,14,0)
(5,6,0)
(6,14,0)
(14,15,1)
(14,24,1)
(25,1,1)
(26,5,1)
(4,11,1)
(1,3,1)
(11,9,1)
(13,26,1)
(12,20,1)
(1,6,1)
(6,14,1)
(20,15,1)
(9,18,1)
(14,13,1)
(18,19,1)
(3,6,1)
(15,4,1)
(20,9,1)
(19,24,1)
(23,2,1)
(24,23,1)
(25,7,1)
(7,12,1)
(5,7,1)
(1,6,2)
(14,7,2)
(6,7,2)
(15,9,2)
(6,14,2)
(14,24,2)
(4,9,2)
(3,7,2)
(1,7,2)
(11,9,2)
(14,15,2)
(26,7,2)
(13,7,2)
(5,7,2)
-----------------------------------
(0,)
(1,printIntLine(result)
(2,data)
(3,result)
(4,INT_MAX)
(5,result)
(6,result = data + 1)
(7,globalFive==5)
(8,result)
(9,globalFive==5)
(10,)
(11,data)
(12,5)
(13,1)
(14,data + 1)
(15,data = INT_MAX)
(16,if(globalFive==5)
(17,if(globalFive==5)
(18,5)
(19,globalFive)
(20,globalFive)
(21,)
(22,data)
(23,0)
(24,data = 0)
(25,RET)
(26,data)
(27,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^