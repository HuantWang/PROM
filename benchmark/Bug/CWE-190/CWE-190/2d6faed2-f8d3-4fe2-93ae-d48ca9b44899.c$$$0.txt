-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_add_17_bad()
{
    int i,j;
    int64_t data;
    data = 0LL;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = LLONG_MAX;
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int64_t result = data + 1;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
24,25
24,26
24,27
24,28
25,26
26,27
26,28
27,28
30,31
30,32
31,32
34,35
35,36
37,38
38,39
39,40
39,41
40,41
42,43
44,45
44,46
44,47
44,48
45,46
46,47
46,48
47,48
50,51
50,52
51,52
54,55
55,56
57,58
58,59
58,60
59,60
60,61
60,62
61,62
63,64
63,65
65,66
66,67
66,68
67,68
70,71
71,72
71,73
72,73
74,75
-----nextToken-----
2,4,8,10,12,16,18,22,23,28,29,32,33,36,41,43,48,49,52,53,56,62,64,68,69,73,75
-----computeFrom-----
20,21
20,22
26,27
26,28
30,31
30,32
39,40
39,41
46,47
46,48
50,51
50,52
66,67
66,68
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_add_17_bad(){    int i,j;    int64_t data;    data = 0LL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_max_add_17_bad()
CWE190_Integer_Overflow__int64_t_max_add_17_bad
{    int i,j;    int64_t data;    data = 0LL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(19,21,0)
(31,33,0)
(29,18,0)
(13,25,0)
(9,33,0)
(5,30,0)
(27,25,0)
(1,35,0)
(12,10,0)
(25,21,0)
(24,1,0)
(15,18,0)
(32,21,0)
(11,36,0)
(37,36,0)
(10,5,0)
(17,10,0)
(7,36,0)
(20,5,0)
(10,25,0)
(2,33,0)
(28,35,0)
(0,33,0)
(34,26,0)
(26,35,0)
(4,26,0)
(23,33,0)
(16,7,0)
(25,10,0)
(6,12,0)
(14,33,0)
(21,3,0)
(12,5,0)
(18,36,0)
(8,35,0)
(29,36,1)
(12,10,1)
(7,36,1)
(35,8,1)
(25,21,1)
(15,29,1)
(27,17,1)
(28,2,1)
(29,7,1)
(26,34,1)
(16,12,1)
(6,10,1)
(11,26,1)
(19,26,1)
(18,15,1)
(1,35,1)
(25,13,1)
(4,35,1)
(18,36,1)
(37,11,1)
(21,32,1)
(36,37,1)
(8,28,1)
(24,21,1)
(17,18,1)
(4,1,1)
(1,24,1)
(32,19,1)
(13,27,1)
(12,6,1)
(34,4,1)
(10,25,1)
(26,35,1)
(7,16,1)
(22,18,1)
(4,26,2)
(7,36,2)
(10,25,2)
(15,18,2)
(25,18,2)
(6,18,2)
(27,18,2)
(16,18,2)
(26,35,2)
(13,18,2)
(18,36,2)
(1,35,2)
(7,18,2)
(24,26,2)
(18,18,2)
(26,26,2)
(12,10,2)
(34,26,2)
(12,18,2)
(25,21,2)
(29,18,2)
(19,26,2)
(1,26,2)
(17,18,2)
(32,26,2)
(10,18,2)
(21,26,2)
-----------------------------------
(0,data)
(1,i++)
(2,L)
(3,)
(4,i)
(5,)
(6,result)
(7,j++)
(8,0)
(9,i)
(10,result = data + 1)
(11,j)
(12,printLongLongLine(result)
(13,1)
(14,for(i = 0; i < 1; i++)
(15,1)
(16,j)
(17,result)
(18,j < 1)
(19,data)
(20,result)
(21,data = LLONG_MAX)
(22,RET)
(23,for(j = 0; j < 1; j++)
(24,i)
(25,data + 1)
(26,i < 1)
(27,data)
(28,i)
(29,j)
(30,)
(31,j)
(32,LLONG_MAX)
(33,)
(34,1)
(35,i = 0)
(36,j = 0)
(37,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^