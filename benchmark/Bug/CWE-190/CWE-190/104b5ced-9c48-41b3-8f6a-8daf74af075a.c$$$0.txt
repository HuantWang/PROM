-----label-----
1
-----code-----
static void badSink(int data)
{
    if(badStatic)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
13,14
14,15
14,16
14,17
15,16
16,17
17,18
19,20
20,21
20,22
22,23
22,24
24,25
25,26
27,28
28,29
28,30
29,30
31,32
-----nextToken-----
2,4,6,8,12,18,21,23,26,30,32
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(int data){    if(badStatic)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
static void
badSink(int data)
badSink
int data
int
data
data
{    if(badStatic)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
if(badStatic)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
badStatic
badStatic
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(12,4,0)
(5,1,0)
(11,1,0)
(13,9,0)
(8,12,0)
(1,2,0)
(2,3,0)
(12,2,0)
(0,1,0)
(11,2,0)
(6,11,0)
(10,2,0)
(1,4,0)
(12,8,1)
(0,12,1)
(12,4,1)
(1,5,1)
(8,7,1)
(5,0,1)
(11,1,1)
(14,11,1)
(6,1,1)
(11,6,1)
(1,4,1)
(14,7,1)
(1,7,2)
(11,1,2)
(1,4,2)
(6,7,2)
(0,7,2)
(12,7,2)
(11,7,2)
(12,4,2)
(8,7,2)
(5,7,2)
-----------------------------------
(0,result)
(1,result = data)
(2,)
(3,)
(4,int data)
(5,data)
(6,result)
(7,badStatic)
(8,data)
(9,)
(10,result)
(11,printIntLine(result)
(12,data++)
(13,if(badStatic)
(14,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^