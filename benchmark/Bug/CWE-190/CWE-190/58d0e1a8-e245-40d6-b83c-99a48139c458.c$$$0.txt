-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_preinc_03_bad()
{
    unsigned int data;
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
31,32
32,33
32,34
32,35
33,34
34,35
35,36
37,38
38,39
38,40
40,41
40,42
42,43
43,44
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,29,30,36,39,41,44,48,50
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
28,29
28,30
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_preinc_03_bad(){    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_preinc_03_bad()
CWE190_Integer_Overflow__unsigned_int_max_preinc_03_bad
{    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
5==5
5
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(25,23,0)
(14,22,0)
(5,23,0)
(1,5,0)
(27,9,0)
(24,9,0)
(17,27,0)
(18,9,0)
(27,6,0)
(3,22,0)
(2,6,0)
(11,26,0)
(23,16,0)
(27,23,0)
(18,6,0)
(18,23,0)
(21,6,0)
(19,9,0)
(20,22,0)
(8,0,0)
(5,27,0)
(12,0,0)
(7,27,0)
(4,26,0)
(9,22,0)
(6,15,0)
(10,18,0)
(18,9,1)
(10,0,1)
(26,11,1)
(18,10,1)
(8,26,1)
(13,0,1)
(11,4,1)
(1,27,1)
(9,19,1)
(27,6,1)
(19,24,1)
(0,12,1)
(5,27,1)
(21,2,1)
(13,5,1)
(27,7,1)
(4,9,1)
(17,18,1)
(7,17,1)
(6,21,1)
(5,1,1)
(27,9,1)
(12,8,1)
(8,6,1)
(2,26,1)
(18,6,1)
(27,0,2)
(18,9,2)
(6,26,2)
(27,9,2)
(10,0,2)
(17,0,2)
(2,26,2)
(7,0,2)
(18,0,2)
(5,27,2)
(5,0,2)
(21,26,2)
(1,0,2)
(27,6,2)
(18,6,2)
-----------------------------------
(0,5==5)
(1,result)
(2,data)
(3,if(5==5)
(4,5)
(5,printUnsignedLine(result)
(6,data = UINT_MAX)
(7,data)
(8,5)
(9,data = 0)
(10,data)
(11,5)
(12,5)
(13,RET)
(14,data)
(15,)
(16,)
(17,result)
(18,++data)
(19,0)
(20,if(5==5)
(21,UINT_MAX)
(22,)
(23,)
(24,data)
(25,result)
(26,5==5)
(27,result = data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^