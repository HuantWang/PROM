-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_preinc_07_bad()
{
    int64_t data;
    data = 0LL;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = LLONG_MAX;
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
27,28
29,30
29,31
30,31
30,32
31,32
34,35
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
42,43
44,45
44,46
46,47
47,48
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,9,11,15,16,20,21,26,28,32,33,39,43,45,48,52,54
-----computeFrom-----
13,14
13,15
18,19
18,20
24,25
24,26
30,31
30,32
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_preinc_07_bad(){    int64_t data;    data = 0LL;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_max_preinc_07_bad()
CWE190_Integer_Overflow__int64_t_max_preinc_07_bad
{    int64_t data;    data = 0LL;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(8,21,0)
(2,12,0)
(13,21,0)
(14,12,0)
(23,11,0)
(3,1,0)
(19,2,0)
(24,12,0)
(0,5,0)
(10,14,0)
(22,21,0)
(20,2,0)
(17,24,0)
(4,11,0)
(6,12,0)
(12,15,0)
(14,2,0)
(2,1,0)
(25,5,0)
(24,1,0)
(16,21,0)
(7,1,0)
(1,18,0)
(2,20,1)
(0,25,1)
(14,10,1)
(9,14,1)
(4,5,1)
(23,4,1)
(24,1,1)
(19,24,1)
(4,1,1)
(3,5,1)
(9,11,1)
(1,7,1)
(17,11,1)
(5,0,1)
(24,17,1)
(7,3,1)
(25,16,1)
(2,1,1)
(10,2,1)
(14,2,1)
(11,23,1)
(20,19,1)
(24,11,2)
(1,5,2)
(2,1,2)
(10,11,2)
(17,11,2)
(7,5,2)
(24,1,2)
(14,2,2)
(14,11,2)
(3,5,2)
(20,11,2)
(2,11,2)
(19,11,2)
-----------------------------------
(0,5)
(1,data = LLONG_MAX)
(2,result = data)
(3,data)
(4,staticFive)
(5,staticFive==5)
(6,result)
(7,LLONG_MAX)
(8,if(staticFive==5)
(9,RET)
(10,result)
(11,staticFive==5)
(12,)
(13,data)
(14,printLongLongLine(result)
(15,)
(16,L)
(17,data)
(18,)
(19,result)
(20,data)
(21,)
(22,if(staticFive==5)
(23,5)
(24,++data)
(25,staticFive)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^