-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_preinc_16_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    while(1)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
19,21
20,21
21,22
21,23
23,24
23,25
23,26
25,26
26,27
28,29
30,31
30,32
30,33
31,32
31,33
32,33
32,34
32,35
32,36
33,34
35,36
37,38
39,40
41,42
43,44
44,45
45,46
45,47
46,47
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
60,61
60,62
62,63
62,64
63,64
63,65
63,66
64,65
65,66
66,67
68,69
69,70
69,71
71,72
71,73
73,74
74,75
76,77
77,78
77,79
78,79
80,81
-----nextToken-----
2,4,8,10,14,15,17,22,24,27,29,34,36,38,40,42,47,50,52,57,58,59,61,67,70,72,75,79,81,82
-----computeFrom-----
12,13
12,14
31,32
31,33
45,46
45,47
-----guardedBy-----
36,52
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_preinc_16_bad(){    int data;    /* Initialize data */    data = 0;    while(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__int_fgets_preinc_16_bad()
CWE190_Integer_Overflow__int_fgets_preinc_16_bad
{    int data;    /* Initialize data */    data = 0;    while(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }        break;    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
while(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        break;    }
1
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        break;    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
break;
while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
break;
-----joern-----
(41,27,0)
(32,12,0)
(10,30,0)
(3,6,0)
(37,30,0)
(1,30,0)
(2,4,0)
(20,41,0)
(29,15,0)
(34,29,0)
(39,19,0)
(14,10,0)
(35,29,0)
(31,12,0)
(6,35,0)
(21,27,0)
(35,41,0)
(38,32,0)
(23,18,0)
(22,41,0)
(22,32,0)
(24,22,0)
(28,27,0)
(30,10,0)
(6,32,0)
(9,34,0)
(29,34,0)
(33,27,0)
(30,18,0)
(4,13,0)
(11,35,0)
(22,29,0)
(25,13,0)
(5,35,0)
(34,18,0)
(8,39,0)
(18,4,0)
(17,18,0)
(36,30,0)
(35,32,0)
(0,41,0)
(16,4,0)
(42,29,0)
(26,40,1)
(29,34,1)
(20,0,1)
(24,40,1)
(35,29,1)
(22,41,1)
(3,35,1)
(25,29,1)
(37,36,1)
(30,18,1)
(17,7,1)
(6,3,1)
(5,11,1)
(22,24,1)
(34,9,1)
(22,29,1)
(18,23,1)
(8,10,1)
(40,7,1)
(40,25,1)
(34,18,1)
(7,41,1)
(6,35,1)
(35,5,1)
(36,18,1)
(30,1,1)
(31,6,1)
(35,41,1)
(39,8,1)
(26,31,1)
(25,39,1)
(42,10,1)
(23,17,1)
(41,20,1)
(1,37,1)
(14,30,1)
(11,22,1)
(10,30,1)
(9,42,1)
(10,14,1)
(3,40,2)
(10,7,2)
(6,40,2)
(10,30,2)
(22,41,2)
(34,10,2)
(1,7,2)
(42,10,2)
(37,7,2)
(35,41,2)
(39,10,2)
(29,10,2)
(35,40,2)
(22,29,2)
(23,7,2)
(29,34,2)
(24,40,2)
(34,18,2)
(8,10,2)
(9,10,2)
(14,7,2)
(30,7,2)
(22,40,2)
(11,40,2)
(25,7,2)
(17,7,2)
(6,35,2)
(35,29,2)
(5,40,2)
(36,7,2)
(30,18,2)
(31,40,2)
(18,7,2)
-----------------------------------
(0,data)
(1,stdin)
(2,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(3,result)
(4,)
(5,data)
(6,printIntLine(result)
(7,1)
(8,"fgets()
(9,inputBuffer)
(10,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(11,result)
(12,)
(13,)
(14,NULL)
(15,)
(16,inputBuffer)
(17,inputBuffer)
(18,inputBuffer[CHAR_ARRAY_SIZE] = "")
(19,)
(20,0)
(21,while(1)
(22,++data)
(23,"")
(24,data)
(25,break;)
(26,RET)
(27,)
(28,data)
(29,data = atoi(inputBuffer)
(30,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(31,break;)
(32,)
(33,while(1)
(34,atoi(inputBuffer)
(35,result = data)
(36,inputBuffer)
(37,CHAR_ARRAY_SIZE)
(38,result)
(39,printLine("fgets()
(40,1)
(41,data = 0)
(42,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^