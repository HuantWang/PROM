-----label-----
1
-----code-----
static void badSink(char data)
{
    if(badStatic)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            char result = data + 1;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
13,14
14,15
14,16
15,16
16,17
16,18
18,19
18,20
20,21
21,22
21,23
22,23
25,26
26,27
26,28
27,28
29,30
-----nextToken-----
2,4,6,8,12,17,19,23,24,28,30
-----computeFrom-----
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(char data){    if(badStatic)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
static void
badSink(char data)
badSink
char data
char
data
data
{    if(badStatic)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
if(badStatic)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
badStatic
badStatic
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(13,11,0)
(11,12,0)
(11,13,0)
(13,2,0)
(6,2,0)
(2,14,0)
(5,6,0)
(6,13,0)
(4,2,0)
(7,11,0)
(0,13,0)
(10,11,0)
(9,8,0)
(5,13,1)
(3,6,1)
(7,0,1)
(11,12,1)
(13,11,1)
(0,1,1)
(10,7,1)
(6,13,1)
(3,1,1)
(11,10,1)
(6,5,1)
(0,1,2)
(6,13,2)
(6,1,2)
(7,1,2)
(13,1,2)
(10,1,2)
(13,11,2)
(11,12,2)
(5,1,2)
(11,1,2)
-----------------------------------
(0,result)
(1,badStatic)
(2,)
(3,RET)
(4,result)
(5,result)
(6,printHexCharLine(result)
(7,data)
(8,)
(9,if(badStatic)
(10,1)
(11,data + 1)
(12,char data)
(13,result = data + 1)
(14,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^