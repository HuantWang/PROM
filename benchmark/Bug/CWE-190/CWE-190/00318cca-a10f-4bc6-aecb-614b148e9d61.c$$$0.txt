-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_preinc_10_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
30,31
30,32
30,33
31,32
32,33
33,34
35,36
36,37
36,38
38,39
38,40
40,41
41,42
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,34,37,39,42,46,48
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_preinc_10_bad(){    int data;    /* Initialize data */    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_preinc_10_bad()
CWE190_Integer_Overflow__int_max_preinc_10_bad
{    int data;    /* Initialize data */    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(4,6,0)
(17,10,0)
(12,17,0)
(14,18,0)
(15,11,0)
(9,4,0)
(0,6,0)
(19,14,0)
(14,4,0)
(23,18,0)
(8,5,0)
(14,17,0)
(11,17,0)
(18,21,0)
(11,4,0)
(5,14,0)
(7,4,0)
(2,14,0)
(11,18,0)
(20,6,0)
(13,6,0)
(5,18,0)
(22,17,0)
(7,9,1)
(5,14,1)
(19,11,1)
(22,16,1)
(8,14,1)
(11,17,1)
(15,1,1)
(14,17,1)
(3,1,1)
(2,19,1)
(3,5,1)
(14,4,1)
(1,17,1)
(12,22,1)
(11,15,1)
(17,12,1)
(14,2,1)
(4,7,1)
(11,4,1)
(1,16,1)
(5,8,1)
(16,4,1)
(11,4,2)
(22,16,2)
(14,1,2)
(14,17,2)
(11,1,2)
(11,17,2)
(12,16,2)
(2,1,2)
(5,1,2)
(17,16,2)
(14,4,2)
(8,1,2)
(5,14,2)
(15,1,2)
(19,1,2)
-----------------------------------
(0,if(globalTrue)
(1,globalTrue)
(2,data)
(3,RET)
(4,data = 0)
(5,printIntLine(result)
(6,)
(7,0)
(8,result)
(9,data)
(10,)
(11,++data)
(12,INT_MAX)
(13,if(globalTrue)
(14,result = data)
(15,data)
(16,globalTrue)
(17,data = INT_MAX)
(18,)
(19,result)
(20,data)
(21,)
(22,data)
(23,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^