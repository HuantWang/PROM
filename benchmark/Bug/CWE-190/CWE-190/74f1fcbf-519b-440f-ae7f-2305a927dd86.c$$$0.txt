-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_rand_multiply_22_badSink(char data)
{
    if(CWE190_Integer_Overflow__char_rand_multiply_22_badGlobal)
    {
        if(data > 0) /* ensure we won't have an underflow */
        {
            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */
            char result = data * 2;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
13,14
14,15
14,16
15,16
15,17
16,17
19,20
19,21
20,21
21,22
21,23
23,24
23,25
25,26
26,27
26,28
27,28
30,31
31,32
31,33
32,33
34,35
-----nextToken-----
2,4,6,8,12,17,18,22,24,28,29,33,35
-----computeFrom-----
15,16
15,17
26,27
26,28
-----guardedBy-----
17,28
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_rand_multiply_22_badSink(char data){    if(CWE190_Integer_Overflow__char_rand_multiply_22_badGlobal)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_rand_multiply_22_badSink(char data)
CWE190_Integer_Overflow__char_rand_multiply_22_badSink
char data
char
data
data
{    if(CWE190_Integer_Overflow__char_rand_multiply_22_badGlobal)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }    }}
if(CWE190_Integer_Overflow__char_rand_multiply_22_badGlobal)    {        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }    }
CWE190_Integer_Overflow__char_rand_multiply_22_badGlobal
CWE190_Integer_Overflow__char_rand_multiply_22_badGlobal
{        if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }    }
if(data > 0) /* ensure we won't have an underflow */        {            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }
data > 0
data
data
0
{            /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */            char result = data * 2;            printHexCharLine(result);        }
char result = data * 2;
char result = data * 2;
char
result = data * 2
result
= data * 2
data * 2
data
data
2
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(18,16,0)
(6,3,0)
(16,5,0)
(15,17,0)
(15,11,0)
(10,0,0)
(11,16,0)
(3,5,0)
(8,3,0)
(2,17,0)
(13,16,0)
(7,9,0)
(11,17,0)
(12,11,0)
(14,15,0)
(16,11,0)
(3,5,1)
(12,3,1)
(6,4,1)
(11,16,1)
(8,6,1)
(16,13,1)
(13,18,1)
(3,8,1)
(1,4,1)
(15,11,1)
(16,5,1)
(18,12,1)
(14,11,1)
(1,3,1)
(1,15,1)
(15,14,1)
(15,11,2)
(3,5,2)
(16,3,2)
(16,5,2)
(11,3,2)
(14,3,2)
(3,4,2)
(13,3,2)
(6,4,2)
(18,3,2)
(11,16,2)
(12,3,2)
(8,4,2)
(15,3,2)
-----------------------------------
(0,)
(1,RET)
(2,result)
(3,data > 0)
(4,CWE190_Integer_Overflow__char_rand_multiply_22_badGlobal)
(5,char data)
(6,data)
(7,if(data > 0)
(8,0)
(9,)
(10,if(CWE190_Integer_Overflow__char_rand_multiply_22_badGlobal)
(11,result = data * 2)
(12,result)
(13,2)
(14,result)
(15,printHexCharLine(result)
(16,data * 2)
(17,)
(18,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^