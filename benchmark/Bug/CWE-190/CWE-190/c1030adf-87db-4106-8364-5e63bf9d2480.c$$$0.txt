-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_preinc_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = 0;
    {
        int data = *dataPtr1;
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
55,56
57,58
59,60
59,61
60,61
61,62
61,63
63,64
63,65
65,66
66,67
67,68
69,70
69,71
69,72
70,71
71,72
72,73
74,75
75,76
75,77
77,78
77,79
79,80
80,81
82,83
83,84
83,85
84,85
86,87
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,51,56,58,62,64,68,73,76,78,81,85,87
-----computeFrom-----
32,33
32,34
47,48
47,49
53,54
53,55
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_preinc_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_preinc_32_bad()
CWE190_Integer_Overflow__int_max_preinc_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = 0;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        int data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(4,31,0)
(16,36,0)
(37,27,0)
(35,11,0)
(38,11,0)
(21,16,0)
(22,20,0)
(11,38,0)
(28,19,0)
(16,18,0)
(18,31,0)
(23,18,0)
(11,37,0)
(20,18,0)
(21,20,0)
(39,4,0)
(34,33,0)
(32,4,0)
(36,14,0)
(43,31,0)
(33,20,0)
(19,43,0)
(3,43,0)
(15,5,0)
(7,3,0)
(17,16,0)
(37,31,0)
(38,43,0)
(8,21,0)
(6,31,0)
(42,31,0)
(22,21,0)
(14,31,0)
(26,0,0)
(5,19,0)
(25,22,0)
(27,37,0)
(33,16,0)
(41,43,0)
(13,3,0)
(0,14,0)
(24,36,0)
(14,0,0)
(9,14,0)
(29,31,0)
(40,21,0)
(2,27,0)
(36,16,0)
(10,38,0)
(19,3,0)
(1,20,0)
(30,37,0)
(5,37,0)
(32,14,1)
(8,33,1)
(28,5,1)
(34,16,1)
(5,37,1)
(22,25,1)
(9,37,1)
(13,7,1)
(37,27,1)
(14,0,1)
(21,16,1)
(11,35,1)
(38,11,1)
(26,9,1)
(5,15,1)
(22,21,1)
(17,19,1)
(2,30,1)
(7,38,1)
(16,36,1)
(36,14,1)
(3,13,1)
(15,3,1)
(10,4,1)
(35,10,1)
(27,2,1)
(24,17,1)
(21,40,1)
(39,32,1)
(25,21,1)
(0,26,1)
(4,39,1)
(33,34,1)
(19,28,1)
(33,16,1)
(36,24,1)
(11,37,1)
(12,22,1)
(40,8,1)
(19,3,1)
(5,37,2)
(14,0,2)
(16,36,2)
(38,11,2)
(37,27,2)
(22,21,2)
(36,14,2)
(19,3,2)
(11,37,2)
(33,16,2)
(21,16,2)
-----------------------------------
(0,&data)
(1,result)
(2,data)
(3,data = INT_MAX)
(4,data = 0)
(5,*dataPtr1)
(6,dataPtr2)
(7,data)
(8,result)
(9,dataPtr2)
(10,data)
(11,*dataPtr1)
(12,RET)
(13,INT_MAX)
(14,*dataPtr2 = &data)
(15,dataPtr1)
(16,data = *dataPtr2)
(17,data)
(18,)
(19,*dataPtr1 = data)
(20,)
(21,result = data)
(22,printIntLine(result)
(23,data)
(24,dataPtr2)
(25,result)
(26,data)
(27,&data)
(28,data)
(29,data)
(30,dataPtr1)
(31,)
(32,data)
(33,++data)
(34,data)
(35,dataPtr1)
(36,*dataPtr2)
(37,*dataPtr1 = &data)
(38,data = *dataPtr1)
(39,0)
(40,data)
(41,data)
(42,dataPtr1)
(43,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^