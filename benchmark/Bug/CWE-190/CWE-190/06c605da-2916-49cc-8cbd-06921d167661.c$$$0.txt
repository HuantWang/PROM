-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_square_01_bad()
{
    int64_t data;
    data = 0LL;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%" SCNd64, &data);
    {
        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
        int64_t result = data * data;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
18,19
18,20
19,20
20,21
20,22
21,22
23,24
23,25
25,26
26,27
26,28
27,28
29,30
31,32
32,33
32,34
33,34
35,36
-----nextToken-----
2,4,9,11,15,16,22,24,28,30,34,36
-----computeFrom-----
13,14
13,15
26,27
26,28
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ProblemStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_square_01_bad(){    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);    {        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_square_01_bad()
CWE190_Integer_Overflow__int64_t_fscanf_square_01_bad
{    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);    {        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
fscanf (stdin, "%" SCNd64, &data);
{        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(6,1,0)
(3,10,0)
(7,1,0)
(11,5,0)
(8,6,0)
(2,1,0)
(10,6,0)
(12,5,0)
(10,8,0)
(0,6,0)
(5,8,0)
(4,8,0)
(8,5,0)
(8,5,1)
(5,12,1)
(10,8,1)
(11,4,1)
(3,8,1)
(12,11,1)
(10,3,1)
(9,10,1)
(4,2,1)
(8,5,2)
(10,8,2)
-----------------------------------
(0,result)
(1,)
(2,L)
(3,result)
(4,result)
(5,data * data)
(6,)
(7,data)
(8,result = data * data)
(9,RET)
(10,printLongLongLine(result)
(11,data)
(12,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^