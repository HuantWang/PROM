-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_preinc_02_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(1)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
19,21
20,21
21,22
21,23
23,24
23,25
23,26
25,26
26,27
28,29
30,31
30,32
30,33
31,32
31,33
32,33
32,34
32,35
32,36
33,34
35,36
37,38
39,40
41,42
43,44
44,45
45,46
45,47
46,47
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
59,60
59,61
61,62
62,63
62,64
62,65
63,64
64,65
65,66
67,68
68,69
68,70
70,71
70,72
72,73
73,74
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,8,10,14,15,17,22,24,27,29,34,36,38,40,42,47,50,52,57,58,60,66,69,71,74,78,80
-----computeFrom-----
12,13
12,14
31,32
31,33
45,46
45,47
-----guardedBy-----
36,52
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_preinc_02_bad(){    int data;    /* Initialize data */    data = 0;    if(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_preinc_02_bad()
CWE190_Integer_Overflow__int_fgets_preinc_02_bad
{    int data;    /* Initialize data */    data = 0;    if(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
1
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(3,40,0)
(26,17,0)
(10,4,0)
(13,32,0)
(16,5,0)
(18,20,0)
(40,28,0)
(22,5,0)
(15,32,0)
(27,32,0)
(24,4,0)
(28,33,0)
(34,38,0)
(11,1,0)
(2,7,0)
(4,6,0)
(8,27,0)
(40,17,0)
(5,4,0)
(23,12,0)
(28,14,0)
(1,37,0)
(19,32,0)
(38,20,0)
(9,33,0)
(35,12,0)
(38,1,0)
(17,12,0)
(21,20,0)
(20,17,0)
(31,17,0)
(33,5,0)
(40,1,0)
(39,28,0)
(33,28,0)
(30,2,0)
(0,12,0)
(32,27,0)
(20,1,0)
(20,28,0)
(32,5,0)
(39,27,1)
(26,31,1)
(20,17,1)
(19,15,1)
(34,20,1)
(29,17,1)
(30,27,1)
(3,36,1)
(17,26,1)
(32,19,1)
(40,3,1)
(25,36,1)
(16,29,1)
(38,34,1)
(27,32,1)
(36,29,1)
(9,39,1)
(22,16,1)
(36,28,1)
(33,5,1)
(25,38,1)
(36,2,1)
(18,40,1)
(21,18,1)
(40,17,1)
(20,21,1)
(27,8,1)
(5,22,1)
(2,30,1)
(38,20,1)
(8,32,1)
(20,28,1)
(13,5,1)
(28,33,1)
(33,9,1)
(32,5,1)
(15,13,1)
(40,28,1)
(20,28,2)
(38,20,2)
(9,27,2)
(22,29,2)
(40,36,2)
(13,29,2)
(30,27,2)
(3,36,2)
(28,33,2)
(27,32,2)
(16,29,2)
(19,29,2)
(34,36,2)
(20,17,2)
(28,27,2)
(2,27,2)
(39,27,2)
(5,29,2)
(32,29,2)
(18,36,2)
(38,36,2)
(33,27,2)
(15,29,2)
(40,17,2)
(8,29,2)
(40,28,2)
(27,29,2)
(33,5,2)
(32,5,2)
(21,36,2)
(20,36,2)
-----------------------------------
(0,if(1)
(1,)
(2,printLine("fgets()
(3,data)
(4,)
(5,inputBuffer[CHAR_ARRAY_SIZE] = "")
(6,)
(7,)
(8,NULL)
(9,inputBuffer)
(10,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(11,result)
(12,)
(13,inputBuffer)
(14,)
(15,CHAR_ARRAY_SIZE)
(16,inputBuffer)
(17,data = 0)
(18,result)
(19,stdin)
(20,result = data)
(21,data)
(22,"")
(23,if(1)
(24,inputBuffer)
(25,RET)
(26,0)
(27,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(28,data = atoi(inputBuffer)
(29,1)
(30,"fgets()
(31,data)
(32,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(33,atoi(inputBuffer)
(34,result)
(35,data)
(36,1)
(37,)
(38,printIntLine(result)
(39,data)
(40,++data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^