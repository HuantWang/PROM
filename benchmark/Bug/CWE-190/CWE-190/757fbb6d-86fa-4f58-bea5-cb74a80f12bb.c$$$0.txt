-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_square_09_bad()
{
    short data;
    data = 0;
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */
            short result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,33,35,39,41,45,47
-----computeFrom-----
12,13
12,14
21,22
21,23
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_square_09_bad(){    short data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_square_09_bad()
CWE190_Integer_Overflow__short_max_square_09_bad
{    short data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }
short result = data * data;
short result = data * data;
short
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(0,14,0)
(13,14,0)
(17,11,0)
(16,3,0)
(10,8,0)
(14,6,0)
(5,22,0)
(23,11,0)
(15,8,0)
(3,17,0)
(18,0,0)
(2,17,0)
(1,11,0)
(9,22,0)
(11,22,0)
(8,19,0)
(0,3,0)
(20,22,0)
(3,14,0)
(17,3,0)
(12,17,0)
(17,8,0)
(0,3,1)
(3,17,1)
(8,15,1)
(21,0,1)
(0,18,1)
(11,23,1)
(21,7,1)
(23,1,1)
(15,10,1)
(2,12,1)
(10,4,1)
(12,16,1)
(7,8,1)
(16,7,1)
(18,3,1)
(17,11,1)
(17,2,1)
(17,8,1)
(7,4,1)
(4,11,1)
(18,7,2)
(17,11,2)
(17,7,2)
(0,3,2)
(8,4,2)
(16,7,2)
(3,17,2)
(12,7,2)
(0,7,2)
(10,4,2)
(3,7,2)
(17,8,2)
(2,7,2)
(15,4,2)
-----------------------------------
(0,printIntLine(result)
(1,data)
(2,data)
(3,result = data * data)
(4,GLOBAL_CONST_TRUE)
(5,if(GLOBAL_CONST_TRUE)
(6,)
(7,GLOBAL_CONST_TRUE)
(8,data = SHRT_MAX)
(9,if(GLOBAL_CONST_TRUE)
(10,data)
(11,data = 0)
(12,data)
(13,result)
(14,)
(15,SHRT_MAX)
(16,result)
(17,data * data)
(18,result)
(19,)
(20,data)
(21,RET)
(22,)
(23,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^