-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_square_31_bad()
{
    short data;
    data = 0;
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = SHRT_MAX;
    {
        short dataCopy = data;
        short data = dataCopy;
        {
            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */
            short result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
23,24
24,25
24,26
26,27
26,28
28,29
29,30
31,32
32,33
32,34
34,35
34,36
36,37
37,38
39,40
39,41
40,41
41,42
41,43
43,44
43,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,21,25,27,30,33,35,38,42,44,48,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_square_31_bad(){    short data;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = SHRT_MAX;    {        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_square_31_bad()
CWE190_Integer_Overflow__short_max_square_31_bad
{    short data;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = SHRT_MAX;    {        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
{        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }
short dataCopy = data;
short dataCopy = data;
short
dataCopy = data
dataCopy
= data
data
data
short data = dataCopy;
short data = dataCopy;
short
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }
short result = data * data;
short result = data * data;
short
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(4,11,0)
(13,23,0)
(8,11,0)
(17,24,0)
(1,11,0)
(25,4,0)
(26,21,0)
(20,4,0)
(10,24,0)
(21,5,0)
(19,17,0)
(3,12,0)
(15,10,0)
(0,21,0)
(24,12,0)
(10,12,0)
(18,23,0)
(17,7,0)
(12,23,0)
(24,17,0)
(2,7,0)
(7,23,0)
(7,4,0)
(22,17,0)
(23,5,0)
(4,23,0)
(6,5,0)
(11,5,0)
(14,7,0)
(16,24,0)
(21,0,1)
(17,7,1)
(20,11,1)
(22,16,1)
(4,11,1)
(19,22,1)
(9,10,1)
(10,15,1)
(10,24,1)
(15,24,1)
(2,4,1)
(7,14,1)
(24,17,1)
(0,26,1)
(14,2,1)
(17,19,1)
(8,21,1)
(4,25,1)
(16,7,1)
(25,20,1)
(1,8,1)
(7,4,1)
(11,1,1)
(4,11,2)
(10,24,2)
(24,17,2)
(7,4,2)
(17,7,2)
-----------------------------------
(0,0)
(1,SHRT_MAX)
(2,data)
(3,result)
(4,dataCopy = data)
(5,)
(6,data)
(7,data = dataCopy)
(8,data)
(9,RET)
(10,printIntLine(result)
(11,data = SHRT_MAX)
(12,)
(13,data)
(14,dataCopy)
(15,result)
(16,result)
(17,data * data)
(18,dataCopy)
(19,data)
(20,dataCopy)
(21,data = 0)
(22,data)
(23,)
(24,result = data * data)
(25,data)
(26,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^