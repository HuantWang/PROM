-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_add_34_bad()
{
    unsigned int data;
    CWE190_Integer_Overflow__unsigned_int_max_add_34_unionType myUnion;
    data = 0;
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = UINT_MAX;
    myUnion.unionFirst = data;
    {
        unsigned int data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
30,32
31,32
34,35
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
48,49
49,50
49,51
51,52
51,53
53,54
54,55
54,56
55,56
58,59
59,60
59,61
60,61
62,63
-----nextToken-----
2,4,8,10,14,16,20,21,25,27,32,33,35,39,41,45,46,50,52,56,57,61,63
-----computeFrom-----
18,19
18,20
23,24
23,25
29,30
29,31
54,55
54,56
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_add_34_bad(){    unsigned int data;    CWE190_Integer_Overflow__unsigned_int_max_add_34_unionType myUnion;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = UINT_MAX;    myUnion.unionFirst = data;    {        unsigned int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_add_34_bad()
CWE190_Integer_Overflow__unsigned_int_max_add_34_bad
{    unsigned int data;    CWE190_Integer_Overflow__unsigned_int_max_add_34_unionType myUnion;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = UINT_MAX;    myUnion.unionFirst = data;    {        unsigned int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
CWE190_Integer_Overflow__unsigned_int_max_add_34_unionType myUnion;
CWE190_Integer_Overflow__unsigned_int_max_add_34_unionType myUnion;
CWE190_Integer_Overflow__unsigned_int_max_add_34_unionType
CWE190_Integer_Overflow__unsigned_int_max_add_34_unionType
myUnion
myUnion
data = 0;
data = 0
data
data
0
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        unsigned int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
unsigned int data = myUnion.unionSecond;
unsigned int data = myUnion.unionSecond;
unsigned int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(18,25,0)
(25,5,0)
(2,25,0)
(22,21,0)
(19,6,0)
(10,2,0)
(18,2,0)
(8,25,0)
(17,29,0)
(0,28,0)
(6,13,0)
(9,6,0)
(26,29,0)
(11,24,0)
(24,5,0)
(23,28,0)
(14,18,0)
(16,13,0)
(27,13,0)
(24,4,0)
(1,4,0)
(21,2,0)
(3,5,0)
(16,28,0)
(12,16,0)
(4,24,0)
(2,21,0)
(5,13,0)
(20,21,0)
(28,13,0)
(30,13,0)
(21,24,0)
(7,4,0)
(29,16,0)
(17,26,1)
(29,17,1)
(10,24,1)
(6,9,1)
(18,14,1)
(1,7,1)
(14,2,1)
(11,16,1)
(7,11,1)
(2,21,1)
(24,4,1)
(12,29,1)
(26,28,1)
(9,19,1)
(21,24,1)
(0,6,1)
(16,12,1)
(20,10,1)
(21,22,1)
(15,18,1)
(22,20,1)
(28,23,1)
(4,1,1)
(16,28,1)
(18,2,1)
(23,0,1)
(16,28,2)
(24,4,2)
(2,21,2)
(18,2,2)
(21,24,2)
-----------------------------------
(0,data)
(1,unionSecond)
(2,result = data + 1)
(3,data)
(4,myUnion.unionSecond)
(5,)
(6,data = 0)
(7,myUnion)
(8,result)
(9,0)
(10,result)
(11,data)
(12,data)
(13,)
(14,result)
(15,RET)
(16,myUnion.unionFirst = data)
(17,unionFirst)
(18,printUnsignedLine(result)
(19,data)
(20,data)
(21,data + 1)
(22,1)
(23,UINT_MAX)
(24,data = myUnion.unionSecond)
(25,)
(26,myUnion)
(27,data)
(28,data = UINT_MAX)
(29,myUnion.unionFirst)
(30,myUnion)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^