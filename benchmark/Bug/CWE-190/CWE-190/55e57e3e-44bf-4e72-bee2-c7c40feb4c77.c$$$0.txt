-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_add_13_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
40,41
40,42
42,43
42,44
44,45
45,46
45,47
46,47
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,43,47,48,52,54
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_add_13_bad(){    int data;    /* Initialize data */    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_add_13_bad()
CWE190_Integer_Overflow__int_fscanf_add_13_bad
{    int data;    /* Initialize data */    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(10,13,0)
(2,29,0)
(24,11,0)
(22,12,0)
(26,29,0)
(25,26,0)
(27,15,0)
(16,15,0)
(5,16,0)
(3,7,0)
(13,7,0)
(6,7,0)
(1,9,0)
(4,9,0)
(29,26,0)
(16,10,0)
(19,10,0)
(18,13,0)
(20,29,0)
(28,7,0)
(23,13,0)
(11,15,0)
(26,13,0)
(0,10,0)
(15,8,0)
(11,16,0)
(29,17,0)
(10,16,0)
(21,12,0)
(19,0,1)
(16,10,1)
(10,13,1)
(11,16,1)
(9,1,1)
(29,26,1)
(21,29,1)
(1,4,1)
(2,9,1)
(14,12,1)
(12,22,1)
(0,5,1)
(18,23,1)
(10,19,1)
(25,20,1)
(26,25,1)
(21,9,1)
(13,18,1)
(4,13,1)
(26,13,1)
(5,12,1)
(20,2,1)
(14,11,1)
(22,21,1)
(11,24,1)
(24,16,1)
(24,12,2)
(26,9,2)
(29,26,2)
(5,12,2)
(0,12,2)
(16,10,2)
(11,16,2)
(26,13,2)
(11,12,2)
(2,9,2)
(19,12,2)
(10,12,2)
(20,9,2)
(10,13,2)
(25,9,2)
(29,9,2)
(16,12,2)
-----------------------------------
(0,data)
(1,5)
(2,stdin)
(3,if(GLOBAL_CONST_FIVE==5)
(4,GLOBAL_CONST_FIVE)
(5,result)
(6,if(GLOBAL_CONST_FIVE==5)
(7,)
(8,)
(9,GLOBAL_CONST_FIVE==5)
(10,data + 1)
(11,printIntLine(result)
(12,GLOBAL_CONST_FIVE==5)
(13,data = 0)
(14,RET)
(15,)
(16,result = data + 1)
(17,)
(18,0)
(19,1)
(20,"%d")
(21,GLOBAL_CONST_FIVE)
(22,5)
(23,data)
(24,result)
(25,data)
(26,&data)
(27,result)
(28,data)
(29,fscanf(stdin, "%d", &data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^