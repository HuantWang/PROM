-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_add_05_bad()
{
    short data;
    data = 0;
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,38,40,44,45,49,51
-----computeFrom-----
12,13
12,14
21,22
21,23
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_add_05_bad(){    short data;    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_add_05_bad()
CWE190_Integer_Overflow__short_rand_add_05_bad
{    short data;    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(staticTrue)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(6,24,0)
(14,16,0)
(23,16,0)
(25,13,0)
(9,20,0)
(14,1,0)
(0,14,0)
(16,9,0)
(9,7,0)
(24,5,0)
(1,11,0)
(17,1,0)
(13,24,0)
(6,14,0)
(7,9,0)
(12,11,0)
(9,16,0)
(13,6,0)
(18,1,0)
(2,24,0)
(19,14,0)
(14,6,0)
(8,11,0)
(21,6,0)
(20,9,0)
(22,11,0)
(16,3,0)
(23,15,1)
(19,0,1)
(4,10,1)
(14,19,1)
(9,20,1)
(4,13,1)
(10,16,1)
(0,21,1)
(18,17,1)
(21,10,1)
(1,18,1)
(10,15,1)
(9,7,1)
(14,1,1)
(13,6,1)
(14,16,1)
(16,9,1)
(6,14,1)
(15,1,1)
(25,6,1)
(13,25,1)
(20,23,1)
(13,10,2)
(23,15,2)
(6,14,2)
(16,9,2)
(9,7,2)
(9,15,2)
(13,6,2)
(0,10,2)
(19,10,2)
(21,10,2)
(14,1,2)
(25,10,2)
(14,10,2)
(14,16,2)
(9,20,2)
(16,15,2)
(6,10,2)
(20,15,2)
-----------------------------------
(0,data)
(1,data = 0)
(2,result)
(3,)
(4,RET)
(5,)
(6,result = data + 1)
(7,short)
(8,data)
(9,(short)
(10,staticTrue)
(11,)
(12,if(staticTrue)
(13,printIntLine(result)
(14,data + 1)
(15,staticTrue)
(16,data = (short)
(17,data)
(18,0)
(19,1)
(20,RAND32()
(21,result)
(22,if(staticTrue)
(23,data)
(24,)
(25,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^