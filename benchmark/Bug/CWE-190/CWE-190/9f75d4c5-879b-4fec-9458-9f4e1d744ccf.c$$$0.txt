-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_add_31_bad()
{
    char data;
    data = ' ';
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%c", &data);
    {
        char dataCopy = data;
        char data = dataCopy;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            char result = data + 1;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
24,25
26,27
26,28
26,29
27,28
28,29
28,30
30,31
30,32
32,33
33,34
35,36
36,37
36,38
38,39
38,40
40,41
41,42
43,44
43,45
44,45
45,46
45,47
47,48
47,49
49,50
50,51
50,52
51,52
54,55
55,56
55,57
56,57
58,59
-----nextToken-----
2,4,8,10,14,15,19,21,22,25,29,31,34,37,39,42,46,48,52,53,57,59
-----computeFrom-----
12,13
12,14
50,51
50,52
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_add_31_bad(){    char data;    data = ' ';    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%c", &data);    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_add_31_bad()
CWE190_Integer_Overflow__char_fscanf_add_31_bad
{    char data;    data = ' ';    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%c", &data);    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
{        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
char dataCopy = data;
char dataCopy = data;
char
dataCopy = data
dataCopy
= data
data
data
char data = dataCopy;
char data = dataCopy;
char
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(23,17,0)
(11,19,0)
(2,20,0)
(19,16,0)
(18,20,0)
(22,0,0)
(14,10,0)
(22,10,0)
(24,2,0)
(28,20,0)
(9,19,0)
(2,19,0)
(10,22,0)
(26,2,0)
(17,2,0)
(27,21,0)
(17,19,0)
(21,16,0)
(0,19,0)
(18,21,0)
(8,17,0)
(12,18,0)
(25,22,0)
(5,21,0)
(20,16,0)
(4,20,0)
(1,22,0)
(21,18,0)
(13,16,0)
(1,0,0)
(15,10,0)
(7,0,0)
(3,1,0)
(10,17,0)
(27,5,1)
(25,17,1)
(5,20,1)
(1,3,1)
(1,22,1)
(10,14,1)
(3,22,1)
(6,1,1)
(24,26,1)
(23,8,1)
(18,20,1)
(10,17,1)
(15,25,1)
(21,18,1)
(22,10,1)
(17,23,1)
(8,2,1)
(17,2,1)
(14,15,1)
(26,21,1)
(2,24,1)
(20,4,1)
(2,20,1)
(18,12,1)
(12,27,1)
(4,28,1)
(18,20,2)
(22,10,2)
(17,2,2)
(1,22,2)
(2,20,2)
(10,17,2)
(21,18,2)
-----------------------------------
(0,)
(1,printHexCharLine(result)
(2,dataCopy = data)
(3,result)
(4,\\\' \\\')
(5,stdin)
(6,RET)
(7,result)
(8,data)
(9,data)
(10,data + 1)
(11,dataCopy)
(12,data)
(13,data)
(14,1)
(15,data)
(16,)
(17,data = dataCopy)
(18,&data)
(19,)
(20,data = \\\' \\\')
(21,fscanf (stdin, "%c", &data)
(22,result = data + 1)
(23,dataCopy)
(24,data)
(25,result)
(26,dataCopy)
(27,"%c")
(28,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^