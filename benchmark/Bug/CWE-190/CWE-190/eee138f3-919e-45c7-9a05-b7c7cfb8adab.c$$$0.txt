-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_multiply_64_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    CWE190_Integer_Overflow__int_fgets_multiply_64b_badSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
18,20
20,21
20,22
20,23
22,23
23,24
25,26
27,28
27,29
27,30
28,29
28,30
29,30
29,31
29,32
29,33
30,31
32,33
34,35
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
56,57
57,58
57,59
58,59
60,61
61,62
-----nextToken-----
2,4,8,10,14,15,19,21,24,26,31,33,35,37,39,44,47,49,54,55,59,62
-----computeFrom-----
12,13
12,14
28,29
28,30
42,43
42,44
-----guardedBy-----
33,49
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_multiply_64_bad(){    int data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    CWE190_Integer_Overflow__int_fgets_multiply_64b_badSink(&data);}
void
CWE190_Integer_Overflow__int_fgets_multiply_64_bad()
CWE190_Integer_Overflow__int_fgets_multiply_64_bad
{    int data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    CWE190_Integer_Overflow__int_fgets_multiply_64b_badSink(&data);}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
CWE190_Integer_Overflow__int_fgets_multiply_64b_badSink(&data);
CWE190_Integer_Overflow__int_fgets_multiply_64b_badSink(&data)
CWE190_Integer_Overflow__int_fgets_multiply_64b_badSink
CWE190_Integer_Overflow__int_fgets_multiply_64b_badSink
&data
data
data
-----joern-----
(8,6,0)
(10,14,0)
(5,17,0)
(16,28,0)
(23,28,0)
(14,13,0)
(13,14,0)
(14,2,0)
(0,17,0)
(28,2,0)
(6,18,0)
(24,2,0)
(22,18,0)
(17,18,0)
(25,1,0)
(8,23,0)
(7,18,0)
(4,14,0)
(2,7,0)
(8,17,0)
(27,25,0)
(19,14,0)
(9,8,0)
(12,23,0)
(3,13,0)
(20,7,0)
(6,8,0)
(28,23,0)
(11,7,0)
(23,26,0)
(21,2,0)
(3,14,1)
(4,10,1)
(25,27,1)
(14,19,1)
(8,9,1)
(10,2,1)
(8,23,1)
(21,24,1)
(28,2,1)
(27,13,1)
(28,16,1)
(14,2,1)
(2,21,1)
(9,25,1)
(17,5,1)
(16,12,1)
(5,0,1)
(9,23,1)
(13,3,1)
(6,8,1)
(23,28,1)
(15,6,1)
(8,17,1)
(12,13,1)
(24,17,1)
(19,4,1)
(13,14,1)
(14,2,2)
(12,13,2)
(13,14,2)
(8,23,2)
(28,2,2)
(23,13,2)
(6,8,2)
(25,13,2)
(23,28,2)
(8,17,2)
(27,13,2)
(16,13,2)
(28,13,2)
-----------------------------------
(0,data)
(1,)
(2,inputBuffer[CHAR_ARRAY_SIZE] = "")
(3,NULL)
(4,CHAR_ARRAY_SIZE)
(5,0)
(6,CWE190_Integer_Overflow__int_fgets_multiply_64b_badSink(&data)
(7,)
(8,&data)
(9,data)
(10,inputBuffer)
(11,inputBuffer)
(12,data)
(13,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(14,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(15,RET)
(16,inputBuffer)
(17,data = 0)
(18,)
(19,stdin)
(20,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(21,"")
(22,data)
(23,data = atoi(inputBuffer)
(24,inputBuffer)
(25,printLine("fgets()
(26,)
(27,"fgets()
(28,atoi(inputBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^