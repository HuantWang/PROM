-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_preinc_07_bad()
{
    char data;
    data = ' ';
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            char result = data;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_preinc_07_bad(){    char data;    data = ' ';    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_preinc_07_bad()
CWE190_Integer_Overflow__char_fscanf_preinc_07_bad
{    char data;    data = ' ';    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(staticFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(3,16,0)
(29,19,0)
(1,18,0)
(4,6,0)
(9,16,0)
(15,17,0)
(26,25,0)
(17,6,0)
(16,9,0)
(7,5,0)
(28,25,0)
(12,23,0)
(6,22,0)
(16,10,0)
(11,18,0)
(0,5,0)
(9,5,0)
(5,18,0)
(27,23,0)
(24,20,0)
(19,23,0)
(2,20,0)
(23,6,0)
(19,6,0)
(13,16,0)
(14,18,0)
(17,5,0)
(21,9,0)
(23,5,0)
(19,23,1)
(20,24,1)
(13,3,1)
(23,5,1)
(17,5,1)
(21,13,1)
(8,25,1)
(23,27,1)
(12,17,1)
(3,20,1)
(28,20,1)
(28,16,1)
(25,26,1)
(2,5,1)
(9,21,1)
(8,19,1)
(9,5,1)
(16,9,1)
(26,28,1)
(19,29,1)
(5,0,1)
(24,2,1)
(0,7,1)
(29,23,1)
(15,25,1)
(17,15,1)
(27,12,1)
(12,25,2)
(27,25,2)
(19,25,2)
(17,25,2)
(15,25,2)
(17,5,2)
(16,9,2)
(29,25,2)
(23,25,2)
(16,20,2)
(9,20,2)
(9,5,2)
(13,20,2)
(3,20,2)
(23,5,2)
(21,20,2)
(19,23,2)
-----------------------------------
(0,\\\' \\\')
(1,data)
(2,staticFive)
(3,stdin)
(4,result)
(5,data = \\\' \\\')
(6,)
(7,data)
(8,RET)
(9,&data)
(10,)
(11,if(staticFive==5)
(12,result)
(13,"%c")
(14,if(staticFive==5)
(15,data)
(16,fscanf (stdin, "%c", &data)
(17,++data)
(18,)
(19,printHexCharLine(result)
(20,staticFive==5)
(21,data)
(22,)
(23,result = data)
(24,5)
(25,staticFive==5)
(26,5)
(27,data)
(28,staticFive)
(29,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^