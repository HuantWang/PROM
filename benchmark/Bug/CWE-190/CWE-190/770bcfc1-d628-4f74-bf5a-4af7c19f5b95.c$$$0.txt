-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_add_06_bad()
{
    short data;
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
40,41
40,42
42,43
42,44
44,45
45,46
45,47
46,47
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,43,47,48,52,54
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_add_06_bad(){    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_add_06_bad()
CWE190_Integer_Overflow__short_fscanf_add_06_bad
{    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(10,5,0)
(24,19,0)
(11,3,0)
(11,9,0)
(27,8,0)
(19,14,0)
(13,11,0)
(23,9,0)
(21,9,0)
(25,15,0)
(18,15,0)
(4,8,0)
(28,3,0)
(28,19,0)
(3,11,0)
(16,28,0)
(15,12,0)
(29,5,0)
(18,9,0)
(3,19,0)
(26,20,0)
(6,18,0)
(22,11,0)
(17,5,0)
(2,15,0)
(0,20,0)
(9,5,0)
(1,3,0)
(15,18,0)
(2,20,1)
(13,1,1)
(27,4,1)
(18,9,1)
(6,25,1)
(15,18,1)
(26,9,1)
(4,20,1)
(0,26,1)
(8,27,1)
(23,21,1)
(7,8,1)
(4,15,1)
(9,23,1)
(7,28,1)
(1,8,1)
(11,22,1)
(28,3,1)
(16,3,1)
(25,2,1)
(11,9,1)
(28,16,1)
(22,13,1)
(18,6,1)
(20,0,1)
(3,11,1)
(15,18,2)
(3,11,2)
(6,20,2)
(11,8,2)
(3,8,2)
(28,3,2)
(2,20,2)
(18,20,2)
(1,8,2)
(11,9,2)
(16,8,2)
(28,8,2)
(25,20,2)
(18,9,2)
(13,8,2)
(15,20,2)
(22,8,2)
-----------------------------------
(0,5)
(1,result)
(2,stdin)
(3,result = data + 1)
(4,STATIC_CONST_FIVE)
(5,)
(6,data)
(7,RET)
(8,STATIC_CONST_FIVE==5)
(9,data = 0)
(10,if(STATIC_CONST_FIVE==5)
(11,data + 1)
(12,)
(13,data)
(14,)
(15,fscanf (stdin, "%hd", &data)
(16,result)
(17,data)
(18,&data)
(19,)
(20,STATIC_CONST_FIVE==5)
(21,data)
(22,1)
(23,0)
(24,result)
(25,"%hd")
(26,STATIC_CONST_FIVE)
(27,5)
(28,printIntLine(result)
(29,if(STATIC_CONST_FIVE==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^