-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_square_02_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(1)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
            int result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
21,22
23,24
25,26
25,27
27,28
28,29
28,30
29,30
30,31
30,32
32,33
32,34
34,35
35,36
35,37
36,37
38,39
40,41
41,42
41,43
42,43
44,45
-----nextToken-----
2,4,8,10,14,15,17,22,24,26,31,33,37,39,43,45
-----computeFrom-----
12,13
12,14
20,21
20,22
35,36
35,37
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_square_02_bad(){    int data;    /* Initialize data */    data = 0;    if(1)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_square_02_bad()
CWE190_Integer_Overflow__int_max_square_02_bad
{    int data;    /* Initialize data */    data = 0;    if(1)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(1)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
1
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(22,4,0)
(13,4,0)
(4,22,0)
(18,6,0)
(15,12,0)
(12,11,0)
(3,22,0)
(16,6,0)
(22,19,0)
(6,14,0)
(1,21,0)
(4,12,0)
(9,20,0)
(19,20,0)
(2,20,0)
(23,19,0)
(10,20,0)
(8,19,0)
(21,4,0)
(22,6,0)
(21,12,0)
(7,22,0)
(19,8,1)
(8,23,1)
(21,4,1)
(22,19,1)
(18,16,1)
(22,6,1)
(3,7,1)
(7,13,1)
(4,22,1)
(21,1,1)
(13,5,1)
(6,18,1)
(16,0,1)
(0,19,1)
(22,3,1)
(17,5,1)
(5,6,1)
(5,0,1)
(1,4,1)
(17,21,1)
(22,6,2)
(3,5,2)
(4,22,2)
(4,5,2)
(18,0,2)
(1,5,2)
(16,0,2)
(13,5,2)
(22,5,2)
(22,19,2)
(7,5,2)
(6,0,2)
(21,4,2)
(21,5,2)
-----------------------------------
(0,1)
(1,result)
(2,data)
(3,data)
(4,result = data * data)
(5,1)
(6,data = INT_MAX)
(7,data)
(8,0)
(9,if(1)
(10,if(1)
(11,)
(12,)
(13,result)
(14,)
(15,result)
(16,data)
(17,RET)
(18,INT_MAX)
(19,data = 0)
(20,)
(21,printIntLine(result)
(22,data * data)
(23,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^