-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_add_03_bad()
{
    short data;
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
31,32
32,33
32,34
33,34
34,35
34,36
36,37
36,38
38,39
39,40
39,41
40,41
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,29,30,35,37,41,42,46,48
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
28,29
28,30
39,40
39,41
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_add_03_bad(){    short data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_add_03_bad()
CWE190_Integer_Overflow__short_max_add_03_bad
{    short data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
5==5
5
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(26,16,0)
(9,3,0)
(18,3,0)
(3,25,0)
(25,8,0)
(14,5,0)
(15,8,0)
(19,26,0)
(6,25,0)
(2,21,0)
(3,26,0)
(17,7,0)
(0,2,0)
(1,18,0)
(24,8,0)
(4,10,0)
(8,7,0)
(25,2,0)
(11,10,0)
(20,2,0)
(25,3,0)
(22,5,0)
(12,25,0)
(23,7,0)
(18,26,0)
(27,7,0)
(18,1,1)
(1,3,1)
(22,2,1)
(13,18,1)
(9,5,1)
(10,4,1)
(13,5,1)
(6,12,1)
(14,22,1)
(4,11,1)
(3,25,1)
(25,2,1)
(22,10,1)
(8,24,1)
(18,3,1)
(24,15,1)
(25,6,1)
(2,20,1)
(25,8,1)
(12,9,1)
(5,14,1)
(0,10,1)
(11,8,1)
(20,0,1)
(12,5,2)
(3,5,2)
(25,5,2)
(20,10,2)
(25,2,2)
(6,5,2)
(1,5,2)
(18,5,2)
(9,5,2)
(2,10,2)
(25,8,2)
(3,25,2)
(0,10,2)
(18,3,2)
-----------------------------------
(0,data)
(1,result)
(2,data = SHRT_MAX)
(3,result = data + 1)
(4,5)
(5,5==5)
(6,1)
(7,)
(8,data = 0)
(9,result)
(10,5==5)
(11,5)
(12,data)
(13,RET)
(14,5)
(15,data)
(16,)
(17,data)
(18,printIntLine(result)
(19,result)
(20,SHRT_MAX)
(21,)
(22,5)
(23,if(5==5)
(24,0)
(25,data + 1)
(26,)
(27,if(5==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^