-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_add_14_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(globalFive==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
40,41
40,42
42,43
42,44
44,45
45,46
45,47
46,47
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,43,47,48,52,54
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_add_14_bad(){    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_add_14_bad()
CWE190_Integer_Overflow__int_fscanf_add_14_bad
{    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(globalFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(0,6,0)
(17,5,0)
(20,23,0)
(29,8,0)
(7,24,0)
(21,19,0)
(1,7,0)
(2,12,0)
(11,15,0)
(14,18,0)
(5,12,0)
(7,15,0)
(22,5,0)
(28,10,0)
(16,23,0)
(5,6,0)
(15,7,0)
(18,3,0)
(12,18,0)
(27,19,0)
(4,6,0)
(12,5,0)
(6,10,0)
(13,7,0)
(15,6,0)
(25,10,0)
(8,12,0)
(8,18,0)
(26,10,0)
(13,1,1)
(12,5,1)
(21,23,1)
(8,29,1)
(15,11,1)
(29,12,1)
(5,6,1)
(6,4,1)
(4,0,1)
(23,16,1)
(17,22,1)
(7,15,1)
(15,6,1)
(20,6,1)
(8,12,1)
(21,7,1)
(5,17,1)
(27,21,1)
(16,20,1)
(1,23,1)
(11,13,1)
(19,27,1)
(2,19,1)
(22,2,1)
(9,19,1)
(9,8,1)
(12,5,2)
(5,19,2)
(22,19,2)
(13,23,2)
(12,19,2)
(15,23,2)
(17,19,2)
(8,12,2)
(2,19,2)
(11,23,2)
(8,19,2)
(29,19,2)
(15,6,2)
(1,23,2)
(7,23,2)
(7,15,2)
(5,6,2)
-----------------------------------
(0,data)
(1,stdin)
(2,result)
(3,)
(4,0)
(5,data + 1)
(6,data = 0)
(7,fscanf(stdin, "%d", &data)
(8,printIntLine(result)
(9,RET)
(10,)
(11,data)
(12,result = data + 1)
(13,"%d")
(14,result)
(15,&data)
(16,5)
(17,1)
(18,)
(19,globalFive==5)
(20,globalFive)
(21,globalFive)
(22,data)
(23,globalFive==5)
(24,)
(25,if(globalFive==5)
(26,data)
(27,5)
(28,if(globalFive==5)
(29,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^