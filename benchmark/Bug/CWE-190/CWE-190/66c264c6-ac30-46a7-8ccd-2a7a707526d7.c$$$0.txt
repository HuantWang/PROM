-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_32_bad()
{
    unsigned int data;
    unsigned int *dataPtr1 = &data;
    unsigned int *dataPtr2 = &data;
    data = 0;
    {
        unsigned int data = *dataPtr1;
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
        *dataPtr1 = data;
    }
    {
        unsigned int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
50,52
51,52
51,53
54,55
55,56
57,58
58,59
58,60
59,60
60,61
62,63
64,65
64,66
65,66
66,67
66,68
68,69
68,70
70,71
71,72
72,73
74,75
74,76
74,77
75,76
76,77
77,78
79,80
80,81
80,82
82,83
82,84
84,85
85,86
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,52,53,56,61,63,67,69,73,78,81,83,86,90,92
-----computeFrom-----
32,33
32,34
47,48
47,49
58,59
58,60
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_32_bad(){    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_postinc_32_bad()
CWE190_Integer_Overflow__unsigned_int_rand_postinc_32_bad
{    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
unsigned int *dataPtr1 = &data;
unsigned int *dataPtr1 = &data;
unsigned int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
unsigned int *dataPtr2 = &data;
unsigned int *dataPtr2 = &data;
unsigned int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        *dataPtr1 = data;    }
unsigned int data = *dataPtr1;
unsigned int data = *dataPtr1;
unsigned int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
unsigned int data = *dataPtr2;
unsigned int data = *dataPtr2;
unsigned int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(21,25,0)
(15,24,0)
(17,3,0)
(4,2,0)
(42,24,0)
(28,30,0)
(8,24,0)
(19,26,0)
(20,9,0)
(45,10,0)
(2,3,0)
(20,44,0)
(29,24,0)
(34,26,0)
(44,20,0)
(25,10,0)
(23,8,0)
(21,2,0)
(28,42,0)
(7,28,0)
(37,17,0)
(8,30,0)
(33,26,0)
(42,30,0)
(18,44,0)
(1,25,0)
(0,21,0)
(33,39,0)
(10,25,0)
(36,26,0)
(44,3,0)
(22,42,0)
(3,26,0)
(24,36,0)
(32,26,0)
(5,32,0)
(24,29,0)
(1,17,0)
(38,42,0)
(31,25,0)
(13,26,0)
(9,20,0)
(27,33,0)
(39,33,0)
(43,3,0)
(12,32,0)
(30,36,0)
(29,33,0)
(20,6,0)
(14,29,0)
(35,39,0)
(17,1,0)
(41,36,0)
(6,20,0)
(25,26,0)
(40,1,0)
(2,44,0)
(11,30,0)
(8,24,1)
(32,5,1)
(27,25,1)
(1,25,1)
(10,45,1)
(8,23,1)
(24,29,1)
(45,31,1)
(40,37,1)
(25,10,1)
(7,42,1)
(42,22,1)
(20,6,1)
(21,0,1)
(29,14,1)
(2,4,1)
(21,25,1)
(33,39,1)
(29,33,1)
(20,9,1)
(42,24,1)
(22,38,1)
(9,18,1)
(0,44,1)
(44,20,1)
(15,2,1)
(35,27,1)
(28,42,1)
(1,40,1)
(2,44,1)
(14,15,1)
(17,1,1)
(28,7,1)
(5,12,1)
(38,8,1)
(39,35,1)
(16,28,1)
(18,17,1)
(37,32,1)
(23,24,1)
(12,33,1)
(4,21,1)
(1,25,2)
(20,6,2)
(17,1,2)
(24,29,2)
(25,10,2)
(44,20,2)
(29,33,2)
(8,24,2)
(33,39,2)
(20,9,2)
(21,25,2)
(2,44,2)
(42,24,2)
(28,42,2)
-----------------------------------
(0,dataPtr1)
(1,*dataPtr1)
(2,*dataPtr1 = data)
(3,)
(4,data)
(5,0)
(6,unsigned int)
(7,result)
(8,data++)
(9,RAND32()
(10,&data)
(11,result)
(12,data)
(13,data)
(14,dataPtr2)
(15,data)
(16,RET)
(17,data = *dataPtr1)
(18,data)
(19,dataPtr2)
(20,(unsigned int)
(21,*dataPtr1)
(22,data)
(23,data)
(24,data = *dataPtr2)
(25,*dataPtr1 = &data)
(26,)
(27,dataPtr2)
(28,printUnsignedLine(result)
(29,*dataPtr2)
(30,)
(31,dataPtr1)
(32,data = 0)
(33,*dataPtr2 = &data)
(34,dataPtr1)
(35,data)
(36,)
(37,data)
(38,result)
(39,&data)
(40,dataPtr1)
(41,data)
(42,result = data)
(43,data)
(44,data = (unsigned int)
(45,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^