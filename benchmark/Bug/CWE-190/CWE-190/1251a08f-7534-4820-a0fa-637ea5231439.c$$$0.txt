-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_10_bad()
{
    unsigned int data;
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,37,39,43,45,49,51
-----computeFrom-----
12,13
12,14
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_10_bad(){    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_square_10_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_square_10_bad
{    unsigned int data;    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(globalTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(21,19,0)
(21,3,0)
(14,21,0)
(6,12,0)
(22,12,0)
(11,12,0)
(0,19,0)
(13,4,0)
(16,3,0)
(9,20,0)
(25,16,0)
(2,19,0)
(1,13,0)
(23,16,0)
(8,9,0)
(20,13,0)
(19,21,0)
(18,3,0)
(9,13,0)
(19,10,0)
(7,3,0)
(24,20,0)
(16,20,0)
(3,12,0)
(20,16,0)
(14,0,1)
(25,23,1)
(7,18,1)
(17,3,1)
(23,24,1)
(16,25,1)
(0,2,1)
(5,9,1)
(5,15,1)
(24,15,1)
(8,20,1)
(2,17,1)
(21,3,1)
(20,16,1)
(3,7,1)
(19,21,1)
(21,14,1)
(9,8,1)
(16,3,1)
(15,17,1)
(9,20,1)
(15,19,1)
(20,15,2)
(21,17,2)
(23,15,2)
(19,17,2)
(20,16,2)
(24,15,2)
(9,20,2)
(2,17,2)
(21,3,2)
(16,3,2)
(14,17,2)
(9,15,2)
(19,21,2)
(25,15,2)
(0,17,2)
(8,15,2)
(16,15,2)
-----------------------------------
(0,"%u")
(1,result)
(2,stdin)
(3,data = 0)
(4,)
(5,RET)
(6,data)
(7,0)
(8,result)
(9,printUnsignedLine(result)
(10,)
(11,if(globalTrue)
(12,)
(13,)
(14,data)
(15,globalTrue)
(16,data * data)
(17,globalTrue)
(18,data)
(19,fscanf (stdin, "%u", &data)
(20,result = data * data)
(21,&data)
(22,if(globalTrue)
(23,data)
(24,result)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^