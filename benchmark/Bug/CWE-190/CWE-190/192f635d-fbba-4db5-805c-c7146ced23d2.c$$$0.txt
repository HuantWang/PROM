-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_postinc_13_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
22,24
23,24
24,25
24,26
26,27
26,28
26,29
28,29
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
35,37
35,38
35,39
36,37
38,39
40,41
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
51,53
52,53
54,55
56,57
57,58
58,59
58,60
59,60
62,63
62,64
63,64
63,65
64,65
67,68
68,69
68,70
68,71
69,70
70,71
71,72
73,74
74,75
74,76
76,77
76,78
78,79
79,80
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,30,32,37,39,41,43,45,50,53,55,60,61,65,66,72,75,77,80,84,86
-----computeFrom-----
12,13
12,14
17,18
17,19
34,35
34,36
48,49
48,50
63,64
63,65
-----guardedBy-----
39,55
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_postinc_13_bad(){    int data;    /* Initialize data */    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_postinc_13_bad()
CWE190_Integer_Overflow__int_fgets_postinc_13_bad
{    int data;    /* Initialize data */    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(1,8,0)
(0,8,0)
(40,31,0)
(5,41,0)
(36,40,0)
(7,16,0)
(34,0,0)
(33,11,0)
(13,26,0)
(25,13,0)
(22,13,0)
(17,20,0)
(44,31,0)
(24,13,0)
(21,8,0)
(42,18,0)
(23,40,0)
(8,40,0)
(31,10,0)
(27,41,0)
(8,0,0)
(39,22,0)
(25,41,0)
(3,20,0)
(14,25,0)
(35,28,0)
(43,16,0)
(11,16,0)
(27,40,0)
(18,25,0)
(30,32,0)
(18,13,0)
(41,27,0)
(15,27,0)
(4,8,0)
(6,32,0)
(28,37,0)
(19,31,0)
(25,11,0)
(22,41,0)
(29,16,0)
(9,11,0)
(2,25,0)
(22,11,0)
(41,38,0)
(42,25,1)
(30,28,1)
(4,40,1)
(27,40,1)
(18,25,1)
(17,11,1)
(28,35,1)
(30,20,1)
(18,42,1)
(25,2,1)
(40,23,1)
(22,39,1)
(22,11,1)
(30,41,1)
(41,27,1)
(34,8,1)
(11,9,1)
(5,0,1)
(2,14,1)
(6,30,1)
(27,15,1)
(14,22,1)
(36,20,1)
(21,4,1)
(0,34,1)
(0,8,1)
(39,32,1)
(12,32,1)
(25,41,1)
(25,11,1)
(32,6,1)
(12,18,1)
(35,0,1)
(23,36,1)
(8,40,1)
(8,1,1)
(9,33,1)
(15,5,1)
(1,21,1)
(20,3,1)
(22,41,1)
(3,17,1)
(18,32,2)
(5,0,2)
(28,0,2)
(35,0,2)
(27,0,2)
(25,41,2)
(14,32,2)
(41,27,2)
(42,32,2)
(39,32,2)
(41,0,2)
(0,20,2)
(2,32,2)
(15,0,2)
(0,8,2)
(25,11,2)
(23,20,2)
(40,20,2)
(21,20,2)
(8,20,2)
(22,11,2)
(22,41,2)
(22,32,2)
(4,20,2)
(18,25,2)
(1,20,2)
(34,20,2)
(25,32,2)
(36,20,2)
(8,40,2)
(27,40,2)
-----------------------------------
(0,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(1,stdin)
(2,data)
(3,5)
(4,inputBuffer)
(5,data)
(6,5)
(7,if(GLOBAL_CONST_FIVE==5)
(8,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(9,0)
(10,)
(11,data = 0)
(12,RET)
(13,)
(14,result)
(15,inputBuffer)
(16,)
(17,GLOBAL_CONST_FIVE)
(18,printIntLine(result)
(19,inputBuffer)
(20,GLOBAL_CONST_FIVE==5)
(21,CHAR_ARRAY_SIZE)
(22,data++)
(23,"")
(24,result)
(25,result = data)
(26,)
(27,atoi(inputBuffer)
(28,printLine("fgets()
(29,if(GLOBAL_CONST_FIVE==5)
(30,GLOBAL_CONST_FIVE)
(31,)
(32,GLOBAL_CONST_FIVE==5)
(33,data)
(34,NULL)
(35,"fgets()
(36,inputBuffer)
(37,)
(38,)
(39,data)
(40,inputBuffer[CHAR_ARRAY_SIZE] = "")
(41,data = atoi(inputBuffer)
(42,result)
(43,data)
(44,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^