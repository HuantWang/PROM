-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_add_04_bad()
{
    int64_t data;
    data = 0LL;
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
    }
    if(STATIC_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int64_t result = data + 1;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
27,28
30,31
31,32
33,34
33,35
34,35
36,37
37,38
37,39
38,39
39,40
39,41
40,41
42,43
42,44
44,45
45,46
45,47
46,47
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,9,11,15,16,19,24,28,29,32,35,41,43,47,48,52,54
-----computeFrom-----
13,14
13,15
22,23
22,24
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_add_04_bad(){    int64_t data;    data = 0LL;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_add_04_bad()
CWE190_Integer_Overflow__int64_t_rand_add_04_bad
{    int64_t data;    data = 0LL;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(3,1,0)
(9,15,0)
(21,2,0)
(4,16,0)
(11,15,0)
(22,21,0)
(21,7,0)
(10,3,0)
(6,7,0)
(13,1,0)
(1,15,0)
(15,7,0)
(17,16,0)
(1,20,0)
(3,20,0)
(19,16,0)
(8,16,0)
(15,1,0)
(7,21,0)
(21,22,0)
(7,18,0)
(20,23,0)
(2,21,0)
(12,20,0)
(15,7,1)
(14,8,1)
(3,10,1)
(21,22,1)
(5,3,1)
(0,7,1)
(5,0,1)
(0,14,1)
(13,0,1)
(11,13,1)
(15,9,1)
(6,14,1)
(9,11,1)
(10,1,1)
(3,1,1)
(7,21,1)
(1,15,1)
(21,2,1)
(22,6,1)
(9,0,2)
(22,14,2)
(15,0,2)
(21,2,2)
(3,1,2)
(1,15,2)
(21,22,2)
(21,14,2)
(7,14,2)
(3,0,2)
(6,14,2)
(13,0,2)
(11,0,2)
(7,21,2)
(10,0,2)
(15,7,2)
(1,0,2)
-----------------------------------
(0,STATIC_CONST_TRUE)
(1,result = data + 1)
(2,int64_t)
(3,printLongLongLine(result)
(4,if(STATIC_CONST_TRUE)
(5,RET)
(6,data)
(7,data = (int64_t)
(8,L)
(9,1)
(10,result)
(11,data)
(12,result)
(13,result)
(14,STATIC_CONST_TRUE)
(15,data + 1)
(16,)
(17,data)
(18,)
(19,if(STATIC_CONST_TRUE)
(20,)
(21,(int64_t)
(22,RAND64()
(23,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^