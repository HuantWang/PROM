-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_square_03_bad()
{
    unsigned int data;
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
33,34
33,35
36,37
37,38
37,39
38,39
39,40
39,41
41,42
41,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,14,15,18,19,24,27,28,31,34,35,40,42,46,48,52,54
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
33,34
33,35
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_square_03_bad(){    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(5==5)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_square_03_bad()
CWE190_Integer_Overflow__unsigned_int_rand_square_03_bad
{    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(5==5)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
5==5
5
5
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(5==5)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(19,28,0)
(20,28,0)
(13,1,0)
(16,25,0)
(8,21,0)
(15,16,0)
(0,20,0)
(19,6,0)
(19,15,0)
(21,16,0)
(20,2,0)
(29,24,0)
(21,15,0)
(26,5,0)
(3,5,0)
(2,20,0)
(17,19,0)
(15,19,0)
(27,28,0)
(10,6,0)
(22,5,0)
(9,15,0)
(23,1,0)
(14,19,0)
(7,16,0)
(20,0,0)
(28,20,0)
(28,12,0)
(11,6,0)
(4,24,0)
(6,5,0)
(8,15,1)
(20,2,1)
(20,0,1)
(21,8,1)
(9,1,1)
(29,6,1)
(2,27,1)
(1,23,1)
(19,6,1)
(10,11,1)
(19,14,1)
(13,28,1)
(6,10,1)
(23,13,1)
(13,24,1)
(21,15,1)
(14,17,1)
(24,4,1)
(15,19,1)
(4,29,1)
(28,20,1)
(17,9,1)
(18,21,1)
(27,24,1)
(18,1,1)
(19,28,1)
(17,1,2)
(14,1,2)
(9,1,2)
(20,0,2)
(15,1,2)
(28,24,2)
(20,2,2)
(21,15,2)
(27,24,2)
(2,24,2)
(28,20,2)
(19,1,2)
(19,28,2)
(8,1,2)
(21,1,2)
(19,6,2)
(20,24,2)
(15,19,2)
-----------------------------------
(0,unsigned int)
(1,5==5)
(2,RAND32()
(3,if(5==5)
(4,5)
(5,)
(6,data = 0)
(7,result)
(8,result)
(9,result)
(10,0)
(11,data)
(12,)
(13,5)
(14,data)
(15,result = data * data)
(16,)
(17,data)
(18,RET)
(19,data * data)
(20,(unsigned int)
(21,printUnsignedLine(result)
(22,if(5==5)
(23,5)
(24,5==5)
(25,)
(26,data)
(27,data)
(28,data = (unsigned int)
(29,5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^