-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_preinc_03_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
31,32
32,33
32,34
32,35
33,34
34,35
35,36
37,38
38,39
38,40
40,41
40,42
42,43
43,44
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,29,30,36,39,41,44,48,50
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
28,29
28,30
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_preinc_03_bad(){    int data;    /* Initialize data */    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_preinc_03_bad()
CWE190_Integer_Overflow__int_max_preinc_03_bad
{    int data;    /* Initialize data */    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
5==5
5
5
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(22,23,0)
(1,4,0)
(13,20,0)
(24,13,0)
(17,20,0)
(4,23,0)
(21,2,0)
(10,4,0)
(25,16,0)
(5,4,0)
(9,25,0)
(18,26,0)
(7,23,0)
(13,26,0)
(20,4,0)
(0,23,0)
(8,12,0)
(26,27,0)
(11,12,0)
(10,26,0)
(20,25,0)
(15,20,0)
(14,10,0)
(20,26,0)
(6,2,0)
(10,25,0)
(3,25,0)
(11,8,1)
(12,11,1)
(20,4,1)
(4,5,1)
(14,2,1)
(20,15,1)
(6,25,1)
(20,25,1)
(19,2,1)
(17,10,1)
(15,17,1)
(9,3,1)
(13,24,1)
(6,12,1)
(3,12,1)
(5,1,1)
(10,14,1)
(13,20,1)
(8,4,1)
(10,4,1)
(24,20,1)
(25,9,1)
(21,6,1)
(10,25,1)
(2,21,1)
(19,13,1)
(13,2,2)
(25,12,2)
(17,2,2)
(20,25,2)
(24,2,2)
(15,2,2)
(9,12,2)
(20,2,2)
(3,12,2)
(14,2,2)
(10,4,2)
(20,4,2)
(10,2,2)
(13,20,2)
(10,25,2)
-----------------------------------
(0,if(5==5)
(1,data)
(2,5==5)
(3,data)
(4,data = 0)
(5,0)
(6,5)
(7,data)
(8,5)
(9,INT_MAX)
(10,++data)
(11,5)
(12,5==5)
(13,printIntLine(result)
(14,data)
(15,data)
(16,)
(17,result)
(18,result)
(19,RET)
(20,result = data)
(21,5)
(22,if(5==5)
(23,)
(24,result)
(25,data = INT_MAX)
(26,)
(27,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^