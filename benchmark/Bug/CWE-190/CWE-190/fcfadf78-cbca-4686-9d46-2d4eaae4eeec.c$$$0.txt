-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_preinc_63b_badSink(short * dataPtr)
{
    short data = *dataPtr;
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        ++data;
        short result = data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
18,19
20,21
20,22
20,23
21,22
22,23
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
33,34
34,35
34,36
35,36
37,38
-----nextToken-----
2,4,6,8,9,13,15,19,24,27,29,32,36,38
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_preinc_63b_badSink(short * dataPtr){    short data = *dataPtr;    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        short result = data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__short_fscanf_preinc_63b_badSink(short * dataPtr)
CWE190_Integer_Overflow__short_fscanf_preinc_63b_badSink
short * dataPtr
short
* dataPtr
*
dataPtr
{    short data = *dataPtr;    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        short result = data;        printIntLine(result);    }}
short data = *dataPtr;
short data = *dataPtr;
short
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        short result = data;        printIntLine(result);    }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(9,3,0)
(2,6,0)
(3,13,0)
(10,4,0)
(6,8,0)
(13,8,0)
(5,13,0)
(1,9,0)
(4,7,0)
(0,13,0)
(12,8,0)
(11,3,0)
(9,13,0)
(4,6,0)
(6,4,0)
(5,6,0)
(15,3,0)
(14,5,0)
(3,6,0)
(9,3,1)
(4,10,1)
(14,6,1)
(16,9,1)
(9,1,1)
(4,7,1)
(15,5,1)
(3,6,1)
(3,11,1)
(11,15,1)
(1,3,1)
(5,14,1)
(6,4,1)
(10,2,1)
(5,6,1)
(9,3,2)
(3,6,2)
(6,4,2)
(5,6,2)
(4,7,2)
-----------------------------------
(0,result)
(1,result)
(2,data)
(3,result = data)
(4,*dataPtr)
(5,++data)
(6,data = *dataPtr)
(7,short * dataPtr)
(8,)
(9,printIntLine(result)
(10,dataPtr)
(11,data)
(12,data)
(13,)
(14,data)
(15,result)
(16,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^