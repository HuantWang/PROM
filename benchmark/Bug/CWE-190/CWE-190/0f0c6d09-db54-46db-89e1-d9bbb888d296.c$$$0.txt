-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_01_bad()
{
    unsigned int data;
    data = 0;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%u", &data);
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */
        unsigned int result = data * 2;
        printUnsignedLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
24,25
26,27
26,28
27,28
27,29
28,29
31,32
31,33
32,33
33,34
33,35
35,36
35,37
37,38
38,39
38,40
39,40
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,15,19,21,22,25,29,30,34,36,40,41,45,47
-----computeFrom-----
12,13
12,14
27,28
27,29
38,39
38,40
-----guardedBy-----
29,40
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_01_bad(){    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_01_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_01_bad
{    unsigned int data;    data = 0;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%u", &data);    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > UINT_MAX, this will overflow */        unsigned int result = data * 2;        printUnsignedLine(result);    }
unsigned int result = data * 2;
unsigned int result = data * 2;
unsigned int
result = data * 2
result
= data * 2
data * 2
data
data
2
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(22,20,0)
(20,8,0)
(12,15,0)
(4,6,0)
(15,18,0)
(3,6,0)
(10,15,0)
(6,4,0)
(1,6,0)
(4,18,0)
(11,2,0)
(13,18,0)
(9,16,0)
(7,20,0)
(21,2,0)
(20,16,0)
(18,2,0)
(19,7,0)
(16,20,0)
(16,18,0)
(7,8,0)
(23,8,0)
(0,18,0)
(6,2,0)
(17,16,0)
(5,4,0)
(19,20,1)
(10,6,1)
(3,1,1)
(7,20,1)
(1,18,1)
(14,7,1)
(5,3,1)
(15,18,1)
(16,17,1)
(15,12,1)
(16,18,1)
(7,19,1)
(17,9,1)
(6,4,1)
(22,15,1)
(9,22,1)
(12,10,1)
(18,0,1)
(14,15,1)
(0,13,1)
(20,16,1)
(4,5,1)
(4,18,1)
(17,15,2)
(7,20,2)
(9,15,2)
(20,16,2)
(20,15,2)
(19,15,2)
(4,18,2)
(6,4,2)
(22,15,2)
(7,15,2)
(16,15,2)
(15,18,2)
(16,18,2)
-----------------------------------
(0,0)
(1,stdin)
(2,)
(3,"%u")
(4,&data)
(5,data)
(6,fscanf (stdin, "%u", &data)
(7,printUnsignedLine(result)
(8,)
(9,data)
(10,data)
(11,if(data > 0)
(12,0)
(13,data)
(14,RET)
(15,data > 0)
(16,data * 2)
(17,2)
(18,data = 0)
(19,result)
(20,result = data * 2)
(21,data)
(22,result)
(23,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^