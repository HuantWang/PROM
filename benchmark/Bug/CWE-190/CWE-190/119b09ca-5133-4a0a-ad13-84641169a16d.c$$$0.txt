-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_add_08_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,39,41,45,46,50,52
-----computeFrom-----
12,13
12,14
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_add_08_bad(){    int data;    /* Initialize data */    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_add_08_bad()
CWE190_Integer_Overflow__int_fscanf_add_08_bad
{    int data;    /* Initialize data */    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(10,0,0)
(21,10,0)
(3,9,0)
(5,9,0)
(23,19,0)
(8,25,0)
(9,6,0)
(2,18,0)
(11,6,0)
(20,18,0)
(2,0,0)
(7,0,0)
(6,25,0)
(18,25,0)
(25,19,0)
(15,2,0)
(0,22,0)
(10,2,0)
(24,19,0)
(18,2,0)
(9,12,0)
(14,18,0)
(6,9,0)
(16,19,0)
(17,25,0)
(10,21,1)
(13,25,1)
(15,1,1)
(20,15,1)
(4,10,1)
(6,11,1)
(5,13,1)
(25,17,1)
(10,2,1)
(21,2,1)
(9,6,1)
(6,25,1)
(1,9,1)
(1,13,1)
(18,14,1)
(14,20,1)
(4,1,1)
(2,18,1)
(3,5,1)
(18,25,1)
(17,8,1)
(11,3,1)
(3,13,2)
(2,18,2)
(20,1,2)
(6,13,2)
(15,1,2)
(5,13,2)
(18,1,2)
(2,1,2)
(21,1,2)
(10,2,2)
(9,6,2)
(10,1,2)
(11,13,2)
(18,25,2)
(14,1,2)
(9,13,2)
(6,25,2)
-----------------------------------
(0,)
(1,staticReturnsTrue()
(2,result = data + 1)
(3,"%d")
(4,RET)
(5,stdin)
(6,&data)
(7,result)
(8,data)
(9,fscanf(stdin, "%d", &data)
(10,printIntLine(result)
(11,data)
(12,)
(13,staticReturnsTrue()
(14,1)
(15,result)
(16,if(staticReturnsTrue()
(17,0)
(18,data + 1)
(19,)
(20,data)
(21,result)
(22,)
(23,data)
(24,if(staticReturnsTrue()
(25,data = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^