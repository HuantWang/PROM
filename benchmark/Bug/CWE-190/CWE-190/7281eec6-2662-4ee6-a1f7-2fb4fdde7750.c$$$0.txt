-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_bad()
{
    int64_t data;
    data = 0LL;
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%" SCNd64, &data);
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        int64_t result = data;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
18,19
18,20
18,21
19,20
20,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
29,30
30,31
32,33
33,34
33,35
34,35
36,37
-----nextToken-----
2,4,9,11,15,16,22,26,28,31,35,37
-----computeFrom-----
13,14
13,15
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ProblemStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_bad(){    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int64_t result = data;        printLongLongLine(result);    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_bad()
CWE190_Integer_Overflow__int64_t_fscanf_postinc_01_bad
{    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%" SCNd64, &data);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int64_t result = data;        printLongLongLine(result);    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
fscanf (stdin, "%" SCNd64, &data);
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int64_t result = data;        printLongLongLine(result);    }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(1,12,0)
(8,7,0)
(9,12,0)
(5,2,0)
(7,2,0)
(12,7,0)
(11,7,0)
(10,2,0)
(0,6,0)
(6,7,0)
(6,12,0)
(3,11,0)
(6,0,1)
(12,1,1)
(4,6,1)
(11,3,1)
(0,12,1)
(9,11,1)
(1,9,1)
(3,5,1)
(6,12,1)
(6,12,2)
-----------------------------------
(0,result)
(1,data)
(2,)
(3,data)
(4,RET)
(5,L)
(6,printLongLongLine(result)
(7,)
(8,result)
(9,result)
(10,data)
(11,data++)
(12,result = data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^