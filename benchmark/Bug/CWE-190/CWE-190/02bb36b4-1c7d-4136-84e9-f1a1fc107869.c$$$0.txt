-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_square_32_bad()
{
    unsigned int data;
    unsigned int *dataPtr1 = &data;
    unsigned int *dataPtr2 = &data;
    data = 0;
    {
        unsigned int data = *dataPtr1;
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
        *dataPtr1 = data;
    }
    {
        unsigned int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
55,56
57,58
59,60
59,61
60,61
61,62
61,63
63,64
63,65
65,66
66,67
67,68
69,70
69,71
70,71
71,72
71,73
73,74
73,75
75,76
76,77
76,78
77,78
79,80
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,51,56,58,62,64,68,72,74,78,80,84,86
-----computeFrom-----
32,33
32,34
47,48
47,49
53,54
53,55
76,77
76,78
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_square_32_bad(){    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_square_32_bad()
CWE190_Integer_Overflow__unsigned_int_max_square_32_bad
{    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
unsigned int *dataPtr1 = &data;
unsigned int *dataPtr1 = &data;
unsigned int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
unsigned int *dataPtr2 = &data;
unsigned int *dataPtr2 = &data;
unsigned int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;        *dataPtr1 = data;    }
unsigned int data = *dataPtr1;
unsigned int data = *dataPtr1;
unsigned int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
unsigned int data = *dataPtr2;
unsigned int data = *dataPtr2;
unsigned int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(4,10,0)
(26,7,0)
(30,24,0)
(40,30,0)
(3,12,0)
(13,6,0)
(15,24,0)
(20,9,0)
(34,4,0)
(34,29,0)
(25,26,0)
(38,6,0)
(0,41,0)
(42,9,0)
(37,33,0)
(43,29,0)
(21,36,0)
(23,34,0)
(6,31,0)
(39,7,0)
(32,41,0)
(9,20,0)
(9,24,0)
(41,30,0)
(35,12,0)
(7,26,0)
(27,20,0)
(5,24,0)
(13,9,0)
(31,24,0)
(33,7,0)
(32,4,0)
(7,17,0)
(12,30,0)
(2,32,0)
(10,4,0)
(17,31,0)
(1,17,0)
(11,13,0)
(18,31,0)
(26,6,0)
(4,24,0)
(41,12,0)
(36,24,0)
(29,30,0)
(6,13,0)
(8,26,0)
(14,24,0)
(19,4,0)
(22,10,0)
(16,36,0)
(29,34,0)
(33,17,0)
(13,9,1)
(13,11,1)
(33,37,1)
(34,4,1)
(29,34,1)
(11,38,1)
(41,12,1)
(39,6,1)
(37,7,1)
(32,4,1)
(26,8,1)
(34,23,1)
(10,22,1)
(3,35,1)
(0,32,1)
(6,13,1)
(38,41,1)
(16,9,1)
(25,39,1)
(23,43,1)
(9,20,1)
(20,27,1)
(28,33,1)
(32,2,1)
(42,4,1)
(35,29,1)
(26,6,1)
(22,19,1)
(43,36,1)
(2,12,1)
(12,3,1)
(41,0,1)
(36,21,1)
(4,10,1)
(21,16,1)
(33,7,1)
(27,42,1)
(8,25,1)
(7,26,1)
(33,7,2)
(34,4,2)
(7,26,2)
(41,12,2)
(4,10,2)
(9,20,2)
(6,13,2)
(29,34,2)
(26,6,2)
(13,9,2)
(32,4,2)
-----------------------------------
(0,data)
(1,result)
(2,dataPtr1)
(3,UINT_MAX)
(4,*dataPtr1 = &data)
(5,dataPtr2)
(6,data = *dataPtr2)
(7,result = data * data)
(8,data)
(9,*dataPtr2 = &data)
(10,&data)
(11,dataPtr2)
(12,data = UINT_MAX)
(13,*dataPtr2)
(14,data)
(15,dataPtr1)
(16,data)
(17,)
(18,data)
(19,dataPtr1)
(20,&data)
(21,0)
(22,data)
(23,dataPtr1)
(24,)
(25,data)
(26,data * data)
(27,data)
(28,RET)
(29,data = *dataPtr1)
(30,)
(31,)
(32,*dataPtr1)
(33,printUnsignedLine(result)
(34,*dataPtr1)
(35,data)
(36,data = 0)
(37,result)
(38,data)
(39,result)
(40,data)
(41,*dataPtr1 = data)
(42,dataPtr2)
(43,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^