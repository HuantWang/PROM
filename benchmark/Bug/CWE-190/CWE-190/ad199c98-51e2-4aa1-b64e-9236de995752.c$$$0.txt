-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_add_34_bad()
{
    short data;
    CWE190_Integer_Overflow__short_max_add_34_unionType myUnion;
    data = 0;
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = SHRT_MAX;
    myUnion.unionFirst = data;
    {
        short data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
30,32
31,32
34,35
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
48,49
49,50
49,51
51,52
51,53
53,54
54,55
54,56
55,56
58,59
59,60
59,61
60,61
62,63
-----nextToken-----
2,4,8,10,14,16,20,21,25,27,32,33,35,39,41,45,46,50,52,56,57,61,63
-----computeFrom-----
18,19
18,20
23,24
23,25
29,30
29,31
54,55
54,56
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_add_34_bad(){    short data;    CWE190_Integer_Overflow__short_max_add_34_unionType myUnion;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = SHRT_MAX;    myUnion.unionFirst = data;    {        short data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_add_34_bad()
CWE190_Integer_Overflow__short_max_add_34_bad
{    short data;    CWE190_Integer_Overflow__short_max_add_34_unionType myUnion;    data = 0;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = SHRT_MAX;    myUnion.unionFirst = data;    {        short data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
CWE190_Integer_Overflow__short_max_add_34_unionType myUnion;
CWE190_Integer_Overflow__short_max_add_34_unionType myUnion;
CWE190_Integer_Overflow__short_max_add_34_unionType
CWE190_Integer_Overflow__short_max_add_34_unionType
myUnion
myUnion
data = 0;
data = 0
data
data
0
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        short data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
short data = myUnion.unionSecond;
short data = myUnion.unionSecond;
short
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(5,19,0)
(7,28,0)
(6,9,0)
(17,16,0)
(2,13,0)
(11,9,0)
(19,15,0)
(24,12,0)
(21,2,0)
(14,0,0)
(23,5,0)
(9,15,0)
(29,19,0)
(16,15,0)
(30,17,0)
(21,17,0)
(3,15,0)
(19,28,0)
(13,12,0)
(12,16,0)
(25,16,0)
(4,28,0)
(26,15,0)
(18,2,0)
(22,0,0)
(12,0,0)
(0,12,0)
(27,5,0)
(13,2,0)
(10,21,0)
(8,13,0)
(20,13,0)
(28,15,0)
(2,17,0)
(4,7,1)
(28,4,1)
(23,27,1)
(24,19,1)
(2,13,1)
(6,11,1)
(9,6,1)
(14,22,1)
(13,12,1)
(7,9,1)
(18,12,1)
(10,2,1)
(29,5,1)
(19,29,1)
(19,28,1)
(8,18,1)
(21,2,1)
(20,8,1)
(1,21,1)
(5,23,1)
(22,24,1)
(27,28,1)
(12,0,1)
(13,20,1)
(21,10,1)
(0,14,1)
(19,28,2)
(12,0,2)
(2,13,2)
(13,12,2)
(21,2,2)
-----------------------------------
(0,myUnion.unionSecond)
(1,RET)
(2,result = data + 1)
(3,myUnion)
(4,SHRT_MAX)
(5,myUnion.unionFirst)
(6,0)
(7,data)
(8,data)
(9,data = 0)
(10,result)
(11,data)
(12,data = myUnion.unionSecond)
(13,data + 1)
(14,unionSecond)
(15,)
(16,)
(17,)
(18,result)
(19,myUnion.unionFirst = data)
(20,1)
(21,printIntLine(result)
(22,myUnion)
(23,unionFirst)
(24,data)
(25,data)
(26,data)
(27,myUnion)
(28,data = SHRT_MAX)
(29,data)
(30,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^