-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_preinc_16_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    while(1)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
30,31
30,32
32,33
32,34
33,34
33,35
33,36
34,35
35,36
36,37
38,39
39,40
39,41
41,42
41,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,29,31,37,40,42,45,49,51,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_preinc_16_bad(){    int data;    /* Initialize data */    data = 0;    while(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__int_fscanf_preinc_16_bad()
CWE190_Integer_Overflow__int_fscanf_preinc_16_bad
{    int data;    /* Initialize data */    data = 0;    while(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }        break;    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    }
1
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
break;
while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
break;
-----joern-----
(21,20,0)
(23,17,0)
(22,10,0)
(5,24,0)
(26,10,0)
(3,26,0)
(26,1,0)
(10,20,0)
(7,24,0)
(0,7,0)
(24,10,0)
(25,24,0)
(17,6,0)
(16,10,0)
(24,1,0)
(11,1,0)
(7,1,0)
(15,18,0)
(13,17,0)
(17,18,0)
(4,27,0)
(19,20,0)
(18,17,0)
(18,10,0)
(14,6,0)
(1,27,0)
(2,20,0)
(13,23,1)
(26,3,1)
(8,12,1)
(18,10,1)
(17,18,1)
(15,13,1)
(7,24,1)
(8,14,1)
(12,10,1)
(7,0,1)
(24,25,1)
(9,8,1)
(10,16,1)
(18,15,1)
(3,8,1)
(16,22,1)
(26,10,1)
(0,24,1)
(24,10,1)
(4,7,1)
(23,12,1)
(25,5,1)
(14,17,1)
(9,4,1)
(5,26,1)
(7,8,2)
(24,10,2)
(25,8,2)
(15,12,2)
(24,8,2)
(7,24,2)
(3,8,2)
(5,8,2)
(18,10,2)
(14,12,2)
(4,8,2)
(26,8,2)
(18,12,2)
(26,10,2)
(0,8,2)
(23,12,2)
(17,18,2)
(17,12,2)
(13,12,2)
-----------------------------------
(0,result)
(1,)
(2,while(1)
(3,data)
(4,break;)
(5,result)
(6,)
(7,printIntLine(result)
(8,1)
(9,RET)
(10,data = 0)
(11,result)
(12,1)
(13,"%d")
(14,break;)
(15,data)
(16,0)
(17,fscanf(stdin, "%d", &data)
(18,&data)
(19,while(1)
(20,)
(21,data)
(22,data)
(23,stdin)
(24,result = data)
(25,data)
(26,++data)
(27,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^