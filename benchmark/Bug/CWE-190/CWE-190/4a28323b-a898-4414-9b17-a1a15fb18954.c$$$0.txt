-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_add_04_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(STATIC_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,37,39,43,44,48,50
-----computeFrom-----
12,13
12,14
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_add_04_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_add_04_bad()
CWE190_Integer_Overflow__int_fscanf_add_04_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(2,24,0)
(5,12,0)
(11,10,0)
(24,1,0)
(23,13,0)
(15,24,0)
(17,10,0)
(16,15,0)
(6,17,0)
(12,17,0)
(4,17,0)
(14,10,0)
(22,1,0)
(25,23,0)
(1,21,0)
(13,20,0)
(7,12,0)
(24,12,0)
(13,23,0)
(12,24,0)
(9,13,0)
(18,10,0)
(23,17,0)
(8,13,0)
(15,1,0)
(17,4,1)
(25,9,1)
(7,5,1)
(19,15,1)
(9,8,1)
(8,0,1)
(2,3,1)
(16,24,1)
(5,2,1)
(23,17,1)
(23,25,1)
(13,23,1)
(12,7,1)
(4,6,1)
(12,17,1)
(3,13,1)
(15,24,1)
(15,16,1)
(19,3,1)
(3,0,1)
(24,12,1)
(0,17,1)
(7,3,2)
(24,12,2)
(23,17,2)
(24,3,2)
(15,24,2)
(8,0,2)
(12,17,2)
(12,3,2)
(15,3,2)
(9,0,2)
(13,0,2)
(2,3,2)
(25,0,2)
(23,0,2)
(5,3,2)
(13,23,2)
(16,3,2)
-----------------------------------
(0,STATIC_CONST_TRUE)
(1,)
(2,result)
(3,STATIC_CONST_TRUE)
(4,0)
(5,data)
(6,data)
(7,1)
(8,stdin)
(9,"%d")
(10,)
(11,data)
(12,data + 1)
(13,fscanf(stdin, "%d", &data)
(14,if(STATIC_CONST_TRUE)
(15,printIntLine(result)
(16,result)
(17,data = 0)
(18,if(STATIC_CONST_TRUE)
(19,RET)
(20,)
(21,)
(22,result)
(23,&data)
(24,result = data + 1)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^