-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_preinc_32_bad()
{
    int64_t data;
    int64_t *dataPtr1 = &data;
    int64_t *dataPtr2 = &data;
    data = 0LL;
    {
        int64_t data = *dataPtr1;
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
        *dataPtr1 = data;
    }
    {
        int64_t data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
32,33
34,35
35,36
35,37
36,37
39,40
39,41
39,42
40,41
41,42
41,43
42,43
44,45
44,46
46,47
47,48
48,49
50,51
51,52
51,53
52,53
54,55
54,56
55,56
55,57
56,57
59,60
60,61
62,63
63,64
63,65
64,65
65,66
67,68
69,70
69,71
70,71
71,72
71,73
72,73
74,75
74,76
76,77
77,78
78,79
80,81
80,82
80,83
81,82
82,83
83,84
85,86
86,87
86,88
87,88
89,90
89,91
91,92
92,93
94,95
95,96
95,97
96,97
98,99
-----nextToken-----
2,4,9,11,15,17,18,22,26,28,29,33,37,38,43,45,49,53,57,58,61,66,68,73,75,79,84,88,90,93,97,99
-----computeFrom-----
35,36
35,37
51,52
51,53
63,64
63,65
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_preinc_32_bad(){    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_preinc_32_bad()
CWE190_Integer_Overflow__int64_t_rand_preinc_32_bad
{    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
int64_t *dataPtr1 = &data;
int64_t *dataPtr1 = &data;
int64_t
int64_t
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int64_t *dataPtr2 = &data;
int64_t *dataPtr2 = &data;
int64_t
int64_t
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0LL;
data = 0LL
data
data
0LL
{        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();        *dataPtr1 = data;    }
int64_t data = *dataPtr1;
int64_t data = *dataPtr1;
int64_t
int64_t
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
int64_t data = *dataPtr2;
int64_t data = *dataPtr2;
int64_t
int64_t
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(43,30,0)
(25,39,0)
(36,43,0)
(3,19,0)
(39,27,0)
(24,18,0)
(14,6,0)
(21,35,0)
(23,40,0)
(10,26,0)
(33,27,0)
(12,33,0)
(5,9,0)
(19,3,0)
(26,40,0)
(33,3,0)
(20,12,0)
(15,18,0)
(31,39,0)
(17,40,0)
(1,18,0)
(24,9,0)
(43,38,0)
(27,40,0)
(35,26,0)
(30,43,0)
(34,12,0)
(42,24,0)
(14,40,0)
(39,25,0)
(28,27,0)
(16,20,0)
(20,14,0)
(38,40,0)
(25,14,0)
(11,25,0)
(9,38,0)
(8,38,0)
(32,30,0)
(3,7,0)
(18,43,0)
(2,40,0)
(29,5,0)
(5,43,0)
(18,9,0)
(0,40,0)
(12,27,0)
(22,9,0)
(13,6,0)
(7,3,0)
(6,14,0)
(3,33,0)
(41,33,0)
(30,26,0)
(4,14,0)
(26,35,0)
(15,1,1)
(18,15,1)
(32,36,1)
(30,32,1)
(25,11,1)
(20,16,1)
(37,24,1)
(3,19,1)
(26,35,1)
(42,18,1)
(18,43,1)
(29,43,1)
(12,33,1)
(5,29,1)
(20,14,1)
(13,4,1)
(24,18,1)
(43,30,1)
(31,0,1)
(11,31,1)
(3,7,1)
(19,41,1)
(10,14,1)
(16,33,1)
(39,25,1)
(21,10,1)
(41,39,1)
(12,34,1)
(30,26,1)
(0,26,1)
(1,5,1)
(34,20,1)
(25,14,1)
(14,6,1)
(5,43,1)
(24,42,1)
(35,21,1)
(6,13,1)
(33,3,1)
(36,12,1)
(25,14,2)
(3,19,2)
(14,6,2)
(24,18,2)
(20,14,2)
(26,35,2)
(18,43,2)
(33,3,2)
(43,30,2)
(12,33,2)
(5,43,2)
(3,7,2)
(30,26,2)
(39,25,2)
-----------------------------------
(0,L)
(1,result)
(2,data)
(3,(int64_t)
(4,dataPtr1)
(5,++data)
(6,&data)
(7,int64_t)
(8,data)
(9,)
(10,dataPtr2)
(11,dataPtr1)
(12,*dataPtr1 = data)
(13,data)
(14,*dataPtr1 = &data)
(15,data)
(16,dataPtr1)
(17,dataPtr1)
(18,result = data)
(19,RAND64()
(20,*dataPtr1)
(21,data)
(22,result)
(23,dataPtr2)
(24,printLongLongLine(result)
(25,*dataPtr1)
(26,*dataPtr2 = &data)
(27,)
(28,data)
(29,data)
(30,*dataPtr2)
(31,data)
(32,dataPtr2)
(33,data = (int64_t)
(34,data)
(35,&data)
(36,data)
(37,RET)
(38,)
(39,data = *dataPtr1)
(40,)
(41,data)
(42,result)
(43,data = *dataPtr2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^