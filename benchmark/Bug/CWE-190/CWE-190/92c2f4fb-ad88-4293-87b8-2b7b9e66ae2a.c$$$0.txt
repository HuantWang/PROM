-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_add_44_bad()
{
    int data;
    /* define a function pointer */
    void (*funcPtr) (int) = badSink;
    /* Initialize data */
    data = 0;
    /* POTENTIAL FLAW: Read data from the console using fscanf() */
    fscanf(stdin, "%d", &data);
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
15,16
15,17
18,19
18,20
20,21
22,23
23,24
25,26
26,27
26,28
27,28
30,31
31,32
31,33
31,34
31,35
32,33
34,35
37,38
38,39
40,41
41,42
41,43
42,43
44,45
-----nextToken-----
2,4,8,10,13,16,17,19,21,24,28,29,33,35,36,39,43,45
-----computeFrom-----
26,27
26,28
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_add_44_bad(){    int data;    /* define a function pointer */    void (*funcPtr) (int) = badSink;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    /* use the function pointer */    funcPtr(data);}
void
CWE190_Integer_Overflow__int_fscanf_add_44_bad()
CWE190_Integer_Overflow__int_fscanf_add_44_bad
{    int data;    /* define a function pointer */    void (*funcPtr) (int) = badSink;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    /* use the function pointer */    funcPtr(data);}
int data;
int data;
int
data
data
void (*funcPtr) (int) = badSink;
void (*funcPtr) (int) = badSink;
void
(*funcPtr) (int) = badSink
*funcPtr
*
funcPtr
int
int


= badSink
badSink
badSink
data = 0;
data = 0
data
data
0
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(10,2,0)
(13,0,0)
(8,5,0)
(15,16,0)
(16,0,0)
(3,0,0)
(7,2,0)
(16,2,0)
(0,16,0)
(4,5,0)
(11,2,0)
(6,5,0)
(11,5,0)
(0,5,0)
(12,8,0)
(14,11,0)
(2,5,0)
(1,8,0)
(11,2,1)
(1,12,1)
(16,2,1)
(0,16,1)
(11,14,1)
(10,8,1)
(2,7,1)
(3,2,1)
(15,13,1)
(16,15,1)
(14,0,1)
(7,10,1)
(9,11,1)
(13,3,1)
(8,1,1)
(11,2,2)
(0,16,2)
(16,2,2)
-----------------------------------
(0,fscanf(stdin, "%d", &data)
(1,badSink)
(2,data = 0)
(3,stdin)
(4,data)
(5,)
(6,funcPtr)
(7,0)
(8,(*funcPtr)
(9,RET)
(10,data)
(11,funcPtr(data)
(12,funcPtr)
(13,"%d")
(14,data)
(15,data)
(16,&data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^