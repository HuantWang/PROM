-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_add_09_bad()
{
    char data;
    data = ' ';
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
    }
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            char result = data + 1;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,37,39,43,44,48,50
-----computeFrom-----
12,13
12,14
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_add_09_bad(){    char data;    data = ' ';    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_add_09_bad()
CWE190_Integer_Overflow__char_fscanf_add_09_bad
{    char data;    data = ' ';    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(18,10,0)
(3,15,0)
(20,5,0)
(9,5,0)
(22,12,0)
(23,12,0)
(21,11,0)
(13,25,0)
(4,10,0)
(15,25,0)
(16,21,0)
(14,12,0)
(15,10,0)
(5,18,0)
(5,24,0)
(18,5,0)
(17,13,0)
(10,12,0)
(1,10,0)
(6,25,0)
(25,15,0)
(13,21,0)
(25,21,0)
(19,18,0)
(2,15,0)
(7,10,1)
(9,7,1)
(20,9,1)
(6,0,1)
(0,7,1)
(13,25,1)
(25,15,1)
(15,10,1)
(8,13,1)
(1,4,1)
(0,5,1)
(5,18,1)
(17,25,1)
(3,6,1)
(8,0,1)
(2,3,1)
(18,10,1)
(10,1,1)
(15,2,1)
(13,17,1)
(18,19,1)
(19,20,1)
(25,15,2)
(18,10,2)
(5,7,2)
(17,0,2)
(18,7,2)
(9,7,2)
(15,0,2)
(13,25,2)
(3,0,2)
(25,0,2)
(20,7,2)
(2,0,2)
(15,10,2)
(19,7,2)
(5,18,2)
(13,0,2)
(6,0,2)
-----------------------------------
(0,GLOBAL_CONST_TRUE)
(1,\\\' \\\')
(2,1)
(3,data)
(4,data)
(5,fscanf (stdin, "%c", &data)
(6,result)
(7,GLOBAL_CONST_TRUE)
(8,RET)
(9,stdin)
(10,data = \\\' \\\')
(11,)
(12,)
(13,printHexCharLine(result)
(14,if(GLOBAL_CONST_TRUE)
(15,data + 1)
(16,result)
(17,result)
(18,&data)
(19,data)
(20,"%c")
(21,)
(22,data)
(23,if(GLOBAL_CONST_TRUE)
(24,)
(25,result = data + 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^