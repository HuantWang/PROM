-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_add_06_bad()
{
    char data;
    data = ' ';
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            char result = data + 1;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
40,41
40,42
42,43
42,44
44,45
45,46
45,47
46,47
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,43,47,48,52,54
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_add_06_bad(){    char data;    data = ' ';    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_add_06_bad()
CWE190_Integer_Overflow__char_fscanf_add_06_bad
{    char data;    data = ' ';    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(5,28,0)
(13,3,0)
(25,13,0)
(19,24,0)
(0,24,0)
(1,18,0)
(26,22,0)
(1,26,0)
(23,2,0)
(9,28,0)
(10,6,0)
(11,22,0)
(7,13,0)
(29,7,0)
(22,28,0)
(6,7,0)
(15,26,0)
(17,14,0)
(8,22,0)
(27,2,0)
(7,6,0)
(4,28,0)
(14,13,0)
(12,1,0)
(20,1,0)
(14,7,0)
(26,1,0)
(21,6,0)
(6,22,0)
(12,20,1)
(23,27,1)
(15,12,1)
(6,21,1)
(17,7,1)
(6,22,1)
(24,0,1)
(26,22,1)
(0,19,1)
(21,10,1)
(26,15,1)
(27,24,1)
(7,6,1)
(16,14,1)
(29,2,1)
(14,7,1)
(16,2,1)
(27,1,1)
(20,24,1)
(2,23,1)
(22,8,1)
(1,26,1)
(19,22,1)
(8,11,1)
(14,17,1)
(10,29,1)
(1,26,2)
(26,22,2)
(6,22,2)
(6,2,2)
(21,2,2)
(10,2,2)
(17,2,2)
(7,2,2)
(14,2,2)
(20,24,2)
(29,2,2)
(15,24,2)
(26,24,2)
(14,7,2)
(12,24,2)
(1,24,2)
(7,6,2)
-----------------------------------
(0,5)
(1,fscanf (stdin, "%c", &data)
(2,STATIC_CONST_FIVE==5)
(3,)
(4,if(STATIC_CONST_FIVE==5)
(5,data)
(6,data + 1)
(7,result = data + 1)
(8,\\\' \\\')
(9,if(STATIC_CONST_FIVE==5)
(10,data)
(11,data)
(12,"%c")
(13,)
(14,printHexCharLine(result)
(15,data)
(16,RET)
(17,result)
(18,)
(19,STATIC_CONST_FIVE)
(20,stdin)
(21,1)
(22,data = \\\' \\\')
(23,5)
(24,STATIC_CONST_FIVE==5)
(25,result)
(26,&data)
(27,STATIC_CONST_FIVE)
(28,)
(29,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^