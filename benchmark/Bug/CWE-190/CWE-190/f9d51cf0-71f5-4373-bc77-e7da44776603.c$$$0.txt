-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_postinc_13_bad()
{
    short data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
47,48
47,49
49,50
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,43,46,48,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_postinc_13_bad(){    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_postinc_13_bad()
CWE190_Integer_Overflow__short_rand_postinc_13_bad
{    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(17,4,0)
(20,9,0)
(2,19,0)
(14,8,0)
(9,27,0)
(24,19,0)
(3,8,0)
(20,23,0)
(3,19,0)
(14,9,0)
(23,20,0)
(25,14,0)
(12,3,0)
(22,8,0)
(3,9,0)
(7,12,0)
(14,19,0)
(6,9,0)
(21,16,0)
(11,18,0)
(9,20,0)
(28,16,0)
(20,10,0)
(1,3,0)
(19,16,0)
(0,18,0)
(13,16,0)
(10,20,0)
(12,8,0)
(15,4,0)
(29,3,0)
(8,26,0)
(14,25,1)
(12,3,1)
(19,2,1)
(1,29,1)
(11,0,1)
(15,17,1)
(5,18,1)
(14,19,1)
(2,24,1)
(0,4,1)
(12,7,1)
(29,14,1)
(7,3,1)
(23,6,1)
(25,18,1)
(18,11,1)
(9,20,1)
(3,9,1)
(17,19,1)
(20,23,1)
(3,1,1)
(5,12,1)
(14,9,1)
(20,10,1)
(4,15,1)
(0,9,1)
(3,19,1)
(6,4,1)
(12,3,2)
(3,19,2)
(20,10,2)
(14,9,2)
(14,18,2)
(25,18,2)
(29,18,2)
(7,18,2)
(9,4,2)
(3,9,2)
(12,18,2)
(3,18,2)
(9,20,2)
(20,4,2)
(6,4,2)
(1,18,2)
(14,19,2)
(20,23,2)
(23,4,2)
-----------------------------------
(0,GLOBAL_CONST_FIVE)
(1,data)
(2,0)
(3,result = data)
(4,GLOBAL_CONST_FIVE==5)
(5,RET)
(6,data)
(7,result)
(8,)
(9,data = (short)
(10,short)
(11,5)
(12,printIntLine(result)
(13,data)
(14,data++)
(15,5)
(16,)
(17,GLOBAL_CONST_FIVE)
(18,GLOBAL_CONST_FIVE==5)
(19,data = 0)
(20,(short)
(21,if(GLOBAL_CONST_FIVE==5)
(22,result)
(23,RAND32()
(24,data)
(25,data)
(26,)
(27,)
(28,if(GLOBAL_CONST_FIVE==5)
(29,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^