-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_add_09_bad()
{
    short data;
    data = 0;
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            short result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,33,35,39,40,44,46
-----computeFrom-----
12,13
12,14
21,22
21,23
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_add_09_bad(){    short data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_add_09_bad()
CWE190_Integer_Overflow__short_max_add_09_bad
{    short data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            short result = data + 1;            printIntLine(result);        }
short result = data + 1;
short result = data + 1;
short
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(11,13,0)
(16,2,0)
(2,1,0)
(7,13,0)
(15,2,0)
(6,21,0)
(12,20,0)
(8,2,0)
(20,21,0)
(16,7,0)
(16,20,0)
(7,16,0)
(18,16,0)
(9,21,0)
(3,10,0)
(5,7,0)
(23,21,0)
(10,13,0)
(10,7,0)
(0,20,0)
(13,19,0)
(17,16,0)
(10,7,1)
(17,18,1)
(0,12,1)
(10,3,1)
(16,20,1)
(18,5,1)
(16,17,1)
(22,10,1)
(22,4,1)
(3,7,1)
(14,20,1)
(20,0,1)
(7,16,1)
(4,14,1)
(5,4,1)
(8,15,1)
(2,8,1)
(16,2,1)
(15,14,1)
(4,2,1)
(18,4,2)
(17,4,2)
(2,14,2)
(7,4,2)
(16,20,2)
(10,4,2)
(7,16,2)
(16,4,2)
(5,4,2)
(8,14,2)
(10,7,2)
(16,2,2)
(3,4,2)
(15,14,2)
-----------------------------------
(0,0)
(1,)
(2,data = SHRT_MAX)
(3,result)
(4,GLOBAL_CONST_TRUE)
(5,result)
(6,if(GLOBAL_CONST_TRUE)
(7,result = data + 1)
(8,SHRT_MAX)
(9,if(GLOBAL_CONST_TRUE)
(10,printIntLine(result)
(11,result)
(12,data)
(13,)
(14,GLOBAL_CONST_TRUE)
(15,data)
(16,data + 1)
(17,1)
(18,data)
(19,)
(20,data = 0)
(21,)
(22,RET)
(23,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^