-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_bad()
{
    unsigned int data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_bad(){    unsigned int data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_bad
{    unsigned int data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(4,18,0)
(23,3,0)
(6,7,0)
(22,18,0)
(27,26,0)
(1,7,0)
(14,10,0)
(8,3,0)
(21,15,0)
(13,7,0)
(6,24,0)
(7,18,0)
(3,5,0)
(2,6,0)
(10,7,0)
(11,19,0)
(24,28,0)
(29,6,0)
(0,25,0)
(26,6,0)
(3,10,0)
(15,7,0)
(20,24,0)
(15,24,0)
(16,18,0)
(17,19,0)
(9,25,0)
(26,24,0)
(10,3,0)
(19,17,1)
(1,13,1)
(15,7,1)
(11,3,1)
(7,1,1)
(8,25,1)
(26,6,1)
(6,7,1)
(14,23,1)
(26,27,1)
(6,29,1)
(12,26,1)
(10,7,1)
(9,7,1)
(29,2,1)
(21,19,1)
(3,10,1)
(12,19,1)
(11,25,1)
(2,15,1)
(15,21,1)
(25,0,1)
(23,8,1)
(27,6,1)
(10,14,1)
(17,11,1)
(0,9,1)
(3,25,2)
(10,7,2)
(23,25,2)
(27,19,2)
(6,19,2)
(3,10,2)
(14,25,2)
(6,7,2)
(8,25,2)
(26,6,2)
(2,19,2)
(21,19,2)
(10,25,2)
(29,19,2)
(15,7,2)
(15,19,2)
(26,19,2)
-----------------------------------
(0,5)
(1,0)
(2,result)
(3,fscanf (stdin, "%u", &data)
(4,data)
(5,)
(6,result = data)
(7,data = 0)
(8,stdin)
(9,GLOBAL_CONST_FIVE)
(10,&data)
(11,GLOBAL_CONST_FIVE)
(12,RET)
(13,data)
(14,data)
(15,++data)
(16,if(GLOBAL_CONST_FIVE==5)
(17,5)
(18,)
(19,GLOBAL_CONST_FIVE==5)
(20,result)
(21,data)
(22,if(GLOBAL_CONST_FIVE==5)
(23,"%u")
(24,)
(25,GLOBAL_CONST_FIVE==5)
(26,printUnsignedLine(result)
(27,result)
(28,)
(29,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^