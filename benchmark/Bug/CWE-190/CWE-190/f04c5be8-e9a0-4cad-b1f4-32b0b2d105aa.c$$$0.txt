-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_add_07_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,37,39,43,44,48,50
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_add_07_bad(){    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_add_07_bad()
CWE190_Integer_Overflow__int_max_add_07_bad
{    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(20,26,0)
(22,25,0)
(24,5,0)
(18,22,0)
(9,10,0)
(26,20,0)
(8,19,0)
(11,20,0)
(0,6,0)
(1,10,0)
(20,22,0)
(23,4,0)
(10,16,0)
(4,5,0)
(27,4,0)
(20,4,0)
(15,6,0)
(26,10,0)
(12,5,0)
(14,19,0)
(7,5,0)
(2,26,0)
(3,9,0)
(9,26,0)
(17,20,0)
(13,22,0)
(20,11,1)
(15,0,1)
(19,8,1)
(26,20,1)
(11,17,1)
(2,19,1)
(14,6,1)
(8,14,1)
(17,2,1)
(22,13,1)
(0,4,1)
(14,22,1)
(9,26,1)
(13,18,1)
(4,23,1)
(23,27,1)
(20,4,1)
(20,22,1)
(21,19,1)
(18,6,1)
(9,3,1)
(6,15,1)
(3,26,1)
(21,9,1)
(26,19,2)
(13,6,2)
(9,19,2)
(20,4,2)
(18,6,2)
(3,19,2)
(20,22,2)
(20,19,2)
(11,19,2)
(26,20,2)
(22,6,2)
(9,26,2)
(17,19,2)
(2,19,2)
-----------------------------------
(0,staticFive)
(1,result)
(2,result)
(3,result)
(4,data = 0)
(5,)
(6,staticFive==5)
(7,data)
(8,5)
(9,printIntLine(result)
(10,)
(11,1)
(12,if(staticFive==5)
(13,INT_MAX)
(14,staticFive)
(15,5)
(16,)
(17,data)
(18,data)
(19,staticFive==5)
(20,data + 1)
(21,RET)
(22,data = INT_MAX)
(23,0)
(24,if(staticFive==5)
(25,)
(26,result = data + 1)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^