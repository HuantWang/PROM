-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_add_03_bad()
{
    int64_t data;
    data = 0LL;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = LLONG_MAX;
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int64_t result = data + 1;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
18,20
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
32,33
33,34
33,35
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,9,11,15,16,19,20,25,27,30,31,37,39,43,44,48,50
-----computeFrom-----
13,14
13,15
18,19
18,20
23,24
23,25
29,30
29,31
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_add_03_bad(){    int64_t data;    data = 0LL;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_max_add_03_bad()
CWE190_Integer_Overflow__int64_t_max_add_03_bad
{    int64_t data;    data = 0LL;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
5==5
5
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
if(5==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(21,13,0)
(14,11,0)
(4,20,0)
(9,2,0)
(5,0,0)
(8,3,0)
(24,2,0)
(20,16,0)
(19,22,0)
(13,20,0)
(1,2,0)
(17,2,0)
(3,11,0)
(22,20,0)
(3,22,0)
(6,3,0)
(15,11,0)
(11,23,0)
(10,18,0)
(22,3,0)
(13,22,0)
(12,18,0)
(7,0,0)
(21,22,1)
(12,11,1)
(19,18,1)
(13,21,1)
(8,19,1)
(7,1,1)
(3,11,1)
(22,3,1)
(12,0,1)
(13,22,1)
(10,12,1)
(6,8,1)
(18,10,1)
(25,13,1)
(5,7,1)
(11,15,1)
(0,5,1)
(25,18,1)
(14,0,1)
(3,6,1)
(15,14,1)
(19,18,2)
(15,0,2)
(22,3,2)
(3,11,2)
(21,18,2)
(6,18,2)
(13,22,2)
(3,18,2)
(8,18,2)
(14,0,2)
(11,0,2)
(13,18,2)
(22,18,2)
-----------------------------------
(0,5==5)
(1,L)
(2,)
(3,data + 1)
(4,result)
(5,5)
(6,1)
(7,5)
(8,data)
(9,data)
(10,5)
(11,data = LLONG_MAX)
(12,5)
(13,printLongLongLine(result)
(14,data)
(15,LLONG_MAX)
(16,)
(17,if(5==5)
(18,5==5)
(19,result)
(20,)
(21,result)
(22,result = data + 1)
(23,)
(24,if(5==5)
(25,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^