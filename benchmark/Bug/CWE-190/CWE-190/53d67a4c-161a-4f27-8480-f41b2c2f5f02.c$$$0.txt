-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_square_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    char * dataPtr = (char *)dataVoidPtr;
    /* dereference dataPtr into data */
    char data = (*dataPtr);
    {
        /* POTENTIAL FLAW: if (data*data) > CHAR_MAX, this will overflow */
        char result = data * data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
35,37
36,37
37,38
37,39
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,38,40,44,46,50,52
-----computeFrom-----
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_square_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    char * dataPtr = (char *)dataVoidPtr;    /* dereference dataPtr into data */    char data = (*dataPtr);    {        /* POTENTIAL FLAW: if (data*data) > CHAR_MAX, this will overflow */        char result = data * data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_fscanf_square_64b_badSink(void * dataVoidPtr)
CWE190_Integer_Overflow__char_fscanf_square_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    char * dataPtr = (char *)dataVoidPtr;    /* dereference dataPtr into data */    char data = (*dataPtr);    {        /* POTENTIAL FLAW: if (data*data) > CHAR_MAX, this will overflow */        char result = data * data;        printHexCharLine(result);    }}
char * dataPtr = (char *)dataVoidPtr;
char * dataPtr = (char *)dataVoidPtr;
char
* dataPtr = (char *)dataVoidPtr
*
dataPtr
= (char *)dataVoidPtr
(char *)dataVoidPtr
char *
char
*
*
dataVoidPtr
dataVoidPtr
char data = (*dataPtr);
char data = (*dataPtr);
char
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: if (data*data) > CHAR_MAX, this will overflow */        char result = data * data;        printHexCharLine(result);    }
char result = data * data;
char result = data * data;
char
result = data * data
result
= data * data
data * data
data
data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(20,18,0)
(15,11,0)
(19,8,0)
(8,20,0)
(18,5,0)
(22,15,0)
(20,13,0)
(8,19,0)
(12,8,0)
(5,13,0)
(19,4,0)
(7,13,0)
(16,18,0)
(3,19,0)
(17,4,0)
(15,5,0)
(14,4,0)
(4,13,0)
(21,13,0)
(18,20,0)
(17,19,0)
(5,15,0)
(6,8,0)
(2,15,0)
(10,17,0)
(15,2,0)
(0,5,0)
(1,20,0)
(10,19,1)
(18,5,1)
(15,22,1)
(8,6,1)
(8,20,1)
(15,2,1)
(17,19,1)
(3,20,1)
(22,0,1)
(17,10,1)
(1,5,1)
(12,3,1)
(9,17,1)
(18,16,1)
(20,18,1)
(15,11,1)
(16,1,1)
(6,12,1)
(5,15,1)
(19,8,1)
(19,8,2)
(8,20,2)
(15,11,2)
(5,15,2)
(15,2,2)
(17,19,2)
(18,5,2)
(20,18,2)
-----------------------------------
(0,dataPtr)
(1,data)
(2,char *)
(3,result)
(4,)
(5,* dataPtr = (char *)
(6,data)
(7,data)
(8,data * data)
(9,RET)
(10,result)
(11,void * dataVoidPtr)
(12,data)
(13,)
(14,result)
(15,(char *)
(16,dataPtr)
(17,printHexCharLine(result)
(18,*dataPtr)
(19,result = data * data)
(20,data = (*dataPtr)
(21,dataPtr)
(22,dataVoidPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^