-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_postinc_34_bad()
{
    int64_t data;
    CWE190_Integer_Overflow__int64_t_max_postinc_34_unionType myUnion;
    data = 0LL;
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = LLONG_MAX;
    myUnion.unionFirst = data;
    {
        int64_t data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
31,32
31,33
32,33
35,36
37,38
37,39
38,39
39,40
39,41
40,41
42,43
42,44
44,45
45,46
45,47
46,47
49,50
49,51
49,52
50,51
51,52
52,53
54,55
55,56
55,57
56,57
58,59
58,60
60,61
61,62
63,64
64,65
64,66
65,66
67,68
-----nextToken-----
2,4,9,11,15,17,21,22,26,28,33,34,36,41,43,47,48,53,57,59,62,66,68
-----computeFrom-----
19,20
19,21
24,25
24,26
30,31
30,32
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_postinc_34_bad(){    int64_t data;    CWE190_Integer_Overflow__int64_t_max_postinc_34_unionType myUnion;    data = 0LL;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = LLONG_MAX;    myUnion.unionFirst = data;    {        int64_t data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_max_postinc_34_bad()
CWE190_Integer_Overflow__int64_t_max_postinc_34_bad
{    int64_t data;    CWE190_Integer_Overflow__int64_t_max_postinc_34_unionType myUnion;    data = 0LL;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = LLONG_MAX;    myUnion.unionFirst = data;    {        int64_t data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
CWE190_Integer_Overflow__int64_t_max_postinc_34_unionType myUnion;
CWE190_Integer_Overflow__int64_t_max_postinc_34_unionType myUnion;
CWE190_Integer_Overflow__int64_t_max_postinc_34_unionType
CWE190_Integer_Overflow__int64_t_max_postinc_34_unionType
myUnion
myUnion
data = 0LL;
data = 0LL
data
data
0LL
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int64_t data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
int64_t data = myUnion.unionSecond;
int64_t data = myUnion.unionSecond;
int64_t
int64_t
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(25,17,0)
(24,8,0)
(22,28,0)
(19,4,0)
(0,2,0)
(1,4,0)
(6,2,0)
(8,28,0)
(13,28,0)
(17,6,0)
(16,23,0)
(3,4,0)
(14,22,0)
(8,19,0)
(7,2,0)
(5,28,0)
(21,22,0)
(22,19,0)
(6,23,0)
(19,0,0)
(26,17,0)
(4,19,0)
(28,0,0)
(10,0,0)
(20,2,0)
(9,13,0)
(23,2,0)
(27,2,0)
(13,22,0)
(12,19,0)
(11,23,0)
(15,6,0)
(23,16,1)
(6,15,1)
(25,26,1)
(13,22,1)
(16,11,1)
(9,22,1)
(21,14,1)
(12,6,1)
(18,13,1)
(8,19,1)
(19,4,1)
(17,25,1)
(15,17,1)
(6,23,1)
(11,27,1)
(13,9,1)
(26,23,1)
(4,3,1)
(3,1,1)
(8,24,1)
(1,12,1)
(24,19,1)
(14,8,1)
(22,19,1)
(22,21,1)
(22,19,2)
(6,23,2)
(8,19,2)
(19,4,2)
(13,22,2)
-----------------------------------
(0,)
(1,myUnion)
(2,)
(3,unionSecond)
(4,myUnion.unionSecond)
(5,result)
(6,myUnion.unionFirst = data)
(7,myUnion)
(8,data++)
(9,result)
(10,data)
(11,data)
(12,data)
(13,printLongLongLine(result)
(14,result)
(15,data)
(16,LLONG_MAX)
(17,myUnion.unionFirst)
(18,RET)
(19,data = myUnion.unionSecond)
(20,data)
(21,data)
(22,result = data)
(23,data = LLONG_MAX)
(24,data)
(25,unionFirst)
(26,myUnion)
(27,L)
(28,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^