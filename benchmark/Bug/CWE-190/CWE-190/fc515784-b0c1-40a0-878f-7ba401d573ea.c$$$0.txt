-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_postinc_08_bad()
{
    short data;
    data = 0;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
29,30
31,32
32,33
32,34
32,35
33,34
34,35
35,36
37,38
38,39
38,40
40,41
40,42
42,43
43,44
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,19,24,26,30,36,39,41,44,48,50
-----computeFrom-----
12,13
12,14
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_postinc_08_bad(){    short data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_postinc_08_bad()
CWE190_Integer_Overflow__short_max_postinc_08_bad
{    short data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(5,6,0)
(17,9,0)
(4,23,0)
(11,3,0)
(13,9,0)
(16,22,0)
(7,6,0)
(2,17,0)
(3,23,0)
(0,9,0)
(5,17,0)
(14,5,0)
(10,9,0)
(21,17,0)
(23,15,0)
(5,23,0)
(3,22,0)
(20,6,0)
(22,17,0)
(6,8,0)
(22,6,0)
(22,23,0)
(1,22,0)
(7,18,1)
(16,5,1)
(22,1,1)
(5,14,1)
(5,17,1)
(17,2,1)
(22,17,1)
(11,22,1)
(22,6,1)
(6,20,1)
(18,17,1)
(20,7,1)
(3,11,1)
(12,19,1)
(19,18,1)
(12,3,1)
(3,22,1)
(5,6,1)
(14,19,1)
(2,21,1)
(1,16,1)
(19,6,1)
(22,19,2)
(22,6,2)
(14,19,2)
(1,19,2)
(3,22,2)
(16,19,2)
(11,19,2)
(3,19,2)
(20,18,2)
(5,6,2)
(22,17,2)
(7,18,2)
(5,19,2)
(5,17,2)
(6,18,2)
-----------------------------------
(0,if(staticReturnsTrue()
(1,data)
(2,0)
(3,printIntLine(result)
(4,result)
(5,data++)
(6,data = SHRT_MAX)
(7,data)
(8,)
(9,)
(10,data)
(11,result)
(12,RET)
(13,if(staticReturnsTrue()
(14,data)
(15,)
(16,result)
(17,data = 0)
(18,staticReturnsTrue()
(19,staticReturnsTrue()
(20,SHRT_MAX)
(21,data)
(22,result = data)
(23,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^