-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_preinc_06_bad()
{
    short data;
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_preinc_06_bad(){    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_preinc_06_bad()
CWE190_Integer_Overflow__short_fscanf_preinc_06_bad
{    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(22,17,0)
(24,29,0)
(13,17,0)
(19,14,0)
(21,13,0)
(18,8,0)
(29,14,0)
(22,13,0)
(28,22,0)
(13,8,0)
(26,8,0)
(16,26,0)
(12,2,0)
(14,29,0)
(29,8,0)
(3,8,0)
(6,14,0)
(17,1,0)
(15,4,0)
(10,4,0)
(7,27,0)
(23,17,0)
(20,2,0)
(26,17,0)
(14,25,0)
(11,4,0)
(8,4,0)
(9,27,0)
(5,13,0)
(16,2,1)
(22,28,1)
(6,19,1)
(19,27,1)
(27,7,1)
(28,13,1)
(13,21,1)
(24,6,1)
(29,8,1)
(26,8,1)
(5,26,1)
(29,24,1)
(12,14,1)
(18,3,1)
(7,9,1)
(0,2,1)
(20,12,1)
(2,20,1)
(14,29,1)
(22,13,1)
(26,16,1)
(8,18,1)
(12,27,1)
(9,8,1)
(21,5,1)
(13,8,1)
(0,22,1)
(6,27,2)
(14,29,2)
(29,27,2)
(22,2,2)
(19,27,2)
(21,2,2)
(24,27,2)
(22,13,2)
(26,2,2)
(13,2,2)
(14,27,2)
(5,2,2)
(13,8,2)
(26,8,2)
(28,2,2)
(29,8,2)
(16,2,2)
-----------------------------------
(0,RET)
(1,)
(2,STATIC_CONST_FIVE==5)
(3,data)
(4,)
(5,result)
(6,"%hd")
(7,5)
(8,data = 0)
(9,STATIC_CONST_FIVE)
(10,if(STATIC_CONST_FIVE==5)
(11,data)
(12,STATIC_CONST_FIVE)
(13,result = data)
(14,fscanf (stdin, "%hd", &data)
(15,if(STATIC_CONST_FIVE==5)
(16,data)
(17,)
(18,0)
(19,stdin)
(20,5)
(21,data)
(22,printIntLine(result)
(23,result)
(24,data)
(25,)
(26,++data)
(27,STATIC_CONST_FIVE==5)
(28,result)
(29,&data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^