-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_postinc_06_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_postinc_06_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_postinc_06_bad()
CWE190_Integer_Overflow__int_max_postinc_06_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(26,21,0)
(8,19,0)
(6,1,0)
(4,21,0)
(17,4,0)
(20,1,0)
(22,9,0)
(14,19,0)
(2,23,0)
(23,9,0)
(12,4,0)
(4,9,0)
(3,1,0)
(26,4,0)
(25,18,0)
(23,19,0)
(15,9,0)
(13,21,0)
(9,7,0)
(21,27,0)
(24,5,0)
(11,18,0)
(19,1,0)
(0,26,0)
(23,21,0)
(4,19,0)
(16,5,0)
(23,19,1)
(12,23,1)
(4,17,1)
(25,11,1)
(9,22,1)
(11,5,1)
(22,15,1)
(8,14,1)
(26,0,1)
(24,16,1)
(10,18,1)
(15,5,1)
(4,19,1)
(11,9,1)
(23,2,1)
(17,12,1)
(26,4,1)
(10,26,1)
(5,24,1)
(2,18,1)
(0,4,1)
(23,9,1)
(19,8,1)
(4,9,1)
(16,19,1)
(18,25,1)
(17,18,2)
(12,18,2)
(26,18,2)
(15,5,2)
(4,18,2)
(23,18,2)
(26,4,2)
(9,5,2)
(4,19,2)
(4,9,2)
(23,9,2)
(2,18,2)
(0,18,2)
(22,5,2)
(23,19,2)
-----------------------------------
(0,result)
(1,)
(2,data)
(3,if(STATIC_CONST_FIVE==5)
(4,result = data)
(5,STATIC_CONST_FIVE==5)
(6,data)
(7,)
(8,0)
(9,data = INT_MAX)
(10,RET)
(11,STATIC_CONST_FIVE)
(12,result)
(13,result)
(14,data)
(15,data)
(16,STATIC_CONST_FIVE)
(17,data)
(18,STATIC_CONST_FIVE==5)
(19,data = 0)
(20,if(STATIC_CONST_FIVE==5)
(21,)
(22,INT_MAX)
(23,data++)
(24,5)
(25,5)
(26,printIntLine(result)
(27,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^