-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_postinc_02_bad()
{
    int64_t data;
    data = 0LL;
    if(1)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%" SCNd64, &data);
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
19,20
20,21
21,22
21,23
23,24
24,25
24,26
24,27
25,26
26,27
27,28
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
38,39
39,40
39,41
40,41
42,43
-----nextToken-----
2,4,9,11,15,16,18,22,28,32,34,37,41,43
-----computeFrom-----
13,14
13,15
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ProblemStatement;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_postinc_02_bad(){    int64_t data;    data = 0LL;    if(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_postinc_02_bad()
CWE190_Integer_Overflow__int64_t_fscanf_postinc_02_bad
{    int64_t data;    data = 0LL;    if(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
1
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
fscanf (stdin, "%" SCNd64, &data);
if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(13,11,0)
(10,8,0)
(15,8,0)
(6,11,0)
(16,11,0)
(2,6,0)
(9,7,0)
(11,1,0)
(7,11,0)
(14,6,0)
(7,6,0)
(17,8,0)
(3,8,0)
(12,16,0)
(12,5,1)
(5,0,1)
(16,12,1)
(7,6,1)
(7,9,1)
(0,17,1)
(14,2,1)
(4,5,1)
(2,16,1)
(4,7,1)
(6,14,1)
(9,6,1)
(9,5,2)
(16,5,2)
(12,5,2)
(7,6,2)
(2,5,2)
(7,5,2)
(14,5,2)
(6,5,2)
-----------------------------------
(0,1)
(1,)
(2,result)
(3,if(1)
(4,RET)
(5,1)
(6,result = data)
(7,printLongLongLine(result)
(8,)
(9,result)
(10,data)
(11,)
(12,data)
(13,result)
(14,data)
(15,if(1)
(16,data++)
(17,L)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^