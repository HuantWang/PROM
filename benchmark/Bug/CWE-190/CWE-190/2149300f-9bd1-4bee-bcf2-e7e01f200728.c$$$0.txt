-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_postinc_17_bad()
{
    int i,j;
    int64_t data;
    data = 0LL;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
24,25
24,26
24,27
24,28
25,26
26,27
26,28
27,28
30,31
30,32
31,32
34,35
35,36
37,38
38,39
39,40
39,41
40,41
42,43
42,44
43,44
43,45
44,45
47,48
48,49
50,51
50,52
50,53
50,54
51,52
52,53
52,54
53,54
56,57
56,58
57,58
60,61
61,62
63,64
64,65
64,66
64,67
65,66
66,67
67,68
69,70
70,71
70,72
71,72
73,74
73,75
75,76
76,77
78,79
79,80
79,81
80,81
82,83
-----nextToken-----
2,4,8,10,12,16,18,22,23,28,29,32,33,36,41,45,46,49,54,55,58,59,62,68,72,74,77,81,83
-----computeFrom-----
20,21
20,22
26,27
26,28
30,31
30,32
39,40
39,41
52,53
52,54
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_postinc_17_bad(){    int i,j;    int64_t data;    data = 0LL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_postinc_17_bad()
CWE190_Integer_Overflow__int64_t_rand_postinc_17_bad
{    int i,j;    int64_t data;    data = 0LL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(13,23,0)
(32,21,0)
(37,21,0)
(9,21,0)
(15,26,0)
(12,15,0)
(29,8,0)
(27,29,0)
(11,35,0)
(8,38,0)
(34,0,0)
(23,29,0)
(23,7,0)
(20,0,0)
(6,0,0)
(17,28,0)
(33,17,0)
(22,1,0)
(1,7,0)
(26,15,0)
(29,7,0)
(15,8,0)
(15,12,0)
(35,28,0)
(31,28,0)
(18,21,0)
(7,25,0)
(24,30,0)
(1,8,0)
(5,28,0)
(30,0,0)
(4,20,0)
(39,17,0)
(8,15,0)
(36,7,0)
(16,8,0)
(3,21,0)
(10,20,0)
(2,29,0)
(14,21,0)
(6,3,1)
(1,22,1)
(30,0,1)
(20,0,1)
(33,35,1)
(39,33,1)
(28,5,1)
(27,2,1)
(17,28,1)
(13,29,1)
(15,26,1)
(29,27,1)
(20,4,1)
(1,8,1)
(33,28,1)
(31,20,1)
(19,17,1)
(16,20,1)
(2,1,1)
(23,13,1)
(5,31,1)
(30,24,1)
(10,0,1)
(15,12,1)
(4,10,1)
(0,34,1)
(35,11,1)
(10,30,1)
(34,6,1)
(23,29,1)
(24,8,1)
(11,23,1)
(17,39,1)
(35,28,1)
(29,8,1)
(12,16,1)
(22,17,1)
(8,15,1)
(20,0,2)
(12,20,2)
(11,17,2)
(29,8,2)
(10,20,2)
(1,17,2)
(20,20,2)
(23,29,2)
(29,17,2)
(15,26,2)
(22,17,2)
(17,17,2)
(35,17,2)
(2,17,2)
(1,8,2)
(33,17,2)
(24,20,2)
(35,28,2)
(8,15,2)
(39,17,2)
(30,20,2)
(15,20,2)
(13,17,2)
(17,28,2)
(30,0,2)
(16,20,2)
(23,17,2)
(27,17,2)
(15,12,2)
(4,20,2)
(8,20,2)
-----------------------------------
(0,i = 0)
(1,data++)
(2,result)
(3,L)
(4,1)
(5,0)
(6,i)
(7,)
(8,data = (int64_t)
(9,i)
(10,i)
(11,j)
(12,RAND64()
(13,result)
(14,j)
(15,(int64_t)
(16,data)
(17,j < 1)
(18,data)
(19,RET)
(20,i < 1)
(21,)
(22,data)
(23,printLongLongLine(result)
(24,i)
(25,)
(26,int64_t)
(27,data)
(28,j = 0)
(29,result = data)
(30,i++)
(31,j)
(32,for(j = 0; j < 1; j++)
(33,j)
(34,0)
(35,j++)
(36,result)
(37,for(i = 0; i < 1; i++)
(38,)
(39,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^