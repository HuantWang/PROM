-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_connect_socket_add_63b_badSink(int * dataPtr)
{
    int data = *dataPtr;
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        int result = data + 1;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
18,19
20,21
20,22
21,22
22,23
22,24
24,25
24,26
26,27
27,28
27,29
28,29
31,32
32,33
32,34
33,34
35,36
-----nextToken-----
2,4,6,8,9,13,15,19,23,25,29,30,34,36
-----computeFrom-----
27,28
27,29
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_connect_socket_add_63b_badSink(int * dataPtr){    int data = *dataPtr;    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_connect_socket_add_63b_badSink(int * dataPtr)
CWE190_Integer_Overflow__int_connect_socket_add_63b_badSink
int * dataPtr
int
* dataPtr
*
dataPtr
{    int data = *dataPtr;    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }}
int data = *dataPtr;
int data = *dataPtr;
int
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        int result = data + 1;        printIntLine(result);    }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(9,4,0)
(3,5,0)
(5,2,0)
(4,10,0)
(5,4,0)
(12,3,0)
(3,4,0)
(7,13,0)
(14,2,0)
(8,5,0)
(1,2,0)
(11,6,0)
(0,7,0)
(2,6,0)
(2,5,0)
(6,10,0)
(16,10,0)
(6,7,0)
(7,6,0)
(8,6,1)
(3,12,1)
(1,14,1)
(2,1,1)
(15,3,1)
(6,7,1)
(14,8,1)
(12,5,1)
(7,0,1)
(2,6,1)
(0,11,1)
(3,5,1)
(5,2,1)
(7,13,1)
(3,5,2)
(2,6,2)
(6,7,2)
(5,2,2)
(7,13,2)
-----------------------------------
(0,dataPtr)
(1,1)
(2,data + 1)
(3,printIntLine(result)
(4,)
(5,result = data + 1)
(6,data = *dataPtr)
(7,*dataPtr)
(8,result)
(9,result)
(10,)
(11,data)
(12,result)
(13,int * dataPtr)
(14,data)
(15,RET)
(16,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^