-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_square_01_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    /* POTENTIAL FLAW: Set data to a random value */
    data = RAND32();
    {
        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
        int result = data * data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
21,22
23,24
23,25
24,25
25,26
25,27
27,28
27,29
29,30
30,31
30,32
31,32
33,34
35,36
36,37
36,38
37,38
39,40
-----nextToken-----
2,4,8,10,14,15,19,22,26,28,32,34,38,40
-----computeFrom-----
12,13
12,14
17,18
17,19
30,31
30,32
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_square_01_bad(){    int data;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_rand_square_01_bad()
CWE190_Integer_Overflow__int_rand_square_01_bad
{    int data;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(1,5,0)
(2,0,0)
(14,0,0)
(15,5,0)
(7,4,0)
(4,9,0)
(12,1,0)
(4,11,0)
(8,14,0)
(10,5,0)
(3,11,0)
(9,0,0)
(1,11,0)
(11,9,0)
(6,14,0)
(16,1,0)
(11,1,0)
(17,9,0)
(5,0,0)
(5,10,0)
(1,12,1)
(4,7,1)
(3,5,1)
(5,10,1)
(13,4,1)
(7,11,1)
(14,8,1)
(15,14,1)
(12,16,1)
(1,5,1)
(10,15,1)
(11,1,1)
(4,11,1)
(16,3,1)
(8,6,1)
(5,10,2)
(11,1,2)
(4,11,2)
(1,5,2)
-----------------------------------
(0,)
(1,data * data)
(2,data)
(3,result)
(4,printIntLine(result)
(5,data = RAND32()
(6,data)
(7,result)
(8,0)
(9,)
(10,RAND32()
(11,result = data * data)
(12,data)
(13,RET)
(14,data = 0)
(15,data)
(16,data)
(17,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^