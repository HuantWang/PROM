-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_add_08_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticReturnsTrue())
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
21,23
22,23
23,24
23,25
25,26
25,27
25,28
27,28
28,29
30,31
32,33
32,34
32,35
33,34
33,35
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
53,54
55,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
63,64
65,66
66,67
66,68
67,68
68,69
68,70
70,71
70,72
72,73
73,74
73,75
74,75
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,8,10,14,15,19,24,26,29,31,36,38,40,42,44,49,52,54,59,60,64,69,71,75,76,80,82
-----computeFrom-----
12,13
12,14
33,34
33,35
47,48
47,49
73,74
73,75
-----guardedBy-----
38,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_add_08_bad(){    int data;    /* Initialize data */    data = 0;    if(staticReturnsTrue())    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_add_08_bad()
CWE190_Integer_Overflow__int_fgets_add_08_bad
{    int data;    /* Initialize data */    data = 0;    if(staticReturnsTrue())    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(28,15,0)
(0,6,0)
(28,39,0)
(26,6,0)
(20,14,0)
(17,3,0)
(14,21,0)
(4,7,0)
(19,28,0)
(31,3,0)
(35,18,0)
(10,6,0)
(33,39,0)
(2,6,0)
(3,9,0)
(34,11,0)
(32,2,0)
(31,32,0)
(32,39,0)
(5,35,0)
(7,31,0)
(23,32,0)
(22,11,0)
(7,3,0)
(13,31,0)
(30,2,0)
(25,2,0)
(1,11,0)
(11,1,0)
(39,8,0)
(11,15,0)
(12,32,0)
(32,31,0)
(38,1,0)
(29,14,0)
(15,14,0)
(16,15,0)
(39,28,0)
(24,15,0)
(37,11,0)
(38,11,1)
(28,15,1)
(19,33,1)
(33,1,1)
(27,36,1)
(2,25,1)
(34,15,1)
(37,22,1)
(11,15,1)
(32,23,1)
(4,31,1)
(5,1,1)
(12,13,1)
(15,24,1)
(25,30,1)
(31,32,1)
(1,38,1)
(32,2,1)
(35,5,1)
(16,36,1)
(13,27,1)
(7,31,1)
(22,34,1)
(32,39,1)
(40,7,1)
(40,27,1)
(28,19,1)
(27,35,1)
(27,39,1)
(1,11,1)
(36,2,1)
(7,4,1)
(11,37,1)
(24,16,1)
(23,12,1)
(39,28,1)
(39,1,2)
(24,36,2)
(5,1,2)
(28,1,2)
(4,27,2)
(11,36,2)
(7,27,2)
(16,36,2)
(12,27,2)
(22,36,2)
(13,27,2)
(31,32,2)
(35,1,2)
(23,27,2)
(1,36,2)
(15,36,2)
(1,11,2)
(28,15,2)
(7,31,2)
(31,27,2)
(33,1,2)
(11,15,2)
(19,1,2)
(38,36,2)
(34,36,2)
(39,28,2)
(32,27,2)
(37,36,2)
(32,2,2)
(32,39,2)
-----------------------------------
(0,data)
(1,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(2,data = 0)
(3,)
(4,result)
(5,"fgets()
(6,)
(7,printIntLine(result)
(8,)
(9,)
(10,if(staticReturnsTrue()
(11,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(12,data)
(13,result)
(14,)
(15,inputBuffer[CHAR_ARRAY_SIZE] = "")
(16,inputBuffer)
(17,result)
(18,)
(19,inputBuffer)
(20,inputBuffer)
(21,)
(22,CHAR_ARRAY_SIZE)
(23,1)
(24,"")
(25,0)
(26,if(staticReturnsTrue()
(27,staticReturnsTrue()
(28,atoi(inputBuffer)
(29,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(30,data)
(31,result = data + 1)
(32,data + 1)
(33,data)
(34,inputBuffer)
(35,printLine("fgets()
(36,staticReturnsTrue()
(37,stdin)
(38,NULL)
(39,data = atoi(inputBuffer)
(40,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^