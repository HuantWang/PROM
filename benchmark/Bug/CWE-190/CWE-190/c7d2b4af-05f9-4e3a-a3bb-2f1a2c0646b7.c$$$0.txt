-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_postinc_06_bad()
{
    short data;
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
47,48
47,49
49,50
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,43,46,48,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_postinc_06_bad(){    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_postinc_06_bad()
CWE190_Integer_Overflow__short_rand_postinc_06_bad
{    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(20,18,0)
(18,20,0)
(7,17,0)
(21,24,0)
(8,14,0)
(1,11,0)
(23,8,0)
(6,11,0)
(19,8,0)
(9,1,0)
(11,28,0)
(13,27,0)
(20,5,0)
(20,14,0)
(1,15,0)
(12,25,0)
(4,15,0)
(1,14,0)
(17,11,0)
(15,25,0)
(2,14,0)
(0,15,0)
(26,27,0)
(14,20,0)
(14,16,0)
(22,24,0)
(17,8,0)
(29,25,0)
(8,15,0)
(8,11,0)
(5,20,0)
(3,25,0)
(8,15,1)
(17,7,1)
(4,0,1)
(26,13,1)
(8,14,1)
(24,22,1)
(10,17,1)
(2,27,1)
(9,24,1)
(20,5,1)
(27,26,1)
(7,8,1)
(13,15,1)
(8,19,1)
(19,23,1)
(14,20,1)
(20,18,1)
(23,1,1)
(1,9,1)
(18,2,1)
(21,27,1)
(21,14,1)
(22,21,1)
(15,4,1)
(1,14,1)
(17,8,1)
(10,24,1)
(1,15,1)
(1,15,2)
(8,24,2)
(1,24,2)
(17,24,2)
(20,27,2)
(14,20,2)
(17,8,2)
(19,24,2)
(23,24,2)
(20,5,2)
(8,15,2)
(9,24,2)
(2,27,2)
(8,14,2)
(7,24,2)
(18,27,2)
(14,27,2)
(20,18,2)
(1,14,2)
-----------------------------------
(0,data)
(1,data++)
(2,data)
(3,if(STATIC_CONST_FIVE==5)
(4,0)
(5,short)
(6,result)
(7,result)
(8,result = data)
(9,data)
(10,RET)
(11,)
(12,if(STATIC_CONST_FIVE==5)
(13,STATIC_CONST_FIVE)
(14,data = (short)
(15,data = 0)
(16,)
(17,printIntLine(result)
(18,RAND32()
(19,data)
(20,(short)
(21,STATIC_CONST_FIVE)
(22,5)
(23,result)
(24,STATIC_CONST_FIVE==5)
(25,)
(26,5)
(27,STATIC_CONST_FIVE==5)
(28,)
(29,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^