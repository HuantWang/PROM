-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_add_16_bad()
{
    char data;
    data = ' ';
    while(1)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = CHAR_MAX;
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            char result = data + 1;
            printHexCharLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
21,22
23,24
26,27
26,28
28,29
28,30
29,30
29,31
30,31
31,32
31,33
33,34
33,35
35,36
36,37
36,38
37,38
40,41
41,42
41,43
42,43
44,45
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,27,32,34,38,39,43,45,46
-----computeFrom-----
12,13
12,14
20,21
20,22
36,37
36,38
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_add_16_bad(){    char data;    data = ' ';    while(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__char_max_add_16_bad()
CWE190_Integer_Overflow__char_max_add_16_bad
{    char data;    data = ' ';    while(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }        break;    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
while(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;        break;    }
1
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = CHAR_MAX;        break;    }
data = CHAR_MAX;
data = CHAR_MAX
data
data
CHAR_MAX
CHAR_MAX
break;
while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
break;
-----joern-----
(13,6,0)
(12,6,0)
(18,6,0)
(23,11,0)
(1,3,0)
(16,15,0)
(8,19,0)
(11,19,0)
(14,3,0)
(10,14,0)
(2,6,0)
(0,12,0)
(14,15,0)
(3,14,0)
(15,4,0)
(24,1,0)
(20,12,0)
(14,12,0)
(21,3,0)
(7,14,0)
(25,4,0)
(1,11,0)
(5,15,0)
(3,11,0)
(22,8,1)
(14,15,1)
(24,3,1)
(9,25,1)
(7,21,1)
(14,10,1)
(10,7,1)
(15,16,1)
(21,9,1)
(22,9,1)
(16,5,1)
(14,12,1)
(26,12,1)
(25,15,1)
(8,1,1)
(3,14,1)
(12,0,1)
(1,24,1)
(1,3,1)
(5,26,1)
(0,20,1)
(9,26,1)
(1,9,2)
(5,26,2)
(14,15,2)
(7,9,2)
(15,26,2)
(1,3,2)
(14,9,2)
(10,9,2)
(21,9,2)
(3,14,2)
(24,9,2)
(14,12,2)
(8,9,2)
(25,26,2)
(16,26,2)
(3,9,2)
-----------------------------------
(0,' ')
(1,printHexCharLine(result)
(2,data)
(3,result = data + 1)
(4,)
(5,data)
(6,)
(7,data)
(8,break;)
(9,1)
(10,1)
(11,)
(12,data = \' \')
(13,while(1)
(14,data + 1)
(15,data = CHAR_MAX)
(16,CHAR_MAX)
(17,data = ' ')
(18,while(1)
(19,)
(20,data)
(21,result)
(22,RET)
(23,result)
(24,result)
(25,break;)
(26,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^