-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_preinc_07_bad()
{
    short data;
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
47,48
47,49
49,50
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,43,46,48,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_preinc_07_bad(){    short data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_preinc_07_bad()
CWE190_Integer_Overflow__short_rand_preinc_07_bad
{    short data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(14,15,0)
(23,1,0)
(17,1,0)
(11,29,0)
(25,4,0)
(22,27,0)
(5,27,0)
(24,3,0)
(15,1,0)
(20,1,0)
(20,11,0)
(27,21,0)
(0,28,0)
(18,15,0)
(7,11,0)
(15,22,0)
(20,22,0)
(9,28,0)
(27,22,0)
(1,28,0)
(8,22,0)
(22,26,0)
(27,5,0)
(15,11,0)
(10,20,0)
(14,11,0)
(12,3,0)
(6,15,0)
(13,4,0)
(21,27,0)
(16,28,0)
(2,14,0)
(4,13,1)
(14,15,1)
(19,3,1)
(21,8,1)
(14,2,1)
(15,18,1)
(27,5,1)
(24,12,1)
(20,10,1)
(18,6,1)
(12,4,1)
(23,17,1)
(3,24,1)
(15,1,1)
(1,23,1)
(15,22,1)
(22,27,1)
(19,14,1)
(2,15,1)
(8,4,1)
(12,22,1)
(20,22,1)
(20,1,1)
(25,1,1)
(6,20,1)
(13,25,1)
(10,3,1)
(27,21,1)
(27,21,2)
(10,3,2)
(22,4,2)
(14,15,2)
(15,22,2)
(20,22,2)
(18,3,2)
(27,4,2)
(21,4,2)
(2,3,2)
(15,3,2)
(22,27,2)
(27,5,2)
(14,3,2)
(20,3,2)
(6,3,2)
(15,1,2)
(20,1,2)
(8,4,2)
-----------------------------------
(0,if(staticFive==5)
(1,data = 0)
(2,result)
(3,staticFive==5)
(4,staticFive==5)
(5,short)
(6,result)
(7,result)
(8,data)
(9,if(staticFive==5)
(10,data)
(11,)
(12,staticFive)
(13,5)
(14,printIntLine(result)
(15,result = data)
(16,data)
(17,data)
(18,data)
(19,RET)
(20,++data)
(21,RAND32()
(22,data = (short)
(23,0)
(24,5)
(25,staticFive)
(26,)
(27,(short)
(28,)
(29,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^