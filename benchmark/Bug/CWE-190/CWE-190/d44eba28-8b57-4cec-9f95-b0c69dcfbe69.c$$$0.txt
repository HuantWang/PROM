-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_add_16_bad()
{
    int64_t data;
    data = 0LL;
    while(1)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int64_t result = data + 1;
            printLongLongLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
19,20
19,21
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
26,27
29,30
30,31
33,34
33,35
35,36
35,37
36,37
36,38
37,38
38,39
38,40
39,40
41,42
41,43
43,44
44,45
44,46
45,46
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,9,11,15,16,18,23,27,28,31,32,34,40,42,46,47,51,53,54
-----computeFrom-----
13,14
13,15
21,22
21,23
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_add_16_bad(){    int64_t data;    data = 0LL;    while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__int64_t_rand_add_16_bad()
CWE190_Integer_Overflow__int64_t_rand_add_16_bad
{    int64_t data;    data = 0LL;    while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }        break;    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();        break;    }
1
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();        break;    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
break;
while(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
break;
-----joern-----
(15,25,0)
(25,10,0)
(2,17,0)
(10,12,0)
(1,10,0)
(22,11,0)
(21,23,0)
(1,0,0)
(9,12,0)
(10,1,0)
(0,17,0)
(6,10,0)
(23,21,0)
(25,12,0)
(24,0,0)
(5,11,0)
(14,1,0)
(21,16,0)
(13,8,0)
(4,11,0)
(18,11,0)
(3,1,0)
(0,21,0)
(16,21,0)
(12,8,0)
(21,0,0)
(21,23,1)
(19,7,1)
(0,21,1)
(13,25,1)
(6,7,1)
(16,24,1)
(1,3,1)
(21,16,1)
(19,13,1)
(24,20,1)
(2,0,1)
(14,6,1)
(25,15,1)
(1,0,1)
(25,10,1)
(7,2,1)
(15,10,1)
(7,20,1)
(20,4,1)
(10,1,1)
(3,14,1)
(3,7,2)
(0,21,2)
(15,7,2)
(0,20,2)
(25,7,2)
(2,20,2)
(13,7,2)
(24,20,2)
(21,16,2)
(10,7,2)
(21,23,2)
(1,7,2)
(14,7,2)
(6,7,2)
(25,10,2)
(10,1,2)
(16,20,2)
(21,20,2)
(1,0,2)
-----------------------------------
(0,data = (int64_t)
(1,data + 1)
(2,break;)
(3,1)
(4,L)
(5,while(1)
(6,result)
(7,1)
(8,)
(9,result)
(10,result = data + 1)
(11,)
(12,)
(13,break;)
(14,data)
(15,result)
(16,RAND64()
(17,)
(18,while(1)
(19,RET)
(20,1)
(21,(int64_t)
(22,data)
(23,int64_t)
(24,data)
(25,printLongLongLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^