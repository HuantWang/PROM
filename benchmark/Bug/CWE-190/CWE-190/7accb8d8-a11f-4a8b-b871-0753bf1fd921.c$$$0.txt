-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_postinc_03_bad()
{
    unsigned int data;
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
31,32
32,33
32,34
32,35
33,34
34,35
35,36
37,38
38,39
38,40
40,41
40,42
42,43
43,44
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,29,30,36,39,41,44,48,50
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
28,29
28,30
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_postinc_03_bad(){    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_postinc_03_bad()
CWE190_Integer_Overflow__unsigned_int_max_postinc_03_bad
{    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
5==5
5
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(1,7,0)
(3,23,0)
(24,13,0)
(10,13,0)
(20,23,0)
(9,13,0)
(9,1,0)
(12,4,0)
(18,22,0)
(18,13,0)
(4,1,0)
(21,18,0)
(22,6,0)
(2,1,0)
(11,16,0)
(18,1,0)
(0,22,0)
(4,9,0)
(9,22,0)
(17,8,0)
(19,23,0)
(13,23,0)
(15,9,0)
(5,9,0)
(25,16,0)
(26,22,0)
(14,8,0)
(22,0,1)
(8,17,1)
(16,25,1)
(26,16,1)
(25,11,1)
(21,8,1)
(9,22,1)
(18,21,1)
(18,13,1)
(18,22,1)
(11,13,1)
(17,14,1)
(5,15,1)
(12,9,1)
(4,12,1)
(24,10,1)
(27,4,1)
(27,8,1)
(15,18,1)
(9,5,1)
(14,22,1)
(4,9,1)
(14,16,1)
(13,24,1)
(9,13,1)
(0,26,1)
(21,8,2)
(4,8,2)
(9,8,2)
(15,8,2)
(18,22,2)
(22,16,2)
(26,16,2)
(12,8,2)
(0,16,2)
(18,13,2)
(9,22,2)
(18,8,2)
(5,8,2)
(9,13,2)
(4,9,2)
-----------------------------------
(0,UINT_MAX)
(1,)
(2,result)
(3,data)
(4,printUnsignedLine(result)
(5,data)
(6,)
(7,)
(8,5==5)
(9,result = data)
(10,data)
(11,5)
(12,result)
(13,data = 0)
(14,5)
(15,result)
(16,5==5)
(17,5)
(18,data++)
(19,if(5==5)
(20,if(5==5)
(21,data)
(22,data = UINT_MAX)
(23,)
(24,0)
(25,5)
(26,data)
(27,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^