-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_postinc_14_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(globalFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_postinc_14_bad(){    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_postinc_14_bad()
CWE190_Integer_Overflow__int_fscanf_postinc_14_bad
{    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(23,12,0)
(12,23,0)
(22,8,0)
(28,4,0)
(16,8,0)
(10,18,0)
(21,8,0)
(5,19,0)
(8,0,0)
(7,25,0)
(23,18,0)
(18,25,0)
(17,18,0)
(15,23,0)
(22,21,0)
(9,21,0)
(20,19,0)
(6,12,0)
(13,4,0)
(2,12,0)
(26,25,0)
(27,25,0)
(29,8,0)
(12,11,0)
(29,18,0)
(1,29,0)
(21,18,0)
(14,21,0)
(3,22,0)
(12,23,1)
(28,13,1)
(14,29,1)
(29,1,1)
(13,12,1)
(22,21,1)
(1,4,1)
(19,20,1)
(24,22,1)
(9,14,1)
(2,6,1)
(24,4,1)
(13,19,1)
(22,3,1)
(21,18,1)
(5,18,1)
(3,21,1)
(23,18,1)
(15,2,1)
(20,5,1)
(6,19,1)
(21,9,1)
(10,17,1)
(4,28,1)
(23,15,1)
(18,10,1)
(29,18,1)
(9,4,2)
(21,18,2)
(6,19,2)
(12,23,2)
(29,18,2)
(14,4,2)
(15,19,2)
(23,19,2)
(29,4,2)
(1,4,2)
(2,19,2)
(23,18,2)
(3,4,2)
(12,19,2)
(21,4,2)
(22,21,2)
(22,4,2)
-----------------------------------
(0,)
(1,data)
(2,"%d")
(3,result)
(4,globalFive==5)
(5,globalFive)
(6,stdin)
(7,if(globalFive==5)
(8,)
(9,data)
(10,0)
(11,)
(12,fscanf(stdin, "%d", &data)
(13,globalFive)
(14,result)
(15,data)
(16,result)
(17,data)
(18,data = 0)
(19,globalFive==5)
(20,5)
(21,result = data)
(22,printIntLine(result)
(23,&data)
(24,RET)
(25,)
(26,if(globalFive==5)
(27,data)
(28,5)
(29,data++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^