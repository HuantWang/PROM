-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_postinc_07_bad()
{
    unsigned int data;
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_postinc_07_bad(){    unsigned int data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_postinc_07_bad()
CWE190_Integer_Overflow__unsigned_int_max_postinc_07_bad
{    unsigned int data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(18,8,0)
(16,10,0)
(3,23,0)
(9,25,0)
(27,10,0)
(21,3,0)
(25,3,0)
(22,6,0)
(20,6,0)
(24,3,0)
(17,6,0)
(12,6,0)
(0,11,0)
(26,16,0)
(24,12,0)
(5,24,0)
(16,12,0)
(19,10,0)
(1,24,0)
(10,7,0)
(16,3,0)
(14,12,0)
(24,10,0)
(15,8,0)
(4,11,0)
(25,24,0)
(13,12,0)
(8,15,1)
(26,8,1)
(18,10,1)
(12,13,1)
(24,12,1)
(0,4,1)
(16,12,1)
(13,14,1)
(5,16,1)
(16,26,1)
(10,19,1)
(11,0,1)
(2,25,1)
(27,11,1)
(2,8,1)
(16,10,1)
(19,27,1)
(25,9,1)
(9,24,1)
(1,5,1)
(18,11,1)
(24,10,1)
(4,12,1)
(15,18,1)
(25,24,1)
(24,1,1)
(9,8,2)
(10,11,2)
(16,10,2)
(5,8,2)
(16,12,2)
(24,8,2)
(25,24,2)
(25,8,2)
(16,8,2)
(27,11,2)
(1,8,2)
(19,11,2)
(24,10,2)
(26,8,2)
(24,12,2)
-----------------------------------
(0,5)
(1,data)
(2,RET)
(3,)
(4,staticFive)
(5,result)
(6,)
(7,)
(8,staticFive==5)
(9,result)
(10,data = UINT_MAX)
(11,staticFive==5)
(12,data = 0)
(13,0)
(14,data)
(15,5)
(16,data++)
(17,if(staticFive==5)
(18,staticFive)
(19,UINT_MAX)
(20,data)
(21,result)
(22,if(staticFive==5)
(23,)
(24,result = data)
(25,printUnsignedLine(result)
(26,data)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^