-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_postinc_16_bad()
{
    short data;
    data = 0;
    while(1)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
21,22
23,24
26,27
26,28
28,29
28,30
29,30
29,31
29,32
30,31
31,32
32,33
34,35
35,36
35,37
37,38
37,39
39,40
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,27,33,36,38,41,45,47,48
-----computeFrom-----
12,13
12,14
20,21
20,22
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_postinc_16_bad(){    short data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__short_max_postinc_16_bad()
CWE190_Integer_Overflow__short_max_postinc_16_bad
{    short data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }        break;    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;        break;    }
1
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;        break;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
break;
while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
break;
-----joern-----
(11,16,0)
(19,23,0)
(15,11,0)
(19,11,0)
(19,5,0)
(15,23,0)
(12,16,0)
(7,5,0)
(23,14,0)
(9,11,0)
(22,24,0)
(21,19,0)
(10,11,0)
(5,24,0)
(13,5,0)
(0,15,0)
(1,14,0)
(6,24,0)
(18,23,0)
(4,23,0)
(20,9,0)
(9,19,0)
(17,19,0)
(15,5,0)
(25,24,0)
(19,23,1)
(8,5,1)
(17,21,1)
(1,23,1)
(3,1,1)
(3,8,1)
(21,15,1)
(12,9,1)
(19,5,1)
(18,8,1)
(4,18,1)
(23,4,1)
(15,5,1)
(0,3,1)
(15,0,1)
(19,17,1)
(5,13,1)
(13,7,1)
(9,19,1)
(9,20,1)
(20,19,1)
(2,12,1)
(2,3,1)
(15,23,1)
(18,8,2)
(17,3,2)
(1,8,2)
(9,19,2)
(15,5,2)
(23,8,2)
(19,5,2)
(12,3,2)
(9,3,2)
(21,3,2)
(15,23,2)
(15,3,2)
(19,23,2)
(4,8,2)
(0,3,2)
(19,3,2)
(20,3,2)
-----------------------------------
(0,data)
(1,break;)
(2,RET)
(3,1)
(4,SHRT_MAX)
(5,data = 0)
(6,while(1)
(7,data)
(8,1)
(9,printIntLine(result)
(10,result)
(11,)
(12,break;)
(13,0)
(14,)
(15,data++)
(16,)
(17,data)
(18,data)
(19,result = data)
(20,result)
(21,result)
(22,data)
(23,data = SHRT_MAX)
(24,)
(25,while(1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^