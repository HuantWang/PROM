-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_add_01_bad()
{
    char data;
    data = ' ';
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%c", &data);
    {
        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
        char result = data + 1;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
24,25
26,27
26,28
27,28
28,29
28,30
30,31
30,32
32,33
33,34
33,35
34,35
37,38
38,39
38,40
39,40
41,42
-----nextToken-----
2,4,8,10,14,15,19,21,22,25,29,31,35,36,40,42
-----computeFrom-----
12,13
12,14
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_add_01_bad(){    char data;    data = ' ';    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%c", &data);    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_fscanf_add_01_bad()
CWE190_Integer_Overflow__char_fscanf_add_01_bad
{    char data;    data = ' ';    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%c", &data);    {        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
{        /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */        char result = data + 1;        printHexCharLine(result);    }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(2,5,0)
(11,14,0)
(5,10,0)
(2,3,0)
(0,4,0)
(6,10,0)
(5,2,0)
(10,14,0)
(4,0,0)
(12,0,0)
(18,3,0)
(7,3,0)
(0,14,0)
(8,5,0)
(19,5,0)
(18,2,0)
(16,18,0)
(17,2,0)
(4,10,0)
(9,4,0)
(3,14,0)
(15,0,0)
(1,10,0)
(4,9,1)
(5,19,1)
(13,18,1)
(2,5,1)
(12,10,1)
(9,15,1)
(15,12,1)
(1,6,1)
(17,0,1)
(10,1,1)
(8,17,1)
(5,10,1)
(18,2,1)
(4,10,1)
(16,2,1)
(0,4,1)
(19,8,1)
(18,16,1)
(5,10,2)
(18,2,2)
(0,4,2)
(2,5,2)
(4,10,2)
-----------------------------------
(0,fscanf (stdin, "%c", &data)
(1,\\\' \\\')
(2,result = data + 1)
(3,)
(4,&data)
(5,data + 1)
(6,data)
(7,result)
(8,data)
(9,data)
(10,data = \\\' \\\')
(11,data)
(12,stdin)
(13,RET)
(14,)
(15,"%c")
(16,result)
(17,result)
(18,printHexCharLine(result)
(19,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^