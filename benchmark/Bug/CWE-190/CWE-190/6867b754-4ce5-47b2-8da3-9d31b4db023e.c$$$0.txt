-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_postinc_11_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
23,24
25,26
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
36,37
38,39
39,40
39,41
41,42
41,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,19,24,27,31,37,40,42,45,49,51
-----computeFrom-----
12,13
12,14
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_postinc_11_bad(){    int data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_rand_postinc_11_bad()
CWE190_Integer_Overflow__int_rand_postinc_11_bad
{    int data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(18,16,0)
(12,4,0)
(13,17,0)
(14,3,0)
(4,2,0)
(2,4,0)
(20,0,0)
(16,20,0)
(10,3,0)
(11,20,0)
(6,19,0)
(16,4,0)
(17,19,0)
(19,4,0)
(21,19,0)
(22,7,0)
(17,20,0)
(5,7,0)
(19,20,0)
(9,3,0)
(7,3,0)
(16,7,0)
(19,7,0)
(4,1,0)
(2,12,1)
(22,5,1)
(6,21,1)
(17,19,1)
(7,22,1)
(15,17,1)
(19,6,1)
(12,23,1)
(16,7,1)
(17,13,1)
(4,2,1)
(13,19,1)
(18,8,1)
(8,4,1)
(23,7,1)
(21,16,1)
(19,7,1)
(16,18,1)
(15,8,1)
(16,4,1)
(19,4,1)
(8,23,1)
(17,19,2)
(12,23,2)
(19,7,2)
(16,8,2)
(4,2,2)
(4,23,2)
(18,8,2)
(16,7,2)
(16,4,2)
(19,8,2)
(21,8,2)
(17,8,2)
(19,4,2)
(2,23,2)
(6,8,2)
(13,8,2)
-----------------------------------
(0,)
(1,)
(2,RAND32()
(3,)
(4,data = RAND32()
(5,data)
(6,data)
(7,data = 0)
(8,globalReturnsTrue()
(9,if(globalReturnsTrue()
(10,if(globalReturnsTrue()
(11,result)
(12,data)
(13,result)
(14,data)
(15,RET)
(16,data++)
(17,printIntLine(result)
(18,data)
(19,result = data)
(20,)
(21,result)
(22,0)
(23,globalReturnsTrue()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^