-----label-----
1
-----code-----
static void badSink(char data)
{
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        ++data;
        char result = data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
10,13
11,12
12,13
13,14
15,16
16,17
16,18
18,19
18,20
20,21
21,22
23,24
24,25
24,26
25,26
27,28
-----nextToken-----
2,4,6,8,14,17,19,22,26,28
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(char data){    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }}
static void
badSink(char data)
badSink
char data
char
data
data
{    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }}
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        ++data;        char result = data;        printHexCharLine(result);    }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(11,6,0)
(3,2,0)
(1,5,0)
(0,7,0)
(9,2,0)
(2,10,0)
(8,0,0)
(6,0,0)
(5,0,0)
(2,0,0)
(5,10,0)
(6,2,0)
(2,3,1)
(2,10,1)
(3,9,1)
(9,5,1)
(5,10,1)
(6,2,1)
(4,6,1)
(11,2,1)
(5,1,1)
(6,11,1)
(6,2,2)
(5,10,2)
(2,10,2)
-----------------------------------
(0,)
(1,data)
(2,result = data)
(3,data)
(4,RET)
(5,++data)
(6,printHexCharLine(result)
(7,)
(8,result)
(9,result)
(10,char data)
(11,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^