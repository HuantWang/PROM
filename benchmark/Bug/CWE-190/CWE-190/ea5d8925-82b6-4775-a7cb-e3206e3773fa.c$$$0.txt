-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_square_31_bad()
{
    int64_t data;
    data = 0LL;
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = LLONG_MAX;
    {
        int64_t dataCopy = data;
        int64_t data = dataCopy;
        {
            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
            int64_t result = data * data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
18,19
18,20
19,20
21,22
23,24
23,25
23,26
24,25
25,26
25,27
26,27
28,29
28,30
30,31
31,32
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
42,43
42,44
43,44
44,45
44,46
45,46
47,48
47,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
59,60
-----nextToken-----
2,4,9,11,15,16,20,22,27,29,32,36,38,41,46,48,52,54,58,60
-----computeFrom-----
13,14
13,15
18,19
18,20
50,51
50,52
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_square_31_bad(){    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = LLONG_MAX;    {        int64_t dataCopy = data;        int64_t data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_max_square_31_bad()
CWE190_Integer_Overflow__int64_t_max_square_31_bad
{    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = LLONG_MAX;    {        int64_t dataCopy = data;        int64_t data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
{        int64_t dataCopy = data;        int64_t data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
int64_t dataCopy = data;
int64_t dataCopy = data;
int64_t
int64_t
dataCopy = data
dataCopy
= data
data
data
int64_t data = dataCopy;
int64_t data = dataCopy;
int64_t
int64_t
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(1,6,0)
(11,16,0)
(11,18,0)
(14,19,0)
(19,7,0)
(13,7,0)
(7,4,0)
(15,11,0)
(6,19,0)
(16,21,0)
(0,18,0)
(10,7,0)
(21,16,0)
(20,4,0)
(2,19,0)
(12,21,0)
(16,18,0)
(6,3,0)
(8,3,0)
(18,3,0)
(23,16,0)
(5,21,0)
(22,4,0)
(19,3,0)
(21,6,0)
(3,4,0)
(24,3,0)
(17,6,0)
(17,1,1)
(19,14,1)
(21,6,1)
(11,16,1)
(9,11,1)
(10,13,1)
(6,19,1)
(12,23,1)
(13,20,1)
(5,12,1)
(23,6,1)
(7,10,1)
(1,19,1)
(2,7,1)
(6,17,1)
(19,7,1)
(16,21,1)
(15,16,1)
(11,15,1)
(21,5,1)
(14,2,1)
(16,21,2)
(19,7,2)
(21,6,2)
(11,16,2)
(6,19,2)
-----------------------------------
(0,result)
(1,data)
(2,dataCopy)
(3,)
(4,)
(5,data)
(6,data = dataCopy)
(7,data = LLONG_MAX)
(8,data)
(9,RET)
(10,LLONG_MAX)
(11,printLongLongLine(result)
(12,data)
(13,data)
(14,data)
(15,result)
(16,result = data * data)
(17,dataCopy)
(18,)
(19,dataCopy = data)
(20,L)
(21,data * data)
(22,data)
(23,result)
(24,dataCopy)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^