-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_postinc_03_bad()
{
    int64_t data;
    data = 0LL;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = LLONG_MAX;
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
18,20
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
32,33
33,34
33,35
33,36
34,35
35,36
36,37
38,39
39,40
39,41
40,41
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,9,11,15,16,19,20,25,27,30,31,37,41,43,46,50,52
-----computeFrom-----
13,14
13,15
18,19
18,20
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_postinc_03_bad(){    int64_t data;    data = 0LL;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_max_postinc_03_bad()
CWE190_Integer_Overflow__int64_t_max_postinc_03_bad
{    int64_t data;    data = 0LL;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
5==5
5
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;    }
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(3,7,0)
(20,14,0)
(10,17,0)
(4,11,0)
(16,5,0)
(21,5,0)
(11,1,0)
(11,7,0)
(19,7,0)
(7,9,0)
(23,3,0)
(17,1,0)
(25,3,0)
(13,8,0)
(1,22,0)
(2,8,0)
(15,14,0)
(0,5,0)
(18,5,0)
(12,1,0)
(3,1,0)
(24,7,0)
(17,3,0)
(17,3,1)
(14,15,1)
(23,25,1)
(11,4,1)
(3,23,1)
(20,8,1)
(4,14,1)
(13,0,1)
(24,19,1)
(8,2,1)
(11,7,1)
(6,17,1)
(3,7,1)
(25,11,1)
(2,13,1)
(6,14,1)
(20,7,1)
(17,10,1)
(15,20,1)
(7,24,1)
(10,3,1)
(19,8,1)
(24,8,2)
(11,14,2)
(3,14,2)
(10,14,2)
(17,14,2)
(11,7,2)
(23,14,2)
(7,8,2)
(19,8,2)
(25,14,2)
(4,14,2)
(3,7,2)
(17,3,2)
-----------------------------------
(0,L)
(1,)
(2,5)
(3,result = data)
(4,data)
(5,)
(6,RET)
(7,data = LLONG_MAX)
(8,5==5)
(9,)
(10,result)
(11,data++)
(12,result)
(13,5)
(14,5==5)
(15,5)
(16,data)
(17,printLongLongLine(result)
(18,if(5==5)
(19,data)
(20,5)
(21,if(5==5)
(22,)
(23,data)
(24,LLONG_MAX)
(25,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^