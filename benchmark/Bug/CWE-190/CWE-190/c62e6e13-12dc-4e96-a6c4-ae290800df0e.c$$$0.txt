-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_bad()
{
    unsigned int data;
    data = 0;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,39,41,45,47,51,53
-----computeFrom-----
12,13
12,14
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_bad(){    unsigned int data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_bad
{    unsigned int data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(1,25,0)
(14,9,0)
(0,6,0)
(6,2,0)
(18,9,0)
(11,18,0)
(7,5,0)
(9,20,0)
(18,24,0)
(19,25,0)
(7,6,0)
(4,5,0)
(8,9,0)
(0,7,0)
(3,25,0)
(23,5,0)
(5,7,0)
(15,0,0)
(10,24,0)
(5,24,0)
(17,24,0)
(24,25,0)
(13,6,0)
(12,7,0)
(9,18,0)
(9,18,1)
(8,22,1)
(18,24,1)
(0,15,1)
(5,24,1)
(5,4,1)
(4,23,1)
(21,16,1)
(0,7,1)
(24,10,1)
(14,8,1)
(10,17,1)
(23,12,1)
(11,14,1)
(15,7,1)
(7,5,1)
(21,0,1)
(22,24,1)
(12,16,1)
(16,22,1)
(16,9,1)
(18,11,1)
(4,16,2)
(15,16,2)
(18,22,2)
(5,16,2)
(12,16,2)
(5,24,2)
(7,16,2)
(8,22,2)
(0,16,2)
(9,22,2)
(0,7,2)
(23,16,2)
(11,22,2)
(9,18,2)
(18,24,2)
(7,5,2)
(14,22,2)
-----------------------------------
(0,printUnsignedLine(result)
(1,data)
(2,)
(3,if(globalReturnsTrue()
(4,data)
(5,data * data)
(6,)
(7,result = data * data)
(8,stdin)
(9,fscanf (stdin, "%u", &data)
(10,0)
(11,data)
(12,result)
(13,result)
(14,"%u")
(15,result)
(16,globalReturnsTrue()
(17,data)
(18,&data)
(19,if(globalReturnsTrue()
(20,)
(21,RET)
(22,globalReturnsTrue()
(23,data)
(24,data = 0)
(25,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^