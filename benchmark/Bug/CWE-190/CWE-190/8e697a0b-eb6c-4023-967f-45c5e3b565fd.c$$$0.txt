-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_add_31_bad()
{
    char data;
    data = ' ';
    /* POTENTIAL FLAW: Use the maximum size of the data type */
    data = CHAR_MAX;
    {
        char dataCopy = data;
        char data = dataCopy;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            char result = data + 1;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
23,24
24,25
24,26
26,27
26,28
28,29
29,30
31,32
32,33
32,34
34,35
34,36
36,37
37,38
39,40
39,41
40,41
41,42
41,43
43,44
43,45
45,46
46,47
46,48
47,48
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,8,10,14,15,19,21,25,27,30,33,35,38,42,44,48,49,53,55
-----computeFrom-----
12,13
12,14
17,18
17,19
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_add_31_bad(){    char data;    data = ' ';    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_max_add_31_bad()
CWE190_Integer_Overflow__char_max_add_31_bad
{    char data;    data = ' ';    /* POTENTIAL FLAW: Use the maximum size of the data type */    data = CHAR_MAX;    {        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
data = CHAR_MAX;
data = CHAR_MAX
data
data
CHAR_MAX
CHAR_MAX
{        char dataCopy = data;        char data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }    }
char dataCopy = data;
char dataCopy = data;
char
dataCopy = data
dataCopy
= data
data
data
char data = dataCopy;
char data = dataCopy;
char
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            char result = data + 1;            printHexCharLine(result);        }
char result = data + 1;
char result = data + 1;
char
result = data + 1
result
= data + 1
data + 1
data
data
1
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(14,22,0)
(12,6,0)
(21,15,0)
(15,5,0)
(26,11,0)
(16,7,0)
(7,5,0)
(2,16,0)
(11,9,0)
(22,5,0)
(3,12,0)
(13,5,0)
(5,9,0)
(0,6,0)
(15,11,0)
(22,15,0)
(23,11,0)
(6,12,0)
(25,9,0)
(1,8,0)
(4,5,0)
(24,6,0)
(12,7,0)
(10,22,0)
(17,7,0)
(18,8,0)
(6,22,0)
(16,12,0)
(8,9,0)
(20,15,0)
(23,8,1)
(15,11,1)
(3,22,1)
(16,12,1)
(21,20,1)
(6,22,1)
(22,15,1)
(20,11,1)
(26,23,1)
(14,10,1)
(10,15,1)
(11,26,1)
(12,6,1)
(19,16,1)
(24,3,1)
(0,24,1)
(2,12,1)
(6,0,1)
(22,14,1)
(8,1,1)
(1,18,1)
(15,21,1)
(16,2,1)
(22,15,2)
(16,12,2)
(15,11,2)
(6,22,2)
(12,6,2)
-----------------------------------
(0,1)
(1,' ')
(2,result)
(3,result)
(4,dataCopy)
(5,)
(6,data + 1)
(7,)
(8,data = ' ')
(9,)
(10,data)
(11,data = CHAR_MAX)
(12,result = data + 1)
(13,data)
(14,dataCopy)
(15,dataCopy = data)
(16,printHexCharLine(result)
(17,result)
(18,data)
(19,RET)
(20,dataCopy)
(21,data)
(22,data = dataCopy)
(23,data)
(24,data)
(25,data)
(26,CHAR_MAX)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^