-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_add_06_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int result = data + 1;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
40,41
40,42
42,43
42,44
44,45
45,46
45,47
46,47
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,43,47,48,52,54
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_add_06_bad(){    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_add_06_bad()
CWE190_Integer_Overflow__int_fscanf_add_06_bad
{    int data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int result = data + 1;            printIntLine(result);        }
int result = data + 1;
int result = data + 1;
int
result = data + 1
result
= data + 1
data + 1
data
data
1
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(10,12,0)
(6,14,0)
(3,11,0)
(26,14,0)
(13,10,0)
(12,4,0)
(26,21,0)
(2,11,0)
(20,14,0)
(1,12,0)
(17,18,0)
(29,22,0)
(7,6,0)
(10,18,0)
(14,9,0)
(23,26,0)
(12,10,0)
(25,12,0)
(19,21,0)
(21,18,0)
(0,8,0)
(28,22,0)
(5,18,0)
(16,21,0)
(6,26,0)
(24,8,0)
(15,22,0)
(21,26,0)
(18,22,0)
(23,11,1)
(17,5,1)
(25,1,1)
(13,25,1)
(11,2,1)
(16,23,1)
(21,19,1)
(3,8,1)
(19,16,1)
(21,18,1)
(6,26,1)
(0,24,1)
(8,0,1)
(7,26,1)
(2,3,1)
(3,12,1)
(27,11,1)
(24,18,1)
(26,21,1)
(18,17,1)
(6,7,1)
(12,10,1)
(27,6,1)
(1,8,1)
(10,13,1)
(10,18,1)
(7,11,2)
(26,11,2)
(6,11,2)
(1,8,2)
(25,8,2)
(13,8,2)
(23,11,2)
(16,11,2)
(21,18,2)
(21,11,2)
(10,18,2)
(12,10,2)
(10,8,2)
(19,11,2)
(26,21,2)
(12,8,2)
(6,26,2)
-----------------------------------
(0,5)
(1,stdin)
(2,5)
(3,STATIC_CONST_FIVE)
(4,)
(5,data)
(6,printIntLine(result)
(7,result)
(8,STATIC_CONST_FIVE==5)
(9,)
(10,&data)
(11,STATIC_CONST_FIVE==5)
(12,fscanf(stdin, "%d", &data)
(13,data)
(14,)
(15,if(STATIC_CONST_FIVE==5)
(16,data)
(17,0)
(18,data = 0)
(19,1)
(20,result)
(21,data + 1)
(22,)
(23,result)
(24,STATIC_CONST_FIVE)
(25,"%d")
(26,result = data + 1)
(27,RET)
(28,data)
(29,if(STATIC_CONST_FIVE==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^