-----label-----
1
-----code-----
static char badSource(char data)
{
    /* POTENTIAL FLAW: Use a value input from the console */
    fscanf (stdin, "%c", &data);
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
11,12
11,13
11,14
11,15
12,13
14,15
17,18
18,19
20,21
21,22
-----nextToken-----
2,4,6,8,13,15,16,19,22
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static char badSource(char data){    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%c", &data);    return data;}
static char
badSource(char data)
badSource
char data
char
data
data
{    /* POTENTIAL FLAW: Use a value input from the console */    fscanf (stdin, "%c", &data);    return data;}
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
return data;
data
data
-----joern-----
(4,3,0)
(0,9,0)
(0,7,0)
(3,9,0)
(7,6,0)
(7,0,0)
(3,6,0)
(1,7,0)
(5,7,0)
(8,3,0)
(2,0,0)
(8,3,1)
(2,5,1)
(5,1,1)
(3,4,1)
(7,0,1)
(0,2,1)
(0,9,1)
(4,7,1)
(3,9,1)
(8,3,2)
(7,0,2)
(0,9,2)
(3,9,2)
-----------------------------------
(0,&data)
(1,stdin)
(2,data)
(3,return data;)
(4,data)
(5,"%c")
(6,)
(7,fscanf (stdin, "%c", &data)
(8,RET)
(9,char data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^