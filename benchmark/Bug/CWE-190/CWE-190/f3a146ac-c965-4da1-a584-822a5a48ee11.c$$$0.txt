-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_add_32_bad()
{
    unsigned int data;
    unsigned int *dataPtr1 = &data;
    unsigned int *dataPtr2 = &data;
    data = 0;
    {
        unsigned int data = *dataPtr1;
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
        *dataPtr1 = data;
    }
    {
        unsigned int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            unsigned int result = data + 1;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
54,55
56,57
57,58
57,59
58,59
59,60
61,62
63,64
63,65
64,65
65,66
65,67
67,68
67,69
69,70
70,71
71,72
73,74
73,75
74,75
75,76
75,77
77,78
77,79
79,80
80,81
80,82
81,82
84,85
85,86
85,87
86,87
88,89
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,51,52,55,60,62,66,68,72,76,78,82,83,87,89
-----computeFrom-----
32,33
32,34
57,58
57,59
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_add_32_bad(){    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_add_32_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_add_32_bad
{    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
unsigned int *dataPtr1 = &data;
unsigned int *dataPtr1 = &data;
unsigned int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
unsigned int *dataPtr2 = &data;
unsigned int *dataPtr2 = &data;
unsigned int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        *dataPtr1 = data;    }
unsigned int data = *dataPtr1;
unsigned int data = *dataPtr1;
unsigned int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }    }
unsigned int data = *dataPtr2;
unsigned int data = *dataPtr2;
unsigned int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            unsigned int result = data + 1;            printUnsignedLine(result);        }
unsigned int result = data + 1;
unsigned int result = data + 1;
unsigned int
result = data + 1
result
= data + 1
data + 1
data
data
1
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(11,5,0)
(7,21,0)
(17,26,0)
(35,3,0)
(27,26,0)
(0,42,0)
(5,39,0)
(39,5,0)
(34,8,0)
(43,19,0)
(20,9,0)
(38,11,0)
(42,3,0)
(19,9,0)
(6,44,0)
(40,29,0)
(41,3,0)
(14,20,0)
(41,24,0)
(43,26,0)
(5,3,0)
(21,35,0)
(23,19,0)
(12,14,0)
(28,24,0)
(10,39,0)
(16,41,0)
(44,35,0)
(21,11,0)
(36,29,0)
(9,3,0)
(22,40,0)
(2,3,0)
(19,23,0)
(20,19,0)
(40,44,0)
(33,20,0)
(23,41,0)
(8,40,0)
(26,9,0)
(8,44,0)
(24,41,0)
(14,41,0)
(26,43,0)
(25,29,0)
(11,21,0)
(1,3,0)
(32,3,0)
(15,9,0)
(31,19,0)
(37,5,0)
(29,21,0)
(4,42,0)
(29,40,0)
(30,23,0)
(45,35,0)
(13,43,0)
(14,41,1)
(29,21,1)
(25,36,1)
(11,5,1)
(31,42,1)
(12,26,1)
(27,19,1)
(36,22,1)
(42,4,1)
(23,41,1)
(43,13,1)
(40,29,1)
(41,24,1)
(20,19,1)
(14,12,1)
(8,40,1)
(21,11,1)
(28,16,1)
(13,17,1)
(29,25,1)
(4,0,1)
(43,19,1)
(23,30,1)
(38,7,1)
(5,39,1)
(34,40,1)
(26,43,1)
(8,34,1)
(30,31,1)
(19,23,1)
(11,38,1)
(7,20,1)
(22,21,1)
(0,5,1)
(10,37,1)
(17,27,1)
(18,8,1)
(37,41,1)
(33,14,1)
(24,28,1)
(20,33,1)
(39,10,1)
(8,40,2)
(14,41,2)
(19,23,2)
(26,43,2)
(41,24,2)
(21,11,2)
(11,5,2)
(29,21,2)
(23,41,2)
(20,19,2)
(5,39,2)
(43,19,2)
(40,29,2)
-----------------------------------
(0,data)
(1,dataPtr2)
(2,dataPtr1)
(3,)
(4,0)
(5,*dataPtr2 = &data)
(6,result)
(7,data)
(8,printUnsignedLine(result)
(9,)
(10,data)
(11,*dataPtr2)
(12,dataPtr1)
(13,data)
(14,*dataPtr1)
(15,data)
(16,dataPtr1)
(17,"%u")
(18,RET)
(19,data = *dataPtr1)
(20,*dataPtr1 = data)
(21,data = *dataPtr2)
(22,result)
(23,*dataPtr1)
(24,&data)
(25,1)
(26,fscanf (stdin, "%u", &data)
(27,stdin)
(28,data)
(29,data + 1)
(30,dataPtr1)
(31,data)
(32,data)
(33,data)
(34,result)
(35,)
(36,data)
(37,dataPtr2)
(38,dataPtr2)
(39,&data)
(40,result = data + 1)
(41,*dataPtr1 = &data)
(42,data = 0)
(43,&data)
(44,)
(45,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^