-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_max_postinc_32_bad()
{
    int64_t data;
    int64_t *dataPtr1 = &data;
    int64_t *dataPtr2 = &data;
    data = 0LL;
    {
        int64_t data = *dataPtr1;
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = LLONG_MAX;
        *dataPtr1 = data;
    }
    {
        int64_t data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
32,33
34,35
35,36
35,37
36,37
39,40
39,41
39,42
40,41
41,42
41,43
42,43
44,45
44,46
46,47
47,48
48,49
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
58,59
59,60
61,62
63,64
63,65
64,65
65,66
65,67
66,67
68,69
68,70
70,71
71,72
72,73
74,75
74,76
74,77
75,76
76,77
77,78
79,80
80,81
80,82
81,82
83,84
83,85
85,86
86,87
88,89
89,90
89,91
90,91
92,93
-----nextToken-----
2,4,9,11,15,17,18,22,26,28,29,33,37,38,43,45,49,53,55,60,62,67,69,73,78,82,84,87,91,93
-----computeFrom-----
35,36
35,37
51,52
51,53
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_max_postinc_32_bad(){    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_max_postinc_32_bad()
CWE190_Integer_Overflow__int64_t_max_postinc_32_bad
{    int64_t data;    int64_t *dataPtr1 = &data;    int64_t *dataPtr2 = &data;    data = 0LL;    {        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;        *dataPtr1 = data;    }    {        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
int64_t *dataPtr1 = &data;
int64_t *dataPtr1 = &data;
int64_t
int64_t
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int64_t *dataPtr2 = &data;
int64_t *dataPtr2 = &data;
int64_t
int64_t
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0LL;
data = 0LL
data
data
0LL
{        int64_t data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = LLONG_MAX;        *dataPtr1 = data;    }
int64_t data = *dataPtr1;
int64_t data = *dataPtr1;
int64_t
int64_t
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = LLONG_MAX;
data = LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int64_t data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
int64_t data = *dataPtr2;
int64_t data = *dataPtr2;
int64_t
int64_t
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(22,28,0)
(24,23,0)
(37,38,0)
(28,10,0)
(18,20,0)
(41,14,0)
(16,38,0)
(3,33,0)
(34,29,0)
(17,6,0)
(6,38,0)
(23,14,0)
(26,6,0)
(11,12,0)
(15,23,0)
(4,28,0)
(33,23,0)
(29,34,0)
(27,41,0)
(41,20,0)
(12,1,0)
(38,27,0)
(29,8,0)
(34,23,0)
(27,38,0)
(23,33,0)
(21,8,0)
(0,14,0)
(13,34,0)
(31,41,0)
(8,14,0)
(10,14,0)
(35,37,0)
(36,22,0)
(39,14,0)
(30,1,0)
(5,27,0)
(19,29,0)
(2,14,0)
(22,6,0)
(1,8,0)
(7,10,0)
(12,8,0)
(9,1,0)
(25,14,0)
(20,41,0)
(38,10,0)
(6,28,0)
(32,15,0)
(15,12,0)
(37,28,0)
(2,41,1)
(13,19,1)
(16,12,1)
(12,1,1)
(30,9,1)
(22,36,1)
(17,37,1)
(41,20,1)
(15,32,1)
(6,26,1)
(3,24,1)
(32,1,1)
(12,11,1)
(38,27,1)
(22,6,1)
(23,33,1)
(35,38,1)
(5,16,1)
(18,31,1)
(31,23,1)
(33,3,1)
(19,2,1)
(27,5,1)
(34,23,1)
(1,30,1)
(20,18,1)
(40,22,1)
(37,38,1)
(27,41,1)
(6,38,1)
(34,13,1)
(37,35,1)
(11,15,1)
(9,29,1)
(29,34,1)
(15,23,1)
(26,17,1)
(36,6,1)
(41,20,2)
(23,33,2)
(38,27,2)
(15,23,2)
(6,38,2)
(29,34,2)
(27,41,2)
(37,38,2)
(12,1,2)
(34,23,2)
(22,6,2)
-----------------------------------
(0,dataPtr1)
(1,data = LLONG_MAX)
(2,L)
(3,data)
(4,result)
(5,dataPtr2)
(6,result = data)
(7,data)
(8,)
(9,data)
(10,)
(11,data)
(12,*dataPtr1 = data)
(13,dataPtr1)
(14,)
(15,*dataPtr1)
(16,data)
(17,result)
(18,data)
(19,data)
(20,&data)
(21,data)
(22,printLongLongLine(result)
(23,*dataPtr1 = &data)
(24,dataPtr1)
(25,dataPtr2)
(26,data)
(27,*dataPtr2)
(28,)
(29,data = *dataPtr1)
(30,LLONG_MAX)
(31,dataPtr2)
(32,dataPtr1)
(33,&data)
(34,*dataPtr1)
(35,data)
(36,result)
(37,data++)
(38,data = *dataPtr2)
(39,data)
(40,RET)
(41,*dataPtr2 = &data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^