-----label-----
1
-----code-----
int CWE190_Integer_Overflow__int_fscanf_square_61b_badSource(int data)
{
    /* POTENTIAL FLAW: Read data from the console using fscanf() */
    fscanf(stdin, "%d", &data);
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
11,12
11,13
11,14
11,15
12,13
14,15
17,18
18,19
20,21
21,22
-----nextToken-----
2,4,6,8,13,15,16,19,22
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
int CWE190_Integer_Overflow__int_fscanf_square_61b_badSource(int data){    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    return data;}
int
CWE190_Integer_Overflow__int_fscanf_square_61b_badSource(int data)
CWE190_Integer_Overflow__int_fscanf_square_61b_badSource
int data
int
data
data
{    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    return data;}
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
return data;
data
data
-----joern-----
(9,8,0)
(9,4,0)
(1,3,0)
(4,9,0)
(4,0,0)
(6,9,0)
(5,4,0)
(7,9,0)
(2,3,0)
(3,8,0)
(3,0,0)
(4,0,1)
(7,6,1)
(2,9,1)
(1,3,1)
(3,2,1)
(5,7,1)
(9,4,1)
(4,5,1)
(3,0,1)
(9,4,2)
(4,0,2)
(1,3,2)
(3,0,2)
-----------------------------------
(0,int data)
(1,RET)
(2,data)
(3,return data;)
(4,&data)
(5,data)
(6,stdin)
(7,"%d")
(8,)
(9,fscanf(stdin, "%d", &data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^