-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_postinc_18_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    goto source;
source:
    /* POTENTIAL FLAW: Read data from the console using fscanf() */
    fscanf(stdin, "%d", &data);
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        int result = data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
32,33
32,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,26,29,31,33,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_postinc_18_bad(){    int data;    /* Initialize data */    data = 0;    goto source;source:    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    goto sink;sink:    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int result = data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_fscanf_postinc_18_bad()
CWE190_Integer_Overflow__int_fscanf_postinc_18_bad
{    int data;    /* Initialize data */    data = 0;    goto source;source:    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    goto sink;sink:    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int result = data;        printIntLine(result);    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);
source
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int result = data;        printIntLine(result);    }
sink
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        int result = data;        printIntLine(result);    }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(0,17,0)
(21,0,0)
(14,15,0)
(16,7,0)
(22,4,0)
(20,6,0)
(12,6,0)
(1,17,0)
(3,6,0)
(13,17,0)
(7,5,0)
(11,5,0)
(9,0,0)
(8,4,0)
(17,6,0)
(5,6,0)
(19,6,0)
(23,6,0)
(0,5,0)
(4,6,0)
(15,5,0)
(10,1,0)
(2,5,0)
(15,17,0)
(4,7,0)
(7,4,0)
(1,0,0)
(15,14,1)
(7,5,1)
(7,16,1)
(21,9,1)
(10,0,1)
(1,0,1)
(14,3,1)
(20,5,1)
(1,10,1)
(18,1,1)
(9,15,1)
(4,7,1)
(15,5,1)
(8,20,1)
(22,8,1)
(16,22,1)
(0,5,1)
(3,4,1)
(5,2,1)
(0,21,1)
(2,11,1)
(0,5,2)
(15,5,2)
(1,0,2)
(4,7,2)
(7,5,2)
-----------------------------------
(0,result = data)
(1,printIntLine(result)
(2,0)
(3,goto sink;)
(4,fscanf(stdin, "%d", &data)
(5,data = 0)
(6,)
(7,&data)
(8,stdin)
(9,result)
(10,result)
(11,data)
(12,data)
(13,result)
(14,data)
(15,data++)
(16,data)
(17,)
(18,RET)
(19,source:)
(20,goto source;)
(21,data)
(22,"%d")
(23,sink:)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^