-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_preinc_06_bad()
{
    char data;
    data = ' ';
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            char result = data;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_preinc_06_bad(){    char data;    data = ' ';    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_preinc_06_bad()
CWE190_Integer_Overflow__char_fscanf_preinc_06_bad
{    char data;    data = ' ';    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(16,19,0)
(6,18,0)
(3,22,0)
(11,26,0)
(27,19,0)
(14,13,0)
(23,16,0)
(8,19,0)
(4,8,0)
(8,3,0)
(1,3,0)
(26,2,0)
(16,3,0)
(17,19,0)
(25,3,0)
(10,21,0)
(7,18,0)
(24,18,0)
(9,1,0)
(19,18,0)
(13,19,0)
(5,21,0)
(28,12,0)
(0,12,0)
(13,26,0)
(26,13,0)
(1,8,0)
(15,26,0)
(29,8,0)
(29,4,1)
(8,19,1)
(9,8,1)
(16,19,1)
(17,27,1)
(23,21,1)
(26,13,1)
(5,12,1)
(16,23,1)
(14,11,1)
(4,16,1)
(20,21,1)
(20,1,1)
(11,15,1)
(28,0,1)
(21,10,1)
(19,17,1)
(13,19,1)
(13,14,1)
(1,9,1)
(10,5,1)
(5,26,1)
(8,29,1)
(1,8,1)
(0,19,1)
(12,28,1)
(15,12,1)
(1,21,2)
(26,13,2)
(14,12,2)
(4,21,2)
(16,19,2)
(1,8,2)
(13,19,2)
(9,21,2)
(8,21,2)
(8,19,2)
(23,21,2)
(26,12,2)
(16,21,2)
(13,12,2)
(29,21,2)
(15,12,2)
(11,12,2)
-----------------------------------
(0,STATIC_CONST_FIVE)
(1,printHexCharLine(result)
(2,)
(3,)
(4,result)
(5,STATIC_CONST_FIVE)
(6,data)
(7,if(STATIC_CONST_FIVE==5)
(8,result = data)
(9,result)
(10,5)
(11,"%c")
(12,STATIC_CONST_FIVE==5)
(13,&data)
(14,data)
(15,stdin)
(16,++data)
(17,\\\' \\\')
(18,)
(19,data = \\\' \\\')
(20,RET)
(21,STATIC_CONST_FIVE==5)
(22,)
(23,data)
(24,if(STATIC_CONST_FIVE==5)
(25,result)
(26,fscanf (stdin, "%c", &data)
(27,data)
(28,5)
(29,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^