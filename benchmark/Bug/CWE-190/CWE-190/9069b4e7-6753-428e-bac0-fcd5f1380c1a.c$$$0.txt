-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_multiply_68b_badSink()
{
    int data = CWE190_Integer_Overflow__int_fscanf_multiply_68_badData;
    if(data > 0) /* ensure we won't have an underflow */
    {
        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */
        int result = data * 2;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
15,16
15,17
16,17
19,20
19,21
20,21
21,22
21,23
23,24
23,25
25,26
26,27
26,28
27,28
30,31
31,32
31,33
32,33
34,35
-----nextToken-----
2,4,8,10,13,17,18,22,24,28,29,33,35
-----computeFrom-----
15,16
15,17
26,27
26,28
-----guardedBy-----
17,28
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_multiply_68b_badSink(){    int data = CWE190_Integer_Overflow__int_fscanf_multiply_68_badData;    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_fscanf_multiply_68b_badSink()
CWE190_Integer_Overflow__int_fscanf_multiply_68b_badSink
{    int data = CWE190_Integer_Overflow__int_fscanf_multiply_68_badData;    if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }}
int data = CWE190_Integer_Overflow__int_fscanf_multiply_68_badData;
int data = CWE190_Integer_Overflow__int_fscanf_multiply_68_badData;
int
data = CWE190_Integer_Overflow__int_fscanf_multiply_68_badData
data
= CWE190_Integer_Overflow__int_fscanf_multiply_68_badData
CWE190_Integer_Overflow__int_fscanf_multiply_68_badData
CWE190_Integer_Overflow__int_fscanf_multiply_68_badData
if(data > 0) /* ensure we won't have an underflow */    {        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }
data > 0
data
data
0
{        /* POTENTIAL FLAW: if (data*2) > INT_MAX, this will overflow */        int result = data * 2;        printIntLine(result);    }
int result = data * 2;
int result = data * 2;
int
result = data * 2
result
= data * 2
data * 2
data
data
2
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(8,5,0)
(9,5,0)
(14,8,0)
(12,4,0)
(7,17,0)
(5,4,0)
(6,15,0)
(4,0,0)
(18,0,0)
(3,5,0)
(13,4,0)
(17,15,0)
(11,2,0)
(1,2,0)
(17,8,0)
(8,15,0)
(5,8,0)
(2,4,0)
(10,0,0)
(17,8,1)
(3,14,1)
(9,3,1)
(4,12,1)
(12,13,1)
(5,4,1)
(5,9,1)
(2,1,1)
(2,4,1)
(1,11,1)
(14,2,1)
(16,17,1)
(11,4,1)
(17,7,1)
(8,5,1)
(7,8,1)
(16,2,1)
(17,8,2)
(9,2,2)
(2,4,2)
(17,2,2)
(14,2,2)
(3,2,2)
(8,5,2)
(5,2,2)
(8,2,2)
(5,4,2)
(7,2,2)
-----------------------------------
(0,)
(1,0)
(2,data > 0)
(3,data)
(4,data = CWE190_Integer_Overflow__int_fscanf_multiply_68_badData)
(5,data * 2)
(6,result)
(7,result)
(8,result = data * 2)
(9,2)
(10,data)
(11,data)
(12,CWE190_Integer_Overflow__int_fscanf_multiply_68_badData)
(13,data)
(14,result)
(15,)
(16,RET)
(17,printIntLine(result)
(18,if(data > 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^