-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_square_31_bad()
{
    int64_t data;
    data = 0LL;
    /* POTENTIAL FLAW: Use a random value */
    data = (int64_t)RAND64();
    {
        int64_t dataCopy = data;
        int64_t data = dataCopy;
        {
            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
            int64_t result = data * data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
18,19
18,20
19,20
21,22
21,23
22,23
22,24
23,24
26,27
27,28
29,30
29,31
29,32
30,31
31,32
31,33
32,33
34,35
34,36
36,37
37,38
39,40
40,41
40,42
41,42
43,44
43,45
45,46
46,47
48,49
48,50
49,50
50,51
50,52
51,52
53,54
53,55
55,56
56,57
56,58
57,58
59,60
61,62
62,63
62,64
63,64
65,66
-----nextToken-----
2,4,9,11,15,16,20,24,25,28,33,35,38,42,44,47,52,54,58,60,64,66
-----computeFrom-----
13,14
13,15
18,19
18,20
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_square_31_bad(){    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    {        int64_t dataCopy = data;        int64_t data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_square_31_bad()
CWE190_Integer_Overflow__int64_t_rand_square_31_bad
{    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    {        int64_t dataCopy = data;        int64_t data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
{        int64_t dataCopy = data;        int64_t data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
int64_t dataCopy = data;
int64_t dataCopy = data;
int64_t
int64_t
dataCopy = data
dataCopy
= data
data
data
int64_t data = dataCopy;
int64_t data = dataCopy;
int64_t
int64_t
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(19,21,0)
(20,16,0)
(21,25,0)
(15,23,0)
(16,0,0)
(0,15,0)
(3,4,0)
(1,3,0)
(12,3,0)
(0,4,0)
(10,7,0)
(21,7,0)
(7,21,0)
(1,16,0)
(15,11,0)
(2,21,0)
(26,1,0)
(6,16,0)
(16,3,0)
(5,3,0)
(23,15,0)
(15,0,0)
(17,1,0)
(22,2,0)
(13,4,0)
(7,1,0)
(24,25,0)
(11,15,0)
(9,4,0)
(2,25,0)
(25,3,0)
(8,7,0)
(18,0,0)
(21,7,1)
(15,11,1)
(16,0,1)
(17,26,1)
(18,13,1)
(2,21,1)
(22,21,1)
(7,1,1)
(1,17,1)
(0,15,1)
(6,0,1)
(15,23,1)
(16,20,1)
(10,8,1)
(26,16,1)
(20,6,1)
(7,10,1)
(8,19,1)
(23,18,1)
(14,2,1)
(1,16,1)
(19,1,1)
(2,22,1)
(15,11,2)
(0,15,2)
(15,23,2)
(2,21,2)
(7,1,2)
(21,7,2)
(16,0,2)
(1,16,2)
-----------------------------------
(0,data = (int64_t)
(1,data = dataCopy)
(2,printLongLongLine(result)
(3,)
(4,)
(5,dataCopy)
(6,dataCopy)
(7,data * data)
(8,data)
(9,data)
(10,data)
(11,int64_t)
(12,data)
(13,L)
(14,RET)
(15,(int64_t)
(16,dataCopy = data)
(17,dataCopy)
(18,data)
(19,result)
(20,data)
(21,result = data * data)
(22,result)
(23,RAND64()
(24,result)
(25,)
(26,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^