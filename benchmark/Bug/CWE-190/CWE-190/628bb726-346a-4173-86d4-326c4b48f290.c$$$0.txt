-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_square_02_bad()
{
    short data;
    data = 0;
    if(1)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */
            short result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
29,30
29,31
31,32
32,33
32,34
33,34
34,35
34,36
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,30,35,37,41,43,47,49
-----computeFrom-----
12,13
12,14
39,40
39,41
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_square_02_bad(){    short data;    data = 0;    if(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_square_02_bad()
CWE190_Integer_Overflow__short_fscanf_square_02_bad
{    short data;    data = 0;    if(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
1
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */            short result = data * data;            printIntLine(result);        }
short result = data * data;
short result = data * data;
short
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(6,10,0)
(20,25,0)
(6,21,0)
(25,14,0)
(1,11,0)
(16,6,0)
(21,25,0)
(13,1,0)
(4,14,0)
(24,25,0)
(23,25,0)
(21,6,0)
(0,1,0)
(1,24,0)
(24,1,0)
(10,7,0)
(17,21,0)
(8,10,0)
(2,10,0)
(22,14,0)
(9,21,0)
(19,14,0)
(18,2,0)
(15,24,0)
(2,6,0)
(17,9,1)
(1,24,1)
(2,18,1)
(0,13,1)
(21,25,1)
(21,17,1)
(12,5,1)
(24,25,1)
(6,21,1)
(2,6,1)
(9,16,1)
(18,6,1)
(3,25,1)
(23,20,1)
(24,15,1)
(5,3,1)
(12,2,1)
(15,0,1)
(16,5,1)
(25,23,1)
(13,3,1)
(5,1,1)
(1,24,2)
(21,25,2)
(2,5,2)
(6,5,2)
(6,21,2)
(21,5,2)
(24,3,2)
(2,6,2)
(18,5,2)
(15,3,2)
(24,25,2)
(1,3,2)
(9,5,2)
(17,5,2)
(0,3,2)
(16,5,2)
(13,3,2)
-----------------------------------
(0,"%hd")
(1,fscanf (stdin, "%hd", &data)
(2,printIntLine(result)
(3,1)
(4,if(1)
(5,1)
(6,result = data * data)
(7,)
(8,result)
(9,data)
(10,)
(11,)
(12,RET)
(13,stdin)
(14,)
(15,data)
(16,result)
(17,data)
(18,result)
(19,data)
(20,data)
(21,data * data)
(22,if(1)
(23,0)
(24,&data)
(25,data = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^