-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_postinc_14_bad()
{
    short data;
    data = 0;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
    }
    if(globalFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_postinc_14_bad(){    short data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_postinc_14_bad()
CWE190_Integer_Overflow__short_max_postinc_14_bad
{    short data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;    }
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(21,4,0)
(5,23,0)
(23,3,0)
(6,12,0)
(23,12,0)
(16,23,0)
(25,23,0)
(11,3,0)
(24,15,0)
(3,20,0)
(0,8,0)
(7,17,0)
(15,12,0)
(18,8,0)
(2,17,0)
(23,4,0)
(26,17,0)
(9,1,0)
(15,4,0)
(19,25,0)
(12,13,0)
(25,12,0)
(22,3,0)
(4,17,0)
(15,3,0)
(14,1,0)
(10,4,0)
(4,21,1)
(27,1,1)
(1,14,1)
(27,25,1)
(18,4,1)
(8,0,1)
(5,15,1)
(23,16,1)
(21,10,1)
(22,8,1)
(15,3,1)
(19,23,1)
(23,3,1)
(11,22,1)
(23,4,1)
(3,11,1)
(0,18,1)
(9,8,1)
(9,3,1)
(14,9,1)
(15,4,1)
(25,19,1)
(16,5,1)
(24,1,1)
(15,24,1)
(25,23,1)
(22,8,2)
(15,4,2)
(23,4,2)
(19,1,2)
(15,3,2)
(25,23,2)
(16,1,2)
(24,1,2)
(3,8,2)
(5,1,2)
(15,1,2)
(23,1,2)
(11,8,2)
(23,3,2)
(25,1,2)
-----------------------------------
(0,5)
(1,globalFive==5)
(2,data)
(3,data = SHRT_MAX)
(4,data = 0)
(5,result)
(6,result)
(7,if(globalFive==5)
(8,globalFive==5)
(9,globalFive)
(10,data)
(11,SHRT_MAX)
(12,)
(13,)
(14,5)
(15,data++)
(16,data)
(17,)
(18,globalFive)
(19,result)
(20,)
(21,0)
(22,data)
(23,result = data)
(24,data)
(25,printIntLine(result)
(26,if(globalFive==5)
(27,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^