-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_add_31_bad()
{
    int64_t data;
    data = 0LL;
    /* POTENTIAL FLAW: Use a random value */
    data = (int64_t)RAND64();
    {
        int64_t dataCopy = data;
        int64_t data = dataCopy;
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int64_t result = data + 1;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
18,19
18,20
19,20
21,22
21,23
22,23
22,24
23,24
26,27
27,28
29,30
29,31
29,32
30,31
31,32
31,33
32,33
34,35
34,36
36,37
37,38
39,40
40,41
40,42
41,42
43,44
43,45
45,46
46,47
48,49
48,50
49,50
50,51
50,52
51,52
53,54
53,55
55,56
56,57
56,58
57,58
60,61
61,62
61,63
62,63
64,65
-----nextToken-----
2,4,9,11,15,16,20,24,25,28,33,35,38,42,44,47,52,54,58,59,63,65
-----computeFrom-----
13,14
13,15
18,19
18,20
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_add_31_bad(){    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    {        int64_t dataCopy = data;        int64_t data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_add_31_bad()
CWE190_Integer_Overflow__int64_t_rand_add_31_bad
{    int64_t data;    data = 0LL;    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    {        int64_t dataCopy = data;        int64_t data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
{        int64_t dataCopy = data;        int64_t data = dataCopy;        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
int64_t dataCopy = data;
int64_t dataCopy = data;
int64_t
int64_t
dataCopy = data
dataCopy
= data
data
data
int64_t data = dataCopy;
int64_t data = dataCopy;
int64_t
int64_t
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(1,6,0)
(10,17,0)
(21,18,0)
(6,3,0)
(13,26,0)
(16,7,0)
(4,7,0)
(2,4,0)
(6,4,0)
(0,16,0)
(23,17,0)
(5,4,0)
(26,19,0)
(20,18,0)
(15,6,0)
(14,7,0)
(18,7,0)
(3,6,0)
(3,18,0)
(7,19,0)
(4,16,0)
(8,7,0)
(16,26,0)
(21,3,0)
(9,16,0)
(17,10,0)
(26,17,0)
(17,26,0)
(24,19,0)
(25,3,0)
(22,19,0)
(12,21,0)
(17,23,0)
(5,2,1)
(21,3,1)
(9,0,1)
(16,9,1)
(16,26,1)
(4,5,1)
(2,16,1)
(13,22,1)
(12,3,1)
(21,12,1)
(0,26,1)
(25,4,1)
(15,1,1)
(17,10,1)
(17,23,1)
(3,6,1)
(6,15,1)
(1,25,1)
(6,4,1)
(26,17,1)
(23,13,1)
(11,21,1)
(4,16,1)
(21,3,2)
(16,26,2)
(3,6,2)
(4,16,2)
(26,17,2)
(17,23,2)
(17,10,2)
(6,4,2)
-----------------------------------
(0,dataCopy)
(1,data)
(2,data)
(3,result = data + 1)
(4,data = dataCopy)
(5,dataCopy)
(6,data + 1)
(7,)
(8,dataCopy)
(9,data)
(10,int64_t)
(11,RET)
(12,result)
(13,data)
(14,data)
(15,1)
(16,dataCopy = data)
(17,(int64_t)
(18,)
(19,)
(20,result)
(21,printLongLongLine(result)
(22,L)
(23,RAND64()
(24,data)
(25,result)
(26,data = (int64_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^