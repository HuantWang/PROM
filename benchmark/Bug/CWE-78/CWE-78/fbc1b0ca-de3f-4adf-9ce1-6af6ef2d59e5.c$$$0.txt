-----label-----
1
-----code-----
char * CWE78_OS_Command_Injection__char_file_popen_61b_badSource(char * data)
{
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
32,33
32,34
33,34
33,35
34,35
34,36
36,37
39,40
39,41
40,41
41,42
41,43
42,43
44,45
44,46
44,47
45,46
47,48
50,51
50,52
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
58,60
59,60
59,61
59,62
59,63
60,61
62,63
62,64
63,64
65,66
67,68
67,69
68,69
68,70
71,72
72,73
72,74
74,75
76,77
78,79
80,81
80,82
81,82
82,83
82,84
83,84
86,87
87,88
87,89
88,89
88,90
89,90
91,92
94,95
95,96
95,97
96,97
98,99
100,101
101,102
-----nextToken-----
2,4,5,7,9,10,16,18,22,24,28,30,31,35,37,38,43,46,48,49,53,55,61,64,66,69,70,73,75,77,79,84,85,90,92,93,97,99,102
-----computeFrom-----
33,34
33,35
34,35
34,36
41,42
41,43
51,52
51,53
58,59
58,60
62,63
62,64
72,73
72,74
87,88
87,89
-----guardedBy-----
37,92
55,79
53,99
64,90
75,92
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE78_OS_Command_Injection__char_file_popen_61b_badSource(char * data){    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    return data;}
char
* CWE78_OS_Command_Injection__char_file_popen_61b_badSource(char * data)
*
CWE78_OS_Command_Injection__char_file_popen_61b_badSource
char * data
char
* data
*
data
{    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    return data;}
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
return data;
data
data
-----joern-----
(22,13,0)
(13,11,0)
(43,4,0)
(48,33,0)
(14,35,0)
(47,11,0)
(49,27,0)
(40,7,0)
(2,35,0)
(18,9,0)
(11,47,0)
(49,51,0)
(22,9,0)
(0,45,0)
(9,39,0)
(37,10,0)
(5,45,0)
(32,37,0)
(7,40,0)
(26,33,0)
(6,13,0)
(24,51,0)
(19,17,0)
(8,24,0)
(46,24,0)
(1,41,0)
(24,12,0)
(15,12,0)
(39,9,0)
(22,17,0)
(24,11,0)
(28,39,0)
(50,18,0)
(22,40,0)
(29,35,0)
(31,47,0)
(34,22,0)
(42,9,0)
(17,22,0)
(13,51,0)
(38,11,0)
(18,20,0)
(4,40,0)
(36,20,0)
(21,49,0)
(25,49,0)
(35,27,0)
(9,41,0)
(16,39,0)
(13,22,0)
(33,23,0)
(3,4,0)
(45,9,0)
(40,22,0)
(47,51,0)
(12,10,0)
(23,33,0)
(44,13,0)
(4,11,0)
(40,4,0)
(30,23,0)
(11,35,0)
(33,11,0)
(16,42,1)
(33,26,1)
(12,15,1)
(50,17,1)
(23,30,1)
(15,24,1)
(45,0,1)
(9,39,1)
(30,33,1)
(31,38,1)
(40,4,1)
(17,19,1)
(3,43,1)
(8,37,1)
(26,48,1)
(39,28,1)
(40,7,1)
(42,23,1)
(49,51,1)
(0,5,1)
(6,44,1)
(24,46,1)
(50,12,1)
(25,45,1)
(22,34,1)
(11,47,1)
(17,22,1)
(4,11,1)
(46,8,1)
(13,51,1)
(13,6,1)
(18,9,1)
(44,45,1)
(13,11,1)
(4,3,1)
(24,11,1)
(22,13,1)
(25,23,1)
(25,18,1)
(28,16,1)
(49,25,1)
(22,9,1)
(23,33,1)
(18,50,1)
(5,9,1)
(47,51,1)
(24,51,1)
(22,40,1)
(45,9,1)
(33,11,1)
(21,49,1)
(43,13,1)
(32,17,1)
(19,22,1)
(34,40,1)
(47,31,1)
(37,32,1)
(48,11,1)
(22,13,2)
(40,4,2)
(21,49,2)
(4,11,2)
(18,9,2)
(37,17,2)
(43,45,2)
(17,45,2)
(19,45,2)
(47,51,2)
(46,17,2)
(3,45,2)
(13,51,2)
(11,47,2)
(28,23,2)
(44,45,2)
(13,45,2)
(24,51,2)
(45,9,2)
(42,23,2)
(39,23,2)
(24,17,2)
(9,39,2)
(50,45,2)
(49,51,2)
(8,17,2)
(12,17,2)
(17,22,2)
(40,45,2)
(9,23,2)
(4,45,2)
(45,23,2)
(23,33,2)
(34,45,2)
(5,23,2)
(40,7,2)
(13,11,2)
(15,17,2)
(33,11,2)
(22,45,2)
(0,23,2)
(6,45,2)
(32,17,2)
(22,9,2)
(16,23,2)
(22,40,2)
(18,45,2)
(24,11,2)
-----------------------------------
(0,NULL)
(1,if (pFile != NULL)
(2,dataLen)
(3,dataLen)
(4,100-dataLen)
(5,pFile)
(6,dataLen)
(7,int)
(8,data)
(9,pFile = fopen(FILENAME, "r")
(10,)
(11,dataLen = strlen(data)
(12,data[dataLen] = \\\'\\\\0\\\')
(13,data+dataLen)
(14,if (100-dataLen > 1)
(15,\\\'\\\\0\\\')
(16,FILENAME)
(17,fgets(data+dataLen, (int)
(18,fclose(pFile)
(19,NULL)
(20,)
(21,RET)
(22,fgets(data+dataLen, (int)
(23,100-dataLen > 1)
(24,data[dataLen])
(25,data)
(26,dataLen)
(27,)
(28,"r")
(29,pFile)
(30,1)
(31,data)
(32,"fgets()
(33,100-dataLen)
(34,pFile)
(35,)
(36,if (fgets(data+dataLen, (int)
(37,printLine("fgets()
(38,dataLen)
(39,fopen(FILENAME, "r")
(40,(int)
(41,)
(42,pFile)
(43,100)
(44,data)
(45,pFile != NULL)
(46,dataLen)
(47,strlen(data)
(48,100)
(49,return data;)
(50,pFile)
(51,char * data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
