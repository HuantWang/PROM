-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_w32spawnl_67_bad()
{
    char * data;
    CWE78_OS_Command_Injection__char_file_w32spawnl_67_structType myStruct;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    myStruct.structFirst = data;
    CWE78_OS_Command_Injection__char_file_w32spawnl_67b_badSink(myStruct);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
51,53
54,55
54,56
55,56
55,57
56,57
56,58
58,59
61,62
61,63
62,63
63,64
63,65
64,65
66,67
66,68
66,69
67,68
69,70
72,73
72,74
73,74
73,75
74,75
76,77
78,79
78,80
79,80
79,81
80,81
80,82
81,82
81,83
81,84
81,85
82,83
84,85
84,86
85,86
87,88
89,90
89,91
90,91
90,92
93,94
94,95
94,96
96,97
98,99
100,101
102,103
102,104
103,104
104,105
104,106
105,106
108,109
109,110
109,111
110,111
110,112
111,112
113,114
116,117
117,118
117,119
118,119
120,121
122,123
123,124
123,125
124,125
124,126
125,126
128,129
130,131
131,132
131,133
132,133
134,135
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,38,40,44,46,50,52,53,57,59,60,65,68,70,71,75,77,83,86,88,91,92,95,97,99,101,106,107,112,114,115,119,121,126,127,129,133,135
-----computeFrom-----
29,30
29,31
55,56
55,57
56,57
56,58
63,64
63,65
73,74
73,75
80,81
80,82
84,85
84,86
94,95
94,96
109,110
109,111
123,124
123,125
-----guardedBy-----
59,114
77,101
75,121
86,112
97,114
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_w32spawnl_67_bad(){    char * data;    CWE78_OS_Command_Injection__char_file_w32spawnl_67_structType myStruct;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    myStruct.structFirst = data;    CWE78_OS_Command_Injection__char_file_w32spawnl_67b_badSink(myStruct);}
void
CWE78_OS_Command_Injection__char_file_w32spawnl_67_bad()
CWE78_OS_Command_Injection__char_file_w32spawnl_67_bad
{    char * data;    CWE78_OS_Command_Injection__char_file_w32spawnl_67_structType myStruct;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    myStruct.structFirst = data;    CWE78_OS_Command_Injection__char_file_w32spawnl_67b_badSink(myStruct);}
char * data;
char * data;
char
* data
*
data
CWE78_OS_Command_Injection__char_file_w32spawnl_67_structType myStruct;
CWE78_OS_Command_Injection__char_file_w32spawnl_67_structType myStruct;
CWE78_OS_Command_Injection__char_file_w32spawnl_67_structType
CWE78_OS_Command_Injection__char_file_w32spawnl_67_structType
myStruct
myStruct
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
myStruct.structFirst = data;
myStruct.structFirst = data
myStruct.structFirst
myStruct
myStruct
structFirst
data
data
CWE78_OS_Command_Injection__char_file_w32spawnl_67b_badSink(myStruct);
CWE78_OS_Command_Injection__char_file_w32spawnl_67b_badSink(myStruct)
CWE78_OS_Command_Injection__char_file_w32spawnl_67b_badSink
CWE78_OS_Command_Injection__char_file_w32spawnl_67b_badSink
myStruct
myStruct
-----joern-----
(9,55,0)
(10,36,0)
(48,32,0)
(62,60,0)
(15,50,0)
(2,11,0)
(5,46,0)
(22,60,0)
(21,62,0)
(50,11,0)
(55,43,0)
(58,31,0)
(26,34,0)
(11,50,0)
(56,36,0)
(53,58,0)
(19,8,0)
(6,30,0)
(20,32,0)
(23,24,0)
(22,34,0)
(16,32,0)
(37,30,0)
(49,53,0)
(45,60,0)
(25,32,0)
(11,2,0)
(8,32,0)
(43,20,0)
(46,8,0)
(55,23,0)
(50,31,0)
(7,34,0)
(60,39,0)
(59,25,0)
(57,43,0)
(61,43,0)
(63,31,0)
(28,52,0)
(51,57,0)
(40,22,0)
(34,43,0)
(31,36,0)
(22,11,0)
(41,60,0)
(22,29,0)
(17,29,0)
(3,6,0)
(34,22,0)
(31,57,0)
(29,22,0)
(54,58,0)
(13,62,0)
(8,43,0)
(44,55,0)
(4,58,0)
(58,53,0)
(1,20,0)
(35,39,0)
(57,31,0)
(60,62,0)
(18,32,0)
(52,24,0)
(27,46,0)
(38,23,0)
(14,43,0)
(64,36,0)
(11,22,0)
(12,45,0)
(6,60,0)
(0,50,0)
(47,20,0)
(43,32,0)
(55,31,0)
(42,45,0)
(36,32,0)
(34,31,0)
(19,46,1)
(27,45,1)
(50,31,1)
(38,55,1)
(11,50,1)
(9,52,1)
(51,63,1)
(14,20,1)
(29,17,1)
(1,47,1)
(20,1,1)
(45,12,1)
(53,58,1)
(43,61,1)
(45,60,1)
(60,62,1)
(27,6,1)
(54,4,1)
(58,54,1)
(40,11,1)
(31,57,1)
(53,49,1)
(5,27,1)
(28,29,1)
(46,5,1)
(55,43,1)
(52,28,1)
(57,43,1)
(57,51,1)
(33,25,1)
(6,3,1)
(22,60,1)
(63,43,1)
(8,43,1)
(4,31,1)
(50,15,1)
(59,8,1)
(11,2,1)
(62,21,1)
(23,38,1)
(3,23,1)
(34,7,1)
(34,31,1)
(8,19,1)
(3,29,1)
(55,44,1)
(13,41,1)
(42,60,1)
(41,53,1)
(15,0,1)
(12,42,1)
(21,13,1)
(61,14,1)
(44,9,1)
(55,31,1)
(6,60,1)
(25,59,1)
(43,20,1)
(17,22,1)
(26,45,1)
(22,34,1)
(29,22,1)
(49,58,1)
(27,53,1)
(22,40,1)
(22,11,1)
(58,31,1)
(7,26,1)
(34,43,1)
(0,34,1)
(29,45,2)
(50,31,2)
(31,57,2)
(22,60,2)
(26,45,2)
(50,45,2)
(7,45,2)
(62,53,2)
(52,29,2)
(60,53,2)
(22,45,2)
(22,11,2)
(17,45,2)
(28,29,2)
(11,45,2)
(55,31,2)
(38,29,2)
(22,34,2)
(60,62,2)
(40,45,2)
(0,45,2)
(21,53,2)
(45,53,2)
(11,50,2)
(57,43,2)
(45,60,2)
(34,45,2)
(23,29,2)
(6,60,2)
(11,2,2)
(53,58,2)
(55,43,2)
(29,22,2)
(43,20,2)
(12,53,2)
(6,45,2)
(44,29,2)
(42,53,2)
(34,43,2)
(41,53,2)
(13,53,2)
(9,29,2)
(8,43,2)
(3,45,2)
(34,31,2)
(55,29,2)
(58,31,2)
(15,45,2)
-----------------------------------
(0,100)
(1,COMMAND_ARG2)
(2,int)
(3,pFile)
(4,100)
(5,structFirst)
(6,fclose(pFile)
(7,dataLen)
(8,myStruct.structFirst = data)
(9,data)
(10,dataLen)
(11,(int)
(12,NULL)
(13,FILENAME)
(14,data)
(15,dataLen)
(16,data)
(17,NULL)
(18,dataBuffer)
(19,data)
(20,dataBuffer[100] = COMMAND_ARG2)
(21,"r")
(22,fgets(data+dataLen, (int)
(23,data[dataLen] = \\\'\\\\0\\\')
(24,)
(25,CWE78_OS_Command_Injection__char_file_w32spawnl_67b_badSink(myStruct)
(26,data)
(27,myStruct)
(28,"fgets()
(29,fgets(data+dataLen, (int)
(30,)
(31,dataLen = strlen(data)
(32,)
(33,RET)
(34,data+dataLen)
(35,if (pFile != NULL)
(36,)
(37,if (fgets(data+dataLen, (int)
(38,\\\'\\\\0\\\')
(39,)
(40,pFile)
(41,pFile)
(42,pFile)
(43,data = dataBuffer)
(44,dataLen)
(45,pFile != NULL)
(46,myStruct.structFirst)
(47,dataBuffer)
(48,myStruct)
(49,1)
(50,100-dataLen)
(51,data)
(52,printLine("fgets()
(53,100-dataLen > 1)
(54,dataLen)
(55,data[dataLen])
(56,pFile)
(57,strlen(data)
(58,100-dataLen)
(59,myStruct)
(60,pFile = fopen(FILENAME, "r")
(61,dataBuffer)
(62,fopen(FILENAME, "r")
(63,dataLen)
(64,if (100-dataLen > 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
