-----label-----
1
-----code-----
char * CWE78_OS_Command_Injection__char_file_popen_22_badSource(char * data)
{
    if(CWE78_OS_Command_Injection__char_file_popen_22_badGlobal)
    {
        {
            /* Read input from a file */
            size_t dataLen = strlen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (100-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                    {
                        printLine("fgets() failed");
                        /* Restore NUL terminator if fgets fails */
                        data[dataLen] = '\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
13,14
15,16
16,17
16,18
16,19
17,18
18,19
18,20
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
31,32
33,34
33,35
36,37
36,38
37,38
37,39
38,39
38,40
40,41
43,44
43,45
44,45
45,46
45,47
46,47
48,49
48,50
48,51
49,50
51,52
54,55
54,56
55,56
55,57
56,57
58,59
60,61
60,62
61,62
61,63
62,63
62,64
63,64
63,65
63,66
63,67
64,65
66,67
66,68
67,68
69,70
71,72
71,73
72,73
72,74
75,76
76,77
76,78
78,79
80,81
82,83
84,85
84,86
85,86
86,87
86,88
87,88
90,91
91,92
91,93
92,93
92,94
93,94
95,96
98,99
99,100
99,101
100,101
102,103
104,105
105,106
-----nextToken-----
2,4,5,7,9,10,14,20,22,26,28,32,34,35,39,41,42,47,50,52,53,57,59,65,68,70,73,74,77,79,81,83,88,89,94,96,97,101,103,106
-----computeFrom-----
37,38
37,39
38,39
38,40
45,46
45,47
55,56
55,57
62,63
62,64
66,67
66,68
76,77
76,78
91,92
91,93
-----guardedBy-----
41,96
59,83
57,103
68,94
79,96
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE78_OS_Command_Injection__char_file_popen_22_badSource(char * data){    if(CWE78_OS_Command_Injection__char_file_popen_22_badGlobal)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    return data;}
char
* CWE78_OS_Command_Injection__char_file_popen_22_badSource(char * data)
*
CWE78_OS_Command_Injection__char_file_popen_22_badSource
char * data
char
* data
*
data
{    if(CWE78_OS_Command_Injection__char_file_popen_22_badGlobal)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    return data;}
if(CWE78_OS_Command_Injection__char_file_popen_22_badGlobal)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
CWE78_OS_Command_Injection__char_file_popen_22_badGlobal
CWE78_OS_Command_Injection__char_file_popen_22_badGlobal
{        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
return data;
data
data
-----joern-----
(8,17,0)
(28,0,0)
(31,9,0)
(12,38,0)
(5,22,0)
(1,21,0)
(18,33,0)
(10,50,0)
(22,41,0)
(34,13,0)
(0,13,0)
(41,22,0)
(43,46,0)
(21,7,0)
(37,34,0)
(40,17,0)
(36,34,0)
(15,27,0)
(49,47,0)
(39,12,0)
(53,27,0)
(27,24,0)
(23,13,0)
(42,26,0)
(20,21,0)
(38,41,0)
(38,40,0)
(22,13,0)
(13,27,0)
(25,11,0)
(9,46,0)
(34,51,0)
(52,40,0)
(4,40,0)
(13,0,0)
(19,41,0)
(3,38,0)
(21,51,0)
(11,38,0)
(33,26,0)
(46,9,0)
(14,2,0)
(38,12,0)
(46,13,0)
(40,50,0)
(41,38,0)
(29,7,0)
(17,40,0)
(32,11,0)
(6,27,0)
(38,11,0)
(30,46,0)
(54,52,0)
(45,52,0)
(48,22,0)
(41,19,0)
(34,2,0)
(44,49,0)
(0,51,0)
(11,51,0)
(33,40,0)
(16,17,0)
(2,47,0)
(11,13,0)
(34,37,1)
(11,25,1)
(40,17,1)
(21,20,1)
(41,22,1)
(20,35,1)
(9,46,1)
(31,46,1)
(20,9,1)
(11,13,1)
(34,51,1)
(12,38,1)
(44,12,1)
(45,40,1)
(43,13,1)
(30,43,1)
(8,16,1)
(3,41,1)
(22,13,1)
(48,5,1)
(2,14,1)
(28,23,1)
(41,19,1)
(38,3,1)
(49,44,1)
(12,39,1)
(38,40,1)
(9,31,1)
(14,34,1)
(33,40,1)
(32,52,1)
(4,9,1)
(52,40,1)
(38,41,1)
(20,52,1)
(22,48,1)
(46,13,1)
(23,35,1)
(39,38,1)
(21,51,1)
(13,0,1)
(18,2,1)
(54,45,1)
(17,8,1)
(25,32,1)
(0,51,1)
(11,51,1)
(37,36,1)
(38,11,1)
(16,4,1)
(52,54,1)
(1,21,1)
(5,11,1)
(33,18,1)
(20,33,1)
(46,30,1)
(36,49,1)
(0,28,1)
(34,13,1)
(18,12,1)
(49,12,2)
(2,12,2)
(0,35,2)
(30,35,2)
(46,13,2)
(41,52,2)
(12,38,2)
(23,35,2)
(1,21,2)
(40,17,2)
(16,9,2)
(38,52,2)
(13,35,2)
(21,51,2)
(39,52,2)
(41,19,2)
(37,12,2)
(14,12,2)
(48,52,2)
(52,40,2)
(54,9,2)
(28,35,2)
(40,9,2)
(33,52,2)
(25,52,2)
(38,40,2)
(45,9,2)
(11,52,2)
(33,40,2)
(32,52,2)
(8,9,2)
(18,52,2)
(9,35,2)
(3,52,2)
(31,35,2)
(22,52,2)
(13,0,2)
(38,11,2)
(38,41,2)
(17,9,2)
(11,13,2)
(36,12,2)
(44,12,2)
(4,9,2)
(46,35,2)
(11,51,2)
(43,35,2)
(34,51,2)
(9,46,2)
(52,9,2)
(41,22,2)
(0,51,2)
(22,13,2)
(12,52,2)
(34,12,2)
(5,52,2)
(34,13,2)
-----------------------------------
(0,strlen(data)
(1,RET)
(2,data[dataLen] = \\\'\\\\0\\\')
(3,pFile)
(4,pFile)
(5,100)
(6,pFile)
(7,)
(8,"r")
(9,100-dataLen > 1)
(10,if (pFile != NULL)
(11,data+dataLen)
(12,fgets(data+dataLen, (int)
(13,dataLen = strlen(data)
(14,\\\'\\\\0\\\')
(15,if (100-dataLen > 1)
(16,FILENAME)
(17,fopen(FILENAME, "r")
(18,pFile)
(19,int)
(20,data)
(21,return data;)
(22,100-dataLen)
(23,dataLen)
(24,)
(25,dataLen)
(26,)
(27,)
(28,data)
(29,if(CWE78_OS_Command_Injection__char_file_popen_22_badGlobal)
(30,dataLen)
(31,1)
(32,data)
(33,fclose(pFile)
(34,data[dataLen])
(35,CWE78_OS_Command_Injection__char_file_popen_22_badGlobal)
(36,data)
(37,dataLen)
(38,fgets(data+dataLen, (int)
(39,NULL)
(40,pFile = fopen(FILENAME, "r")
(41,(int)
(42,if (fgets(data+dataLen, (int)
(43,100)
(44,"fgets()
(45,pFile)
(46,100-dataLen)
(47,)
(48,dataLen)
(49,printLine("fgets()
(50,)
(51,char * data)
(52,pFile != NULL)
(53,dataLen)
(54,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
