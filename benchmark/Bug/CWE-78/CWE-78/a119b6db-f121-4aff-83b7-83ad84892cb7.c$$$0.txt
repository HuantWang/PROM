-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_file_system_14_bad()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(globalFive==5)
    {
        {
            /* Read input from a file */
            size_t dataLen = wcslen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (100-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                    {
                        printLine("fgetws() failed");
                        /* Restore NUL terminator if fgetws fails */
                        data[dataLen] = L'\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
51,53
54,55
54,56
55,56
55,57
56,57
56,58
58,59
61,62
61,63
62,63
63,64
63,65
64,65
66,67
66,68
66,69
67,68
69,70
72,73
72,74
73,74
73,75
74,75
76,77
78,79
78,80
79,80
79,81
80,81
80,82
81,82
81,83
81,84
81,85
82,83
84,85
84,86
85,86
87,88
89,90
89,91
90,91
90,92
93,94
94,95
94,96
96,97
98,99
100,101
102,103
102,104
103,104
104,105
104,106
105,106
108,109
109,110
109,111
110,111
110,112
111,112
113,114
116,117
117,118
117,119
118,119
120,121
122,123
122,124
123,124
123,125
124,125
124,126
125,126
127,128
130,131
130,132
131,132
132,133
132,134
133,134
136,137
137,138
137,139
138,139
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,38,40,44,46,50,52,53,57,59,60,65,68,70,71,75,77,83,86,88,91,92,95,97,99,101,106,107,112,114,115,119,121,126,128,129,134,135,139,140
-----computeFrom-----
23,24
23,25
29,30
29,31
55,56
55,57
56,57
56,58
63,64
63,65
73,74
73,75
80,81
80,82
84,85
84,86
94,95
94,96
109,110
109,111
123,124
123,125
-----guardedBy-----
59,114
77,101
75,121
86,112
97,114
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_file_system_14_bad(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalFive==5)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__wchar_t_file_system_14_bad()
CWE78_OS_Command_Injection__wchar_t_file_system_14_bad
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalFive==5)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(globalFive==5)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }
if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }
fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(100-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(33,11,0)
(54,28,0)
(13,0,0)
(39,38,0)
(19,39,0)
(0,63,0)
(6,30,0)
(0,23,0)
(42,29,0)
(5,40,0)
(33,28,0)
(51,42,0)
(26,10,0)
(63,0,0)
(57,11,0)
(21,63,0)
(27,35,0)
(24,29,0)
(40,45,0)
(9,23,0)
(52,28,0)
(10,62,0)
(29,42,0)
(49,33,0)
(58,54,0)
(24,45,0)
(40,48,0)
(14,9,0)
(17,45,0)
(50,66,0)
(36,31,0)
(64,23,0)
(29,24,0)
(14,29,0)
(29,14,0)
(14,47,0)
(28,12,0)
(22,24,0)
(34,38,0)
(9,14,0)
(47,14,0)
(44,48,0)
(61,29,0)
(60,45,0)
(67,66,0)
(59,31,0)
(45,37,0)
(28,32,0)
(3,37,0)
(1,35,0)
(20,32,0)
(12,28,0)
(16,0,0)
(41,54,0)
(56,37,0)
(29,28,0)
(65,12,0)
(2,24,0)
(30,62,0)
(4,45,0)
(46,17,0)
(37,35,0)
(53,35,0)
(24,23,0)
(25,9,0)
(18,9,0)
(23,31,0)
(45,35,0)
(55,35,0)
(43,31,0)
(8,12,0)
(17,23,0)
(23,17,0)
(31,7,0)
(48,40,0)
(18,24,1)
(50,67,1)
(5,66,1)
(10,26,1)
(24,2,1)
(6,10,1)
(41,28,1)
(12,65,1)
(26,48,1)
(29,24,1)
(33,49,1)
(54,28,1)
(63,0,1)
(34,39,1)
(15,48,1)
(24,23,1)
(64,66,1)
(9,25,1)
(3,56,1)
(0,23,1)
(21,0,1)
(33,28,1)
(42,51,1)
(49,42,1)
(24,45,1)
(17,45,1)
(28,12,1)
(19,42,1)
(29,14,1)
(13,16,1)
(42,29,1)
(4,60,1)
(45,4,1)
(14,9,1)
(5,63,1)
(23,17,1)
(44,40,1)
(51,29,1)
(39,19,1)
(54,58,1)
(37,3,1)
(16,23,1)
(9,23,1)
(58,41,1)
(45,37,1)
(63,21,1)
(17,46,1)
(49,34,1)
(29,61,1)
(65,8,1)
(52,63,1)
(48,40,1)
(30,6,1)
(60,37,1)
(5,33,1)
(48,44,1)
(0,13,1)
(66,50,1)
(15,30,1)
(40,5,1)
(8,52,1)
(29,28,1)
(61,14,1)
(67,45,1)
(2,22,1)
(40,45,1)
(46,64,1)
(14,47,1)
(5,54,1)
(25,18,1)
(22,54,1)
(54,28,2)
(65,63,2)
(16,66,2)
(17,45,2)
(6,48,2)
(26,48,2)
(39,42,2)
(24,23,2)
(18,54,2)
(24,54,2)
(28,63,2)
(22,54,2)
(48,40,2)
(13,66,2)
(9,23,2)
(12,63,2)
(9,54,2)
(58,63,2)
(0,23,2)
(61,54,2)
(33,28,2)
(24,45,2)
(34,42,2)
(29,24,2)
(19,42,2)
(33,54,2)
(49,54,2)
(42,54,2)
(54,63,2)
(63,0,2)
(21,66,2)
(23,17,2)
(40,45,2)
(25,54,2)
(51,54,2)
(64,66,2)
(0,66,2)
(28,12,2)
(63,66,2)
(2,54,2)
(29,14,2)
(52,63,2)
(8,63,2)
(41,63,2)
(17,66,2)
(14,47,2)
(29,54,2)
(14,9,2)
(42,29,2)
(30,48,2)
(29,28,2)
(10,48,2)
(14,54,2)
(23,66,2)
(45,37,2)
(46,66,2)
-----------------------------------
(0,100-dataLen)
(1,if (SYSTEM(data)
(2,dataLen)
(3,FULL_COMMAND)
(4,data_buf)
(5,data)
(6,1)
(7,)
(8,FILENAME)
(9,100-dataLen)
(10,printLine("command execution failed!")
(11,)
(12,fopen(FILENAME, "r")
(13,dataLen)
(14,(int)
(15,RET)
(16,100)
(17,wcslen(data)
(18,100)
(19,"fgetws()
(20,if (pFile != NULL)
(21,1)
(22,data)
(23,dataLen = wcslen(data)
(24,data+dataLen)
(25,dataLen)
(26,"command execution failed!")
(27,data)
(28,pFile = fopen(FILENAME, "r")
(29,fgetws(data+dataLen, (int)
(30,exit(1)
(31,)
(32,)
(33,fclose(pFile)
(34,\\\'\\\\0\\\')
(35,)
(36,pFile)
(37,data_buf[100] = FULL_COMMAND)
(38,)
(39,printLine("fgetws()
(40,SYSTEM(data)
(41,pFile)
(42,fgetws(data+dataLen, (int)
(43,dataLen)
(44,0)
(45,data = data_buf)
(46,data)
(47,int)
(48,SYSTEM(data)
(49,pFile)
(50,5)
(51,NULL)
(52,pFile)
(53,data_buf)
(54,pFile != NULL)
(55,if(globalFive==5)
(56,data_buf)
(57,if (fgetws(data+dataLen, (int)
(58,NULL)
(59,if (100-dataLen > 1)
(60,data)
(61,pFile)
(62,)
(63,100-dataLen > 1)
(64,dataLen)
(65,"r")
(66,globalFive==5)
(67,globalFive)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
