-----label-----
1
-----code-----
char * CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badSource(char * data)
{
    if(CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal)
    {
        {
            /* Read input from a file */
            size_t dataLen = strlen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (100-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                    {
                        printLine("fgets() failed");
                        /* Restore NUL terminator if fgets fails */
                        data[dataLen] = '\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
13,14
15,16
16,17
16,18
16,19
17,18
18,19
18,20
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
31,32
33,34
33,35
36,37
36,38
37,38
37,39
38,39
38,40
40,41
43,44
43,45
44,45
45,46
45,47
46,47
48,49
48,50
48,51
49,50
51,52
54,55
54,56
55,56
55,57
56,57
58,59
60,61
60,62
61,62
61,63
62,63
62,64
63,64
63,65
63,66
63,67
64,65
66,67
66,68
67,68
69,70
71,72
71,73
72,73
72,74
75,76
76,77
76,78
78,79
80,81
82,83
84,85
84,86
85,86
86,87
86,88
87,88
90,91
91,92
91,93
92,93
92,94
93,94
95,96
98,99
99,100
99,101
100,101
102,103
104,105
105,106
-----nextToken-----
2,4,5,7,9,10,14,20,22,26,28,32,34,35,39,41,42,47,50,52,53,57,59,65,68,70,73,74,77,79,81,83,88,89,94,96,97,101,103,106
-----computeFrom-----
37,38
37,39
38,39
38,40
45,46
45,47
55,56
55,57
62,63
62,64
66,67
66,68
76,77
76,78
91,92
91,93
-----guardedBy-----
41,96
59,83
57,103
68,94
79,96
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badSource(char * data){    if(CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    return data;}
char
* CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badSource(char * data)
*
CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badSource
char * data
char
* data
*
data
{    if(CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    return data;}
if(CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal
CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal
{        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
return data;
data
data
-----joern-----
(36,53,0)
(42,20,0)
(24,41,0)
(7,21,0)
(54,28,0)
(5,22,0)
(7,1,0)
(2,53,0)
(47,46,0)
(44,2,0)
(3,7,0)
(13,51,0)
(6,8,0)
(46,40,0)
(38,21,0)
(17,18,0)
(51,2,0)
(15,40,0)
(11,18,0)
(1,9,0)
(31,51,0)
(19,18,0)
(22,2,0)
(39,20,0)
(10,53,0)
(30,37,0)
(27,49,0)
(43,28,0)
(28,54,0)
(8,0,0)
(18,19,0)
(49,0,0)
(20,7,0)
(32,17,0)
(53,2,0)
(12,41,0)
(22,48,0)
(19,14,0)
(7,2,0)
(4,17,0)
(23,19,0)
(2,29,0)
(7,20,0)
(1,7,0)
(28,18,0)
(21,7,0)
(20,14,0)
(46,14,0)
(26,29,0)
(17,49,0)
(1,41,0)
(45,54,0)
(18,37,0)
(25,28,0)
(9,1,0)
(50,37,0)
(41,1,0)
(16,46,0)
(17,14,0)
(37,35,0)
(34,37,0)
(20,18,0)
(41,18,0)
(52,48,0)
(24,20,1)
(16,46,1)
(38,7,1)
(7,3,1)
(47,33,1)
(43,18,1)
(49,27,1)
(18,19,1)
(1,41,1)
(12,24,1)
(4,32,1)
(53,10,1)
(6,21,1)
(42,39,1)
(20,14,1)
(46,14,1)
(17,14,1)
(2,53,1)
(17,4,1)
(21,38,1)
(47,51,1)
(22,5,1)
(8,6,1)
(32,8,1)
(47,22,1)
(11,33,1)
(41,18,1)
(44,54,1)
(51,13,1)
(1,9,1)
(25,43,1)
(54,28,1)
(13,31,1)
(46,47,1)
(7,20,1)
(21,7,1)
(39,51,1)
(31,2,1)
(28,25,1)
(17,18,1)
(22,2,1)
(7,2,1)
(51,2,1)
(28,18,1)
(7,1,1)
(20,18,1)
(45,28,1)
(3,1,1)
(20,42,1)
(10,36,1)
(23,11,1)
(47,54,1)
(19,14,1)
(36,44,1)
(5,49,1)
(27,17,1)
(54,45,1)
(19,23,1)
(41,12,1)
(5,21,1)
(17,18,2)
(38,51,2)
(41,18,2)
(17,21,2)
(7,20,2)
(18,19,2)
(45,33,2)
(19,14,2)
(7,2,2)
(21,51,2)
(43,33,2)
(41,51,2)
(32,21,2)
(24,51,2)
(5,51,2)
(18,33,2)
(44,54,2)
(20,51,2)
(22,2,2)
(11,33,2)
(4,21,2)
(6,21,2)
(49,21,2)
(22,51,2)
(2,53,2)
(20,14,2)
(1,9,2)
(13,54,2)
(20,18,2)
(51,54,2)
(16,46,2)
(53,54,2)
(31,54,2)
(39,51,2)
(7,51,2)
(1,51,2)
(25,33,2)
(27,21,2)
(54,28,2)
(12,51,2)
(1,41,2)
(28,33,2)
(46,14,2)
(42,51,2)
(23,33,2)
(36,54,2)
(54,33,2)
(19,33,2)
(2,54,2)
(7,1,2)
(10,54,2)
(28,18,2)
(8,21,2)
(3,51,2)
(51,2,2)
(17,14,2)
(21,7,2)
-----------------------------------
(0,)
(1,(int)
(2,pFile = fopen(FILENAME, "r")
(3,pFile)
(4,dataLen)
(5,pFile)
(6,"fgets()
(7,fgets(data+dataLen, (int)
(8,printLine("fgets()
(9,int)
(10,"r")
(11,dataLen)
(12,dataLen)
(13,NULL)
(14,char * data)
(15,if(CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal)
(16,RET)
(17,data[dataLen])
(18,dataLen = strlen(data)
(19,strlen(data)
(20,data+dataLen)
(21,fgets(data+dataLen, (int)
(22,fclose(pFile)
(23,data)
(24,100)
(25,dataLen)
(26,if (pFile != NULL)
(27,\\\'\\\\0\\\')
(28,100-dataLen)
(29,)
(30,dataLen)
(31,pFile)
(32,data)
(33,CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal)
(34,if (100-dataLen > 1)
(35,)
(36,FILENAME)
(37,)
(38,NULL)
(39,data)
(40,)
(41,100-dataLen)
(42,dataLen)
(43,100)
(44,pFile)
(45,1)
(46,return data;)
(47,data)
(48,)
(49,data[dataLen] = \\\'\\\\0\\\')
(50,pFile)
(51,pFile != NULL)
(52,if (fgets(data+dataLen, (int)
(53,fopen(FILENAME, "r")
(54,100-dataLen > 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
