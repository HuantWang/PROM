-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execlp_02_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* execlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
80,81
81,82
81,83
81,84
81,85
81,86
81,87
82,83
84,85
86,87
88,89
90,91
92,93
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,83,85,87,89,91,93
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execlp_02_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execlp_02_bad()
CWE78_OS_Command_Injection__char_environment_execlp_02_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(8,43,0)
(19,41,0)
(25,21,0)
(3,15,0)
(22,38,0)
(44,37,0)
(17,44,0)
(4,8,0)
(24,21,0)
(5,17,0)
(21,43,0)
(13,31,0)
(28,31,0)
(30,31,0)
(34,13,0)
(15,17,0)
(41,44,0)
(33,43,0)
(35,21,0)
(29,43,0)
(13,17,0)
(41,19,0)
(22,13,0)
(10,44,0)
(31,43,0)
(9,22,0)
(16,20,0)
(1,44,0)
(15,9,0)
(6,21,0)
(20,41,0)
(18,21,0)
(12,20,0)
(17,5,0)
(9,15,0)
(39,15,0)
(32,41,0)
(13,22,0)
(40,9,0)
(2,5,0)
(22,41,0)
(5,31,0)
(23,22,0)
(0,44,0)
(22,9,0)
(42,13,0)
(31,8,0)
(11,43,0)
(27,8,0)
(26,17,0)
(7,19,0)
(13,17,1)
(32,17,1)
(23,13,1)
(12,41,1)
(6,20,1)
(31,8,1)
(40,23,1)
(27,4,1)
(20,16,1)
(26,14,1)
(21,24,1)
(24,25,1)
(15,3,1)
(30,8,1)
(6,22,1)
(28,30,1)
(13,42,1)
(19,7,1)
(5,31,1)
(17,5,1)
(20,41,1)
(2,26,1)
(14,31,1)
(16,12,1)
(41,19,1)
(34,20,1)
(6,14,1)
(9,15,1)
(36,21,1)
(31,28,1)
(8,27,1)
(22,41,1)
(25,35,1)
(42,34,1)
(39,40,1)
(7,32,1)
(13,31,1)
(3,39,1)
(22,13,1)
(18,6,1)
(35,18,1)
(15,17,1)
(5,2,1)
(22,9,1)
(31,8,2)
(22,20,2)
(40,20,2)
(26,14,2)
(9,15,2)
(17,5,2)
(17,14,2)
(5,14,2)
(19,14,2)
(15,20,2)
(7,14,2)
(34,20,2)
(20,41,2)
(5,31,2)
(22,13,2)
(15,17,2)
(2,14,2)
(9,20,2)
(13,20,2)
(42,20,2)
(22,9,2)
(16,14,2)
(13,31,2)
(39,20,2)
(12,14,2)
(3,20,2)
(32,14,2)
(41,19,2)
(13,17,2)
(22,41,2)
(20,14,2)
(23,20,2)
(41,14,2)
-----------------------------------
(0,if (environment != NULL)
(1,dataLen)
(2,data)
(3,1)
(4,dataBuffer)
(5,strlen(data)
(6,COMMAND_INT)
(7,ENV_VARIABLE)
(8,dataBuffer[100] = COMMAND_ARG2)
(9,100-dataLen-1)
(10,environment)
(11,if(1)
(12,environment)
(13,data+dataLen)
(14,1)
(15,dataLen-1)
(16,NULL)
(17,dataLen = strlen(data)
(18,COMMAND_INT)
(19,GETENV(ENV_VARIABLE)
(20,environment != NULL)
(21,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(22,strncat(data+dataLen, environment, 100-dataLen-1)
(23,environment)
(24,NULL)
(25,COMMAND_ARG3)
(26,dataLen)
(27,COMMAND_ARG2)
(28,dataBuffer)
(29,data)
(30,data)
(31,data = dataBuffer)
(32,environment)
(33,dataBuffer)
(34,data)
(35,COMMAND_ARG1)
(36,RET)
(37,)
(38,)
(39,dataLen)
(40,100)
(41,* environment = GETENV(ENV_VARIABLE)
(42,dataLen)
(43,)
(44,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
