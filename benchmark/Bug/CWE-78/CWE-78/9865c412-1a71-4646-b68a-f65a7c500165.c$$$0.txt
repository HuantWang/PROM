-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_system_12_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(globalReturnsTrueOrFalse())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
84,85
84,86
84,87
85,86
87,88
90,91
90,92
91,92
91,93
92,93
92,94
93,94
95,96
98,99
98,100
99,100
100,101
100,102
101,102
104,105
105,106
105,107
106,107
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,94,96,97,102,103,107,108
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
91,92
91,93
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_system_12_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_environment_system_12_bad()
CWE78_OS_Command_Injection__char_environment_system_12_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(31,38,0)
(51,25,0)
(42,24,0)
(32,0,0)
(36,9,0)
(35,38,0)
(1,5,0)
(26,32,0)
(45,4,0)
(21,24,0)
(34,13,0)
(8,11,0)
(33,0,0)
(30,12,0)
(47,21,0)
(45,5,0)
(20,5,0)
(25,45,0)
(14,31,0)
(25,38,0)
(29,4,0)
(18,25,0)
(13,0,0)
(23,9,0)
(32,14,0)
(21,45,0)
(17,10,0)
(28,8,0)
(32,52,0)
(22,12,0)
(16,35,0)
(35,45,0)
(19,10,0)
(5,4,0)
(48,31,0)
(0,13,0)
(38,12,0)
(14,32,0)
(38,35,0)
(40,4,0)
(10,0,0)
(27,4,0)
(2,45,0)
(39,12,0)
(25,32,0)
(8,45,0)
(32,25,0)
(37,14,0)
(0,12,0)
(6,4,0)
(44,8,0)
(3,36,0)
(46,23,0)
(31,14,0)
(12,50,0)
(15,45,0)
(24,21,0)
(43,31,0)
(7,38,0)
(14,31,1)
(45,5,1)
(24,21,1)
(43,48,1)
(33,38,1)
(51,18,1)
(45,2,1)
(17,19,1)
(48,37,1)
(32,14,1)
(41,24,1)
(47,10,1)
(35,45,1)
(8,45,1)
(19,0,1)
(25,51,1)
(23,46,1)
(44,28,1)
(21,45,1)
(47,32,1)
(37,26,1)
(32,25,1)
(28,49,1)
(5,1,1)
(0,13,1)
(24,42,1)
(26,25,1)
(34,33,1)
(32,0,1)
(13,34,1)
(21,47,1)
(2,15,1)
(15,5,1)
(7,49,1)
(18,10,1)
(42,21,1)
(25,45,1)
(31,38,1)
(1,20,1)
(31,43,1)
(38,35,1)
(35,16,1)
(25,38,1)
(41,23,1)
(10,17,1)
(8,44,1)
(16,7,1)
(49,45,1)
(10,0,1)
(47,8,1)
(46,36,1)
(3,24,1)
(36,3,1)
(3,24,2)
(26,10,2)
(19,49,2)
(18,10,2)
(35,45,2)
(0,49,2)
(31,38,2)
(0,13,2)
(16,49,2)
(45,5,2)
(32,10,2)
(38,49,2)
(35,49,2)
(14,31,2)
(31,10,2)
(33,49,2)
(10,0,2)
(17,49,2)
(44,49,2)
(23,24,2)
(25,45,2)
(7,49,2)
(38,35,2)
(46,24,2)
(48,10,2)
(34,49,2)
(21,45,2)
(24,21,2)
(8,45,2)
(36,24,2)
(37,10,2)
(28,49,2)
(13,49,2)
(14,10,2)
(25,38,2)
(51,10,2)
(25,10,2)
(8,49,2)
(32,14,2)
(32,25,2)
(32,0,2)
(10,49,2)
(43,10,2)
-----------------------------------
(0,* environment = GETENV(ENV_VARIABLE)
(1,FULL_COMMAND)
(2,data_buf)
(3,"command execution failed!")
(4,)
(5,data_buf[100] = FULL_COMMAND)
(6,if(globalReturnsTrueOrFalse()
(7,dataLen)
(8,strcat(data, "*.*")
(9,)
(10,environment != NULL)
(11,)
(12,)
(13,GETENV(ENV_VARIABLE)
(14,100-dataLen-1)
(15,data)
(16,data)
(17,NULL)
(18,data)
(19,environment)
(20,data_buf)
(21,SYSTEM(data)
(22,dataLen)
(23,exit(1)
(24,SYSTEM(data)
(25,data+dataLen)
(26,environment)
(27,data_buf)
(28,data)
(29,if (SYSTEM(data)
(30,if (environment != NULL)
(31,dataLen-1)
(32,strncat(data+dataLen, environment, 100-dataLen-1)
(33,environment)
(34,ENV_VARIABLE)
(35,strlen(data)
(36,printLine("command execution failed!")
(37,100)
(38,dataLen = strlen(data)
(39,environment)
(40,data)
(41,RET)
(42,0)
(43,1)
(44,"*.*")
(45,data = data_buf)
(46,1)
(47,data)
(48,dataLen)
(49,globalReturnsTrueOrFalse()
(50,)
(51,dataLen)
(52,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
