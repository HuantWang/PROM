-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execlp_11_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* execlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
83,85
83,86
83,87
83,88
83,89
84,85
86,87
88,89
90,91
92,93
94,95
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,85,87,89,91,93,95
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execlp_11_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execlp_11_bad()
CWE78_OS_Command_Injection__char_environment_execlp_11_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(25,33,0)
(43,32,0)
(10,19,0)
(33,25,0)
(27,21,0)
(6,27,0)
(21,32,0)
(29,30,0)
(28,42,0)
(40,21,0)
(4,19,0)
(22,10,0)
(27,10,0)
(34,23,0)
(33,26,0)
(3,11,0)
(32,21,0)
(36,5,0)
(38,26,0)
(26,27,0)
(35,23,0)
(44,11,0)
(26,11,0)
(11,44,0)
(15,27,0)
(8,36,0)
(42,23,0)
(13,30,0)
(26,33,0)
(16,42,0)
(24,42,0)
(17,42,0)
(11,36,0)
(19,23,0)
(25,21,0)
(37,25,0)
(18,36,0)
(10,23,0)
(27,26,0)
(20,42,0)
(30,11,0)
(32,10,0)
(39,19,0)
(41,23,0)
(7,25,0)
(21,36,0)
(2,44,0)
(26,1,0)
(31,33,0)
(12,10,0)
(9,36,0)
(32,10,1)
(40,14,1)
(26,33,1)
(39,4,1)
(20,28,1)
(27,10,1)
(27,6,1)
(6,15,1)
(32,43,1)
(31,38,1)
(15,30,1)
(30,11,1)
(10,22,1)
(29,11,1)
(42,24,1)
(38,27,1)
(30,13,1)
(26,11,1)
(25,21,1)
(19,39,1)
(11,44,1)
(33,25,1)
(10,19,1)
(7,31,1)
(17,30,1)
(24,16,1)
(17,26,1)
(27,21,1)
(2,3,1)
(26,27,1)
(21,32,1)
(25,37,1)
(12,19,1)
(14,10,1)
(22,12,1)
(17,14,1)
(37,7,1)
(44,2,1)
(3,21,1)
(16,20,1)
(28,17,1)
(13,29,1)
(43,40,1)
(0,42,1)
(33,30,2)
(38,30,2)
(7,30,2)
(10,19,2)
(21,14,2)
(26,27,2)
(25,30,2)
(27,10,2)
(33,25,2)
(3,14,2)
(26,11,2)
(30,14,2)
(44,14,2)
(32,10,2)
(11,14,2)
(32,14,2)
(15,30,2)
(30,11,2)
(27,30,2)
(43,14,2)
(31,30,2)
(25,21,2)
(26,33,2)
(21,32,2)
(29,14,2)
(13,14,2)
(37,30,2)
(11,44,2)
(2,14,2)
(27,21,2)
(6,30,2)
(40,14,2)
(26,30,2)
-----------------------------------
(0,RET)
(1,)
(2,ENV_VARIABLE)
(3,environment)
(4,dataBuffer)
(5,)
(6,dataLen)
(7,dataLen)
(8,if (environment != NULL)
(9,dataLen)
(10,data = dataBuffer)
(11,* environment = GETENV(ENV_VARIABLE)
(12,data)
(13,NULL)
(14,globalReturnsTrue()
(15,data)
(16,COMMAND_ARG3)
(17,COMMAND_INT)
(18,environment)
(19,dataBuffer[100] = COMMAND_ARG2)
(20,COMMAND_ARG1)
(21,dataLen = strlen(data)
(22,dataBuffer)
(23,)
(24,NULL)
(25,dataLen-1)
(26,strncat(data+dataLen, environment, 100-dataLen-1)
(27,data+dataLen)
(28,COMMAND_INT)
(29,environment)
(30,environment != NULL)
(31,100)
(32,strlen(data)
(33,100-dataLen-1)
(34,dataBuffer)
(35,data)
(36,)
(37,1)
(38,environment)
(39,COMMAND_ARG2)
(40,dataLen)
(41,if(globalReturnsTrue()
(42,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(43,data)
(44,GETENV(ENV_VARIABLE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
