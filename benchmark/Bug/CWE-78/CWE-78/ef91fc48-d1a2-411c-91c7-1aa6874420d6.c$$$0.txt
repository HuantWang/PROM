-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_w32_execvp_45_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE78_OS_Command_Injection__char_file_w32_execvp_45_badData = data;
    badSink();
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
118,119
120,121
122,123
123,124
124,125
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,121,125
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
117,118
117,119
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_w32_execvp_45_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_w32_execvp_45_badData = data;    badSink();}
void
CWE78_OS_Command_Injection__char_file_w32_execvp_45_bad()
CWE78_OS_Command_Injection__char_file_w32_execvp_45_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_w32_execvp_45_badData = data;    badSink();}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE78_OS_Command_Injection__char_file_w32_execvp_45_badData = data;
CWE78_OS_Command_Injection__char_file_w32_execvp_45_badData = data
CWE78_OS_Command_Injection__char_file_w32_execvp_45_badData
CWE78_OS_Command_Injection__char_file_w32_execvp_45_badData
data
data
badSink();
badSink()
badSink
badSink
-----joern-----
(41,31,0)
(4,51,0)
(57,23,0)
(11,35,0)
(56,25,0)
(32,29,0)
(43,26,0)
(42,32,0)
(20,60,0)
(44,51,0)
(14,40,0)
(18,29,0)
(38,24,0)
(39,56,0)
(40,19,0)
(3,51,0)
(47,52,0)
(24,52,0)
(30,25,0)
(58,22,0)
(54,25,0)
(6,26,0)
(48,56,0)
(2,31,0)
(59,30,0)
(8,36,0)
(35,21,0)
(36,23,0)
(55,21,0)
(26,15,0)
(60,25,0)
(26,25,0)
(46,57,0)
(45,19,0)
(26,36,0)
(60,15,0)
(51,52,0)
(35,53,0)
(40,2,0)
(2,10,0)
(12,29,0)
(33,25,0)
(49,2,0)
(29,15,0)
(30,15,0)
(35,2,0)
(15,51,0)
(9,15,0)
(22,2,0)
(5,10,0)
(37,30,0)
(28,24,0)
(7,52,0)
(31,2,0)
(29,32,0)
(25,24,0)
(15,60,0)
(13,15,0)
(50,53,0)
(53,50,0)
(21,35,0)
(30,35,0)
(25,52,0)
(53,9,0)
(53,35,0)
(0,31,0)
(35,30,0)
(9,53,0)
(1,9,0)
(34,9,0)
(17,22,0)
(16,52,0)
(56,52,0)
(58,2,1)
(26,6,1)
(57,46,1)
(32,29,1)
(32,42,1)
(25,24,1)
(56,25,1)
(13,25,1)
(14,21,1)
(53,50,1)
(16,56,1)
(17,58,1)
(41,0,1)
(14,36,1)
(53,9,1)
(30,15,1)
(30,25,1)
(8,26,1)
(15,60,1)
(39,48,1)
(9,15,1)
(35,30,1)
(2,31,1)
(11,53,1)
(42,29,1)
(22,2,1)
(56,39,1)
(49,32,1)
(22,17,1)
(24,28,1)
(1,30,1)
(43,57,1)
(18,12,1)
(21,35,1)
(55,35,1)
(25,33,1)
(31,41,1)
(0,49,1)
(34,1,1)
(20,13,1)
(28,38,1)
(35,2,1)
(60,20,1)
(60,25,1)
(26,15,1)
(6,43,1)
(48,40,1)
(9,34,1)
(48,22,1)
(36,8,1)
(30,59,1)
(46,21,1)
(33,54,1)
(35,53,1)
(40,14,1)
(54,24,1)
(59,37,1)
(12,15,1)
(35,11,1)
(21,55,1)
(29,18,1)
(40,2,1)
(27,16,1)
(26,25,1)
(29,15,1)
(37,22,1)
(48,32,1)
(59,22,2)
(9,15,2)
(26,15,2)
(2,32,2)
(11,22,2)
(29,15,2)
(40,22,2)
(30,15,2)
(30,22,2)
(36,21,2)
(41,32,2)
(35,30,2)
(53,9,2)
(58,32,2)
(0,32,2)
(43,21,2)
(37,22,2)
(14,22,2)
(30,25,2)
(34,22,2)
(22,32,2)
(22,2,2)
(9,22,2)
(21,35,2)
(57,21,2)
(1,22,2)
(17,32,2)
(46,21,2)
(55,22,2)
(25,24,2)
(6,21,2)
(26,21,2)
(31,32,2)
(35,22,2)
(8,21,2)
(15,60,2)
(60,25,2)
(26,25,2)
(35,53,2)
(49,32,2)
(32,29,2)
(2,31,2)
(53,50,2)
(21,22,2)
(35,2,2)
(53,22,2)
(40,2,2)
(56,25,2)
-----------------------------------
(0,FILENAME)
(1,100)
(2,pFile = fopen(FILENAME, "r")
(3,if (100-dataLen > 1)
(4,dataLen)
(5,if (pFile != NULL)
(6,dataLen)
(7,data)
(8,\\\'\\\\0\\\')
(9,100-dataLen)
(10,)
(11,pFile)
(12,100)
(13,dataLen)
(14,pFile)
(15,dataLen = strlen(data)
(16,badSink()
(17,NULL)
(18,dataLen)
(19,)
(20,data)
(21,fgets(data+dataLen, (int)
(22,pFile != NULL)
(23,)
(24,dataBuffer[100] = COMMAND_ARG2)
(25,data = dataBuffer)
(26,data[dataLen])
(27,RET)
(28,COMMAND_ARG2)
(29,100-dataLen)
(30,data+dataLen)
(31,fopen(FILENAME, "r")
(32,100-dataLen > 1)
(33,dataBuffer)
(34,dataLen)
(35,fgets(data+dataLen, (int)
(36,data[dataLen] = \\\'\\\\0\\\')
(37,data)
(38,dataBuffer)
(39,data)
(40,fclose(pFile)
(41,"r")
(42,1)
(43,data)
(44,pFile)
(45,if (fgets(data+dataLen, (int)
(46,"fgets()
(47,dataBuffer)
(48,CWE78_OS_Command_Injection__char_file_w32_execvp_45_badData)
(49,pFile)
(50,int)
(51,)
(52,)
(53,(int)
(54,data)
(55,NULL)
(56,CWE78_OS_Command_Injection__char_file_w32_execvp_45_badData = data)
(57,printLine("fgets()
(58,pFile)
(59,dataLen)
(60,strlen(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
