-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_system_11_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(globalReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
82,84
83,84
83,85
84,85
84,86
85,86
87,88
90,91
90,92
91,92
92,93
92,94
93,94
96,97
97,98
97,99
98,99
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,94,95,99,100
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
83,84
83,85
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_system_11_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_environment_system_11_bad()
CWE78_OS_Command_Injection__char_environment_system_11_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(3,23,0)
(45,18,0)
(35,32,0)
(32,34,0)
(4,25,0)
(21,41,0)
(33,46,0)
(15,13,0)
(26,19,0)
(46,13,0)
(38,43,0)
(25,34,0)
(30,36,0)
(21,36,0)
(39,34,0)
(24,41,0)
(19,0,0)
(48,0,0)
(16,43,0)
(13,46,0)
(34,25,0)
(28,42,0)
(36,10,0)
(1,36,0)
(41,6,0)
(27,10,0)
(12,43,0)
(19,13,0)
(46,41,0)
(41,21,0)
(18,42,0)
(10,43,0)
(19,31,0)
(14,6,0)
(2,0,0)
(44,17,0)
(36,43,0)
(20,43,0)
(34,6,0)
(13,19,0)
(0,41,0)
(6,5,0)
(17,23,0)
(8,32,0)
(18,36,0)
(19,34,0)
(29,3,0)
(0,19,0)
(42,18,0)
(37,10,0)
(22,21,0)
(9,6,0)
(7,6,0)
(0,36,0)
(11,46,0)
(11,15,1)
(36,10,1)
(10,37,1)
(24,40,1)
(32,34,1)
(18,45,1)
(40,36,1)
(28,18,1)
(48,2,1)
(19,13,1)
(4,39,1)
(32,8,1)
(46,33,1)
(0,36,1)
(33,11,1)
(35,34,1)
(0,41,1)
(18,36,1)
(21,22,1)
(3,29,1)
(42,18,1)
(19,34,1)
(42,28,1)
(46,41,1)
(47,42,1)
(0,48,1)
(47,17,1)
(2,32,1)
(44,3,1)
(21,36,1)
(29,42,1)
(19,0,1)
(37,27,1)
(22,24,1)
(17,44,1)
(8,35,1)
(25,4,1)
(15,26,1)
(45,40,1)
(34,25,1)
(1,30,1)
(36,1,1)
(13,46,1)
(26,0,1)
(39,41,1)
(41,21,1)
(45,32,1)
(30,10,1)
(45,19,1)
(15,32,2)
(4,40,2)
(19,0,2)
(0,36,2)
(22,40,2)
(48,32,2)
(46,32,2)
(26,32,2)
(36,10,2)
(0,32,2)
(21,36,2)
(8,40,2)
(33,32,2)
(19,34,2)
(21,40,2)
(13,32,2)
(32,40,2)
(34,40,2)
(42,18,2)
(41,21,2)
(35,40,2)
(25,40,2)
(2,32,2)
(11,32,2)
(18,36,2)
(29,42,2)
(3,42,2)
(41,40,2)
(17,42,2)
(19,13,2)
(46,41,2)
(32,34,2)
(34,25,2)
(0,41,2)
(13,46,2)
(39,40,2)
(44,42,2)
(24,40,2)
(19,32,2)
-----------------------------------
(0,data+dataLen)
(1,data_buf)
(2,data)
(3,printLine("command execution failed!")
(4,ENV_VARIABLE)
(5,)
(6,)
(7,dataLen)
(8,NULL)
(9,if (environment != NULL)
(10,data_buf[100] = FULL_COMMAND)
(11,dataLen)
(12,data)
(13,100-dataLen-1)
(14,environment)
(15,100)
(16,if(globalReturnsTrue()
(17,exit(1)
(18,SYSTEM(data)
(19,strncat(data+dataLen, environment, 100-dataLen-1)
(20,if (SYSTEM(data)
(21,strlen(data)
(22,data)
(23,)
(24,dataLen)
(25,GETENV(ENV_VARIABLE)
(26,environment)
(27,data_buf)
(28,0)
(29,"command execution failed!")
(30,data)
(31,)
(32,environment != NULL)
(33,1)
(34,* environment = GETENV(ENV_VARIABLE)
(35,environment)
(36,data = data_buf)
(37,FULL_COMMAND)
(38,data_buf)
(39,environment)
(40,globalReturnsTrue()
(41,dataLen = strlen(data)
(42,SYSTEM(data)
(43,)
(44,1)
(45,data)
(46,dataLen-1)
(47,RET)
(48,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
