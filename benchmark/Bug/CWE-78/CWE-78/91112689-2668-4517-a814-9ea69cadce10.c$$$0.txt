-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_16_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    while(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
        break;
    }
    /* spawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
81,82
82,83
82,84
82,85
82,86
82,87
82,88
82,89
83,84
85,86
87,88
89,90
91,92
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,80,84,86,88,90,92,94,96
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_16_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32spawnl_16_bad()
CWE78_OS_Command_Injection__char_environment_w32spawnl_16_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(30,21,0)
(17,15,0)
(45,3,0)
(3,28,0)
(14,22,0)
(1,15,0)
(3,45,0)
(10,26,0)
(19,28,0)
(40,26,0)
(3,11,0)
(20,44,0)
(6,8,0)
(46,5,0)
(31,8,0)
(41,14,0)
(5,45,0)
(26,15,0)
(0,3,0)
(42,17,0)
(3,29,0)
(34,45,0)
(44,21,0)
(45,5,0)
(38,1,0)
(33,15,0)
(25,17,0)
(35,44,0)
(12,5,0)
(1,17,0)
(18,15,0)
(16,26,0)
(22,1,0)
(22,14,0)
(28,44,0)
(23,22,0)
(32,26,0)
(29,3,0)
(13,29,0)
(8,28,0)
(4,26,0)
(43,26,0)
(29,1,0)
(29,14,0)
(39,29,0)
(2,1,0)
(37,28,0)
(28,37,0)
(14,44,0)
(9,44,0)
(27,37,0)
(5,14,0)
(24,15,0)
(3,28,1)
(0,29,1)
(29,14,1)
(8,28,1)
(22,1,1)
(43,36,1)
(23,41,1)
(14,22,1)
(10,16,1)
(4,43,1)
(26,10,1)
(3,29,1)
(22,23,1)
(30,3,1)
(5,46,1)
(8,31,1)
(32,4,1)
(39,8,1)
(38,17,1)
(31,6,1)
(42,25,1)
(46,12,1)
(7,26,1)
(29,13,1)
(30,8,1)
(3,45,1)
(40,32,1)
(6,28,1)
(5,14,1)
(16,40,1)
(37,27,1)
(12,34,1)
(43,30,1)
(1,2,1)
(1,17,1)
(36,1,1)
(45,5,1)
(19,14,1)
(17,42,1)
(27,19,1)
(29,1,1)
(34,0,1)
(2,38,1)
(13,39,1)
(28,37,1)
(41,36,1)
(6,36,2)
(28,37,2)
(3,8,2)
(37,36,2)
(3,45,2)
(5,14,2)
(30,36,2)
(22,36,2)
(1,17,2)
(13,8,2)
(29,14,2)
(34,8,2)
(3,29,2)
(8,36,2)
(29,1,2)
(19,36,2)
(45,5,2)
(29,8,2)
(14,36,2)
(27,36,2)
(3,28,2)
(23,36,2)
(41,36,2)
(46,8,2)
(5,8,2)
(31,36,2)
(12,8,2)
(28,36,2)
(45,8,2)
(14,22,2)
(39,8,2)
(0,8,2)
(22,1,2)
(8,28,2)
-----------------------------------
(0,environment)
(1,data = dataBuffer)
(2,dataBuffer)
(3,strncat(data+dataLen, environment, 100-dataLen-1)
(4,COMMAND_INT_PATH)
(5,dataLen-1)
(6,environment)
(7,RET)
(8,environment != NULL)
(9,dataLen)
(10,NULL)
(11,)
(12,dataLen)
(13,dataLen)
(14,dataLen = strlen(data)
(15,)
(16,COMMAND_ARG3)
(17,dataBuffer[100] = COMMAND_ARG2)
(18,data)
(19,environment)
(20,environment)
(21,)
(22,strlen(data)
(23,data)
(24,while(1)
(25,dataBuffer)
(26,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(27,ENV_VARIABLE)
(28,* environment = GETENV(ENV_VARIABLE)
(29,data+dataLen)
(30,break;)
(31,NULL)
(32,COMMAND_INT_PATH)
(33,dataBuffer)
(34,100)
(35,if (environment != NULL)
(36,1)
(37,GETENV(ENV_VARIABLE)
(38,data)
(39,data)
(40,COMMAND_ARG1)
(41,dataLen)
(42,COMMAND_ARG2)
(43,_P_WAIT)
(44,)
(45,100-dataLen-1)
(46,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
