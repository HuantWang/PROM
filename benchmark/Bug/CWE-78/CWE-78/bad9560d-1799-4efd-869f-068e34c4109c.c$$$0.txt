-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_34_bad()
{
    wchar_t * data;
    CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_34_unionType myUnion;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        {
            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
            /* wspawnv - specify the path where the command is located */
            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
84,85
84,86
85,86
85,87
86,87
89,90
91,92
91,93
92,93
93,94
93,95
95,96
95,97
95,98
98,99
99,100
99,101
100,101
103,104
103,105
104,105
105,106
105,107
107,108
107,109
107,110
107,111
111,112
112,113
112,114
112,115
112,116
113,114
115,116
117,118
119,120
121,122
122,123
122,124
122,125
122,126
123,124
125,126
127,128
129,130
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,87,88,90,94,96,97,101,102,106,108,109,110,114,116,118,120,124,126,128,130
-----computeFrom-----
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
84,85
84,86
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_34_bad(){    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_34_unionType myUnion;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_34_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_34_bad
{    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_34_unionType myUnion;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_34_unionType
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_34_unionType
myUnion
myUnion
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);        }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
_wspawnv
_wspawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(49,18,0)
(7,5,0)
(51,13,0)
(31,42,0)
(5,45,0)
(9,26,0)
(13,26,0)
(0,56,0)
(53,7,0)
(44,18,0)
(20,7,0)
(37,26,0)
(1,2,0)
(42,26,0)
(36,51,0)
(39,36,0)
(18,44,0)
(4,56,0)
(52,18,0)
(30,26,0)
(27,36,0)
(28,13,0)
(0,1,0)
(25,0,0)
(10,5,0)
(2,1,0)
(46,45,0)
(51,36,0)
(54,30,0)
(33,44,0)
(48,51,0)
(43,41,0)
(19,30,0)
(1,42,0)
(41,37,0)
(55,54,0)
(23,42,0)
(18,1,0)
(54,26,0)
(15,0,0)
(11,2,0)
(44,56,0)
(22,13,0)
(47,29,0)
(56,44,0)
(3,42,0)
(29,22,0)
(16,1,0)
(38,26,0)
(40,22,0)
(56,0,0)
(45,5,0)
(12,26,0)
(2,54,0)
(40,29,0)
(21,40,0)
(17,54,0)
(5,42,0)
(0,54,0)
(50,41,0)
(56,35,0)
(8,22,0)
(32,40,0)
(14,40,0)
(24,37,0)
(56,5,0)
(6,30,0)
(37,54,0)
(47,51,1)
(10,1,1)
(7,53,1)
(30,19,1)
(46,10,1)
(40,32,1)
(14,21,1)
(18,1,1)
(37,24,1)
(0,54,1)
(52,49,1)
(17,55,1)
(37,54,1)
(56,0,1)
(51,36,1)
(24,41,1)
(55,30,1)
(32,14,1)
(21,29,1)
(40,29,1)
(43,56,1)
(7,5,1)
(27,39,1)
(39,48,1)
(53,20,1)
(56,44,1)
(2,54,1)
(48,37,1)
(44,18,1)
(15,25,1)
(0,1,1)
(25,7,1)
(56,5,1)
(54,17,1)
(36,27,1)
(20,5,1)
(1,2,1)
(33,4,1)
(18,52,1)
(29,47,1)
(19,6,1)
(41,50,1)
(49,33,1)
(50,43,1)
(0,15,1)
(2,11,1)
(45,46,1)
(11,16,1)
(43,7,1)
(5,45,1)
(54,30,1)
(34,40,1)
(16,54,1)
(4,0,1)
(56,7,2)
(44,18,2)
(40,29,2)
(44,7,2)
(56,0,2)
(1,2,2)
(51,36,2)
(18,1,2)
(7,5,2)
(56,44,2)
(37,54,2)
(2,54,2)
(49,7,2)
(33,7,2)
(0,7,2)
(0,54,2)
(54,30,2)
(25,7,2)
(52,7,2)
(4,7,2)
(56,5,2)
(18,7,2)
(0,1,2)
(15,7,2)
(5,45,2)
-----------------------------------
(0,data+dataLen)
(1,dataLen = wcslen(data)
(2,wcslen(data)
(3,environment)
(4,environment)
(5,* environment = GETENV(ENV_VARIABLE)
(6,dataBuffer)
(7,environment != NULL)
(8,args)
(9,dataBuffer)
(10,environment)
(11,data)
(12,myUnion)
(13,)
(14,COMMAND_INT_PATH)
(15,dataLen)
(16,dataLen)
(17,dataBuffer)
(18,dataLen-1)
(19,COMMAND_ARG2)
(20,environment)
(21,_P_WAIT)
(22,)
(23,if (environment != NULL)
(24,data)
(25,data)
(26,)
(27,unionSecond)
(28,data)
(29,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(30,dataBuffer[100] = COMMAND_ARG2)
(31,dataLen)
(32,args)
(33,100)
(34,RET)
(35,)
(36,myUnion.unionSecond)
(37,myUnion.unionFirst = data)
(38,data)
(39,myUnion)
(40,_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
(41,myUnion.unionFirst)
(42,)
(43,myUnion)
(44,100-dataLen-1)
(45,GETENV(ENV_VARIABLE)
(46,ENV_VARIABLE)
(47,args)
(48,data)
(49,dataLen)
(50,unionFirst)
(51,* data = myUnion.unionSecond)
(52,1)
(53,NULL)
(54,data = dataBuffer)
(55,data)
(56,wcsncat(data+dataLen, environment, 100-dataLen-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
