-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_05_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(staticTrue)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* spawnlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
82,83
82,84
82,85
82,86
82,87
82,88
82,89
83,84
85,86
87,88
89,90
91,92
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,88,90,92,94,96
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_05_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_05_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_05_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticTrue
staticTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnlp
_spawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(31,8,0)
(9,35,0)
(15,37,0)
(45,36,0)
(4,12,0)
(14,22,0)
(33,21,0)
(10,33,0)
(22,15,0)
(44,35,0)
(31,12,0)
(39,8,0)
(24,15,0)
(3,36,0)
(21,33,0)
(2,35,0)
(16,11,0)
(36,1,0)
(24,8,0)
(30,15,0)
(41,21,0)
(24,12,0)
(17,35,0)
(29,41,0)
(27,1,0)
(8,16,0)
(7,16,0)
(15,24,0)
(35,1,0)
(12,36,0)
(38,21,0)
(22,14,0)
(6,1,0)
(13,31,0)
(8,31,0)
(26,35,0)
(34,14,0)
(14,8,0)
(15,22,0)
(21,16,0)
(12,1,0)
(32,12,0)
(42,24,0)
(20,24,0)
(15,21,0)
(43,16,0)
(18,16,0)
(40,35,0)
(0,1,0)
(19,14,0)
(25,22,0)
(23,41,0)
(24,20,1)
(17,15,1)
(8,31,1)
(45,3,1)
(22,14,1)
(41,29,1)
(24,12,1)
(12,36,1)
(14,8,1)
(24,8,1)
(14,34,1)
(40,9,1)
(29,23,1)
(17,5,1)
(42,41,1)
(33,10,1)
(15,24,1)
(34,19,1)
(20,42,1)
(15,21,1)
(10,38,1)
(30,24,1)
(41,21,1)
(17,41,1)
(44,17,1)
(12,4,1)
(39,5,1)
(31,13,1)
(35,2,1)
(31,12,1)
(13,39,1)
(25,30,1)
(36,45,1)
(2,26,1)
(9,44,1)
(19,25,1)
(23,21,1)
(4,32,1)
(21,33,1)
(38,8,1)
(26,40,1)
(15,22,1)
(32,36,1)
(5,12,1)
(28,35,1)
(12,36,2)
(39,5,2)
(24,8,2)
(38,5,2)
(21,5,2)
(24,12,2)
(15,21,2)
(15,22,2)
(41,21,2)
(31,12,2)
(10,5,2)
(24,41,2)
(34,41,2)
(14,8,2)
(42,41,2)
(30,41,2)
(21,33,2)
(15,41,2)
(23,5,2)
(22,14,2)
(15,24,2)
(8,5,2)
(29,5,2)
(19,41,2)
(14,41,2)
(20,41,2)
(13,5,2)
(8,31,2)
(25,41,2)
(22,41,2)
(41,5,2)
(33,5,2)
(31,5,2)
-----------------------------------
(0,dataBuffer)
(1,)
(2,NULL)
(3,dataBuffer)
(4,dataBuffer)
(5,staticTrue)
(6,data)
(7,dataLen)
(8,dataLen = strlen(data)
(9,COMMAND_INT)
(10,ENV_VARIABLE)
(11,)
(12,data = dataBuffer)
(13,data)
(14,dataLen-1)
(15,strncat(data+dataLen, environment, 100-dataLen-1)
(16,)
(17,_P_WAIT)
(18,environment)
(19,dataLen)
(20,dataLen)
(21,* environment = GETENV(ENV_VARIABLE)
(22,100-dataLen-1)
(23,environment)
(24,data+dataLen)
(25,100)
(26,COMMAND_ARG3)
(27,if(staticTrue)
(28,RET)
(29,NULL)
(30,environment)
(31,strlen(data)
(32,data)
(33,GETENV(ENV_VARIABLE)
(34,1)
(35,_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(36,dataBuffer[100] = COMMAND_ARG2)
(37,)
(38,environment)
(39,dataLen)
(40,COMMAND_ARG1)
(41,environment != NULL)
(42,data)
(43,if (environment != NULL)
(44,COMMAND_INT)
(45,COMMAND_ARG2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
