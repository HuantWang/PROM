-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnlp_31_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    {
        wchar_t * dataCopy = data;
        wchar_t * data = dataCopy;
        /* wspawnlp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
61,64
61,65
62,63
64,65
64,66
65,66
67,68
69,70
71,72
71,73
72,73
72,74
74,75
77,78
77,79
77,80
78,79
79,80
79,81
81,82
81,83
81,84
84,85
85,86
87,88
88,89
88,90
90,91
90,92
90,93
93,94
94,95
96,97
97,98
97,99
97,100
97,101
97,102
97,103
97,104
98,99
100,101
102,103
104,105
106,107
108,109
110,111
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,43,45,46,50,52,56,58,63,66,68,70,73,75,76,80,82,83,86,89,91,92,95,99,101,103,105,107,109,111
-----computeFrom-----
23,24
23,25
54,55
54,56
64,65
64,66
71,72
71,73
72,73
72,74
-----guardedBy-----
56,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnlp_31_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        /* wspawnlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnlp_31_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnlp_31_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        /* wspawnlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        /* wspawnlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }
wchar_t * dataCopy = data;
wchar_t * dataCopy = data;
wchar_t
* dataCopy = data
*
dataCopy
= data
data
data
wchar_t * data = dataCopy;
wchar_t * data = dataCopy;
wchar_t
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
_wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_wspawnlp
_wspawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(5,42,0)
(43,15,0)
(24,48,0)
(3,15,0)
(29,32,0)
(38,49,0)
(44,22,0)
(46,24,0)
(22,46,0)
(9,11,0)
(46,36,0)
(11,36,0)
(6,32,0)
(9,32,0)
(49,5,0)
(5,49,0)
(13,36,0)
(40,49,0)
(36,48,0)
(5,13,0)
(49,40,0)
(1,15,0)
(30,40,0)
(4,24,0)
(34,45,0)
(41,17,0)
(22,24,0)
(7,13,0)
(15,24,0)
(37,5,0)
(17,41,0)
(5,17,0)
(18,2,0)
(2,48,0)
(25,15,0)
(36,2,0)
(35,15,0)
(21,15,0)
(14,40,0)
(45,17,0)
(26,45,0)
(27,22,0)
(8,13,0)
(23,17,0)
(11,9,0)
(33,46,0)
(10,36,0)
(12,48,0)
(16,32,0)
(0,2,0)
(13,9,0)
(20,24,0)
(50,41,0)
(19,46,0)
(17,32,0)
(39,36,0)
(13,5,0)
(47,9,0)
(40,9,0)
(51,11,0)
(32,48,0)
(28,48,0)
(44,27,1)
(50,23,1)
(40,9,1)
(5,17,1)
(33,19,1)
(25,22,1)
(22,44,1)
(39,10,1)
(8,45,1)
(21,3,1)
(23,9,1)
(34,26,1)
(31,15,1)
(13,7,1)
(36,39,1)
(15,1,1)
(46,36,1)
(13,36,1)
(46,33,1)
(27,46,1)
(17,41,1)
(22,46,1)
(47,36,1)
(41,50,1)
(7,8,1)
(45,34,1)
(14,38,1)
(38,37,1)
(36,2,1)
(40,30,1)
(26,17,1)
(11,51,1)
(5,49,1)
(19,45,1)
(0,18,1)
(43,35,1)
(45,17,1)
(5,13,1)
(13,9,1)
(19,5,1)
(11,36,1)
(9,11,1)
(3,25,1)
(49,40,1)
(30,14,1)
(37,13,1)
(10,2,1)
(2,0,1)
(1,43,1)
(35,21,1)
(51,47,1)
(37,45,2)
(5,13,2)
(5,17,2)
(45,17,2)
(30,45,2)
(13,45,2)
(22,46,2)
(14,45,2)
(40,45,2)
(13,36,2)
(38,45,2)
(46,36,2)
(40,9,2)
(9,11,2)
(5,49,2)
(13,9,2)
(49,45,2)
(11,36,2)
(8,45,2)
(5,45,2)
(36,2,2)
(7,45,2)
(17,41,2)
(49,40,2)
-----------------------------------
(0,COMMAND_ARG2)
(1,NULL)
(2,dataBuffer[100] = COMMAND_ARG2)
(3,COMMAND_INT)
(4,data)
(5,wcsncat(data+dataLen, environment, 100-dataLen-1)
(6,dataLen)
(7,dataLen)
(8,data)
(9,dataLen = wcslen(data)
(10,data)
(11,wcslen(data)
(12,data)
(13,data+dataLen)
(14,dataLen)
(15,_wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(16,if (environment != NULL)
(17,* environment = GETENV(ENV_VARIABLE)
(18,dataBuffer)
(19,dataCopy)
(20,dataCopy)
(21,COMMAND_INT)
(22,* data = dataCopy)
(23,environment)
(24,)
(25,_P_WAIT)
(26,environment)
(27,data)
(28,dataBuffer)
(29,environment)
(30,1)
(31,RET)
(32,)
(33,data)
(34,NULL)
(35,COMMAND_ARG1)
(36,data = dataBuffer)
(37,environment)
(38,100)
(39,dataBuffer)
(40,dataLen-1)
(41,GETENV(ENV_VARIABLE)
(42,)
(43,COMMAND_ARG3)
(44,dataCopy)
(45,environment != NULL)
(46,* dataCopy = data)
(47,dataLen)
(48,)
(49,100-dataLen-1)
(50,ENV_VARIABLE)
(51,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
