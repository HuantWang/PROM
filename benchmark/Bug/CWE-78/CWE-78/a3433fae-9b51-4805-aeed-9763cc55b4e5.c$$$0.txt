-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_15_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    switch(6)
    {
    case 6:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    /* wspawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
30,33
30,34
30,35
30,36
31,32
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
84,85
85,86
85,87
86,87
90,91
91,92
91,93
91,94
91,95
91,96
91,97
91,98
92,93
94,95
96,97
98,99
100,101
102,103
104,105
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,32,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,82,83,87,88,89,93,95,97,99,101,103,105
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_15_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* wspawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_15_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_15_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* wspawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
_wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_wspawnl
_wspawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(22,15,0)
(19,49,0)
(26,49,0)
(2,28,0)
(28,48,0)
(40,32,0)
(49,20,0)
(19,48,0)
(24,40,0)
(34,10,0)
(1,0,0)
(20,9,0)
(15,16,0)
(38,11,0)
(13,11,0)
(19,5,0)
(29,49,0)
(44,36,0)
(49,19,0)
(32,16,0)
(48,28,0)
(50,19,0)
(4,32,0)
(46,16,0)
(19,10,0)
(20,0,0)
(11,10,0)
(8,0,0)
(33,20,0)
(36,0,0)
(30,20,0)
(10,25,0)
(31,32,0)
(23,28,0)
(17,0,0)
(48,19,0)
(35,9,0)
(7,40,0)
(42,36,0)
(49,40,0)
(27,36,0)
(40,7,0)
(7,20,0)
(39,36,0)
(25,10,0)
(18,7,0)
(14,16,0)
(6,32,0)
(28,40,0)
(9,0,0)
(51,25,0)
(37,16,0)
(10,32,0)
(43,48,0)
(45,36,0)
(12,36,0)
(3,9,0)
(47,16,0)
(49,40,1)
(48,28,1)
(13,10,1)
(34,40,1)
(49,29,1)
(23,2,1)
(27,44,1)
(33,9,1)
(43,50,1)
(20,30,1)
(45,47,1)
(45,37,1)
(36,27,1)
(41,36,1)
(47,11,1)
(50,49,1)
(47,19,1)
(26,11,1)
(19,48,1)
(11,10,1)
(7,20,1)
(9,3,1)
(44,39,1)
(37,15,1)
(29,26,1)
(12,42,1)
(10,25,1)
(24,21,1)
(19,10,1)
(49,20,1)
(22,21,1)
(51,34,1)
(30,33,1)
(40,7,1)
(28,40,1)
(25,51,1)
(28,23,1)
(11,38,1)
(42,45,1)
(7,18,1)
(21,20,1)
(3,35,1)
(19,49,1)
(38,13,1)
(15,22,1)
(18,24,1)
(39,12,1)
(20,9,1)
(2,43,1)
(38,21,2)
(48,28,2)
(47,21,2)
(26,11,2)
(40,7,2)
(48,11,2)
(15,21,2)
(11,10,2)
(20,9,2)
(18,21,2)
(28,11,2)
(7,21,2)
(29,11,2)
(10,25,2)
(50,11,2)
(24,21,2)
(11,21,2)
(43,11,2)
(19,48,2)
(23,11,2)
(19,11,2)
(7,20,2)
(49,11,2)
(19,49,2)
(49,20,2)
(34,21,2)
(2,11,2)
(22,21,2)
(40,21,2)
(49,40,2)
(37,21,2)
(28,40,2)
(10,21,2)
(51,21,2)
(13,21,2)
(19,10,2)
(25,21,2)
-----------------------------------
(0,)
(1,data)
(2,dataLen)
(3,COMMAND_ARG2)
(4,environment)
(5,)
(6,dataLen)
(7,wcslen(data)
(8,dataBuffer)
(9,dataBuffer[100] = COMMAND_ARG2)
(10,* environment = GETENV(ENV_VARIABLE)
(11,environment != NULL)
(12,COMMAND_INT_PATH)
(13,environment)
(14,default:)
(15,printLine("Benign, fixed string")
(16,)
(17,switch(6)
(18,data)
(19,wcsncat(data+dataLen, environment, 100-dataLen-1)
(20,data = dataBuffer)
(21,6)
(22,"Benign, fixed string")
(23,1)
(24,dataLen)
(25,GETENV(ENV_VARIABLE)
(26,data)
(27,NULL)
(28,dataLen-1)
(29,dataLen)
(30,dataBuffer)
(31,if (environment != NULL)
(32,)
(33,data)
(34,environment)
(35,dataBuffer)
(36,_wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(37,break;)
(38,NULL)
(39,COMMAND_ARG1)
(40,dataLen = wcslen(data)
(41,RET)
(42,COMMAND_INT_PATH)
(43,100)
(44,COMMAND_ARG3)
(45,_P_WAIT)
(46,case 6:)
(47,break;)
(48,100-dataLen-1)
(49,data+dataLen)
(50,environment)
(51,ENV_VARIABLE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
