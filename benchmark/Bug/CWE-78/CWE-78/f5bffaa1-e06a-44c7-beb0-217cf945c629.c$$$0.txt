-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_34_bad()
{
    char * data;
    CWE78_OS_Command_Injection__char_environment_w32_spawnvp_34_unionType myUnion;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    myUnion.unionFirst = data;
    {
        char * data = myUnion.unionSecond;
        {
            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
            /* spawnvp - searches for the location of the command among
             * the directories specified by the PATH environment variable */
            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
            _spawnvp(_P_WAIT, COMMAND_INT, args);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
84,85
84,86
85,86
85,87
86,87
89,90
91,92
91,93
92,93
93,94
93,95
95,96
95,97
95,98
98,99
99,100
99,101
100,101
103,104
103,105
104,105
105,106
105,107
107,108
107,109
107,110
107,111
111,112
112,113
112,114
112,115
112,116
113,114
115,116
117,118
119,120
121,122
122,123
122,124
122,125
122,126
123,124
125,126
127,128
129,130
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,87,88,90,94,96,97,101,102,106,108,109,110,114,116,118,120,124,126,128,130
-----computeFrom-----
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
84,85
84,86
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_34_bad(){    char * data;    CWE78_OS_Command_Injection__char_environment_w32_spawnvp_34_unionType myUnion;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnvp(_P_WAIT, COMMAND_INT, args);        }    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_34_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_34_bad
{    char * data;    CWE78_OS_Command_Injection__char_environment_w32_spawnvp_34_unionType myUnion;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnvp(_P_WAIT, COMMAND_INT, args);        }    }}
char * data;
char * data;
char
* data
*
data
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_34_unionType myUnion;
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_34_unionType myUnion;
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_34_unionType
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_34_unionType
myUnion
myUnion
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        char * data = myUnion.unionSecond;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnvp(_P_WAIT, COMMAND_INT, args);        }    }
char * data = myUnion.unionSecond;
char * data = myUnion.unionSecond;
char
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnvp(_P_WAIT, COMMAND_INT, args);        }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnvp(_P_WAIT, COMMAND_INT, args);
_spawnvp(_P_WAIT, COMMAND_INT, args)
_spawnvp
_spawnvp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(51,52,0)
(54,41,0)
(16,17,0)
(30,27,0)
(21,42,0)
(50,49,0)
(46,1,0)
(53,38,0)
(39,38,0)
(14,23,0)
(35,38,0)
(56,49,0)
(23,41,0)
(16,14,0)
(34,33,0)
(14,18,0)
(4,53,0)
(49,39,0)
(22,4,0)
(6,14,0)
(48,42,0)
(15,18,0)
(19,4,0)
(52,41,0)
(42,41,0)
(18,1,0)
(16,27,0)
(47,17,0)
(12,53,0)
(20,47,0)
(0,19,0)
(33,17,0)
(24,14,0)
(36,11,0)
(11,18,0)
(32,19,0)
(17,47,0)
(43,23,0)
(16,7,0)
(13,16,0)
(28,41,0)
(19,53,0)
(52,23,0)
(39,49,0)
(55,51,0)
(17,42,0)
(3,41,0)
(8,33,0)
(44,23,0)
(1,23,0)
(38,41,0)
(26,41,0)
(1,18,0)
(37,28,0)
(5,42,0)
(27,16,0)
(29,19,0)
(40,39,0)
(14,16,0)
(18,42,0)
(27,11,0)
(45,28,0)
(31,17,0)
(10,51,0)
(23,28,0)
(9,11,0)
(2,52,0)
(11,27,0)
(24,33,1)
(32,29,1)
(31,18,1)
(22,39,1)
(25,19,1)
(1,23,1)
(20,31,1)
(30,13,1)
(27,11,1)
(52,23,1)
(43,28,1)
(28,45,1)
(1,46,1)
(56,50,1)
(55,33,1)
(51,10,1)
(34,8,1)
(14,18,1)
(55,16,1)
(16,17,1)
(44,43,1)
(49,56,1)
(6,24,1)
(29,0,1)
(10,55,1)
(52,2,1)
(40,52,1)
(50,40,1)
(33,34,1)
(19,4,1)
(23,44,1)
(11,18,1)
(16,14,1)
(9,30,1)
(2,51,1)
(8,17,1)
(14,23,1)
(23,28,1)
(13,14,1)
(33,17,1)
(36,9,1)
(4,22,1)
(46,15,1)
(16,27,1)
(15,23,1)
(18,1,1)
(45,37,1)
(14,6,1)
(0,4,1)
(11,36,1)
(39,49,1)
(47,20,1)
(17,47,1)
(19,32,1)
(18,1,2)
(19,4,2)
(9,33,2)
(14,18,2)
(36,33,2)
(27,33,2)
(13,33,2)
(1,23,2)
(14,23,2)
(11,33,2)
(16,17,2)
(39,49,2)
(16,27,2)
(33,17,2)
(11,18,2)
(16,33,2)
(6,33,2)
(24,33,2)
(30,33,2)
(14,33,2)
(23,28,2)
(17,47,2)
(52,23,2)
(27,11,2)
(16,14,2)
-----------------------------------
(0,_P_WAIT)
(1,strlen(data)
(2,data)
(3,dataBuffer)
(4,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(5,dataLen)
(6,dataLen)
(7,)
(8,environment)
(9,dataLen)
(10,unionFirst)
(11,dataLen-1)
(12,args)
(13,environment)
(14,data+dataLen)
(15,dataLen)
(16,strncat(data+dataLen, environment, 100-dataLen-1)
(17,* environment = GETENV(ENV_VARIABLE)
(18,dataLen = strlen(data)
(19,_spawnvp(_P_WAIT, COMMAND_INT, args)
(20,ENV_VARIABLE)
(21,environment)
(22,args)
(23,data = dataBuffer)
(24,data)
(25,RET)
(26,data)
(27,100-dataLen-1)
(28,dataBuffer[100] = COMMAND_ARG2)
(29,COMMAND_INT)
(30,100)
(31,environment)
(32,args)
(33,environment != NULL)
(34,NULL)
(35,data)
(36,1)
(37,dataBuffer)
(38,)
(39,* data = myUnion.unionSecond)
(40,data)
(41,)
(42,)
(43,data)
(44,dataBuffer)
(45,COMMAND_ARG2)
(46,data)
(47,GETENV(ENV_VARIABLE)
(48,if (environment != NULL)
(49,myUnion.unionSecond)
(50,myUnion)
(51,myUnion.unionFirst)
(52,myUnion.unionFirst = data)
(53,)
(54,myUnion)
(55,myUnion)
(56,unionSecond)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
