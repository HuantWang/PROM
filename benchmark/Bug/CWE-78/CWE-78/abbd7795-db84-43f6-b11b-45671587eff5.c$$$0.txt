-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_31_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    {
        char * dataCopy = data;
        char * data = dataCopy;
        /* spawnl - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
61,64
61,65
62,63
64,65
64,66
65,66
67,68
69,70
71,72
71,73
72,73
72,74
74,75
77,78
77,79
77,80
78,79
79,80
79,81
81,82
81,83
81,84
84,85
85,86
87,88
88,89
88,90
90,91
90,92
90,93
93,94
94,95
96,97
97,98
97,99
97,100
97,101
97,102
97,103
97,104
98,99
100,101
102,103
104,105
106,107
108,109
110,111
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,43,45,46,50,52,56,58,63,66,68,70,73,75,76,80,82,83,86,89,91,92,95,99,101,103,105,107,109,111
-----computeFrom-----
23,24
23,25
54,55
54,56
64,65
64,66
71,72
71,73
72,73
72,74
-----guardedBy-----
56,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_31_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char * dataCopy = data;        char * data = dataCopy;        /* spawnl - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
void
CWE78_OS_Command_Injection__char_environment_w32spawnl_31_bad()
CWE78_OS_Command_Injection__char_environment_w32spawnl_31_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char * dataCopy = data;        char * data = dataCopy;        /* spawnl - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char * dataCopy = data;        char * data = dataCopy;        /* spawnl - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);    }
char * dataCopy = data;
char * dataCopy = data;
char
* dataCopy = data
*
dataCopy
= data
data
data
char * data = dataCopy;
char * data = dataCopy;
char
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(8,17,0)
(16,31,0)
(17,48,0)
(13,21,0)
(21,32,0)
(38,37,0)
(33,22,0)
(6,22,0)
(36,1,0)
(29,37,0)
(40,22,0)
(26,1,0)
(31,17,0)
(12,32,0)
(12,37,0)
(27,12,0)
(9,19,0)
(24,12,0)
(37,17,0)
(29,30,0)
(45,48,0)
(37,21,0)
(7,11,0)
(12,24,0)
(24,30,0)
(47,12,0)
(11,32,0)
(28,51,0)
(19,48,0)
(1,48,0)
(21,37,0)
(10,29,0)
(14,32,0)
(49,11,0)
(43,29,0)
(46,17,0)
(5,24,0)
(20,17,0)
(2,22,0)
(34,16,0)
(50,32,0)
(42,31,0)
(23,30,0)
(30,24,0)
(22,1,0)
(32,19,0)
(31,16,0)
(3,35,0)
(35,1,0)
(25,48,0)
(18,19,0)
(44,35,0)
(51,31,0)
(0,22,0)
(39,22,0)
(30,29,0)
(11,1,0)
(35,11,0)
(15,51,0)
(24,31,0)
(24,41,0)
(32,48,0)
(24,30,1)
(35,3,1)
(19,18,1)
(27,51,1)
(35,11,1)
(42,37,1)
(22,39,1)
(14,19,1)
(21,32,1)
(6,40,1)
(12,32,1)
(23,5,1)
(32,50,1)
(51,31,1)
(5,12,1)
(3,44,1)
(7,49,1)
(11,32,1)
(40,35,1)
(21,13,1)
(11,7,1)
(2,6,1)
(49,24,1)
(31,16,1)
(37,21,1)
(51,15,1)
(13,38,1)
(32,19,1)
(12,37,1)
(16,34,1)
(44,11,1)
(49,51,1)
(39,33,1)
(24,12,1)
(29,43,1)
(33,0,1)
(34,42,1)
(24,31,1)
(29,37,1)
(0,2,1)
(30,29,1)
(38,32,1)
(43,10,1)
(28,31,1)
(12,47,1)
(15,28,1)
(4,22,1)
(47,27,1)
(50,14,1)
(18,9,1)
(10,23,1)
(5,51,2)
(12,32,2)
(37,21,2)
(29,37,2)
(30,51,2)
(11,32,2)
(24,30,2)
(10,51,2)
(12,51,2)
(47,51,2)
(51,31,2)
(27,51,2)
(21,32,2)
(43,51,2)
(35,11,2)
(29,51,2)
(12,37,2)
(24,51,2)
(31,16,2)
(24,12,2)
(32,19,2)
(23,51,2)
(30,29,2)
(24,31,2)
-----------------------------------
(0,COMMAND_ARG1)
(1,)
(2,COMMAND_INT_PATH)
(3,dataCopy)
(4,RET)
(5,environment)
(6,COMMAND_INT_PATH)
(7,data)
(8,if (environment != NULL)
(9,dataBuffer)
(10,dataLen)
(11,* dataCopy = data)
(12,data+dataLen)
(13,data)
(14,data)
(15,NULL)
(16,GETENV(ENV_VARIABLE)
(17,)
(18,COMMAND_ARG2)
(19,dataBuffer[100] = COMMAND_ARG2)
(20,dataLen)
(21,strlen(data)
(22,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(23,100)
(24,strncat(data+dataLen, environment, 100-dataLen-1)
(25,dataBuffer)
(26,data)
(27,data)
(28,environment)
(29,dataLen-1)
(30,100-dataLen-1)
(31,* environment = GETENV(ENV_VARIABLE)
(32,data = dataBuffer)
(33,COMMAND_ARG3)
(34,ENV_VARIABLE)
(35,* data = dataCopy)
(36,dataCopy)
(37,dataLen = strlen(data)
(38,dataLen)
(39,NULL)
(40,_P_WAIT)
(41,)
(42,environment)
(43,1)
(44,data)
(45,data)
(46,environment)
(47,dataLen)
(48,)
(49,dataCopy)
(50,dataBuffer)
(51,environment != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
