-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_01_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
61,64
61,65
62,63
64,65
64,66
65,66
67,68
69,70
71,72
71,73
72,73
72,74
74,75
77,78
77,79
78,79
79,80
79,81
81,82
81,83
81,84
81,85
85,86
86,87
86,88
86,89
86,90
87,88
89,90
91,92
93,94
95,96
96,97
96,98
96,99
96,100
97,98
99,100
101,102
103,104
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,43,45,46,50,52,56,58,63,66,68,70,73,75,76,80,82,83,84,88,90,92,94,98,100,102,104
-----computeFrom-----
23,24
23,25
54,55
54,56
64,65
64,66
71,72
71,73
72,73
72,74
-----guardedBy-----
56,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_01_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnv_01_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnv_01_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnv(_P_WAIT, COMMAND_INT_PATH, args);
_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
_spawnv
_spawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(23,9,0)
(25,42,0)
(7,21,0)
(20,33,0)
(4,35,0)
(9,35,0)
(20,5,0)
(42,9,0)
(30,5,0)
(16,6,0)
(9,27,0)
(12,33,0)
(39,9,0)
(13,38,0)
(10,31,0)
(42,13,0)
(3,27,0)
(26,6,0)
(36,20,0)
(14,38,0)
(1,5,0)
(2,13,0)
(38,13,0)
(31,5,0)
(29,42,0)
(35,5,0)
(40,35,0)
(43,37,0)
(11,23,0)
(13,21,0)
(27,9,0)
(38,23,0)
(13,42,0)
(21,35,0)
(15,20,0)
(37,10,0)
(28,31,0)
(19,21,0)
(42,20,0)
(32,19,0)
(13,34,0)
(0,23,0)
(33,5,0)
(41,33,0)
(17,37,0)
(8,10,0)
(18,37,0)
(24,35,0)
(27,20,0)
(37,31,0)
(21,19,0)
(6,21,0)
(23,38,0)
(8,6,1)
(8,13,1)
(42,25,1)
(17,43,1)
(20,36,1)
(6,26,1)
(29,6,1)
(15,33,1)
(14,2,1)
(12,41,1)
(27,3,1)
(10,8,1)
(23,0,1)
(32,7,1)
(20,33,1)
(25,29,1)
(9,27,1)
(13,42,1)
(7,9,1)
(43,18,1)
(6,21,1)
(37,10,1)
(38,23,1)
(23,9,1)
(16,21,1)
(3,39,1)
(42,20,1)
(42,9,1)
(19,32,1)
(26,16,1)
(36,15,1)
(27,20,1)
(13,38,1)
(22,37,1)
(39,20,1)
(2,42,1)
(37,17,1)
(21,19,1)
(13,21,1)
(11,14,1)
(33,12,1)
(18,10,1)
(0,11,1)
(13,42,2)
(6,21,2)
(37,10,2)
(27,20,2)
(38,6,2)
(25,6,2)
(42,9,2)
(13,21,2)
(29,6,2)
(42,6,2)
(9,27,2)
(21,19,2)
(14,6,2)
(42,20,2)
(38,23,2)
(13,6,2)
(11,6,2)
(0,6,2)
(20,33,2)
(23,6,2)
(13,38,2)
(2,6,2)
(23,9,2)
-----------------------------------
(0,1)
(1,data)
(2,environment)
(3,data)
(4,if (environment != NULL)
(5,)
(6,environment != NULL)
(7,environment)
(8,args)
(9,dataLen = strlen(data)
(10,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(11,dataLen)
(12,COMMAND_ARG2)
(13,strncat(data+dataLen, environment, 100-dataLen-1)
(14,100)
(15,data)
(16,environment)
(17,args)
(18,_P_WAIT)
(19,GETENV(ENV_VARIABLE)
(20,data = dataBuffer)
(21,* environment = GETENV(ENV_VARIABLE)
(22,RET)
(23,dataLen-1)
(24,environment)
(25,dataLen)
(26,NULL)
(27,strlen(data)
(28,args)
(29,data)
(30,dataBuffer)
(31,)
(32,ENV_VARIABLE)
(33,dataBuffer[100] = COMMAND_ARG2)
(34,)
(35,)
(36,dataBuffer)
(37,_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
(38,100-dataLen-1)
(39,dataLen)
(40,dataLen)
(41,dataBuffer)
(42,data+dataLen)
(43,COMMAND_INT_PATH)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
