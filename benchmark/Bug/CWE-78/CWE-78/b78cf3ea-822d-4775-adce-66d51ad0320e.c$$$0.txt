-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_system_05_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(staticTrue)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
81,83
82,83
82,84
83,84
83,85
84,85
86,87
89,90
89,91
90,91
91,92
91,93
92,93
95,96
96,97
96,98
97,98
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,85,87,88,93,94,98,99
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
82,83
82,84
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_system_05_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_environment_system_05_bad()
CWE78_OS_Command_Injection__char_environment_system_05_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticTrue
staticTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(31,33,0)
(17,44,0)
(19,43,0)
(6,43,0)
(27,48,0)
(14,7,0)
(26,44,0)
(15,44,0)
(3,7,0)
(21,33,0)
(12,25,0)
(30,21,0)
(47,26,0)
(2,25,0)
(43,39,0)
(40,26,0)
(39,43,0)
(43,47,0)
(22,39,0)
(36,29,0)
(39,20,0)
(29,47,0)
(23,12,0)
(38,7,0)
(20,29,0)
(29,20,0)
(42,33,0)
(21,34,0)
(46,29,0)
(5,7,0)
(44,7,0)
(0,33,0)
(4,16,0)
(20,39,0)
(9,11,0)
(33,18,0)
(8,2,0)
(39,35,0)
(1,48,0)
(16,44,0)
(48,7,0)
(11,16,0)
(32,21,0)
(26,47,0)
(44,48,0)
(34,21,0)
(41,34,0)
(28,20,0)
(39,21,0)
(13,32,0)
(47,33,0)
(37,47,0)
(10,32,0)
(43,44,0)
(16,11,0)
(27,1,1)
(34,41,1)
(11,16,1)
(24,44,1)
(10,13,1)
(40,37,1)
(6,32,1)
(17,48,1)
(47,26,1)
(45,12,1)
(26,40,1)
(44,15,1)
(11,9,1)
(8,11,1)
(4,39,1)
(21,34,1)
(43,44,1)
(32,21,1)
(43,19,1)
(45,11,1)
(16,4,1)
(39,43,1)
(23,2,1)
(29,36,1)
(28,22,1)
(39,20,1)
(13,21,1)
(43,47,1)
(9,16,1)
(19,6,1)
(29,47,1)
(26,44,1)
(16,44,1)
(20,29,1)
(22,43,1)
(44,48,1)
(15,17,1)
(4,24,1)
(2,8,1)
(48,27,1)
(37,24,1)
(30,47,1)
(41,30,1)
(4,32,1)
(46,28,1)
(32,10,1)
(36,46,1)
(12,23,1)
(39,21,1)
(26,24,2)
(39,21,2)
(32,24,2)
(39,32,2)
(39,43,2)
(29,32,2)
(19,32,2)
(16,44,2)
(26,44,2)
(43,32,2)
(22,32,2)
(34,24,2)
(43,47,2)
(12,11,2)
(47,26,2)
(46,32,2)
(6,32,2)
(47,24,2)
(43,44,2)
(32,21,2)
(44,48,2)
(13,24,2)
(10,24,2)
(23,11,2)
(41,24,2)
(28,32,2)
(40,24,2)
(39,20,2)
(30,24,2)
(20,32,2)
(37,24,2)
(21,24,2)
(20,29,2)
(8,11,2)
(29,47,2)
(2,11,2)
(11,16,2)
(21,34,2)
(36,32,2)
-----------------------------------
(0,dataLen)
(1,data_buf)
(2,printLine("command execution failed!")
(3,if(staticTrue)
(4,data)
(5,data)
(6,data)
(7,)
(8,"command execution failed!")
(9,0)
(10,NULL)
(11,SYSTEM(data)
(12,exit(1)
(13,environment)
(14,if (SYSTEM(data)
(15,data_buf)
(16,SYSTEM(data)
(17,data)
(18,)
(19,dataLen)
(20,100-dataLen-1)
(21,* environment = GETENV(ENV_VARIABLE)
(22,environment)
(23,1)
(24,staticTrue)
(25,)
(26,strlen(data)
(27,FULL_COMMAND)
(28,100)
(29,dataLen-1)
(30,environment)
(31,if (environment != NULL)
(32,environment != NULL)
(33,)
(34,GETENV(ENV_VARIABLE)
(35,)
(36,1)
(37,dataLen)
(38,data_buf)
(39,strncat(data+dataLen, environment, 100-dataLen-1)
(40,data)
(41,ENV_VARIABLE)
(42,environment)
(43,data+dataLen)
(44,data = data_buf)
(45,RET)
(46,dataLen)
(47,dataLen = strlen(data)
(48,data_buf[100] = FULL_COMMAND)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
