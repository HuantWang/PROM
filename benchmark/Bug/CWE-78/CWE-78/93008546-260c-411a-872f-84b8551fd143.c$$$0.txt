-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_13_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
83,85
84,85
85,86
85,87
87,88
87,89
87,90
87,91
91,92
92,93
92,94
92,95
92,96
93,94
95,96
97,98
99,100
101,102
102,103
102,104
102,105
102,106
103,104
105,106
107,108
109,110
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,86,88,89,90,94,96,98,100,104,106,108,110
-----computeFrom-----
23,24
23,25
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_13_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(GLOBAL_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnv_13_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnv_13_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(GLOBAL_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(GLOBAL_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnv(_P_WAIT, COMMAND_INT_PATH, args);
_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
_spawnv
_spawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(11,6,0)
(18,41,0)
(2,1,0)
(13,40,0)
(22,6,0)
(25,16,0)
(47,19,0)
(46,37,0)
(0,13,0)
(25,17,0)
(16,3,0)
(44,6,0)
(20,41,0)
(10,38,0)
(25,45,0)
(27,19,0)
(30,39,0)
(32,15,0)
(19,17,0)
(7,40,0)
(5,40,0)
(29,17,0)
(41,40,0)
(26,35,0)
(12,39,0)
(6,13,0)
(39,24,0)
(17,37,0)
(14,43,0)
(43,15,0)
(25,38,0)
(38,21,0)
(38,15,0)
(16,25,0)
(37,17,0)
(38,25,0)
(42,21,0)
(21,43,0)
(48,3,0)
(8,38,0)
(3,16,0)
(35,13,0)
(34,40,0)
(3,21,0)
(17,39,0)
(15,41,0)
(36,39,0)
(9,3,0)
(6,35,0)
(43,21,0)
(28,25,0)
(15,40,0)
(31,1,0)
(4,15,0)
(23,16,0)
(21,39,0)
(6,11,1)
(23,28,1)
(15,41,1)
(27,17,1)
(33,6,1)
(21,43,1)
(26,19,1)
(28,38,1)
(38,10,1)
(42,1,1)
(3,21,1)
(1,31,1)
(6,35,1)
(19,17,1)
(43,15,1)
(41,20,1)
(4,32,1)
(16,3,1)
(11,44,1)
(20,18,1)
(47,27,1)
(9,23,1)
(22,35,1)
(35,26,1)
(15,4,1)
(10,8,1)
(31,2,1)
(3,48,1)
(38,15,1)
(2,15,1)
(8,19,1)
(38,21,1)
(29,21,1)
(26,1,1)
(17,37,1)
(43,14,1)
(46,29,1)
(44,22,1)
(37,46,1)
(26,25,1)
(32,41,1)
(48,9,1)
(25,17,1)
(19,47,1)
(14,42,1)
(25,16,1)
(25,38,1)
(9,19,2)
(16,19,2)
(42,1,2)
(21,43,2)
(10,19,2)
(6,35,2)
(3,21,2)
(38,19,2)
(28,19,2)
(25,17,2)
(25,16,2)
(27,1,2)
(17,37,2)
(29,1,2)
(43,15,2)
(3,19,2)
(48,19,2)
(25,19,2)
(8,19,2)
(25,38,2)
(47,1,2)
(19,1,2)
(21,1,2)
(46,1,2)
(38,21,2)
(37,1,2)
(17,1,2)
(19,17,2)
(16,3,2)
(23,19,2)
(15,41,2)
(43,1,2)
(14,1,2)
(38,15,2)
-----------------------------------
(0,args)
(1,GLOBAL_CONST_FIVE==5)
(2,GLOBAL_CONST_FIVE)
(3,dataLen-1)
(4,dataBuffer)
(5,if(GLOBAL_CONST_FIVE==5)
(6,_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
(7,dataBuffer)
(8,data)
(9,dataLen)
(10,dataLen)
(11,args)
(12,dataLen)
(13,)
(14,data)
(15,data = dataBuffer)
(16,100-dataLen-1)
(17,* environment = GETENV(ENV_VARIABLE)
(18,dataBuffer)
(19,environment != NULL)
(20,COMMAND_ARG2)
(21,dataLen = strlen(data)
(22,_P_WAIT)
(23,100)
(24,)
(25,strncat(data+dataLen, environment, 100-dataLen-1)
(26,args)
(27,environment)
(28,environment)
(29,environment)
(30,environment)
(31,5)
(32,data)
(33,RET)
(34,data)
(35,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(36,if (environment != NULL)
(37,GETENV(ENV_VARIABLE)
(38,data+dataLen)
(39,)
(40,)
(41,dataBuffer[100] = COMMAND_ARG2)
(42,dataLen)
(43,strlen(data)
(44,COMMAND_INT_PATH)
(45,)
(46,ENV_VARIABLE)
(47,NULL)
(48,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
