-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_popen_02_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
80,81
80,82
80,83
81,82
82,83
82,84
83,84
85,86
85,87
88,89
89,90
89,91
90,91
92,93
92,94
92,95
93,94
95,96
98,99
98,100
99,100
99,101
100,101
102,103
104,105
105,106
106,107
106,108
107,108
109,110
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,84,86,87,91,94,96,97,101,103,108,110
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
89,90
89,91
99,100
99,101
-----guardedBy-----
59,73
101,110
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_popen_02_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__char_environment_popen_02_bad()
CWE78_OS_Command_Injection__char_environment_popen_02_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(40,7,0)
(25,22,0)
(17,8,0)
(47,21,0)
(14,38,0)
(3,21,0)
(33,41,0)
(22,37,0)
(16,7,0)
(4,44,0)
(47,33,0)
(36,2,0)
(48,37,0)
(2,14,0)
(19,7,0)
(5,14,0)
(29,47,0)
(44,4,0)
(24,41,0)
(11,47,0)
(19,41,0)
(13,41,0)
(27,44,0)
(37,20,0)
(44,20,0)
(6,41,0)
(9,42,0)
(34,11,0)
(37,22,0)
(4,19,0)
(31,20,0)
(26,20,0)
(42,37,0)
(21,19,0)
(30,33,0)
(52,4,0)
(7,41,0)
(21,47,0)
(1,42,0)
(8,44,0)
(15,2,0)
(46,29,0)
(28,11,0)
(38,14,0)
(2,19,0)
(14,37,0)
(2,44,0)
(20,50,0)
(39,19,0)
(14,2,0)
(38,8,0)
(23,20,0)
(14,51,0)
(12,38,0)
(8,38,0)
(35,33,0)
(45,19,0)
(29,32,0)
(10,47,0)
(49,8,0)
(43,21,0)
(11,28,1)
(29,47,1)
(10,42,1)
(25,48,1)
(8,44,1)
(38,8,1)
(42,37,1)
(12,5,1)
(39,7,1)
(29,46,1)
(18,29,1)
(43,3,1)
(49,12,1)
(16,40,1)
(19,45,1)
(34,47,1)
(52,27,1)
(2,19,1)
(22,25,1)
(2,44,1)
(17,49,1)
(44,4,1)
(14,37,1)
(19,7,1)
(18,11,1)
(42,1,1)
(15,36,1)
(14,38,1)
(11,47,1)
(46,11,1)
(8,17,1)
(45,39,1)
(37,22,1)
(4,52,1)
(5,2,1)
(47,21,1)
(28,34,1)
(36,42,1)
(48,44,1)
(9,37,1)
(27,0,1)
(21,19,1)
(21,43,1)
(3,10,1)
(1,9,1)
(0,19,1)
(10,14,1)
(2,15,1)
(10,0,1)
(14,2,1)
(7,16,1)
(4,19,1)
(12,42,2)
(38,42,2)
(2,19,2)
(8,42,2)
(37,0,2)
(29,47,2)
(1,0,2)
(42,0,2)
(27,0,2)
(44,0,2)
(8,44,2)
(42,37,2)
(29,11,2)
(19,7,2)
(2,44,2)
(46,11,2)
(5,42,2)
(44,4,2)
(25,0,2)
(4,19,2)
(9,0,2)
(48,0,2)
(11,47,2)
(49,42,2)
(22,0,2)
(52,0,2)
(17,42,2)
(47,21,2)
(2,42,2)
(37,22,2)
(14,38,2)
(21,19,2)
(15,42,2)
(14,37,2)
(38,8,2)
(36,42,2)
(14,2,2)
(4,0,2)
(14,42,2)
-----------------------------------
(0,1)
(1,NULL)
(2,data+dataLen)
(3,data)
(4,strlen(data)
(5,environment)
(6,data_buf)
(7,data_buf[100] = FULL_COMMAND)
(8,dataLen-1)
(9,environment)
(10,pipe)
(11,pipe != NULL)
(12,100)
(13,data)
(14,strncat(data+dataLen, environment, 100-dataLen-1)
(15,dataLen)
(16,FULL_COMMAND)
(17,1)
(18,RET)
(19,data = data_buf)
(20,)
(21,POPEN(data, "w")
(22,GETENV(ENV_VARIABLE)
(23,environment)
(24,if(1)
(25,ENV_VARIABLE)
(26,dataLen)
(27,dataLen)
(28,NULL)
(29,PCLOSE(pipe)
(30,if (pipe != NULL)
(31,if (environment != NULL)
(32,)
(33,)
(34,pipe)
(35,pipe)
(36,data)
(37,* environment = GETENV(ENV_VARIABLE)
(38,100-dataLen-1)
(39,data)
(40,data_buf)
(41,)
(42,environment != NULL)
(43,"w")
(44,dataLen = strlen(data)
(45,data_buf)
(46,pipe)
(47,pipe = POPEN(data, "w")
(48,environment)
(49,dataLen)
(50,)
(51,)
(52,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
