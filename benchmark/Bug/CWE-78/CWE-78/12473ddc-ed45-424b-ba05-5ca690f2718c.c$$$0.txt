-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_popen_11_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(globalReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
82,84
82,85
83,84
84,85
84,86
85,86
87,88
87,89
90,91
91,92
91,93
92,93
94,95
94,96
94,97
95,96
97,98
100,101
100,102
101,102
101,103
102,103
104,105
106,107
107,108
108,109
108,110
109,110
111,112
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,93,96,98,99,103,105,110,112
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
91,92
91,93
101,102
101,103
-----guardedBy-----
61,75
103,112
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_popen_11_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__char_environment_popen_11_bad()
CWE78_OS_Command_Injection__char_environment_popen_11_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(23,36,0)
(10,24,0)
(19,36,0)
(37,36,0)
(27,35,0)
(10,20,0)
(49,22,0)
(26,50,0)
(29,1,0)
(7,35,0)
(8,46,0)
(10,0,0)
(43,42,0)
(9,29,0)
(50,51,0)
(9,0,0)
(21,20,0)
(45,24,0)
(33,28,0)
(19,6,0)
(10,15,0)
(13,19,0)
(32,42,0)
(12,1,0)
(0,10,0)
(31,50,0)
(36,19,0)
(17,50,0)
(36,28,0)
(25,14,0)
(3,6,0)
(22,24,0)
(28,42,0)
(29,50,0)
(18,22,0)
(34,9,0)
(5,10,0)
(28,35,0)
(1,28,0)
(39,13,0)
(52,35,0)
(6,35,0)
(20,28,0)
(2,25,0)
(16,0,0)
(20,10,0)
(24,46,0)
(38,29,0)
(24,50,0)
(42,35,0)
(25,19,0)
(46,24,0)
(1,29,0)
(44,6,0)
(47,20,0)
(0,9,0)
(41,19,0)
(48,9,0)
(20,29,0)
(4,28,0)
(40,13,0)
(29,1,1)
(41,10,1)
(1,12,1)
(30,13,1)
(25,19,1)
(9,34,1)
(42,43,1)
(36,37,1)
(1,28,1)
(43,32,1)
(37,23,1)
(13,39,1)
(20,28,1)
(38,11,1)
(11,28,1)
(41,11,1)
(2,13,1)
(20,21,1)
(30,25,1)
(10,0,1)
(49,24,1)
(25,2,1)
(21,47,1)
(47,22,1)
(19,36,1)
(28,33,1)
(18,49,1)
(13,19,1)
(16,5,1)
(20,29,1)
(22,24,1)
(23,41,1)
(0,9,1)
(28,42,1)
(46,8,1)
(10,20,1)
(33,4,1)
(10,24,1)
(41,22,1)
(34,48,1)
(48,16,1)
(36,28,1)
(9,29,1)
(8,45,1)
(40,19,1)
(45,29,1)
(39,40,1)
(4,42,1)
(5,20,1)
(22,18,1)
(24,46,1)
(12,38,1)
(22,24,2)
(20,29,2)
(47,22,2)
(0,9,2)
(8,11,2)
(13,19,2)
(45,11,2)
(10,0,2)
(24,11,2)
(10,24,2)
(46,11,2)
(10,20,2)
(20,22,2)
(1,28,2)
(9,22,2)
(21,22,2)
(18,11,2)
(16,22,2)
(29,11,2)
(34,22,2)
(2,13,2)
(29,1,2)
(38,11,2)
(22,11,2)
(25,19,2)
(36,28,2)
(19,36,2)
(1,11,2)
(24,46,2)
(12,11,2)
(10,22,2)
(25,13,2)
(5,22,2)
(0,22,2)
(9,29,2)
(48,22,2)
(49,11,2)
(20,28,2)
(28,42,2)
-----------------------------------
(0,100-dataLen-1)
(1,strlen(data)
(2,pipe)
(3,pipe)
(4,data)
(5,environment)
(6,)
(7,data_buf)
(8,ENV_VARIABLE)
(9,dataLen-1)
(10,strncat(data+dataLen, environment, 100-dataLen-1)
(11,globalReturnsTrue()
(12,data)
(13,pipe != NULL)
(14,)
(15,)
(16,100)
(17,environment)
(18,NULL)
(19,pipe = POPEN(data, "w")
(20,data+dataLen)
(21,dataLen)
(22,environment != NULL)
(23,data)
(24,* environment = GETENV(ENV_VARIABLE)
(25,PCLOSE(pipe)
(26,dataLen)
(27,data)
(28,data = data_buf)
(29,dataLen = strlen(data)
(30,RET)
(31,if (environment != NULL)
(32,data_buf)
(33,data_buf)
(34,1)
(35,)
(36,POPEN(data, "w")
(37,"w")
(38,dataLen)
(39,NULL)
(40,pipe)
(41,pipe)
(42,data_buf[100] = FULL_COMMAND)
(43,FULL_COMMAND)
(44,if (pipe != NULL)
(45,environment)
(46,GETENV(ENV_VARIABLE)
(47,data)
(48,dataLen)
(49,environment)
(50,)
(51,)
(52,if(globalReturnsTrue()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
