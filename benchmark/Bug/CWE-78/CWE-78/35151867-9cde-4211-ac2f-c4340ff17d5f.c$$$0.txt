-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_file_execl_44_bad()
{
    wchar_t * data;
    /* define a function pointer */
    void (*funcPtr) (wchar_t *) = badSink;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = wcslen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgetws() failed");
                    /* Restore NUL terminator if fgetws fails */
                    data[dataLen] = L'\0';
                }
                fclose(pFile);
            }
        }
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
30,31
30,32
30,33
32,33
34,35
35,36
37,38
38,39
38,40
39,40
41,42
43,44
43,45
43,46
44,45
45,46
45,47
46,47
48,49
48,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
58,59
60,61
60,62
63,64
63,65
64,65
64,66
65,66
65,67
67,68
70,71
70,72
71,72
72,73
72,74
73,74
75,76
75,77
75,78
76,77
78,79
81,82
81,83
82,83
82,84
83,84
85,86
87,88
87,89
88,89
88,90
89,90
89,91
90,91
90,92
90,93
90,94
91,92
93,94
93,95
94,95
96,97
98,99
98,100
99,100
99,101
102,103
103,104
103,105
105,106
107,108
109,110
111,112
111,113
112,113
113,114
113,115
114,115
117,118
118,119
118,120
119,120
119,121
120,121
122,123
125,126
126,127
126,128
127,128
129,130
131,132
132,133
132,134
133,134
135,136
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,29,31,33,36,40,42,47,49,53,55,59,61,62,66,68,69,74,77,79,80,84,86,92,95,97,100,101,104,106,108,110,115,116,121,123,124,128,130,134,136
-----computeFrom-----
38,39
38,40
64,65
64,66
65,66
65,67
72,73
72,74
82,83
82,84
89,90
89,91
93,94
93,95
103,104
103,105
118,119
118,120
-----guardedBy-----
68,123
86,110
84,130
95,121
106,123
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_file_execl_44_bad(){    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = badSink;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* use the function pointer */    funcPtr(data);}
void
CWE78_OS_Command_Injection__wchar_t_file_execl_44_bad()
CWE78_OS_Command_Injection__wchar_t_file_execl_44_bad
{    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = badSink;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* use the function pointer */    funcPtr(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
void (*funcPtr) (wchar_t *) = badSink;
void (*funcPtr) (wchar_t *) = badSink;
void
(*funcPtr) (wchar_t *) = badSink
*funcPtr
*
funcPtr
wchar_t *
wchar_t
*
*

= badSink
badSink
badSink
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(100-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(17,50,0)
(16,21,0)
(50,10,0)
(55,50,0)
(2,34,0)
(25,33,0)
(47,51,0)
(56,40,0)
(31,15,0)
(52,10,0)
(51,40,0)
(18,40,0)
(32,40,0)
(6,18,0)
(14,24,0)
(27,10,0)
(15,56,0)
(58,48,0)
(9,58,0)
(10,38,0)
(26,57,0)
(21,57,0)
(28,52,0)
(48,31,0)
(46,45,0)
(42,38,0)
(3,52,0)
(25,10,0)
(55,5,0)
(1,33,0)
(41,25,0)
(53,15,0)
(15,40,0)
(37,34,0)
(35,31,0)
(11,30,0)
(30,48,0)
(39,30,0)
(44,18,0)
(23,18,0)
(10,52,0)
(50,24,0)
(30,49,0)
(5,55,0)
(50,55,0)
(55,58,0)
(45,48,0)
(54,49,0)
(49,30,0)
(58,55,0)
(24,50,0)
(43,40,0)
(34,40,0)
(20,40,0)
(13,56,0)
(7,15,0)
(51,15,0)
(12,45,0)
(8,48,0)
(31,48,0)
(19,29,0)
(45,15,0)
(45,50,0)
(0,56,0)
(29,10,0)
(22,29,0)
(48,18,0)
(50,45,0)
(4,58,0)
(45,12,1)
(47,49,1)
(51,15,1)
(47,29,1)
(21,16,1)
(41,26,1)
(15,53,1)
(34,37,1)
(25,10,1)
(47,25,1)
(58,4,1)
(46,29,1)
(51,47,1)
(50,55,1)
(41,24,1)
(15,56,1)
(16,24,1)
(52,28,1)
(45,48,1)
(30,48,1)
(39,48,1)
(27,49,1)
(28,3,1)
(29,22,1)
(24,14,1)
(50,17,1)
(12,46,1)
(4,9,1)
(31,15,1)
(0,34,1)
(14,50,1)
(13,0,1)
(31,35,1)
(11,39,1)
(3,27,1)
(54,30,1)
(9,45,1)
(10,52,1)
(49,30,1)
(55,5,1)
(29,10,1)
(55,58,1)
(49,54,1)
(48,31,1)
(36,51,1)
(50,10,1)
(17,55,1)
(25,41,1)
(7,56,1)
(35,8,1)
(30,11,1)
(37,2,1)
(53,7,1)
(22,19,1)
(19,10,1)
(24,50,1)
(8,15,1)
(26,21,1)
(45,15,1)
(50,45,1)
(58,48,1)
(56,13,1)
(27,49,2)
(46,29,2)
(41,29,2)
(52,49,2)
(55,29,2)
(10,49,2)
(24,29,2)
(15,56,2)
(17,29,2)
(28,49,2)
(49,30,2)
(25,29,2)
(26,24,2)
(50,45,2)
(45,48,2)
(9,29,2)
(55,5,2)
(10,52,2)
(30,48,2)
(16,24,2)
(19,49,2)
(58,48,2)
(21,24,2)
(12,29,2)
(50,29,2)
(24,50,2)
(22,49,2)
(14,29,2)
(29,10,2)
(4,29,2)
(45,29,2)
(48,31,2)
(51,15,2)
(55,58,2)
(29,49,2)
(3,49,2)
(31,15,2)
(50,55,2)
(50,10,2)
(58,29,2)
(25,10,2)
(45,15,2)
-----------------------------------
(0,dataBuffer)
(1,if (fgetws(data+dataLen, (int)
(2,funcPtr)
(3,FILENAME)
(4,dataLen)
(5,int)
(6,pFile)
(7,data)
(8,dataLen)
(9,100)
(10,pFile = fopen(FILENAME, "r")
(11,dataLen)
(12,dataLen)
(13,COMMAND_ARG2)
(14,NULL)
(15,data = dataBuffer)
(16,"fgetws()
(17,pFile)
(18,)
(19,pFile)
(20,dataBuffer)
(21,printLine("fgetws()
(22,NULL)
(23,if (100-dataLen > 1)
(24,fgetws(data+dataLen, (int)
(25,fclose(pFile)
(26,\\\'\\\\0\\\')
(27,pFile)
(28,"r")
(29,pFile != NULL)
(30,100-dataLen)
(31,wcslen(data)
(32,funcPtr)
(33,)
(34,(*funcPtr)
(35,data)
(36,RET)
(37,badSink)
(38,)
(39,100)
(40,)
(41,pFile)
(42,if (pFile != NULL)
(43,data)
(44,dataLen)
(45,data+dataLen)
(46,data)
(47,data)
(48,dataLen = wcslen(data)
(49,100-dataLen > 1)
(50,fgetws(data+dataLen, (int)
(51,funcPtr(data)
(52,fopen(FILENAME, "r")
(53,dataBuffer)
(54,1)
(55,(int)
(56,dataBuffer[100] = COMMAND_ARG2)
(57,)
(58,100-dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
