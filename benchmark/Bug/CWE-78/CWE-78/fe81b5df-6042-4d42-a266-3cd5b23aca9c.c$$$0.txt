-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_07_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(staticFive==5)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* wspawnv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
83,85
84,85
85,86
85,87
87,88
87,89
87,90
87,91
91,92
92,93
92,94
92,95
92,96
93,94
95,96
97,98
99,100
101,102
102,103
102,104
102,105
102,106
103,104
105,106
107,108
109,110
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,86,88,89,90,94,96,98,100,104,106,108,110
-----computeFrom-----
23,24
23,25
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_07_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticFive==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_07_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_07_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticFive==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticFive==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);    }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
_wspawnv
_wspawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(30,32,0)
(17,37,0)
(1,33,0)
(18,47,0)
(3,4,0)
(32,24,0)
(20,38,0)
(46,15,0)
(2,4,0)
(40,47,0)
(3,14,0)
(28,37,0)
(23,33,0)
(3,48,0)
(39,12,0)
(16,4,0)
(29,18,0)
(48,3,0)
(13,33,0)
(41,34,0)
(11,41,0)
(0,32,0)
(33,41,0)
(25,37,0)
(8,13,0)
(22,41,0)
(27,24,0)
(13,32,0)
(6,9,0)
(23,48,0)
(4,32,0)
(37,15,0)
(4,3,0)
(4,33,0)
(3,9,0)
(43,23,0)
(33,13,0)
(48,23,0)
(36,6,0)
(42,9,0)
(7,3,0)
(10,41,0)
(35,47,0)
(15,18,0)
(21,23,0)
(5,48,0)
(9,41,0)
(32,47,0)
(31,47,0)
(26,12,0)
(24,47,0)
(37,18,0)
(44,38,0)
(9,6,0)
(12,9,0)
(45,24,0)
(25,15,1)
(8,1,1)
(7,4,1)
(46,12,1)
(43,21,1)
(39,26,1)
(16,2,1)
(13,8,1)
(4,32,1)
(37,15,1)
(12,9,1)
(28,17,1)
(17,25,1)
(30,24,1)
(4,16,1)
(3,48,1)
(3,9,1)
(27,45,1)
(13,32,1)
(0,30,1)
(21,5,1)
(3,4,1)
(15,46,1)
(42,33,1)
(44,20,1)
(33,13,1)
(19,37,1)
(38,44,1)
(12,39,1)
(6,36,1)
(4,33,1)
(32,24,1)
(20,32,1)
(26,9,1)
(37,28,1)
(9,6,1)
(48,23,1)
(46,3,1)
(23,43,1)
(36,42,1)
(46,38,1)
(24,27,1)
(32,0,1)
(23,33,1)
(1,38,1)
(2,12,1)
(5,7,1)
(12,38,2)
(26,38,2)
(12,9,2)
(33,13,2)
(13,32,2)
(3,48,2)
(16,12,2)
(39,38,2)
(8,38,2)
(1,38,2)
(2,12,2)
(32,24,2)
(42,38,2)
(6,38,2)
(3,9,2)
(4,33,2)
(36,38,2)
(48,23,2)
(9,6,2)
(3,4,2)
(5,12,2)
(9,38,2)
(13,38,2)
(7,12,2)
(33,38,2)
(3,12,2)
(4,32,2)
(43,12,2)
(23,12,2)
(4,12,2)
(23,33,2)
(37,15,2)
(21,12,2)
(48,12,2)
-----------------------------------
(0,dataBuffer)
(1,dataLen)
(2,data)
(3,wcsncat(data+dataLen, environment, 100-dataLen-1)
(4,data+dataLen)
(5,100)
(6,GETENV(ENV_VARIABLE)
(7,environment)
(8,data)
(9,* environment = GETENV(ENV_VARIABLE)
(10,dataLen)
(11,environment)
(12,environment != NULL)
(13,wcslen(data)
(14,)
(15,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(16,dataLen)
(17,COMMAND_INT_PATH)
(18,)
(19,RET)
(20,staticFive)
(21,dataLen)
(22,if (environment != NULL)
(23,dataLen-1)
(24,dataBuffer[100] = COMMAND_ARG2)
(25,_P_WAIT)
(26,environment)
(27,COMMAND_ARG2)
(28,args)
(29,args)
(30,data)
(31,data)
(32,data = dataBuffer)
(33,dataLen = wcslen(data)
(34,)
(35,dataBuffer)
(36,ENV_VARIABLE)
(37,_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
(38,staticFive==5)
(39,NULL)
(40,if(staticFive==5)
(41,)
(42,environment)
(43,1)
(44,5)
(45,dataBuffer)
(46,args)
(47,)
(48,100-dataLen-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
