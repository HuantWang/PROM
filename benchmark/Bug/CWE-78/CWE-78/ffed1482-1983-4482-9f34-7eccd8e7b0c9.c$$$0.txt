-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_10_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalTrue)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* spawnlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
82,83
82,84
82,85
82,86
82,87
82,88
82,89
83,84
85,86
87,88
89,90
91,92
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,88,90,92,94,96
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_10_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_10_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_10_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalTrue
globalTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnlp
_spawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(29,17,0)
(13,42,0)
(6,20,0)
(32,41,0)
(30,40,0)
(13,12,0)
(43,24,0)
(33,21,0)
(42,40,0)
(7,24,0)
(27,43,0)
(39,37,0)
(19,42,0)
(44,10,0)
(18,10,0)
(10,37,0)
(24,40,0)
(2,42,0)
(13,11,0)
(4,37,0)
(35,10,0)
(25,4,0)
(12,13,0)
(41,13,0)
(15,21,0)
(21,37,0)
(13,41,0)
(41,24,0)
(43,12,0)
(1,2,0)
(26,4,0)
(28,40,0)
(20,42,0)
(17,4,0)
(4,21,0)
(16,40,0)
(38,37,0)
(40,9,0)
(34,10,0)
(24,17,0)
(5,10,0)
(8,41,0)
(41,4,0)
(36,2,0)
(14,10,0)
(17,24,0)
(12,43,0)
(45,43,0)
(31,12,0)
(42,20,0)
(3,37,0)
(22,13,0)
(20,6,1)
(8,2,1)
(5,23,1)
(17,29,1)
(23,4,1)
(42,20,1)
(6,19,1)
(7,23,1)
(29,7,1)
(0,10,1)
(14,18,1)
(36,42,1)
(31,22,1)
(4,21,1)
(34,44,1)
(24,17,1)
(32,8,1)
(45,31,1)
(35,34,1)
(18,35,1)
(5,13,1)
(44,5,1)
(41,24,1)
(1,36,1)
(13,12,1)
(43,24,1)
(4,26,1)
(2,1,1)
(27,45,1)
(10,14,1)
(25,21,1)
(43,27,1)
(41,32,1)
(26,25,1)
(17,4,1)
(5,2,1)
(19,24,1)
(21,33,1)
(33,15,1)
(22,41,1)
(13,42,1)
(12,43,1)
(41,4,1)
(2,42,1)
(13,41,1)
(19,23,2)
(41,4,2)
(45,2,2)
(4,21,2)
(13,41,2)
(20,23,2)
(27,2,2)
(2,42,2)
(41,2,2)
(17,23,2)
(8,2,2)
(24,23,2)
(41,24,2)
(7,23,2)
(32,2,2)
(13,42,2)
(13,12,2)
(6,23,2)
(42,23,2)
(31,2,2)
(29,23,2)
(17,4,2)
(2,23,2)
(12,43,2)
(43,24,2)
(36,23,2)
(42,20,2)
(1,23,2)
(13,2,2)
(12,2,2)
(22,2,2)
(43,2,2)
(24,17,2)
-----------------------------------
(0,RET)
(1,NULL)
(2,environment != NULL)
(3,dataBuffer)
(4,data = dataBuffer)
(5,_P_WAIT)
(6,ENV_VARIABLE)
(7,dataLen)
(8,data)
(9,)
(10,_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(11,)
(12,100-dataLen-1)
(13,strncat(data+dataLen, environment, 100-dataLen-1)
(14,NULL)
(15,dataBuffer)
(16,environment)
(17,strlen(data)
(18,COMMAND_ARG3)
(19,environment)
(20,GETENV(ENV_VARIABLE)
(21,dataBuffer[100] = COMMAND_ARG2)
(22,environment)
(23,globalTrue)
(24,dataLen = strlen(data)
(25,data)
(26,dataBuffer)
(27,1)
(28,dataLen)
(29,data)
(30,if (environment != NULL)
(31,100)
(32,dataLen)
(33,COMMAND_ARG2)
(34,COMMAND_INT)
(35,COMMAND_ARG1)
(36,environment)
(37,)
(38,data)
(39,if(globalTrue)
(40,)
(41,data+dataLen)
(42,* environment = GETENV(ENV_VARIABLE)
(43,dataLen-1)
(44,COMMAND_INT)
(45,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
