-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_system_15_bad()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    switch(6)
    {
    case 6:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
30,33
30,34
30,35
30,36
31,32
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
84,85
85,86
85,87
86,87
90,91
90,92
91,92
91,93
92,93
92,94
93,94
95,96
98,99
98,100
99,100
100,101
100,102
101,102
104,105
105,106
105,107
106,107
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,32,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,82,83,87,88,89,94,96,97,102,103,107,108
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
91,92
91,93
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_system_15_bad(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_system_15_bad()
CWE78_OS_Command_Injection__wchar_t_environment_system_15_bad
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(9,44,0)
(52,18,0)
(0,35,0)
(10,40,0)
(54,22,0)
(27,41,0)
(38,22,0)
(31,16,0)
(5,19,0)
(26,36,0)
(14,7,0)
(43,41,0)
(48,44,0)
(49,22,0)
(6,7,0)
(19,44,0)
(28,30,0)
(24,4,0)
(2,49,0)
(25,11,0)
(53,16,0)
(11,4,0)
(3,22,0)
(20,22,0)
(43,40,0)
(43,50,0)
(18,41,0)
(40,49,0)
(4,11,0)
(15,49,0)
(12,38,0)
(21,14,0)
(21,49,0)
(49,38,0)
(7,44,0)
(17,26,0)
(45,22,0)
(23,44,0)
(39,44,0)
(14,21,0)
(53,43,0)
(43,53,0)
(29,14,0)
(47,21,0)
(1,38,0)
(16,14,0)
(46,7,0)
(4,49,0)
(51,43,0)
(41,7,0)
(30,41,0)
(40,14,0)
(33,16,0)
(16,53,0)
(35,36,0)
(13,40,0)
(34,53,0)
(41,18,0)
(40,43,0)
(37,30,0)
(42,7,0)
(31,33,1)
(13,10,1)
(25,4,1)
(47,29,1)
(26,17,1)
(38,12,1)
(43,53,1)
(34,51,1)
(15,2,1)
(21,47,1)
(14,21,1)
(21,49,1)
(51,40,1)
(19,5,1)
(16,14,1)
(18,52,1)
(30,41,1)
(52,27,1)
(17,35,1)
(40,14,1)
(49,15,1)
(16,31,1)
(40,49,1)
(53,16,1)
(11,25,1)
(9,19,1)
(8,26,1)
(48,43,1)
(5,32,1)
(37,41,1)
(33,34,1)
(43,41,1)
(4,24,1)
(4,49,1)
(48,30,1)
(30,28,1)
(28,37,1)
(49,38,1)
(8,11,1)
(12,1,1)
(40,13,1)
(29,32,1)
(24,9,1)
(35,0,1)
(10,30,1)
(41,18,1)
(11,4,1)
(2,38,1)
(0,11,1)
(24,48,1)
(27,14,1)
(32,49,1)
(43,40,1)
(30,41,2)
(16,14,2)
(9,32,2)
(48,32,2)
(37,32,2)
(10,30,2)
(33,30,2)
(41,32,2)
(40,49,2)
(29,32,2)
(41,18,2)
(0,11,2)
(31,30,2)
(21,32,2)
(17,11,2)
(53,16,2)
(5,32,2)
(13,30,2)
(27,32,2)
(14,32,2)
(52,32,2)
(43,30,2)
(43,53,2)
(14,21,2)
(53,30,2)
(18,32,2)
(19,32,2)
(11,4,2)
(47,32,2)
(30,32,2)
(40,14,2)
(28,32,2)
(40,30,2)
(21,49,2)
(34,30,2)
(49,38,2)
(43,41,2)
(16,30,2)
(43,40,2)
(35,11,2)
(26,11,2)
(51,30,2)
(4,49,2)
-----------------------------------
(0,"command execution failed!")
(1,data_buf)
(2,data)
(3,data)
(4,SYSTEM(data)
(5,"Benign, fixed string")
(6,dataLen)
(7,)
(8,RET)
(9,break;)
(10,data)
(11,SYSTEM(data)
(12,FULL_COMMAND)
(13,dataLen)
(14,dataLen = wcslen(data)
(15,data_buf)
(16,dataLen-1)
(17,1)
(18,GETENV(ENV_VARIABLE)
(19,printLine("Benign, fixed string")
(20,data_buf)
(21,wcslen(data)
(22,)
(23,default:)
(24,data)
(25,0)
(26,exit(1)
(27,environment)
(28,NULL)
(29,dataLen)
(30,environment != NULL)
(31,1)
(32,6)
(33,dataLen)
(34,100)
(35,printLine("command execution failed!")
(36,)
(37,environment)
(38,data_buf[100] = FULL_COMMAND)
(39,case 6:)
(40,data+dataLen)
(41,* environment = GETENV(ENV_VARIABLE)
(42,if (environment != NULL)
(43,wcsncat(data+dataLen, environment, 100-dataLen-1)
(44,)
(45,if (SYSTEM(data)
(46,environment)
(47,data)
(48,break;)
(49,data = data_buf)
(50,)
(51,environment)
(52,ENV_VARIABLE)
(53,100-dataLen-1)
(54,switch(6)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
