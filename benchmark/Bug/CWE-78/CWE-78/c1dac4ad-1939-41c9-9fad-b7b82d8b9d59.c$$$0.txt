-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_console_popen_52_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    {
        /* Read input from the console */
        size_t dataLen = strlen(data);
        /* if there is room in data, read into it from the console */
        if (100-dataLen > 1)
        {
            /* POTENTIAL FLAW: Read data from the console */
            if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)
            {
                /* The next few lines remove the carriage return from the string that is
                 * inserted by fgets() */
                dataLen = strlen(data);
                if (dataLen > 0 && data[dataLen-1] == '\n')
                {
                    data[dataLen-1] = '\0';
                }
            }
            else
            {
                printLine("fgets() failed");
                /* Restore NUL terminator if fgets fails */
                data[dataLen] = '\0';
            }
        }
    }
    CWE78_OS_Command_Injection__char_console_popen_52b_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
41,43
42,43
42,44
43,44
43,45
45,46
48,49
49,50
49,51
49,52
50,51
50,52
51,52
51,53
51,54
51,55
52,53
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
63,64
64,65
64,66
66,67
68,69
70,71
72,73
72,74
73,74
74,75
74,76
75,76
77,78
77,79
78,79
80,81
82,83
82,84
83,84
83,85
84,85
84,86
85,86
88,89
88,90
89,90
89,91
90,91
92,93
92,94
93,94
97,98
98,99
99,100
99,101
100,101
100,102
101,102
103,104
103,105
104,105
108,109
108,110
109,110
110,111
110,112
111,112
114,115
115,116
115,117
116,117
116,118
117,118
119,120
122,123
123,124
123,125
124,125
126,127
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,53,56,58,61,62,65,67,69,71,76,79,81,86,87,91,94,95,96,102,105,106,107,112,113,118,120,121,125,127
-----computeFrom-----
23,24
23,25
42,43
42,44
43,44
43,45
50,51
50,52
54,55
54,56
64,65
64,66
74,75
74,76
83,84
83,85
84,85
84,86
88,89
88,90
92,93
92,94
99,100
99,101
103,104
103,105
115,116
115,117
-----guardedBy-----
46,120
56,102
67,105
91,102
94,105
-----guardedByNegation-----
56,118
67,120
-----lastLexicalUse-----
56,118
67,120
-----jump-----
56,118
67,120
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_console_popen_52_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (100-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }    CWE78_OS_Command_Injection__char_console_popen_52b_badSink(data);}
void
CWE78_OS_Command_Injection__char_console_popen_52_bad()
CWE78_OS_Command_Injection__char_console_popen_52_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (100-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }    CWE78_OS_Command_Injection__char_console_popen_52b_badSink(data);}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
{        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (100-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
if (100-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }
if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }
fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL
fgets(data+dataLen, (int)(100-dataLen), stdin)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
stdin
stdin
NULL
NULL
{                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }
dataLen = strlen(data);
dataLen = strlen(data)
dataLen
dataLen
strlen(data)
strlen
strlen
data
data
if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }
dataLen > 0 && data[dataLen-1] == '\n'
dataLen > 0
dataLen
dataLen
0
data[dataLen-1] == '\n'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\n'
{                    data[dataLen-1] = '\0';                }
data[dataLen-1] = '\0';
data[dataLen-1] = '\0'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\0'
{                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
CWE78_OS_Command_Injection__char_console_popen_52b_badSink(data);
CWE78_OS_Command_Injection__char_console_popen_52b_badSink(data)
CWE78_OS_Command_Injection__char_console_popen_52b_badSink
CWE78_OS_Command_Injection__char_console_popen_52b_badSink
data
data
-----joern-----
(12,27,0)
(59,61,0)
(35,65,0)
(55,65,0)
(33,16,0)
(41,65,0)
(67,43,0)
(36,9,0)
(14,47,0)
(31,26,0)
(48,17,0)
(43,65,0)
(11,51,0)
(54,62,0)
(29,55,0)
(5,9,0)
(21,26,0)
(20,51,0)
(46,49,0)
(39,65,0)
(61,16,0)
(13,19,0)
(27,61,0)
(11,42,0)
(47,29,0)
(63,62,0)
(26,63,0)
(58,8,0)
(24,5,0)
(22,9,0)
(10,33,0)
(39,9,0)
(44,43,0)
(35,26,0)
(37,18,0)
(2,17,0)
(15,63,0)
(51,68,0)
(17,48,0)
(7,36,0)
(29,36,0)
(64,29,0)
(23,63,0)
(69,55,0)
(27,65,0)
(34,36,0)
(47,65,0)
(51,11,0)
(15,48,0)
(0,58,0)
(27,29,0)
(18,25,0)
(3,35,0)
(66,65,0)
(4,8,0)
(48,15,0)
(26,35,0)
(17,35,0)
(63,49,0)
(50,5,0)
(8,29,0)
(30,15,0)
(56,27,0)
(43,18,0)
(53,68,0)
(45,42,0)
(65,9,0)
(55,29,0)
(8,58,0)
(62,65,0)
(52,8,0)
(28,39,0)
(68,29,0)
(35,17,0)
(44,63,0)
(60,47,0)
(11,47,0)
(47,11,0)
(32,11,0)
(43,44,0)
(70,68,0)
(40,44,0)
(62,63,0)
(51,20,0)
(6,44,0)
(65,5,0)
(1,15,0)
(38,9,0)
(42,11,0)
(68,51,0)
(26,21,1)
(61,59,1)
(68,70,1)
(26,63,1)
(55,65,1)
(27,65,1)
(1,30,1)
(56,12,1)
(44,40,1)
(65,41,1)
(62,65,1)
(8,52,1)
(14,58,1)
(28,48,1)
(35,26,1)
(28,61,1)
(43,44,1)
(21,31,1)
(52,4,1)
(2,35,1)
(69,64,1)
(47,29,1)
(27,56,1)
(17,2,1)
(6,67,1)
(32,51,1)
(64,65,1)
(42,11,1)
(65,5,1)
(63,62,1)
(58,8,1)
(39,28,1)
(23,42,1)
(28,18,1)
(11,51,1)
(59,27,1)
(70,53,1)
(68,29,1)
(15,63,1)
(42,45,1)
(12,33,1)
(5,24,1)
(3,15,1)
(62,54,1)
(48,15,1)
(47,60,1)
(51,68,1)
(18,37,1)
(37,43,1)
(47,65,1)
(40,6,1)
(0,8,1)
(58,0,1)
(44,63,1)
(53,47,1)
(54,23,1)
(10,42,1)
(51,20,1)
(4,29,1)
(43,65,1)
(17,35,1)
(60,14,1)
(27,29,1)
(55,69,1)
(33,10,1)
(15,1,1)
(41,66,1)
(45,11,1)
(31,3,1)
(66,5,1)
(48,17,1)
(30,63,1)
(57,39,1)
(24,50,1)
(39,65,1)
(28,58,1)
(29,55,1)
(11,32,1)
(35,65,1)
(67,48,1)
(11,47,1)
(8,29,1)
(27,42,2)
(27,65,2)
(59,42,2)
(14,58,2)
(11,51,2)
(32,58,2)
(56,42,2)
(63,62,2)
(26,15,2)
(27,29,2)
(15,42,2)
(43,44,2)
(51,68,2)
(47,58,2)
(51,20,2)
(35,15,2)
(17,35,2)
(43,65,2)
(53,58,2)
(54,42,2)
(12,42,2)
(65,5,2)
(39,65,2)
(2,15,2)
(48,17,2)
(60,58,2)
(70,58,2)
(68,29,2)
(29,55,2)
(31,15,2)
(26,63,2)
(48,42,2)
(48,15,2)
(21,15,2)
(47,29,2)
(3,15,2)
(62,42,2)
(23,42,2)
(68,58,2)
(51,58,2)
(37,48,2)
(43,48,2)
(42,58,2)
(35,26,2)
(55,65,2)
(44,48,2)
(62,65,2)
(42,11,2)
(35,65,2)
(63,42,2)
(61,42,2)
(10,42,2)
(44,63,2)
(17,15,2)
(67,48,2)
(8,29,2)
(58,8,2)
(40,48,2)
(15,63,2)
(18,48,2)
(47,65,2)
(11,47,2)
(33,42,2)
(6,48,2)
(1,42,2)
(11,58,2)
(45,58,2)
(30,42,2)
-----------------------------------
(0,1)
(1,0)
(2,\\\'\\\\n\\\')
(3,data)
(4,100)
(5,data_buf[100] = FULL_COMMAND)
(6,dataLen)
(7,dataLen)
(8,100-dataLen)
(9,)
(10,"fgets()
(11,fgets(data+dataLen, (int)
(12,data)
(13,if (fgets(data+dataLen, (int)
(14,data)
(15,dataLen > 0)
(16,)
(17,data[dataLen-1] == \\\'\\\\n\\\')
(18,data[dataLen-1] = \\\'\\\\0\\\')
(19,)
(20,int)
(21,1)
(22,data_buf)
(23,dataLen)
(24,FULL_COMMAND)
(25,)
(26,dataLen-1)
(27,data[dataLen])
(28,data)
(29,dataLen = strlen(data)
(30,dataLen)
(31,dataLen)
(32,stdin)
(33,printLine("fgets()
(34,if (100-dataLen > 1)
(35,data[dataLen-1])
(36,)
(37,\\\'\\\\0\\\')
(38,data)
(39,CWE78_OS_Command_Injection__char_console_popen_52b_badSink(data)
(40,1)
(41,data_buf)
(42,fgets(data+dataLen, (int)
(43,data[dataLen-1])
(44,dataLen-1)
(45,NULL)
(46,if (dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(47,data+dataLen)
(48,dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(49,)
(50,data_buf)
(51,(int)
(52,dataLen)
(53,100)
(54,data)
(55,strlen(data)
(56,dataLen)
(57,RET)
(58,100-dataLen > 1)
(59,\\\'\\\\0\\\')
(60,dataLen)
(61,data[dataLen] = \\\'\\\\0\\\')
(62,strlen(data)
(63,dataLen = strlen(data)
(64,dataLen)
(65,data = data_buf)
(66,data)
(67,data)
(68,100-dataLen)
(69,data)
(70,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
