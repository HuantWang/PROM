-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_system_64_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE78_OS_Command_Injection__char_file_system_64b_badSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
118,119
120,121
121,122
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,122
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_system_64_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_system_64b_badSink(&data);}
void
CWE78_OS_Command_Injection__char_file_system_64_bad()
CWE78_OS_Command_Injection__char_file_system_64_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_system_64b_badSink(&data);}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE78_OS_Command_Injection__char_file_system_64b_badSink(&data);
CWE78_OS_Command_Injection__char_file_system_64b_badSink(&data)
CWE78_OS_Command_Injection__char_file_system_64b_badSink
CWE78_OS_Command_Injection__char_file_system_64b_badSink
&data
data
data
-----joern-----
(54,19,0)
(52,10,0)
(28,2,0)
(0,48,0)
(27,15,0)
(0,53,0)
(32,20,0)
(22,19,0)
(50,54,0)
(25,1,0)
(16,25,0)
(45,56,0)
(56,53,0)
(48,0,0)
(12,9,0)
(17,28,0)
(34,53,0)
(47,57,0)
(56,58,0)
(57,47,0)
(37,27,0)
(18,21,0)
(30,58,0)
(4,38,0)
(19,54,0)
(39,15,0)
(38,46,0)
(56,27,0)
(7,54,0)
(40,0,0)
(31,0,0)
(48,14,0)
(44,53,0)
(47,46,0)
(59,2,0)
(53,38,0)
(14,48,0)
(53,46,0)
(54,27,0)
(58,49,0)
(15,46,0)
(24,46,0)
(55,57,0)
(9,12,0)
(29,27,0)
(12,21,0)
(25,48,0)
(48,12,0)
(0,27,0)
(26,56,0)
(25,16,0)
(5,48,0)
(48,25,0)
(16,27,0)
(27,37,0)
(23,15,0)
(6,37,0)
(36,20,0)
(43,16,0)
(37,53,0)
(10,49,0)
(51,9,0)
(57,53,0)
(8,46,0)
(13,12,0)
(20,12,0)
(28,12,0)
(11,38,0)
(35,14,0)
(1,25,0)
(41,16,0)
(42,9,0)
(3,15,0)
(57,53,1)
(7,27,1)
(42,13,1)
(48,12,1)
(17,14,1)
(0,53,1)
(9,51,1)
(36,12,1)
(27,37,1)
(26,10,1)
(48,5,1)
(12,9,1)
(35,48,1)
(37,53,1)
(53,38,1)
(41,0,1)
(28,12,1)
(37,6,1)
(56,45,1)
(20,12,1)
(45,26,1)
(6,29,1)
(56,53,1)
(32,36,1)
(56,27,1)
(25,1,1)
(19,22,1)
(57,55,1)
(28,17,1)
(53,44,1)
(14,35,1)
(33,47,1)
(48,0,1)
(5,25,1)
(25,16,1)
(43,41,1)
(14,48,1)
(55,20,1)
(40,31,1)
(44,34,1)
(51,42,1)
(10,52,1)
(54,50,1)
(16,27,1)
(31,20,1)
(55,19,1)
(17,58,1)
(54,27,1)
(13,19,1)
(50,7,1)
(20,32,1)
(11,4,1)
(19,54,1)
(16,43,1)
(47,57,1)
(38,11,1)
(55,28,1)
(22,54,1)
(29,53,1)
(34,38,1)
(48,25,1)
(0,40,1)
(30,56,1)
(58,30,1)
(0,27,1)
(52,14,1)
(41,20,2)
(45,14,2)
(17,20,2)
(9,19,2)
(12,19,2)
(40,20,2)
(10,14,2)
(48,25,2)
(42,19,2)
(56,14,2)
(13,19,2)
(48,20,2)
(25,20,2)
(58,14,2)
(16,27,2)
(5,20,2)
(25,1,2)
(53,38,2)
(48,0,2)
(47,57,2)
(27,37,2)
(28,12,2)
(14,20,2)
(28,20,2)
(20,12,2)
(32,19,2)
(54,27,2)
(16,20,2)
(26,14,2)
(12,9,2)
(0,27,2)
(36,19,2)
(35,20,2)
(14,48,2)
(31,20,2)
(43,20,2)
(30,14,2)
(20,19,2)
(48,12,2)
(37,53,2)
(0,53,2)
(56,53,2)
(0,20,2)
(19,54,2)
(56,27,2)
(52,14,2)
(25,16,2)
(51,19,2)
(57,53,2)
-----------------------------------
(0,data+dataLen)
(1,int)
(2,)
(3,if (100-dataLen > 1)
(4,data_buf)
(5,pFile)
(6,data)
(7,100)
(8,data_buf)
(9,fopen(FILENAME, "r")
(10,printLine("fgets()
(11,FULL_COMMAND)
(12,pFile = fopen(FILENAME, "r")
(13,pFile)
(14,fgets(data+dataLen, (int)
(15,)
(16,100-dataLen)
(17,pFile)
(18,if (pFile != NULL)
(19,100-dataLen > 1)
(20,pFile != NULL)
(21,)
(22,1)
(23,dataLen)
(24,data)
(25,(int)
(26,data)
(27,dataLen = strlen(data)
(28,fclose(pFile)
(29,dataLen)
(30,\\\'\\\\0\\\')
(31,data)
(32,NULL)
(33,RET)
(34,data)
(35,NULL)
(36,pFile)
(37,strlen(data)
(38,data_buf[100] = FULL_COMMAND)
(39,pFile)
(40,dataLen)
(41,100)
(42,FILENAME)
(43,dataLen)
(44,data_buf)
(45,dataLen)
(46,)
(47,CWE78_OS_Command_Injection__char_file_system_64b_badSink(&data)
(48,fgets(data+dataLen, (int)
(49,)
(50,dataLen)
(51,"r")
(52,"fgets()
(53,data = data_buf)
(54,100-dataLen)
(55,data)
(56,data[dataLen])
(57,&data)
(58,data[dataLen] = \\\'\\\\0\\\')
(59,if (fgets(data+dataLen, (int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
