-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_16_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    while(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
        break;
    }
    /* spawnlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
81,82
82,83
82,84
82,85
82,86
82,87
82,88
82,89
83,84
85,86
87,88
89,90
91,92
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,80,84,86,88,90,92,94,96
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_16_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_16_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_16_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnlp
_spawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(6,30,0)
(29,30,0)
(43,21,0)
(33,6,0)
(39,21,0)
(30,27,0)
(37,22,0)
(44,19,0)
(3,39,0)
(16,22,0)
(28,25,0)
(4,32,0)
(33,13,0)
(15,19,0)
(34,39,0)
(9,25,0)
(12,30,0)
(21,25,0)
(23,10,0)
(18,12,0)
(40,32,0)
(0,32,0)
(5,19,0)
(45,22,0)
(45,33,0)
(21,19,0)
(46,30,0)
(17,1,0)
(10,21,0)
(14,32,0)
(20,33,0)
(24,30,0)
(33,45,0)
(35,1,0)
(25,19,0)
(7,45,0)
(38,21,0)
(1,6,0)
(12,10,0)
(39,33,0)
(36,32,0)
(2,8,0)
(8,6,0)
(22,12,0)
(42,32,0)
(26,6,0)
(39,12,0)
(41,27,0)
(10,12,0)
(6,8,0)
(32,19,0)
(22,45,0)
(33,39,0)
(4,41,1)
(14,36,1)
(10,21,1)
(20,39,1)
(23,18,1)
(16,7,1)
(39,21,1)
(41,1,1)
(42,14,1)
(0,4,1)
(38,43,1)
(21,25,1)
(17,35,1)
(33,45,1)
(10,23,1)
(37,16,1)
(45,22,1)
(33,6,1)
(39,34,1)
(3,1,1)
(36,0,1)
(25,9,1)
(1,17,1)
(9,28,1)
(22,37,1)
(8,2,1)
(39,12,1)
(41,33,1)
(43,25,1)
(21,38,1)
(34,3,1)
(6,8,1)
(22,12,1)
(35,6,1)
(2,26,1)
(7,20,1)
(26,12,1)
(12,10,1)
(33,39,1)
(11,32,1)
(4,31,1)
(18,31,1)
(1,6,1)
(32,40,1)
(31,21,1)
(40,42,1)
(33,1,2)
(26,31,2)
(12,10,2)
(37,1,2)
(8,31,2)
(17,31,2)
(33,6,2)
(45,22,2)
(21,25,2)
(10,21,2)
(3,1,2)
(2,31,2)
(45,1,2)
(22,1,2)
(22,12,2)
(6,31,2)
(16,1,2)
(18,31,2)
(34,1,2)
(12,31,2)
(39,12,2)
(1,6,2)
(41,31,2)
(1,31,2)
(7,1,2)
(33,45,2)
(20,1,2)
(39,1,2)
(23,31,2)
(35,31,2)
(6,8,2)
(33,39,2)
(10,31,2)
(39,21,2)
-----------------------------------
(0,COMMAND_INT)
(1,environment != NULL)
(2,ENV_VARIABLE)
(3,data)
(4,_P_WAIT)
(5,data)
(6,* environment = GETENV(ENV_VARIABLE)
(7,100)
(8,GETENV(ENV_VARIABLE)
(9,COMMAND_ARG2)
(10,strlen(data)
(11,RET)
(12,dataLen = strlen(data)
(13,)
(14,COMMAND_ARG1)
(15,dataBuffer)
(16,dataLen)
(17,NULL)
(18,dataLen)
(19,)
(20,environment)
(21,data = dataBuffer)
(22,dataLen-1)
(23,data)
(24,environment)
(25,dataBuffer[100] = COMMAND_ARG2)
(26,environment)
(27,)
(28,dataBuffer)
(29,if (environment != NULL)
(30,)
(31,1)
(32,_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(33,strncat(data+dataLen, environment, 100-dataLen-1)
(34,dataLen)
(35,environment)
(36,COMMAND_INT)
(37,1)
(38,dataBuffer)
(39,data+dataLen)
(40,NULL)
(41,break;)
(42,COMMAND_ARG3)
(43,data)
(44,while(1)
(45,100-dataLen-1)
(46,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
