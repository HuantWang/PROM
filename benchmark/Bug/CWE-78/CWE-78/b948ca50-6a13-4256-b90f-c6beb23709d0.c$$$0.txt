-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_14_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalFive==5)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnvp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnvp(_P_WAIT, COMMAND_INT, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
83,85
84,85
85,86
85,87
87,88
87,89
87,90
87,91
91,92
92,93
92,94
92,95
92,96
93,94
95,96
97,98
99,100
101,102
102,103
102,104
102,105
102,106
103,104
105,106
107,108
109,110
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,86,88,89,90,94,96,98,100,104,106,108,110
-----computeFrom-----
23,24
23,25
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_14_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalFive==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_14_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_14_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalFive==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalFive==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnvp(_P_WAIT, COMMAND_INT, args);
_spawnvp(_P_WAIT, COMMAND_INT, args)
_spawnvp
_spawnvp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(47,42,0)
(3,9,0)
(1,47,0)
(43,0,0)
(5,11,0)
(2,32,0)
(42,6,0)
(26,46,0)
(31,17,0)
(46,28,0)
(46,32,0)
(22,48,0)
(25,46,0)
(33,9,0)
(24,5,0)
(4,6,0)
(27,36,0)
(39,36,0)
(20,47,0)
(24,8,0)
(38,11,0)
(8,48,0)
(6,42,0)
(18,14,0)
(11,41,0)
(41,11,0)
(9,36,0)
(30,5,0)
(15,28,0)
(28,32,0)
(12,41,0)
(34,48,0)
(5,24,0)
(17,36,0)
(32,36,0)
(16,41,0)
(42,48,0)
(5,42,0)
(48,21,0)
(40,24,0)
(9,17,0)
(19,24,0)
(8,14,0)
(45,46,0)
(11,5,0)
(44,8,0)
(24,9,0)
(14,8,0)
(41,8,0)
(14,9,0)
(5,29,0)
(13,42,0)
(37,17,0)
(10,48,0)
(35,0,0)
(23,36,0)
(24,9,1)
(24,19,1)
(43,35,1)
(7,46,1)
(5,24,1)
(3,33,1)
(28,15,1)
(38,30,1)
(47,1,1)
(14,9,1)
(1,20,1)
(35,9,1)
(12,38,1)
(24,8,1)
(41,16,1)
(47,42,1)
(31,37,1)
(45,28,1)
(14,18,1)
(15,0,1)
(44,0,1)
(15,47,1)
(11,41,1)
(46,28,1)
(9,3,1)
(30,24,1)
(17,31,1)
(5,11,1)
(16,12,1)
(46,25,1)
(6,4,1)
(0,43,1)
(13,8,1)
(26,45,1)
(4,13,1)
(33,17,1)
(19,40,1)
(41,8,1)
(9,17,1)
(40,47,1)
(25,26,1)
(8,14,1)
(5,42,1)
(18,44,1)
(20,42,1)
(15,5,1)
(42,6,1)
(24,9,2)
(38,47,2)
(14,0,2)
(8,14,2)
(47,0,2)
(41,8,2)
(5,47,2)
(44,0,2)
(42,6,2)
(20,0,2)
(11,41,2)
(19,47,2)
(4,0,2)
(12,47,2)
(16,47,2)
(41,47,2)
(5,24,2)
(13,0,2)
(46,28,2)
(40,47,2)
(24,8,2)
(9,17,2)
(8,0,2)
(47,42,2)
(5,11,2)
(14,9,2)
(24,47,2)
(1,0,2)
(18,0,2)
(6,0,2)
(5,42,2)
(42,0,2)
(11,47,2)
(30,47,2)
-----------------------------------
(0,globalFive==5)
(1,NULL)
(2,args)
(3,dataBuffer)
(4,ENV_VARIABLE)
(5,strncat(data+dataLen, environment, 100-dataLen-1)
(6,GETENV(ENV_VARIABLE)
(7,RET)
(8,dataLen = strlen(data)
(9,data = dataBuffer)
(10,if (environment != NULL)
(11,100-dataLen-1)
(12,dataLen)
(13,environment)
(14,strlen(data)
(15,args)
(16,1)
(17,dataBuffer[100] = COMMAND_ARG2)
(18,data)
(19,dataLen)
(20,environment)
(21,)
(22,environment)
(23,data)
(24,data+dataLen)
(25,args)
(26,COMMAND_INT)
(27,if(globalFive==5)
(28,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(29,)
(30,environment)
(31,COMMAND_ARG2)
(32,)
(33,data)
(34,dataLen)
(35,globalFive)
(36,)
(37,dataBuffer)
(38,100)
(39,dataBuffer)
(40,data)
(41,dataLen-1)
(42,* environment = GETENV(ENV_VARIABLE)
(43,5)
(44,dataLen)
(45,_P_WAIT)
(46,_spawnvp(_P_WAIT, COMMAND_INT, args)
(47,environment != NULL)
(48,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
