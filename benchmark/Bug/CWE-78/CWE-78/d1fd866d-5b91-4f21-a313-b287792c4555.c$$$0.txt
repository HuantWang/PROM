-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_09_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnvp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnvp(_P_WAIT, COMMAND_INT, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
81,83
82,83
83,84
83,85
85,86
85,87
85,88
85,89
89,90
90,91
90,92
90,93
90,94
91,92
93,94
95,96
97,98
99,100
100,101
100,102
100,103
100,104
101,102
103,104
105,106
107,108
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,87,88,92,94,96,98,102,104,106,108
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_09_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(GLOBAL_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_09_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_09_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(GLOBAL_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(GLOBAL_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnvp(_P_WAIT, COMMAND_INT, args);
_spawnvp(_P_WAIT, COMMAND_INT, args)
_spawnvp
_spawnvp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(23,9,0)
(45,19,0)
(1,26,0)
(14,27,0)
(20,26,0)
(29,26,0)
(19,27,0)
(16,27,0)
(38,46,0)
(12,6,0)
(46,2,0)
(6,9,0)
(46,35,0)
(27,16,0)
(9,35,0)
(12,3,0)
(12,0,0)
(28,33,0)
(24,16,0)
(3,35,0)
(15,2,0)
(40,3,0)
(42,17,0)
(2,29,0)
(25,29,0)
(41,2,0)
(6,12,0)
(35,46,0)
(33,7,0)
(22,26,0)
(27,33,0)
(8,21,0)
(3,2,0)
(3,12,0)
(39,29,0)
(35,33,0)
(9,6,0)
(44,42,0)
(11,42,0)
(42,21,0)
(43,42,0)
(17,21,0)
(21,26,0)
(32,12,0)
(18,33,0)
(2,26,0)
(34,6,0)
(4,17,0)
(36,19,0)
(10,9,0)
(31,33,0)
(12,27,0)
(13,35,0)
(37,3,0)
(40,37,1)
(24,14,1)
(38,13,1)
(19,27,1)
(29,25,1)
(15,29,1)
(5,2,1)
(12,27,1)
(44,11,1)
(46,2,1)
(10,34,1)
(12,6,1)
(46,38,1)
(13,5,1)
(41,15,1)
(12,3,1)
(19,36,1)
(6,9,1)
(32,3,1)
(37,19,1)
(17,4,1)
(16,24,1)
(42,44,1)
(4,5,1)
(27,16,1)
(4,12,1)
(11,43,1)
(4,19,1)
(9,35,1)
(3,35,1)
(35,46,1)
(9,23,1)
(30,42,1)
(43,17,1)
(45,27,1)
(3,40,1)
(25,39,1)
(34,32,1)
(2,41,1)
(2,29,1)
(36,45,1)
(3,2,1)
(42,17,1)
(14,35,1)
(23,10,1)
(36,5,2)
(12,6,2)
(46,2,2)
(3,19,2)
(2,29,2)
(16,5,2)
(40,19,2)
(14,5,2)
(9,35,2)
(38,5,2)
(35,46,2)
(27,5,2)
(10,19,2)
(45,5,2)
(34,19,2)
(12,27,2)
(9,19,2)
(6,19,2)
(12,19,2)
(42,17,2)
(13,5,2)
(6,9,2)
(46,5,2)
(19,27,2)
(24,5,2)
(12,3,2)
(37,19,2)
(23,19,2)
(3,2,2)
(35,5,2)
(27,16,2)
(32,19,2)
(19,5,2)
(3,35,2)
-----------------------------------
(0,)
(1,dataBuffer)
(2,data = dataBuffer)
(3,data+dataLen)
(4,args)
(5,GLOBAL_CONST_TRUE)
(6,100-dataLen-1)
(7,)
(8,args)
(9,dataLen-1)
(10,dataLen)
(11,COMMAND_INT)
(12,strncat(data+dataLen, environment, 100-dataLen-1)
(13,dataLen)
(14,environment)
(15,data)
(16,GETENV(ENV_VARIABLE)
(17,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(18,if (environment != NULL)
(19,environment != NULL)
(20,data)
(21,)
(22,if(GLOBAL_CONST_TRUE)
(23,1)
(24,ENV_VARIABLE)
(25,COMMAND_ARG2)
(26,)
(27,* environment = GETENV(ENV_VARIABLE)
(28,environment)
(29,dataBuffer[100] = COMMAND_ARG2)
(30,RET)
(31,dataLen)
(32,environment)
(33,)
(34,100)
(35,dataLen = strlen(data)
(36,NULL)
(37,data)
(38,data)
(39,dataBuffer)
(40,dataLen)
(41,dataBuffer)
(42,_spawnvp(_P_WAIT, COMMAND_INT, args)
(43,_P_WAIT)
(44,args)
(45,environment)
(46,strlen(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
