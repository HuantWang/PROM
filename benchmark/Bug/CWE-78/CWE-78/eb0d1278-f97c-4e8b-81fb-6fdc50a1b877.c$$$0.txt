-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_03_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(5==5)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
82,84
83,84
84,85
84,86
86,87
86,88
86,89
86,90
90,91
91,92
91,93
91,94
91,95
92,93
94,95
96,97
98,99
100,101
101,102
101,103
101,104
101,105
102,103
104,105
106,107
108,109
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,85,87,88,89,93,95,97,99,103,105,107,109
-----computeFrom-----
23,24
23,25
29,30
29,31
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_03_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnv_03_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnv_03_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
5==5
5
5
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnv(_P_WAIT, COMMAND_INT_PATH, args);
_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
_spawnv
_spawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(4,0,0)
(11,18,0)
(6,33,0)
(29,19,0)
(13,47,0)
(38,44,0)
(47,2,0)
(16,30,0)
(20,2,0)
(19,12,0)
(15,35,0)
(42,23,0)
(46,4,0)
(35,34,0)
(12,21,0)
(27,15,0)
(31,15,0)
(21,23,0)
(36,25,0)
(0,4,0)
(12,19,0)
(30,23,0)
(24,47,0)
(29,27,0)
(44,15,0)
(27,29,0)
(7,35,0)
(45,33,0)
(26,21,0)
(3,23,0)
(8,47,0)
(27,10,0)
(4,27,0)
(0,19,0)
(19,35,0)
(18,15,0)
(5,30,0)
(37,44,0)
(1,29,0)
(2,25,0)
(29,21,0)
(40,19,0)
(41,12,0)
(48,0,0)
(14,35,0)
(32,27,0)
(28,29,0)
(17,23,0)
(43,21,0)
(25,23,0)
(21,30,0)
(39,0,0)
(27,4,0)
(9,35,0)
(47,25,0)
(15,18,0)
(28,44,1)
(38,37,1)
(0,39,1)
(48,46,1)
(39,48,1)
(47,8,1)
(11,31,1)
(20,27,1)
(21,43,1)
(30,16,1)
(46,32,1)
(12,41,1)
(31,19,1)
(45,6,1)
(43,26,1)
(22,47,1)
(1,28,1)
(44,15,1)
(13,2,1)
(27,4,1)
(20,44,1)
(40,33,1)
(33,45,1)
(2,20,1)
(32,29,1)
(26,30,1)
(44,38,1)
(47,2,1)
(29,1,1)
(6,21,1)
(16,5,1)
(29,21,1)
(29,19,1)
(27,15,1)
(12,21,1)
(21,30,1)
(27,29,1)
(37,15,1)
(20,33,1)
(8,24,1)
(15,18,1)
(18,11,1)
(41,40,1)
(4,0,1)
(0,19,1)
(19,12,1)
(24,13,1)
(12,33,2)
(27,4,2)
(32,44,2)
(18,33,2)
(44,15,2)
(37,33,2)
(41,33,2)
(48,44,2)
(28,44,2)
(27,44,2)
(46,44,2)
(40,33,2)
(38,33,2)
(31,33,2)
(21,30,2)
(29,21,2)
(15,18,2)
(0,19,2)
(19,12,2)
(11,33,2)
(0,44,2)
(4,0,2)
(27,15,2)
(27,29,2)
(12,21,2)
(29,19,2)
(39,44,2)
(19,33,2)
(47,2,2)
(29,44,2)
(4,44,2)
(15,33,2)
(44,33,2)
(1,44,2)
-----------------------------------
(0,dataLen-1)
(1,dataLen)
(2,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(3,dataBuffer)
(4,100-dataLen-1)
(5,dataBuffer)
(6,5)
(7,environment)
(8,args)
(9,dataLen)
(10,)
(11,ENV_VARIABLE)
(12,strlen(data)
(13,_P_WAIT)
(14,if (environment != NULL)
(15,* environment = GETENV(ENV_VARIABLE)
(16,COMMAND_ARG2)
(17,data)
(18,GETENV(ENV_VARIABLE)
(19,dataLen = strlen(data)
(20,args)
(21,data = dataBuffer)
(22,RET)
(23,)
(24,COMMAND_INT_PATH)
(25,)
(26,data)
(27,strncat(data+dataLen, environment, 100-dataLen-1)
(28,data)
(29,data+dataLen)
(30,dataBuffer[100] = COMMAND_ARG2)
(31,environment)
(32,environment)
(33,5==5)
(34,)
(35,)
(36,args)
(37,environment)
(38,NULL)
(39,1)
(40,dataLen)
(41,data)
(42,if(5==5)
(43,dataBuffer)
(44,environment != NULL)
(45,5)
(46,100)
(47,_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
(48,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
