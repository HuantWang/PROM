-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_w32spawnl_41_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE78_OS_Command_Injection__char_file_w32spawnl_41_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,121
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_w32spawnl_41_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_w32spawnl_41_badSink(data);}
void
CWE78_OS_Command_Injection__char_file_w32spawnl_41_bad()
CWE78_OS_Command_Injection__char_file_w32spawnl_41_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_w32spawnl_41_badSink(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE78_OS_Command_Injection__char_file_w32spawnl_41_badSink(data);
CWE78_OS_Command_Injection__char_file_w32spawnl_41_badSink(data)
CWE78_OS_Command_Injection__char_file_w32spawnl_41_badSink
CWE78_OS_Command_Injection__char_file_w32spawnl_41_badSink
data
data
-----joern-----
(40,51,0)
(17,36,0)
(7,36,0)
(1,13,0)
(56,17,0)
(31,35,0)
(47,25,0)
(42,28,0)
(38,1,0)
(14,25,0)
(41,22,0)
(23,1,0)
(29,24,0)
(36,45,0)
(57,51,0)
(15,38,0)
(50,48,0)
(1,38,0)
(0,50,0)
(49,24,0)
(28,45,0)
(38,17,0)
(10,1,0)
(30,22,0)
(56,45,0)
(19,45,0)
(39,2,0)
(4,35,0)
(1,23,0)
(23,51,0)
(51,23,0)
(32,14,0)
(16,25,0)
(24,22,0)
(6,28,0)
(22,24,0)
(12,17,0)
(43,28,0)
(37,38,0)
(23,54,0)
(26,21,0)
(20,17,0)
(27,36,0)
(53,13,0)
(44,4,0)
(38,48,0)
(9,11,0)
(4,48,0)
(48,28,0)
(24,2,0)
(58,3,0)
(4,17,0)
(13,1,0)
(18,49,0)
(54,23,0)
(51,48,0)
(50,17,0)
(1,24,0)
(17,45,0)
(25,14,0)
(49,11,0)
(25,48,0)
(5,45,0)
(35,46,0)
(3,46,0)
(34,48,0)
(8,56,0)
(48,50,0)
(33,4,0)
(55,21,0)
(21,24,0)
(25,16,1)
(8,14,1)
(41,29,1)
(21,55,1)
(56,17,1)
(24,22,1)
(57,40,1)
(56,8,1)
(30,41,1)
(20,12,1)
(14,25,1)
(18,13,1)
(16,47,1)
(23,54,1)
(37,21,1)
(22,30,1)
(1,10,1)
(4,17,1)
(38,48,1)
(13,1,1)
(49,24,1)
(33,3,1)
(25,48,1)
(7,27,1)
(32,25,1)
(17,36,1)
(23,51,1)
(34,17,1)
(12,36,1)
(1,23,1)
(38,17,1)
(21,24,1)
(53,1,1)
(10,23,1)
(8,49,1)
(8,21,1)
(58,13,1)
(51,48,1)
(49,18,1)
(51,57,1)
(1,38,1)
(14,32,1)
(1,24,1)
(48,50,1)
(4,44,1)
(38,15,1)
(52,56,1)
(26,24,1)
(36,7,1)
(3,58,1)
(0,34,1)
(4,48,1)
(15,37,1)
(47,48,1)
(40,38,1)
(18,35,1)
(50,17,1)
(50,0,1)
(29,14,1)
(31,4,1)
(55,26,1)
(44,33,1)
(35,31,1)
(17,20,1)
(13,53,1)
(48,50,2)
(1,38,2)
(24,14,2)
(57,21,2)
(51,48,2)
(51,21,2)
(29,14,2)
(25,48,2)
(21,24,2)
(26,14,2)
(49,24,2)
(1,21,2)
(33,13,2)
(30,14,2)
(38,21,2)
(14,25,2)
(41,14,2)
(23,54,2)
(4,48,2)
(4,13,2)
(15,21,2)
(35,13,2)
(49,21,2)
(1,23,2)
(50,17,2)
(22,14,2)
(4,17,2)
(23,21,2)
(31,13,2)
(38,48,2)
(58,13,2)
(18,21,2)
(10,21,2)
(21,14,2)
(53,21,2)
(44,13,2)
(55,14,2)
(24,22,2)
(13,21,2)
(1,24,2)
(17,36,2)
(3,13,2)
(23,51,2)
(56,17,2)
(40,21,2)
(37,21,2)
(38,17,2)
(13,1,2)
-----------------------------------
(0,data)
(1,fgets(data+dataLen, (int)
(2,)
(3,printLine("fgets()
(4,data[dataLen])
(5,dataBuffer)
(6,dataLen)
(7,COMMAND_ARG2)
(8,data)
(9,if (fgets(data+dataLen, (int)
(10,pFile)
(11,)
(12,data)
(13,fgets(data+dataLen, (int)
(14,100-dataLen > 1)
(15,dataLen)
(16,dataLen)
(17,data = dataBuffer)
(18,pFile)
(19,data)
(20,dataBuffer)
(21,pFile != NULL)
(22,fopen(FILENAME, "r")
(23,(int)
(24,pFile = fopen(FILENAME, "r")
(25,100-dataLen)
(26,pFile)
(27,dataBuffer)
(28,)
(29,pFile)
(30,"r")
(31,\\\'\\\\0\\\')
(32,1)
(33,data)
(34,dataLen)
(35,data[dataLen] = \\\'\\\\0\\\')
(36,dataBuffer[100] = COMMAND_ARG2)
(37,data)
(38,data+dataLen)
(39,if (pFile != NULL)
(40,100)
(41,FILENAME)
(42,if (100-dataLen > 1)
(43,pFile)
(44,dataLen)
(45,)
(46,)
(47,100)
(48,dataLen = strlen(data)
(49,fclose(pFile)
(50,strlen(data)
(51,100-dataLen)
(52,RET)
(53,NULL)
(54,int)
(55,NULL)
(56,CWE78_OS_Command_Injection__char_file_w32spawnl_41_badSink(data)
(57,dataLen)
(58,"fgets()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
