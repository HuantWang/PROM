-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_34_bad()
{
    wchar_t * data;
    CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_34_unionType myUnion;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        {
            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
            /* wspawnvp - searches for the location of the command among
             * the directories specified by the PATH environment variable */
            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
            _wspawnvp(_P_WAIT, COMMAND_INT, args);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
84,85
84,86
85,86
85,87
86,87
89,90
91,92
91,93
92,93
93,94
93,95
95,96
95,97
95,98
98,99
99,100
99,101
100,101
103,104
103,105
104,105
105,106
105,107
107,108
107,109
107,110
107,111
111,112
112,113
112,114
112,115
112,116
113,114
115,116
117,118
119,120
121,122
122,123
122,124
122,125
122,126
123,124
125,126
127,128
129,130
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,87,88,90,94,96,97,101,102,106,108,109,110,114,116,118,120,124,126,128,130
-----computeFrom-----
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
84,85
84,86
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_34_bad(){    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_34_unionType myUnion;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnvp(_P_WAIT, COMMAND_INT, args);        }    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_34_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_34_bad
{    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_34_unionType myUnion;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnvp(_P_WAIT, COMMAND_INT, args);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_34_unionType
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_34_unionType
myUnion
myUnion
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnvp(_P_WAIT, COMMAND_INT, args);        }    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnvp(_P_WAIT, COMMAND_INT, args);        }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_wspawnvp(_P_WAIT, COMMAND_INT, args);
_wspawnvp(_P_WAIT, COMMAND_INT, args)
_wspawnvp
_wspawnvp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(34,4,0)
(26,51,0)
(38,30,0)
(45,39,0)
(2,28,0)
(43,42,0)
(9,0,0)
(1,5,0)
(19,49,0)
(10,43,0)
(56,39,0)
(44,56,0)
(49,39,0)
(46,17,0)
(21,31,0)
(53,4,0)
(22,56,0)
(16,39,0)
(43,6,0)
(17,39,0)
(7,28,0)
(24,42,0)
(4,34,0)
(0,14,0)
(42,3,0)
(11,34,0)
(31,54,0)
(20,39,0)
(41,25,0)
(32,45,0)
(52,44,0)
(28,34,0)
(36,38,0)
(0,30,0)
(13,49,0)
(28,43,0)
(54,5,0)
(25,38,0)
(48,3,0)
(33,30,0)
(28,45,0)
(45,17,0)
(4,45,0)
(47,39,0)
(18,14,0)
(54,49,0)
(43,54,0)
(15,45,0)
(55,44,0)
(35,14,0)
(51,25,0)
(14,0,0)
(43,28,0)
(56,45,0)
(5,54,0)
(30,39,0)
(40,3,0)
(37,17,0)
(23,51,0)
(8,54,0)
(51,38,0)
(3,34,0)
(12,51,0)
(3,42,0)
(42,43,0)
(34,49,0)
(50,31,0)
(29,49,0)
(40,48,1)
(56,45,1)
(17,37,1)
(28,45,1)
(23,25,1)
(3,40,1)
(35,18,1)
(48,24,1)
(8,34,1)
(28,2,1)
(55,52,1)
(32,17,1)
(42,3,1)
(52,43,1)
(51,12,1)
(14,35,1)
(53,11,1)
(43,28,1)
(2,7,1)
(0,14,1)
(28,34,1)
(7,31,1)
(10,28,1)
(37,46,1)
(3,34,1)
(51,25,1)
(31,50,1)
(5,1,1)
(24,10,1)
(21,54,1)
(12,26,1)
(9,56,1)
(45,15,1)
(43,42,1)
(56,22,1)
(4,45,1)
(15,32,1)
(44,55,1)
(4,53,1)
(43,54,1)
(1,8,1)
(27,51,1)
(41,0,1)
(18,9,1)
(25,41,1)
(11,45,1)
(34,4,1)
(54,5,1)
(31,54,1)
(52,31,1)
(22,44,1)
(50,21,1)
(45,17,1)
(26,23,1)
(51,25,2)
(43,28,2)
(43,31,2)
(45,17,2)
(28,34,2)
(48,31,2)
(28,31,2)
(40,31,2)
(43,42,2)
(43,54,2)
(7,31,2)
(3,31,2)
(42,3,2)
(2,31,2)
(10,31,2)
(34,4,2)
(3,34,2)
(28,45,2)
(0,14,2)
(42,31,2)
(56,45,2)
(31,54,2)
(54,5,2)
(4,45,2)
(24,31,2)
-----------------------------------
(0,* data = myUnion.unionSecond)
(1,ENV_VARIABLE)
(2,dataLen)
(3,dataLen-1)
(4,wcslen(data)
(5,GETENV(ENV_VARIABLE)
(6,)
(7,data)
(8,environment)
(9,data)
(10,environment)
(11,dataLen)
(12,args)
(13,dataLen)
(14,myUnion.unionSecond)
(15,dataBuffer)
(16,data)
(17,dataBuffer[100] = COMMAND_ARG2)
(18,myUnion)
(19,if (environment != NULL)
(20,dataBuffer)
(21,environment)
(22,data)
(23,_P_WAIT)
(24,100)
(25,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(26,COMMAND_INT)
(27,RET)
(28,data+dataLen)
(29,environment)
(30,)
(31,environment != NULL)
(32,data)
(33,data)
(34,dataLen = wcslen(data)
(35,unionSecond)
(36,args)
(37,COMMAND_ARG2)
(38,)
(39,)
(40,1)
(41,args)
(42,100-dataLen-1)
(43,wcsncat(data+dataLen, environment, 100-dataLen-1)
(44,myUnion.unionFirst)
(45,data = dataBuffer)
(46,dataBuffer)
(47,myUnion)
(48,dataLen)
(49,)
(50,NULL)
(51,_wspawnvp(_P_WAIT, COMMAND_INT, args)
(52,myUnion)
(53,data)
(54,* environment = GETENV(ENV_VARIABLE)
(55,unionFirst)
(56,myUnion.unionFirst = data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
