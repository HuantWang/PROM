-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_17_bad()
{
    int i;
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    for(i = 0; i < 1; i++)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* spawnlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
17,18
18,19
18,20
20,21
20,22
20,23
22,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
33,35
33,36
33,37
34,35
35,36
35,37
36,37
39,40
39,41
40,41
43,44
44,45
46,47
47,48
47,49
47,50
48,49
49,50
49,51
50,51
52,53
52,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
63,64
63,65
63,66
66,67
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
76,77
78,79
79,80
80,81
80,82
80,83
80,84
81,82
83,84
83,85
84,85
86,87
88,89
90,91
90,92
91,92
91,93
93,94
96,97
97,98
97,99
97,100
97,101
97,102
97,103
97,104
98,99
100,101
102,103
104,105
106,107
108,109
110,111
-----nextToken-----
2,4,8,10,13,15,16,19,21,23,26,30,32,37,38,41,42,45,51,53,57,59,62,64,65,69,71,75,77,82,85,87,89,92,94,95,99,101,103,105,107,109,111
-----computeFrom-----
28,29
28,30
35,36
35,37
39,40
39,41
73,74
73,75
83,84
83,85
90,91
90,92
91,92
91,93
-----guardedBy-----
75,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_17_bad(){    int i;    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_17_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_17_bad
{    int i;    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
int i;
int i;
int
i
i
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnlp
_spawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(29,32,0)
(30,7,0)
(17,23,0)
(9,41,0)
(2,3,0)
(46,9,0)
(17,10,0)
(40,15,0)
(24,29,0)
(34,29,0)
(21,26,0)
(27,9,0)
(36,49,0)
(23,17,0)
(18,38,0)
(17,29,0)
(50,39,0)
(11,39,0)
(35,30,0)
(28,42,0)
(7,9,0)
(31,49,0)
(26,42,0)
(51,9,0)
(4,15,0)
(32,18,0)
(29,38,0)
(22,42,0)
(49,32,0)
(29,17,0)
(32,9,0)
(47,15,0)
(7,3,0)
(0,4,0)
(5,7,0)
(1,23,0)
(48,38,0)
(23,49,0)
(43,15,0)
(12,17,0)
(44,39,0)
(17,7,0)
(38,26,0)
(45,39,0)
(6,42,0)
(49,23,0)
(39,42,0)
(38,42,0)
(53,39,0)
(16,39,0)
(19,38,0)
(33,4,0)
(8,40,0)
(37,30,0)
(14,32,0)
(25,26,0)
(52,18,0)
(13,42,0)
(18,32,0)
(3,7,0)
(29,32,1)
(37,7,1)
(38,19,1)
(17,29,1)
(49,36,1)
(18,38,1)
(43,47,1)
(16,50,1)
(0,15,1)
(17,23,1)
(30,35,1)
(48,26,1)
(12,29,1)
(5,32,1)
(40,8,1)
(52,14,1)
(40,15,1)
(15,43,1)
(30,7,1)
(19,48,1)
(21,25,1)
(34,30,1)
(11,45,1)
(36,31,1)
(1,12,1)
(4,15,1)
(33,0,1)
(44,16,1)
(39,44,1)
(29,24,1)
(8,17,1)
(20,39,1)
(24,34,1)
(45,53,1)
(26,21,1)
(53,4,1)
(18,52,1)
(32,18,1)
(35,37,1)
(17,7,1)
(29,38,1)
(7,3,1)
(23,49,1)
(4,33,1)
(47,38,1)
(0,40,1)
(2,5,1)
(31,1,1)
(8,30,1)
(50,11,1)
(3,2,1)
(14,4,1)
(38,26,1)
(49,32,1)
(35,4,2)
(4,4,2)
(52,4,2)
(7,3,2)
(36,30,2)
(4,15,2)
(18,4,2)
(29,30,2)
(49,30,2)
(17,29,2)
(32,4,2)
(5,4,2)
(29,32,2)
(40,4,2)
(17,7,2)
(8,4,2)
(7,4,2)
(1,30,2)
(14,4,2)
(30,4,2)
(29,38,2)
(3,4,2)
(31,30,2)
(38,26,2)
(30,7,2)
(12,30,2)
(23,30,2)
(23,49,2)
(34,30,2)
(33,4,2)
(37,4,2)
(40,15,2)
(17,23,2)
(49,32,2)
(2,4,2)
(18,38,2)
(0,4,2)
(17,30,2)
(32,18,2)
(24,30,2)
-----------------------------------
(0,i)
(1,100)
(2,ENV_VARIABLE)
(3,GETENV(ENV_VARIABLE)
(4,i < 1)
(5,environment)
(6,data)
(7,* environment = GETENV(ENV_VARIABLE)
(8,i)
(9,)
(10,)
(11,COMMAND_INT)
(12,environment)
(13,for(i = 0; i < 1; i++)
(14,dataLen)
(15,i = 0)
(16,COMMAND_ARG3)
(17,strncat(data+dataLen, environment, 100-dataLen-1)
(18,strlen(data)
(19,dataBuffer)
(20,RET)
(21,COMMAND_ARG2)
(22,dataBuffer)
(23,100-dataLen-1)
(24,dataLen)
(25,dataBuffer)
(26,dataBuffer[100] = COMMAND_ARG2)
(27,environment)
(28,i)
(29,data+dataLen)
(30,environment != NULL)
(31,dataLen)
(32,dataLen = strlen(data)
(33,1)
(34,data)
(35,NULL)
(36,1)
(37,environment)
(38,data = dataBuffer)
(39,_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(40,i++)
(41,)
(42,)
(43,0)
(44,NULL)
(45,COMMAND_INT)
(46,dataLen)
(47,i)
(48,data)
(49,dataLen-1)
(50,COMMAND_ARG1)
(51,if (environment != NULL)
(52,data)
(53,_P_WAIT)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
