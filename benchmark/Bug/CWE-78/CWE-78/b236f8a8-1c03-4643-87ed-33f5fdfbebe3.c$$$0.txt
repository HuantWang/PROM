-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execlp_34_bad()
{
    char * data;
    CWE78_OS_Command_Injection__char_environment_execlp_34_unionType myUnion;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    myUnion.unionFirst = data;
    {
        char * data = myUnion.unionSecond;
        /* execlp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
84,85
84,86
85,86
85,87
86,87
89,90
91,92
91,93
92,93
93,94
93,95
95,96
95,97
95,98
98,99
99,100
99,101
100,101
103,104
104,105
104,106
104,107
104,108
104,109
104,110
105,106
107,108
109,110
111,112
113,114
115,116
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,87,88,90,94,96,97,101,102,106,108,110,112,114,116
-----computeFrom-----
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
84,85
84,86
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execlp_34_bad(){    char * data;    CWE78_OS_Command_Injection__char_environment_execlp_34_unionType myUnion;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        /* execlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
void
CWE78_OS_Command_Injection__char_environment_execlp_34_bad()
CWE78_OS_Command_Injection__char_environment_execlp_34_bad
{    char * data;    CWE78_OS_Command_Injection__char_environment_execlp_34_unionType myUnion;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        /* execlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
char * data;
char * data;
char
* data
*
data
CWE78_OS_Command_Injection__char_environment_execlp_34_unionType myUnion;
CWE78_OS_Command_Injection__char_environment_execlp_34_unionType myUnion;
CWE78_OS_Command_Injection__char_environment_execlp_34_unionType
CWE78_OS_Command_Injection__char_environment_execlp_34_unionType
myUnion
myUnion
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        char * data = myUnion.unionSecond;        /* execlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }
char * data = myUnion.unionSecond;
char * data = myUnion.unionSecond;
char
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(36,39,0)
(37,30,0)
(5,23,0)
(53,2,0)
(10,7,0)
(19,44,0)
(35,54,0)
(16,37,0)
(39,33,0)
(46,31,0)
(10,33,0)
(26,25,0)
(12,10,0)
(1,2,0)
(18,22,0)
(33,44,0)
(20,10,0)
(27,39,0)
(39,36,0)
(31,5,0)
(45,30,0)
(5,31,0)
(32,54,0)
(23,54,0)
(42,32,0)
(52,54,0)
(17,21,0)
(30,54,0)
(4,54,0)
(49,7,0)
(36,22,0)
(8,11,0)
(48,21,0)
(6,15,0)
(22,15,0)
(29,36,0)
(36,7,0)
(11,37,0)
(2,23,0)
(15,22,0)
(40,23,0)
(13,30,0)
(39,30,0)
(37,54,0)
(24,2,0)
(0,2,0)
(43,2,0)
(50,44,0)
(7,36,0)
(34,11,0)
(7,10,0)
(41,5,0)
(38,39,0)
(22,44,0)
(30,32,0)
(44,54,0)
(3,32,0)
(33,25,0)
(36,28,0)
(51,44,0)
(9,31,0)
(25,33,0)
(21,22,0)
(25,30,0)
(47,33,0)
(27,21,1)
(37,30,1)
(13,45,1)
(18,33,1)
(53,0,1)
(20,12,1)
(8,36,1)
(15,6,1)
(47,30,1)
(9,41,1)
(21,17,1)
(48,22,1)
(43,5,1)
(32,3,1)
(33,25,1)
(11,34,1)
(36,39,1)
(0,1,1)
(5,31,1)
(45,32,1)
(1,43,1)
(46,9,1)
(14,2,1)
(12,49,1)
(41,37,1)
(38,27,1)
(10,20,1)
(34,8,1)
(21,22,1)
(39,38,1)
(26,47,1)
(39,30,1)
(7,10,1)
(39,33,1)
(8,21,1)
(17,48,1)
(16,11,1)
(24,53,1)
(37,16,1)
(36,7,1)
(31,46,1)
(3,42,1)
(30,13,1)
(2,24,1)
(10,33,1)
(36,22,1)
(25,30,1)
(25,26,1)
(6,18,1)
(49,29,1)
(22,15,1)
(29,39,1)
(30,32,1)
(12,21,2)
(39,30,2)
(39,33,2)
(49,21,2)
(36,39,2)
(29,21,2)
(30,32,2)
(5,31,2)
(25,30,2)
(39,21,2)
(36,7,2)
(10,33,2)
(36,22,2)
(20,21,2)
(37,30,2)
(10,21,2)
(21,22,2)
(33,25,2)
(7,10,2)
(22,15,2)
(36,21,2)
(38,21,2)
(7,21,2)
(27,21,2)
-----------------------------------
(0,COMMAND_ARG1)
(1,COMMAND_INT)
(2,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(3,COMMAND_ARG2)
(4,dataBuffer)
(5,* data = myUnion.unionSecond)
(6,ENV_VARIABLE)
(7,100-dataLen-1)
(8,myUnion)
(9,myUnion)
(10,dataLen-1)
(11,myUnion.unionFirst)
(12,dataLen)
(13,dataBuffer)
(14,RET)
(15,GETENV(ENV_VARIABLE)
(16,data)
(17,NULL)
(18,environment)
(19,dataLen)
(20,1)
(21,environment != NULL)
(22,* environment = GETENV(ENV_VARIABLE)
(23,)
(24,NULL)
(25,strlen(data)
(26,data)
(27,data)
(28,)
(29,environment)
(30,data = dataBuffer)
(31,myUnion.unionSecond)
(32,dataBuffer[100] = COMMAND_ARG2)
(33,dataLen = strlen(data)
(34,unionFirst)
(35,myUnion)
(36,strncat(data+dataLen, environment, 100-dataLen-1)
(37,myUnion.unionFirst = data)
(38,dataLen)
(39,data+dataLen)
(40,data)
(41,data)
(42,dataBuffer)
(43,COMMAND_INT)
(44,)
(45,data)
(46,unionSecond)
(47,dataLen)
(48,environment)
(49,100)
(50,environment)
(51,if (environment != NULL)
(52,data)
(53,COMMAND_ARG3)
(54,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
