-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_execl_05_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(staticTrue)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* wexecl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
82,83
82,84
82,85
82,86
82,87
82,88
83,84
85,86
87,88
89,90
91,92
93,94
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,88,90,92,94
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_execl_05_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__wchar_t_environment_execl_05_bad()
CWE78_OS_Command_Injection__wchar_t_environment_execl_05_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticTrue
staticTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(30,1,0)
(38,16,0)
(24,8,0)
(32,16,0)
(17,4,0)
(33,12,0)
(0,4,0)
(19,0,0)
(11,25,0)
(1,0,0)
(44,34,0)
(15,17,0)
(41,21,0)
(5,16,0)
(37,16,0)
(23,21,0)
(25,8,0)
(14,0,0)
(16,26,0)
(2,26,0)
(42,7,0)
(30,17,0)
(13,18,0)
(35,26,0)
(4,42,0)
(8,26,0)
(30,3,0)
(21,26,0)
(40,4,0)
(6,30,0)
(34,12,0)
(39,17,0)
(43,1,0)
(17,30,0)
(36,26,0)
(12,34,0)
(0,1,0)
(22,18,0)
(17,8,0)
(18,12,0)
(12,42,0)
(29,16,0)
(8,21,0)
(1,30,0)
(9,8,0)
(25,4,0)
(4,25,0)
(10,42,0)
(28,42,0)
(30,12,0)
(31,42,0)
(25,11,1)
(1,0,1)
(18,12,1)
(17,39,1)
(41,23,1)
(9,24,1)
(6,17,1)
(0,4,1)
(38,30,1)
(14,19,1)
(39,15,1)
(4,25,1)
(20,8,1)
(43,6,1)
(33,4,1)
(19,43,1)
(34,44,1)
(8,9,1)
(16,32,1)
(30,17,1)
(17,4,1)
(15,18,1)
(12,34,1)
(17,8,1)
(11,40,1)
(22,12,1)
(25,8,1)
(37,29,1)
(30,1,1)
(44,33,1)
(38,18,1)
(0,14,1)
(32,5,1)
(8,21,1)
(21,41,1)
(30,12,1)
(13,22,1)
(5,37,1)
(40,20,1)
(29,38,1)
(24,21,1)
(18,13,1)
(38,20,1)
(27,16,1)
(12,20,2)
(6,18,2)
(17,8,2)
(34,20,2)
(8,21,2)
(44,20,2)
(39,18,2)
(18,20,2)
(30,18,2)
(12,34,2)
(19,18,2)
(22,20,2)
(4,20,2)
(25,8,2)
(17,18,2)
(0,18,2)
(11,20,2)
(30,12,2)
(25,20,2)
(18,12,2)
(1,0,2)
(14,18,2)
(33,20,2)
(43,18,2)
(17,4,2)
(30,1,2)
(1,18,2)
(13,20,2)
(15,18,2)
(30,17,2)
(40,20,2)
(4,25,2)
(0,4,2)
-----------------------------------
(0,dataLen-1)
(1,100-dataLen-1)
(2,dataBuffer)
(3,)
(4,dataLen = wcslen(data)
(5,COMMAND_ARG3)
(6,environment)
(7,)
(8,data = dataBuffer)
(9,dataBuffer)
(10,dataLen)
(11,data)
(12,* environment = GETENV(ENV_VARIABLE)
(13,NULL)
(14,1)
(15,data)
(16,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(17,data+dataLen)
(18,environment != NULL)
(19,dataLen)
(20,staticTrue)
(21,dataBuffer[100] = COMMAND_ARG2)
(22,environment)
(23,dataBuffer)
(24,data)
(25,wcslen(data)
(26,)
(27,RET)
(28,environment)
(29,COMMAND_INT_PATH)
(30,wcsncat(data+dataLen, environment, 100-dataLen-1)
(31,if (environment != NULL)
(32,NULL)
(33,environment)
(34,GETENV(ENV_VARIABLE)
(35,data)
(36,if(staticTrue)
(37,COMMAND_ARG1)
(38,COMMAND_INT_PATH)
(39,dataLen)
(40,dataLen)
(41,COMMAND_ARG2)
(42,)
(43,100)
(44,ENV_VARIABLE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
