-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_08_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(staticReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* spawnlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
83,85
83,86
83,87
83,88
83,89
83,90
84,85
86,87
88,89
90,91
92,93
94,95
96,97
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,85,87,89,91,93,95,97
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_08_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_08_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_08_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnlp
_spawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(7,19,0)
(45,43,0)
(37,7,0)
(39,7,0)
(24,28,0)
(28,0,0)
(44,24,0)
(26,37,0)
(44,26,0)
(36,34,0)
(12,11,0)
(0,11,0)
(16,30,0)
(8,17,0)
(34,24,0)
(34,37,0)
(21,26,0)
(7,16,0)
(14,43,0)
(25,17,0)
(3,44,0)
(22,5,0)
(42,17,0)
(6,16,0)
(32,11,0)
(34,0,0)
(19,7,0)
(37,26,0)
(23,17,0)
(1,0,0)
(11,43,0)
(28,24,0)
(4,37,0)
(38,43,0)
(0,43,0)
(15,16,0)
(24,16,0)
(9,19,0)
(13,17,0)
(10,28,0)
(31,17,0)
(37,35,0)
(41,24,0)
(29,34,0)
(33,5,0)
(5,7,0)
(37,34,0)
(20,16,0)
(2,0,0)
(18,44,0)
(17,43,0)
(26,44,0)
(10,41,1)
(34,0,1)
(34,29,1)
(22,33,1)
(18,3,1)
(37,7,1)
(17,13,1)
(31,37,1)
(40,17,1)
(24,28,1)
(2,1,1)
(0,2,1)
(37,34,1)
(37,26,1)
(4,34,1)
(8,42,1)
(28,10,1)
(36,5,1)
(23,8,1)
(5,7,1)
(44,18,1)
(3,21,1)
(41,27,1)
(25,31,1)
(7,19,1)
(1,11,1)
(33,7,1)
(31,5,1)
(32,12,1)
(34,24,1)
(26,44,1)
(19,9,1)
(29,36,1)
(28,0,1)
(21,4,1)
(11,32,1)
(13,23,1)
(27,0,1)
(39,24,1)
(31,27,1)
(42,25,1)
(5,22,1)
(44,24,1)
(9,39,1)
(0,11,1)
(0,11,2)
(44,5,2)
(37,5,2)
(37,34,2)
(24,28,2)
(29,5,2)
(33,27,2)
(24,27,2)
(34,24,2)
(26,44,2)
(9,27,2)
(5,27,2)
(34,5,2)
(37,7,2)
(28,27,2)
(7,19,2)
(36,5,2)
(22,27,2)
(44,24,2)
(7,27,2)
(37,26,2)
(34,0,2)
(4,5,2)
(26,5,2)
(10,27,2)
(41,27,2)
(28,0,2)
(18,5,2)
(3,5,2)
(21,5,2)
(5,7,2)
(39,27,2)
(19,27,2)
-----------------------------------
(0,data = dataBuffer)
(1,data)
(2,dataBuffer)
(3,dataLen)
(4,environment)
(5,environment != NULL)
(6,if (environment != NULL)
(7,* environment = GETENV(ENV_VARIABLE)
(8,COMMAND_ARG1)
(9,ENV_VARIABLE)
(10,data)
(11,dataBuffer[100] = COMMAND_ARG2)
(12,dataBuffer)
(13,NULL)
(14,dataBuffer)
(15,environment)
(16,)
(17,_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(18,1)
(19,GETENV(ENV_VARIABLE)
(20,dataLen)
(21,100)
(22,NULL)
(23,COMMAND_ARG3)
(24,dataLen = strlen(data)
(25,COMMAND_INT)
(26,100-dataLen-1)
(27,staticReturnsTrue()
(28,strlen(data)
(29,dataLen)
(30,)
(31,_P_WAIT)
(32,COMMAND_ARG2)
(33,environment)
(34,data+dataLen)
(35,)
(36,data)
(37,strncat(data+dataLen, environment, 100-dataLen-1)
(38,data)
(39,environment)
(40,RET)
(41,dataLen)
(42,COMMAND_INT)
(43,)
(44,dataLen-1)
(45,if(staticReturnsTrue()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
