-----label-----
1
-----code-----
char * CWE78_OS_Command_Injection__char_file_w32_execv_61b_badSource(char * data)
{
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
32,33
32,34
33,34
33,35
34,35
34,36
36,37
39,40
39,41
40,41
41,42
41,43
42,43
44,45
44,46
44,47
45,46
47,48
50,51
50,52
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
58,60
59,60
59,61
59,62
59,63
60,61
62,63
62,64
63,64
65,66
67,68
67,69
68,69
68,70
71,72
72,73
72,74
74,75
76,77
78,79
80,81
80,82
81,82
82,83
82,84
83,84
86,87
87,88
87,89
88,89
88,90
89,90
91,92
94,95
95,96
95,97
96,97
98,99
100,101
101,102
-----nextToken-----
2,4,5,7,9,10,16,18,22,24,28,30,31,35,37,38,43,46,48,49,53,55,61,64,66,69,70,73,75,77,79,84,85,90,92,93,97,99,102
-----computeFrom-----
33,34
33,35
34,35
34,36
41,42
41,43
51,52
51,53
58,59
58,60
62,63
62,64
72,73
72,74
87,88
87,89
-----guardedBy-----
37,92
55,79
53,99
64,90
75,92
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE78_OS_Command_Injection__char_file_w32_execv_61b_badSource(char * data){    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    return data;}
char
* CWE78_OS_Command_Injection__char_file_w32_execv_61b_badSource(char * data)
*
CWE78_OS_Command_Injection__char_file_w32_execv_61b_badSource
char * data
char
* data
*
data
{    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    return data;}
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
return data;
data
data
-----joern-----
(8,2,0)
(25,2,0)
(26,40,0)
(44,19,0)
(32,22,0)
(49,41,0)
(46,12,0)
(10,24,0)
(22,41,0)
(21,23,0)
(47,25,0)
(48,36,0)
(22,46,0)
(6,33,0)
(46,13,0)
(51,43,0)
(14,43,0)
(5,6,0)
(3,31,0)
(37,11,0)
(12,11,0)
(30,9,0)
(7,25,0)
(20,23,0)
(24,39,0)
(41,6,0)
(0,51,0)
(18,24,0)
(34,0,0)
(46,22,0)
(12,4,0)
(51,9,0)
(29,36,0)
(45,11,0)
(19,51,0)
(50,24,0)
(25,41,0)
(9,51,0)
(36,41,0)
(23,33,0)
(12,46,0)
(11,33,0)
(2,40,0)
(19,31,0)
(12,51,0)
(4,12,0)
(42,4,0)
(36,35,0)
(16,9,0)
(17,12,0)
(38,35,0)
(11,12,0)
(35,36,0)
(13,46,0)
(11,41,0)
(25,33,0)
(23,39,0)
(15,0,0)
(28,22,0)
(1,51,0)
(27,26,0)
(41,24,0)
(6,41,0)
(44,4,1)
(17,46,1)
(28,11,1)
(15,51,1)
(22,41,1)
(12,17,1)
(11,41,1)
(48,29,1)
(22,32,1)
(11,33,1)
(47,7,1)
(23,20,1)
(23,33,1)
(4,12,1)
(12,51,1)
(36,48,1)
(35,36,1)
(6,5,1)
(37,0,1)
(35,38,1)
(9,30,1)
(41,6,1)
(29,41,1)
(25,47,1)
(19,44,1)
(27,4,1)
(20,19,1)
(4,42,1)
(46,22,1)
(16,1,1)
(5,49,1)
(26,27,1)
(46,13,1)
(12,11,1)
(21,23,1)
(34,15,1)
(0,51,1)
(2,8,1)
(25,41,1)
(51,9,1)
(44,2,1)
(7,26,1)
(30,16,1)
(38,36,1)
(0,34,1)
(36,41,1)
(1,35,1)
(32,28,1)
(8,25,1)
(12,46,1)
(20,0,1)
(11,45,1)
(25,33,1)
(45,37,1)
(6,33,1)
(42,12,1)
(19,51,1)
(20,35,1)
(15,35,2)
(0,51,2)
(46,22,2)
(36,41,2)
(12,46,2)
(47,4,2)
(51,35,2)
(22,41,2)
(8,4,2)
(23,33,2)
(12,51,2)
(27,4,2)
(4,12,2)
(41,6,2)
(7,4,2)
(28,0,2)
(11,0,2)
(21,23,2)
(16,35,2)
(34,35,2)
(35,36,2)
(11,33,2)
(6,33,2)
(44,0,2)
(37,0,2)
(17,0,2)
(1,35,2)
(19,0,2)
(19,51,2)
(12,0,2)
(9,35,2)
(46,0,2)
(32,0,2)
(26,4,2)
(22,0,2)
(45,0,2)
(42,0,2)
(51,9,2)
(0,35,2)
(11,41,2)
(30,35,2)
(4,0,2)
(25,41,2)
(46,13,2)
(2,4,2)
(25,33,2)
(12,11,2)
(25,4,2)
-----------------------------------
(0,pFile != NULL)
(1,pFile)
(2,data[dataLen] = \\\'\\\\0\\\')
(3,if (fgets(data+dataLen, (int)
(4,fgets(data+dataLen, (int)
(5,data)
(6,strlen(data)
(7,data)
(8,\\\'\\\\0\\\')
(9,fopen(FILENAME, "r")
(10,dataLen)
(11,data+dataLen)
(12,fgets(data+dataLen, (int)
(13,int)
(14,if (pFile != NULL)
(15,pFile)
(16,FILENAME)
(17,pFile)
(18,pFile)
(19,fclose(pFile)
(20,data)
(21,RET)
(22,100-dataLen)
(23,return data;)
(24,)
(25,data[dataLen])
(26,printLine("fgets()
(27,"fgets()
(28,100)
(29,100)
(30,"r")
(31,)
(32,dataLen)
(33,char * data)
(34,NULL)
(35,100-dataLen > 1)
(36,100-dataLen)
(37,data)
(38,1)
(39,)
(40,)
(41,dataLen = strlen(data)
(42,NULL)
(43,)
(44,pFile)
(45,dataLen)
(46,(int)
(47,dataLen)
(48,dataLen)
(49,dataLen)
(50,if (100-dataLen > 1)
(51,pFile = fopen(FILENAME, "r")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
