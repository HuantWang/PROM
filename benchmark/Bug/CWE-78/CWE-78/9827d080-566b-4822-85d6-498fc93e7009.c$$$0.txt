-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_06_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnvp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnvp(_P_WAIT, COMMAND_INT, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
83,85
84,85
85,86
85,87
87,88
87,89
87,90
87,91
91,92
92,93
92,94
92,95
92,96
93,94
95,96
97,98
99,100
101,102
102,103
102,104
102,105
102,106
103,104
105,106
107,108
109,110
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,86,88,89,90,94,96,98,100,104,106,108,110
-----computeFrom-----
23,24
23,25
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_06_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_06_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_06_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(STATIC_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnvp(_P_WAIT, COMMAND_INT, args);
_spawnvp(_P_WAIT, COMMAND_INT, args)
_spawnvp
_spawnvp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(35,21,0)
(0,4,0)
(26,9,0)
(13,37,0)
(28,40,0)
(11,22,0)
(7,45,0)
(48,3,0)
(10,40,0)
(8,44,0)
(32,44,0)
(37,1,0)
(40,10,0)
(46,3,0)
(42,24,0)
(23,22,0)
(17,33,0)
(45,16,0)
(11,44,0)
(16,24,0)
(33,11,0)
(47,4,0)
(12,29,0)
(29,21,0)
(45,33,0)
(43,21,0)
(2,1,0)
(4,36,0)
(45,37,0)
(10,11,0)
(9,37,0)
(24,40,0)
(21,44,0)
(22,44,0)
(39,22,0)
(1,37,0)
(29,43,0)
(14,10,0)
(33,40,0)
(37,4,0)
(18,9,0)
(41,33,0)
(33,45,0)
(38,43,0)
(16,45,0)
(30,4,0)
(6,29,0)
(20,29,0)
(40,4,0)
(24,16,0)
(45,27,0)
(25,44,0)
(15,11,0)
(19,24,0)
(34,16,0)
(5,11,0)
(22,39,1)
(39,23,1)
(3,46,1)
(33,41,1)
(42,34,1)
(13,40,1)
(33,40,1)
(48,11,1)
(41,17,1)
(33,11,1)
(11,22,1)
(10,11,1)
(9,37,1)
(10,14,1)
(14,28,1)
(45,16,1)
(29,20,1)
(19,42,1)
(24,40,1)
(45,37,1)
(16,24,1)
(31,29,1)
(37,1,1)
(2,13,1)
(40,10,1)
(11,15,1)
(26,37,1)
(29,43,1)
(38,45,1)
(7,33,1)
(46,48,1)
(28,3,1)
(1,2,1)
(12,43,1)
(6,12,1)
(15,5,1)
(43,38,1)
(9,18,1)
(24,19,1)
(17,9,1)
(38,3,1)
(20,6,1)
(34,7,1)
(5,22,1)
(18,26,1)
(38,9,1)
(45,33,1)
(33,11,2)
(17,9,2)
(45,37,2)
(13,3,2)
(24,9,2)
(41,9,2)
(9,37,2)
(14,3,2)
(40,10,2)
(2,3,2)
(11,22,2)
(10,11,2)
(29,43,2)
(37,1,2)
(9,3,2)
(40,3,2)
(19,9,2)
(37,3,2)
(26,3,2)
(7,9,2)
(18,3,2)
(1,3,2)
(24,40,2)
(42,9,2)
(33,9,2)
(16,24,2)
(45,16,2)
(33,40,2)
(45,33,2)
(45,9,2)
(28,3,2)
(10,3,2)
(34,9,2)
(16,9,2)
-----------------------------------
(0,if (environment != NULL)
(1,GETENV(ENV_VARIABLE)
(2,ENV_VARIABLE)
(3,STATIC_CONST_FIVE==5)
(4,)
(5,data)
(6,COMMAND_INT)
(7,environment)
(8,if(STATIC_CONST_FIVE==5)
(9,environment != NULL)
(10,strlen(data)
(11,data = dataBuffer)
(12,_P_WAIT)
(13,environment)
(14,data)
(15,dataBuffer)
(16,100-dataLen-1)
(17,data)
(18,NULL)
(19,1)
(20,args)
(21,)
(22,dataBuffer[100] = COMMAND_ARG2)
(23,dataBuffer)
(24,dataLen-1)
(25,data)
(26,environment)
(27,)
(28,dataLen)
(29,_spawnvp(_P_WAIT, COMMAND_INT, args)
(30,dataLen)
(31,RET)
(32,dataBuffer)
(33,data+dataLen)
(34,100)
(35,args)
(36,)
(37,* environment = GETENV(ENV_VARIABLE)
(38,args)
(39,COMMAND_ARG2)
(40,dataLen = strlen(data)
(41,dataLen)
(42,dataLen)
(43,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(44,)
(45,strncat(data+dataLen, environment, 100-dataLen-1)
(46,5)
(47,environment)
(48,STATIC_CONST_FIVE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
