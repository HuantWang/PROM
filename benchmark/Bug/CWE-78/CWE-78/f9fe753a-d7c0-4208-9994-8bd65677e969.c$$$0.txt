-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_system_04_bad()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(STATIC_CONST_TRUE)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
81,83
82,83
82,84
83,84
83,85
84,85
86,87
89,90
89,91
90,91
91,92
91,93
92,93
95,96
96,97
96,98
97,98
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,85,87,88,93,94,98,99
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
82,83
82,84
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_system_04_bad(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_system_04_bad()
CWE78_OS_Command_Injection__wchar_t_environment_system_04_bad
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(8,42,0)
(38,19,0)
(1,46,0)
(20,47,0)
(31,18,0)
(41,34,0)
(28,30,0)
(39,23,0)
(11,0,0)
(9,27,0)
(47,27,0)
(38,39,0)
(20,33,0)
(14,23,0)
(29,19,0)
(37,48,0)
(0,23,0)
(33,46,0)
(3,35,0)
(7,23,0)
(5,7,0)
(21,46,0)
(46,10,0)
(48,30,0)
(22,47,0)
(34,33,0)
(45,39,0)
(32,8,0)
(43,18,0)
(39,38,0)
(19,38,0)
(39,2,0)
(6,47,0)
(23,0,0)
(36,27,0)
(12,7,0)
(20,39,0)
(19,33,0)
(35,42,0)
(47,18,0)
(30,48,0)
(33,34,0)
(13,18,0)
(40,18,0)
(34,47,0)
(39,20,0)
(27,18,0)
(23,46,0)
(26,46,0)
(15,38,0)
(24,33,0)
(17,20,0)
(44,19,0)
(4,20,0)
(48,47,0)
(15,45,1)
(19,44,1)
(3,8,1)
(7,12,1)
(34,47,1)
(41,24,1)
(23,0,1)
(28,48,1)
(30,48,1)
(17,4,1)
(19,33,1)
(12,5,1)
(39,38,1)
(16,47,1)
(25,35,1)
(33,34,1)
(11,14,1)
(24,16,1)
(45,20,1)
(38,19,1)
(37,16,1)
(8,32,1)
(34,41,1)
(48,37,1)
(44,29,1)
(32,30,1)
(27,9,1)
(4,7,1)
(6,22,1)
(48,47,1)
(47,27,1)
(47,6,1)
(30,28,1)
(39,23,1)
(35,3,1)
(25,30,1)
(7,23,1)
(22,27,1)
(20,17,1)
(37,7,1)
(14,33,1)
(9,36,1)
(5,23,1)
(37,39,1)
(39,20,1)
(20,33,1)
(29,15,1)
(20,47,1)
(0,11,1)
(34,16,2)
(35,30,2)
(39,38,2)
(20,47,2)
(3,30,2)
(23,16,2)
(15,7,2)
(34,47,2)
(20,7,2)
(33,34,2)
(45,7,2)
(41,16,2)
(24,16,2)
(30,48,2)
(29,7,2)
(39,23,2)
(32,30,2)
(39,7,2)
(33,16,2)
(39,20,2)
(48,47,2)
(14,16,2)
(47,27,2)
(17,7,2)
(19,7,2)
(44,7,2)
(11,16,2)
(20,33,2)
(4,7,2)
(38,7,2)
(7,16,2)
(8,30,2)
(38,19,2)
(0,16,2)
(5,16,2)
(23,0,2)
(12,16,2)
(7,23,2)
(19,33,2)
-----------------------------------
(0,GETENV(ENV_VARIABLE)
(1,environment)
(2,)
(3,1)
(4,data)
(5,environment)
(6,data_buf)
(7,environment != NULL)
(8,printLine("command execution failed!")
(9,FULL_COMMAND)
(10,)
(11,ENV_VARIABLE)
(12,NULL)
(13,if (SYSTEM(data)
(14,environment)
(15,100)
(16,STATIC_CONST_TRUE)
(17,dataLen)
(18,)
(19,dataLen-1)
(20,data+dataLen)
(21,dataLen)
(22,data)
(23,* environment = GETENV(ENV_VARIABLE)
(24,dataLen)
(25,RET)
(26,if (environment != NULL)
(27,data_buf[100] = FULL_COMMAND)
(28,0)
(29,dataLen)
(30,SYSTEM(data)
(31,if(STATIC_CONST_TRUE)
(32,"command execution failed!")
(33,dataLen = wcslen(data)
(34,wcslen(data)
(35,exit(1)
(36,data_buf)
(37,data)
(38,100-dataLen-1)
(39,wcsncat(data+dataLen, environment, 100-dataLen-1)
(40,data_buf)
(41,data)
(42,)
(43,data)
(44,1)
(45,environment)
(46,)
(47,data = data_buf)
(48,SYSTEM(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
