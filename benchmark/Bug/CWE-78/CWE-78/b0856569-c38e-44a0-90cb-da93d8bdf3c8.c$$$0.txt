-----label-----
1
-----code-----
static wchar_t * badSource(wchar_t * data)
{
    {
        /* Read input from a file */
        size_t dataLen = wcslen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgetws() failed");
                    /* Restore NUL terminator if fgetws fails */
                    data[dataLen] = L'\0';
                }
                fclose(pFile);
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
32,33
32,34
33,34
33,35
34,35
34,36
36,37
39,40
39,41
40,41
41,42
41,43
42,43
44,45
44,46
44,47
45,46
47,48
50,51
50,52
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
58,60
59,60
59,61
59,62
59,63
60,61
62,63
62,64
63,64
65,66
67,68
67,69
68,69
68,70
71,72
72,73
72,74
74,75
76,77
78,79
80,81
80,82
81,82
82,83
82,84
83,84
86,87
87,88
87,89
88,89
88,90
89,90
91,92
94,95
95,96
95,97
96,97
98,99
100,101
101,102
-----nextToken-----
2,4,5,7,9,10,16,18,22,24,28,30,31,35,37,38,43,46,48,49,53,55,61,64,66,69,70,73,75,77,79,84,85,90,92,93,97,99,102
-----computeFrom-----
33,34
33,35
34,35
34,36
41,42
41,43
51,52
51,53
58,59
58,60
62,63
62,64
72,73
72,74
87,88
87,89
-----guardedBy-----
37,92
55,79
53,99
64,90
75,92
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static wchar_t * badSource(wchar_t * data){    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    return data;}
static wchar_t
* badSource(wchar_t * data)
*
badSource
wchar_t * data
wchar_t
* data
*
data
{    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    return data;}
{        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(100-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
return data;
data
data
-----joern-----
(29,32,0)
(11,10,0)
(11,4,0)
(30,12,0)
(33,12,0)
(42,19,0)
(19,32,0)
(19,11,0)
(9,46,0)
(18,12,0)
(23,8,0)
(34,12,0)
(6,1,0)
(37,33,0)
(8,4,0)
(3,4,0)
(33,21,0)
(24,33,0)
(11,46,0)
(36,38,0)
(47,5,0)
(17,14,0)
(11,19,0)
(43,29,0)
(15,38,0)
(25,24,0)
(12,2,0)
(22,27,0)
(26,14,0)
(44,11,0)
(16,10,0)
(40,24,0)
(4,8,0)
(45,8,0)
(27,46,0)
(39,24,0)
(14,4,0)
(46,27,0)
(24,40,0)
(31,4,0)
(28,19,0)
(21,32,0)
(19,33,0)
(4,5,0)
(27,33,0)
(20,21,0)
(13,27,0)
(7,40,0)
(35,36,0)
(0,31,0)
(41,29,0)
(46,9,0)
(21,33,0)
(10,11,0)
(46,11,0)
(31,1,0)
(29,2,0)
(24,33,1)
(40,7,1)
(19,42,1)
(14,4,1)
(44,46,1)
(16,11,1)
(7,24,1)
(11,46,1)
(43,14,1)
(46,9,1)
(25,39,1)
(22,19,1)
(0,10,1)
(40,24,1)
(39,33,1)
(41,29,1)
(29,43,1)
(27,13,1)
(10,11,1)
(31,0,1)
(23,3,1)
(21,20,1)
(11,4,1)
(11,19,1)
(35,10,1)
(42,28,1)
(43,31,1)
(45,23,1)
(13,22,1)
(17,4,1)
(43,40,1)
(29,32,1)
(4,8,1)
(19,32,1)
(24,25,1)
(27,33,1)
(31,4,1)
(15,36,1)
(8,45,1)
(3,40,1)
(14,26,1)
(10,16,1)
(21,32,1)
(28,14,1)
(33,21,1)
(26,17,1)
(46,27,1)
(0,15,1)
(36,35,1)
(11,44,1)
(19,33,1)
(20,37,1)
(33,21,2)
(19,33,2)
(22,14,2)
(28,14,2)
(13,14,2)
(10,11,2)
(24,33,2)
(19,32,2)
(14,4,2)
(4,40,2)
(26,40,2)
(35,10,2)
(42,14,2)
(8,40,2)
(27,14,2)
(14,40,2)
(41,29,2)
(40,24,2)
(31,4,2)
(46,14,2)
(46,9,2)
(11,4,2)
(11,19,2)
(27,33,2)
(46,27,2)
(11,46,2)
(44,14,2)
(0,14,2)
(45,40,2)
(3,40,2)
(29,32,2)
(21,32,2)
(4,8,2)
(31,14,2)
(17,40,2)
(11,14,2)
(10,14,2)
(36,10,2)
(19,14,2)
(15,10,2)
(23,40,2)
(16,14,2)
-----------------------------------
(0,pFile)
(1,)
(2,)
(3,pFile)
(4,pFile = fopen(FILENAME, "r")
(5,)
(6,if (fgetws(data+dataLen, (int)
(7,1)
(8,fopen(FILENAME, "r")
(9,int)
(10,fgetws(data+dataLen, (int)
(11,fgetws(data+dataLen, (int)
(12,)
(13,dataLen)
(14,pFile != NULL)
(15,\\\'\\\\0\\\')
(16,NULL)
(17,pFile)
(18,pFile)
(19,data+dataLen)
(20,data)
(21,wcslen(data)
(22,100)
(23,FILENAME)
(24,100-dataLen)
(25,dataLen)
(26,NULL)
(27,100-dataLen)
(28,data)
(29,return data;)
(30,if (100-dataLen > 1)
(31,fclose(pFile)
(32,wchar_t * data)
(33,dataLen = wcslen(data)
(34,dataLen)
(35,"fgetws()
(36,printLine("fgetws()
(37,dataLen)
(38,)
(39,100)
(40,100-dataLen > 1)
(41,RET)
(42,dataLen)
(43,data)
(44,pFile)
(45,"r")
(46,(int)
(47,if (pFile != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
