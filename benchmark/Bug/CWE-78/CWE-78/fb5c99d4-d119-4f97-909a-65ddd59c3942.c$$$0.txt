-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_popen_52_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE78_OS_Command_Injection__char_file_popen_52b_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,121
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_popen_52_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_popen_52b_badSink(data);}
void
CWE78_OS_Command_Injection__char_file_popen_52_bad()
CWE78_OS_Command_Injection__char_file_popen_52_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_popen_52b_badSink(data);}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE78_OS_Command_Injection__char_file_popen_52b_badSink(data);
CWE78_OS_Command_Injection__char_file_popen_52b_badSink(data)
CWE78_OS_Command_Injection__char_file_popen_52b_badSink
CWE78_OS_Command_Injection__char_file_popen_52b_badSink
data
data
-----joern-----
(34,32,0)
(32,29,0)
(26,56,0)
(55,20,0)
(54,24,0)
(30,8,0)
(45,16,0)
(42,16,0)
(11,0,0)
(56,3,0)
(4,34,0)
(44,57,0)
(31,41,0)
(50,16,0)
(16,42,0)
(8,0,0)
(0,41,0)
(32,35,0)
(37,17,0)
(39,34,0)
(50,57,0)
(3,52,0)
(12,16,0)
(53,32,0)
(25,49,0)
(31,0,0)
(29,0,0)
(38,35,0)
(20,41,0)
(2,35,0)
(24,25,0)
(24,32,0)
(56,32,0)
(9,52,0)
(34,19,0)
(5,33,0)
(25,24,0)
(13,19,0)
(10,42,0)
(56,0,0)
(48,29,0)
(14,42,0)
(50,25,0)
(35,41,0)
(6,41,0)
(57,50,0)
(8,50,0)
(21,56,0)
(40,33,0)
(46,24,0)
(58,12,0)
(16,17,0)
(47,12,0)
(43,20,0)
(15,35,0)
(0,20,0)
(28,0,0)
(40,16,0)
(22,41,0)
(19,34,0)
(29,32,0)
(1,50,0)
(27,8,0)
(50,8,0)
(36,31,0)
(18,3,0)
(25,50,0)
(51,9,0)
(23,40,0)
(49,25,0)
(8,32,0)
(32,29,1)
(30,27,1)
(48,53,1)
(25,49,1)
(29,48,1)
(18,56,1)
(11,28,1)
(56,32,1)
(16,42,1)
(20,43,1)
(8,32,1)
(13,34,1)
(0,20,1)
(19,13,1)
(12,47,1)
(36,12,1)
(34,39,1)
(8,0,1)
(4,32,1)
(57,44,1)
(43,55,1)
(25,24,1)
(36,19,1)
(9,51,1)
(54,8,1)
(44,50,1)
(24,32,1)
(50,1,1)
(31,0,1)
(36,40,1)
(40,16,1)
(0,11,1)
(26,21,1)
(8,30,1)
(23,3,1)
(23,57,1)
(29,0,1)
(46,54,1)
(28,20,1)
(1,25,1)
(12,16,1)
(3,18,1)
(14,45,1)
(53,0,1)
(19,34,1)
(45,19,1)
(7,31,1)
(31,36,1)
(34,32,1)
(27,12,1)
(21,9,1)
(42,10,1)
(10,14,1)
(50,8,1)
(57,50,1)
(39,4,1)
(24,46,1)
(56,26,1)
(50,16,1)
(51,57,1)
(50,25,1)
(58,16,1)
(56,0,1)
(47,58,1)
(40,23,1)
(32,29,2)
(56,57,2)
(26,57,2)
(40,16,2)
(23,12,2)
(25,24,2)
(25,12,2)
(46,12,2)
(54,12,2)
(50,16,2)
(16,42,2)
(57,50,2)
(18,57,2)
(8,0,2)
(31,0,2)
(42,19,2)
(14,19,2)
(12,16,2)
(8,32,2)
(45,19,2)
(51,57,2)
(57,12,2)
(9,57,2)
(3,57,2)
(0,20,2)
(29,0,2)
(16,19,2)
(24,32,2)
(30,12,2)
(44,12,2)
(58,19,2)
(10,19,2)
(50,8,2)
(50,12,2)
(50,25,2)
(21,57,2)
(1,12,2)
(56,0,2)
(40,12,2)
(56,32,2)
(25,49,2)
(47,19,2)
(8,12,2)
(34,32,2)
(27,12,2)
(24,12,2)
(19,34,2)
(12,19,2)
-----------------------------------
(0,data = data_buf)
(1,pFile)
(2,pFile)
(3,data[dataLen] = \\\'\\\\0\\\')
(4,100)
(5,if (fgets(data+dataLen, (int)
(6,data_buf)
(7,RET)
(8,data+dataLen)
(9,printLine("fgets()
(10,"r")
(11,data_buf)
(12,pFile != NULL)
(13,1)
(14,FILENAME)
(15,if (100-dataLen > 1)
(16,pFile = fopen(FILENAME, "r")
(17,)
(18,\\\'\\\\0\\\')
(19,100-dataLen > 1)
(20,data_buf[100] = FULL_COMMAND)
(21,data)
(22,data)
(23,pFile)
(24,100-dataLen)
(25,(int)
(26,dataLen)
(27,data)
(28,data)
(29,strlen(data)
(30,dataLen)
(31,CWE78_OS_Command_Injection__char_file_popen_52b_badSink(data)
(32,dataLen = strlen(data)
(33,)
(34,100-dataLen)
(35,)
(36,data)
(37,if (pFile != NULL)
(38,dataLen)
(39,dataLen)
(40,fclose(pFile)
(41,)
(42,fopen(FILENAME, "r")
(43,FULL_COMMAND)
(44,NULL)
(45,pFile)
(46,dataLen)
(47,NULL)
(48,data)
(49,int)
(50,fgets(data+dataLen, (int)
(51,"fgets()
(52,)
(53,dataLen)
(54,100)
(55,data_buf)
(56,data[dataLen])
(57,fgets(data+dataLen, (int)
(58,pFile)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
