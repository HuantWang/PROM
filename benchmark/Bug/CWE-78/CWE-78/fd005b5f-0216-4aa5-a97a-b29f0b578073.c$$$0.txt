-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execl_10_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalTrue)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* execl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
82,83
82,84
82,85
82,86
82,87
82,88
83,84
85,86
87,88
89,90
91,92
93,94
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,88,90,92,94
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execl_10_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execl_10_bad()
CWE78_OS_Command_Injection__char_environment_execl_10_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalTrue
globalTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(42,8,0)
(6,20,0)
(19,28,0)
(14,8,0)
(18,40,0)
(7,17,0)
(33,38,0)
(11,7,0)
(7,11,0)
(28,26,0)
(39,27,0)
(20,40,0)
(33,17,0)
(8,7,0)
(13,7,0)
(25,12,0)
(13,34,0)
(34,26,0)
(10,26,0)
(20,8,0)
(2,33,0)
(9,27,0)
(27,26,0)
(5,17,0)
(43,26,0)
(41,17,0)
(24,17,0)
(34,28,0)
(35,27,0)
(36,7,0)
(40,20,0)
(29,38,0)
(3,34,0)
(17,31,0)
(16,13,0)
(40,0,0)
(32,27,0)
(30,27,0)
(11,34,0)
(8,20,0)
(1,34,0)
(38,33,0)
(37,28,0)
(12,33,0)
(13,40,0)
(40,13,0)
(44,11,0)
(21,12,0)
(22,13,0)
(23,26,0)
(40,33,0)
(7,11,1)
(15,27,1)
(32,35,1)
(28,19,1)
(34,28,1)
(40,13,1)
(40,20,1)
(18,13,1)
(44,36,1)
(30,40,1)
(20,8,1)
(30,12,1)
(34,1,1)
(12,33,1)
(12,21,1)
(13,7,1)
(8,7,1)
(22,16,1)
(6,18,1)
(1,3,1)
(29,2,1)
(27,9,1)
(13,34,1)
(9,32,1)
(39,30,1)
(16,12,1)
(11,34,1)
(42,14,1)
(40,33,1)
(8,42,1)
(38,29,1)
(21,25,1)
(30,4,1)
(19,37,1)
(33,38,1)
(35,39,1)
(11,44,1)
(4,34,1)
(25,33,1)
(3,28,1)
(2,7,1)
(14,6,1)
(13,22,1)
(36,4,1)
(8,12,2)
(14,12,2)
(18,12,2)
(36,4,2)
(16,12,2)
(11,34,2)
(12,33,2)
(11,4,2)
(7,4,2)
(7,11,2)
(13,7,2)
(29,4,2)
(12,4,2)
(2,4,2)
(44,4,2)
(33,38,2)
(20,8,2)
(34,28,2)
(40,13,2)
(22,12,2)
(40,12,2)
(42,12,2)
(40,20,2)
(8,7,2)
(20,12,2)
(13,34,2)
(13,12,2)
(40,33,2)
(38,4,2)
(25,4,2)
(21,4,2)
(6,12,2)
(33,4,2)
-----------------------------------
(0,)
(1,dataBuffer)
(2,environment)
(3,data)
(4,globalTrue)
(5,environment)
(6,100)
(7,dataLen = strlen(data)
(8,dataLen-1)
(9,NULL)
(10,dataBuffer)
(11,strlen(data)
(12,environment != NULL)
(13,data+dataLen)
(14,dataLen)
(15,RET)
(16,data)
(17,)
(18,environment)
(19,COMMAND_ARG2)
(20,100-dataLen-1)
(21,NULL)
(22,dataLen)
(23,data)
(24,dataLen)
(25,environment)
(26,)
(27,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(28,dataBuffer[100] = COMMAND_ARG2)
(29,ENV_VARIABLE)
(30,COMMAND_INT_PATH)
(31,)
(32,COMMAND_ARG3)
(33,* environment = GETENV(ENV_VARIABLE)
(34,data = dataBuffer)
(35,COMMAND_ARG1)
(36,dataLen)
(37,dataBuffer)
(38,GETENV(ENV_VARIABLE)
(39,COMMAND_INT_PATH)
(40,strncat(data+dataLen, environment, 100-dataLen-1)
(41,if (environment != NULL)
(42,1)
(43,if(globalTrue)
(44,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
