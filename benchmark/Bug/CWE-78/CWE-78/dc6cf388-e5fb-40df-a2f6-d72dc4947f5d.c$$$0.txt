-----label-----
1
-----code-----
char * CWE78_OS_Command_Injection__char_file_w32_execvp_61b_badSource(char * data)
{
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
32,33
32,34
33,34
33,35
34,35
34,36
36,37
39,40
39,41
40,41
41,42
41,43
42,43
44,45
44,46
44,47
45,46
47,48
50,51
50,52
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
58,60
59,60
59,61
59,62
59,63
60,61
62,63
62,64
63,64
65,66
67,68
67,69
68,69
68,70
71,72
72,73
72,74
74,75
76,77
78,79
80,81
80,82
81,82
82,83
82,84
83,84
86,87
87,88
87,89
88,89
88,90
89,90
91,92
94,95
95,96
95,97
96,97
98,99
100,101
101,102
-----nextToken-----
2,4,5,7,9,10,16,18,22,24,28,30,31,35,37,38,43,46,48,49,53,55,61,64,66,69,70,73,75,77,79,84,85,90,92,93,97,99,102
-----computeFrom-----
33,34
33,35
34,35
34,36
41,42
41,43
51,52
51,53
58,59
58,60
62,63
62,64
72,73
72,74
87,88
87,89
-----guardedBy-----
37,92
55,79
53,99
64,90
75,92
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE78_OS_Command_Injection__char_file_w32_execvp_61b_badSource(char * data){    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    return data;}
char
* CWE78_OS_Command_Injection__char_file_w32_execvp_61b_badSource(char * data)
*
CWE78_OS_Command_Injection__char_file_w32_execvp_61b_badSource
char * data
char
* data
*
data
{    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    return data;}
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
return data;
data
data
-----joern-----
(48,27,0)
(6,45,0)
(27,43,0)
(48,2,0)
(36,16,0)
(42,41,0)
(9,7,0)
(1,17,0)
(28,27,0)
(50,25,0)
(7,14,0)
(37,48,0)
(3,13,0)
(41,34,0)
(51,6,0)
(50,15,0)
(40,15,0)
(21,47,0)
(0,17,0)
(16,23,0)
(44,21,0)
(17,48,0)
(33,34,0)
(29,23,0)
(26,18,0)
(37,47,0)
(32,11,0)
(16,41,0)
(13,45,0)
(8,41,0)
(39,15,0)
(15,48,0)
(19,27,0)
(49,34,0)
(22,37,0)
(34,41,0)
(18,41,0)
(37,8,0)
(17,47,0)
(14,48,0)
(31,18,0)
(30,35,0)
(10,2,0)
(8,50,0)
(2,48,0)
(50,8,0)
(8,37,0)
(38,48,0)
(46,14,0)
(17,13,0)
(5,21,0)
(21,43,0)
(14,7,0)
(41,35,0)
(4,37,0)
(15,50,0)
(24,14,0)
(20,8,0)
(11,8,0)
(25,50,0)
(2,47,0)
(12,27,0)
(8,11,0)
(20,50,1)
(10,38,1)
(17,48,1)
(13,3,1)
(7,9,1)
(14,48,1)
(18,41,1)
(37,22,1)
(8,37,1)
(32,8,1)
(48,2,1)
(18,26,1)
(24,48,1)
(37,47,1)
(50,15,1)
(8,50,1)
(22,4,1)
(44,16,1)
(6,51,1)
(11,32,1)
(37,48,1)
(44,18,1)
(1,0,1)
(2,47,1)
(51,11,1)
(21,47,1)
(50,25,1)
(3,17,1)
(0,6,1)
(46,24,1)
(26,31,1)
(15,48,1)
(36,13,1)
(40,39,1)
(2,10,1)
(41,34,1)
(16,41,1)
(16,36,1)
(8,41,1)
(9,14,1)
(4,18,1)
(21,44,1)
(33,49,1)
(34,33,1)
(49,42,1)
(5,21,1)
(36,11,1)
(8,20,1)
(15,40,1)
(7,14,1)
(44,7,1)
(11,8,1)
(17,47,1)
(42,7,1)
(17,1,1)
(39,37,1)
(14,46,1)
(31,41,1)
(13,11,2)
(6,11,2)
(16,18,2)
(2,47,2)
(1,11,2)
(5,21,2)
(40,18,2)
(7,14,2)
(18,41,2)
(8,41,2)
(41,34,2)
(37,47,2)
(15,18,2)
(8,37,2)
(50,25,2)
(22,18,2)
(15,48,2)
(11,8,2)
(34,7,2)
(8,50,2)
(32,18,2)
(51,11,2)
(50,15,2)
(20,18,2)
(31,7,2)
(11,18,2)
(21,47,2)
(37,48,2)
(3,11,2)
(18,7,2)
(39,18,2)
(37,18,2)
(49,7,2)
(26,7,2)
(36,18,2)
(0,11,2)
(17,47,2)
(41,7,2)
(42,7,2)
(14,48,2)
(33,7,2)
(50,18,2)
(17,11,2)
(16,41,2)
(48,2,2)
(17,48,2)
(4,18,2)
(8,18,2)
-----------------------------------
(0,data)
(1,dataLen)
(2,strlen(data)
(3,\\\'\\\\0\\\')
(4,data)
(5,RET)
(6,printLine("fgets()
(7,100-dataLen > 1)
(8,fgets(data+dataLen, (int)
(9,1)
(10,data)
(11,fgets(data+dataLen, (int)
(12,if (100-dataLen > 1)
(13,data[dataLen] = \\\'\\\\0\\\')
(14,100-dataLen)
(15,100-dataLen)
(16,fclose(pFile)
(17,data[dataLen])
(18,pFile != NULL)
(19,pFile)
(20,pFile)
(21,return data;)
(22,dataLen)
(23,)
(24,100)
(25,int)
(26,NULL)
(27,)
(28,dataLen)
(29,if (fgets(data+dataLen, (int)
(30,if (pFile != NULL)
(31,pFile)
(32,NULL)
(33,"r")
(34,fopen(FILENAME, "r")
(35,)
(36,pFile)
(37,data+dataLen)
(38,dataLen)
(39,100)
(40,dataLen)
(41,pFile = fopen(FILENAME, "r")
(42,pFile)
(43,)
(44,data)
(45,)
(46,dataLen)
(47,char * data)
(48,dataLen = strlen(data)
(49,FILENAME)
(50,(int)
(51,"fgets()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
