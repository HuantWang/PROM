-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_execl_52_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE78_OS_Command_Injection__char_file_execl_52b_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,121
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_execl_52_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_execl_52b_badSink(data);}
void
CWE78_OS_Command_Injection__char_file_execl_52_bad()
CWE78_OS_Command_Injection__char_file_execl_52_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_execl_52b_badSink(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE78_OS_Command_Injection__char_file_execl_52b_badSink(data);
CWE78_OS_Command_Injection__char_file_execl_52b_badSink(data)
CWE78_OS_Command_Injection__char_file_execl_52b_badSink
CWE78_OS_Command_Injection__char_file_execl_52b_badSink
data
data
-----joern-----
(46,41,0)
(20,37,0)
(58,47,0)
(54,50,0)
(55,21,0)
(38,49,0)
(42,50,0)
(35,6,0)
(40,27,0)
(13,9,0)
(26,7,0)
(29,12,0)
(57,50,0)
(19,57,0)
(32,35,0)
(47,12,0)
(1,32,0)
(21,12,0)
(51,47,0)
(34,9,0)
(25,21,0)
(37,50,0)
(8,40,0)
(57,30,0)
(49,31,0)
(7,50,0)
(30,57,0)
(23,54,0)
(38,56,0)
(52,6,0)
(11,27,0)
(22,21,0)
(44,11,0)
(15,25,0)
(50,7,0)
(54,25,0)
(41,12,0)
(36,32,0)
(6,35,0)
(37,35,0)
(35,32,0)
(3,54,0)
(9,49,0)
(1,50,0)
(7,25,0)
(39,35,0)
(2,17,0)
(35,37,0)
(10,30,0)
(25,12,0)
(32,1,0)
(4,37,0)
(43,1,0)
(0,57,0)
(5,1,0)
(28,56,0)
(54,40,0)
(16,47,0)
(24,17,0)
(53,38,0)
(18,25,0)
(48,31,0)
(50,47,0)
(32,36,0)
(49,9,0)
(33,49,0)
(37,25,0)
(17,49,0)
(35,49,0)
(41,25,0)
(45,12,0)
(37,20,1)
(20,4,1)
(8,54,1)
(21,22,1)
(35,49,1)
(42,25,1)
(44,6,1)
(32,1,1)
(41,46,1)
(5,43,1)
(6,52,1)
(54,50,1)
(2,49,1)
(25,21,1)
(46,38,1)
(37,50,1)
(57,50,1)
(9,13,1)
(17,24,1)
(23,11,1)
(24,2,1)
(32,36,1)
(30,10,1)
(30,57,1)
(0,19,1)
(46,17,1)
(34,33,1)
(35,37,1)
(14,41,1)
(35,32,1)
(3,23,1)
(4,17,1)
(52,35,1)
(53,40,1)
(38,49,1)
(11,44,1)
(7,25,1)
(33,30,1)
(54,3,1)
(40,8,1)
(37,25,1)
(54,25,1)
(46,30,1)
(17,49,1)
(19,50,1)
(25,18,1)
(41,25,1)
(35,39,1)
(50,7,1)
(57,0,1)
(1,50,1)
(15,21,1)
(13,34,1)
(53,6,1)
(39,32,1)
(1,5,1)
(18,15,1)
(26,42,1)
(22,55,1)
(6,35,1)
(7,26,1)
(38,53,1)
(49,9,1)
(43,37,1)
(10,57,1)
(17,30,2)
(37,17,2)
(35,37,2)
(32,36,2)
(35,17,2)
(34,30,2)
(4,17,2)
(49,30,2)
(1,50,2)
(17,49,2)
(32,1,2)
(35,32,2)
(11,6,2)
(39,17,2)
(38,49,2)
(30,57,2)
(38,17,2)
(54,6,2)
(23,6,2)
(37,50,2)
(37,25,2)
(9,30,2)
(54,50,2)
(33,30,2)
(32,17,2)
(3,6,2)
(35,49,2)
(50,7,2)
(8,6,2)
(44,6,2)
(41,25,2)
(25,21,2)
(52,17,2)
(6,17,2)
(7,25,2)
(13,30,2)
(40,6,2)
(57,50,2)
(53,17,2)
(24,30,2)
(54,25,2)
(20,17,2)
(2,30,2)
(43,17,2)
(5,17,2)
(1,17,2)
(49,9,2)
(6,35,2)
-----------------------------------
(0,dataLen)
(1,100-dataLen)
(2,pFile)
(3,dataLen)
(4,data)
(5,dataLen)
(6,fgets(data+dataLen, (int)
(7,strlen(data)
(8,\\\'\\\\0\\\')
(9,fopen(FILENAME, "r")
(10,1)
(11,printLine("fgets()
(12,)
(13,"r")
(14,RET)
(15,data)
(16,pFile)
(17,pFile != NULL)
(18,dataBuffer)
(19,100)
(20,dataLen)
(21,dataBuffer[100] = COMMAND_ARG2)
(22,COMMAND_ARG2)
(23,data)
(24,NULL)
(25,data = dataBuffer)
(26,data)
(27,)
(28,if (fgets(data+dataLen, (int)
(29,dataBuffer)
(30,100-dataLen > 1)
(31,)
(32,(int)
(33,pFile)
(34,FILENAME)
(35,fgets(data+dataLen, (int)
(36,int)
(37,data+dataLen)
(38,fclose(pFile)
(39,pFile)
(40,data[dataLen] = \\\'\\\\0\\\')
(41,CWE78_OS_Command_Injection__char_file_execl_52b_badSink(data)
(42,dataLen)
(43,100)
(44,"fgets()
(45,data)
(46,data)
(47,)
(48,if (pFile != NULL)
(49,pFile = fopen(FILENAME, "r")
(50,dataLen = strlen(data)
(51,dataLen)
(52,NULL)
(53,pFile)
(54,data[dataLen])
(55,dataBuffer)
(56,)
(57,100-dataLen)
(58,if (100-dataLen > 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
