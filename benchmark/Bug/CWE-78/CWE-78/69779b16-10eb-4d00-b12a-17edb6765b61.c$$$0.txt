-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_execvp_02_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* execvp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECVP(COMMAND_INT, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
80,81
80,82
81,82
82,83
82,84
84,85
84,86
84,87
84,88
88,89
89,90
89,91
89,92
89,93
90,91
92,93
94,95
96,97
98,99
99,100
99,101
99,102
100,101
102,103
104,105
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,83,85,86,87,91,93,95,97,101,103,105
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_execvp_02_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_execvp_02_bad()
CWE78_OS_Command_Injection__char_environment_w32_execvp_02_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
EXECVP(COMMAND_INT, args);
EXECVP(COMMAND_INT, args)
EXECVP
EXECVP
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(29,45,0)
(15,25,0)
(38,7,0)
(34,17,0)
(17,36,0)
(41,0,0)
(43,25,0)
(21,41,0)
(18,12,0)
(16,10,0)
(1,41,0)
(0,41,0)
(18,10,0)
(28,18,0)
(43,7,0)
(12,44,0)
(4,1,0)
(7,43,0)
(36,35,0)
(40,42,0)
(45,10,0)
(44,35,0)
(42,43,0)
(25,26,0)
(41,25,0)
(10,41,0)
(24,25,0)
(13,35,0)
(10,9,0)
(5,18,0)
(10,18,0)
(19,35,0)
(18,43,0)
(2,34,0)
(7,12,0)
(30,44,0)
(22,43,0)
(39,12,0)
(3,17,0)
(37,25,0)
(10,45,0)
(11,44,0)
(14,12,0)
(33,42,0)
(20,1,0)
(42,45,0)
(6,34,0)
(45,42,0)
(12,35,0)
(31,0,0)
(23,35,0)
(34,36,0)
(27,36,0)
(10,41,1)
(31,21,1)
(10,18,1)
(38,22,1)
(3,10,1)
(18,12,1)
(18,5,1)
(10,45,1)
(14,44,1)
(12,39,1)
(40,29,1)
(34,17,1)
(11,30,1)
(20,41,1)
(8,34,1)
(7,12,1)
(1,4,1)
(0,31,1)
(43,7,1)
(42,43,1)
(3,32,1)
(41,0,1)
(7,38,1)
(42,33,1)
(33,40,1)
(45,42,1)
(21,43,1)
(2,17,1)
(3,1,1)
(44,11,1)
(32,12,1)
(1,41,1)
(29,16,1)
(16,18,1)
(34,6,1)
(39,14,1)
(28,1,1)
(18,43,1)
(6,2,1)
(17,3,1)
(4,20,1)
(22,32,1)
(5,28,1)
(12,44,1)
(4,32,2)
(29,1,2)
(12,44,2)
(28,1,2)
(20,32,2)
(42,43,2)
(18,1,2)
(41,0,2)
(10,18,2)
(41,32,2)
(45,42,2)
(43,32,2)
(43,7,2)
(5,1,2)
(7,12,2)
(16,1,2)
(45,1,2)
(18,12,2)
(40,1,2)
(42,1,2)
(33,1,2)
(10,41,2)
(22,32,2)
(7,32,2)
(10,45,2)
(34,17,2)
(21,32,2)
(1,32,2)
(0,32,2)
(38,32,2)
(18,43,2)
(31,32,2)
(1,41,2)
(10,1,2)
-----------------------------------
(0,GETENV(ENV_VARIABLE)
(1,environment != NULL)
(2,COMMAND_INT)
(3,args)
(4,NULL)
(5,dataLen)
(6,args)
(7,strlen(data)
(8,RET)
(9,)
(10,strncat(data+dataLen, environment, 100-dataLen-1)
(11,COMMAND_ARG2)
(12,data = dataBuffer)
(13,dataBuffer)
(14,data)
(15,dataLen)
(16,environment)
(17,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(18,data+dataLen)
(19,if(1)
(20,environment)
(21,environment)
(22,dataLen)
(23,data)
(24,environment)
(25,)
(26,)
(27,args)
(28,data)
(29,100)
(30,dataBuffer)
(31,ENV_VARIABLE)
(32,1)
(33,1)
(34,EXECVP(COMMAND_INT, args)
(35,)
(36,)
(37,if (environment != NULL)
(38,data)
(39,dataBuffer)
(40,dataLen)
(41,* environment = GETENV(ENV_VARIABLE)
(42,dataLen-1)
(43,dataLen = strlen(data)
(44,dataBuffer[100] = COMMAND_ARG2)
(45,100-dataLen-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
