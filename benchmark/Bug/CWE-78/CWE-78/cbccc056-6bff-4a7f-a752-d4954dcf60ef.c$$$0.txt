-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_popen_15_bad()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    switch(6)
    {
    case 6:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, L"w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
30,33
30,34
30,35
30,36
31,32
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
84,85
85,86
85,87
86,87
90,91
90,92
90,93
91,92
92,93
92,94
93,94
95,96
95,97
98,99
99,100
99,101
100,101
102,103
102,104
102,105
103,104
105,106
108,109
108,110
109,110
109,111
110,111
112,113
114,115
115,116
116,117
116,118
117,118
119,120
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,32,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,82,83,87,88,89,94,96,97,101,104,106,107,111,113,118,120
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
99,100
99,101
109,110
109,111
-----guardedBy-----
61,75
111,120
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_popen_15_bad(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_popen_15_bad()
CWE78_OS_Command_Injection__wchar_t_environment_popen_15_bad
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, L"w");
pipe = POPEN(data, L"w")
pipe
pipe
POPEN(data, L"w")
POPEN
POPEN
data
data
L"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(0,45,0)
(38,41,0)
(5,7,0)
(51,22,0)
(26,10,0)
(27,0,0)
(9,22,0)
(13,19,0)
(22,51,0)
(42,41,0)
(47,24,0)
(31,49,0)
(19,41,0)
(44,43,0)
(6,4,0)
(22,19,0)
(53,41,0)
(30,20,0)
(52,19,0)
(40,32,0)
(45,20,0)
(46,51,0)
(25,3,0)
(35,9,0)
(39,43,0)
(11,9,0)
(36,39,0)
(20,10,0)
(3,0,0)
(3,10,0)
(37,43,0)
(45,22,0)
(2,19,0)
(1,4,0)
(0,3,0)
(4,43,0)
(8,41,0)
(7,41,0)
(10,19,0)
(21,32,0)
(23,22,0)
(49,43,0)
(24,4,0)
(4,39,0)
(45,0,0)
(16,50,0)
(17,3,0)
(45,12,0)
(15,39,0)
(50,28,0)
(14,49,0)
(18,45,0)
(48,43,0)
(20,45,0)
(10,24,0)
(24,10,0)
(20,4,0)
(29,20,0)
(38,7,1)
(16,32,1)
(20,30,1)
(29,9,1)
(45,20,1)
(53,9,1)
(1,6,1)
(10,24,1)
(24,47,1)
(17,25,1)
(24,4,1)
(45,22,1)
(50,16,1)
(26,34,1)
(30,29,1)
(0,3,1)
(45,0,1)
(23,10,1)
(3,10,1)
(46,23,1)
(7,5,1)
(34,4,1)
(40,53,1)
(32,21,1)
(20,4,1)
(22,51,1)
(9,11,1)
(25,27,1)
(11,35,1)
(36,15,1)
(53,45,1)
(18,20,1)
(6,39,1)
(20,10,1)
(40,38,1)
(51,46,1)
(39,36,1)
(27,18,1)
(4,39,1)
(9,22,1)
(33,50,1)
(47,26,1)
(5,34,1)
(33,32,1)
(3,17,1)
(4,1,1)
(21,40,1)
(35,22,1)
(22,34,2)
(11,34,2)
(20,10,2)
(20,4,2)
(23,34,2)
(30,9,2)
(47,34,2)
(9,34,2)
(26,34,2)
(0,3,2)
(22,51,2)
(38,34,2)
(16,32,2)
(10,34,2)
(4,39,2)
(10,24,2)
(5,34,2)
(53,34,2)
(18,9,2)
(29,9,2)
(45,9,2)
(45,22,2)
(0,9,2)
(3,10,2)
(46,34,2)
(17,9,2)
(20,9,2)
(50,32,2)
(51,34,2)
(35,34,2)
(45,20,2)
(45,0,2)
(27,9,2)
(24,4,2)
(3,9,2)
(24,34,2)
(9,22,2)
(7,34,2)
(25,9,2)
-----------------------------------
(0,100-dataLen-1)
(1,data_buf)
(2,dataLen)
(3,dataLen-1)
(4,data = data_buf)
(5,"Benign, fixed string")
(6,data)
(7,printLine("Benign, fixed string")
(8,case 6:)
(9,environment != NULL)
(10,dataLen = wcslen(data)
(11,NULL)
(12,)
(13,if (environment != NULL)
(14,pipe)
(15,data_buf)
(16,pipe)
(17,1)
(18,environment)
(19,)
(20,data+dataLen)
(21,NULL)
(22,* environment = GETENV(ENV_VARIABLE)
(23,environment)
(24,wcslen(data)
(25,dataLen)
(26,dataLen)
(27,100)
(28,)
(29,data)
(30,dataLen)
(31,if (pipe != NULL)
(32,pipe != NULL)
(33,RET)
(34,6)
(35,environment)
(36,FULL_COMMAND)
(37,data)
(38,break;)
(39,data_buf[100] = FULL_COMMAND)
(40,pipe)
(41,)
(42,default:)
(43,)
(44,switch(6)
(45,wcsncat(data+dataLen, environment, 100-dataLen-1)
(46,ENV_VARIABLE)
(47,data)
(48,data_buf)
(49,)
(50,PCLOSE(pipe)
(51,GETENV(ENV_VARIABLE)
(52,environment)
(53,break;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
