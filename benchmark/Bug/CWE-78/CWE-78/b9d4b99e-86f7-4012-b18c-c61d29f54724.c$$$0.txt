-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_15_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    switch(6)
    {
    case 6:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    /* spawnlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
30,33
30,34
30,35
30,36
31,32
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
84,85
85,86
85,87
86,87
90,91
91,92
91,93
91,94
91,95
91,96
91,97
91,98
92,93
94,95
96,97
98,99
100,101
102,103
104,105
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,32,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,82,83,87,88,89,93,95,97,99,101,103,105
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_15_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_15_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_15_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnlp
_spawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(32,38,0)
(24,45,0)
(13,46,0)
(9,28,0)
(22,34,0)
(8,40,0)
(28,9,0)
(11,2,0)
(33,9,0)
(0,2,0)
(18,8,0)
(16,46,0)
(42,44,0)
(38,34,0)
(17,5,0)
(7,45,0)
(51,46,0)
(39,44,0)
(29,18,0)
(23,8,0)
(25,6,0)
(26,6,0)
(47,45,0)
(2,49,0)
(8,5,0)
(6,8,0)
(46,44,0)
(27,29,0)
(36,34,0)
(19,29,0)
(48,45,0)
(43,40,0)
(49,18,0)
(40,34,0)
(50,51,0)
(14,18,0)
(2,9,0)
(4,45,0)
(20,40,0)
(3,40,0)
(41,45,0)
(12,34,0)
(51,44,0)
(18,49,0)
(45,44,0)
(18,29,0)
(9,40,0)
(29,9,0)
(21,34,0)
(35,28,0)
(5,8,0)
(28,51,0)
(31,44,0)
(49,2,0)
(18,1,0)
(10,49,0)
(29,51,0)
(37,51,0)
(37,50,1)
(45,47,1)
(41,12,1)
(29,9,1)
(0,11,1)
(19,27,1)
(6,25,1)
(48,41,1)
(22,18,1)
(28,51,1)
(2,9,1)
(9,28,1)
(13,16,1)
(7,24,1)
(29,51,1)
(33,30,1)
(22,6,1)
(18,8,1)
(51,46,1)
(30,51,1)
(41,22,1)
(5,17,1)
(49,2,1)
(12,38,1)
(46,13,1)
(18,29,1)
(8,5,1)
(10,14,1)
(50,46,1)
(47,7,1)
(29,19,1)
(25,26,1)
(24,4,1)
(35,33,1)
(51,37,1)
(2,0,1)
(27,6,1)
(32,30,1)
(15,45,1)
(38,32,1)
(23,9,1)
(4,48,1)
(14,29,1)
(11,10,1)
(18,49,1)
(26,8,1)
(17,23,1)
(6,8,1)
(28,35,1)
(2,6,2)
(8,5,2)
(18,8,2)
(10,6,2)
(17,30,2)
(29,6,2)
(26,30,2)
(29,51,2)
(28,51,2)
(11,6,2)
(9,28,2)
(29,9,2)
(19,6,2)
(25,30,2)
(23,30,2)
(8,30,2)
(18,49,2)
(27,6,2)
(35,30,2)
(18,6,2)
(6,8,2)
(0,6,2)
(33,30,2)
(28,30,2)
(2,9,2)
(49,6,2)
(18,29,2)
(38,30,2)
(6,30,2)
(22,30,2)
(12,30,2)
(49,2,2)
(9,30,2)
(5,30,2)
(32,30,2)
(51,46,2)
(14,6,2)
-----------------------------------
(0,1)
(1,)
(2,dataLen-1)
(3,if (environment != NULL)
(4,COMMAND_INT)
(5,GETENV(ENV_VARIABLE)
(6,environment != NULL)
(7,COMMAND_ARG3)
(8,* environment = GETENV(ENV_VARIABLE)
(9,dataLen = strlen(data)
(10,100)
(11,dataLen)
(12,break;)
(13,COMMAND_ARG2)
(14,environment)
(15,RET)
(16,dataBuffer)
(17,ENV_VARIABLE)
(18,strncat(data+dataLen, environment, 100-dataLen-1)
(19,dataLen)
(20,environment)
(21,case 6:)
(22,break;)
(23,environment)
(24,COMMAND_ARG1)
(25,NULL)
(26,environment)
(27,data)
(28,strlen(data)
(29,data+dataLen)
(30,6)
(31,dataBuffer)
(32,"Benign, fixed string")
(33,dataLen)
(34,)
(35,data)
(36,default:)
(37,dataBuffer)
(38,printLine("Benign, fixed string")
(39,switch(6)
(40,)
(41,_P_WAIT)
(42,data)
(43,dataLen)
(44,)
(45,_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(46,dataBuffer[100] = COMMAND_ARG2)
(47,NULL)
(48,COMMAND_INT)
(49,100-dataLen-1)
(50,data)
(51,data = dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
