-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execlp_09_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* execlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
82,83
82,84
82,85
82,86
82,87
82,88
83,84
85,86
87,88
89,90
91,92
93,94
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,88,90,92,94
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execlp_09_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(GLOBAL_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execlp_09_bad()
CWE78_OS_Command_Injection__char_environment_execlp_09_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(GLOBAL_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(GLOBAL_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(30,1,0)
(10,39,0)
(34,9,0)
(28,13,0)
(22,15,0)
(23,39,0)
(38,39,0)
(29,13,0)
(28,4,0)
(6,0,0)
(14,35,0)
(44,33,0)
(13,0,0)
(18,25,0)
(33,7,0)
(15,28,0)
(37,13,0)
(11,35,0)
(43,4,0)
(32,0,0)
(4,43,0)
(13,1,0)
(7,33,0)
(5,28,0)
(20,43,0)
(42,39,0)
(15,11,0)
(28,15,0)
(35,4,0)
(26,9,0)
(25,33,0)
(16,39,0)
(15,33,0)
(35,11,0)
(0,1,0)
(33,9,0)
(3,1,0)
(31,35,0)
(19,11,0)
(39,1,0)
(4,9,0)
(9,8,0)
(41,7,0)
(43,13,0)
(15,12,0)
(40,9,0)
(21,4,0)
(24,25,0)
(11,15,0)
(27,1,0)
(2,28,0)
(23,10,1)
(2,5,1)
(13,29,1)
(20,21,1)
(14,19,1)
(24,18,1)
(25,33,1)
(15,28,1)
(11,35,1)
(10,36,1)
(18,33,1)
(35,4,1)
(15,11,1)
(35,31,1)
(22,28,1)
(10,15,1)
(28,13,1)
(16,38,1)
(21,36,1)
(29,37,1)
(28,2,1)
(33,7,1)
(15,33,1)
(0,32,1)
(36,13,1)
(4,43,1)
(43,20,1)
(38,23,1)
(7,41,1)
(13,0,1)
(44,4,1)
(19,22,1)
(28,4,1)
(39,42,1)
(10,25,1)
(25,24,1)
(43,13,1)
(42,16,1)
(5,25,1)
(32,6,1)
(37,0,1)
(31,14,1)
(17,39,1)
(41,44,1)
(28,13,2)
(21,36,2)
(4,43,2)
(25,36,2)
(13,0,2)
(5,25,2)
(43,36,2)
(24,36,2)
(11,25,2)
(41,36,2)
(33,7,2)
(15,33,2)
(43,13,2)
(18,36,2)
(7,36,2)
(2,25,2)
(28,25,2)
(22,25,2)
(20,36,2)
(15,25,2)
(15,28,2)
(35,4,2)
(28,4,2)
(11,35,2)
(44,36,2)
(35,25,2)
(19,25,2)
(31,25,2)
(15,11,2)
(14,25,2)
(33,36,2)
(4,36,2)
(25,33,2)
-----------------------------------
(0,dataBuffer[100] = COMMAND_ARG2)
(1,)
(2,dataLen)
(3,if(GLOBAL_CONST_TRUE)
(4,dataLen = strlen(data)
(5,data)
(6,dataBuffer)
(7,GETENV(ENV_VARIABLE)
(8,)
(9,)
(10,COMMAND_INT)
(11,100-dataLen-1)
(12,)
(13,data = dataBuffer)
(14,dataLen)
(15,strncat(data+dataLen, environment, 100-dataLen-1)
(16,COMMAND_ARG3)
(17,RET)
(18,environment)
(19,100)
(20,data)
(21,dataLen)
(22,environment)
(23,COMMAND_INT)
(24,NULL)
(25,environment != NULL)
(26,dataLen)
(27,dataBuffer)
(28,data+dataLen)
(29,dataBuffer)
(30,data)
(31,1)
(32,COMMAND_ARG2)
(33,* environment = GETENV(ENV_VARIABLE)
(34,if (environment != NULL)
(35,dataLen-1)
(36,GLOBAL_CONST_TRUE)
(37,data)
(38,COMMAND_ARG1)
(39,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(40,environment)
(41,ENV_VARIABLE)
(42,NULL)
(43,strlen(data)
(44,environment)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
