-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_popen_01_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
116,118
116,119
117,118
118,119
118,120
119,120
121,122
121,123
124,125
125,126
125,127
126,127
128,129
128,130
128,131
129,130
131,132
134,135
134,136
135,136
135,137
136,137
138,139
140,141
141,142
142,143
142,144
143,144
145,146
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,120,122,123,127,130,132,133,137,139,144,146
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
125,126
125,127
135,136
135,137
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
137,146
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_popen_01_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__char_file_popen_01_bad()
CWE78_OS_Command_Injection__char_file_popen_01_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(36,8,0)
(3,43,0)
(29,19,0)
(33,31,0)
(52,49,0)
(41,5,0)
(45,39,0)
(58,46,0)
(55,14,0)
(60,52,0)
(26,9,0)
(11,19,0)
(57,3,0)
(5,0,0)
(16,7,0)
(30,43,0)
(44,4,0)
(32,39,0)
(51,2,0)
(2,37,0)
(39,4,0)
(13,30,0)
(7,37,0)
(9,24,0)
(54,24,0)
(20,5,0)
(42,38,0)
(43,30,0)
(65,14,0)
(8,24,0)
(10,8,0)
(12,65,0)
(22,14,0)
(65,19,0)
(41,3,0)
(43,24,0)
(19,4,0)
(59,0,0)
(63,43,0)
(27,41,0)
(21,55,0)
(64,62,0)
(35,39,0)
(46,4,0)
(5,39,0)
(11,43,0)
(19,44,0)
(1,62,0)
(3,57,0)
(68,11,0)
(28,64,0)
(56,44,0)
(25,44,0)
(53,41,0)
(69,19,0)
(47,46,0)
(14,65,0)
(0,19,0)
(69,2,0)
(38,61,0)
(62,64,0)
(15,55,0)
(43,11,0)
(50,19,0)
(34,11,0)
(23,4,0)
(24,31,0)
(66,9,0)
(14,46,0)
(52,24,0)
(48,65,0)
(0,5,0)
(6,69,0)
(62,5,0)
(3,41,0)
(38,14,0)
(40,4,0)
(67,69,0)
(11,5,0)
(43,3,0)
(69,5,0)
(24,9,0)
(17,49,0)
(18,62,0)
(16,30,1)
(30,43,1)
(9,66,1)
(69,19,1)
(43,63,1)
(18,5,1)
(14,65,1)
(55,14,1)
(53,11,1)
(65,48,1)
(24,9,1)
(6,7,1)
(60,30,1)
(22,8,1)
(34,8,1)
(10,24,1)
(70,55,1)
(50,44,1)
(20,19,1)
(48,12,1)
(11,5,1)
(63,3,1)
(67,6,1)
(54,64,1)
(38,14,1)
(0,19,1)
(64,28,1)
(28,62,1)
(70,38,1)
(51,69,1)
(36,10,1)
(11,68,1)
(66,26,1)
(13,43,1)
(7,16,1)
(44,25,1)
(52,60,1)
(2,51,1)
(41,5,1)
(29,50,1)
(64,62,1)
(8,24,1)
(22,52,1)
(65,19,1)
(25,56,1)
(52,24,1)
(3,41,1)
(22,64,1)
(59,20,1)
(8,36,1)
(5,0,1)
(1,18,1)
(41,27,1)
(42,55,1)
(68,34,1)
(11,19,1)
(21,15,1)
(60,2,1)
(15,14,1)
(38,42,1)
(27,53,1)
(55,21,1)
(0,59,1)
(26,54,1)
(62,5,1)
(43,24,1)
(62,1,1)
(69,5,1)
(19,29,1)
(43,3,1)
(43,11,1)
(19,44,1)
(69,67,1)
(3,57,1)
(30,13,1)
(12,22,1)
(11,8,2)
(43,3,2)
(13,8,2)
(41,5,2)
(54,64,2)
(3,57,2)
(69,5,2)
(36,64,2)
(41,8,2)
(38,55,2)
(38,14,2)
(24,64,2)
(27,8,2)
(16,30,2)
(5,0,2)
(69,19,2)
(53,8,2)
(65,19,2)
(52,24,2)
(69,30,2)
(3,41,2)
(66,64,2)
(3,8,2)
(8,64,2)
(42,55,2)
(19,44,2)
(11,5,2)
(24,9,2)
(34,8,2)
(68,8,2)
(10,64,2)
(6,30,2)
(26,64,2)
(9,64,2)
(30,8,2)
(64,62,2)
(30,43,2)
(55,14,2)
(11,19,2)
(51,30,2)
(63,8,2)
(14,65,2)
(0,19,2)
(43,24,2)
(62,5,2)
(43,8,2)
(8,24,2)
(43,11,2)
(60,8,2)
(7,30,2)
(2,30,2)
(67,30,2)
(52,8,2)
-----------------------------------
(0,strlen(data)
(1,dataLen)
(2,data[dataLen] = \\\'\\\\0\\\')
(3,(int)
(4,)
(5,dataLen = strlen(data)
(6,data)
(7,printLine("fgets()
(8,pFile != NULL)
(9,fopen(FILENAME, "r")
(10,pFile)
(11,data+dataLen)
(12,data)
(13,NULL)
(14,pipe = POPEN(data, "w")
(15,pipe)
(16,"fgets()
(17,if (fgets(data+dataLen, (int)
(18,100)
(19,data = data_buf)
(20,dataLen)
(21,NULL)
(22,pipe)
(23,data)
(24,pFile = fopen(FILENAME, "r")
(25,FULL_COMMAND)
(26,FILENAME)
(27,dataLen)
(28,1)
(29,data_buf)
(30,fgets(data+dataLen, (int)
(31,)
(32,if (100-dataLen > 1)
(33,if (pFile != NULL)
(34,data)
(35,dataLen)
(36,NULL)
(37,)
(38,PCLOSE(pipe)
(39,)
(40,data_buf)
(41,100-dataLen)
(42,pipe)
(43,fgets(data+dataLen, (int)
(44,data_buf[100] = FULL_COMMAND)
(45,pFile)
(46,)
(47,if (pipe != NULL)
(48,"w")
(49,)
(50,data)
(51,\\\'\\\\0\\\')
(52,fclose(pFile)
(53,100)
(54,pFile)
(55,pipe != NULL)
(56,data_buf)
(57,int)
(58,pipe)
(59,data)
(60,pFile)
(61,)
(62,100-dataLen)
(63,pFile)
(64,100-dataLen > 1)
(65,POPEN(data, "w")
(66,"r")
(67,dataLen)
(68,dataLen)
(69,data[dataLen])
(70,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
