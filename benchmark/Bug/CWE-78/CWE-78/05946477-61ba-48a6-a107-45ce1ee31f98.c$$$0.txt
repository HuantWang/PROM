-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execlp_17_bad()
{
    int i;
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    for(i = 0; i < 1; i++)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* execlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
17,18
18,19
18,20
20,21
20,22
20,23
22,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
33,35
33,36
33,37
34,35
35,36
35,37
36,37
39,40
39,41
40,41
43,44
44,45
46,47
47,48
47,49
47,50
48,49
49,50
49,51
50,51
52,53
52,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
63,64
63,65
63,66
66,67
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
76,77
78,79
79,80
80,81
80,82
80,83
80,84
81,82
83,84
83,85
84,85
86,87
88,89
90,91
90,92
91,92
91,93
93,94
96,97
97,98
97,99
97,100
97,101
97,102
97,103
98,99
100,101
102,103
104,105
106,107
108,109
-----nextToken-----
2,4,8,10,13,15,16,19,21,23,26,30,32,37,38,41,42,45,51,53,57,59,62,64,65,69,71,75,77,82,85,87,89,92,94,95,99,101,103,105,107,109
-----computeFrom-----
28,29
28,30
35,36
35,37
39,40
39,41
73,74
73,75
83,84
83,85
90,91
90,92
91,92
91,93
-----guardedBy-----
75,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execlp_17_bad(){    int i;    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execlp_17_bad()
CWE78_OS_Command_Injection__char_environment_execlp_17_bad
{    int i;    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
int i;
int i;
int
i
i
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(13,32,0)
(29,48,0)
(19,10,0)
(9,33,0)
(33,52,0)
(4,50,0)
(17,32,0)
(43,18,0)
(20,29,0)
(50,22,0)
(30,22,0)
(3,43,0)
(27,29,0)
(36,15,0)
(20,46,0)
(46,20,0)
(44,34,0)
(10,18,0)
(12,2,0)
(33,2,0)
(39,16,0)
(33,18,0)
(33,36,0)
(2,20,0)
(11,16,0)
(23,29,0)
(1,32,0)
(26,20,0)
(14,15,0)
(40,22,0)
(46,50,0)
(8,29,0)
(50,16,0)
(15,20,0)
(24,18,0)
(35,22,0)
(41,17,0)
(18,29,0)
(7,40,0)
(49,15,0)
(6,50,0)
(25,2,0)
(34,32,0)
(15,36,0)
(2,50,0)
(16,22,0)
(21,40,0)
(5,17,0)
(28,46,0)
(47,40,0)
(45,36,0)
(31,22,0)
(51,40,0)
(0,40,0)
(36,33,0)
(18,43,0)
(37,22,0)
(42,10,0)
(2,33,0)
(24,20,1)
(28,26,1)
(10,19,1)
(45,9,1)
(21,17,1)
(20,46,1)
(34,32,1)
(41,5,1)
(9,2,1)
(17,41,1)
(17,32,1)
(16,11,1)
(15,14,1)
(46,50,1)
(3,24,1)
(38,40,1)
(26,17,1)
(32,1,1)
(1,13,1)
(50,16,1)
(44,33,1)
(50,4,1)
(0,51,1)
(33,18,1)
(43,3,1)
(11,39,1)
(15,20,1)
(12,10,1)
(2,25,1)
(4,6,1)
(25,12,1)
(44,10,1)
(14,49,1)
(33,2,1)
(51,47,1)
(2,20,1)
(18,43,1)
(6,16,1)
(42,18,1)
(34,44,1)
(40,0,1)
(33,36,1)
(10,18,1)
(46,28,1)
(13,50,1)
(2,50,1)
(36,15,1)
(19,42,1)
(49,45,1)
(7,21,1)
(5,34,1)
(5,32,1)
(47,7,1)
(2,20,2)
(19,17,2)
(3,17,2)
(12,10,2)
(14,10,2)
(2,10,2)
(18,43,2)
(33,2,2)
(17,32,2)
(49,10,2)
(43,17,2)
(10,17,2)
(9,10,2)
(18,17,2)
(15,10,2)
(24,17,2)
(17,17,2)
(34,32,2)
(15,20,2)
(44,17,2)
(46,50,2)
(26,17,2)
(50,16,2)
(25,10,2)
(20,46,2)
(36,15,2)
(34,17,2)
(33,18,2)
(36,10,2)
(20,17,2)
(45,10,2)
(33,36,2)
(46,17,2)
(5,17,2)
(42,17,2)
(2,50,2)
(41,17,2)
(10,18,2)
(33,10,2)
(28,17,2)
-----------------------------------
(0,NULL)
(1,0)
(2,data+dataLen)
(3,ENV_VARIABLE)
(4,dataBuffer)
(5,i)
(6,data)
(7,COMMAND_INT)
(8,environment)
(9,environment)
(10,environment != NULL)
(11,COMMAND_ARG2)
(12,data)
(13,i)
(14,1)
(15,dataLen-1)
(16,dataBuffer[100] = COMMAND_ARG2)
(17,i < 1)
(18,* environment = GETENV(ENV_VARIABLE)
(19,NULL)
(20,dataLen = strlen(data)
(21,COMMAND_INT)
(22,)
(23,if (environment != NULL)
(24,environment)
(25,dataLen)
(26,dataLen)
(27,dataLen)
(28,data)
(29,)
(30,data)
(31,dataBuffer)
(32,i = 0)
(33,strncat(data+dataLen, environment, 100-dataLen-1)
(34,i++)
(35,for(i = 0; i < 1; i++)
(36,100-dataLen-1)
(37,i)
(38,RET)
(39,dataBuffer)
(40,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(41,1)
(42,environment)
(43,GETENV(ENV_VARIABLE)
(44,i)
(45,100)
(46,strlen(data)
(47,COMMAND_ARG1)
(48,)
(49,dataLen)
(50,data = dataBuffer)
(51,COMMAND_ARG3)
(52,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
