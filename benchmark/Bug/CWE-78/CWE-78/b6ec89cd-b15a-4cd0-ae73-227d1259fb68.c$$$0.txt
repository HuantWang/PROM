-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_31_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    {
        wchar_t * dataCopy = data;
        wchar_t * data = dataCopy;
        {
            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
            /* wspawnv - specify the path where the command is located */
            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
61,64
61,65
62,63
64,65
64,66
65,66
67,68
69,70
71,72
71,73
72,73
72,74
74,75
77,78
77,79
77,80
78,79
79,80
79,81
81,82
81,83
81,84
84,85
85,86
87,88
88,89
88,90
90,91
90,92
90,93
93,94
94,95
96,97
96,98
97,98
98,99
98,100
100,101
100,102
100,103
100,104
104,105
105,106
105,107
105,108
105,109
106,107
108,109
110,111
112,113
114,115
115,116
115,117
115,118
115,119
116,117
118,119
120,121
122,123
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,43,45,46,50,52,56,58,63,66,68,70,73,75,76,80,82,83,86,89,91,92,95,99,101,102,103,107,109,111,113,117,119,121,123
-----computeFrom-----
23,24
23,25
54,55
54,56
64,65
64,66
71,72
71,73
72,73
72,74
-----guardedBy-----
56,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_31_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_31_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_31_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }
wchar_t * dataCopy = data;
wchar_t * dataCopy = data;
wchar_t
* dataCopy = data
*
dataCopy
= data
data
data
wchar_t * data = dataCopy;
wchar_t * data = dataCopy;
wchar_t
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
{            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);        }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
_wspawnv
_wspawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(5,47,0)
(31,12,0)
(27,37,0)
(12,30,0)
(22,6,0)
(24,6,0)
(51,12,0)
(32,41,0)
(51,39,0)
(37,1,0)
(30,22,0)
(29,8,0)
(9,3,0)
(34,26,0)
(47,28,0)
(8,33,0)
(40,33,0)
(39,51,0)
(15,28,0)
(45,13,0)
(42,39,0)
(19,1,0)
(6,1,0)
(12,13,0)
(44,8,0)
(26,41,0)
(0,1,0)
(48,27,0)
(39,41,0)
(25,17,0)
(36,46,0)
(46,22,0)
(2,51,0)
(39,47,0)
(28,47,0)
(52,26,0)
(7,51,0)
(47,39,0)
(3,41,0)
(22,1,0)
(4,28,0)
(41,3,0)
(14,8,0)
(23,6,0)
(30,12,0)
(50,27,0)
(10,37,0)
(18,22,0)
(33,37,0)
(46,37,0)
(8,17,0)
(41,13,0)
(28,12,0)
(51,22,0)
(20,37,0)
(39,35,0)
(38,13,0)
(21,13,0)
(49,30,0)
(17,33,0)
(13,1,0)
(11,22,0)
(27,46,0)
(16,46,0)
(14,44,1)
(22,11,1)
(42,51,1)
(31,22,1)
(26,52,1)
(3,9,1)
(28,12,1)
(36,26,1)
(29,14,1)
(46,16,1)
(52,34,1)
(8,17,1)
(51,7,1)
(17,25,1)
(9,32,1)
(39,51,1)
(16,36,1)
(8,29,1)
(28,4,1)
(7,2,1)
(2,26,1)
(25,27,1)
(6,23,1)
(51,12,1)
(43,8,1)
(34,41,1)
(36,39,1)
(15,5,1)
(46,22,1)
(47,28,1)
(18,6,1)
(22,6,1)
(39,41,1)
(11,18,1)
(26,41,1)
(5,42,1)
(49,31,1)
(48,50,1)
(4,15,1)
(39,47,1)
(32,12,1)
(51,22,1)
(41,3,1)
(27,46,1)
(27,48,1)
(50,46,1)
(30,22,1)
(44,17,1)
(12,30,1)
(30,49,1)
(23,24,1)
(51,22,2)
(39,26,2)
(51,12,2)
(26,41,2)
(47,26,2)
(28,26,2)
(27,46,2)
(15,26,2)
(39,51,2)
(4,26,2)
(46,22,2)
(2,26,2)
(42,26,2)
(22,6,2)
(51,26,2)
(12,30,2)
(39,41,2)
(28,12,2)
(5,26,2)
(8,17,2)
(41,3,2)
(39,47,2)
(47,28,2)
(30,22,2)
(7,26,2)
-----------------------------------
(0,data)
(1,)
(2,data)
(3,GETENV(ENV_VARIABLE)
(4,1)
(5,100)
(6,dataBuffer[100] = COMMAND_ARG2)
(7,dataLen)
(8,_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
(9,ENV_VARIABLE)
(10,dataCopy)
(11,dataBuffer)
(12,dataLen = wcslen(data)
(13,)
(14,COMMAND_INT_PATH)
(15,dataLen)
(16,data)
(17,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(18,data)
(19,dataBuffer)
(20,data)
(21,if (environment != NULL)
(22,data = dataBuffer)
(23,COMMAND_ARG2)
(24,dataBuffer)
(25,args)
(26,environment != NULL)
(27,* data = dataCopy)
(28,dataLen-1)
(29,args)
(30,wcslen(data)
(31,dataLen)
(32,environment)
(33,)
(34,environment)
(35,)
(36,dataCopy)
(37,)
(38,environment)
(39,wcsncat(data+dataLen, environment, 100-dataLen-1)
(40,args)
(41,* environment = GETENV(ENV_VARIABLE)
(42,environment)
(43,RET)
(44,_P_WAIT)
(45,dataLen)
(46,* dataCopy = data)
(47,100-dataLen-1)
(48,dataCopy)
(49,data)
(50,data)
(51,data+dataLen)
(52,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
