-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_execl_15_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    switch(6)
    {
    case 6:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    /* wexecl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
30,33
30,34
30,35
30,36
31,32
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
84,85
85,86
85,87
86,87
90,91
91,92
91,93
91,94
91,95
91,96
91,97
92,93
94,95
96,97
98,99
100,101
102,103
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,32,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,82,83,87,88,89,93,95,97,99,101,103
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_execl_15_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__wchar_t_environment_execl_15_bad()
CWE78_OS_Command_Injection__wchar_t_environment_execl_15_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(39,48,0)
(21,13,0)
(5,45,0)
(8,25,0)
(45,15,0)
(13,21,0)
(34,48,0)
(49,45,0)
(42,36,0)
(46,37,0)
(13,25,0)
(28,27,0)
(13,7,0)
(25,8,0)
(45,38,0)
(26,15,0)
(46,45,0)
(37,14,0)
(22,32,0)
(12,37,0)
(37,32,0)
(16,38,0)
(41,46,0)
(48,21,0)
(4,36,0)
(20,38,0)
(33,15,0)
(44,13,0)
(30,27,0)
(46,13,0)
(23,32,0)
(3,50,0)
(2,15,0)
(38,15,0)
(31,27,0)
(24,21,0)
(17,46,0)
(0,32,0)
(48,37,0)
(40,36,0)
(14,45,0)
(10,25,0)
(43,42,0)
(13,46,0)
(11,36,0)
(29,50,0)
(21,48,0)
(6,14,0)
(25,32,0)
(32,36,0)
(47,27,0)
(19,8,0)
(50,25,0)
(9,27,0)
(18,36,0)
(27,15,0)
(14,37,0)
(39,24,1)
(30,47,1)
(24,44,1)
(9,11,1)
(13,21,1)
(19,10,1)
(28,9,1)
(14,45,1)
(6,12,1)
(37,14,1)
(11,50,1)
(27,31,1)
(42,43,1)
(46,41,1)
(45,38,1)
(38,20,1)
(48,37,1)
(25,8,1)
(20,16,1)
(13,46,1)
(44,46,1)
(3,25,1)
(48,34,1)
(35,27,1)
(13,25,1)
(40,42,1)
(14,6,1)
(21,48,1)
(5,38,1)
(9,40,1)
(50,29,1)
(46,45,1)
(49,5,1)
(29,3,1)
(47,28,1)
(10,37,1)
(46,37,1)
(31,30,1)
(1,45,1)
(45,49,1)
(34,39,1)
(50,25,1)
(43,1,1)
(11,13,1)
(8,19,1)
(17,50,1)
(12,1,1)
(41,17,1)
(24,50,2)
(3,1,2)
(44,50,2)
(19,1,2)
(50,25,2)
(14,1,2)
(10,1,2)
(21,50,2)
(17,50,2)
(46,50,2)
(37,14,2)
(45,38,2)
(42,1,2)
(50,1,2)
(12,1,2)
(13,50,2)
(11,1,2)
(40,1,2)
(41,50,2)
(48,50,2)
(37,1,2)
(14,45,2)
(13,21,2)
(25,8,2)
(6,1,2)
(39,50,2)
(46,37,2)
(43,1,2)
(48,37,2)
(8,1,2)
(29,1,2)
(13,25,2)
(34,50,2)
(25,1,2)
(13,46,2)
(21,48,2)
(46,45,2)
-----------------------------------
(0,if (environment != NULL)
(1,6)
(2,switch(6)
(3,environment)
(4,case 6:)
(5,data)
(6,data)
(7,)
(8,GETENV(ENV_VARIABLE)
(9,COMMAND_INT_PATH)
(10,environment)
(11,break;)
(12,dataLen)
(13,wcsncat(data+dataLen, environment, 100-dataLen-1)
(14,wcslen(data)
(15,)
(16,dataBuffer)
(17,data)
(18,default:)
(19,ENV_VARIABLE)
(20,COMMAND_ARG2)
(21,100-dataLen-1)
(22,dataLen)
(23,environment)
(24,100)
(25,* environment = GETENV(ENV_VARIABLE)
(26,dataBuffer)
(27,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(28,COMMAND_INT_PATH)
(29,NULL)
(30,COMMAND_ARG3)
(31,NULL)
(32,)
(33,data)
(34,1)
(35,RET)
(36,)
(37,dataLen = wcslen(data)
(38,dataBuffer[100] = COMMAND_ARG2)
(39,dataLen)
(40,break;)
(41,dataLen)
(42,printLine("Benign, fixed string")
(43,"Benign, fixed string")
(44,environment)
(45,data = dataBuffer)
(46,data+dataLen)
(47,COMMAND_ARG1)
(48,dataLen-1)
(49,dataBuffer)
(50,environment != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
