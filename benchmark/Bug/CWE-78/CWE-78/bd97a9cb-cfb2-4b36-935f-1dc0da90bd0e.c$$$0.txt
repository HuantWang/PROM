-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_11_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnvp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnvp(_P_WAIT, COMMAND_INT, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
82,84
83,84
84,85
84,86
86,87
86,88
86,89
86,90
90,91
91,92
91,93
91,94
91,95
92,93
94,95
96,97
98,99
100,101
101,102
101,103
101,104
101,105
102,103
104,105
106,107
108,109
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,85,87,88,89,93,95,97,99,103,105,107,109
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_11_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_11_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_11_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnvp(_P_WAIT, COMMAND_INT, args);
_spawnvp(_P_WAIT, COMMAND_INT, args)
_spawnvp
_spawnvp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(30,24,0)
(31,20,0)
(20,35,0)
(2,20,0)
(16,20,0)
(37,20,0)
(1,41,0)
(15,35,0)
(18,24,0)
(13,46,0)
(42,43,0)
(19,18,0)
(29,42,0)
(7,33,0)
(41,4,0)
(4,12,0)
(24,46,0)
(46,26,0)
(44,46,0)
(5,37,0)
(16,12,0)
(24,33,0)
(42,28,0)
(14,45,0)
(41,18,0)
(11,38,0)
(4,41,0)
(18,6,0)
(22,42,0)
(0,46,0)
(40,38,0)
(37,12,0)
(43,45,0)
(34,45,0)
(8,28,0)
(33,24,0)
(28,43,0)
(20,45,0)
(32,12,0)
(12,16,0)
(27,42,0)
(21,43,0)
(35,45,0)
(17,35,0)
(18,37,0)
(38,24,0)
(18,41,0)
(12,46,0)
(3,4,0)
(37,18,0)
(9,16,0)
(39,4,0)
(36,45,0)
(23,37,0)
(38,24,1)
(30,12,1)
(35,15,1)
(16,9,1)
(39,1,1)
(11,24,1)
(37,20,1)
(1,19,1)
(4,12,1)
(12,16,1)
(18,24,1)
(20,35,1)
(8,18,1)
(7,30,1)
(9,32,1)
(37,5,1)
(37,12,1)
(38,40,1)
(41,4,1)
(19,37,1)
(25,20,1)
(23,38,1)
(42,22,1)
(22,27,1)
(8,25,1)
(42,28,1)
(18,41,1)
(15,17,1)
(4,3,1)
(16,20,1)
(8,38,1)
(5,23,1)
(24,33,1)
(31,35,1)
(28,8,1)
(10,42,1)
(27,29,1)
(40,11,1)
(20,2,1)
(18,37,1)
(3,39,1)
(32,25,1)
(29,28,1)
(2,31,1)
(33,7,1)
(24,33,2)
(40,25,2)
(39,38,2)
(38,24,2)
(23,38,2)
(18,41,2)
(4,38,2)
(32,25,2)
(38,25,2)
(24,25,2)
(18,24,2)
(16,20,2)
(11,25,2)
(7,25,2)
(1,38,2)
(37,38,2)
(42,28,2)
(16,25,2)
(3,38,2)
(41,4,2)
(30,25,2)
(12,25,2)
(9,25,2)
(33,25,2)
(37,12,2)
(5,38,2)
(20,35,2)
(4,12,2)
(19,38,2)
(41,38,2)
(37,20,2)
(12,16,2)
(18,37,2)
(18,38,2)
-----------------------------------
(0,environment)
(1,100)
(2,dataBuffer)
(3,1)
(4,dataLen-1)
(5,dataLen)
(6,)
(7,ENV_VARIABLE)
(8,args)
(9,data)
(10,RET)
(11,environment)
(12,dataLen = strlen(data)
(13,if (environment != NULL)
(14,data)
(15,COMMAND_ARG2)
(16,strlen(data)
(17,dataBuffer)
(18,strncat(data+dataLen, environment, 100-dataLen-1)
(19,environment)
(20,data = dataBuffer)
(21,args)
(22,args)
(23,data)
(24,* environment = GETENV(ENV_VARIABLE)
(25,globalReturnsTrue()
(26,)
(27,COMMAND_INT)
(28,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(29,_P_WAIT)
(30,environment)
(31,data)
(32,dataLen)
(33,GETENV(ENV_VARIABLE)
(34,dataBuffer)
(35,dataBuffer[100] = COMMAND_ARG2)
(36,if(globalReturnsTrue()
(37,data+dataLen)
(38,environment != NULL)
(39,dataLen)
(40,NULL)
(41,100-dataLen-1)
(42,_spawnvp(_P_WAIT, COMMAND_INT, args)
(43,)
(44,dataLen)
(45,)
(46,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
