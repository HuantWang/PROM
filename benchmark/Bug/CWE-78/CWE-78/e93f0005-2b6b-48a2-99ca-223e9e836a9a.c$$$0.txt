-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_01_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    {
        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* wexecvp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECVP(COMMAND_INT, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
61,64
61,65
62,63
64,65
64,66
65,66
67,68
69,70
71,72
71,73
72,73
72,74
74,75
77,78
77,79
78,79
79,80
79,81
81,82
81,83
81,84
81,85
85,86
86,87
86,88
86,89
86,90
87,88
89,90
91,92
93,94
95,96
96,97
96,98
96,99
97,98
99,100
101,102
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,43,45,46,50,52,56,58,63,66,68,70,73,75,76,80,82,83,84,88,90,92,94,98,100,102
-----computeFrom-----
23,24
23,25
54,55
54,56
64,65
64,66
71,72
71,73
72,73
72,74
-----guardedBy-----
56,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_01_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_01_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_01_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
EXECVP(COMMAND_INT, args);
EXECVP(COMMAND_INT, args)
EXECVP
EXECVP
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(11,37,0)
(29,11,0)
(19,24,0)
(17,24,0)
(32,4,0)
(15,40,0)
(14,27,0)
(25,19,0)
(41,2,0)
(33,22,0)
(19,27,0)
(36,12,0)
(1,10,0)
(22,2,0)
(21,18,0)
(40,4,0)
(0,18,0)
(7,32,0)
(12,10,0)
(27,2,0)
(40,35,0)
(28,24,0)
(20,32,0)
(27,22,0)
(28,27,0)
(18,10,0)
(31,37,0)
(38,11,0)
(40,11,0)
(16,6,0)
(5,29,0)
(26,27,0)
(23,4,0)
(34,28,0)
(24,6,0)
(24,19,0)
(39,29,0)
(4,32,0)
(30,2,0)
(11,6,0)
(28,40,0)
(8,6,0)
(40,28,0)
(3,22,0)
(37,11,0)
(6,2,0)
(10,2,0)
(4,40,0)
(18,12,0)
(13,6,0)
(9,28,0)
(32,24,0)
(24,19,1)
(29,39,1)
(37,31,1)
(36,40,1)
(17,27,1)
(42,18,1)
(28,27,1)
(25,17,1)
(11,37,1)
(28,24,1)
(20,23,1)
(0,21,1)
(7,20,1)
(19,27,1)
(14,22,1)
(5,11,1)
(22,33,1)
(19,25,1)
(15,28,1)
(28,9,1)
(18,12,1)
(4,32,1)
(36,29,1)
(32,7,1)
(18,0,1)
(31,38,1)
(40,4,1)
(26,14,1)
(40,11,1)
(27,22,1)
(40,28,1)
(27,26,1)
(12,36,1)
(21,12,1)
(33,3,1)
(32,24,1)
(34,29,1)
(38,24,1)
(39,5,1)
(9,34,1)
(23,15,1)
(29,11,1)
(9,29,2)
(11,37,2)
(4,32,2)
(24,19,2)
(7,29,2)
(4,29,2)
(40,29,2)
(15,29,2)
(40,4,2)
(28,27,2)
(32,24,2)
(20,29,2)
(40,11,2)
(28,24,2)
(27,22,2)
(29,11,2)
(18,12,2)
(28,29,2)
(19,27,2)
(40,28,2)
(34,29,2)
(32,29,2)
(23,29,2)
-----------------------------------
(0,args)
(1,args)
(2,)
(3,dataBuffer)
(4,100-dataLen-1)
(5,environment)
(6,)
(7,1)
(8,if (environment != NULL)
(9,dataLen)
(10,)
(11,* environment = GETENV(ENV_VARIABLE)
(12,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(13,dataLen)
(14,data)
(15,environment)
(16,environment)
(17,dataLen)
(18,EXECVP(COMMAND_INT, args)
(19,wcslen(data)
(20,dataLen)
(21,COMMAND_INT)
(22,dataBuffer[100] = COMMAND_ARG2)
(23,100)
(24,dataLen = wcslen(data)
(25,data)
(26,dataBuffer)
(27,data = dataBuffer)
(28,data+dataLen)
(29,environment != NULL)
(30,data)
(31,ENV_VARIABLE)
(32,dataLen-1)
(33,COMMAND_ARG2)
(34,data)
(35,)
(36,args)
(37,GETENV(ENV_VARIABLE)
(38,environment)
(39,NULL)
(40,wcsncat(data+dataLen, environment, 100-dataLen-1)
(41,dataBuffer)
(42,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
