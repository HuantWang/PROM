-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_popen_05_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(staticTrue)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
81,83
81,84
82,83
83,84
83,85
84,85
86,87
86,88
89,90
90,91
90,92
91,92
93,94
93,95
93,96
94,95
96,97
99,100
99,101
100,101
100,102
101,102
103,104
105,106
106,107
107,108
107,109
108,109
110,111
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,85,87,88,92,95,97,98,102,104,109,111
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
90,91
90,92
100,101
100,102
-----guardedBy-----
60,74
102,111
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_popen_05_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__char_environment_popen_05_bad()
CWE78_OS_Command_Injection__char_environment_popen_05_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticTrue
staticTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(47,9,0)
(9,26,0)
(9,13,0)
(52,1,0)
(13,25,0)
(46,27,0)
(9,40,0)
(22,11,0)
(13,9,0)
(3,51,0)
(41,51,0)
(16,22,0)
(1,25,0)
(33,37,0)
(35,0,0)
(6,42,0)
(14,11,0)
(32,25,0)
(7,44,0)
(1,49,0)
(30,27,0)
(28,22,0)
(7,51,0)
(5,44,0)
(8,2,0)
(27,7,0)
(18,13,0)
(36,2,0)
(45,13,0)
(26,37,0)
(49,1,0)
(2,23,0)
(39,23,0)
(25,23,0)
(19,37,0)
(9,11,0)
(22,49,0)
(51,7,0)
(38,44,0)
(29,23,0)
(25,2,0)
(49,37,0)
(48,23,0)
(24,26,0)
(10,37,0)
(50,49,0)
(37,31,0)
(11,9,0)
(13,49,0)
(26,24,0)
(42,26,0)
(20,24,0)
(51,25,0)
(35,7,0)
(12,26,0)
(44,23,0)
(34,7,0)
(43,35,0)
(4,25,0)
(17,42,0)
(11,22,0)
(12,49,1)
(51,25,1)
(43,27,1)
(49,1,1)
(41,34,1)
(51,3,1)
(34,42,1)
(4,2,1)
(46,7,1)
(25,2,1)
(11,22,1)
(34,9,1)
(42,26,1)
(13,45,1)
(17,26,1)
(27,7,1)
(52,50,1)
(30,46,1)
(22,49,1)
(34,15,1)
(9,11,1)
(21,35,1)
(24,20,1)
(15,25,1)
(13,49,1)
(27,30,1)
(14,47,1)
(16,28,1)
(32,4,1)
(20,12,1)
(9,13,1)
(45,18,1)
(26,24,1)
(50,15,1)
(28,14,1)
(6,17,1)
(1,25,1)
(3,41,1)
(2,8,1)
(22,16,1)
(42,6,1)
(18,42,1)
(47,13,1)
(35,7,1)
(9,26,1)
(8,36,1)
(21,27,1)
(13,25,1)
(35,43,1)
(25,32,1)
(7,51,1)
(1,52,1)
(45,42,2)
(49,1,2)
(7,51,2)
(42,26,2)
(11,42,2)
(18,42,2)
(28,42,2)
(13,42,2)
(20,15,2)
(26,15,2)
(9,13,2)
(9,42,2)
(9,26,2)
(52,15,2)
(22,42,2)
(1,25,2)
(35,27,2)
(26,24,2)
(42,15,2)
(22,49,2)
(13,25,2)
(47,42,2)
(6,15,2)
(51,25,2)
(49,15,2)
(17,15,2)
(16,42,2)
(13,49,2)
(9,11,2)
(43,27,2)
(14,42,2)
(25,2,2)
(11,22,2)
(50,15,2)
(35,7,2)
(24,15,2)
(1,15,2)
(12,15,2)
(27,7,2)
-----------------------------------
(0,)
(1,strlen(data)
(2,data_buf[100] = FULL_COMMAND)
(3,"w")
(4,data)
(5,pipe)
(6,NULL)
(7,pipe = POPEN(data, "w")
(8,FULL_COMMAND)
(9,strncat(data+dataLen, environment, 100-dataLen-1)
(10,if (environment != NULL)
(11,100-dataLen-1)
(12,environment)
(13,data+dataLen)
(14,100)
(15,staticTrue)
(16,1)
(17,environment)
(18,data)
(19,environment)
(20,ENV_VARIABLE)
(21,RET)
(22,dataLen-1)
(23,)
(24,GETENV(ENV_VARIABLE)
(25,data = data_buf)
(26,* environment = GETENV(ENV_VARIABLE)
(27,pipe != NULL)
(28,dataLen)
(29,if(staticTrue)
(30,NULL)
(31,)
(32,data_buf)
(33,dataLen)
(34,pipe)
(35,PCLOSE(pipe)
(36,data_buf)
(37,)
(38,if (pipe != NULL)
(39,data_buf)
(40,)
(41,data)
(42,environment != NULL)
(43,pipe)
(44,)
(45,dataLen)
(46,pipe)
(47,environment)
(48,data)
(49,dataLen = strlen(data)
(50,dataLen)
(51,POPEN(data, "w")
(52,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
