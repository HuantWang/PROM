-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execlp_12_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalReturnsTrueOrFalse())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    /* execlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
84,85
84,86
84,87
85,86
87,88
90,91
91,92
91,93
91,94
91,95
91,96
91,97
92,93
94,95
96,97
98,99
100,101
102,103
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,93,95,97,99,101,103
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execlp_12_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execlp_12_bad()
CWE78_OS_Command_Injection__char_environment_execlp_12_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(14,5,0)
(22,38,0)
(35,17,0)
(43,2,0)
(17,7,0)
(11,46,0)
(7,43,0)
(22,47,0)
(36,30,0)
(23,30,0)
(9,21,0)
(45,7,0)
(26,5,0)
(39,7,0)
(18,4,0)
(35,21,0)
(5,21,0)
(47,22,0)
(44,30,0)
(34,30,0)
(29,22,0)
(38,45,0)
(47,35,0)
(42,45,0)
(25,46,0)
(15,45,0)
(7,2,0)
(41,30,0)
(12,2,0)
(27,38,0)
(38,16,0)
(46,7,0)
(20,47,0)
(32,35,0)
(3,21,0)
(21,10,0)
(48,14,0)
(0,17,0)
(1,43,0)
(38,5,0)
(13,47,0)
(45,35,0)
(33,4,0)
(30,2,0)
(31,43,0)
(40,21,0)
(24,2,0)
(17,35,0)
(5,14,0)
(4,5,0)
(45,38,0)
(46,28,0)
(6,7,0)
(19,2,0)
(38,22,0)
(46,11,1)
(7,43,1)
(46,7,1)
(7,39,1)
(38,22,1)
(39,6,1)
(5,14,1)
(22,47,1)
(45,7,1)
(17,7,1)
(11,25,1)
(38,5,1)
(1,31,1)
(4,18,1)
(6,43,1)
(47,20,1)
(45,42,1)
(41,38,1)
(43,1,1)
(17,0,1)
(18,33,1)
(33,5,1)
(36,41,1)
(30,23,1)
(20,13,1)
(8,7,1)
(42,15,1)
(47,35,1)
(45,35,1)
(0,32,1)
(37,30,1)
(13,29,1)
(27,45,1)
(14,48,1)
(23,44,1)
(25,8,1)
(38,45,1)
(35,17,1)
(32,8,1)
(41,46,1)
(41,4,1)
(29,27,1)
(34,36,1)
(44,34,1)
(4,5,1)
(48,26,1)
(26,35,1)
(15,4,1)
(32,8,2)
(45,35,2)
(27,4,2)
(15,4,2)
(47,4,2)
(38,22,2)
(17,7,2)
(13,4,2)
(0,8,2)
(46,8,2)
(7,43,2)
(48,8,2)
(38,5,2)
(35,8,2)
(22,47,2)
(17,8,2)
(45,7,2)
(4,8,2)
(25,8,2)
(18,8,2)
(22,4,2)
(5,8,2)
(33,8,2)
(38,45,2)
(11,8,2)
(45,4,2)
(26,8,2)
(42,4,2)
(20,4,2)
(4,5,2)
(14,8,2)
(29,4,2)
(38,4,2)
(35,17,2)
(46,7,2)
(5,14,2)
(47,35,2)
-----------------------------------
(0,data)
(1,COMMAND_ARG2)
(2,)
(3,if (environment != NULL)
(4,environment != NULL)
(5,* environment = GETENV(ENV_VARIABLE)
(6,data)
(7,data = dataBuffer)
(8,globalReturnsTrueOrFalse()
(9,environment)
(10,)
(11,"*.*")
(12,dataBuffer)
(13,dataLen)
(14,GETENV(ENV_VARIABLE)
(15,data)
(16,)
(17,strlen(data)
(18,NULL)
(19,data)
(20,1)
(21,)
(22,100-dataLen-1)
(23,NULL)
(24,if(globalReturnsTrueOrFalse()
(25,data)
(26,environment)
(27,environment)
(28,)
(29,100)
(30,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(31,dataBuffer)
(32,dataLen)
(33,environment)
(34,COMMAND_ARG1)
(35,dataLen = strlen(data)
(36,COMMAND_INT)
(37,RET)
(38,strncat(data+dataLen, environment, 100-dataLen-1)
(39,dataBuffer)
(40,dataLen)
(41,COMMAND_INT)
(42,dataLen)
(43,dataBuffer[100] = COMMAND_ARG2)
(44,COMMAND_ARG3)
(45,data+dataLen)
(46,strcat(data, "*.*")
(47,dataLen-1)
(48,ENV_VARIABLE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
