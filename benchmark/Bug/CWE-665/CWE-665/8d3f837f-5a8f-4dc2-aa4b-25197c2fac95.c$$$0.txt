-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_14_bad()
{
    double * data;
    data = (double *)ALLOCA(10*sizeof(double));
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i] = (double)i;
            }
        }
    }
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
35,36
36,37
36,38
37,38
38,39
38,40
40,41
42,43
42,44
42,45
42,46
43,44
44,45
44,46
45,46
48,49
48,50
49,50
51,52
52,53
52,54
55,56
56,57
58,59
59,60
60,61
60,62
61,62
61,63
62,63
64,65
66,67
66,68
67,68
67,69
70,71
72,73
72,74
73,74
73,75
74,75
77,78
78,79
78,80
79,80
80,81
80,82
82,83
84,85
84,86
84,87
84,88
85,86
86,87
86,88
87,88
90,91
90,92
91,92
94,95
95,96
97,98
98,99
99,100
99,101
100,101
102,103
102,104
103,104
105,106
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,34,39,41,46,47,50,53,54,57,63,65,68,69,71,75,76,81,83,88,89,92,93,96,101,104,106
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
48,49
48,50
52,53
52,54
60,61
60,62
73,74
73,75
86,87
86,88
90,91
90,92
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_14_bad(){    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(globalFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_14_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_14_bad
{    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(globalFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
data = (double *)ALLOCA(10*sizeof(double));
data = (double *)ALLOCA(10*sizeof(double))
data
data
(double *)ALLOCA(10*sizeof(double))
double *
double
*
*
ALLOCA(10*sizeof(double))
ALLOCA
ALLOCA
10*sizeof(double)
10
sizeof(double)
double
double

if(globalFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i] = (double)i;            }
data[i] = (double)i;
data[i] = (double)i
data[i]
data
data
i
i
(double)i
double
double

i
i
if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(5,3,0)
(4,11,0)
(12,55,0)
(37,55,0)
(46,29,0)
(41,11,0)
(36,28,0)
(31,17,0)
(0,43,0)
(0,1,0)
(14,23,0)
(43,8,0)
(29,40,0)
(22,0,0)
(55,28,0)
(56,58,0)
(21,45,0)
(38,13,0)
(55,58,0)
(34,28,0)
(18,56,0)
(54,0,0)
(33,30,0)
(20,14,0)
(53,47,0)
(23,14,0)
(1,52,0)
(26,27,0)
(9,30,0)
(10,50,0)
(15,29,0)
(48,36,0)
(19,45,0)
(45,25,0)
(2,30,0)
(43,0,0)
(14,28,0)
(0,3,0)
(17,31,0)
(47,26,0)
(56,18,0)
(42,7,0)
(0,58,0)
(58,56,0)
(39,3,0)
(51,26,0)
(7,3,0)
(16,31,0)
(58,30,0)
(50,3,0)
(31,28,0)
(26,47,0)
(49,7,0)
(31,1,0)
(27,26,0)
(56,27,0)
(32,28,0)
(55,1,0)
(44,23,0)
(57,23,0)
(35,58,0)
(27,56,0)
(1,31,0)
(6,13,0)
(0,54,1)
(31,28,1)
(49,50,1)
(13,38,1)
(1,31,1)
(22,7,1)
(58,56,1)
(55,58,1)
(56,18,1)
(20,36,1)
(3,5,1)
(36,48,1)
(50,10,1)
(36,28,1)
(28,34,1)
(7,42,1)
(49,3,1)
(0,3,1)
(56,27,1)
(14,28,1)
(41,4,1)
(10,43,1)
(55,28,1)
(39,13,1)
(6,14,1)
(24,7,1)
(34,32,1)
(48,1,1)
(5,39,1)
(53,51,1)
(16,55,1)
(43,0,1)
(0,1,1)
(38,6,1)
(47,53,1)
(55,12,1)
(31,17,1)
(20,28,1)
(11,41,1)
(27,26,1)
(31,16,1)
(42,49,1)
(26,47,1)
(32,11,1)
(23,57,1)
(57,44,1)
(12,37,1)
(14,23,1)
(54,22,1)
(0,58,1)
(24,13,1)
(6,11,1)
(37,14,1)
(4,58,1)
(44,20,1)
(51,35,1)
(7,3,1)
(50,3,1)
(23,11,2)
(39,13,2)
(44,14,2)
(1,31,2)
(7,3,2)
(31,28,2)
(37,14,2)
(49,13,2)
(50,7,2)
(0,58,2)
(43,0,2)
(1,14,2)
(42,13,2)
(54,7,2)
(26,47,2)
(31,17,2)
(0,1,2)
(55,14,2)
(28,11,2)
(36,14,2)
(20,14,2)
(23,14,2)
(44,11,2)
(3,13,2)
(14,28,2)
(7,7,2)
(55,28,2)
(14,11,2)
(0,3,2)
(50,3,2)
(57,14,2)
(12,14,2)
(43,7,2)
(56,27,2)
(10,7,2)
(31,14,2)
(55,58,2)
(27,26,2)
(49,7,2)
(48,14,2)
(14,23,2)
(34,11,2)
(20,11,2)
(7,13,2)
(16,14,2)
(5,13,2)
(32,11,2)
(22,7,2)
(42,7,2)
(36,28,2)
(0,7,2)
(58,56,2)
(14,14,2)
(57,11,2)
(56,18,2)
-----------------------------------
(0,data[i])
(1,data[i] = (double)
(2,if(globalFive==5)
(3,i=0)
(4,globalFive)
(5,0)
(6,globalFive)
(7,i<10)
(8,)
(9,data)
(10,i)
(11,globalFive==5)
(12,i)
(13,globalFive==5)
(14,i<(10/2)
(15,i)
(16,i)
(17,double)
(18,double *)
(19,for(i=0; i<10; i++)
(20,i)
(21,i)
(22,data)
(23,10/2)
(24,RET)
(25,)
(26,10*sizeof(double)
(27,ALLOCA(10*sizeof(double)
(28,i=0)
(29,)
(30,)
(31,(double)
(32,i)
(33,if(globalFive==5)
(34,0)
(35,data)
(36,i++)
(37,data)
(38,5)
(39,i)
(40,)
(41,5)
(42,10)
(43,printDoubleLine(data[i])
(44,10)
(45,)
(46,for(i=0; i<(10/2)
(47,sizeof(double)
(48,i)
(49,i)
(50,i++)
(51,10)
(52,)
(53,double)
(54,i)
(55,data[i])
(56,(double *)
(57,2)
(58,data = (double *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^