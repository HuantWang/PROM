-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_04_bad()
{
    int * data;
    data = (int *)ALLOCA(10*sizeof(int));
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i] = i;
            }
        }
    }
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
33,34
34,35
34,36
35,36
36,37
36,38
38,39
40,41
40,42
40,43
40,44
41,42
42,43
42,44
43,44
46,47
46,48
47,48
49,50
50,51
50,52
53,54
54,55
56,57
57,58
58,59
58,60
59,60
59,61
60,61
62,63
64,65
66,67
66,68
67,68
69,70
70,71
70,72
71,72
72,73
72,74
74,75
76,77
76,78
76,79
76,80
77,78
78,79
78,80
79,80
82,83
82,84
83,84
86,87
87,88
89,90
90,91
91,92
91,93
92,93
94,95
94,96
95,96
97,98
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,32,37,39,44,45,48,51,52,55,61,63,65,68,73,75,80,81,84,85,88,93,96,98
-----computeFrom-----
13,14
13,15
24,25
24,26
42,43
42,44
46,47
46,48
50,51
50,52
58,59
58,60
78,79
78,80
82,83
82,84
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_04_bad(){    int * data;    data = (int *)ALLOCA(10*sizeof(int));    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_04_bad()
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_04_bad
{    int * data;    data = (int *)ALLOCA(10*sizeof(int));    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
int * data;
int * data;
int
* data
*
data
data = (int *)ALLOCA(10*sizeof(int));
data = (int *)ALLOCA(10*sizeof(int))
data
data
(int *)ALLOCA(10*sizeof(int))
int *
int
*
*
ALLOCA(10*sizeof(int))
ALLOCA
ALLOCA
10*sizeof(int)
10
sizeof(int)
int
int

if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i] = i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i] = i;            }
data[i] = i;
data[i] = i
data[i]
data
data
i
i
i
i
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i]);            }
printIntLine(data[i]);
printIntLine(data[i])
printIntLine
printIntLine
data[i]
data
data
i
i
-----joern-----
(9,47,0)
(1,24,0)
(5,17,0)
(48,3,0)
(46,12,0)
(32,27,0)
(15,27,0)
(3,5,0)
(28,27,0)
(14,41,0)
(20,47,0)
(21,12,0)
(10,40,0)
(52,25,0)
(22,41,0)
(23,40,0)
(17,33,0)
(33,17,0)
(5,27,0)
(11,50,0)
(18,21,0)
(29,49,0)
(4,49,0)
(12,21,0)
(3,49,0)
(3,11,0)
(3,52,0)
(11,3,0)
(42,49,0)
(6,30,0)
(13,52,0)
(33,10,0)
(17,0,0)
(44,10,0)
(24,45,0)
(43,49,0)
(26,30,0)
(37,30,0)
(31,5,0)
(39,43,0)
(10,33,0)
(47,30,0)
(34,4,0)
(47,52,0)
(40,10,0)
(47,5,0)
(17,5,0)
(16,3,0)
(51,12,0)
(21,30,0)
(41,2,0)
(52,30,0)
(38,43,0)
(8,24,0)
(0,17,0)
(35,6,0)
(47,30,1)
(47,20,1)
(19,5,1)
(34,11,1)
(48,43,1)
(30,26,1)
(40,23,1)
(47,5,1)
(3,49,1)
(43,39,1)
(9,21,1)
(29,42,1)
(4,34,1)
(3,52,1)
(37,19,1)
(11,3,1)
(5,17,1)
(49,29,1)
(18,30,1)
(26,37,1)
(12,46,1)
(13,47,1)
(6,35,1)
(10,40,1)
(3,5,1)
(39,38,1)
(44,31,1)
(36,19,1)
(35,52,1)
(4,49,1)
(7,43,1)
(38,4,1)
(51,18,1)
(21,30,1)
(17,33,1)
(21,12,1)
(52,13,1)
(33,10,1)
(38,49,1)
(20,9,1)
(6,30,1)
(42,36,1)
(17,0,1)
(16,48,1)
(3,16,1)
(52,30,1)
(43,49,1)
(23,44,1)
(18,6,1)
(7,36,1)
(46,51,1)
(36,21,1)
(37,19,2)
(6,21,2)
(4,49,2)
(38,36,2)
(17,33,2)
(34,43,2)
(21,19,2)
(13,21,2)
(20,21,2)
(10,40,2)
(3,52,2)
(42,36,2)
(43,43,2)
(39,43,2)
(35,21,2)
(17,0,2)
(49,36,2)
(9,21,2)
(33,10,2)
(5,17,2)
(21,21,2)
(46,21,2)
(18,21,2)
(52,30,2)
(43,49,2)
(47,5,2)
(11,43,2)
(12,21,2)
(47,30,2)
(43,36,2)
(4,43,2)
(48,43,2)
(3,49,2)
(21,30,2)
(3,43,2)
(46,19,2)
(30,19,2)
(39,36,2)
(51,21,2)
(52,21,2)
(6,30,2)
(11,3,2)
(38,43,2)
(51,19,2)
(18,19,2)
(16,43,2)
(29,36,2)
(21,12,2)
(26,19,2)
(3,5,2)
(47,21,2)
(12,19,2)
-----------------------------------
(0,int *)
(1,i)
(2,)
(3,data[i])
(4,i++)
(5,data = (int *)
(6,i++)
(7,RET)
(8,for(i=0; i<(10/2)
(9,data)
(10,10*sizeof(int)
(11,printIntLine(data[i])
(12,10/2)
(13,i)
(14,i)
(15,data)
(16,i)
(17,(int *)
(18,i)
(19,STATIC_CONST_TRUE)
(20,i)
(21,i<(10/2)
(22,for(i=0; i<10; i++)
(23,int)
(24,)
(25,)
(26,0)
(27,)
(28,if(STATIC_CONST_TRUE)
(29,0)
(30,i=0)
(31,data)
(32,if(STATIC_CONST_TRUE)
(33,ALLOCA(10*sizeof(int)
(34,i)
(35,i)
(36,STATIC_CONST_TRUE)
(37,i)
(38,i)
(39,10)
(40,sizeof(int)
(41,)
(42,i)
(43,i<10)
(44,10)
(45,)
(46,2)
(47,data[i])
(48,data)
(49,i=0)
(50,)
(51,10)
(52,data[i] = i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^