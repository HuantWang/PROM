-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_13_bad()
{
    int * data;
    data = (int *)ALLOCA(10*sizeof(int));
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i] = i;
            }
        }
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
35,36
36,37
36,38
37,38
38,39
38,40
40,41
42,43
42,44
42,45
42,46
43,44
44,45
44,46
45,46
48,49
48,50
49,50
51,52
52,53
52,54
55,56
56,57
58,59
59,60
60,61
60,62
61,62
61,63
62,63
64,65
66,67
68,69
68,70
69,70
69,71
70,71
73,74
74,75
74,76
75,76
76,77
76,78
78,79
80,81
80,82
80,83
80,84
81,82
82,83
82,84
83,84
86,87
86,88
87,88
90,91
91,92
93,94
94,95
95,96
95,97
96,97
98,99
98,100
99,100
101,102
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,34,39,41,46,47,50,53,54,57,63,65,67,71,72,77,79,84,85,88,89,92,97,100,102
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
48,49
48,50
52,53
52,54
60,61
60,62
69,70
69,71
82,83
82,84
86,87
86,88
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_13_bad(){    int * data;    data = (int *)ALLOCA(10*sizeof(int));    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_13_bad()
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_13_bad
{    int * data;    data = (int *)ALLOCA(10*sizeof(int));    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
int * data;
int * data;
int
* data
*
data
data = (int *)ALLOCA(10*sizeof(int));
data = (int *)ALLOCA(10*sizeof(int))
data
data
(int *)ALLOCA(10*sizeof(int))
int *
int
*
*
ALLOCA(10*sizeof(int))
ALLOCA
ALLOCA
10*sizeof(int)
10
sizeof(int)
int
int

if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i] = i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i] = i;            }
data[i] = i;
data[i] = i
data[i]
data
data
i
i
i
i
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i]);            }
printIntLine(data[i]);
printIntLine(data[i])
printIntLine
printIntLine
data[i]
data
data
i
i
-----joern-----
(34,54,0)
(41,6,0)
(42,14,0)
(27,52,0)
(2,54,0)
(22,24,0)
(26,47,0)
(12,0,0)
(56,54,0)
(39,20,0)
(17,18,0)
(32,1,0)
(46,19,0)
(11,5,0)
(1,32,0)
(48,54,0)
(25,32,0)
(23,47,0)
(38,33,0)
(28,22,0)
(33,51,0)
(34,47,0)
(31,40,0)
(32,24,0)
(33,50,0)
(19,34,0)
(1,45,0)
(13,32,0)
(15,18,0)
(5,6,0)
(29,40,0)
(18,23,0)
(47,34,0)
(47,23,0)
(21,39,0)
(19,33,0)
(6,50,0)
(18,15,0)
(8,16,0)
(19,50,0)
(30,34,0)
(40,4,0)
(16,24,0)
(23,18,0)
(37,0,0)
(55,39,0)
(32,33,0)
(3,52,0)
(53,50,0)
(32,34,0)
(36,50,0)
(10,19,0)
(49,16,0)
(47,26,0)
(9,5,0)
(43,24,0)
(14,50,0)
(44,15,0)
(6,5,0)
(35,24,0)
(41,50,1)
(24,43,1)
(32,34,1)
(32,24,1)
(18,15,1)
(53,36,1)
(22,28,1)
(28,1,1)
(11,9,1)
(1,32,1)
(33,38,1)
(50,53,1)
(6,5,1)
(35,52,1)
(44,17,1)
(8,24,1)
(36,0,1)
(19,34,1)
(17,30,1)
(41,14,1)
(16,24,1)
(46,6,1)
(37,12,1)
(32,25,1)
(12,34,1)
(47,26,1)
(3,0,1)
(23,18,1)
(27,3,1)
(32,33,1)
(0,37,1)
(43,35,1)
(38,19,1)
(3,6,1)
(19,10,1)
(14,42,1)
(47,23,1)
(16,49,1)
(49,8,1)
(6,50,1)
(19,50,1)
(5,11,1)
(14,50,1)
(9,41,1)
(10,46,1)
(7,52,1)
(33,50,1)
(15,44,1)
(7,16,1)
(25,13,1)
(52,27,1)
(34,47,1)
(42,33,1)
(22,24,1)
(13,16,1)
(8,22,1)
(16,52,2)
(32,16,2)
(33,50,2)
(50,0,2)
(11,0,2)
(24,52,2)
(46,6,2)
(19,6,2)
(47,23,2)
(49,16,2)
(22,16,2)
(47,26,2)
(32,24,2)
(9,0,2)
(34,47,2)
(33,6,2)
(14,50,2)
(19,50,2)
(38,6,2)
(41,0,2)
(16,16,2)
(5,0,2)
(8,52,2)
(8,16,2)
(35,52,2)
(10,6,2)
(6,0,2)
(23,18,2)
(6,6,2)
(28,16,2)
(36,0,2)
(13,16,2)
(41,6,2)
(1,16,2)
(32,33,2)
(19,34,2)
(32,34,2)
(6,50,2)
(49,52,2)
(1,32,2)
(14,6,2)
(42,6,2)
(25,16,2)
(11,6,2)
(16,24,2)
(53,0,2)
(5,6,2)
(6,5,2)
(43,52,2)
(22,24,2)
(9,6,2)
(18,15,2)
-----------------------------------
(0,GLOBAL_CONST_FIVE==5)
(1,printIntLine(data[i])
(2,if(GLOBAL_CONST_FIVE==5)
(3,GLOBAL_CONST_FIVE)
(4,)
(5,10/2)
(6,i<(10/2)
(7,RET)
(8,i)
(9,10)
(10,i)
(11,2)
(12,GLOBAL_CONST_FIVE)
(13,data)
(14,i++)
(15,sizeof(int)
(16,i<10)
(17,10)
(18,10*sizeof(int)
(19,data[i])
(20,)
(21,i)
(22,i++)
(23,ALLOCA(10*sizeof(int)
(24,i=0)
(25,i)
(26,int *)
(27,5)
(28,i)
(29,for(i=0; i<(10/2)
(30,data)
(31,i)
(32,data[i])
(33,data[i] = i)
(34,data = (int *)
(35,i)
(36,i)
(37,5)
(38,i)
(39,)
(40,)
(41,i)
(42,i)
(43,0)
(44,int)
(45,)
(46,data)
(47,(int *)
(48,if(GLOBAL_CONST_FIVE==5)
(49,10)
(50,i=0)
(51,)
(52,GLOBAL_CONST_FIVE==5)
(53,0)
(54,)
(55,for(i=0; i<10; i++)
(56,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^