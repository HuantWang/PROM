-----label-----
1
-----code-----
void CWE665_Improper_Initialization__char_ncat_10_bad()
{
    char * data;
    char dataBuffer[100];
    data = dataBuffer;
    if(globalTrue)
    {
        /* FLAW: Do not initialize data */
        ; /* empty statement needed for some flow variants */
    }
    {
        size_t sourceLen;
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        sourceLen = strlen(source);
        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */
        strncat(data, source, sourceLen);
        printLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
28,29
30,31
30,32
30,33
30,34
30,35
30,36
30,37
31,32
32,33
32,34
33,34
35,36
37,38
38,39
38,40
40,41
40,42
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
64,65
64,66
65,66
67,68
67,69
68,69
70,71
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
86,87
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,27,29,34,36,39,41,43,47,49,50,52,53,58,60,61,62,66,69,71,75,77,79,81,85,87
-----computeFrom-----
20,21
20,22
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;NullStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__char_ncat_10_bad(){    char * data;    char dataBuffer[100];    data = dataBuffer;    if(globalTrue)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }}
void
CWE665_Improper_Initialization__char_ncat_10_bad()
CWE665_Improper_Initialization__char_ncat_10_bad
{    char * data;    char dataBuffer[100];    data = dataBuffer;    if(globalTrue)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100];
char dataBuffer[100];
char
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalTrue)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
globalTrue
globalTrue
{        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
;
{        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
sourceLen = strlen(source);
sourceLen = strlen(source)
sourceLen
sourceLen
strlen(source)
strlen
strlen
source
source
strncat(data, source, sourceLen);
strncat(data, source, sourceLen)
strncat
strncat
data
data
source
source
sourceLen
sourceLen
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(20,31,0)
(13,33,0)
(15,20,0)
(14,13,0)
(15,33,0)
(25,3,0)
(12,22,0)
(22,12,0)
(11,15,0)
(20,33,0)
(0,28,0)
(32,20,0)
(2,28,0)
(19,7,0)
(23,22,0)
(8,33,0)
(31,20,0)
(33,3,0)
(5,3,0)
(6,12,0)
(18,3,0)
(9,1,0)
(10,33,0)
(29,7,0)
(15,28,0)
(0,33,0)
(4,28,0)
(30,15,0)
(7,1,0)
(24,1,0)
(22,13,0)
(1,33,0)
(1,7,0)
(34,15,0)
(17,0,0)
(28,3,0)
(27,12,0)
(16,31,0)
(15,30,1)
(9,24,1)
(34,20,1)
(31,16,1)
(14,22,1)
(27,23,1)
(16,32,1)
(7,19,1)
(15,20,1)
(12,6,1)
(19,29,1)
(0,28,1)
(29,9,1)
(20,31,1)
(15,28,1)
(0,17,1)
(21,0,1)
(13,14,1)
(26,28,1)
(23,1,1)
(32,13,1)
(2,4,1)
(11,34,1)
(1,7,1)
(22,12,1)
(28,2,1)
(30,11,1)
(24,26,1)
(6,27,1)
(17,15,1)
(22,12,2)
(15,20,2)
(1,7,2)
(15,28,2)
(20,31,2)
(0,28,2)
-----------------------------------
(0,printLine(data)
(1,memset(source, 'C', 100-1)
(2,dataBuffer)
(3,)
(4,data)
(5,data)
(6,1)
(7,100-1)
(8,sourceLen)
(9,'C')
(10,source)
(11,source)
(12,100-1)
(13,source[100-1] = '\\0')
(14,'\\0')
(15,strncat(data, source, sourceLen)
(16,source)
(17,data)
(18,dataBuffer)
(19,1)
(20,sourceLen = strlen(source)
(21,RET)
(22,source[100-1])
(23,source)
(24,source)
(25,if(globalTrue)
(26,globalTrue)
(27,100)
(28,data = dataBuffer)
(29,100)
(30,sourceLen)
(31,strlen(source)
(32,sourceLen)
(33,)
(34,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^