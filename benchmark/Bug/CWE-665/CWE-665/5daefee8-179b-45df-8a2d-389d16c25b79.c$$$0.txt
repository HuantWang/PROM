-----label-----
1
-----code-----
void CWE665_Improper_Initialization__wchar_t_ncat_03_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100];
    data = dataBuffer;
    if(5==5)
    {
        /* FLAW: Do not initialize data */
        ; /* empty statement needed for some flow variants */
    }
    {
        size_t sourceLen;
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        sourceLen = wcslen(source);
        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */
        wcsncat(data, source, sourceLen);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
26,28
29,30
31,32
31,33
31,34
31,35
31,36
31,37
31,38
32,33
33,34
33,35
34,35
36,37
38,39
39,40
39,41
41,42
41,43
43,44
45,46
46,47
46,48
46,49
46,50
47,48
49,50
52,53
52,54
55,56
56,57
56,58
57,58
57,59
58,59
60,61
60,62
64,65
65,66
65,67
66,67
68,69
68,70
69,70
71,72
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
87,88
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,27,28,30,35,37,40,42,44,48,50,51,53,54,59,61,62,63,67,70,72,76,78,80,82,86,88
-----computeFrom-----
20,21
20,22
26,27
26,28
52,53
52,54
56,57
56,58
60,61
60,62
65,66
65,67
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;NullStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__wchar_t_ncat_03_bad(){    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    if(5==5)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }}
void
CWE665_Improper_Initialization__wchar_t_ncat_03_bad()
CWE665_Improper_Initialization__wchar_t_ncat_03_bad
{    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    if(5==5)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100];
wchar_t dataBuffer[100];
wchar_t
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(5==5)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
5==5
5
5
{        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
;
{        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
sourceLen = wcslen(source);
sourceLen = wcslen(source)
sourceLen
sourceLen
wcslen(source)
wcslen
wcslen
source
source
wcsncat(data, source, sourceLen);
wcsncat(data, source, sourceLen)
wcsncat
wcsncat
data
data
source
source
sourceLen
sourceLen
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(7,6,0)
(13,21,0)
(8,17,0)
(3,7,0)
(10,19,0)
(23,7,0)
(16,20,0)
(4,11,0)
(2,11,0)
(7,19,0)
(1,11,0)
(7,2,0)
(20,6,0)
(15,11,0)
(12,17,0)
(5,6,0)
(9,2,0)
(0,2,0)
(6,2,0)
(21,2,0)
(22,2,0)
(6,20,0)
(14,19,0)
(21,19,0)
(19,11,0)
(18,7,0)
(20,16,1)
(23,3,1)
(18,23,1)
(10,14,1)
(5,0,1)
(7,18,1)
(17,8,1)
(0,17,1)
(6,20,1)
(7,19,1)
(21,19,1)
(12,19,1)
(16,5,1)
(3,6,1)
(19,10,1)
(21,13,1)
(13,7,1)
(24,21,1)
(7,6,1)
(8,12,1)
(6,20,2)
(7,6,2)
(7,19,2)
(21,19,2)
-----------------------------------
(0,'\\0')
(1,if(5==5)
(2,)
(3,data)
(4,data)
(5,sourceLen)
(6,sourceLen = wcslen(source)
(7,wcsncat(data, source, sourceLen)
(8,5)
(9,sourceLen)
(10,dataBuffer)
(11,)
(12,5)
(13,data)
(14,data)
(15,dataBuffer)
(16,source)
(17,5==5)
(18,sourceLen)
(19,data = dataBuffer)
(20,wcslen(source)
(21,printWLine(data)
(22,source)
(23,source)
(24,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^