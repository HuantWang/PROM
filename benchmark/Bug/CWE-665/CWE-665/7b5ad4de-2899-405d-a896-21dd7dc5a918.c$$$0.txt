-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_01_bad()
{
    double * data;
    double dataUninitArray[10];
    data = dataUninitArray;
    /* POTENTIAL FLAW: Don't initialize data */
    ; /* empty statement needed for some flow variants */
    /* POTENTIAL FLAW: Use data without initializing it */
    {
        int i;
        for(i=0; i<10; i++)
        {
            printDoubleLine(data[i]);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
26,27
26,28
27,28
28,29
28,30
30,31
32,33
32,34
32,35
32,36
33,34
34,35
34,36
35,36
38,39
38,40
39,40
42,43
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,25,29,31,36,37,40,41,44,49,52,54
-----computeFrom-----
20,21
20,22
34,35
34,36
38,39
38,40
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;NullStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_01_bad(){    double * data;    double dataUninitArray[10];    data = dataUninitArray;    /* POTENTIAL FLAW: Don't initialize data */    ; /* empty statement needed for some flow variants */    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_01_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_01_bad
{    double * data;    double dataUninitArray[10];    data = dataUninitArray;    /* POTENTIAL FLAW: Don't initialize data */    ; /* empty statement needed for some flow variants */    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }}
double * data;
double * data;
double
* data
*
data
double dataUninitArray[10];
double dataUninitArray[10];
double
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
;
{        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }
int i;
int i;
int
i
i
for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{            printDoubleLine(data[i]);        }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(6,4,0)
(20,13,0)
(14,13,0)
(15,6,0)
(3,7,0)
(18,14,0)
(2,4,0)
(17,13,0)
(0,10,0)
(11,4,0)
(14,0,0)
(21,7,0)
(14,11,0)
(8,13,0)
(9,4,0)
(12,14,0)
(16,11,0)
(1,11,0)
(0,14,0)
(22,6,0)
(19,17,0)
(7,13,0)
(11,1,1)
(7,3,1)
(8,11,1)
(19,0,1)
(20,8,1)
(21,13,1)
(13,20,1)
(1,16,1)
(3,21,1)
(5,7,1)
(14,11,1)
(12,7,1)
(0,14,1)
(21,17,1)
(17,19,1)
(18,12,1)
(14,18,1)
(7,13,1)
(17,13,1)
(14,13,1)
(0,14,2)
(14,13,2)
(14,7,2)
(19,7,2)
(21,7,2)
(7,13,2)
(7,7,2)
(0,7,2)
(17,7,2)
(17,13,2)
(3,7,2)
(14,11,2)
(12,7,2)
(18,7,2)
-----------------------------------
(0,printDoubleLine(data[i])
(1,dataUninitArray)
(2,dataUninitArray)
(3,10)
(4,)
(5,RET)
(6,)
(7,i<10)
(8,i)
(9,data)
(10,)
(11,data = dataUninitArray)
(12,data)
(13,i=0)
(14,data[i])
(15,i)
(16,data)
(17,i++)
(18,i)
(19,i)
(20,0)
(21,i)
(22,for(i=0; i<10; i++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^