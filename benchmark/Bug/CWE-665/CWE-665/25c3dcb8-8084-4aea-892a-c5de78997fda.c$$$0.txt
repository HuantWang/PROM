-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_17_bad()
{
    int i,j;
    int * data;
    data = (int *)ALLOCA(10*sizeof(int));
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i] = i;
            }
        }
    }
    for(j = 0; j < 1; j++)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
16,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
26,27
28,29
28,30
29,30
31,32
31,33
33,34
34,35
34,36
37,38
37,39
37,40
37,41
38,39
39,40
39,41
40,41
43,44
43,45
44,45
47,48
48,49
50,51
51,52
51,53
52,53
53,54
53,55
55,56
57,58
57,59
57,60
57,61
58,59
59,60
59,61
60,61
63,64
63,65
64,65
66,67
67,68
67,69
70,71
71,72
73,74
74,75
75,76
75,77
76,77
76,78
77,78
79,80
81,82
83,84
83,85
83,86
83,87
84,85
85,86
85,87
86,87
89,90
89,91
90,91
93,94
94,95
96,97
97,98
97,99
98,99
99,100
99,101
101,102
103,104
103,105
103,106
103,107
104,105
105,106
105,107
106,107
109,110
109,111
110,111
113,114
114,115
116,117
117,118
118,119
118,120
119,120
121,122
121,123
122,123
124,125
-----nextToken-----
2,4,8,10,12,15,17,18,22,25,27,30,32,35,36,41,42,45,46,49,54,56,61,62,65,68,69,72,78,80,82,87,88,91,92,95,100,102,107,108,111,112,115,120,123,125
-----computeFrom-----
20,21
20,22
31,32
31,33
39,40
39,41
43,44
43,45
59,60
59,61
63,64
63,65
67,68
67,69
75,76
75,77
85,86
85,87
89,90
89,91
105,106
105,107
109,110
109,111
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_17_bad(){    int i,j;    int * data;    data = (int *)ALLOCA(10*sizeof(int));    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_17_bad()
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_17_bad
{    int i,j;    int * data;    data = (int *)ALLOCA(10*sizeof(int));    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
int i,j;
int i,j;
int
i
i
j
j
int * data;
int * data;
int
* data
*
data
data = (int *)ALLOCA(10*sizeof(int));
data = (int *)ALLOCA(10*sizeof(int))
data
data
(int *)ALLOCA(10*sizeof(int))
int *
int
*
*
ALLOCA(10*sizeof(int))
ALLOCA
ALLOCA
10*sizeof(int)
10
sizeof(int)
int
int

for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i] = i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i] = i;            }
data[i] = i;
data[i] = i
data[i]
data
data
i
i
i
i
for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i]);            }
printIntLine(data[i]);
printIntLine(data[i])
printIntLine
printIntLine
data[i]
data
data
i
i
-----joern-----
(37,62,0)
(5,24,0)
(9,44,0)
(16,21,0)
(4,21,0)
(3,18,0)
(62,22,0)
(28,32,0)
(32,53,0)
(66,50,0)
(25,6,0)
(35,24,0)
(39,27,0)
(43,21,0)
(17,16,0)
(45,64,0)
(0,22,0)
(10,6,0)
(60,22,0)
(38,16,0)
(30,61,0)
(68,61,0)
(29,6,0)
(26,53,0)
(58,44,0)
(50,66,0)
(23,64,0)
(42,15,0)
(23,66,0)
(49,19,0)
(27,6,0)
(34,24,0)
(18,3,0)
(46,53,0)
(52,19,0)
(44,65,0)
(20,14,0)
(41,50,0)
(8,50,0)
(50,41,0)
(31,29,0)
(47,29,0)
(64,53,0)
(23,53,0)
(29,47,0)
(67,24,0)
(63,18,0)
(47,11,0)
(59,14,0)
(3,8,0)
(2,53,0)
(29,64,0)
(66,24,0)
(50,8,0)
(48,21,0)
(56,43,0)
(1,15,0)
(7,3,0)
(33,23,0)
(15,12,0)
(57,23,0)
(36,66,0)
(54,29,0)
(64,40,0)
(29,66,0)
(8,3,0)
(19,22,0)
(14,6,0)
(13,46,0)
(32,61,0)
(51,24,0)
(61,32,0)
(29,6,1)
(22,0,1)
(53,2,1)
(31,14,1)
(49,62,1)
(8,3,1)
(32,53,1)
(2,26,1)
(23,66,1)
(66,50,1)
(23,53,1)
(43,21,1)
(28,53,1)
(17,21,1)
(68,30,1)
(3,18,1)
(10,25,1)
(57,32,1)
(21,4,1)
(47,29,1)
(7,36,1)
(39,47,1)
(48,19,1)
(4,48,1)
(18,63,1)
(38,17,1)
(6,10,1)
(0,60,1)
(64,53,1)
(59,6,1)
(62,22,1)
(61,68,1)
(23,33,1)
(56,14,1)
(49,22,1)
(54,31,1)
(29,54,1)
(43,56,1)
(28,46,1)
(46,13,1)
(13,64,1)
(16,21,1)
(62,37,1)
(20,59,1)
(37,32,1)
(29,64,1)
(26,19,1)
(50,41,1)
(32,61,1)
(17,43,1)
(52,49,1)
(63,7,1)
(14,6,1)
(29,66,1)
(16,38,1)
(60,66,1)
(25,16,1)
(30,28,1)
(64,45,1)
(55,16,1)
(50,8,1)
(19,52,1)
(27,6,1)
(33,57,1)
(19,22,1)
(14,20,1)
(46,53,1)
(45,23,1)
(59,27,1)
(27,39,1)
(32,61,2)
(64,53,2)
(46,53,2)
(62,19,2)
(17,16,2)
(68,32,2)
(20,14,2)
(27,6,2)
(23,53,2)
(16,21,2)
(61,19,2)
(27,14,2)
(3,18,2)
(32,32,2)
(56,16,2)
(33,32,2)
(19,19,2)
(29,64,2)
(2,19,2)
(61,32,2)
(28,32,2)
(16,16,2)
(31,14,2)
(38,16,2)
(20,16,2)
(50,8,2)
(53,19,2)
(62,22,2)
(29,14,2)
(25,16,2)
(19,22,2)
(47,29,2)
(50,41,2)
(66,50,2)
(29,6,2)
(45,32,2)
(49,19,2)
(14,6,2)
(26,19,2)
(32,19,2)
(23,66,2)
(37,19,2)
(43,21,2)
(46,32,2)
(28,19,2)
(59,14,2)
(47,14,2)
(29,66,2)
(64,32,2)
(43,16,2)
(6,16,2)
(39,14,2)
(30,19,2)
(54,14,2)
(14,14,2)
(13,32,2)
(14,16,2)
(23,32,2)
(59,16,2)
(68,19,2)
(52,19,2)
(57,32,2)
(10,16,2)
(30,32,2)
(8,3,2)
(32,53,2)
-----------------------------------
(0,0)
(1,i)
(2,0)
(3,10*sizeof(int)
(4,0)
(5,i)
(6,i=0)
(7,10)
(8,ALLOCA(10*sizeof(int)
(9,for(i=0; i<10; i++)
(10,0)
(11,)
(12,)
(13,i)
(14,i<10)
(15,)
(16,j < 1)
(17,j)
(18,sizeof(int)
(19,i < 1)
(20,10)
(21,j = 0)
(22,i = 0)
(23,data[i])
(24,)
(25,i)
(26,i)
(27,i++)
(28,i)
(29,data[i])
(30,10)
(31,data)
(32,i<(10/2)
(33,i)
(34,for(i = 0; i < 1; i++)
(35,data)
(36,data)
(37,i)
(38,1)
(39,i)
(40,)
(41,int *)
(42,for(i=0; i<(10/2)
(43,j++)
(44,)
(45,i)
(46,i++)
(47,printIntLine(data[i])
(48,j)
(49,i)
(50,(int *)
(51,for(j = 0; j < 1; j++)
(52,1)
(53,i=0)
(54,i)
(55,RET)
(56,j)
(57,data)
(58,i)
(59,i)
(60,i)
(61,10/2)
(62,i++)
(63,int)
(64,data[i] = i)
(65,)
(66,data = (int *)
(67,j)
(68,2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^