-----label-----
1
-----code-----
void CWE665_Improper_Initialization__wchar_t_ncat_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
    /* dereference dataPtr into data */
    wchar_t * data = (*dataPtr);
    {
        size_t sourceLen;
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        sourceLen = wcslen(source);
        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */
        wcsncat(data, source, sourceLen);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
14,18
18,19
19,20
19,21
20,21
20,22
22,23
22,24
25,26
27,28
28,29
28,30
30,31
30,32
30,33
33,34
34,35
35,36
36,37
38,39
38,40
38,41
38,42
38,43
38,44
38,45
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
50,51
52,53
53,54
53,55
53,56
53,57
54,55
56,57
59,60
59,61
62,63
63,64
63,65
64,65
64,66
65,66
67,68
67,69
71,72
72,73
72,74
73,74
75,76
75,77
76,77
78,79
80,81
81,82
81,83
81,84
81,85
82,83
84,85
86,87
88,89
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,6,8,9,13,15,16,17,21,23,24,26,29,31,32,37,42,44,47,49,51,55,57,58,60,61,66,68,69,70,74,77,79,83,85,87,89,93,95
-----computeFrom-----
59,60
59,61
63,64
63,65
67,68
67,69
72,73
72,74
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__wchar_t_ncat_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;    /* dereference dataPtr into data */    wchar_t * data = (*dataPtr);    {        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }}
void
CWE665_Improper_Initialization__wchar_t_ncat_64b_badSink(void * dataVoidPtr)
CWE665_Improper_Initialization__wchar_t_ncat_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;    /* dereference dataPtr into data */    wchar_t * data = (*dataPtr);    {        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }}
wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
wchar_t
* * dataPtr = (wchar_t * *)dataVoidPtr
*
*
dataPtr
= (wchar_t * *)dataVoidPtr
(wchar_t * *)dataVoidPtr
wchar_t * *
wchar_t
* *
*
*
dataVoidPtr
dataVoidPtr
wchar_t * data = (*dataPtr);
wchar_t * data = (*dataPtr);
wchar_t
* data = (*dataPtr)
*
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
sourceLen = wcslen(source);
sourceLen = wcslen(source)
sourceLen
sourceLen
wcslen(source)
wcslen
wcslen
source
source
wcsncat(data, source, sourceLen);
wcsncat(data, source, sourceLen)
wcsncat
wcsncat
data
data
source
source
sourceLen
sourceLen
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(27,15,0)
(19,15,0)
(1,18,0)
(12,10,0)
(23,9,0)
(0,9,0)
(18,13,0)
(23,19,0)
(9,15,0)
(10,19,0)
(26,9,0)
(16,20,0)
(20,6,0)
(18,19,0)
(10,20,0)
(10,9,0)
(7,13,0)
(25,9,0)
(6,20,0)
(2,5,0)
(13,15,0)
(13,5,0)
(5,13,0)
(17,15,0)
(11,19,0)
(4,23,0)
(20,9,0)
(5,24,0)
(3,6,0)
(8,5,0)
(14,10,0)
(5,8,0)
(19,18,0)
(22,10,0)
(10,19,1)
(10,20,1)
(18,1,1)
(5,24,1)
(20,6,1)
(11,13,1)
(13,5,1)
(3,16,1)
(12,20,1)
(16,25,1)
(14,12,1)
(21,23,1)
(23,4,1)
(18,13,1)
(6,3,1)
(23,19,1)
(5,2,1)
(19,18,1)
(1,11,1)
(10,22,1)
(2,7,1)
(4,10,1)
(22,14,1)
(25,19,1)
(5,8,1)
(23,19,2)
(20,6,2)
(19,18,2)
(10,20,2)
(10,19,2)
(13,5,2)
(5,24,2)
(5,8,2)
(18,13,2)
-----------------------------------
(0,sourceLen)
(1,dataPtr)
(2,dataVoidPtr)
(3,source)
(4,data)
(5,(wchar_t * *)
(6,wcslen(source)
(7,dataPtr)
(8,wchar_t * *)
(9,)
(10,wcsncat(data, source, sourceLen)
(11,data)
(12,data)
(13,* * dataPtr = (wchar_t * *)
(14,source)
(15,)
(16,sourceLen)
(17,dataPtr)
(18,*dataPtr)
(19,* data = (*dataPtr)
(20,sourceLen = wcslen(source)
(21,RET)
(22,sourceLen)
(23,printWLine(data)
(24,void * dataVoidPtr)
(25,'\\0')
(26,source)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^