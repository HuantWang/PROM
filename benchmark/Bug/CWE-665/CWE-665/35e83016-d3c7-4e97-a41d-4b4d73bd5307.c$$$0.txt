-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_05_bad()
{
    double * data;
    data = (double *)ALLOCA(10*sizeof(double));
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i] = (double)i;
            }
        }
    }
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
33,34
34,35
34,36
35,36
36,37
36,38
38,39
40,41
40,42
40,43
40,44
41,42
42,43
42,44
43,44
46,47
46,48
47,48
49,50
50,51
50,52
53,54
54,55
56,57
57,58
58,59
58,60
59,60
59,61
60,61
62,63
64,65
64,66
65,66
65,67
68,69
70,71
70,72
71,72
73,74
74,75
74,76
75,76
76,77
76,78
78,79
80,81
80,82
80,83
80,84
81,82
82,83
82,84
83,84
86,87
86,88
87,88
90,91
91,92
93,94
94,95
95,96
95,97
96,97
98,99
98,100
99,100
101,102
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,32,37,39,44,45,48,51,52,55,61,63,66,67,69,72,77,79,84,85,88,89,92,97,100,102
-----computeFrom-----
13,14
13,15
24,25
24,26
42,43
42,44
46,47
46,48
50,51
50,52
58,59
58,60
82,83
82,84
86,87
86,88
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_05_bad(){    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(staticTrue)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    if(staticTrue)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_05_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_05_bad
{    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(staticTrue)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    if(staticTrue)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
data = (double *)ALLOCA(10*sizeof(double));
data = (double *)ALLOCA(10*sizeof(double))
data
data
(double *)ALLOCA(10*sizeof(double))
double *
double
*
*
ALLOCA(10*sizeof(double))
ALLOCA
ALLOCA
10*sizeof(double)
10
sizeof(double)
double
double

if(staticTrue)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i] = (double)i;            }
data[i] = (double)i;
data[i] = (double)i
data[i]
data
data
i
i
(double)i
double
double

i
i
if(staticTrue)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(30,44,0)
(5,3,0)
(35,12,0)
(4,48,0)
(46,14,0)
(11,33,0)
(19,22,0)
(42,26,0)
(18,22,0)
(22,33,0)
(43,26,0)
(31,15,0)
(47,30,0)
(51,38,0)
(28,26,0)
(38,33,0)
(40,14,0)
(52,15,0)
(44,17,0)
(4,17,0)
(45,17,0)
(10,48,0)
(48,10,0)
(24,33,0)
(20,2,0)
(41,2,0)
(54,44,0)
(15,0,0)
(53,30,0)
(0,2,0)
(3,5,0)
(34,10,0)
(7,0,0)
(49,41,0)
(5,6,0)
(30,33,0)
(17,4,0)
(50,2,0)
(9,20,0)
(39,2,0)
(30,53,0)
(6,5,0)
(20,44,0)
(16,30,0)
(5,2,0)
(21,5,0)
(53,27,0)
(20,3,0)
(14,37,0)
(17,45,0)
(3,23,0)
(44,26,0)
(17,44,0)
(0,15,0)
(36,48,0)
(32,12,0)
(48,4,0)
(1,20,0)
(30,3,0)
(12,29,0)
(25,13,1)
(30,44,1)
(39,50,1)
(8,44,1)
(11,13,1)
(17,45,1)
(5,2,1)
(41,49,1)
(34,36,1)
(41,2,1)
(13,0,1)
(44,17,1)
(36,54,1)
(33,24,1)
(0,15,1)
(30,47,1)
(38,51,1)
(20,1,1)
(18,19,1)
(38,33,1)
(16,22,1)
(1,9,1)
(52,7,1)
(5,6,1)
(13,8,1)
(17,4,1)
(0,2,1)
(20,44,1)
(7,41,1)
(2,39,1)
(49,3,1)
(19,33,1)
(22,33,1)
(30,33,1)
(25,22,1)
(48,10,1)
(51,53,1)
(5,21,1)
(19,38,1)
(21,20,1)
(50,8,1)
(31,52,1)
(53,30,1)
(3,5,1)
(7,2,1)
(22,18,1)
(24,11,1)
(9,0,1)
(10,34,1)
(4,48,1)
(15,31,1)
(30,3,1)
(20,2,1)
(47,16,1)
(3,5,2)
(52,0,2)
(50,8,2)
(30,44,2)
(20,0,2)
(52,8,2)
(4,48,2)
(9,0,2)
(1,0,2)
(5,0,2)
(24,13,2)
(30,33,2)
(0,0,2)
(5,6,2)
(21,0,2)
(20,44,2)
(7,0,2)
(18,13,2)
(38,33,2)
(41,2,2)
(47,22,2)
(53,30,2)
(33,13,2)
(19,22,2)
(44,17,2)
(0,15,2)
(31,8,2)
(31,0,2)
(30,3,2)
(39,8,2)
(18,22,2)
(49,0,2)
(20,2,2)
(0,2,2)
(30,22,2)
(22,33,2)
(15,8,2)
(3,0,2)
(2,8,2)
(5,2,2)
(19,13,2)
(53,22,2)
(11,13,2)
(41,0,2)
(17,4,2)
(15,0,2)
(48,10,2)
(7,8,2)
(17,45,2)
(22,13,2)
(16,22,2)
(51,22,2)
(38,22,2)
(22,22,2)
(0,8,2)
-----------------------------------
(0,i<(10/2)
(1,i)
(2,i=0)
(3,data[i] = (double)
(4,ALLOCA(10*sizeof(double)
(5,(double)
(6,double)
(7,i)
(8,staticTrue)
(9,data)
(10,sizeof(double)
(11,i)
(12,)
(13,staticTrue)
(14,)
(15,10/2)
(16,data)
(17,(double *)
(18,10)
(19,i)
(20,data[i])
(21,i)
(22,i<10)
(23,)
(24,0)
(25,RET)
(26,)
(27,)
(28,data)
(29,)
(30,data[i])
(31,2)
(32,i)
(33,i=0)
(34,double)
(35,for(i=0; i<(10/2)
(36,10)
(37,)
(38,i++)
(39,0)
(40,i)
(41,i++)
(42,if(staticTrue)
(43,if(staticTrue)
(44,data = (double *)
(45,double *)
(46,for(i=0; i<10; i++)
(47,i)
(48,10*sizeof(double)
(49,i)
(50,i)
(51,i)
(52,10)
(53,printDoubleLine(data[i])
(54,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^