-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_07_bad()
{
    int * data;
    data = (int *)ALLOCA(10*sizeof(int));
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i] = i;
            }
        }
    }
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
35,36
36,37
36,38
37,38
38,39
38,40
40,41
42,43
42,44
42,45
42,46
43,44
44,45
44,46
45,46
48,49
48,50
49,50
51,52
52,53
52,54
55,56
56,57
58,59
59,60
60,61
60,62
61,62
61,63
62,63
64,65
66,67
68,69
68,70
69,70
69,71
70,71
73,74
74,75
74,76
75,76
76,77
76,78
78,79
80,81
80,82
80,83
80,84
81,82
82,83
82,84
83,84
86,87
86,88
87,88
90,91
91,92
93,94
94,95
95,96
95,97
96,97
98,99
98,100
99,100
101,102
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,34,39,41,46,47,50,53,54,57,63,65,67,71,72,77,79,84,85,88,89,92,97,100,102
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
48,49
48,50
52,53
52,54
60,61
60,62
69,70
69,71
82,83
82,84
86,87
86,88
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_07_bad(){    int * data;    data = (int *)ALLOCA(10*sizeof(int));    if(staticFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_07_bad()
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_07_bad
{    int * data;    data = (int *)ALLOCA(10*sizeof(int));    if(staticFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
int * data;
int * data;
int
* data
*
data
data = (int *)ALLOCA(10*sizeof(int));
data = (int *)ALLOCA(10*sizeof(int))
data
data
(int *)ALLOCA(10*sizeof(int))
int *
int
*
*
ALLOCA(10*sizeof(int))
ALLOCA
ALLOCA
10*sizeof(int)
10
sizeof(int)
int
int

if(staticFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i] = i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i] = i;            }
data[i] = i;
data[i] = i
data[i]
data
data
i
i
i
i
if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i]);            }
printIntLine(data[i]);
printIntLine(data[i])
printIntLine
printIntLine
data[i]
data
data
i
i
-----joern-----
(6,3,0)
(28,53,0)
(9,15,0)
(35,25,0)
(18,17,0)
(53,20,0)
(31,35,0)
(52,33,0)
(51,52,0)
(47,40,0)
(43,54,0)
(41,21,0)
(11,53,0)
(36,26,0)
(41,20,0)
(14,36,0)
(24,41,0)
(1,23,0)
(20,3,0)
(13,17,0)
(44,12,0)
(45,20,0)
(53,17,0)
(2,21,0)
(48,40,0)
(7,21,0)
(34,30,0)
(30,21,0)
(15,9,0)
(43,41,0)
(42,40,0)
(19,3,0)
(8,3,0)
(29,36,0)
(40,42,0)
(40,47,0)
(50,17,0)
(22,2,0)
(53,23,0)
(35,17,0)
(4,42,0)
(46,25,0)
(56,18,0)
(9,47,0)
(16,52,0)
(39,21,0)
(10,25,0)
(9,20,0)
(32,30,0)
(41,43,0)
(23,17,0)
(0,41,0)
(25,35,0)
(20,9,0)
(47,9,0)
(37,38,0)
(55,12,0)
(23,5,0)
(41,23,0)
(27,38,0)
(28,11,1)
(40,42,1)
(53,17,1)
(47,40,1)
(49,30,1)
(41,23,1)
(1,53,1)
(32,2,1)
(18,17,1)
(2,22,1)
(27,37,1)
(41,0,1)
(13,50,1)
(41,21,1)
(30,34,1)
(39,7,1)
(56,23,1)
(32,21,1)
(50,38,1)
(53,28,1)
(17,13,1)
(20,9,1)
(4,48,1)
(11,35,1)
(44,55,1)
(18,56,1)
(22,43,1)
(21,39,1)
(43,41,1)
(24,30,1)
(10,46,1)
(0,24,1)
(9,15,1)
(34,32,1)
(25,10,1)
(46,31,1)
(53,20,1)
(31,18,1)
(41,20,1)
(12,44,1)
(55,35,1)
(35,25,1)
(2,21,1)
(48,45,1)
(7,12,1)
(42,4,1)
(35,17,1)
(38,27,1)
(49,12,1)
(23,1,1)
(23,17,1)
(30,21,1)
(55,38,1)
(37,20,1)
(9,47,1)
(31,17,1)
(17,38,2)
(32,30,2)
(1,35,2)
(21,12,2)
(46,35,2)
(35,17,2)
(7,12,2)
(43,41,2)
(31,38,2)
(50,38,2)
(32,12,2)
(31,35,2)
(22,30,2)
(25,38,2)
(25,35,2)
(34,30,2)
(30,21,2)
(18,17,2)
(43,30,2)
(30,12,2)
(23,17,2)
(53,35,2)
(2,30,2)
(34,12,2)
(2,21,2)
(28,35,2)
(53,17,2)
(56,35,2)
(47,40,2)
(35,25,2)
(35,38,2)
(46,38,2)
(20,9,2)
(41,30,2)
(18,35,2)
(40,42,2)
(53,20,2)
(0,30,2)
(10,35,2)
(23,35,2)
(9,47,2)
(30,30,2)
(35,35,2)
(9,15,2)
(39,12,2)
(41,21,2)
(41,23,2)
(13,38,2)
(41,20,2)
(11,35,2)
(24,30,2)
(10,38,2)
-----------------------------------
(0,i)
(1,i)
(2,i++)
(3,)
(4,int)
(5,)
(6,data)
(7,i)
(8,if(staticFive==5)
(9,(int *)
(10,2)
(11,data)
(12,staticFive==5)
(13,0)
(14,for(i=0; i<10; i++)
(15,int *)
(16,for(i=0; i<(10/2)
(17,i=0)
(18,i++)
(19,if(staticFive==5)
(20,data = (int *)
(21,i=0)
(22,i)
(23,data[i] = i)
(24,data)
(25,10/2)
(26,)
(27,5)
(28,i)
(29,i)
(30,i<10)
(31,i)
(32,i)
(33,)
(34,10)
(35,i<(10/2)
(36,)
(37,staticFive)
(38,staticFive==5)
(39,0)
(40,10*sizeof(int)
(41,data[i])
(42,sizeof(int)
(43,printIntLine(data[i])
(44,5)
(45,data)
(46,10)
(47,ALLOCA(10*sizeof(int)
(48,10)
(49,RET)
(50,i)
(51,i)
(52,)
(53,data[i])
(54,)
(55,staticFive)
(56,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^