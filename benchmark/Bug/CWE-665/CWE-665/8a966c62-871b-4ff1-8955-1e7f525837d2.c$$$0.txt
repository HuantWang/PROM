-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_18_bad()
{
    twoIntsStruct * data;
    twoIntsStruct dataUninitArray[10];
    data = dataUninitArray;
    goto source;
source:
    /* POTENTIAL FLAW: Don't initialize data */
    ; /* empty statement needed for some flow variants */
    goto sink;
sink:
    /* POTENTIAL FLAW: Use data without initializing it */
    {
        int i;
        for(i=0; i<10; i++)
        {
            printIntLine(data[i].intOne);
            printIntLine(data[i].intTwo);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
17,19
19,20
21,22
22,23
22,24
23,24
25,26
27,28
29,30
29,31
32,33
34,35
34,36
36,37
36,38
37,38
38,39
38,40
40,41
42,43
42,44
42,45
42,46
43,44
44,45
44,46
45,46
48,49
48,50
49,50
52,53
53,54
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
61,62
61,63
62,63
64,65
67,68
68,69
68,70
69,70
71,72
71,73
72,73
72,74
73,74
75,76
-----nextToken-----
2,4,9,11,12,16,18,20,24,26,28,30,31,33,35,39,41,46,47,50,51,54,59,63,65,66,70,74,76,77
-----computeFrom-----
22,23
22,24
44,45
44,46
48,49
48,50
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;NullStatement;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_18_bad(){    twoIntsStruct * data;    twoIntsStruct dataUninitArray[10];    data = dataUninitArray;    goto source;source:    /* POTENTIAL FLAW: Don't initialize data */    ; /* empty statement needed for some flow variants */    goto sink;sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i].intOne);            printIntLine(data[i].intTwo);        }    }}
void
CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_18_bad()
CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_18_bad
{    twoIntsStruct * data;    twoIntsStruct dataUninitArray[10];    data = dataUninitArray;    goto source;source:    /* POTENTIAL FLAW: Don't initialize data */    ; /* empty statement needed for some flow variants */    goto sink;sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i].intOne);            printIntLine(data[i].intTwo);        }    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
twoIntsStruct dataUninitArray[10];
twoIntsStruct dataUninitArray[10];
twoIntsStruct
twoIntsStruct
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
goto source;
source
source:    /* POTENTIAL FLAW: Don't initialize data */    ;
source
;
goto sink;
sink
sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i].intOne);            printIntLine(data[i].intTwo);        }    }
sink
{        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i].intOne);            printIntLine(data[i].intTwo);        }    }
int i;
int i;
int
i
i
for(i=0; i<10; i++)        {            printIntLine(data[i].intOne);            printIntLine(data[i].intTwo);        }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{            printIntLine(data[i].intOne);            printIntLine(data[i].intTwo);        }
printIntLine(data[i].intOne);
printIntLine(data[i].intOne)
printIntLine
printIntLine
data[i].intOne
data[i]
data
data
i
i
intOne
printIntLine(data[i].intTwo);
printIntLine(data[i].intTwo)
printIntLine
printIntLine
data[i].intTwo
data[i]
data
data
i
i
intTwo
-----joern-----
(31,19,0)
(9,29,0)
(33,34,0)
(19,23,0)
(11,29,0)
(2,29,0)
(7,23,0)
(18,13,0)
(20,19,0)
(1,6,0)
(23,34,0)
(12,29,0)
(0,30,0)
(3,9,0)
(22,16,0)
(22,6,0)
(33,9,0)
(17,34,0)
(30,34,0)
(23,9,0)
(13,34,0)
(15,33,0)
(6,22,0)
(20,16,0)
(21,33,0)
(8,23,0)
(32,29,0)
(33,6,0)
(6,33,0)
(23,19,0)
(27,29,0)
(26,29,0)
(25,34,0)
(5,27,0)
(24,27,0)
(10,29,0)
(28,9,0)
(4,13,0)
(19,20,0)
(11,9,1)
(1,33,1)
(13,34,1)
(0,20,1)
(8,22,1)
(15,13,1)
(34,17,1)
(31,23,1)
(20,19,1)
(26,11,1)
(7,8,1)
(21,15,1)
(18,30,1)
(9,3,1)
(33,9,1)
(4,18,1)
(23,34,1)
(23,7,1)
(3,28,1)
(18,34,1)
(33,34,1)
(6,1,1)
(6,33,1)
(22,6,1)
(19,23,1)
(33,21,1)
(30,0,1)
(13,4,1)
(17,25,1)
(30,34,1)
(19,31,1)
(23,9,1)
(25,26,1)
(14,13,1)
(30,13,2)
(30,34,2)
(13,13,2)
(23,13,2)
(33,34,2)
(8,13,2)
(22,13,2)
(4,13,2)
(20,19,2)
(6,13,2)
(33,9,2)
(19,23,2)
(33,13,2)
(23,9,2)
(20,13,2)
(13,34,2)
(0,13,2)
(19,13,2)
(23,34,2)
(31,13,2)
(21,13,2)
(6,33,2)
(1,13,2)
(18,13,2)
(15,13,2)
(22,6,2)
(7,13,2)
-----------------------------------
(0,i)
(1,intOne)
(2,sink:)
(3,dataUninitArray)
(4,10)
(5,for(i=0; i<10; i++)
(6,data[i].intOne)
(7,i)
(8,data)
(9,data = dataUninitArray)
(10,data)
(11,goto source;)
(12,source:)
(13,i<10)
(14,RET)
(15,data)
(16,)
(17,0)
(18,i)
(19,data[i].intTwo)
(20,printIntLine(data[i].intTwo)
(21,i)
(22,printIntLine(data[i].intOne)
(23,data[i])
(24,i)
(25,i)
(26,goto sink;)
(27,)
(28,data)
(29,)
(30,i++)
(31,intTwo)
(32,dataUninitArray)
(33,data[i])
(34,i=0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^