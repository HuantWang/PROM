-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_pointer_15_bad()
{
    double * data;
    switch(6)
    {
    case 6:
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    switch(7)
    {
    case 7:
        /* POTENTIAL FLAW: Use data without initializing it */
        printDoubleLine(*data);
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
6,7
7,8
7,9
9,10
9,11
12,13
12,14
14,15
14,16
14,17
14,18
14,19
14,20
15,16
20,21
21,22
21,23
22,23
26,27
26,28
28,29
28,30
28,31
28,32
28,33
28,34
29,30
31,32
32,33
32,34
33,34
35,36
36,37
40,41
41,42
41,43
42,43
-----nextToken-----
2,4,8,10,11,13,16,17,18,19,23,24,25,27,30,34,37,38,39,43,44,45
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;NullStatement;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_pointer_15_bad(){    double * data;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    switch(7)    {    case 7:        /* POTENTIAL FLAW: Use data without initializing it */        printDoubleLine(*data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
void
CWE457_Use_of_Uninitialized_Variable__double_pointer_15_bad()
CWE457_Use_of_Uninitialized_Variable__double_pointer_15_bad
{    double * data;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    switch(7)    {    case 7:        /* POTENTIAL FLAW: Use data without initializing it */        printDoubleLine(*data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
double * data;
double * data;
double
* data
*
data
switch(6)    {    case 6:        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
;
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
switch(7)    {    case 7:        /* POTENTIAL FLAW: Use data without initializing it */        printDoubleLine(*data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
7
{    case 7:        /* POTENTIAL FLAW: Use data without initializing it */        printDoubleLine(*data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 7:
7
printDoubleLine(*data);
printDoubleLine(*data)
printDoubleLine
printDoubleLine
*data
data
data
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
-----joern-----
(5,22,0)
(22,17,0)
(21,17,0)
(23,4,0)
(18,16,0)
(15,5,0)
(3,16,0)
(9,17,0)
(20,4,0)
(12,16,0)
(7,17,0)
(10,17,0)
(11,20,0)
(19,4,0)
(6,4,0)
(1,4,0)
(13,17,0)
(8,13,0)
(22,5,0)
(15,14,1)
(14,23,1)
(20,11,1)
(0,10,1)
(0,9,1)
(8,14,1)
(5,15,1)
(13,8,1)
(22,5,1)
(9,22,1)
(10,13,1)
(14,1,1)
(23,20,1)
(11,2,1)
(1,2,1)
(5,14,2)
(23,2,2)
(15,14,2)
(10,14,2)
(22,5,2)
(13,14,2)
(1,2,2)
(9,14,2)
(22,14,2)
(8,14,2)
(20,2,2)
(11,2,2)
-----------------------------------
(0,RET)
(1,break;)
(2,6)
(3,switch(7)
(4,)
(5,*data)
(6,default:)
(7,case 7:)
(8,"Benign, fixed string")
(9,break;)
(10,break;)
(11,"Benign, fixed string")
(12,switch(6)
(13,printLine("Benign, fixed string")
(14,7)
(15,data)
(16,)
(17,)
(18,data)
(19,case 6:)
(20,printLine("Benign, fixed string")
(21,default:)
(22,printDoubleLine(*data)
(23,break;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^