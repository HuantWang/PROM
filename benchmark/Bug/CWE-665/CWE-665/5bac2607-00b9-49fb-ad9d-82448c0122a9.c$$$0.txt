-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_14_bad()
{
    twoIntsStruct * data;
    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i].intOne = i;
                data[i].intTwo = i;
            }
        }
    }
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i].intOne);
                printIntLine(data[i].intTwo);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
17,19
18,19
18,20
19,20
21,22
23,24
23,25
24,25
26,27
26,28
28,29
29,30
29,31
30,31
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
46,47
46,48
47,48
47,49
48,49
51,52
52,53
52,54
53,54
54,55
54,56
56,57
58,59
58,60
58,61
58,62
59,60
60,61
60,62
61,62
64,65
64,66
65,66
67,68
68,69
68,70
71,72
72,73
74,75
74,76
75,76
76,77
76,78
77,78
77,79
78,79
78,80
79,80
81,82
84,85
86,87
87,88
87,89
88,89
88,90
89,90
89,91
90,91
92,93
95,96
97,98
97,99
98,99
98,100
99,100
102,103
103,104
103,105
104,105
105,106
105,107
107,108
109,110
109,111
109,112
109,113
110,111
111,112
111,113
112,113
115,116
115,117
116,117
119,120
120,121
122,123
122,124
123,124
124,125
124,126
125,126
127,128
127,129
128,129
128,130
129,130
131,132
134,135
135,136
135,137
136,137
138,139
138,140
139,140
139,141
140,141
142,143
-----nextToken-----
2,4,9,11,12,16,20,22,25,27,31,32,36,38,43,45,49,50,55,57,62,63,66,69,70,73,80,82,83,85,91,93,94,96,100,101,106,108,113,114,117,118,121,126,130,132,133,137,141,143,144
-----computeFrom-----
14,15
14,16
26,27
26,28
34,35
34,36
47,48
47,49
60,61
60,62
64,65
64,66
68,69
68,70
76,77
76,78
87,88
87,89
98,99
98,100
111,112
111,113
115,116
115,117
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_14_bad(){    twoIntsStruct * data;    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    if(globalFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }    }    if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_14_bad()
CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_partial_init_14_bad
{    twoIntsStruct * data;    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    if(globalFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }    }    if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));
data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)malloc(10*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
malloc(10*sizeof(twoIntsStruct))
malloc
malloc
10*sizeof(twoIntsStruct)
10
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
if(globalFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i].intOne = i;                data[i].intTwo = i;            }
data[i].intOne = i;
data[i].intOne = i
data[i].intOne
data[i]
data
data
i
i
intOne
i
i
data[i].intTwo = i;
data[i].intTwo = i
data[i].intTwo
data[i]
data
data
i
i
intTwo
i
i
if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
printIntLine(data[i].intOne);
printIntLine(data[i].intOne)
printIntLine
printIntLine
data[i].intOne
data[i]
data
data
i
i
intOne
printIntLine(data[i].intTwo);
printIntLine(data[i].intTwo)
printIntLine
printIntLine
data[i].intTwo
data[i]
data
data
i
i
intTwo
-----joern-----
(54,48,0)
(63,74,0)
(26,3,0)
(77,0,0)
(8,40,0)
(58,62,0)
(78,77,0)
(1,40,0)
(31,17,0)
(79,75,0)
(14,26,0)
(50,52,0)
(11,27,0)
(42,46,0)
(74,60,0)
(70,16,0)
(5,48,0)
(11,75,0)
(71,55,0)
(30,29,0)
(48,78,0)
(66,3,0)
(55,12,0)
(55,71,0)
(46,77,0)
(13,50,0)
(53,3,0)
(38,11,0)
(69,59,0)
(19,61,0)
(33,20,0)
(7,68,0)
(60,44,0)
(39,30,0)
(1,20,0)
(40,1,0)
(9,27,0)
(44,60,0)
(75,11,0)
(77,20,0)
(27,0,0)
(49,61,0)
(75,60,0)
(61,20,0)
(11,67,0)
(4,1,0)
(22,59,0)
(81,50,0)
(6,46,0)
(41,56,0)
(2,44,0)
(1,60,0)
(6,73,0)
(48,20,0)
(57,17,0)
(60,59,0)
(44,2,0)
(44,80,0)
(2,30,0)
(61,49,0)
(46,35,0)
(24,60,0)
(21,59,0)
(35,3,0)
(40,27,0)
(32,77,0)
(29,30,0)
(35,46,0)
(35,60,0)
(45,59,0)
(36,26,0)
(46,6,0)
(67,73,0)
(27,20,0)
(18,20,0)
(43,49,0)
(51,71,0)
(64,49,0)
(15,35,0)
(80,44,0)
(76,35,0)
(37,78,0)
(72,74,0)
(65,16,0)
(56,3,0)
(78,48,0)
(30,2,0)
(75,3,0)
(17,25,0)
(67,11,0)
(48,60,0)
(34,1,0)
(47,75,0)
(68,20,0)
(23,62,0)
(10,29,0)
(29,10,1)
(41,67,1)
(60,44,1)
(37,48,1)
(75,79,1)
(34,77,1)
(9,40,1)
(35,76,1)
(35,3,1)
(30,29,1)
(14,3,1)
(48,60,1)
(19,68,1)
(78,48,1)
(61,49,1)
(55,71,1)
(27,9,1)
(3,66,1)
(77,20,1)
(48,20,1)
(74,60,1)
(48,54,1)
(18,33,1)
(36,14,1)
(70,74,1)
(65,70,1)
(62,58,1)
(26,3,1)
(79,47,1)
(43,19,1)
(68,7,1)
(1,4,1)
(67,11,1)
(42,35,1)
(46,42,1)
(11,27,1)
(46,35,1)
(58,23,1)
(54,5,1)
(39,24,1)
(20,18,1)
(56,41,1)
(66,53,1)
(32,78,1)
(77,32,1)
(1,20,1)
(2,30,1)
(11,38,1)
(5,61,1)
(46,77,1)
(14,56,1)
(40,1,1)
(40,8,1)
(51,74,1)
(28,62,1)
(8,1,1)
(23,16,1)
(26,36,1)
(64,43,1)
(4,34,1)
(75,3,1)
(35,60,1)
(38,75,1)
(47,6,1)
(44,2,1)
(71,51,1)
(27,20,1)
(19,20,1)
(6,46,1)
(16,65,1)
(44,80,1)
(7,27,1)
(72,60,1)
(78,37,1)
(28,26,1)
(49,64,1)
(10,39,1)
(63,72,1)
(53,62,1)
(70,55,1)
(68,20,1)
(33,16,1)
(76,15,1)
(75,60,1)
(15,26,1)
(11,75,1)
(61,20,1)
(1,60,1)
(23,61,1)
(56,3,1)
(74,63,1)
(40,61,2)
(42,26,2)
(26,3,2)
(35,26,2)
(56,26,2)
(5,61,2)
(19,16,2)
(55,74,2)
(34,61,2)
(71,74,2)
(11,27,2)
(78,61,2)
(32,61,2)
(75,60,2)
(75,3,2)
(38,26,2)
(11,26,2)
(44,2,2)
(43,16,2)
(47,26,2)
(78,48,2)
(1,20,2)
(75,26,2)
(19,61,2)
(68,61,2)
(67,26,2)
(53,62,2)
(20,16,2)
(15,26,2)
(48,61,2)
(60,44,2)
(77,61,2)
(64,61,2)
(46,77,2)
(49,61,2)
(33,16,2)
(51,74,2)
(7,61,2)
(26,62,2)
(36,26,2)
(8,61,2)
(61,61,2)
(66,62,2)
(49,16,2)
(44,80,2)
(26,26,2)
(48,20,2)
(61,49,2)
(61,16,2)
(30,29,2)
(1,61,2)
(46,26,2)
(3,62,2)
(6,46,2)
(55,71,2)
(35,3,2)
(11,75,2)
(77,20,2)
(46,35,2)
(6,26,2)
(1,60,2)
(67,11,2)
(14,62,2)
(41,26,2)
(76,26,2)
(79,26,2)
(4,61,2)
(61,20,2)
(48,60,2)
(27,61,2)
(35,60,2)
(68,20,2)
(18,16,2)
(37,61,2)
(14,26,2)
(40,1,2)
(9,61,2)
(64,16,2)
(43,61,2)
(56,3,2)
(27,20,2)
(74,60,2)
(2,30,2)
(36,62,2)
(54,61,2)
-----------------------------------
(0,)
(1,data[i])
(2,malloc(10*sizeof(twoIntsStruct)
(3,i=0)
(4,i)
(5,data)
(6,printIntLine(data[i].intOne)
(7,i)
(8,intTwo)
(9,i)
(10,twoIntsStruct)
(11,data[i].intTwo)
(12,)
(13,for(i=0; i<(10/2)
(14,i)
(15,data)
(16,globalFive==5)
(17,)
(18,0)
(19,i)
(20,i=0)
(21,if(globalFive==5)
(22,data)
(23,globalFive)
(24,data)
(25,)
(26,i<10)
(27,data[i].intTwo = i)
(28,RET)
(29,sizeof(twoIntsStruct)
(30,10*sizeof(twoIntsStruct)
(31,for(i=0; i<10; i++)
(32,i)
(33,i)
(34,data)
(35,data[i])
(36,10)
(37,intOne)
(38,intTwo)
(39,10)
(40,data[i].intTwo)
(41,i)
(42,intOne)
(43,10)
(44,(twoIntsStruct *)
(45,if (data == NULL)
(46,data[i].intOne)
(47,data)
(48,data[i])
(49,10/2)
(50,)
(51,1)
(52,)
(53,i)
(54,i)
(55,exit(-1)
(56,i++)
(57,i)
(58,5)
(59,)
(60,data = (twoIntsStruct *)
(61,i<(10/2)
(62,globalFive==5)
(63,NULL)
(64,2)
(65,5)
(66,0)
(67,printIntLine(data[i].intTwo)
(68,i++)
(69,if(globalFive==5)
(70,globalFive)
(71,-1)
(72,data)
(73,)
(74,data == NULL)
(75,data[i])
(76,i)
(77,data[i].intOne = i)
(78,data[i].intOne)
(79,i)
(80,twoIntsStruct *)
(81,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^