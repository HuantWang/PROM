-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_15_bad()
{
    double * data;
    double dataUninitArray[10];
    data = dataUninitArray;
    switch(6)
    {
    case 6:
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    switch(7)
    {
    case 7:
        /* POTENTIAL FLAW: Use data without initializing it */
    {
        int i;
        for(i=0; i<10; i++)
        {
            printDoubleLine(data[i]);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
27,28
27,29
27,30
27,31
27,32
27,33
28,29
33,34
34,35
34,36
35,36
39,40
39,41
41,42
41,43
41,44
41,45
41,46
41,47
42,43
44,45
44,46
45,46
46,47
46,48
48,49
50,51
50,52
50,53
50,54
51,52
52,53
52,54
53,54
56,57
56,58
57,58
60,61
61,62
63,64
64,65
65,66
65,67
66,67
68,69
68,70
69,70
71,72
75,76
76,77
76,78
77,78
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,26,29,30,31,32,36,37,38,40,43,47,49,54,55,58,59,62,67,70,72,73,74,78,79,80
-----computeFrom-----
20,21
20,22
52,53
52,54
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;NullStatement;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_15_bad(){    double * data;    double dataUninitArray[10];    data = dataUninitArray;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    switch(7)    {    case 7:        /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_15_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_15_bad
{    double * data;    double dataUninitArray[10];    data = dataUninitArray;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    switch(7)    {    case 7:        /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
double * data;
double * data;
double
* data
*
data
double dataUninitArray[10];
double dataUninitArray[10];
double
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
switch(6)    {    case 6:        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
;
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
switch(7)    {    case 7:        /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
7
{    case 7:        /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 7:
7
{        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }
int i;
int i;
int
i
i
for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{            printDoubleLine(data[i]);        }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
-----joern-----
(6,30,0)
(38,5,0)
(36,28,0)
(21,5,0)
(37,15,0)
(25,16,0)
(10,15,0)
(39,37,0)
(1,25,0)
(16,34,0)
(0,11,0)
(8,34,0)
(29,11,0)
(19,2,0)
(24,5,0)
(18,11,0)
(31,34,0)
(26,15,0)
(30,5,0)
(25,19,0)
(9,15,0)
(20,5,0)
(35,25,0)
(4,16,0)
(27,15,0)
(22,0,0)
(28,11,0)
(3,30,0)
(32,20,0)
(25,11,0)
(7,5,0)
(13,0,0)
(40,16,0)
(19,25,0)
(14,34,0)
(17,34,0)
(37,39,1)
(33,9,1)
(24,0,1)
(16,40,1)
(20,32,1)
(39,23,1)
(25,11,1)
(13,28,1)
(0,11,1)
(32,33,1)
(33,10,1)
(40,4,1)
(25,35,1)
(10,37,1)
(28,11,1)
(28,36,1)
(9,23,1)
(29,33,1)
(21,20,1)
(36,19,1)
(18,29,1)
(22,13,1)
(0,22,1)
(23,16,1)
(12,21,1)
(1,0,1)
(11,18,1)
(13,11,1)
(35,1,1)
(25,16,1)
(12,24,1)
(19,25,1)
(22,33,2)
(0,33,2)
(19,0,2)
(32,33,2)
(39,23,2)
(13,0,2)
(0,0,2)
(25,11,2)
(25,16,2)
(19,25,2)
(22,0,2)
(28,0,2)
(37,23,2)
(9,23,2)
(25,0,2)
(36,0,2)
(21,33,2)
(28,11,2)
(0,11,2)
(11,33,2)
(13,33,2)
(24,33,2)
(1,0,2)
(29,33,2)
(35,0,2)
(18,33,2)
(10,23,2)
(20,33,2)
-----------------------------------
(0,i<10)
(1,data)
(2,)
(3,for(i=0; i<10; i++)
(4,data)
(5,)
(6,i)
(7,default:)
(8,switch(7)
(9,break;)
(10,break;)
(11,i=0)
(12,RET)
(13,i)
(14,data)
(15,)
(16,data = dataUninitArray)
(17,switch(6)
(18,0)
(19,printDoubleLine(data[i])
(20,printLine("Benign, fixed string")
(21,break;)
(22,10)
(23,6)
(24,break;)
(25,data[i])
(26,case 6:)
(27,default:)
(28,i++)
(29,i)
(30,)
(31,dataUninitArray)
(32,"Benign, fixed string")
(33,7)
(34,)
(35,i)
(36,i)
(37,printLine("Benign, fixed string")
(38,case 7:)
(39,"Benign, fixed string")
(40,dataUninitArray)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^