-----label-----
1
-----code-----
void CWE665_Improper_Initialization__wchar_t_ncat_42_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100];
    data = dataBuffer;
    data = badSource(data);
    {
        size_t sourceLen;
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        sourceLen = wcslen(source);
        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */
        wcsncat(data, source, sourceLen);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
30,31
32,33
34,35
34,36
34,37
34,38
34,39
34,40
34,41
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
68,69
68,70
69,70
71,72
71,73
72,73
74,75
76,77
77,78
77,79
77,80
77,81
78,79
80,81
82,83
84,85
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,28,31,33,38,40,43,45,47,51,53,54,56,57,62,64,65,66,70,73,75,79,81,83,85,89,91
-----computeFrom-----
20,21
20,22
26,27
26,28
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__wchar_t_ncat_42_bad(){    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    data = badSource(data);    {        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }}
void
CWE665_Improper_Initialization__wchar_t_ncat_42_bad()
CWE665_Improper_Initialization__wchar_t_ncat_42_bad
{    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    data = badSource(data);    {        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100];
wchar_t dataBuffer[100];
wchar_t
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
sourceLen = wcslen(source);
sourceLen = wcslen(source)
sourceLen
sourceLen
wcslen(source)
wcslen
wcslen
source
source
wcsncat(data, source, sourceLen);
wcsncat(data, source, sourceLen)
wcsncat
wcsncat
data
data
source
source
sourceLen
sourceLen
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(7,3,0)
(7,22,0)
(19,20,0)
(10,24,0)
(5,22,0)
(20,23,0)
(13,7,0)
(2,20,0)
(24,23,0)
(5,24,0)
(11,8,0)
(15,20,0)
(16,23,0)
(9,7,0)
(8,22,0)
(12,17,0)
(3,17,0)
(8,20,0)
(22,23,0)
(3,20,0)
(1,23,0)
(17,3,0)
(7,20,0)
(22,5,0)
(6,3,0)
(4,24,0)
(18,22,0)
(14,7,0)
(0,5,0)
(7,22,1)
(12,6,1)
(18,24,1)
(0,18,1)
(21,8,1)
(15,22,1)
(8,22,1)
(10,4,1)
(5,24,1)
(24,10,1)
(7,9,1)
(3,17,1)
(8,11,1)
(11,7,1)
(14,3,1)
(5,0,1)
(17,12,1)
(6,15,1)
(9,13,1)
(22,5,1)
(13,14,1)
(7,3,1)
(7,22,2)
(22,5,2)
(3,17,2)
(7,3,2)
(5,24,2)
(8,22,2)
-----------------------------------
(0,data)
(1,dataBuffer)
(2,sourceLen)
(3,sourceLen = wcslen(source)
(4,data)
(5,badSource(data)
(6,sourceLen)
(7,wcsncat(data, source, sourceLen)
(8,printWLine(data)
(9,sourceLen)
(10,dataBuffer)
(11,data)
(12,source)
(13,source)
(14,data)
(15,'\\0')
(16,data)
(17,wcslen(source)
(18,data)
(19,source)
(20,)
(21,RET)
(22,data = badSource(data)
(23,)
(24,data = dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^