-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_07_bad()
{
    int * data;
    data = (int *)malloc(10*sizeof(int));
    if (data == NULL) {exit(-1);}
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i] = i;
            }
        }
    }
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
44,45
44,46
45,46
48,49
49,50
49,51
50,51
51,52
51,53
53,54
55,56
55,57
55,58
55,59
56,57
57,58
57,59
58,59
61,62
61,63
62,63
64,65
65,66
65,67
68,69
69,70
71,72
72,73
73,74
73,75
74,75
74,76
75,76
77,78
79,80
81,82
81,83
82,83
82,84
83,84
86,87
87,88
87,89
88,89
89,90
89,91
91,92
93,94
93,95
93,96
93,97
94,95
95,96
95,97
96,97
99,100
99,101
100,101
103,104
104,105
106,107
107,108
108,109
108,110
109,110
111,112
111,113
112,113
114,115
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,46,47,52,54,59,60,63,66,67,70,76,78,80,84,85,90,92,97,98,101,102,105,110,113,115
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
57,58
57,59
61,62
61,63
65,66
65,67
73,74
73,75
82,83
82,84
95,96
95,97
99,100
99,101
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_07_bad(){    int * data;    data = (int *)malloc(10*sizeof(int));    if (data == NULL) {exit(-1);}    if(staticFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_07_bad()
CWE457_Use_of_Uninitialized_Variable__int_array_malloc_partial_init_07_bad
{    int * data;    data = (int *)malloc(10*sizeof(int));    if (data == NULL) {exit(-1);}    if(staticFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
int * data;
int * data;
int
* data
*
data
data = (int *)malloc(10*sizeof(int));
data = (int *)malloc(10*sizeof(int))
data
data
(int *)malloc(10*sizeof(int))
int *
int
*
*
malloc(10*sizeof(int))
malloc
malloc
10*sizeof(int)
10
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
if(staticFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i] = i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i] = i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i] = i;            }
data[i] = i;
data[i] = i
data[i]
data
data
i
i
i
i
if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i]);            }
printIntLine(data[i]);
printIntLine(data[i])
printIntLine
printIntLine
data[i]
data
data
i
i
-----joern-----
(8,15,0)
(23,26,0)
(14,59,0)
(28,46,0)
(7,15,0)
(22,4,0)
(46,22,0)
(16,23,0)
(61,32,0)
(25,60,0)
(56,24,0)
(13,22,0)
(47,1,0)
(17,6,0)
(39,61,0)
(43,24,0)
(57,43,0)
(10,17,0)
(5,12,0)
(35,14,0)
(46,28,0)
(2,58,0)
(18,44,0)
(28,36,0)
(61,29,0)
(27,13,0)
(50,32,0)
(6,17,0)
(54,12,0)
(46,32,0)
(6,53,0)
(59,4,0)
(22,44,0)
(4,22,0)
(30,44,0)
(24,43,0)
(21,4,0)
(62,63,0)
(48,14,0)
(11,29,0)
(61,22,0)
(24,29,0)
(64,46,0)
(60,29,0)
(32,29,0)
(3,44,0)
(38,61,0)
(41,15,0)
(20,23,0)
(31,43,0)
(34,13,0)
(45,29,0)
(51,48,0)
(9,63,0)
(14,48,0)
(46,15,0)
(63,42,0)
(1,15,0)
(19,7,0)
(4,21,0)
(52,22,0)
(0,44,0)
(4,59,0)
(40,58,0)
(32,37,0)
(33,7,0)
(55,46,0)
(59,14,0)
(49,7,1)
(61,22,1)
(13,27,1)
(32,29,1)
(15,8,1)
(4,59,1)
(46,22,1)
(45,11,1)
(40,2,1)
(8,41,1)
(41,58,1)
(50,61,1)
(10,13,1)
(47,28,1)
(28,46,1)
(56,60,1)
(17,10,1)
(31,57,1)
(5,54,1)
(27,34,1)
(33,1,1)
(4,21,1)
(57,56,1)
(59,14,1)
(60,29,1)
(46,64,1)
(46,15,1)
(32,50,1)
(22,4,1)
(58,40,1)
(38,39,1)
(60,25,1)
(35,52,1)
(34,22,1)
(11,12,1)
(48,51,1)
(2,24,1)
(29,45,1)
(14,48,1)
(24,29,1)
(43,31,1)
(24,43,1)
(33,15,1)
(55,7,1)
(51,35,1)
(46,32,1)
(12,5,1)
(61,38,1)
(56,29,1)
(39,24,1)
(19,33,1)
(25,32,1)
(7,15,1)
(13,22,1)
(1,47,1)
(1,15,1)
(6,17,1)
(61,29,1)
(54,13,1)
(7,19,1)
(49,58,1)
(64,55,1)
(54,6,1)
(2,12,1)
(57,24,2)
(14,48,2)
(11,12,2)
(24,43,2)
(61,24,2)
(28,46,2)
(43,24,2)
(38,24,2)
(29,12,2)
(17,13,2)
(61,29,2)
(7,58,2)
(46,22,2)
(31,24,2)
(45,12,2)
(61,22,2)
(1,15,2)
(47,7,2)
(46,15,2)
(28,7,2)
(41,58,2)
(60,29,2)
(1,7,2)
(32,24,2)
(32,29,2)
(55,7,2)
(39,24,2)
(33,58,2)
(43,12,2)
(7,15,2)
(13,22,2)
(6,13,2)
(24,12,2)
(25,24,2)
(24,24,2)
(6,17,2)
(7,7,2)
(46,7,2)
(33,7,2)
(8,58,2)
(4,21,2)
(46,32,2)
(57,12,2)
(64,7,2)
(60,24,2)
(50,24,2)
(31,12,2)
(19,7,2)
(24,29,2)
(56,12,2)
(56,24,2)
(22,4,2)
(15,58,2)
(19,58,2)
(10,13,2)
(59,14,2)
(4,59,2)
-----------------------------------
(0,data)
(1,i++)
(2,staticFive)
(3,if(staticFive==5)
(4,(int *)
(5,5)
(6,exit(-1)
(7,i<10)
(8,0)
(9,i)
(10,1)
(11,i)
(12,staticFive==5)
(13,data == NULL)
(14,10*sizeof(int)
(15,i=0)
(16,i)
(17,-1)
(18,if(staticFive==5)
(19,10)
(20,for(i=0; i<(10/2)
(21,int *)
(22,data = (int *)
(23,)
(24,i<(10/2)
(25,i)
(26,)
(27,NULL)
(28,printIntLine(data[i])
(29,i=0)
(30,if (data == NULL)
(31,2)
(32,data[i] = i)
(33,i)
(34,data)
(35,10)
(36,)
(37,)
(38,i)
(39,data)
(40,5)
(41,i)
(42,)
(43,10/2)
(44,)
(45,0)
(46,data[i])
(47,i)
(48,sizeof(int)
(49,RET)
(50,i)
(51,int)
(52,data)
(53,)
(54,staticFive)
(55,data)
(56,i)
(57,10)
(58,staticFive==5)
(59,malloc(10*sizeof(int)
(60,i++)
(61,data[i])
(62,for(i=0; i<10; i++)
(63,)
(64,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^