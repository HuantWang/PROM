-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_16_bad()
{
    double * data;
    double dataUninitArray[10];
    data = dataUninitArray;
    while(1)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i] = (double)i;
            }
        }
        break;
    }
    while(1)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
27,28
27,29
28,29
28,30
29,30
30,31
30,32
32,33
34,35
34,36
34,37
34,38
35,36
36,37
36,38
37,38
40,41
40,42
41,42
43,44
44,45
44,46
47,48
48,49
50,51
51,52
52,53
52,54
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
62,63
65,66
65,67
67,68
67,69
68,69
68,70
69,70
70,71
70,72
72,73
74,75
74,76
74,77
74,78
75,76
76,77
76,78
77,78
80,81
80,82
81,82
84,85
85,86
87,88
88,89
89,90
89,91
90,91
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,26,31,33,38,39,42,45,46,49,55,57,60,61,63,64,66,71,73,78,79,82,83,86,91,94,96,97
-----computeFrom-----
20,21
20,22
36,37
36,38
40,41
40,42
44,45
44,46
52,53
52,54
76,77
76,78
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_16_bad(){    double * data;    double dataUninitArray[10];    data = dataUninitArray;    while(1)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }        break;    }    while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }        break;    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_16_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_16_bad
{    double * data;    double dataUninitArray[10];    data = dataUninitArray;    while(1)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }        break;    }    while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }        break;    }}
double * data;
double * data;
double
* data
*
data
double dataUninitArray[10];
double dataUninitArray[10];
double
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
while(1)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }        break;    }
1
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }        break;    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i] = (double)i;            }
data[i] = (double)i;
data[i] = (double)i
data[i]
data
data
i
i
(double)i
double
double

i
i
break;
while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }        break;    }
1
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }        break;    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
break;
-----joern-----
(18,3,0)
(23,31,0)
(50,21,0)
(20,36,0)
(51,41,0)
(16,13,0)
(2,43,0)
(13,24,0)
(13,16,0)
(31,36,0)
(35,31,0)
(27,22,0)
(26,34,0)
(15,50,0)
(6,22,0)
(19,10,0)
(21,28,0)
(44,7,0)
(43,34,0)
(46,10,0)
(21,50,0)
(4,22,0)
(7,40,0)
(31,35,0)
(42,40,0)
(25,34,0)
(50,22,0)
(14,16,0)
(45,10,0)
(37,36,0)
(27,36,0)
(11,16,0)
(48,7,0)
(38,10,0)
(1,41,0)
(22,10,0)
(16,11,0)
(3,36,0)
(9,27,0)
(27,13,0)
(16,36,0)
(30,25,0)
(50,34,0)
(17,35,0)
(0,35,0)
(29,25,0)
(50,13,0)
(8,47,0)
(41,47,0)
(39,34,0)
(5,50,0)
(12,27,0)
(15,25,1)
(42,25,1)
(16,36,1)
(27,36,1)
(13,16,1)
(26,39,1)
(9,31,1)
(34,26,1)
(29,30,1)
(35,17,1)
(31,36,1)
(32,8,1)
(39,32,1)
(50,34,1)
(43,34,1)
(23,36,1)
(43,2,1)
(0,23,1)
(33,22,1)
(22,4,1)
(12,9,1)
(30,43,1)
(3,18,1)
(2,21,1)
(31,35,1)
(16,14,1)
(32,33,1)
(27,22,1)
(8,31,1)
(36,37,1)
(23,3,1)
(50,22,1)
(49,32,1)
(25,29,1)
(18,13,1)
(25,34,1)
(3,36,1)
(49,42,1)
(27,12,1)
(50,5,1)
(5,15,1)
(17,0,1)
(30,34,1)
(21,50,1)
(50,13,1)
(14,27,1)
(4,6,1)
(37,20,1)
(20,33,1)
(16,11,1)
(31,33,2)
(43,34,2)
(21,25,2)
(3,36,2)
(43,25,2)
(9,31,2)
(31,35,2)
(50,22,2)
(0,33,2)
(25,34,2)
(30,32,2)
(0,31,2)
(50,25,2)
(26,32,2)
(21,50,2)
(27,22,2)
(31,31,2)
(18,31,2)
(17,31,2)
(50,34,2)
(29,25,2)
(16,11,2)
(16,36,2)
(12,31,2)
(34,32,2)
(3,31,2)
(25,32,2)
(25,25,2)
(39,32,2)
(13,16,2)
(50,13,2)
(27,36,2)
(23,33,2)
(2,25,2)
(31,36,2)
(36,33,2)
(14,31,2)
(17,33,2)
(35,31,2)
(20,33,2)
(42,32,2)
(23,31,2)
(5,25,2)
(15,25,2)
(16,31,2)
(35,33,2)
(27,31,2)
(37,33,2)
(13,31,2)
(8,33,2)
(29,32,2)
(30,25,2)
-----------------------------------
(0,10)
(1,i)
(2,i)
(3,i++)
(4,dataUninitArray)
(5,i)
(6,data)
(7,)
(8,break;)
(9,data)
(10,)
(11,double)
(12,i)
(13,data[i] = (double)
(14,i)
(15,data)
(16,(double)
(17,2)
(18,i)
(19,data)
(20,i)
(21,printDoubleLine(data[i])
(22,data = dataUninitArray)
(23,i)
(24,)
(25,i<10)
(26,0)
(27,data[i])
(28,)
(29,10)
(30,i)
(31,i<(10/2)
(32,1)
(33,1)
(34,i=0)
(35,10/2)
(36,i=0)
(37,0)
(38,dataUninitArray)
(39,i)
(40,)
(41,)
(42,break;)
(43,i++)
(44,i)
(45,while(1)
(46,while(1)
(47,)
(48,for(i=0; i<10; i++)
(49,RET)
(50,data[i])
(51,for(i=0; i<(10/2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^