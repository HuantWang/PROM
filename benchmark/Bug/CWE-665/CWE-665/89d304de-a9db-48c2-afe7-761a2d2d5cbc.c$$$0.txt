-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_07_bad()
{
    double * data;
    data = (double *)ALLOCA(10*sizeof(double));
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i] = (double)i;
            }
        }
    }
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
35,36
36,37
36,38
37,38
38,39
38,40
40,41
42,43
42,44
42,45
42,46
43,44
44,45
44,46
45,46
48,49
48,50
49,50
51,52
52,53
52,54
55,56
56,57
58,59
59,60
60,61
60,62
61,62
61,63
62,63
64,65
66,67
66,68
67,68
67,69
70,71
72,73
72,74
73,74
73,75
74,75
77,78
78,79
78,80
79,80
80,81
80,82
82,83
84,85
84,86
84,87
84,88
85,86
86,87
86,88
87,88
90,91
90,92
91,92
94,95
95,96
97,98
98,99
99,100
99,101
100,101
102,103
102,104
103,104
105,106
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,34,39,41,46,47,50,53,54,57,63,65,68,69,71,75,76,81,83,88,89,92,93,96,101,104,106
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
48,49
48,50
52,53
52,54
60,61
60,62
73,74
73,75
86,87
86,88
90,91
90,92
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_07_bad(){    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(staticFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_07_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_07_bad
{    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(staticFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
data = (double *)ALLOCA(10*sizeof(double));
data = (double *)ALLOCA(10*sizeof(double))
data
data
(double *)ALLOCA(10*sizeof(double))
double *
double
*
*
ALLOCA(10*sizeof(double))
ALLOCA
ALLOCA
10*sizeof(double)
10
sizeof(double)
double
double

if(staticFive==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i] = (double)i;            }
data[i] = (double)i;
data[i] = (double)i
data[i]
data
data
i
i
(double)i
double
double

i
i
if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(42,54,0)
(38,20,0)
(28,30,0)
(24,52,0)
(40,58,0)
(10,25,0)
(20,38,0)
(34,25,0)
(2,27,0)
(58,57,0)
(26,4,0)
(19,29,0)
(25,55,0)
(48,32,0)
(23,49,0)
(54,25,0)
(54,33,0)
(34,44,0)
(47,29,0)
(52,33,0)
(46,30,0)
(9,54,0)
(54,42,0)
(29,37,0)
(14,33,0)
(49,25,0)
(27,37,0)
(27,22,0)
(51,33,0)
(42,12,0)
(13,38,0)
(49,17,0)
(35,20,0)
(29,19,0)
(34,7,0)
(56,49,0)
(45,6,0)
(18,33,0)
(21,55,0)
(25,34,0)
(39,54,0)
(8,55,0)
(5,51,0)
(50,58,0)
(36,19,0)
(43,37,0)
(4,37,0)
(49,37,0)
(54,17,0)
(53,51,0)
(7,34,0)
(16,6,0)
(41,32,0)
(20,44,0)
(1,37,0)
(17,31,0)
(3,55,0)
(30,15,0)
(17,27,0)
(27,17,0)
(44,20,0)
(44,34,0)
(0,19,0)
(22,27,0)
(25,34,1)
(19,0,1)
(16,29,1)
(53,33,1)
(42,54,1)
(41,48,1)
(20,38,1)
(27,37,1)
(24,42,1)
(34,7,1)
(35,10,1)
(18,14,1)
(17,27,1)
(38,13,1)
(54,25,1)
(13,35,1)
(54,33,1)
(26,17,1)
(36,47,1)
(34,44,1)
(27,22,1)
(44,20,1)
(39,9,1)
(32,41,1)
(23,29,1)
(48,25,1)
(6,45,1)
(16,32,1)
(9,51,1)
(53,52,1)
(33,18,1)
(37,1,1)
(29,19,1)
(52,24,1)
(11,51,1)
(27,2,1)
(52,33,1)
(5,53,1)
(1,43,1)
(4,37,1)
(49,25,1)
(56,23,1)
(4,26,1)
(43,32,1)
(14,6,1)
(54,39,1)
(0,36,1)
(11,6,1)
(54,17,1)
(51,5,1)
(47,4,1)
(2,49,1)
(49,56,1)
(49,37,1)
(29,37,1)
(45,16,1)
(51,33,1)
(47,37,1)
(36,29,2)
(14,6,2)
(20,38,2)
(47,32,2)
(54,33,2)
(17,29,2)
(23,29,2)
(51,33,2)
(49,37,2)
(25,34,2)
(36,32,2)
(9,51,2)
(17,27,2)
(37,32,2)
(29,37,2)
(27,37,2)
(54,25,2)
(56,29,2)
(52,33,2)
(43,32,2)
(5,6,2)
(51,6,2)
(0,32,2)
(5,51,2)
(4,37,2)
(51,51,2)
(49,25,2)
(34,44,2)
(52,51,2)
(27,22,2)
(29,19,2)
(54,51,2)
(29,32,2)
(19,29,2)
(54,17,2)
(42,51,2)
(19,32,2)
(44,20,2)
(18,6,2)
(1,32,2)
(33,6,2)
(34,7,2)
(4,29,2)
(39,51,2)
(53,6,2)
(29,29,2)
(49,29,2)
(2,29,2)
(47,29,2)
(42,54,2)
(0,29,2)
(53,51,2)
(26,29,2)
(24,51,2)
(27,29,2)
-----------------------------------
(0,2)
(1,0)
(2,i)
(3,if(staticFive==5)
(4,i++)
(5,10)
(6,staticFive==5)
(7,double *)
(8,data)
(9,data)
(10,data)
(11,RET)
(12,)
(13,double)
(14,i)
(15,)
(16,staticFive)
(17,data[i] = (double)
(18,0)
(19,10/2)
(20,10*sizeof(double)
(21,if(staticFive==5)
(22,double)
(23,data)
(24,i)
(25,data = (double *)
(26,i)
(27,(double)
(28,i)
(29,i<(10/2)
(30,)
(31,)
(32,staticFive==5)
(33,i=0)
(34,(double *)
(35,10)
(36,10)
(37,i=0)
(38,sizeof(double)
(39,i)
(40,i)
(41,5)
(42,printDoubleLine(data[i])
(43,i)
(44,ALLOCA(10*sizeof(double)
(45,5)
(46,for(i=0; i<10; i++)
(47,i)
(48,staticFive)
(49,data[i])
(50,for(i=0; i<(10/2)
(51,i<10)
(52,i++)
(53,i)
(54,data[i])
(55,)
(56,i)
(57,)
(58,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^