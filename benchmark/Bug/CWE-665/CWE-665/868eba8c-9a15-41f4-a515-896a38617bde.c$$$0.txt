-----label-----
1
-----code-----
void CWE665_Improper_Initialization__wchar_t_cat_02_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100];
    data = dataBuffer;
    if(1)
    {
        /* FLAW: Do not initialize data */
        ; /* empty statement needed for some flow variants */
    }
    {
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: If data is not initialized properly, wcscat() may not function correctly */
        wcscat(data, source);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
27,28
29,30
29,31
29,32
29,33
29,34
30,31
31,32
31,33
33,34
33,35
35,36
37,38
38,39
38,40
38,41
38,42
39,40
41,42
44,45
44,46
47,48
48,49
48,50
49,50
49,51
50,51
52,53
52,54
56,57
57,58
57,59
57,60
58,59
60,61
62,63
64,65
65,66
65,67
66,67
68,69
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,26,28,32,34,36,40,42,43,45,46,51,53,54,55,59,61,63,67,69
-----computeFrom-----
20,21
20,22
44,45
44,46
48,49
48,50
52,53
52,54
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;NullStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__wchar_t_cat_02_bad(){    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    if(1)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, wcscat() may not function correctly */        wcscat(data, source);        printWLine(data);    }}
void
CWE665_Improper_Initialization__wchar_t_cat_02_bad()
CWE665_Improper_Initialization__wchar_t_cat_02_bad
{    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    if(1)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, wcscat() may not function correctly */        wcscat(data, source);        printWLine(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100];
wchar_t dataBuffer[100];
wchar_t
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(1)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
1
{        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
;
{        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, wcscat() may not function correctly */        wcscat(data, source);        printWLine(data);    }
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
wcscat(data, source);
wcscat(data, source)
wcscat
wcscat
data
data
source
source
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(10,7,0)
(15,13,0)
(11,7,0)
(6,11,0)
(14,6,0)
(1,11,0)
(6,13,0)
(0,11,0)
(13,7,0)
(5,13,0)
(16,7,0)
(9,0,0)
(4,7,0)
(3,11,0)
(8,0,0)
(0,13,0)
(8,9,1)
(12,11,1)
(0,8,1)
(11,1,1)
(14,0,1)
(5,12,1)
(6,14,1)
(6,11,1)
(2,6,1)
(9,5,1)
(1,3,1)
(0,11,1)
(6,11,2)
(0,11,2)
-----------------------------------
(0,wcscat(data, source)
(1,dataBuffer)
(2,RET)
(3,data)
(4,dataBuffer)
(5,'\\0')
(6,printWLine(data)
(7,)
(8,source)
(9,data)
(10,if(1)
(11,data = dataBuffer)
(12,1)
(13,)
(14,data)
(15,source)
(16,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^