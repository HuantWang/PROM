-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18_bad()
{
    double * data;
    data = (double *)ALLOCA(10*sizeof(double));
    goto source;
source:
    /* POTENTIAL FLAW: Don't initialize data */
    ; /* empty statement needed for some flow variants */
    goto sink;
sink:
    /* POTENTIAL FLAW: Use data without initializing it */
    {
        int i;
        for(i=0; i<10; i++)
        {
            printDoubleLine(data[i]);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
32,33
32,34
35,36
37,38
37,39
39,40
39,41
40,41
41,42
41,43
43,44
45,46
45,47
45,48
45,49
46,47
47,48
47,49
48,49
51,52
51,53
52,53
55,56
56,57
58,59
59,60
60,61
60,62
61,62
63,64
63,65
64,65
66,67
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,31,33,34,36,38,42,44,49,50,53,54,57,62,65,67
-----computeFrom-----
13,14
13,15
24,25
24,26
47,48
47,49
51,52
51,53
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;GotoStatement;Name;LabelStatement;Name;NullStatement;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18_bad(){    double * data;    data = (double *)ALLOCA(10*sizeof(double));    goto source;source:    /* POTENTIAL FLAW: Don't initialize data */    ; /* empty statement needed for some flow variants */    goto sink;sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18_bad
{    double * data;    data = (double *)ALLOCA(10*sizeof(double));    goto source;source:    /* POTENTIAL FLAW: Don't initialize data */    ; /* empty statement needed for some flow variants */    goto sink;sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }}
double * data;
double * data;
double
* data
*
data
data = (double *)ALLOCA(10*sizeof(double));
data = (double *)ALLOCA(10*sizeof(double))
data
data
(double *)ALLOCA(10*sizeof(double))
double *
double
*
*
ALLOCA(10*sizeof(double))
ALLOCA
ALLOCA
10*sizeof(double)
10
sizeof(double)
double
double

goto source;
source
source:    /* POTENTIAL FLAW: Don't initialize data */    ;
source
;
goto sink;
sink
sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }
sink
{        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }
int i;
int i;
int
i
i
for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{            printDoubleLine(data[i]);        }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(15,8,0)
(22,11,0)
(3,8,0)
(23,4,0)
(24,0,0)
(21,11,0)
(11,6,0)
(17,6,0)
(17,1,0)
(0,20,0)
(1,18,0)
(14,4,0)
(31,20,0)
(28,4,0)
(1,17,0)
(26,4,0)
(10,25,0)
(2,17,0)
(12,15,0)
(7,17,0)
(21,20,0)
(9,4,0)
(11,22,0)
(19,25,0)
(20,0,0)
(20,21,0)
(30,8,0)
(25,8,0)
(13,6,0)
(6,4,0)
(5,14,0)
(29,4,0)
(27,14,0)
(17,8,0)
(6,11,0)
(11,21,0)
(19,15,1)
(21,20,1)
(2,25,1)
(6,11,1)
(11,22,1)
(31,13,1)
(24,31,1)
(17,8,1)
(16,25,1)
(25,10,1)
(3,28,1)
(9,6,1)
(12,1,1)
(25,8,1)
(17,6,1)
(1,17,1)
(20,0,1)
(17,7,1)
(10,19,1)
(0,24,1)
(15,12,1)
(28,9,1)
(30,3,1)
(19,8,1)
(15,8,1)
(8,30,1)
(7,2,1)
(11,21,1)
(15,25,2)
(2,25,2)
(11,22,2)
(25,8,2)
(12,25,2)
(21,20,2)
(17,8,2)
(1,25,2)
(19,25,2)
(15,8,2)
(17,25,2)
(25,25,2)
(11,21,2)
(1,17,2)
(10,25,2)
(20,0,2)
(6,11,2)
(7,25,2)
(17,6,2)
-----------------------------------
(0,sizeof(double)
(1,printDoubleLine(data[i])
(2,data)
(3,i)
(4,)
(5,i)
(6,data = (double *)
(7,i)
(8,i=0)
(9,goto source;)
(10,10)
(11,(double *)
(12,i)
(13,data)
(14,)
(15,i++)
(16,RET)
(17,data[i])
(18,)
(19,i)
(20,10*sizeof(double)
(21,ALLOCA(10*sizeof(double)
(22,double *)
(23,sink:)
(24,double)
(25,i<10)
(26,data)
(27,for(i=0; i<10; i++)
(28,goto sink;)
(29,source:)
(30,0)
(31,10)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^