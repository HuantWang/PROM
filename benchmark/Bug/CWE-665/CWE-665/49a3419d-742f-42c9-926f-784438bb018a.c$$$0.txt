-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_16_bad()
{
    twoIntsStruct * data;
    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    while(1)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
        break;
    }
    while(1)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i].intOne);
                printIntLine(data[i].intTwo);
            }
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
17,19
18,19
18,20
19,20
21,22
23,24
23,25
24,25
26,27
26,28
28,29
29,30
29,31
30,31
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
46,47
46,48
48,49
48,50
51,52
51,53
53,54
53,55
54,55
54,56
55,56
56,57
56,58
58,59
60,61
60,62
60,63
60,64
61,62
62,63
62,64
63,64
66,67
66,68
67,68
70,71
71,72
73,74
73,75
74,75
75,76
75,77
76,77
78,79
78,80
79,80
79,81
80,81
82,83
85,86
86,87
86,88
87,88
89,90
89,91
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,9,11,12,16,20,22,25,27,31,32,36,38,43,45,47,49,50,52,57,59,64,65,68,69,72,77,81,83,84,88,92,94,95,96
-----computeFrom-----
14,15
14,16
26,27
26,28
34,35
34,36
62,63
62,64
66,67
66,68
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;NullStatement;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;BreakStatement;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_16_bad(){    twoIntsStruct * data;    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    while(1)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    }    while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }        break;    }}
void
CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_16_bad()
CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_16_bad
{    twoIntsStruct * data;    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    while(1)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    }    while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }        break;    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));
data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)malloc(10*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
malloc(10*sizeof(twoIntsStruct))
malloc
malloc
10*sizeof(twoIntsStruct)
10
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
while(1)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    }
1
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    }
;
break;
while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }        break;    }
1
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }        break;    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
printIntLine(data[i].intOne);
printIntLine(data[i].intOne)
printIntLine
printIntLine
data[i].intOne
data[i]
data
data
i
i
intOne
printIntLine(data[i].intTwo);
printIntLine(data[i].intTwo)
printIntLine
printIntLine
data[i].intTwo
data[i]
data
data
i
i
intTwo
break;
-----joern-----
(27,50,0)
(35,50,0)
(44,42,0)
(40,50,0)
(39,34,0)
(38,29,0)
(25,5,0)
(3,15,0)
(16,25,0)
(33,2,0)
(32,30,0)
(18,13,0)
(41,30,0)
(25,2,0)
(13,28,0)
(5,26,0)
(37,51,0)
(14,42,0)
(2,25,0)
(36,3,0)
(1,42,0)
(45,2,0)
(49,3,0)
(4,14,0)
(19,51,0)
(6,25,0)
(26,10,0)
(25,51,0)
(15,3,0)
(30,0,0)
(47,5,0)
(17,51,0)
(8,50,0)
(48,19,0)
(5,50,0)
(24,14,0)
(23,5,0)
(9,34,0)
(22,23,0)
(10,26,0)
(11,0,0)
(42,51,0)
(45,12,0)
(15,26,0)
(20,23,0)
(42,14,0)
(26,5,0)
(34,51,0)
(2,45,0)
(14,4,0)
(3,49,0)
(21,18,0)
(46,49,0)
(26,15,0)
(4,12,0)
(42,5,0)
(13,18,0)
(31,7,1)
(39,9,1)
(5,26,1)
(13,18,1)
(25,5,1)
(37,7,1)
(15,3,1)
(25,51,1)
(51,17,1)
(1,45,1)
(6,16,1)
(2,25,1)
(24,42,1)
(11,34,1)
(9,19,1)
(7,38,1)
(16,34,1)
(7,43,1)
(19,48,1)
(17,37,1)
(4,14,1)
(48,4,1)
(14,42,1)
(3,49,1)
(23,22,1)
(19,51,1)
(42,44,1)
(34,39,1)
(43,13,1)
(9,51,1)
(33,25,1)
(46,36,1)
(2,33,1)
(43,23,1)
(25,6,1)
(49,46,1)
(42,51,1)
(26,10,1)
(34,51,1)
(44,1,1)
(14,24,1)
(21,23,1)
(22,20,1)
(45,2,1)
(38,43,1)
(36,47,1)
(31,11,1)
(42,5,1)
(18,21,1)
(26,15,1)
(23,5,1)
(20,5,1)
(39,34,2)
(14,34,2)
(11,7,2)
(26,15,2)
(37,7,2)
(45,2,2)
(2,34,2)
(4,14,2)
(9,34,2)
(1,34,2)
(2,25,2)
(17,7,2)
(44,34,2)
(6,34,2)
(48,34,2)
(25,34,2)
(38,43,2)
(14,42,2)
(33,34,2)
(26,10,2)
(3,49,2)
(51,7,2)
(13,23,2)
(18,23,2)
(5,26,2)
(15,3,2)
(42,51,2)
(25,5,2)
(24,34,2)
(16,34,2)
(13,18,2)
(34,7,2)
(21,23,2)
(19,34,2)
(34,34,2)
(42,34,2)
(25,51,2)
(34,51,2)
(19,51,2)
(42,5,2)
(9,7,2)
(4,34,2)
(39,7,2)
(23,5,2)
(45,34,2)
-----------------------------------
(0,)
(1,data)
(2,data[i].intOne)
(3,10*sizeof(twoIntsStruct)
(4,printIntLine(data[i].intTwo)
(5,data = (twoIntsStruct *)
(6,i)
(7,1)
(8,while(1)
(9,i)
(10,twoIntsStruct *)
(11,break;)
(12,)
(13,exit(-1)
(14,data[i].intTwo)
(15,malloc(10*sizeof(twoIntsStruct)
(16,data)
(17,0)
(18,-1)
(19,i++)
(20,data)
(21,1)
(22,NULL)
(23,data == NULL)
(24,intTwo)
(25,data[i])
(26,(twoIntsStruct *)
(27,data)
(28,)
(29,)
(30,)
(31,RET)
(32,i)
(33,intOne)
(34,i<10)
(35,if (data == NULL)
(36,10)
(37,i)
(38,break;)
(39,10)
(40,while(1)
(41,for(i=0; i<10; i++)
(42,data[i])
(43,1)
(44,i)
(45,printIntLine(data[i].intOne)
(46,twoIntsStruct)
(47,data)
(48,i)
(49,sizeof(twoIntsStruct)
(50,)
(51,i=0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^