-----label-----
1
-----code-----
void CWE665_Improper_Initialization__char_cat_08_bad()
{
    char * data;
    char dataBuffer[100];
    data = dataBuffer;
    if(staticReturnsTrue())
    {
        /* FLAW: Do not initialize data */
        ; /* empty statement needed for some flow variants */
    }
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */
        strcat(data, source);
        printLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
27,28
29,30
31,32
31,33
31,34
31,35
31,36
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
40,43
40,44
41,42
43,44
46,47
46,48
49,50
50,51
50,52
51,52
51,53
52,53
54,55
54,56
58,59
59,60
59,61
59,62
60,61
62,63
64,65
66,67
67,68
67,69
68,69
70,71
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,28,30,34,36,38,42,44,45,47,48,53,55,56,57,61,63,65,69,71
-----computeFrom-----
20,21
20,22
46,47
46,48
50,51
50,52
54,55
54,56
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;NullStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__char_cat_08_bad(){    char * data;    char dataBuffer[100];    data = dataBuffer;    if(staticReturnsTrue())    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */        strcat(data, source);        printLine(data);    }}
void
CWE665_Improper_Initialization__char_cat_08_bad()
CWE665_Improper_Initialization__char_cat_08_bad
{    char * data;    char dataBuffer[100];    data = dataBuffer;    if(staticReturnsTrue())    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */        strcat(data, source);        printLine(data);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100];
char dataBuffer[100];
char
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticReturnsTrue())    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
;
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */        strcat(data, source);        printLine(data);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
strcat(data, source);
strcat(data, source)
strcat
strcat
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(10,28,0)
(28,5,0)
(25,1,0)
(15,25,0)
(14,26,0)
(11,5,0)
(12,1,0)
(0,17,0)
(18,28,0)
(25,10,0)
(3,5,0)
(23,9,0)
(9,28,0)
(7,10,0)
(19,22,0)
(17,22,0)
(20,17,0)
(27,1,0)
(9,23,0)
(26,22,0)
(4,23,0)
(6,9,0)
(24,5,0)
(21,9,0)
(8,22,0)
(17,28,0)
(26,28,0)
(1,25,0)
(16,23,0)
(22,5,0)
(27,15,1)
(7,25,1)
(6,2,1)
(25,1,1)
(19,8,1)
(1,12,1)
(17,0,1)
(9,23,1)
(4,16,1)
(26,14,1)
(2,22,1)
(0,20,1)
(16,21,1)
(17,22,1)
(14,17,1)
(13,26,1)
(22,19,1)
(15,9,1)
(10,7,1)
(23,4,1)
(12,27,1)
(21,6,1)
(20,10,1)
(26,22,1)
(9,23,2)
(17,22,2)
(26,22,2)
(25,1,2)
-----------------------------------
(0,source)
(1,100-1)
(2,staticReturnsTrue()
(3,dataBuffer)
(4,1)
(5,)
(6,source)
(7,'\\0')
(8,data)
(9,memset(source, 'C', 100-1)
(10,source[100-1] = '\\0')
(11,data)
(12,1)
(13,RET)
(14,data)
(15,source)
(16,100)
(17,strcat(data, source)
(18,source)
(19,dataBuffer)
(20,data)
(21,'C')
(22,data = dataBuffer)
(23,100-1)
(24,if(staticReturnsTrue()
(25,source[100-1])
(26,printLine(data)
(27,100)
(28,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^