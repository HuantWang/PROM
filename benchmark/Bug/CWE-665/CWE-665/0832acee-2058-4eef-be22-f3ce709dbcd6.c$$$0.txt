-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__wchar_t_pointer_03_bad()
{
    wchar_t * data;
    if(5==5)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(5==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
6,7
7,8
7,9
9,10
9,11
12,13
12,14
13,14
13,15
16,17
18,19
18,20
19,20
19,21
22,23
23,24
24,25
24,26
25,26
27,28
-----nextToken-----
2,4,8,10,11,14,15,17,20,21,26,28
-----computeFrom-----
13,14
13,15
19,20
19,21
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;NullStatement;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__wchar_t_pointer_03_bad(){    wchar_t * data;    if(5==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(5==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        printWLine(data);    }}
void
CWE457_Use_of_Uninitialized_Variable__wchar_t_pointer_03_bad()
CWE457_Use_of_Uninitialized_Variable__wchar_t_pointer_03_bad
{    wchar_t * data;    if(5==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(5==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        printWLine(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
if(5==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
5==5
5
5
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(5==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        printWLine(data);    }
5==5
5
5
{        /* POTENTIAL FLAW: Use data without initializing it */        printWLine(data);    }
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(13,8,0)
(4,6,0)
(2,1,0)
(8,5,0)
(3,0,0)
(9,0,0)
(10,1,0)
(12,0,0)
(11,6,0)
(2,10,1)
(11,4,1)
(7,8,1)
(13,6,1)
(1,2,1)
(4,1,1)
(8,13,1)
(7,6,1)
(6,11,1)
(8,6,2)
(13,6,2)
-----------------------------------
(0,)
(1,5==5)
(2,5)
(3,if(5==5)
(4,5)
(5,)
(6,5==5)
(7,RET)
(8,printWLine(data)
(9,if(5==5)
(10,5)
(11,5)
(12,data)
(13,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^