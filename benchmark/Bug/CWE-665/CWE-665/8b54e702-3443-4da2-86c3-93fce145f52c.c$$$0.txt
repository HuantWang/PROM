-----label-----
1
-----code-----
void CWE665_Improper_Initialization__wchar_t_cat_15_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100];
    data = dataBuffer;
    switch(6)
    {
    case 6:
        /* FLAW: Do not initialize data */
        ; /* empty statement needed for some flow variants */
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    {
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: If data is not initialized properly, wcscat() may not function correctly */
        wcscat(data, source);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
27,28
27,29
27,30
27,31
27,32
27,33
28,29
33,34
34,35
34,36
35,36
39,40
39,41
39,42
39,43
39,44
40,41
41,42
41,43
43,44
43,45
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
67,68
67,69
67,70
68,69
70,71
72,73
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,26,29,30,31,32,36,37,38,42,44,46,50,52,53,55,56,61,63,64,65,69,71,73,77,79
-----computeFrom-----
20,21
20,22
54,55
54,56
58,59
58,60
62,63
62,64
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;NullStatement;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__wchar_t_cat_15_bad(){    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    switch(6)    {    case 6:        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, wcscat() may not function correctly */        wcscat(data, source);        printWLine(data);    }}
void
CWE665_Improper_Initialization__wchar_t_cat_15_bad()
CWE665_Improper_Initialization__wchar_t_cat_15_bad
{    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    switch(6)    {    case 6:        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, wcscat() may not function correctly */        wcscat(data, source);        printWLine(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100];
wchar_t dataBuffer[100];
wchar_t
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
switch(6)    {    case 6:        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
;
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
{        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, wcscat() may not function correctly */        wcscat(data, source);        printWLine(data);    }
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
wcscat(data, source);
wcscat(data, source)
wcscat
wcscat
data
data
source
source
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(16,10,0)
(1,14,0)
(0,10,0)
(22,5,0)
(4,14,0)
(5,18,0)
(20,18,0)
(3,21,0)
(9,8,0)
(11,5,0)
(17,10,0)
(6,14,0)
(5,16,0)
(15,16,0)
(7,16,0)
(8,16,0)
(2,10,0)
(18,10,0)
(23,18,0)
(21,14,0)
(8,18,0)
(12,14,0)
(19,16,1)
(12,21,1)
(7,15,1)
(13,8,1)
(16,7,1)
(8,9,1)
(22,11,1)
(21,3,1)
(8,16,1)
(9,5,1)
(3,19,1)
(5,22,1)
(20,12,1)
(4,19,1)
(20,4,1)
(5,16,1)
(11,20,1)
(8,16,2)
(5,16,2)
(12,19,2)
(21,19,2)
(4,19,2)
(3,19,2)
-----------------------------------
(0,dataBuffer)
(1,default:)
(2,switch(6)
(3,"Benign, fixed string")
(4,break;)
(5,wcscat(data, source)
(6,case 6:)
(7,dataBuffer)
(8,printWLine(data)
(9,data)
(10,)
(11,data)
(12,break;)
(13,RET)
(14,)
(15,data)
(16,data = dataBuffer)
(17,data)
(18,)
(19,6)
(20,\'\\0\')
(21,printLine("Benign, fixed string")
(22,source)
(23,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^