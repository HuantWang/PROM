-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_16_bad()
{
    twoIntsStruct * data;
    twoIntsStruct dataUninitArray[10];
    data = dataUninitArray;
    while(1)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i].intOne = i;
                data[i].intTwo = i;
            }
        }
        break;
    }
    while(1)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i].intOne);
                printIntLine(data[i].intTwo);
            }
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
17,19
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
29,30
29,31
30,31
30,32
31,32
32,33
32,34
34,35
36,37
36,38
36,39
36,40
37,38
38,39
38,40
39,40
42,43
42,44
43,44
45,46
46,47
46,48
49,50
50,51
52,53
52,54
53,54
54,55
54,56
55,56
55,57
56,57
56,58
57,58
59,60
62,63
64,65
65,66
65,67
66,67
66,68
67,68
67,69
68,69
70,71
73,74
76,77
76,78
78,79
78,80
79,80
79,81
80,81
81,82
81,83
83,84
85,86
85,87
85,88
85,89
86,87
87,88
87,89
88,89
91,92
91,93
92,93
95,96
96,97
98,99
98,100
99,100
100,101
100,102
101,102
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
114,116
115,116
115,117
116,117
118,119
-----nextToken-----
2,4,9,11,12,16,18,20,24,26,28,33,35,40,41,44,47,48,51,58,60,61,63,69,71,72,74,75,77,82,84,89,90,93,94,97,102,106,108,109,113,117,119,120,121
-----computeFrom-----
22,23
22,24
38,39
38,40
42,43
42,44
46,47
46,48
54,55
54,56
65,66
65,67
87,88
87,89
91,92
91,93
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;BreakStatement;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_16_bad(){    twoIntsStruct * data;    twoIntsStruct dataUninitArray[10];    data = dataUninitArray;    while(1)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }        break;    }    while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }        break;    }}
void
CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_16_bad()
CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_16_bad
{    twoIntsStruct * data;    twoIntsStruct dataUninitArray[10];    data = dataUninitArray;    while(1)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }        break;    }    while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }        break;    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
twoIntsStruct dataUninitArray[10];
twoIntsStruct dataUninitArray[10];
twoIntsStruct
twoIntsStruct
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
while(1)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }        break;    }
1
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }        break;    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i].intOne = i;                data[i].intTwo = i;            }
data[i].intOne = i;
data[i].intOne = i
data[i].intOne
data[i]
data
data
i
i
intOne
i
i
data[i].intTwo = i;
data[i].intTwo = i
data[i].intTwo
data[i]
data
data
i
i
intTwo
i
i
break;
while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }        break;    }
1
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }        break;    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
printIntLine(data[i].intOne);
printIntLine(data[i].intOne)
printIntLine
printIntLine
data[i].intOne
data[i]
data
data
i
i
intOne
printIntLine(data[i].intTwo);
printIntLine(data[i].intTwo)
printIntLine
printIntLine
data[i].intTwo
data[i]
data
data
i
i
intTwo
break;
-----joern-----
(37,27,0)
(12,34,0)
(39,20,0)
(64,17,0)
(63,7,0)
(22,19,0)
(52,39,0)
(13,41,0)
(28,0,0)
(5,28,0)
(48,8,0)
(14,2,0)
(18,56,0)
(2,53,0)
(16,53,0)
(64,41,0)
(13,27,0)
(10,43,0)
(39,0,0)
(21,28,0)
(45,41,0)
(50,5,0)
(34,5,0)
(46,40,0)
(10,18,0)
(3,0,0)
(30,34,0)
(9,7,0)
(19,0,0)
(60,61,0)
(24,13,0)
(6,51,0)
(42,44,0)
(1,64,0)
(58,51,0)
(64,0,0)
(17,64,0)
(32,40,0)
(49,10,0)
(29,55,0)
(11,43,0)
(44,27,0)
(34,0,0)
(10,39,0)
(47,0,0)
(62,41,0)
(40,28,0)
(40,13,0)
(36,8,0)
(15,9,0)
(51,55,0)
(66,2,0)
(61,27,0)
(41,8,0)
(33,9,0)
(43,41,0)
(55,0,0)
(54,43,0)
(23,13,0)
(65,61,0)
(4,64,0)
(40,46,0)
(34,41,0)
(13,40,0)
(18,10,0)
(35,8,0)
(55,51,0)
(28,20,0)
(25,27,0)
(38,17,0)
(5,34,0)
(17,39,0)
(43,10,0)
(59,8,0)
(46,56,0)
(43,27,0)
(55,0,1)
(0,3,1)
(22,28,1)
(19,22,1)
(55,51,1)
(40,28,1)
(13,41,1)
(25,37,1)
(28,0,1)
(17,64,1)
(44,42,1)
(26,41,1)
(60,65,1)
(49,43,1)
(43,54,1)
(19,0,1)
(23,24,1)
(65,44,1)
(10,43,1)
(40,13,1)
(57,26,1)
(42,46,1)
(34,0,1)
(29,19,1)
(51,58,1)
(47,26,1)
(50,34,1)
(4,55,1)
(16,55,1)
(13,23,1)
(39,52,1)
(37,57,1)
(58,6,1)
(61,60,1)
(11,61,1)
(21,5,1)
(34,12,1)
(27,25,1)
(52,17,1)
(24,18,1)
(44,27,1)
(46,40,1)
(64,41,1)
(40,32,1)
(1,4,1)
(31,63,1)
(13,27,1)
(17,38,1)
(57,16,1)
(63,61,1)
(39,0,1)
(61,27,1)
(43,41,1)
(28,21,1)
(12,30,1)
(5,50,1)
(18,10,1)
(10,49,1)
(3,47,1)
(64,0,1)
(45,62,1)
(43,27,1)
(64,1,1)
(6,29,1)
(41,45,1)
(32,13,1)
(5,34,1)
(29,0,1)
(34,41,1)
(31,57,1)
(65,27,1)
(10,39,1)
(38,64,1)
(54,11,1)
(30,39,1)
(61,27,2)
(50,55,2)
(65,57,2)
(3,26,2)
(40,61,2)
(52,55,2)
(38,55,2)
(6,55,2)
(65,61,2)
(43,61,2)
(44,61,2)
(19,0,2)
(10,39,2)
(55,51,2)
(60,57,2)
(58,26,2)
(55,0,2)
(28,55,2)
(64,55,2)
(51,26,2)
(18,10,2)
(10,43,2)
(55,55,2)
(64,41,2)
(29,26,2)
(64,0,2)
(63,57,2)
(5,34,2)
(37,57,2)
(40,28,2)
(47,26,2)
(23,61,2)
(32,61,2)
(34,0,2)
(39,55,2)
(10,61,2)
(13,41,2)
(40,13,2)
(61,61,2)
(19,55,2)
(44,27,2)
(58,55,2)
(0,26,2)
(13,61,2)
(60,61,2)
(30,55,2)
(39,0,2)
(22,55,2)
(55,26,2)
(18,61,2)
(54,61,2)
(27,57,2)
(43,41,2)
(43,27,2)
(46,61,2)
(6,26,2)
(11,61,2)
(4,55,2)
(34,41,2)
(34,55,2)
(16,26,2)
(13,27,2)
(51,55,2)
(61,57,2)
(24,61,2)
(49,61,2)
(17,55,2)
(5,55,2)
(28,0,2)
(42,61,2)
(46,40,2)
(21,55,2)
(12,55,2)
(17,64,2)
(1,55,2)
(25,57,2)
(29,55,2)
-----------------------------------
(0,i=0)
(1,i)
(2,)
(3,0)
(4,data)
(5,data[i].intTwo)
(6,10)
(7,)
(8,)
(9,)
(10,data[i].intOne)
(11,data)
(12,i)
(13,data[i])
(14,for(i=0; i<(10/2)
(15,i)
(16,break;)
(17,data[i].intOne)
(18,printIntLine(data[i].intOne)
(19,i++)
(20,)
(21,i)
(22,i)
(23,i)
(24,data)
(25,0)
(26,1)
(27,i=0)
(28,data[i].intTwo = i)
(29,i)
(30,data)
(31,RET)
(32,intTwo)
(33,for(i=0; i<10; i++)
(34,data[i])
(35,while(1)
(36,while(1)
(37,i)
(38,intOne)
(39,data[i].intOne = i)
(40,data[i].intTwo)
(41,data = dataUninitArray)
(42,i)
(43,data[i])
(44,i++)
(45,dataUninitArray)
(46,printIntLine(data[i].intTwo)
(47,i)
(48,data)
(49,intOne)
(50,intTwo)
(51,10/2)
(52,i)
(53,)
(54,i)
(55,i<(10/2)
(56,)
(57,1)
(58,2)
(59,dataUninitArray)
(60,10)
(61,i<10)
(62,data)
(63,break;)
(64,data[i])
(65,i)
(66,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^