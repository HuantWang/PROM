-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_18_bad()
{
    double * data;
    data = (double *)ALLOCA(10*sizeof(double));
    goto source;
source:
    /* POTENTIAL FLAW: Partially initialize data */
    {
        int i;
        for(i=0; i<(10/2); i++)
        {
            data[i] = (double)i;
        }
    }
    goto sink;
sink:
    /* POTENTIAL FLAW: Use data without initializing it */
    {
        int i;
        for(i=0; i<10; i++)
        {
            printDoubleLine(data[i]);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
32,33
32,34
34,35
34,36
35,36
36,37
36,38
38,39
40,41
40,42
40,43
40,44
41,42
42,43
42,44
43,44
46,47
46,48
47,48
49,50
50,51
50,52
53,54
54,55
56,57
57,58
58,59
58,60
59,60
59,61
60,61
62,63
64,65
64,66
65,66
65,67
68,69
70,71
72,73
72,74
74,75
74,76
75,76
76,77
76,78
78,79
80,81
80,82
80,83
80,84
81,82
82,83
82,84
83,84
86,87
86,88
87,88
90,91
91,92
93,94
94,95
95,96
95,97
96,97
98,99
98,100
99,100
101,102
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,31,33,37,39,44,45,48,51,52,55,61,63,66,67,69,71,73,77,79,84,85,88,89,92,97,100,102
-----computeFrom-----
13,14
13,15
24,25
24,26
42,43
42,44
46,47
46,48
50,51
50,52
58,59
58,60
82,83
82,84
86,87
86,88
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_18_bad(){    double * data;    data = (double *)ALLOCA(10*sizeof(double));    goto source;source:    /* POTENTIAL FLAW: Partially initialize data */    {        int i;        for(i=0; i<(10/2); i++)        {            data[i] = (double)i;        }    }    goto sink;sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_18_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_18_bad
{    double * data;    data = (double *)ALLOCA(10*sizeof(double));    goto source;source:    /* POTENTIAL FLAW: Partially initialize data */    {        int i;        for(i=0; i<(10/2); i++)        {            data[i] = (double)i;        }    }    goto sink;sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }}
double * data;
double * data;
double
* data
*
data
data = (double *)ALLOCA(10*sizeof(double));
data = (double *)ALLOCA(10*sizeof(double))
data
data
(double *)ALLOCA(10*sizeof(double))
double *
double
*
*
ALLOCA(10*sizeof(double))
ALLOCA
ALLOCA
10*sizeof(double)
10
sizeof(double)
double
double

goto source;
source
source:    /* POTENTIAL FLAW: Partially initialize data */    {        int i;        for(i=0; i<(10/2); i++)        {            data[i] = (double)i;        }    }
source
{        int i;        for(i=0; i<(10/2); i++)        {            data[i] = (double)i;        }    }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)        {            data[i] = (double)i;        }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{            data[i] = (double)i;        }
data[i] = (double)i;
data[i] = (double)i
data[i]
data
data
i
i
(double)i
double
double

i
i
goto sink;
sink
sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }
sink
{        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }
int i;
int i;
int
i
i
for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{            printDoubleLine(data[i]);        }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(48,27,0)
(41,20,0)
(11,31,0)
(24,0,0)
(35,18,0)
(4,23,0)
(46,11,0)
(38,42,0)
(44,31,0)
(9,35,0)
(2,42,0)
(35,13,0)
(21,1,0)
(6,35,0)
(19,51,0)
(25,21,0)
(20,41,0)
(33,19,0)
(51,19,0)
(7,20,0)
(8,47,0)
(41,14,0)
(17,26,0)
(49,31,0)
(18,19,0)
(29,0,0)
(17,13,0)
(19,31,0)
(26,5,0)
(22,29,0)
(47,42,0)
(27,42,0)
(13,17,0)
(36,0,0)
(20,0,0)
(35,31,0)
(40,20,0)
(30,47,0)
(34,24,0)
(17,43,0)
(5,23,0)
(12,29,0)
(52,42,0)
(3,5,0)
(23,5,0)
(15,42,0)
(39,13,0)
(20,18,0)
(16,42,0)
(13,42,0)
(37,1,0)
(1,21,0)
(19,18,0)
(32,27,0)
(5,26,0)
(10,0,0)
(43,17,0)
(45,1,0)
(18,28,0)
(20,13,0)
(21,31,0)
(26,17,0)
(6,21,1)
(18,19,1)
(40,7,1)
(21,31,1)
(50,29,1)
(13,17,1)
(23,4,1)
(20,13,1)
(19,31,1)
(0,36,1)
(11,31,1)
(26,5,1)
(20,18,1)
(25,11,1)
(4,3,1)
(25,31,1)
(17,26,1)
(24,34,1)
(24,0,1)
(10,38,1)
(36,10,1)
(41,20,1)
(29,22,1)
(31,44,1)
(21,1,1)
(33,35,1)
(11,46,1)
(12,24,1)
(29,0,1)
(38,21,1)
(12,0,1)
(20,0,1)
(34,41,1)
(19,51,1)
(35,31,1)
(5,23,1)
(44,49,1)
(3,39,1)
(22,12,1)
(35,9,1)
(37,45,1)
(52,13,1)
(1,37,1)
(20,40,1)
(46,18,1)
(45,25,1)
(49,52,1)
(17,43,1)
(7,29,1)
(35,13,1)
(19,33,1)
(9,6,1)
(17,26,2)
(13,17,2)
(17,43,2)
(9,21,2)
(19,21,2)
(34,29,2)
(45,21,2)
(11,31,2)
(19,31,2)
(22,29,2)
(21,31,2)
(20,0,2)
(11,21,2)
(18,19,2)
(24,29,2)
(7,29,2)
(1,21,2)
(6,21,2)
(33,21,2)
(35,31,2)
(24,0,2)
(19,51,2)
(41,29,2)
(40,29,2)
(12,29,2)
(20,29,2)
(21,21,2)
(41,20,2)
(29,0,2)
(37,21,2)
(35,21,2)
(46,21,2)
(25,21,2)
(26,5,2)
(35,13,2)
(5,23,2)
(29,29,2)
(20,18,2)
(20,13,2)
(18,21,2)
(21,1,2)
-----------------------------------
(0,i=0)
(1,10/2)
(2,source:)
(3,10)
(4,double)
(5,10*sizeof(double)
(6,data)
(7,data)
(8,for(i=0; i<(10/2)
(9,i)
(10,i)
(11,i++)
(12,i)
(13,data = (double *)
(14,)
(15,sink:)
(16,data)
(17,(double *)
(18,data[i] = (double)
(19,(double)
(20,data[i])
(21,i<(10/2)
(22,10)
(23,sizeof(double)
(24,i++)
(25,i)
(26,ALLOCA(10*sizeof(double)
(27,)
(28,)
(29,i<10)
(30,i)
(31,i=0)
(32,i)
(33,i)
(34,i)
(35,data[i])
(36,0)
(37,2)
(38,goto sink;)
(39,data)
(40,i)
(41,printDoubleLine(data[i])
(42,)
(43,double *)
(44,0)
(45,10)
(46,i)
(47,)
(48,for(i=0; i<10; i++)
(49,i)
(50,RET)
(51,double)
(52,goto source;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^