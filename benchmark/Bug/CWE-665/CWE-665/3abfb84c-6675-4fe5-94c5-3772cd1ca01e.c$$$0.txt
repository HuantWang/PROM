-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__int_12_bad()
{
    int data;
    if(globalReturnsTrueOrFalse())
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    else
    {
        /* FIX: Initialize data */
        data = 5;
    }
    if(globalReturnsTrueOrFalse())
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        printIntLine(data);
    }
    else
    {
        /* FIX: Ensure data is initialized before use */
        data = 5;
        printIntLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
6,7
7,8
7,9
9,10
11,12
11,13
11,14
12,13
13,14
15,16
17,18
18,19
19,20
19,21
20,21
23,24
23,25
23,26
24,25
25,26
27,28
28,29
29,30
29,31
30,31
32,33
34,35
34,36
35,36
36,37
36,38
37,38
40,41
41,42
41,43
42,43
44,45
-----nextToken-----
2,4,8,10,14,16,21,22,26,31,33,38,39,43,45
-----computeFrom-----
19,20
19,21
36,37
36,38
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;NullStatement;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__int_12_bad(){    int data;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    else    {        /* FIX: Initialize data */        data = 5;    }    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use data without initializing it */        printIntLine(data);    }    else    {        /* FIX: Ensure data is initialized before use */        data = 5;        printIntLine(data);    }}
void
CWE457_Use_of_Uninitialized_Variable__int_12_bad()
CWE457_Use_of_Uninitialized_Variable__int_12_bad
{    int data;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    else    {        /* FIX: Initialize data */        data = 5;    }    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use data without initializing it */        printIntLine(data);    }    else    {        /* FIX: Ensure data is initialized before use */        data = 5;        printIntLine(data);    }}
int data;
int data;
int
data
data
if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    else    {        /* FIX: Initialize data */        data = 5;    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
{        /* FIX: Initialize data */        data = 5;    }
data = 5;
data = 5
data
data
5
if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use data without initializing it */        printIntLine(data);    }    else    {        /* FIX: Ensure data is initialized before use */        data = 5;        printIntLine(data);    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* POTENTIAL FLAW: Use data without initializing it */        printIntLine(data);    }
printIntLine(data);
printIntLine(data)
printIntLine
printIntLine
data
data
{        /* FIX: Ensure data is initialized before use */        data = 5;        printIntLine(data);    }
data = 5;
data = 5
data
data
5
printIntLine(data);
printIntLine(data)
printIntLine
printIntLine
data
data
-----joern-----
(13,18,0)
(0,11,0)
(11,18,0)
(14,19,0)
(18,6,0)
(12,18,0)
(2,14,0)
(11,4,0)
(17,5,0)
(15,19,0)
(7,19,0)
(14,1,0)
(8,5,0)
(19,1,0)
(10,5,0)
(11,18,1)
(15,9,1)
(0,9,1)
(14,2,1)
(2,19,1)
(11,0,1)
(12,3,1)
(7,15,1)
(9,3,1)
(18,13,1)
(16,11,1)
(13,12,1)
(19,7,1)
(16,14,1)
(14,19,1)
(9,18,1)
(15,9,2)
(19,9,2)
(14,19,2)
(2,9,2)
(13,3,2)
(14,9,2)
(11,18,2)
(11,9,2)
(18,3,2)
(7,9,2)
(0,9,2)
(12,3,2)
-----------------------------------
(0,data)
(1,)
(2,data)
(3,globalReturnsTrueOrFalse()
(4,)
(5,)
(6,)
(7,5)
(8,data)
(9,globalReturnsTrueOrFalse()
(10,if(globalReturnsTrueOrFalse()
(11,printIntLine(data)
(12,data)
(13,5)
(14,printIntLine(data)
(15,data)
(16,RET)
(17,if(globalReturnsTrueOrFalse()
(18,data = 5)
(19,data = 5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^