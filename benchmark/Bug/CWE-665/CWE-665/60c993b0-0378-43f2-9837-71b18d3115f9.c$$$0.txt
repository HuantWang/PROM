-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_04_bad()
{
    double * data;
    double dataUninitArray[10];
    data = dataUninitArray;
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
28,29
30,31
30,32
31,32
33,34
34,35
34,36
35,36
36,37
36,38
38,39
40,41
40,42
40,43
40,44
41,42
42,43
42,44
43,44
46,47
46,48
47,48
50,51
51,52
53,54
54,55
55,56
55,57
56,57
58,59
58,60
59,60
61,62
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,27,29,32,37,39,44,45,48,49,52,57,60,62
-----computeFrom-----
20,21
20,22
42,43
42,44
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;NullStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_04_bad(){    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_04_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_04_bad
{    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
double dataUninitArray[10];
double dataUninitArray[10];
double
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(22,0,0)
(11,19,0)
(21,0,0)
(9,14,0)
(14,1,0)
(13,14,0)
(13,25,0)
(1,0,0)
(5,6,0)
(17,1,0)
(14,13,0)
(15,11,0)
(16,1,0)
(23,27,0)
(14,19,0)
(27,12,0)
(3,19,0)
(4,0,0)
(18,27,0)
(10,0,0)
(8,19,0)
(24,14,0)
(6,19,0)
(20,6,0)
(14,1,1)
(9,24,1)
(3,26,1)
(2,26,1)
(14,9,1)
(17,16,1)
(19,8,1)
(1,17,1)
(20,19,1)
(6,19,1)
(5,20,1)
(14,19,1)
(26,7,1)
(11,19,1)
(24,6,1)
(8,3,1)
(15,13,1)
(13,14,1)
(6,5,1)
(11,15,1)
(20,11,1)
(7,1,1)
(2,6,1)
(13,14,2)
(14,6,2)
(14,1,2)
(20,26,2)
(8,26,2)
(11,19,2)
(11,6,2)
(20,6,2)
(9,6,2)
(6,6,2)
(5,6,2)
(14,19,2)
(5,26,2)
(6,19,2)
(24,6,2)
(6,26,2)
(19,26,2)
(3,26,2)
(13,6,2)
(15,6,2)
-----------------------------------
(0,)
(1,data = dataUninitArray)
(2,RET)
(3,i)
(4,if(STATIC_CONST_TRUE)
(5,10)
(6,i<10)
(7,STATIC_CONST_TRUE)
(8,0)
(9,i)
(10,data)
(11,i++)
(12,)
(13,printDoubleLine(data[i])
(14,data[i])
(15,i)
(16,data)
(17,dataUninitArray)
(18,for(i=0; i<10; i++)
(19,i=0)
(20,i)
(21,if(STATIC_CONST_TRUE)
(22,dataUninitArray)
(23,i)
(24,data)
(25,)
(26,STATIC_CONST_TRUE)
(27,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^