-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_16_bad()
{
    twoIntsStruct * data;
    twoIntsStruct dataUninitArray[10];
    data = dataUninitArray;
    while(1)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
        break;
    }
    while(1)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i].intOne);
                printIntLine(data[i].intTwo);
            }
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
17,19
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
29,30
29,31
32,33
32,34
34,35
34,36
35,36
35,37
36,37
37,38
37,39
39,40
41,42
41,43
41,44
41,45
42,43
43,44
43,45
44,45
47,48
47,49
48,49
51,52
52,53
54,55
54,56
55,56
56,57
56,58
57,58
59,60
59,61
60,61
60,62
61,62
63,64
66,67
67,68
67,69
68,69
70,71
70,72
71,72
71,73
72,73
74,75
-----nextToken-----
2,4,9,11,12,16,18,20,24,26,28,30,31,33,38,40,45,46,49,50,53,58,62,64,65,69,73,75,76,77
-----computeFrom-----
22,23
22,24
43,44
43,45
47,48
47,49
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;NullStatement;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;BreakStatement;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_16_bad(){    twoIntsStruct * data;    twoIntsStruct dataUninitArray[10];    data = dataUninitArray;    while(1)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    }    while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }        break;    }}
void
CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_16_bad()
CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_16_bad
{    twoIntsStruct * data;    twoIntsStruct dataUninitArray[10];    data = dataUninitArray;    while(1)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    }    while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }        break;    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
twoIntsStruct dataUninitArray[10];
twoIntsStruct dataUninitArray[10];
twoIntsStruct
twoIntsStruct
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
while(1)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    }
1
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    }
;
break;
while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }        break;    }
1
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }        break;    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
printIntLine(data[i].intOne);
printIntLine(data[i].intOne)
printIntLine
printIntLine
data[i].intOne
data[i]
data
data
i
i
intOne
printIntLine(data[i].intTwo);
printIntLine(data[i].intTwo)
printIntLine
printIntLine
data[i].intTwo
data[i]
data
data
i
i
intTwo
break;
-----joern-----
(24,19,0)
(30,21,0)
(16,4,0)
(4,16,0)
(35,14,0)
(32,13,0)
(0,26,0)
(7,19,0)
(10,36,0)
(7,35,0)
(5,13,0)
(19,7,0)
(21,16,0)
(37,28,0)
(29,36,0)
(11,16,0)
(21,36,0)
(31,7,0)
(9,10,0)
(22,19,0)
(35,7,0)
(1,21,0)
(21,26,0)
(16,21,0)
(23,15,0)
(15,28,0)
(18,26,0)
(34,36,0)
(25,13,0)
(33,36,0)
(6,17,0)
(4,14,0)
(12,15,0)
(19,26,0)
(26,13,0)
(8,13,0)
(38,34,0)
(3,10,0)
(19,36,0)
(24,22,1)
(22,10,1)
(27,20,1)
(21,36,1)
(33,27,1)
(21,26,1)
(2,27,1)
(27,6,1)
(21,1,1)
(10,3,1)
(9,34,1)
(34,38,1)
(16,11,1)
(29,33,1)
(19,26,1)
(20,26,1)
(38,4,1)
(4,16,1)
(9,36,1)
(16,21,1)
(19,36,1)
(2,37,1)
(11,21,1)
(36,29,1)
(3,9,1)
(7,19,1)
(26,0,1)
(19,24,1)
(10,36,1)
(7,31,1)
(0,18,1)
(34,36,1)
(35,7,1)
(1,30,1)
(6,20,1)
(37,10,1)
(31,19,1)
(30,35,1)
(34,36,2)
(3,27,2)
(19,10,2)
(9,10,2)
(24,10,2)
(3,10,2)
(31,10,2)
(38,10,2)
(21,26,2)
(22,10,2)
(16,10,2)
(21,10,2)
(35,7,2)
(4,16,2)
(10,27,2)
(16,21,2)
(36,27,2)
(34,10,2)
(33,27,2)
(19,36,2)
(21,36,2)
(19,26,2)
(30,10,2)
(10,36,2)
(7,10,2)
(9,27,2)
(35,10,2)
(1,10,2)
(7,19,2)
(37,27,2)
(10,10,2)
(29,27,2)
(4,10,2)
(6,20,2)
(11,10,2)
-----------------------------------
(0,dataUninitArray)
(1,i)
(2,RET)
(3,10)
(4,printIntLine(data[i].intTwo)
(5,while(1)
(6,break;)
(7,data[i].intOne)
(8,data)
(9,i)
(10,i<10)
(11,intTwo)
(12,for(i=0; i<10; i++)
(13,)
(14,)
(15,)
(16,data[i].intTwo)
(17,)
(18,data)
(19,data[i])
(20,1)
(21,data[i])
(22,data)
(23,i)
(24,i)
(25,dataUninitArray)
(26,data = dataUninitArray)
(27,1)
(28,)
(29,0)
(30,data)
(31,intOne)
(32,while(1)
(33,i)
(34,i++)
(35,printIntLine(data[i].intOne)
(36,i=0)
(37,break;)
(38,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^