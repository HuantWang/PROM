-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_09_bad()
{
    double * data;
    double dataUninitArray[10];
    data = dataUninitArray;
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
28,29
30,31
30,32
31,32
33,34
34,35
34,36
35,36
36,37
36,38
38,39
40,41
40,42
40,43
40,44
41,42
42,43
42,44
43,44
46,47
46,48
47,48
50,51
51,52
53,54
54,55
55,56
55,57
56,57
58,59
58,60
59,60
61,62
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,27,29,32,37,39,44,45,48,49,52,57,60,62
-----computeFrom-----
20,21
20,22
42,43
42,44
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;NullStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_09_bad(){    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_09_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_09_bad
{    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
double dataUninitArray[10];
double dataUninitArray[10];
double
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(10,4,0)
(21,1,0)
(18,25,0)
(16,25,0)
(19,2,0)
(0,17,0)
(22,10,0)
(11,1,0)
(12,25,0)
(5,25,0)
(1,11,0)
(7,2,0)
(27,10,0)
(8,17,0)
(15,25,0)
(20,16,0)
(1,2,0)
(6,2,0)
(23,7,0)
(3,1,0)
(11,14,0)
(1,16,0)
(13,16,0)
(17,2,0)
(8,7,1)
(24,16,1)
(6,9,1)
(1,16,1)
(26,17,1)
(1,21,1)
(17,2,1)
(26,9,1)
(7,23,1)
(20,13,1)
(23,11,1)
(3,17,1)
(1,2,1)
(0,8,1)
(19,6,1)
(9,24,1)
(17,0,1)
(7,2,1)
(21,3,1)
(8,2,1)
(16,20,1)
(2,19,1)
(11,1,1)
(7,17,2)
(2,9,2)
(8,9,2)
(1,2,2)
(0,17,2)
(0,9,2)
(17,2,2)
(19,9,2)
(1,16,2)
(3,17,2)
(11,1,2)
(23,17,2)
(6,9,2)
(17,9,2)
(21,17,2)
(7,2,2)
(8,17,2)
(17,17,2)
(1,17,2)
(11,17,2)
-----------------------------------
(0,10)
(1,data[i])
(2,i=0)
(3,data)
(4,)
(5,dataUninitArray)
(6,i)
(7,i++)
(8,i)
(9,GLOBAL_CONST_TRUE)
(10,)
(11,printDoubleLine(data[i])
(12,if(GLOBAL_CONST_TRUE)
(13,data)
(14,)
(15,data)
(16,data = dataUninitArray)
(17,i<10)
(18,if(GLOBAL_CONST_TRUE)
(19,0)
(20,dataUninitArray)
(21,i)
(22,for(i=0; i<10; i++)
(23,i)
(24,GLOBAL_CONST_TRUE)
(25,)
(26,RET)
(27,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^