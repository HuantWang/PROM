-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_18_bad()
{
    int * data;
    data = (int *)ALLOCA(10*sizeof(int));
    goto source;
source:
    /* POTENTIAL FLAW: Don't initialize data */
    ; /* empty statement needed for some flow variants */
    goto sink;
sink:
    /* POTENTIAL FLAW: Use data without initializing it */
    {
        int i;
        for(i=0; i<10; i++)
        {
            printIntLine(data[i]);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
32,33
32,34
35,36
37,38
37,39
39,40
39,41
40,41
41,42
41,43
43,44
45,46
45,47
45,48
45,49
46,47
47,48
47,49
48,49
51,52
51,53
52,53
55,56
56,57
58,59
59,60
60,61
60,62
61,62
63,64
63,65
64,65
66,67
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,31,33,34,36,38,42,44,49,50,53,54,57,62,65,67
-----computeFrom-----
13,14
13,15
24,25
24,26
47,48
47,49
51,52
51,53
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;GotoStatement;Name;LabelStatement;Name;NullStatement;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_18_bad(){    int * data;    data = (int *)ALLOCA(10*sizeof(int));    goto source;source:    /* POTENTIAL FLAW: Don't initialize data */    ; /* empty statement needed for some flow variants */    goto sink;sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i]);        }    }}
void
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_18_bad()
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_18_bad
{    int * data;    data = (int *)ALLOCA(10*sizeof(int));    goto source;source:    /* POTENTIAL FLAW: Don't initialize data */    ; /* empty statement needed for some flow variants */    goto sink;sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i]);        }    }}
int * data;
int * data;
int
* data
*
data
data = (int *)ALLOCA(10*sizeof(int));
data = (int *)ALLOCA(10*sizeof(int))
data
data
(int *)ALLOCA(10*sizeof(int))
int *
int
*
*
ALLOCA(10*sizeof(int))
ALLOCA
ALLOCA
10*sizeof(int)
10
sizeof(int)
int
int

goto source;
source
source:    /* POTENTIAL FLAW: Don't initialize data */    ;
source
;
goto sink;
sink
sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i]);        }    }
sink
{        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i]);        }    }
int i;
int i;
int
i
i
for(i=0; i<10; i++)        {            printIntLine(data[i]);        }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{            printIntLine(data[i]);        }
printIntLine(data[i]);
printIntLine(data[i])
printIntLine
printIntLine
data[i]
data
data
i
i
-----joern-----
(4,3,0)
(24,3,0)
(29,1,0)
(7,20,0)
(21,20,0)
(6,9,0)
(9,20,0)
(8,29,0)
(29,8,0)
(9,6,0)
(14,2,0)
(9,10,0)
(5,3,0)
(28,1,0)
(26,7,0)
(0,28,0)
(13,1,0)
(1,28,0)
(8,10,0)
(12,20,0)
(6,15,0)
(17,8,0)
(18,3,0)
(1,29,0)
(30,20,0)
(2,3,0)
(11,3,0)
(19,9,0)
(8,17,0)
(23,9,0)
(10,8,0)
(16,10,0)
(25,12,0)
(10,3,0)
(31,2,0)
(22,12,0)
(9,10,1)
(25,22,1)
(20,21,1)
(29,1,1)
(7,20,1)
(7,26,1)
(8,29,1)
(8,17,1)
(11,10,1)
(13,16,1)
(19,23,1)
(26,6,1)
(9,19,1)
(9,20,1)
(28,0,1)
(0,13,1)
(30,18,1)
(22,7,1)
(27,12,1)
(22,20,1)
(6,9,1)
(18,11,1)
(10,8,1)
(12,25,1)
(1,28,1)
(23,12,1)
(21,30,1)
(12,20,1)
(12,12,2)
(6,12,2)
(12,20,2)
(25,12,2)
(7,12,2)
(29,1,2)
(22,12,2)
(7,20,2)
(9,10,2)
(8,17,2)
(9,20,2)
(19,12,2)
(6,9,2)
(23,12,2)
(8,29,2)
(10,8,2)
(26,12,2)
(1,28,2)
(9,12,2)
-----------------------------------
(0,int)
(1,10*sizeof(int)
(2,)
(3,)
(4,sink:)
(5,source:)
(6,printIntLine(data[i])
(7,i++)
(8,(int *)
(9,data[i])
(10,data = (int *)
(11,goto source;)
(12,i<10)
(13,10)
(14,i)
(15,)
(16,data)
(17,int *)
(18,goto sink;)
(19,i)
(20,i=0)
(21,0)
(22,i)
(23,data)
(24,data)
(25,10)
(26,i)
(27,RET)
(28,sizeof(int)
(29,ALLOCA(10*sizeof(int)
(30,i)
(31,for(i=0; i<10; i++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^