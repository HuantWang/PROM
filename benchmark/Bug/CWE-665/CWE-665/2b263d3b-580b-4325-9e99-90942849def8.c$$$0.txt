-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_18_bad()
{
    twoIntsStruct * data;
    twoIntsStruct dataUninitArray[10];
    data = dataUninitArray;
    goto source;
source:
    /* POTENTIAL FLAW: Partially initialize data */
    {
        int i;
        for(i=0; i<(10/2); i++)
        {
            data[i].intOne = i;
            data[i].intTwo = i;
        }
    }
    goto sink;
sink:
    /* POTENTIAL FLAW: Use data without initializing it */
    {
        int i;
        for(i=0; i<10; i++)
        {
            printIntLine(data[i].intOne);
            printIntLine(data[i].intTwo);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
17,19
19,20
21,22
22,23
22,24
23,24
25,26
27,28
29,30
29,31
31,32
31,33
32,33
33,34
33,35
35,36
37,38
37,39
37,40
37,41
38,39
39,40
39,41
40,41
43,44
43,45
44,45
46,47
47,48
47,49
50,51
51,52
53,54
53,55
54,55
55,56
55,57
56,57
56,58
57,58
57,59
58,59
60,61
63,64
65,66
66,67
66,68
67,68
67,69
68,69
68,70
69,70
71,72
74,75
76,77
78,79
78,80
80,81
80,82
81,82
82,83
82,84
84,85
86,87
86,88
86,89
86,90
87,88
88,89
88,90
89,90
92,93
92,94
93,94
96,97
97,98
99,100
99,101
100,101
101,102
101,103
102,103
104,105
104,106
105,106
105,107
106,107
108,109
111,112
112,113
112,114
113,114
115,116
115,117
116,117
116,118
117,118
119,120
-----nextToken-----
2,4,9,11,12,16,18,20,24,26,28,30,34,36,41,42,45,48,49,52,59,61,62,64,70,72,73,75,77,79,83,85,90,91,94,95,98,103,107,109,110,114,118,120,121
-----computeFrom-----
22,23
22,24
39,40
39,41
43,44
43,45
47,48
47,49
55,56
55,57
66,67
66,68
88,89
88,90
92,93
92,94
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_18_bad(){    twoIntsStruct * data;    twoIntsStruct dataUninitArray[10];    data = dataUninitArray;    goto source;source:    /* POTENTIAL FLAW: Partially initialize data */    {        int i;        for(i=0; i<(10/2); i++)        {            data[i].intOne = i;            data[i].intTwo = i;        }    }    goto sink;sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i].intOne);            printIntLine(data[i].intTwo);        }    }}
void
CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_18_bad()
CWE457_Use_of_Uninitialized_Variable__struct_array_declare_partial_init_18_bad
{    twoIntsStruct * data;    twoIntsStruct dataUninitArray[10];    data = dataUninitArray;    goto source;source:    /* POTENTIAL FLAW: Partially initialize data */    {        int i;        for(i=0; i<(10/2); i++)        {            data[i].intOne = i;            data[i].intTwo = i;        }    }    goto sink;sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i].intOne);            printIntLine(data[i].intTwo);        }    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
twoIntsStruct dataUninitArray[10];
twoIntsStruct dataUninitArray[10];
twoIntsStruct
twoIntsStruct
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
goto source;
source
source:    /* POTENTIAL FLAW: Partially initialize data */    {        int i;        for(i=0; i<(10/2); i++)        {            data[i].intOne = i;            data[i].intTwo = i;        }    }
source
{        int i;        for(i=0; i<(10/2); i++)        {            data[i].intOne = i;            data[i].intTwo = i;        }    }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)        {            data[i].intOne = i;            data[i].intTwo = i;        }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{            data[i].intOne = i;            data[i].intTwo = i;        }
data[i].intOne = i;
data[i].intOne = i
data[i].intOne
data[i]
data
data
i
i
intOne
i
i
data[i].intTwo = i;
data[i].intTwo = i
data[i].intTwo
data[i]
data
data
i
i
intTwo
i
i
goto sink;
sink
sink:    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i].intOne);            printIntLine(data[i].intTwo);        }    }
sink
{        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i].intOne);            printIntLine(data[i].intTwo);        }    }
int i;
int i;
int
i
i
for(i=0; i<10; i++)        {            printIntLine(data[i].intOne);            printIntLine(data[i].intTwo);        }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{            printIntLine(data[i].intOne);            printIntLine(data[i].intTwo);        }
printIntLine(data[i].intOne);
printIntLine(data[i].intOne)
printIntLine
printIntLine
data[i].intOne
data[i]
data
data
i
i
intOne
printIntLine(data[i].intTwo);
printIntLine(data[i].intTwo)
printIntLine
printIntLine
data[i].intTwo
data[i]
data
data
i
i
intTwo
-----joern-----
(48,47,0)
(17,47,0)
(49,37,0)
(5,58,0)
(9,28,0)
(5,14,0)
(28,36,0)
(22,40,0)
(62,14,0)
(3,30,0)
(45,61,0)
(31,33,0)
(23,47,0)
(54,44,0)
(10,47,0)
(38,14,0)
(56,41,0)
(18,4,0)
(22,62,0)
(37,6,0)
(8,37,0)
(36,20,0)
(36,28,0)
(61,2,0)
(26,6,0)
(12,47,0)
(2,47,0)
(40,0,0)
(52,17,0)
(27,62,0)
(7,61,0)
(20,41,0)
(50,14,0)
(35,30,0)
(37,44,0)
(58,5,0)
(37,2,0)
(25,4,0)
(13,62,0)
(28,6,0)
(42,58,0)
(46,47,0)
(62,2,0)
(44,40,0)
(39,5,0)
(59,31,0)
(44,56,0)
(11,2,0)
(16,38,0)
(34,47,0)
(28,2,0)
(31,61,0)
(61,14,0)
(21,17,0)
(53,2,0)
(56,44,0)
(55,28,0)
(4,47,0)
(19,36,0)
(57,15,0)
(30,6,0)
(20,36,0)
(51,14,0)
(44,37,0)
(36,33,0)
(62,22,0)
(29,40,0)
(32,6,0)
(43,58,0)
(15,6,0)
(24,33,0)
(40,14,0)
(33,14,0)
(33,0,0)
(61,31,0)
(1,22,0)
(32,23,1)
(58,43,1)
(40,14,1)
(36,19,1)
(28,6,1)
(22,62,1)
(55,9,1)
(53,11,1)
(5,14,1)
(44,54,1)
(61,2,1)
(33,24,1)
(15,6,1)
(1,62,1)
(35,6,1)
(62,27,1)
(36,33,1)
(61,45,1)
(6,26,1)
(36,28,1)
(2,53,1)
(62,2,1)
(57,56,1)
(39,38,1)
(43,42,1)
(37,6,1)
(8,49,1)
(37,8,1)
(49,20,1)
(62,14,1)
(40,29,1)
(20,36,1)
(3,35,1)
(54,37,1)
(28,2,1)
(51,34,1)
(42,39,1)
(60,30,1)
(35,15,1)
(31,59,1)
(22,1,1)
(27,13,1)
(24,31,1)
(29,22,1)
(5,58,1)
(14,50,1)
(45,7,1)
(7,5,1)
(30,3,1)
(33,14,1)
(44,40,1)
(19,28,1)
(34,2,1)
(38,14,1)
(30,6,1)
(16,40,1)
(15,57,1)
(38,16,1)
(44,37,1)
(39,14,1)
(61,14,1)
(9,30,1)
(56,44,1)
(37,2,1)
(28,55,1)
(50,51,1)
(26,32,1)
(23,5,1)
(59,61,1)
(31,61,1)
(13,33,1)
(22,62,2)
(57,30,2)
(40,14,2)
(44,37,2)
(36,30,2)
(28,2,2)
(61,14,2)
(56,44,2)
(1,5,2)
(56,30,2)
(61,5,2)
(38,14,2)
(37,6,2)
(59,5,2)
(5,58,2)
(16,5,2)
(22,5,2)
(62,2,2)
(5,5,2)
(13,5,2)
(19,30,2)
(44,30,2)
(30,6,2)
(5,14,2)
(37,2,2)
(36,28,2)
(28,30,2)
(31,61,2)
(33,5,2)
(33,14,2)
(15,6,2)
(45,5,2)
(62,14,2)
(61,2,2)
(37,30,2)
(15,30,2)
(7,5,2)
(55,30,2)
(3,30,2)
(31,5,2)
(20,36,2)
(39,5,2)
(8,30,2)
(42,5,2)
(30,30,2)
(49,30,2)
(29,5,2)
(44,40,2)
(58,5,2)
(43,5,2)
(24,5,2)
(40,5,2)
(54,30,2)
(9,30,2)
(20,30,2)
(28,6,2)
(62,5,2)
(38,5,2)
(35,30,2)
(27,5,2)
(36,33,2)
-----------------------------------
(0,)
(1,intTwo)
(2,data = dataUninitArray)
(3,10)
(4,)
(5,i<(10/2)
(6,i=0)
(7,data)
(8,i)
(9,data)
(10,sink:)
(11,data)
(12,data)
(13,data)
(14,i=0)
(15,i++)
(16,i)
(17,)
(18,i)
(19,intOne)
(20,printIntLine(data[i].intOne)
(21,i)
(22,data[i].intTwo)
(23,goto sink;)
(24,i)
(25,for(i=0; i<(10/2)
(26,0)
(27,i)
(28,data[i])
(29,i)
(30,i<10)
(31,data[i].intOne)
(32,i)
(33,data[i].intOne = i)
(34,goto source;)
(35,i)
(36,data[i].intOne)
(37,data[i])
(38,i++)
(39,i)
(40,data[i].intTwo = i)
(41,)
(42,10)
(43,2)
(44,data[i].intTwo)
(45,i)
(46,dataUninitArray)
(47,)
(48,source:)
(49,data)
(50,0)
(51,i)
(52,for(i=0; i<10; i++)
(53,dataUninitArray)
(54,intTwo)
(55,i)
(56,printIntLine(data[i].intTwo)
(57,i)
(58,10/2)
(59,intOne)
(60,RET)
(61,data[i])
(62,data[i])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^