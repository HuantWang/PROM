-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_63b_badSink(int * * dataPtr)
{
    int * data = *dataPtr;
    /* POTENTIAL FLAW: Use data without initializing it */
    {
        int i;
        for(i=0; i<10; i++)
        {
            printIntLine(data[i]);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
20,21
22,23
22,24
23,24
24,25
24,26
26,27
28,29
28,30
28,31
28,32
29,30
30,31
30,32
31,32
34,35
34,36
35,36
38,39
39,40
41,42
42,43
43,44
43,45
44,45
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,25,27,32,33,36,37,40,45,48,50
-----computeFrom-----
30,31
30,32
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_63b_badSink(int * * dataPtr){    int * data = *dataPtr;    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i]);        }    }}
void
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_63b_badSink(int * * dataPtr)
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_63b_badSink
int * * dataPtr
int
* * dataPtr
*
*
dataPtr
{    int * data = *dataPtr;    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i]);        }    }}
int * data = *dataPtr;
int * data = *dataPtr;
int
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        int i;        for(i=0; i<10; i++)        {            printIntLine(data[i]);        }    }
int i;
int i;
int
i
i
for(i=0; i<10; i++)        {            printIntLine(data[i]);        }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{            printIntLine(data[i]);        }
printIntLine(data[i]);
printIntLine(data[i])
printIntLine
printIntLine
data[i]
data
data
i
i
-----joern-----
(20,4,0)
(18,10,0)
(10,1,0)
(13,4,0)
(10,3,0)
(16,2,0)
(0,3,0)
(9,2,0)
(17,0,0)
(0,2,0)
(12,0,0)
(6,5,0)
(11,15,0)
(7,0,0)
(14,5,0)
(5,2,0)
(15,2,0)
(8,20,0)
(0,12,0)
(12,23,0)
(19,20,0)
(3,4,0)
(3,10,0)
(22,3,0)
(5,2,1)
(11,12,1)
(10,1,1)
(16,3,1)
(15,2,1)
(9,16,1)
(21,5,1)
(7,17,1)
(15,11,1)
(2,9,1)
(6,2,1)
(6,15,1)
(10,18,1)
(3,10,1)
(0,3,1)
(0,2,1)
(0,7,1)
(14,6,1)
(12,0,1)
(18,22,1)
(5,14,1)
(17,5,1)
(15,2,2)
(5,5,2)
(15,5,2)
(5,2,2)
(6,5,2)
(3,10,2)
(12,5,2)
(7,5,2)
(0,5,2)
(14,5,2)
(11,5,2)
(10,1,2)
(0,3,2)
(12,0,2)
(0,2,2)
(17,5,2)
-----------------------------------
(0,data[i])
(1,int * * dataPtr)
(2,i=0)
(3,* data = *dataPtr)
(4,)
(5,i<10)
(6,i)
(7,i)
(8,i)
(9,0)
(10,*dataPtr)
(11,i)
(12,printIntLine(data[i])
(13,data)
(14,10)
(15,i++)
(16,i)
(17,data)
(18,dataPtr)
(19,for(i=0; i<10; i++)
(20,)
(21,RET)
(22,data)
(23,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^