-----label-----
1
-----code-----
void CWE665_Improper_Initialization__char_cat_17_bad()
{
    int i;
    char * data;
    char dataBuffer[100];
    data = dataBuffer;
    for(i = 0; i < 1; i++)
    {
        /* FLAW: Do not initialize data */
        ; /* empty statement needed for some flow variants */
    }
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */
        strcat(data, source);
        printLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
17,18
18,19
18,20
20,21
20,22
22,23
24,25
25,26
25,27
26,27
28,29
30,31
30,32
30,33
30,34
31,32
32,33
32,34
33,34
36,37
36,38
37,38
40,41
41,42
43,44
45,46
45,47
45,48
45,49
45,50
46,47
47,48
47,49
49,50
49,51
51,52
53,54
54,55
54,56
54,57
54,58
55,56
57,58
60,61
60,62
63,64
64,65
64,66
65,66
65,67
66,67
68,69
68,70
72,73
73,74
73,75
73,76
74,75
76,77
78,79
80,81
81,82
81,83
82,83
84,85
-----nextToken-----
2,4,8,10,13,15,16,19,21,23,27,29,34,35,38,39,42,44,48,50,52,56,58,59,61,62,67,69,70,71,75,77,79,83,85
-----computeFrom-----
25,26
25,27
32,33
32,34
36,37
36,38
60,61
60,62
64,65
64,66
68,69
68,70
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;NullStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__char_cat_17_bad(){    int i;    char * data;    char dataBuffer[100];    data = dataBuffer;    for(i = 0; i < 1; i++)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */        strcat(data, source);        printLine(data);    }}
void
CWE665_Improper_Initialization__char_cat_17_bad()
CWE665_Improper_Initialization__char_cat_17_bad
{    int i;    char * data;    char dataBuffer[100];    data = dataBuffer;    for(i = 0; i < 1; i++)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */        strcat(data, source);        printLine(data);    }}
int i;
int i;
int
i
i
char * data;
char * data;
char
* data
*
data
char dataBuffer[100];
char dataBuffer[100];
char
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
for(i = 0; i < 1; i++)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
;
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */        strcat(data, source);        printLine(data);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
strcat(data, source);
strcat(data, source)
strcat
strcat
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(10,25,0)
(27,25,0)
(0,34,0)
(29,19,0)
(35,8,0)
(8,7,0)
(19,25,0)
(26,11,0)
(32,25,0)
(1,2,0)
(28,29,0)
(17,25,0)
(2,34,0)
(34,31,0)
(6,19,0)
(3,22,0)
(16,17,0)
(7,8,0)
(33,7,0)
(4,29,0)
(30,22,0)
(29,17,0)
(23,7,0)
(31,17,0)
(24,22,0)
(5,19,0)
(21,25,0)
(8,17,0)
(20,8,0)
(13,9,0)
(11,19,0)
(18,9,0)
(11,17,0)
(15,2,0)
(9,22,0)
(14,3,0)
(34,2,0)
(36,31,0)
(29,4,1)
(7,23,1)
(30,24,1)
(28,31,1)
(23,33,1)
(6,5,1)
(9,22,1)
(13,3,1)
(11,26,1)
(26,29,1)
(3,14,1)
(31,36,1)
(33,35,1)
(15,1,1)
(18,13,1)
(22,30,1)
(36,34,1)
(3,22,1)
(2,15,1)
(24,19,1)
(14,9,1)
(4,28,1)
(0,8,1)
(12,11,1)
(9,18,1)
(34,2,1)
(11,19,1)
(13,22,1)
(35,20,1)
(8,7,1)
(29,19,1)
(1,0,1)
(20,9,1)
(19,6,1)
(9,9,2)
(3,9,2)
(11,19,2)
(9,22,2)
(13,9,2)
(8,7,2)
(34,2,2)
(18,9,2)
(14,9,2)
(3,22,2)
(29,19,2)
-----------------------------------
(0,source)
(1,100)
(2,100-1)
(3,i++)
(4,source)
(5,data)
(6,dataBuffer)
(7,100-1)
(8,memset(source, 'C', 100-1)
(9,i < 1)
(10,for(i = 0; i < 1; i++)
(11,printLine(data)
(12,RET)
(13,i)
(14,i)
(15,1)
(16,source)
(17,)
(18,1)
(19,data = dataBuffer)
(20,source)
(21,dataBuffer)
(22,i = 0)
(23,1)
(24,i)
(25,)
(26,data)
(27,i)
(28,data)
(29,strcat(data, source)
(30,0)
(31,source[100-1] = '\\0')
(32,data)
(33,100)
(34,source[100-1])
(35,'C')
(36,'\\0')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^