-----label-----
1
-----code-----
void CWE665_Improper_Initialization__wchar_t_ncat_31_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100];
    data = dataBuffer;
    /* FLAW: Do not initialize data */
    ; /* empty statement needed for some flow variants */
    {
        wchar_t * dataCopy = data;
        wchar_t * data = dataCopy;
        {
            size_t sourceLen;
            wchar_t source[100];
            wmemset(source, L'C', 100-1); /* fill with L'C's */
            source[100-1] = L'\0'; /* null terminate */
            sourceLen = wcslen(source);
            /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */
            wcsncat(data, source, sourceLen);
            printWLine(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
26,27
26,28
26,29
27,28
28,29
28,30
30,31
30,32
30,33
33,34
34,35
36,37
37,38
37,39
39,40
39,41
39,42
42,43
43,44
45,46
45,47
45,48
45,49
45,50
45,51
45,52
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
55,56
55,57
57,58
59,60
60,61
60,62
60,63
60,64
61,62
63,64
66,67
66,68
69,70
70,71
70,72
71,72
71,73
72,73
74,75
74,76
78,79
79,80
79,81
80,81
82,83
82,84
83,84
85,86
87,88
88,89
88,90
88,91
88,92
89,90
91,92
93,94
95,96
97,98
98,99
98,100
99,100
101,102
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,25,29,31,32,35,38,40,41,44,49,51,54,56,58,62,64,65,67,68,73,75,76,77,81,84,86,90,92,94,96,100,102
-----computeFrom-----
20,21
20,22
66,67
66,68
70,71
70,72
74,75
74,76
79,80
79,81
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;NullStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__wchar_t_ncat_31_bad(){    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    /* FLAW: Do not initialize data */    ; /* empty statement needed for some flow variants */    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            size_t sourceLen;            wchar_t source[100];            wmemset(source, L'C', 100-1); /* fill with L'C's */            source[100-1] = L'\0'; /* null terminate */            sourceLen = wcslen(source);            /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */            wcsncat(data, source, sourceLen);            printWLine(data);        }    }}
void
CWE665_Improper_Initialization__wchar_t_ncat_31_bad()
CWE665_Improper_Initialization__wchar_t_ncat_31_bad
{    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    /* FLAW: Do not initialize data */    ; /* empty statement needed for some flow variants */    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            size_t sourceLen;            wchar_t source[100];            wmemset(source, L'C', 100-1); /* fill with L'C's */            source[100-1] = L'\0'; /* null terminate */            sourceLen = wcslen(source);            /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */            wcsncat(data, source, sourceLen);            printWLine(data);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100];
wchar_t dataBuffer[100];
wchar_t
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
;
{        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            size_t sourceLen;            wchar_t source[100];            wmemset(source, L'C', 100-1); /* fill with L'C's */            source[100-1] = L'\0'; /* null terminate */            sourceLen = wcslen(source);            /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */            wcsncat(data, source, sourceLen);            printWLine(data);        }    }
wchar_t * dataCopy = data;
wchar_t * dataCopy = data;
wchar_t
* dataCopy = data
*
dataCopy
= data
data
data
wchar_t * data = dataCopy;
wchar_t * data = dataCopy;
wchar_t
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
{            size_t sourceLen;            wchar_t source[100];            wmemset(source, L'C', 100-1); /* fill with L'C's */            source[100-1] = L'\0'; /* null terminate */            sourceLen = wcslen(source);            /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */            wcsncat(data, source, sourceLen);            printWLine(data);        }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
sourceLen = wcslen(source);
sourceLen = wcslen(source)
sourceLen
sourceLen
wcslen(source)
wcslen
wcslen
source
source
wcsncat(data, source, sourceLen);
wcsncat(data, source, sourceLen)
wcsncat
wcsncat
data
data
source
source
sourceLen
sourceLen
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(9,7,0)
(26,13,0)
(7,5,0)
(19,13,0)
(0,25,0)
(24,5,0)
(12,20,0)
(21,0,0)
(25,13,0)
(3,24,0)
(24,3,0)
(17,27,0)
(11,25,0)
(4,0,0)
(22,27,0)
(27,5,0)
(18,5,0)
(10,0,0)
(6,21,0)
(23,25,0)
(27,21,0)
(7,21,0)
(15,20,0)
(0,20,0)
(14,27,0)
(20,13,0)
(28,21,0)
(16,24,0)
(27,24,0)
(8,3,0)
(29,5,0)
(1,5,0)
(21,20,0)
(5,20,0)
(27,22,1)
(16,29,1)
(4,25,1)
(21,28,1)
(2,7,1)
(17,14,1)
(9,27,1)
(0,10,1)
(3,8,1)
(14,24,1)
(23,11,1)
(21,0,1)
(10,4,1)
(0,25,1)
(29,21,1)
(7,21,1)
(28,6,1)
(6,0,1)
(24,3,1)
(27,21,1)
(27,24,1)
(25,23,1)
(7,9,1)
(22,17,1)
(8,16,1)
(24,3,2)
(7,21,2)
(0,25,2)
(27,24,2)
(27,21,2)
(21,0,2)
-----------------------------------
(0,* dataCopy = data)
(1,source)
(2,RET)
(3,wcslen(source)
(4,dataCopy)
(5,)
(6,data)
(7,printWLine(data)
(8,source)
(9,data)
(10,data)
(11,data)
(12,dataCopy)
(13,)
(14,data)
(15,data)
(16,sourceLen)
(17,source)
(18,sourceLen)
(19,data)
(20,)
(21,* data = dataCopy)
(22,sourceLen)
(23,dataBuffer)
(24,sourceLen = wcslen(source)
(25,data = dataBuffer)
(26,dataBuffer)
(27,wcsncat(data, source, sourceLen)
(28,dataCopy)
(29,'\\0')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^