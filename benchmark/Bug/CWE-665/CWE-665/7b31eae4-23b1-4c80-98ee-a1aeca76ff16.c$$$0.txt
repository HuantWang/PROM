-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_17_bad()
{
    int i,j;
    twoIntsStruct * data;
    twoIntsStruct dataUninitArray[10];
    data = dataUninitArray;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    for(j = 0; j < 1; j++)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i].intOne);
                printIntLine(data[i].intTwo);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
15,16
17,18
17,19
20,21
21,22
21,23
22,23
24,25
24,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
34,36
34,37
34,38
35,36
36,37
36,38
37,38
40,41
40,42
41,42
44,45
45,46
47,48
49,50
49,51
49,52
49,53
50,51
51,52
51,53
52,53
55,56
55,57
56,57
59,60
60,61
62,63
63,64
63,65
64,65
65,66
65,67
67,68
69,70
69,71
69,72
69,73
70,71
71,72
71,73
72,73
75,76
75,77
76,77
79,80
80,81
82,83
82,84
83,84
84,85
84,86
85,86
87,88
87,89
88,89
88,90
89,90
91,92
94,95
95,96
95,97
96,97
98,99
98,100
99,100
99,101
100,101
102,103
-----nextToken-----
2,4,8,10,12,16,18,19,23,25,27,31,33,38,39,42,43,46,48,53,54,57,58,61,66,68,73,74,77,78,81,86,90,92,93,97,101,103,104
-----computeFrom-----
29,30
29,31
36,37
36,38
40,41
40,42
51,52
51,53
55,56
55,57
71,72
71,73
75,76
75,77
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;NullStatement;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_17_bad(){    int i,j;    twoIntsStruct * data;    twoIntsStruct dataUninitArray[10];    data = dataUninitArray;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_17_bad()
CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_17_bad
{    int i,j;    twoIntsStruct * data;    twoIntsStruct dataUninitArray[10];    data = dataUninitArray;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }}
int i,j;
int i,j;
int
i
i
j
j
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
twoIntsStruct dataUninitArray[10];
twoIntsStruct dataUninitArray[10];
twoIntsStruct
twoIntsStruct
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
printIntLine(data[i].intOne);
printIntLine(data[i].intOne)
printIntLine
printIntLine
data[i].intOne
data[i]
data
data
i
i
intOne
printIntLine(data[i].intTwo);
printIntLine(data[i].intTwo)
printIntLine
printIntLine
data[i].intTwo
data[i]
data
data
i
i
intTwo
-----joern-----
(40,17,0)
(10,46,0)
(8,38,0)
(9,32,0)
(49,36,0)
(27,46,0)
(20,17,0)
(28,26,0)
(35,44,0)
(47,38,0)
(0,10,0)
(24,19,0)
(5,22,0)
(1,0,0)
(33,42,0)
(16,50,0)
(25,21,0)
(34,46,0)
(23,17,0)
(41,21,0)
(7,51,0)
(32,45,0)
(30,10,0)
(10,19,0)
(37,17,0)
(10,0,0)
(36,19,0)
(6,7,0)
(4,36,0)
(28,0,0)
(46,17,0)
(3,22,0)
(45,32,0)
(43,50,0)
(0,28,0)
(45,26,0)
(21,46,0)
(11,5,0)
(14,17,0)
(21,32,0)
(29,10,0)
(50,42,0)
(32,21,0)
(2,17,0)
(13,22,0)
(38,22,0)
(48,7,0)
(12,19,0)
(44,42,0)
(39,19,0)
(21,19,0)
(18,42,0)
(31,39,0)
(21,41,1)
(31,28,1)
(21,46,1)
(13,3,1)
(24,50,1)
(11,38,1)
(3,46,1)
(41,25,1)
(9,21,1)
(44,35,1)
(8,47,1)
(39,19,1)
(28,0,1)
(0,10,1)
(10,46,1)
(25,36,1)
(4,19,1)
(47,5,1)
(16,44,1)
(18,38,1)
(5,22,1)
(42,33,1)
(50,43,1)
(43,16,1)
(39,31,1)
(32,21,1)
(30,45,1)
(10,29,1)
(36,49,1)
(47,22,1)
(12,24,1)
(49,4,1)
(38,22,1)
(22,13,1)
(1,10,1)
(19,12,1)
(10,19,1)
(45,32,1)
(0,1,1)
(32,9,1)
(33,18,1)
(38,8,1)
(35,36,1)
(15,50,1)
(50,42,1)
(29,30,1)
(36,19,1)
(34,27,1)
(21,19,1)
(44,42,1)
(16,42,1)
(46,34,1)
(4,39,1)
(5,11,1)
(49,36,2)
(8,38,2)
(21,36,2)
(21,19,2)
(19,50,2)
(24,50,2)
(45,36,2)
(10,46,2)
(41,36,2)
(38,38,2)
(5,38,2)
(50,50,2)
(0,10,2)
(31,36,2)
(49,50,2)
(36,50,2)
(36,19,2)
(1,36,2)
(35,50,2)
(44,50,2)
(28,0,2)
(21,46,2)
(11,38,2)
(5,22,2)
(30,36,2)
(39,36,2)
(25,36,2)
(45,32,2)
(39,19,2)
(10,36,2)
(4,36,2)
(10,19,2)
(4,50,2)
(12,50,2)
(44,42,2)
(29,36,2)
(9,36,2)
(38,22,2)
(36,36,2)
(0,36,2)
(28,36,2)
(43,50,2)
(50,42,2)
(32,21,2)
(47,38,2)
(32,36,2)
(16,50,2)
-----------------------------------
(0,data[i].intTwo)
(1,intTwo)
(2,for(i = 0; i < 1; i++)
(3,i)
(4,i)
(5,i++)
(6,for(i=0; i<10; i++)
(7,)
(8,1)
(9,intOne)
(10,data[i])
(11,i)
(12,0)
(13,0)
(14,i)
(15,RET)
(16,j)
(17,)
(18,j)
(19,i=0)
(20,dataUninitArray)
(21,data[i])
(22,i = 0)
(23,data)
(24,i)
(25,data)
(26,)
(27,data)
(28,printIntLine(data[i].intTwo)
(29,i)
(30,data)
(31,i)
(32,data[i].intOne)
(33,0)
(34,dataUninitArray)
(35,j)
(36,i<10)
(37,j)
(38,i < 1)
(39,i++)
(40,for(j = 0; j < 1; j++)
(41,i)
(42,j = 0)
(43,1)
(44,j++)
(45,printIntLine(data[i].intOne)
(46,data = dataUninitArray)
(47,i)
(48,i)
(49,10)
(50,j < 1)
(51,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^