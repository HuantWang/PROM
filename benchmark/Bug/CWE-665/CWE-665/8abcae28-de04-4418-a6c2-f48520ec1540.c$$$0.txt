-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_07_bad()
{
    double * data;
    data = (double *)ALLOCA(10*sizeof(double));
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
35,36
37,38
37,39
38,39
38,40
39,40
42,43
43,44
43,45
44,45
45,46
45,47
47,48
49,50
49,51
49,52
49,53
50,51
51,52
51,53
52,53
55,56
55,57
56,57
59,60
60,61
62,63
63,64
64,65
64,66
65,66
67,68
67,69
68,69
70,71
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,34,36,40,41,46,48,53,54,57,58,61,66,69,71
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
38,39
38,40
51,52
51,53
55,56
55,57
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_07_bad(){    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(staticFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_07_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_07_bad
{    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(staticFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
data = (double *)ALLOCA(10*sizeof(double));
data = (double *)ALLOCA(10*sizeof(double))
data
data
(double *)ALLOCA(10*sizeof(double))
double *
double
*
*
ALLOCA(10*sizeof(double))
ALLOCA
ALLOCA
10*sizeof(double)
10
sizeof(double)
double
double

if(staticFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(17,10,0)
(35,24,0)
(19,35,0)
(12,19,0)
(3,10,0)
(30,16,0)
(19,16,0)
(35,19,0)
(4,20,0)
(27,22,0)
(12,22,0)
(15,28,0)
(17,23,0)
(32,17,0)
(24,35,0)
(0,34,0)
(12,1,0)
(35,23,0)
(11,9,0)
(28,25,0)
(36,16,0)
(18,28,0)
(1,12,0)
(1,7,0)
(9,22,0)
(2,20,0)
(6,31,0)
(34,22,0)
(21,16,0)
(23,35,0)
(5,31,0)
(23,17,0)
(10,17,0)
(14,19,0)
(29,12,0)
(8,12,0)
(26,9,0)
(33,22,0)
(26,11,1)
(1,12,1)
(12,8,1)
(17,10,1)
(9,26,1)
(33,27,1)
(2,4,1)
(20,2,1)
(22,33,1)
(8,29,1)
(9,22,1)
(0,1,1)
(32,14,1)
(27,20,1)
(10,3,1)
(5,19,1)
(13,20,1)
(4,31,1)
(6,5,1)
(12,19,1)
(29,9,1)
(19,35,1)
(31,6,1)
(35,24,1)
(12,22,1)
(34,0,1)
(3,32,1)
(13,9,1)
(23,17,1)
(34,22,1)
(35,23,1)
(11,34,1)
(11,22,1)
(8,9,2)
(19,35,2)
(29,9,2)
(1,9,2)
(27,20,2)
(9,9,2)
(35,24,2)
(35,23,2)
(11,9,2)
(26,9,2)
(1,12,2)
(26,20,2)
(22,20,2)
(23,17,2)
(12,22,2)
(9,22,2)
(12,9,2)
(34,9,2)
(12,19,2)
(0,9,2)
(33,20,2)
(11,20,2)
(34,22,2)
(9,20,2)
(17,10,2)
-----------------------------------
(0,i)
(1,printDoubleLine(data[i])
(2,5)
(3,double)
(4,staticFive)
(5,staticFive)
(6,5)
(7,)
(8,i)
(9,i<10)
(10,sizeof(double)
(11,i)
(12,data[i])
(13,RET)
(14,data)
(15,i)
(16,)
(17,10*sizeof(double)
(18,for(i=0; i<10; i++)
(19,data = (double *)
(20,staticFive==5)
(21,if(staticFive==5)
(22,i=0)
(23,ALLOCA(10*sizeof(double)
(24,double *)
(25,)
(26,10)
(27,i)
(28,)
(29,data)
(30,if(staticFive==5)
(31,staticFive==5)
(32,10)
(33,0)
(34,i++)
(35,(double *)
(36,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^