-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17_bad()
{
    int i,j;
    double * data;
    data = (double *)ALLOCA(10*sizeof(double));
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    for(j = 0; j < 1; j++)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
16,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
26,27
28,29
28,30
29,30
31,32
31,33
33,34
34,35
34,36
37,38
37,39
37,40
37,41
38,39
39,40
39,41
40,41
43,44
43,45
44,45
47,48
48,49
50,51
52,53
52,54
52,55
52,56
53,54
54,55
54,56
55,56
58,59
58,60
59,60
62,63
63,64
65,66
66,67
66,68
67,68
68,69
68,70
70,71
72,73
72,74
72,75
72,76
73,74
74,75
74,76
75,76
78,79
78,80
79,80
82,83
83,84
85,86
86,87
87,88
87,89
88,89
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,8,10,12,15,17,18,22,25,27,30,32,35,36,41,42,45,46,49,51,56,57,60,61,64,69,71,76,77,80,81,84,89,92,94
-----computeFrom-----
20,21
20,22
31,32
31,33
39,40
39,41
43,44
43,45
54,55
54,56
58,59
58,60
74,75
74,76
78,79
78,80
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;NullStatement;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17_bad(){    int i,j;    double * data;    data = (double *)ALLOCA(10*sizeof(double));    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17_bad
{    int i,j;    double * data;    data = (double *)ALLOCA(10*sizeof(double));    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
int i,j;
int i,j;
int
i
i
j
j
double * data;
double * data;
double
* data
*
data
data = (double *)ALLOCA(10*sizeof(double));
data = (double *)ALLOCA(10*sizeof(double))
data
data
(double *)ALLOCA(10*sizeof(double))
double *
double
*
*
ALLOCA(10*sizeof(double))
ALLOCA
ALLOCA
10*sizeof(double)
10
sizeof(double)
double
double

for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(21,7,0)
(11,28,0)
(5,17,0)
(31,42,0)
(15,42,0)
(14,35,0)
(12,37,0)
(36,42,0)
(18,31,0)
(12,9,0)
(31,18,0)
(42,31,0)
(12,36,0)
(6,39,0)
(24,37,0)
(10,29,0)
(40,2,0)
(45,41,0)
(38,20,0)
(25,21,0)
(48,14,0)
(44,28,0)
(4,2,0)
(9,8,0)
(18,17,0)
(1,16,0)
(36,2,0)
(20,7,0)
(43,2,0)
(28,29,0)
(23,12,0)
(32,14,0)
(34,7,0)
(9,12,0)
(42,15,0)
(39,37,0)
(46,12,0)
(27,2,0)
(0,41,0)
(33,29,0)
(3,2,0)
(41,37,0)
(42,36,0)
(26,37,0)
(17,18,0)
(47,36,0)
(30,18,0)
(13,21,0)
(22,7,0)
(16,29,0)
(12,37,1)
(21,7,1)
(18,17,1)
(38,41,1)
(11,29,1)
(30,47,1)
(16,1,1)
(26,21,1)
(31,18,1)
(42,31,1)
(29,33,1)
(1,28,1)
(21,13,1)
(9,12,1)
(24,26,1)
(10,36,1)
(17,5,1)
(45,0,1)
(6,9,1)
(41,45,1)
(12,36,1)
(46,41,1)
(39,6,1)
(7,22,1)
(0,39,1)
(22,34,1)
(23,46,1)
(42,15,1)
(13,25,1)
(25,20,1)
(41,37,1)
(28,29,1)
(20,7,1)
(34,28,1)
(39,37,1)
(28,44,1)
(36,42,1)
(20,38,1)
(44,11,1)
(5,30,1)
(12,23,1)
(33,10,1)
(11,16,1)
(0,37,1)
(37,24,1)
(16,29,1)
(25,7,1)
(19,21,1)
(45,21,2)
(41,37,2)
(1,28,2)
(37,21,2)
(20,7,2)
(12,36,2)
(31,18,2)
(41,21,2)
(0,21,2)
(26,21,2)
(18,17,2)
(44,28,2)
(13,21,2)
(28,28,2)
(9,12,2)
(12,41,2)
(28,29,2)
(16,28,2)
(16,29,2)
(45,41,2)
(21,21,2)
(36,42,2)
(41,41,2)
(0,41,2)
(21,7,2)
(12,37,2)
(39,37,2)
(11,28,2)
(24,21,2)
(20,21,2)
(39,41,2)
(42,15,2)
(46,41,2)
(6,41,2)
(38,21,2)
(9,41,2)
(23,41,2)
(42,31,2)
(25,21,2)
-----------------------------------
(0,i)
(1,i)
(2,)
(3,for(j = 0; j < 1; j++)
(4,j)
(5,double)
(6,i)
(7,j = 0)
(8,)
(9,printDoubleLine(data[i])
(10,i)
(11,i)
(12,data[i])
(13,1)
(14,)
(15,double *)
(16,i++)
(17,sizeof(double)
(18,10*sizeof(double)
(19,RET)
(20,j++)
(21,j < 1)
(22,0)
(23,i)
(24,0)
(25,j)
(26,i)
(27,data)
(28,i < 1)
(29,i = 0)
(30,10)
(31,ALLOCA(10*sizeof(double)
(32,for(i=0; i<10; i++)
(33,0)
(34,j)
(35,)
(36,data = (double *)
(37,i=0)
(38,j)
(39,i++)
(40,i)
(41,i<10)
(42,(double *)
(43,for(i = 0; i < 1; i++)
(44,1)
(45,10)
(46,data)
(47,data)
(48,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^