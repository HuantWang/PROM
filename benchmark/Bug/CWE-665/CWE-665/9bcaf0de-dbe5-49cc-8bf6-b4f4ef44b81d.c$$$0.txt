-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_malloc_no_init_06_bad()
{
    double * data;
    data = (double *)malloc(10*sizeof(double));
    if (data == NULL) {exit(-1);}
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
44,45
44,46
45,46
48,49
50,51
50,52
51,52
51,53
52,53
55,56
56,57
56,58
57,58
58,59
58,60
60,61
62,63
62,64
62,65
62,66
63,64
64,65
64,66
65,66
68,69
68,70
69,70
72,73
73,74
75,76
76,77
77,78
77,79
78,79
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,46,47,49,53,54,59,61,66,67,70,71,74,79,82,84
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
51,52
51,53
64,65
64,66
68,69
68,70
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_malloc_no_init_06_bad(){    double * data;    data = (double *)malloc(10*sizeof(double));    if (data == NULL) {exit(-1);}    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_malloc_no_init_06_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_malloc_no_init_06_bad
{    double * data;    data = (double *)malloc(10*sizeof(double));    if (data == NULL) {exit(-1);}    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
data = (double *)malloc(10*sizeof(double));
data = (double *)malloc(10*sizeof(double))
data
data
(double *)malloc(10*sizeof(double))
double *
double
*
*
malloc(10*sizeof(double))
malloc
malloc
10*sizeof(double)
10
sizeof(double)
double
double

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(12,34,0)
(42,6,0)
(7,33,0)
(21,37,0)
(37,16,0)
(33,40,0)
(19,34,0)
(16,37,0)
(40,30,0)
(22,29,0)
(2,44,0)
(38,22,0)
(23,8,0)
(26,4,0)
(44,33,0)
(44,15,0)
(5,41,0)
(17,29,0)
(20,11,0)
(18,29,0)
(40,33,0)
(24,41,0)
(3,44,0)
(1,25,0)
(23,11,0)
(27,34,0)
(9,25,0)
(43,16,0)
(40,35,0)
(44,29,0)
(30,40,0)
(4,29,0)
(0,4,0)
(16,35,0)
(32,34,0)
(36,7,0)
(41,13,0)
(35,16,0)
(33,34,0)
(28,7,0)
(11,23,0)
(31,33,0)
(15,14,0)
(15,44,0)
(35,40,0)
(39,6,0)
(9,1,1)
(7,33,1)
(29,18,1)
(26,0,1)
(43,31,1)
(21,43,1)
(25,9,1)
(3,2,1)
(0,29,1)
(1,7,1)
(40,35,1)
(0,22,1)
(42,39,1)
(44,29,1)
(22,29,1)
(38,15,1)
(22,38,1)
(10,6,1)
(11,20,1)
(37,21,1)
(1,23,1)
(35,16,1)
(18,17,1)
(33,40,1)
(44,33,1)
(39,25,1)
(10,4,1)
(44,3,1)
(7,36,1)
(4,26,1)
(28,33,1)
(40,30,1)
(15,44,1)
(23,11,1)
(17,6,1)
(6,42,1)
(36,28,1)
(20,7,1)
(16,37,1)
(2,4,1)
(4,29,1)
(40,30,2)
(4,6,2)
(3,4,2)
(44,4,2)
(11,7,2)
(4,4,2)
(17,6,2)
(15,44,2)
(0,4,2)
(15,4,2)
(22,4,2)
(33,40,2)
(44,29,2)
(23,7,2)
(26,4,2)
(26,6,2)
(0,6,2)
(38,4,2)
(22,29,2)
(35,16,2)
(4,29,2)
(20,7,2)
(40,35,2)
(7,33,2)
(18,6,2)
(16,37,2)
(29,6,2)
(23,11,2)
(44,33,2)
(2,4,2)
-----------------------------------
(0,i)
(1,STATIC_CONST_FIVE)
(2,data)
(3,i)
(4,i<10)
(5,for(i=0; i<10; i++)
(6,STATIC_CONST_FIVE==5)
(7,data == NULL)
(8,)
(9,5)
(10,RET)
(11,-1)
(12,data)
(13,)
(14,)
(15,printDoubleLine(data[i])
(16,10*sizeof(double)
(17,i)
(18,0)
(19,if(STATIC_CONST_FIVE==5)
(20,1)
(21,double)
(22,i++)
(23,exit(-1)
(24,i)
(25,STATIC_CONST_FIVE==5)
(26,10)
(27,if (data == NULL)
(28,data)
(29,i=0)
(30,double *)
(31,data)
(32,if(STATIC_CONST_FIVE==5)
(33,data = (double *)
(34,)
(35,malloc(10*sizeof(double)
(36,NULL)
(37,sizeof(double)
(38,i)
(39,STATIC_CONST_FIVE)
(40,(double *)
(41,)
(42,5)
(43,10)
(44,data[i])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^