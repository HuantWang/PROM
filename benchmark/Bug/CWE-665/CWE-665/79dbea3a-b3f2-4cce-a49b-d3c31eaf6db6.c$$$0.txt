-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_17_bad()
{
    int i,j;
    int * data;
    data = (int *)ALLOCA(10*sizeof(int));
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    for(j = 0; j < 1; j++)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
16,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
26,27
28,29
28,30
29,30
31,32
31,33
33,34
34,35
34,36
37,38
37,39
37,40
37,41
38,39
39,40
39,41
40,41
43,44
43,45
44,45
47,48
48,49
50,51
52,53
52,54
52,55
52,56
53,54
54,55
54,56
55,56
58,59
58,60
59,60
62,63
63,64
65,66
66,67
66,68
67,68
68,69
68,70
70,71
72,73
72,74
72,75
72,76
73,74
74,75
74,76
75,76
78,79
78,80
79,80
82,83
83,84
85,86
86,87
87,88
87,89
88,89
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,8,10,12,15,17,18,22,25,27,30,32,35,36,41,42,45,46,49,51,56,57,60,61,64,69,71,76,77,80,81,84,89,92,94
-----computeFrom-----
20,21
20,22
31,32
31,33
39,40
39,41
43,44
43,45
54,55
54,56
58,59
58,60
74,75
74,76
78,79
78,80
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;NullStatement;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_17_bad(){    int i,j;    int * data;    data = (int *)ALLOCA(10*sizeof(int));    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_17_bad()
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_17_bad
{    int i,j;    int * data;    data = (int *)ALLOCA(10*sizeof(int));    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
int i,j;
int i,j;
int
i
i
j
j
int * data;
int * data;
int
* data
*
data
data = (int *)ALLOCA(10*sizeof(int));
data = (int *)ALLOCA(10*sizeof(int))
data
data
(int *)ALLOCA(10*sizeof(int))
int *
int
*
*
ALLOCA(10*sizeof(int))
ALLOCA
ALLOCA
10*sizeof(int)
10
sizeof(int)
int
int

for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i]);            }
printIntLine(data[i]);
printIntLine(data[i])
printIntLine
printIntLine
data[i]
data
data
i
i
-----joern-----
(12,9,0)
(5,6,0)
(40,7,0)
(4,22,0)
(48,43,0)
(18,22,0)
(13,22,0)
(39,36,0)
(17,30,0)
(46,39,0)
(0,7,0)
(23,6,0)
(27,37,0)
(8,26,0)
(24,32,0)
(38,17,0)
(15,43,0)
(3,0,0)
(21,22,0)
(41,23,0)
(28,26,0)
(37,6,0)
(14,12,0)
(19,22,0)
(46,7,0)
(16,26,0)
(29,19,0)
(17,38,0)
(45,12,0)
(11,37,0)
(2,46,0)
(46,19,0)
(47,32,0)
(42,46,0)
(19,17,0)
(10,38,0)
(31,35,0)
(39,46,0)
(35,10,0)
(20,7,0)
(43,26,0)
(10,35,0)
(17,19,0)
(38,10,0)
(33,22,0)
(25,16,0)
(44,6,0)
(32,7,0)
(30,17,0)
(34,10,0)
(46,19,1)
(16,25,1)
(40,43,1)
(34,29,1)
(17,30,1)
(23,41,1)
(28,8,1)
(43,26,1)
(15,48,1)
(10,35,1)
(31,34,1)
(26,28,1)
(32,47,1)
(11,23,1)
(39,46,1)
(17,38,1)
(42,2,1)
(48,16,1)
(8,37,1)
(47,24,1)
(37,6,1)
(44,5,1)
(0,7,1)
(27,11,1)
(7,20,1)
(16,26,1)
(24,7,1)
(43,15,1)
(37,27,1)
(46,7,1)
(20,40,1)
(41,37,1)
(5,19,1)
(48,26,1)
(6,44,1)
(19,17,1)
(23,6,1)
(25,32,1)
(35,31,1)
(3,39,1)
(2,32,1)
(0,3,1)
(1,43,1)
(11,6,1)
(32,7,1)
(46,42,1)
(24,0,1)
(38,10,1)
(46,19,2)
(23,37,2)
(17,30,2)
(24,32,2)
(41,37,2)
(47,43,2)
(42,32,2)
(2,32,2)
(3,32,2)
(24,43,2)
(32,32,2)
(25,43,2)
(39,32,2)
(43,43,2)
(11,37,2)
(19,17,2)
(40,43,2)
(20,43,2)
(17,38,2)
(27,37,2)
(0,32,2)
(32,43,2)
(46,32,2)
(43,26,2)
(38,10,2)
(7,43,2)
(37,6,2)
(10,35,2)
(32,7,2)
(0,7,2)
(16,26,2)
(39,46,2)
(47,32,2)
(23,6,2)
(16,43,2)
(48,43,2)
(37,37,2)
(46,7,2)
(15,43,2)
-----------------------------------
(0,i++)
(1,RET)
(2,data)
(3,i)
(4,for(j = 0; j < 1; j++)
(5,i)
(6,i = 0)
(7,i=0)
(8,j)
(9,)
(10,10*sizeof(int)
(11,i)
(12,)
(13,data)
(14,for(i=0; i<10; i++)
(15,1)
(16,j++)
(17,(int *)
(18,for(i = 0; i < 1; i++)
(19,data = (int *)
(20,0)
(21,j)
(22,)
(23,i++)
(24,i)
(25,j)
(26,j = 0)
(27,1)
(28,0)
(29,data)
(30,int *)
(31,int)
(32,i<10)
(33,i)
(34,10)
(35,sizeof(int)
(36,)
(37,i < 1)
(38,ALLOCA(10*sizeof(int)
(39,printIntLine(data[i])
(40,i)
(41,i)
(42,i)
(43,j < 1)
(44,0)
(45,i)
(46,data[i])
(47,10)
(48,j)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^