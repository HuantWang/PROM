-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_01_bad()
{
    double * data;
    double dataUninitArray[10];
    data = dataUninitArray;
    /* POTENTIAL FLAW: Partially initialize data */
    {
        int i;
        for(i=0; i<(10/2); i++)
        {
            data[i] = (double)i;
        }
    }
    /* POTENTIAL FLAW: Use data without initializing it */
    {
        int i;
        for(i=0; i<10; i++)
        {
            printDoubleLine(data[i]);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
27,28
27,29
29,30
31,32
31,33
31,34
31,35
32,33
33,34
33,35
34,35
37,38
37,39
38,39
40,41
41,42
41,43
44,45
45,46
47,48
48,49
49,50
49,51
50,51
50,52
51,52
53,54
55,56
55,57
56,57
56,58
59,60
61,62
61,63
62,63
63,64
63,65
65,66
67,68
67,69
67,70
67,71
68,69
69,70
69,71
70,71
73,74
73,75
74,75
77,78
78,79
80,81
81,82
82,83
82,84
83,84
85,86
85,87
86,87
88,89
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,28,30,35,36,39,42,43,46,52,54,57,58,60,64,66,71,72,75,76,79,84,87,89
-----computeFrom-----
20,21
20,22
33,34
33,35
37,38
37,39
41,42
41,43
49,50
49,51
69,70
69,71
73,74
73,75
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_01_bad(){    double * data;    double dataUninitArray[10];    data = dataUninitArray;    /* POTENTIAL FLAW: Partially initialize data */    {        int i;        for(i=0; i<(10/2); i++)        {            data[i] = (double)i;        }    }    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_01_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_01_bad
{    double * data;    double dataUninitArray[10];    data = dataUninitArray;    /* POTENTIAL FLAW: Partially initialize data */    {        int i;        for(i=0; i<(10/2); i++)        {            data[i] = (double)i;        }    }    /* POTENTIAL FLAW: Use data without initializing it */    {        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }}
double * data;
double * data;
double
* data
*
data
double dataUninitArray[10];
double dataUninitArray[10];
double
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
{        int i;        for(i=0; i<(10/2); i++)        {            data[i] = (double)i;        }    }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)        {            data[i] = (double)i;        }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{            data[i] = (double)i;        }
data[i] = (double)i;
data[i] = (double)i
data[i]
data
data
i
i
(double)i
double
double

i
i
{        int i;        for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }    }
int i;
int i;
int
i
i
for(i=0; i<10; i++)        {            printDoubleLine(data[i]);        }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{            printDoubleLine(data[i]);        }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(19,43,0)
(17,29,0)
(8,12,0)
(7,28,0)
(43,23,0)
(6,0,0)
(31,28,0)
(39,11,0)
(6,29,0)
(14,38,0)
(1,25,0)
(35,0,0)
(25,13,0)
(26,11,0)
(41,40,0)
(25,34,0)
(34,5,0)
(25,28,0)
(32,23,0)
(13,4,0)
(2,6,0)
(40,13,0)
(13,40,0)
(21,0,0)
(40,24,0)
(11,23,0)
(37,28,0)
(38,21,0)
(20,29,0)
(18,7,0)
(21,38,0)
(27,0,0)
(9,25,0)
(40,0,0)
(3,38,0)
(24,40,0)
(16,21,0)
(6,13,0)
(25,29,0)
(36,23,0)
(22,12,0)
(34,25,0)
(42,6,0)
(15,43,0)
(30,0,0)
(12,28,0)
(29,23,0)
(33,30,0)
(34,25,1)
(12,8,1)
(2,42,1)
(1,12,1)
(20,17,1)
(38,3,1)
(7,28,1)
(25,29,1)
(22,7,1)
(21,0,1)
(37,31,1)
(6,0,1)
(31,21,1)
(8,22,1)
(18,34,1)
(22,28,1)
(25,9,1)
(28,37,1)
(12,28,1)
(35,29,1)
(27,35,1)
(14,16,1)
(7,18,1)
(40,41,1)
(40,24,1)
(13,40,1)
(21,38,1)
(6,29,1)
(30,33,1)
(41,6,1)
(9,1,1)
(10,12,1)
(42,21,1)
(6,2,1)
(40,0,1)
(30,0,1)
(0,27,1)
(16,30,1)
(3,14,1)
(29,20,1)
(16,0,1)
(25,28,1)
(33,13,1)
(25,13,1)
(8,12,2)
(25,29,2)
(21,21,2)
(13,21,2)
(18,12,2)
(12,12,2)
(40,24,2)
(40,0,2)
(12,28,2)
(38,21,2)
(30,0,2)
(7,12,2)
(41,21,2)
(1,12,2)
(25,13,2)
(6,0,2)
(21,0,2)
(6,21,2)
(13,40,2)
(2,21,2)
(22,12,2)
(16,21,2)
(34,12,2)
(21,38,2)
(3,21,2)
(9,12,2)
(6,29,2)
(40,21,2)
(30,21,2)
(14,21,2)
(25,28,2)
(34,25,2)
(25,12,2)
(33,21,2)
(42,21,2)
(7,28,2)
-----------------------------------
(0,i=0)
(1,data)
(2,i)
(3,2)
(4,)
(5,)
(6,data[i])
(7,i++)
(8,10)
(9,i)
(10,RET)
(11,)
(12,i<10)
(13,data[i] = (double)
(14,10)
(15,for(i=0; i<(10/2)
(16,i)
(17,data)
(18,i)
(19,i)
(20,dataUninitArray)
(21,i<(10/2)
(22,i)
(23,)
(24,double)
(25,data[i])
(26,i)
(27,0)
(28,i=0)
(29,data = dataUninitArray)
(30,i++)
(31,i)
(32,data)
(33,i)
(34,printDoubleLine(data[i])
(35,i)
(36,dataUninitArray)
(37,0)
(38,10/2)
(39,for(i=0; i<10; i++)
(40,(double)
(41,i)
(42,data)
(43,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^