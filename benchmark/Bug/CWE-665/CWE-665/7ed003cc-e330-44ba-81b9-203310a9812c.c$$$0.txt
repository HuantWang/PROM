-----label-----
1
-----code-----
void CWE665_Improper_Initialization__wchar_t_cat_12_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100];
    data = dataBuffer;
    if(globalReturnsTrueOrFalse())
    {
        /* FLAW: Do not initialize data */
        ; /* empty statement needed for some flow variants */
    }
    else
    {
        /* FIX: Properly initialize data */
        data[0] = L'\0'; /* null terminate */
    }
    {
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: If data is not initialized properly, wcscat() may not function correctly */
        wcscat(data, source);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
25,28
26,27
27,28
29,30
31,32
32,33
33,34
33,35
34,35
34,36
35,36
39,40
39,41
39,42
39,43
39,44
40,41
41,42
41,43
43,44
43,45
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
67,68
67,69
67,70
68,69
70,71
72,73
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,28,30,36,37,38,42,44,46,50,52,53,55,56,61,63,64,65,69,71,73,77,79
-----computeFrom-----
20,21
20,22
33,34
33,35
54,55
54,56
58,59
58,60
62,63
62,64
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;NullStatement;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__wchar_t_cat_12_bad(){    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    if(globalReturnsTrueOrFalse())    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    else    {        /* FIX: Properly initialize data */        data[0] = L'\0'; /* null terminate */    }    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, wcscat() may not function correctly */        wcscat(data, source);        printWLine(data);    }}
void
CWE665_Improper_Initialization__wchar_t_cat_12_bad()
CWE665_Improper_Initialization__wchar_t_cat_12_bad
{    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    if(globalReturnsTrueOrFalse())    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    else    {        /* FIX: Properly initialize data */        data[0] = L'\0'; /* null terminate */    }    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, wcscat() may not function correctly */        wcscat(data, source);        printWLine(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100];
wchar_t dataBuffer[100];
wchar_t
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalReturnsTrueOrFalse())    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    else    {        /* FIX: Properly initialize data */        data[0] = L'\0'; /* null terminate */    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
;
{        /* FIX: Properly initialize data */        data[0] = L'\0'; /* null terminate */    }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
{        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, wcscat() may not function correctly */        wcscat(data, source);        printWLine(data);    }
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
wcscat(data, source);
wcscat(data, source)
wcscat
wcscat
data
data
source
source
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(9,1,0)
(2,15,0)
(0,11,0)
(7,1,0)
(13,1,0)
(17,4,0)
(6,15,0)
(18,4,0)
(8,13,0)
(5,15,0)
(16,13,0)
(3,4,0)
(1,15,0)
(17,1,0)
(13,4,0)
(4,15,0)
(10,17,0)
(3,0,1)
(14,17,1)
(17,10,1)
(17,1,1)
(10,13,1)
(8,16,1)
(9,7,1)
(3,12,1)
(12,1,1)
(1,9,1)
(16,3,1)
(0,12,1)
(13,8,1)
(13,1,1)
(17,1,2)
(13,1,2)
(0,12,2)
-----------------------------------
(0,'\\0')
(1,data = dataBuffer)
(2,if(globalReturnsTrueOrFalse()
(3,'\\0')
(4,)
(5,dataBuffer)
(6,data)
(7,data)
(8,source)
(9,dataBuffer)
(10,data)
(11,)
(12,globalReturnsTrueOrFalse()
(13,wcscat(data, source)
(14,RET)
(15,)
(16,data)
(17,printWLine(data)
(18,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^