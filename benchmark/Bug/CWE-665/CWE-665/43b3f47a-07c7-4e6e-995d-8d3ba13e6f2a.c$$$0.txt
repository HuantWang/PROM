-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__char_pointer_15_bad()
{
    char * data;
    switch(6)
    {
    case 6:
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    switch(7)
    {
    case 7:
        /* POTENTIAL FLAW: Use data without initializing it */
        printLine(data);
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
6,7
7,8
7,9
9,10
9,11
12,13
12,14
14,15
14,16
14,17
14,18
14,19
14,20
15,16
20,21
21,22
21,23
22,23
26,27
26,28
28,29
28,30
28,31
28,32
28,33
28,34
29,30
31,32
32,33
32,34
33,34
35,36
39,40
40,41
40,42
41,42
-----nextToken-----
2,4,8,10,11,13,16,17,18,19,23,24,25,27,30,34,36,37,38,42,43,44
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;NullStatement;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__char_pointer_15_bad(){    char * data;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    switch(7)    {    case 7:        /* POTENTIAL FLAW: Use data without initializing it */        printLine(data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
void
CWE457_Use_of_Uninitialized_Variable__char_pointer_15_bad()
CWE457_Use_of_Uninitialized_Variable__char_pointer_15_bad
{    char * data;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    switch(7)    {    case 7:        /* POTENTIAL FLAW: Use data without initializing it */        printLine(data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
char * data;
char * data;
char
* data
*
data
switch(6)    {    case 6:        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
;
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
switch(7)    {    case 7:        /* POTENTIAL FLAW: Use data without initializing it */        printLine(data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
7
{    case 7:        /* POTENTIAL FLAW: Use data without initializing it */        printLine(data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 7:
7
printLine(data);
printLine(data)
printLine
printLine
data
data
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
-----joern-----
(0,9,0)
(22,3,0)
(6,9,0)
(8,9,0)
(11,3,0)
(12,3,0)
(20,6,0)
(21,9,0)
(10,22,0)
(14,3,0)
(2,3,0)
(17,16,0)
(13,16,0)
(18,12,0)
(5,16,0)
(7,9,0)
(15,3,0)
(19,15,1)
(10,1,1)
(1,0,1)
(19,2,1)
(2,22,1)
(18,1,1)
(12,18,1)
(21,4,1)
(1,21,1)
(22,10,1)
(0,6,1)
(15,12,1)
(20,4,1)
(6,20,1)
(22,1,2)
(6,4,2)
(12,1,2)
(0,4,2)
(21,4,2)
(15,1,2)
(18,1,2)
(10,1,2)
(2,1,2)
(20,4,2)
-----------------------------------
(0,break;)
(1,7)
(2,break;)
(3,)
(4,6)
(5,data)
(6,printLine("Benign, fixed string")
(7,case 6:)
(8,default:)
(9,)
(10,"Benign, fixed string")
(11,default:)
(12,printLine(data)
(13,switch(7)
(14,case 7:)
(15,break;)
(16,)
(17,switch(6)
(18,data)
(19,RET)
(20,"Benign, fixed string")
(21,break;)
(22,printLine("Benign, fixed string")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^