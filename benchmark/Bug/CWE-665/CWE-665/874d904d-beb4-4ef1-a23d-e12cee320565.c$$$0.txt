-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_17_bad()
{
    int i,j;
    double * data;
    data = (double *)ALLOCA(10*sizeof(double));
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i] = (double)i;
            }
        }
    }
    for(j = 0; j < 1; j++)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
16,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
26,27
28,29
28,30
29,30
31,32
31,33
33,34
34,35
34,36
37,38
37,39
37,40
37,41
38,39
39,40
39,41
40,41
43,44
43,45
44,45
47,48
48,49
50,51
51,52
51,53
52,53
53,54
53,55
55,56
57,58
57,59
57,60
57,61
58,59
59,60
59,61
60,61
63,64
63,65
64,65
66,67
67,68
67,69
70,71
71,72
73,74
74,75
75,76
75,77
76,77
76,78
77,78
79,80
81,82
81,83
82,83
82,84
85,86
87,88
87,89
87,90
87,91
88,89
89,90
89,91
90,91
93,94
93,95
94,95
97,98
98,99
100,101
101,102
101,103
102,103
103,104
103,105
105,106
107,108
107,109
107,110
107,111
108,109
109,110
109,111
110,111
113,114
113,115
114,115
117,118
118,119
120,121
121,122
122,123
122,124
123,124
125,126
125,127
126,127
128,129
-----nextToken-----
2,4,8,10,12,15,17,18,22,25,27,30,32,35,36,41,42,45,46,49,54,56,61,62,65,68,69,72,78,80,83,84,86,91,92,95,96,99,104,106,111,112,115,116,119,124,127,129
-----computeFrom-----
20,21
20,22
31,32
31,33
39,40
39,41
43,44
43,45
59,60
59,61
63,64
63,65
67,68
67,69
75,76
75,77
89,90
89,91
93,94
93,95
109,110
109,111
113,114
113,115
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_17_bad(){    int i,j;    double * data;    data = (double *)ALLOCA(10*sizeof(double));    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_17_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_17_bad
{    int i,j;    double * data;    data = (double *)ALLOCA(10*sizeof(double));    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
int i,j;
int i,j;
int
i
i
j
j
double * data;
double * data;
double
* data
*
data
data = (double *)ALLOCA(10*sizeof(double));
data = (double *)ALLOCA(10*sizeof(double))
data
data
(double *)ALLOCA(10*sizeof(double))
double *
double
*
*
ALLOCA(10*sizeof(double))
ALLOCA
ALLOCA
10*sizeof(double)
10
sizeof(double)
double
double

for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i] = (double)i;            }
data[i] = (double)i;
data[i] = (double)i
data[i]
data
data
i
i
(double)i
double
double

i
i
for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(32,33,0)
(25,68,0)
(24,41,0)
(33,32,0)
(65,70,0)
(13,34,0)
(64,69,0)
(9,46,0)
(69,32,0)
(24,52,0)
(60,29,0)
(2,65,0)
(49,36,0)
(52,24,0)
(69,70,0)
(39,30,0)
(38,62,0)
(23,11,0)
(14,34,0)
(65,11,0)
(19,44,0)
(42,4,0)
(4,44,0)
(17,29,0)
(12,23,0)
(6,63,0)
(45,11,0)
(53,36,0)
(29,43,0)
(41,24,0)
(33,52,0)
(33,3,0)
(69,44,0)
(23,67,0)
(21,30,0)
(70,62,0)
(55,67,0)
(52,33,0)
(32,34,0)
(69,64,0)
(51,44,0)
(0,62,0)
(1,34,0)
(46,36,0)
(27,46,0)
(56,58,0)
(58,50,0)
(37,11,0)
(40,63,0)
(8,11,0)
(67,23,0)
(62,70,0)
(15,41,0)
(62,11,0)
(5,67,0)
(54,69,0)
(62,38,0)
(3,33,0)
(16,50,0)
(48,34,0)
(18,45,0)
(22,44,0)
(63,7,0)
(26,50,0)
(65,32,0)
(57,69,0)
(30,50,0)
(59,24,0)
(47,32,0)
(35,65,0)
(20,51,0)
(31,4,0)
(70,28,0)
(68,36,0)
(64,61,0)
(10,34,0)
(21,39,1)
(45,11,1)
(55,12,1)
(58,50,1)
(4,31,1)
(0,65,1)
(44,22,1)
(49,53,1)
(54,57,1)
(69,70,1)
(41,15,1)
(58,56,1)
(68,25,1)
(62,0,1)
(66,46,1)
(50,26,1)
(53,30,1)
(25,4,1)
(36,49,1)
(12,11,1)
(67,5,1)
(46,9,1)
(51,20,1)
(33,3,1)
(32,33,1)
(19,46,1)
(27,36,1)
(30,21,1)
(9,27,1)
(8,30,1)
(24,41,1)
(20,64,1)
(23,11,1)
(69,54,1)
(45,18,1)
(65,2,1)
(65,32,1)
(56,23,1)
(62,38,1)
(11,37,1)
(27,68,1)
(51,44,1)
(39,50,1)
(5,55,1)
(18,70,1)
(16,32,1)
(4,44,1)
(69,44,1)
(26,16,1)
(57,4,1)
(39,58,1)
(30,50,1)
(22,19,1)
(65,11,1)
(68,36,1)
(15,59,1)
(2,35,1)
(31,42,1)
(33,52,1)
(59,47,1)
(42,51,1)
(70,62,1)
(12,45,1)
(52,24,1)
(64,69,1)
(37,8,1)
(69,32,1)
(62,11,1)
(46,36,1)
(35,23,1)
(42,44,1)
(23,67,1)
(4,46,2)
(30,30,2)
(0,23,2)
(65,11,2)
(65,32,2)
(46,46,2)
(70,23,2)
(22,46,2)
(69,70,2)
(44,46,2)
(58,50,2)
(68,46,2)
(57,4,2)
(30,50,2)
(62,11,2)
(69,44,2)
(23,30,2)
(12,30,2)
(42,4,2)
(5,23,2)
(5,30,2)
(45,11,2)
(18,23,2)
(20,4,2)
(62,23,2)
(35,23,2)
(11,30,2)
(58,30,2)
(2,23,2)
(68,36,2)
(12,23,2)
(24,41,2)
(8,30,2)
(31,4,2)
(37,30,2)
(51,4,2)
(23,11,2)
(23,23,2)
(45,23,2)
(9,46,2)
(64,69,2)
(4,4,2)
(31,46,2)
(69,32,2)
(67,23,2)
(19,46,2)
(25,46,2)
(67,30,2)
(21,30,2)
(56,30,2)
(46,36,2)
(55,23,2)
(52,24,2)
(65,23,2)
(64,4,2)
(23,67,2)
(54,4,2)
(62,38,2)
(27,46,2)
(32,33,2)
(4,44,2)
(42,46,2)
(51,44,2)
(39,30,2)
(70,62,2)
(69,4,2)
(33,3,2)
(55,30,2)
(33,52,2)
-----------------------------------
(0,i)
(1,for(j = 0; j < 1; j++)
(2,i)
(3,double *)
(4,i<10)
(5,2)
(6,for(i=0; i<10; i++)
(7,)
(8,i)
(9,1)
(10,i)
(11,i=0)
(12,i)
(13,j)
(14,data)
(15,double)
(16,i)
(17,for(i=0; i<(10/2)
(18,i)
(19,i)
(20,i)
(21,1)
(22,0)
(23,i<(10/2)
(24,10*sizeof(double)
(25,j)
(26,0)
(27,j)
(28,)
(29,)
(30,i < 1)
(31,10)
(32,data = (double *)
(33,(double *)
(34,)
(35,data)
(36,j = 0)
(37,0)
(38,double)
(39,i)
(40,i)
(41,sizeof(double)
(42,i)
(43,)
(44,i=0)
(45,i++)
(46,j < 1)
(47,data)
(48,for(i = 0; i < 1; i++)
(49,0)
(50,i = 0)
(51,i++)
(52,ALLOCA(10*sizeof(double)
(53,j)
(54,i)
(55,10)
(56,i)
(57,data)
(58,i++)
(59,10)
(60,i)
(61,)
(62,(double)
(63,)
(64,printDoubleLine(data[i])
(65,data[i])
(66,RET)
(67,10/2)
(68,j++)
(69,data[i])
(70,data[i] = (double)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^