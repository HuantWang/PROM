-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_11_bad()
{
    double * data;
    data = (double *)ALLOCA(10*sizeof(double));
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
32,33
34,35
36,37
36,38
37,38
38,39
40,41
41,42
41,43
42,43
43,44
43,45
45,46
47,48
47,49
47,50
47,51
48,49
49,50
49,51
50,51
53,54
53,55
54,55
57,58
58,59
60,61
61,62
62,63
62,64
63,64
65,66
65,67
66,67
68,69
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,39,44,46,51,52,55,56,59,64,67,69
-----computeFrom-----
13,14
13,15
24,25
24,26
49,50
49,51
53,54
53,55
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;NullStatement;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_11_bad(){    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_11_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_11_bad
{    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
data = (double *)ALLOCA(10*sizeof(double));
data = (double *)ALLOCA(10*sizeof(double))
data
data
(double *)ALLOCA(10*sizeof(double))
double *
double
*
*
ALLOCA(10*sizeof(double))
ALLOCA
ALLOCA
10*sizeof(double)
10
sizeof(double)
double
double

if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(27,31,0)
(17,27,0)
(10,21,0)
(5,8,0)
(12,8,0)
(1,15,0)
(31,29,0)
(27,18,0)
(15,4,0)
(19,11,0)
(3,15,0)
(2,18,0)
(28,21,0)
(9,8,0)
(2,16,0)
(27,8,0)
(18,11,0)
(21,10,0)
(30,8,0)
(20,28,0)
(13,21,0)
(18,2,0)
(23,11,0)
(21,28,0)
(25,11,0)
(6,9,0)
(10,2,0)
(24,27,0)
(16,2,0)
(7,9,0)
(32,30,0)
(26,18,0)
(31,27,0)
(2,10,0)
(2,16,1)
(22,9,1)
(12,0,1)
(22,0,1)
(27,18,1)
(31,27,1)
(27,8,1)
(30,32,1)
(7,30,1)
(5,12,1)
(6,7,1)
(21,28,1)
(9,6,1)
(8,5,1)
(7,8,1)
(28,20,1)
(17,9,1)
(32,31,1)
(2,10,1)
(18,2,1)
(27,24,1)
(10,21,1)
(9,8,1)
(24,17,1)
(0,14,1)
(14,18,1)
(30,8,1)
(20,13,1)
(13,26,1)
(32,9,2)
(31,9,2)
(24,9,2)
(9,9,2)
(7,9,2)
(10,21,2)
(6,9,2)
(7,0,2)
(2,16,2)
(12,0,2)
(5,0,2)
(27,8,2)
(2,10,2)
(27,9,2)
(9,8,2)
(6,0,2)
(8,0,2)
(17,9,2)
(27,18,2)
(9,0,2)
(18,2,2)
(21,28,2)
(30,9,2)
(31,27,2)
(30,8,2)
-----------------------------------
(0,globalReturnsTrue()
(1,for(i=0; i<10; i++)
(2,(double *)
(3,i)
(4,)
(5,0)
(6,10)
(7,i)
(8,i=0)
(9,i<10)
(10,ALLOCA(10*sizeof(double)
(11,)
(12,i)
(13,10)
(14,globalReturnsTrue()
(15,)
(16,double *)
(17,data)
(18,data = (double *)
(19,if(globalReturnsTrue()
(20,double)
(21,10*sizeof(double)
(22,RET)
(23,data)
(24,i)
(25,if(globalReturnsTrue()
(26,data)
(27,data[i])
(28,sizeof(double)
(29,)
(30,i++)
(31,printDoubleLine(data[i])
(32,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^