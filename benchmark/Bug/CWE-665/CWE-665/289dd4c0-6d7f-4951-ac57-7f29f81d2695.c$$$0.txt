-----label-----
1
-----code-----
void CWE665_Improper_Initialization__char_ncat_32_bad()
{
    char * data;
    char * *dataPtr1 = &data;
    char * *dataPtr2 = &data;
    char dataBuffer[100];
    data = dataBuffer;
    {
        char * data = *dataPtr1;
        /* FLAW: Do not initialize data */
        ; /* empty statement needed for some flow variants */
        *dataPtr1 = data;
    }
    {
        char * data = *dataPtr2;
        {
            size_t sourceLen;
            char source[100];
            memset(source, 'C', 100-1); /* fill with 'C's */
            source[100-1] = '\0'; /* null terminate */
            sourceLen = strlen(source);
            /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */
            strncat(data, source, sourceLen);
            printLine(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
15,19
19,20
20,21
21,22
23,24
24,25
24,26
26,27
26,28
26,29
26,30
30,31
31,32
32,33
34,35
35,36
35,37
37,38
37,39
39,40
41,42
42,43
42,44
43,44
45,46
47,48
47,49
47,50
48,49
49,50
49,51
51,52
51,53
51,54
54,55
55,56
56,57
59,60
60,61
60,62
61,62
62,63
64,65
66,67
66,68
67,68
68,69
68,70
70,71
70,72
70,73
73,74
74,75
75,76
77,78
77,79
77,80
77,81
77,82
77,83
77,84
78,79
79,80
79,81
80,81
82,83
84,85
85,86
85,87
87,88
87,89
89,90
91,92
92,93
92,94
92,95
92,96
93,94
95,96
98,99
98,100
101,102
102,103
102,104
103,104
103,105
104,105
106,107
106,108
110,111
111,112
111,113
112,113
114,115
114,116
115,116
117,118
119,120
120,121
120,122
120,123
120,124
121,122
123,124
125,126
127,128
129,130
130,131
130,132
131,132
133,134
-----nextToken-----
2,4,8,10,11,14,16,17,18,22,25,27,28,29,33,36,38,40,44,46,50,52,53,57,58,63,65,69,71,72,76,81,83,86,88,90,94,96,97,99,100,105,107,108,109,113,116,118,122,124,126,128,132,134
-----computeFrom-----
42,43
42,44
60,61
60,62
98,99
98,100
102,103
102,104
106,107
106,108
111,112
111,113
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;NullStatement;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__char_ncat_32_bad(){    char * data;    char * *dataPtr1 = &data;    char * *dataPtr2 = &data;    char dataBuffer[100];    data = dataBuffer;    {        char * data = *dataPtr1;        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */        *dataPtr1 = data;    }    {        char * data = *dataPtr2;        {            size_t sourceLen;            char source[100];            memset(source, 'C', 100-1); /* fill with 'C's */            source[100-1] = '\0'; /* null terminate */            sourceLen = strlen(source);            /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */            strncat(data, source, sourceLen);            printLine(data);        }    }}
void
CWE665_Improper_Initialization__char_ncat_32_bad()
CWE665_Improper_Initialization__char_ncat_32_bad
{    char * data;    char * *dataPtr1 = &data;    char * *dataPtr2 = &data;    char dataBuffer[100];    data = dataBuffer;    {        char * data = *dataPtr1;        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */        *dataPtr1 = data;    }    {        char * data = *dataPtr2;        {            size_t sourceLen;            char source[100];            memset(source, 'C', 100-1); /* fill with 'C's */            source[100-1] = '\0'; /* null terminate */            sourceLen = strlen(source);            /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */            strncat(data, source, sourceLen);            printLine(data);        }    }}
char * data;
char * data;
char
* data
*
data
char * *dataPtr1 = &data;
char * *dataPtr1 = &data;
char
* *dataPtr1 = &data
*
*
dataPtr1
= &data
&data
data
data
char * *dataPtr2 = &data;
char * *dataPtr2 = &data;
char
* *dataPtr2 = &data
*
*
dataPtr2
= &data
&data
data
data
char dataBuffer[100];
char dataBuffer[100];
char
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        char * data = *dataPtr1;        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */        *dataPtr1 = data;    }
char * data = *dataPtr1;
char * data = *dataPtr1;
char
* data = *dataPtr1
*
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
;
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        char * data = *dataPtr2;        {            size_t sourceLen;            char source[100];            memset(source, 'C', 100-1); /* fill with 'C's */            source[100-1] = '\0'; /* null terminate */            sourceLen = strlen(source);            /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */            strncat(data, source, sourceLen);            printLine(data);        }    }
char * data = *dataPtr2;
char * data = *dataPtr2;
char
* data = *dataPtr2
*
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            size_t sourceLen;            char source[100];            memset(source, 'C', 100-1); /* fill with 'C's */            source[100-1] = '\0'; /* null terminate */            sourceLen = strlen(source);            /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */            strncat(data, source, sourceLen);            printLine(data);        }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
sourceLen = strlen(source);
sourceLen = strlen(source)
sourceLen
sourceLen
strlen(source)
strlen
strlen
source
source
strncat(data, source, sourceLen);
strncat(data, source, sourceLen)
strncat
strncat
data
data
source
source
sourceLen
sourceLen
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(19,33,0)
(1,52,0)
(35,39,0)
(55,18,0)
(2,57,0)
(11,1,0)
(9,34,0)
(26,38,0)
(25,34,0)
(0,6,0)
(54,34,0)
(16,32,0)
(46,25,0)
(32,10,0)
(31,4,0)
(28,39,0)
(14,21,0)
(20,6,0)
(52,56,0)
(6,56,0)
(1,6,0)
(15,37,0)
(29,18,0)
(21,39,0)
(50,57,0)
(17,24,0)
(23,40,0)
(25,38,0)
(47,49,0)
(42,6,0)
(40,18,0)
(43,19,0)
(38,25,0)
(49,21,0)
(36,34,0)
(39,35,0)
(48,52,0)
(24,25,0)
(51,35,0)
(12,6,0)
(57,37,0)
(5,10,0)
(35,32,0)
(52,24,0)
(4,34,0)
(44,1,0)
(18,40,0)
(21,36,0)
(18,6,0)
(42,52,0)
(49,32,0)
(37,20,0)
(58,20,0)
(37,57,0)
(39,36,0)
(1,19,0)
(13,34,0)
(10,32,0)
(53,56,0)
(8,40,0)
(19,6,0)
(3,34,0)
(27,1,0)
(56,34,0)
(24,52,0)
(41,4,0)
(33,19,0)
(7,36,0)
(32,34,0)
(30,42,0)
(45,33,0)
(52,24,1)
(44,27,1)
(14,49,1)
(41,31,1)
(1,11,1)
(38,26,1)
(17,48,1)
(5,16,1)
(20,58,1)
(33,45,1)
(49,32,1)
(21,39,1)
(1,19,1)
(40,23,1)
(35,32,1)
(8,55,1)
(35,51,1)
(27,19,1)
(47,39,1)
(28,4,1)
(23,8,1)
(31,25,1)
(43,20,1)
(10,5,1)
(32,10,1)
(42,30,1)
(1,52,1)
(51,28,1)
(4,41,1)
(21,14,1)
(45,43,1)
(58,37,1)
(11,44,1)
(19,33,1)
(42,52,1)
(26,46,1)
(24,17,1)
(15,18,1)
(25,38,1)
(50,15,1)
(18,40,1)
(49,47,1)
(39,35,1)
(48,21,1)
(30,1,1)
(57,2,1)
(29,52,1)
(37,57,1)
(46,32,1)
(22,42,1)
(2,50,1)
(55,29,1)
(24,25,1)
(42,52,2)
(21,39,2)
(25,38,2)
(1,19,2)
(32,10,2)
(24,25,2)
(39,35,2)
(19,33,2)
(35,32,2)
(1,52,2)
(18,40,2)
(49,32,2)
(52,24,2)
(37,57,2)
-----------------------------------
(0,source)
(1,strncat(data, source, sourceLen)
(2,1)
(3,dataBuffer)
(4,data = dataBuffer)
(5,data)
(6,)
(7,data)
(8,100)
(9,data)
(10,&data)
(11,sourceLen)
(12,sourceLen)
(13,dataPtr2)
(14,data)
(15,source)
(16,dataPtr1)
(17,dataPtr2)
(18,memset(source, 'C', 100-1)
(19,sourceLen = strlen(source)
(20,source[100-1] = '\\0')
(21,*dataPtr1 = data)
(22,RET)
(23,1)
(24,*dataPtr2)
(25,* *dataPtr2 = &data)
(26,data)
(27,data)
(28,data)
(29,source)
(30,data)
(31,data)
(32,* *dataPtr1 = &data)
(33,strlen(source)
(34,)
(35,*dataPtr1)
(36,)
(37,source[100-1])
(38,&data)
(39,* data = *dataPtr1)
(40,100-1)
(41,dataBuffer)
(42,printLine(data)
(43,sourceLen)
(44,source)
(45,source)
(46,dataPtr2)
(47,dataPtr1)
(48,data)
(49,*dataPtr1)
(50,100)
(51,dataPtr1)
(52,* data = *dataPtr2)
(53,data)
(54,dataPtr1)
(55,'C')
(56,)
(57,100-1)
(58,'\\0')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^