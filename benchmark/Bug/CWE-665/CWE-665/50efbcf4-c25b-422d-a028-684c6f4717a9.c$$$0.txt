-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_13_bad()
{
    double * data;
    double dataUninitArray[10];
    data = dataUninitArray;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
26,28
27,28
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
40,41
40,42
42,43
44,45
44,46
44,47
44,48
45,46
46,47
46,48
47,48
50,51
50,52
51,52
54,55
55,56
57,58
58,59
59,60
59,61
60,61
62,63
62,64
63,64
65,66
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,28,29,31,35,36,41,43,48,49,52,53,56,61,64,66
-----computeFrom-----
20,21
20,22
26,27
26,28
33,34
33,35
46,47
46,48
50,51
50,52
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_13_bad(){    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_13_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_13_bad
{    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
double dataUninitArray[10];
double dataUninitArray[10];
double
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(29,25,0)
(19,26,0)
(3,7,0)
(17,4,0)
(31,23,0)
(26,9,0)
(15,23,0)
(5,12,0)
(7,4,0)
(20,10,0)
(27,7,0)
(8,25,0)
(18,23,0)
(28,6,0)
(22,23,0)
(16,26,0)
(7,3,0)
(3,2,0)
(24,10,0)
(10,4,0)
(11,1,0)
(21,6,0)
(12,4,0)
(14,1,0)
(7,1,0)
(0,4,0)
(13,7,0)
(1,23,0)
(24,12,1)
(7,4,1)
(21,28,1)
(11,14,1)
(17,0,1)
(29,8,1)
(30,6,1)
(4,17,1)
(0,6,1)
(25,29,1)
(5,3,1)
(27,13,1)
(6,21,1)
(7,27,1)
(28,25,1)
(3,7,1)
(20,24,1)
(12,5,1)
(8,1,1)
(12,4,1)
(10,4,1)
(30,10,1)
(1,11,1)
(24,4,1)
(10,20,1)
(13,10,1)
(7,1,1)
(12,10,2)
(7,1,2)
(12,4,2)
(3,10,2)
(5,10,2)
(10,4,2)
(7,4,2)
(27,10,2)
(17,6,2)
(3,7,2)
(0,6,2)
(7,10,2)
(4,6,2)
(10,6,2)
(13,10,2)
(10,10,2)
(24,6,2)
(20,10,2)
(24,10,2)
(20,6,2)
-----------------------------------
(0,i)
(1,data = dataUninitArray)
(2,)
(3,printDoubleLine(data[i])
(4,i=0)
(5,i)
(6,GLOBAL_CONST_FIVE==5)
(7,data[i])
(8,GLOBAL_CONST_FIVE)
(9,)
(10,i<10)
(11,dataUninitArray)
(12,i++)
(13,data)
(14,data)
(15,if(GLOBAL_CONST_FIVE==5)
(16,for(i=0; i<10; i++)
(17,0)
(18,dataUninitArray)
(19,i)
(20,10)
(21,5)
(22,if(GLOBAL_CONST_FIVE==5)
(23,)
(24,i)
(25,GLOBAL_CONST_FIVE==5)
(26,)
(27,i)
(28,GLOBAL_CONST_FIVE)
(29,5)
(30,RET)
(31,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^