-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_14_bad()
{
    twoIntsStruct * data;
    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i].intOne);
                printIntLine(data[i].intTwo);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
17,19
18,19
18,20
19,20
21,22
23,24
23,25
24,25
26,27
26,28
28,29
29,30
29,31
30,31
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
46,47
46,48
47,48
47,49
48,49
51,52
53,54
53,55
54,55
54,56
55,56
58,59
59,60
59,61
60,61
61,62
61,63
63,64
65,66
65,67
65,68
65,69
66,67
67,68
67,69
68,69
71,72
71,73
72,73
75,76
76,77
78,79
78,80
79,80
80,81
80,82
81,82
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
94,96
95,96
95,97
96,97
98,99
-----nextToken-----
2,4,9,11,12,16,20,22,25,27,31,32,36,38,43,45,49,50,52,56,57,62,64,69,70,73,74,77,82,86,88,89,93,97,99,100
-----computeFrom-----
14,15
14,16
26,27
26,28
34,35
34,36
47,48
47,49
54,55
54,56
67,68
67,69
71,72
71,73
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_14_bad(){    twoIntsStruct * data;    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    if(globalFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_14_bad()
CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_14_bad
{    twoIntsStruct * data;    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    if(globalFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));
data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)malloc(10*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
malloc(10*sizeof(twoIntsStruct))
malloc
malloc
10*sizeof(twoIntsStruct)
10
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
if(globalFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
printIntLine(data[i].intOne);
printIntLine(data[i].intOne)
printIntLine
printIntLine
data[i].intOne
data[i]
data
data
i
i
intOne
printIntLine(data[i].intTwo);
printIntLine(data[i].intTwo)
printIntLine
printIntLine
data[i].intTwo
data[i]
data
data
i
i
intTwo
-----joern-----
(25,51,0)
(23,18,0)
(8,19,0)
(18,19,0)
(30,3,0)
(32,50,0)
(6,3,0)
(40,38,0)
(19,5,0)
(26,50,0)
(34,42,0)
(39,45,0)
(5,19,0)
(35,31,0)
(15,48,0)
(46,5,0)
(47,22,0)
(2,34,0)
(13,18,0)
(52,27,0)
(35,41,0)
(5,31,0)
(28,48,0)
(45,0,0)
(18,0,0)
(22,47,0)
(37,38,0)
(20,35,0)
(17,42,0)
(36,0,0)
(4,50,0)
(31,5,0)
(7,47,0)
(21,41,0)
(31,35,0)
(43,50,0)
(24,0,0)
(19,50,0)
(1,23,0)
(48,19,0)
(22,29,0)
(14,18,0)
(9,33,0)
(27,0,0)
(23,11,0)
(42,25,0)
(11,51,0)
(34,19,0)
(25,42,0)
(12,33,0)
(49,45,0)
(34,0,0)
(18,23,0)
(38,16,0)
(42,34,0)
(5,46,0)
(10,34,0)
(41,35,0)
(11,23,0)
(12,22,1)
(39,49,1)
(49,27,1)
(19,5,1)
(35,41,1)
(18,19,1)
(11,23,1)
(42,17,1)
(45,0,1)
(34,2,1)
(13,14,1)
(5,31,1)
(36,3,1)
(7,48,1)
(52,11,1)
(49,0,1)
(21,20,1)
(1,18,1)
(47,7,1)
(24,36,1)
(48,19,1)
(14,25,1)
(41,21,1)
(27,0,1)
(23,1,1)
(34,19,1)
(42,34,1)
(17,34,1)
(45,39,1)
(44,45,1)
(0,24,1)
(2,10,1)
(44,3,1)
(27,52,1)
(18,0,1)
(12,48,1)
(25,42,1)
(48,15,1)
(3,30,1)
(20,8,1)
(23,18,1)
(18,13,1)
(28,19,1)
(33,9,1)
(31,35,1)
(9,12,1)
(34,0,1)
(5,46,1)
(15,28,1)
(30,6,1)
(10,45,1)
(22,47,1)
(6,33,1)
(31,35,2)
(17,45,2)
(22,47,2)
(0,3,2)
(1,45,2)
(10,45,2)
(23,18,2)
(25,42,2)
(39,45,2)
(36,3,2)
(13,45,2)
(25,45,2)
(45,45,2)
(45,0,2)
(18,45,2)
(34,19,2)
(2,45,2)
(5,31,2)
(52,45,2)
(34,0,2)
(42,34,2)
(45,3,2)
(18,19,2)
(47,48,2)
(27,0,2)
(49,3,2)
(19,5,2)
(23,45,2)
(27,45,2)
(49,45,2)
(18,0,2)
(22,48,2)
(11,45,2)
(24,3,2)
(35,41,2)
(42,45,2)
(39,3,2)
(14,45,2)
(34,45,2)
(48,19,2)
(11,23,2)
(7,48,2)
(5,46,2)
-----------------------------------
(0,i=0)
(1,intTwo)
(2,i)
(3,globalFive==5)
(4,if(globalFive==5)
(5,(twoIntsStruct *)
(6,globalFive)
(7,1)
(8,data)
(9,5)
(10,data)
(11,printIntLine(data[i].intTwo)
(12,globalFive)
(13,i)
(14,data)
(15,NULL)
(16,)
(17,intOne)
(18,data[i])
(19,data = (twoIntsStruct *)
(20,10)
(21,twoIntsStruct)
(22,exit(-1)
(23,data[i].intTwo)
(24,0)
(25,printIntLine(data[i].intOne)
(26,if (data == NULL)
(27,i++)
(28,data)
(29,)
(30,5)
(31,malloc(10*sizeof(twoIntsStruct)
(32,if(globalFive==5)
(33,globalFive==5)
(34,data[i])
(35,10*sizeof(twoIntsStruct)
(36,i)
(37,i)
(38,)
(39,10)
(40,for(i=0; i<10; i++)
(41,sizeof(twoIntsStruct)
(42,data[i].intOne)
(43,data)
(44,RET)
(45,i<10)
(46,twoIntsStruct *)
(47,-1)
(48,data == NULL)
(49,i)
(50,)
(51,)
(52,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^