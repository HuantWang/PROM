-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_07_bad()
{
    int * data;
    data = (int *)ALLOCA(10*sizeof(int));
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
35,36
37,38
37,39
38,39
38,40
39,40
42,43
43,44
43,45
44,45
45,46
45,47
47,48
49,50
49,51
49,52
49,53
50,51
51,52
51,53
52,53
55,56
55,57
56,57
59,60
60,61
62,63
63,64
64,65
64,66
65,66
67,68
67,69
68,69
70,71
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,34,36,40,41,46,48,53,54,57,58,61,66,69,71
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
38,39
38,40
51,52
51,53
55,56
55,57
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_07_bad(){    int * data;    data = (int *)ALLOCA(10*sizeof(int));    if(staticFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_07_bad()
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_07_bad
{    int * data;    data = (int *)ALLOCA(10*sizeof(int));    if(staticFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
int * data;
int * data;
int
* data
*
data
data = (int *)ALLOCA(10*sizeof(int));
data = (int *)ALLOCA(10*sizeof(int))
data
data
(int *)ALLOCA(10*sizeof(int))
int *
int
*
*
ALLOCA(10*sizeof(int))
ALLOCA
ALLOCA
10*sizeof(int)
10
sizeof(int)
int
int

if(staticFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i]);            }
printIntLine(data[i]);
printIntLine(data[i])
printIntLine
printIntLine
data[i]
data
data
i
i
-----joern-----
(6,33,0)
(9,21,0)
(3,30,0)
(30,5,0)
(21,5,0)
(26,14,0)
(18,2,0)
(28,6,0)
(4,34,0)
(13,18,0)
(23,2,0)
(14,7,0)
(12,31,0)
(32,36,0)
(30,2,0)
(7,9,0)
(4,30,0)
(8,19,0)
(5,19,0)
(30,4,0)
(15,2,0)
(25,2,0)
(21,35,0)
(21,9,0)
(29,30,0)
(1,6,0)
(10,7,0)
(11,19,0)
(20,5,0)
(0,31,0)
(22,18,0)
(5,21,0)
(24,36,0)
(27,25,0)
(16,19,0)
(9,7,0)
(7,14,0)
(35,21,0)
(2,23,1)
(30,5,1)
(10,20,1)
(22,25,1)
(27,4,1)
(23,15,1)
(29,3,1)
(4,30,1)
(22,2,1)
(30,2,1)
(25,27,1)
(21,35,1)
(21,9,1)
(13,22,1)
(0,36,1)
(18,2,1)
(15,31,1)
(24,5,1)
(32,24,1)
(30,29,1)
(7,14,1)
(5,21,1)
(3,18,1)
(17,18,1)
(14,26,1)
(25,2,1)
(36,32,1)
(31,12,1)
(26,10,1)
(9,7,1)
(17,31,1)
(18,13,1)
(12,0,1)
(29,18,2)
(21,35,2)
(3,18,2)
(21,9,2)
(30,2,2)
(5,21,2)
(22,18,2)
(2,31,2)
(18,31,2)
(13,31,2)
(7,14,2)
(4,18,2)
(4,30,2)
(22,31,2)
(23,31,2)
(18,2,2)
(18,18,2)
(25,2,2)
(30,18,2)
(9,7,2)
(25,18,2)
(15,31,2)
(13,18,2)
(27,18,2)
(30,5,2)
-----------------------------------
(0,staticFive)
(1,i)
(2,i=0)
(3,data)
(4,printIntLine(data[i])
(5,data = (int *)
(6,)
(7,10*sizeof(int)
(8,if(staticFive==5)
(9,ALLOCA(10*sizeof(int)
(10,10)
(11,data)
(12,5)
(13,10)
(14,sizeof(int)
(15,i)
(16,if(staticFive==5)
(17,RET)
(18,i<10)
(19,)
(20,data)
(21,(int *)
(22,i)
(23,0)
(24,staticFive)
(25,i++)
(26,int)
(27,i)
(28,for(i=0; i<10; i++)
(29,i)
(30,data[i])
(31,staticFive==5)
(32,5)
(33,)
(34,)
(35,int *)
(36,staticFive==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^