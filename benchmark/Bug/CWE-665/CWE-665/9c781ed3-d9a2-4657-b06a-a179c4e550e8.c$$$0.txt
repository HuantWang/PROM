-----label-----
1
-----code-----
void CWE665_Improper_Initialization__char_ncat_17_bad()
{
    int i;
    char * data;
    char dataBuffer[100];
    data = dataBuffer;
    for(i = 0; i < 1; i++)
    {
        /* FLAW: Do not initialize data */
        ; /* empty statement needed for some flow variants */
    }
    {
        size_t sourceLen;
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        sourceLen = strlen(source);
        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */
        strncat(data, source, sourceLen);
        printLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
17,18
18,19
18,20
20,21
20,22
22,23
24,25
25,26
25,27
26,27
28,29
30,31
30,32
30,33
30,34
31,32
32,33
32,34
33,34
36,37
36,38
37,38
40,41
41,42
43,44
45,46
45,47
45,48
45,49
45,50
45,51
45,52
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
55,56
55,57
57,58
59,60
60,61
60,62
60,63
60,64
61,62
63,64
66,67
66,68
69,70
70,71
70,72
71,72
71,73
72,73
74,75
74,76
78,79
79,80
79,81
80,81
82,83
82,84
83,84
85,86
87,88
88,89
88,90
88,91
88,92
89,90
91,92
93,94
95,96
97,98
98,99
98,100
99,100
101,102
-----nextToken-----
2,4,8,10,13,15,16,19,21,23,27,29,34,35,38,39,42,44,49,51,54,56,58,62,64,65,67,68,73,75,76,77,81,84,86,90,92,94,96,100,102
-----computeFrom-----
25,26
25,27
32,33
32,34
36,37
36,38
66,67
66,68
70,71
70,72
74,75
74,76
79,80
79,81
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;NullStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__char_ncat_17_bad(){    int i;    char * data;    char dataBuffer[100];    data = dataBuffer;    for(i = 0; i < 1; i++)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }}
void
CWE665_Improper_Initialization__char_ncat_17_bad()
CWE665_Improper_Initialization__char_ncat_17_bad
{    int i;    char * data;    char dataBuffer[100];    data = dataBuffer;    for(i = 0; i < 1; i++)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }}
int i;
int i;
int
i
i
char * data;
char * data;
char
* data
*
data
char dataBuffer[100];
char dataBuffer[100];
char
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
for(i = 0; i < 1; i++)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
;
{        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
sourceLen = strlen(source);
sourceLen = strlen(source)
sourceLen
sourceLen
strlen(source)
strlen
strlen
source
source
strncat(data, source, sourceLen);
strncat(data, source, sourceLen)
strncat
strncat
data
data
source
source
sourceLen
sourceLen
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(26,10,0)
(11,25,0)
(33,6,0)
(4,25,0)
(36,10,0)
(32,40,0)
(9,15,0)
(32,30,0)
(42,29,0)
(17,37,0)
(3,26,0)
(11,15,0)
(28,13,0)
(13,9,0)
(14,29,0)
(22,15,0)
(30,15,0)
(8,22,0)
(27,37,0)
(5,32,0)
(22,6,0)
(0,29,0)
(24,16,0)
(31,10,0)
(19,22,0)
(38,15,0)
(41,15,0)
(34,6,0)
(21,9,0)
(9,16,0)
(13,25,0)
(39,40,0)
(6,22,0)
(15,29,0)
(40,32,0)
(13,15,0)
(7,13,0)
(1,40,0)
(23,11,0)
(20,29,0)
(35,13,0)
(37,10,0)
(25,29,0)
(18,30,0)
(12,25,0)
(16,9,0)
(39,1,1)
(27,26,1)
(8,37,1)
(26,3,1)
(4,12,1)
(7,9,1)
(31,25,1)
(6,33,1)
(36,31,1)
(13,35,1)
(1,5,1)
(27,10,1)
(33,34,1)
(10,36,1)
(19,8,1)
(23,13,1)
(37,17,1)
(9,16,1)
(16,24,1)
(5,22,1)
(35,28,1)
(11,25,1)
(13,9,1)
(18,32,1)
(22,6,1)
(26,10,1)
(25,4,1)
(21,30,1)
(2,11,1)
(30,18,1)
(13,25,1)
(17,27,1)
(40,39,1)
(32,40,1)
(28,7,1)
(34,19,1)
(37,10,1)
(11,23,1)
(3,37,1)
(24,21,1)
(26,37,2)
(17,37,2)
(13,9,2)
(26,10,2)
(37,10,2)
(11,25,2)
(3,37,2)
(9,16,2)
(32,40,2)
(13,25,2)
(22,6,2)
(27,37,2)
(37,37,2)
-----------------------------------
(0,i)
(1,100)
(2,RET)
(3,i)
(4,dataBuffer)
(5,source)
(6,100-1)
(7,data)
(8,source)
(9,sourceLen = strlen(source)
(10,i = 0)
(11,printLine(data)
(12,data)
(13,strncat(data, source, sourceLen)
(14,dataBuffer)
(15,)
(16,strlen(source)
(17,1)
(18,'\\0')
(19,'C')
(20,data)
(21,sourceLen)
(22,memset(source, 'C', 100-1)
(23,data)
(24,source)
(25,data = dataBuffer)
(26,i++)
(27,i)
(28,source)
(29,)
(30,source[100-1] = '\\0')
(31,i)
(32,source[100-1])
(33,1)
(34,100)
(35,sourceLen)
(36,0)
(37,i < 1)
(38,source)
(39,1)
(40,100-1)
(41,sourceLen)
(42,for(i = 0; i < 1; i++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^