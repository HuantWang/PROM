-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14_bad()
{
    double * data;
    double dataUninitArray[10];
    data = dataUninitArray;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
26,28
27,28
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
40,41
40,42
42,43
44,45
44,46
44,47
44,48
45,46
46,47
46,48
47,48
50,51
50,52
51,52
54,55
55,56
57,58
58,59
59,60
59,61
60,61
62,63
62,64
63,64
65,66
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,28,29,31,35,36,41,43,48,49,52,53,56,61,64,66
-----computeFrom-----
20,21
20,22
26,27
26,28
33,34
33,35
46,47
46,48
50,51
50,52
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14_bad(){    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(globalFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14_bad
{    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(globalFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
double dataUninitArray[10];
double dataUninitArray[10];
double
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
if(globalFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(30,0,0)
(9,23,0)
(31,0,0)
(5,14,0)
(26,3,0)
(27,10,0)
(11,2,0)
(31,15,0)
(16,1,0)
(24,0,0)
(15,7,0)
(25,31,0)
(4,16,0)
(28,3,0)
(12,16,0)
(18,2,0)
(13,2,0)
(31,14,0)
(23,14,0)
(0,2,0)
(22,2,0)
(19,10,0)
(6,23,0)
(29,31,0)
(20,17,0)
(21,14,0)
(17,14,0)
(15,31,0)
(9,17,1)
(10,27,1)
(23,6,1)
(14,5,1)
(31,29,1)
(5,21,1)
(0,30,1)
(20,15,1)
(25,23,1)
(9,14,1)
(8,23,1)
(6,9,1)
(17,14,1)
(19,0,1)
(29,25,1)
(31,14,1)
(8,3,1)
(30,24,1)
(27,19,1)
(17,20,1)
(26,10,1)
(31,0,1)
(28,26,1)
(23,14,1)
(21,3,1)
(15,31,1)
(3,28,1)
(6,3,2)
(15,23,2)
(21,3,2)
(29,23,2)
(23,14,2)
(9,23,2)
(14,3,2)
(31,0,2)
(6,23,2)
(17,14,2)
(5,3,2)
(9,3,2)
(23,3,2)
(23,23,2)
(31,23,2)
(17,23,2)
(31,14,2)
(20,23,2)
(15,31,2)
(25,23,2)
-----------------------------------
(0,data = dataUninitArray)
(1,)
(2,)
(3,globalFive==5)
(4,i)
(5,0)
(6,10)
(7,)
(8,RET)
(9,i)
(10,globalFive==5)
(11,if(globalFive==5)
(12,for(i=0; i<10; i++)
(13,data)
(14,i=0)
(15,printDoubleLine(data[i])
(16,)
(17,i++)
(18,if(globalFive==5)
(19,globalFive)
(20,i)
(21,i)
(22,dataUninitArray)
(23,i<10)
(24,data)
(25,data)
(26,globalFive)
(27,5)
(28,5)
(29,i)
(30,dataUninitArray)
(31,data[i])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^