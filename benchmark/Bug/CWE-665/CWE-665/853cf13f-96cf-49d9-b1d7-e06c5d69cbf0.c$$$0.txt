-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_16_bad()
{
    double * data;
    double dataUninitArray[10];
    data = dataUninitArray;
    while(1)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
        break;
    }
    while(1)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
27,28
27,29
30,31
30,32
32,33
32,34
33,34
33,35
34,35
35,36
35,37
37,38
39,40
39,41
39,42
39,43
40,41
41,42
41,43
42,43
45,46
45,47
46,47
49,50
50,51
52,53
53,54
54,55
54,56
55,56
57,58
57,59
58,59
60,61
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,26,28,29,31,36,38,43,44,47,48,51,56,59,61,62
-----computeFrom-----
20,21
20,22
41,42
41,43
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;NullStatement;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_16_bad(){    double * data;    double dataUninitArray[10];    data = dataUninitArray;    while(1)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    }    while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }        break;    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_16_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_16_bad
{    double * data;    double dataUninitArray[10];    data = dataUninitArray;    while(1)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    }    while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }        break;    }}
double * data;
double * data;
double
* data
*
data
double dataUninitArray[10];
double dataUninitArray[10];
double
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
while(1)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    }
1
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */        break;    }
;
break;
while(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }        break;    }
1
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }        break;    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
break;
-----joern-----
(18,13,0)
(12,26,0)
(20,25,0)
(11,13,0)
(28,13,0)
(0,25,0)
(11,26,0)
(24,26,0)
(15,10,0)
(10,29,0)
(6,27,0)
(26,25,0)
(6,11,0)
(5,13,0)
(21,28,0)
(19,25,0)
(22,11,0)
(7,1,0)
(2,10,0)
(17,13,0)
(9,17,0)
(11,6,0)
(4,17,0)
(16,29,0)
(30,25,0)
(8,11,0)
(28,21,1)
(3,23,1)
(4,13,1)
(22,8,1)
(8,17,1)
(16,17,1)
(5,3,1)
(11,13,1)
(18,5,1)
(12,24,1)
(28,13,1)
(3,7,1)
(23,26,1)
(9,4,1)
(11,22,1)
(14,3,1)
(6,11,1)
(11,26,1)
(14,16,1)
(21,6,1)
(26,12,1)
(4,28,1)
(17,9,1)
(13,18,1)
(17,13,1)
(7,23,1)
(16,3,2)
(28,13,2)
(6,17,2)
(9,17,2)
(18,3,2)
(17,17,2)
(9,3,2)
(22,17,2)
(13,3,2)
(11,13,2)
(17,3,2)
(5,3,2)
(11,17,2)
(7,23,2)
(8,17,2)
(21,17,2)
(4,17,2)
(11,26,2)
(4,3,2)
(28,17,2)
(17,13,2)
(6,11,2)
-----------------------------------
(0,while(1)
(1,)
(2,for(i=0; i<10; i++)
(3,1)
(4,i)
(5,i)
(6,printDoubleLine(data[i])
(7,break;)
(8,data)
(9,10)
(10,)
(11,data[i])
(12,dataUninitArray)
(13,i=0)
(14,RET)
(15,i)
(16,break;)
(17,i<10)
(18,0)
(19,while(1)
(20,dataUninitArray)
(21,i)
(22,i)
(23,1)
(24,data)
(25,)
(26,data = dataUninitArray)
(27,)
(28,i++)
(29,)
(30,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^