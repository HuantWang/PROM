-----label-----
1
-----code-----
void CWE665_Improper_Initialization__char_cat_18_bad()
{
    char * data;
    char dataBuffer[100];
    data = dataBuffer;
    goto source;
source:
    /* FLAW: Do not initialize data */
    ; /* empty statement needed for some flow variants */
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */
        strcat(data, source);
        printLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
27,28
27,29
30,31
30,32
30,33
30,34
30,35
31,32
32,33
32,34
34,35
34,36
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
58,59
58,60
58,61
59,60
61,62
63,64
65,66
66,67
66,68
67,68
69,70
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,26,28,29,33,35,37,41,43,44,46,47,52,54,55,56,60,62,64,68,70
-----computeFrom-----
20,21
20,22
45,46
45,47
49,50
49,51
53,54
53,55
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;NullStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__char_cat_18_bad(){    char * data;    char dataBuffer[100];    data = dataBuffer;    goto source;source:    /* FLAW: Do not initialize data */    ; /* empty statement needed for some flow variants */    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */        strcat(data, source);        printLine(data);    }}
void
CWE665_Improper_Initialization__char_cat_18_bad()
CWE665_Improper_Initialization__char_cat_18_bad
{    char * data;    char dataBuffer[100];    data = dataBuffer;    goto source;source:    /* FLAW: Do not initialize data */    ; /* empty statement needed for some flow variants */    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */        strcat(data, source);        printLine(data);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100];
char dataBuffer[100];
char
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
goto source;
source
source:    /* FLAW: Do not initialize data */    ;
source
;
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */        strcat(data, source);        printLine(data);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
strcat(data, source);
strcat(data, source)
strcat
strcat
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(9,17,0)
(4,12,0)
(5,6,0)
(14,28,0)
(15,12,0)
(6,5,0)
(10,28,0)
(27,12,0)
(2,12,0)
(26,9,0)
(1,6,0)
(11,22,0)
(17,22,0)
(23,9,0)
(20,22,0)
(0,17,0)
(3,28,0)
(8,22,0)
(13,14,0)
(22,12,0)
(28,12,0)
(18,14,0)
(14,22,0)
(19,17,0)
(24,11,0)
(5,8,0)
(17,9,0)
(7,5,0)
(11,28,0)
(25,8,0)
(21,6,0)
(28,10,1)
(14,18,1)
(5,6,1)
(14,28,1)
(25,5,1)
(11,24,1)
(13,8,1)
(26,0,1)
(24,14,1)
(23,26,1)
(17,9,1)
(19,27,1)
(6,1,1)
(7,17,1)
(18,13,1)
(1,21,1)
(8,25,1)
(16,11,1)
(0,19,1)
(10,3,1)
(11,28,1)
(27,28,1)
(9,23,1)
(21,7,1)
(11,28,2)
(17,9,2)
(5,6,2)
(14,28,2)
-----------------------------------
(0,'C')
(1,1)
(2,data)
(3,data)
(4,dataBuffer)
(5,source[100-1])
(6,100-1)
(7,source)
(8,source[100-1] = '\\0')
(9,100-1)
(10,dataBuffer)
(11,printLine(data)
(12,)
(13,data)
(14,strcat(data, source)
(15,source:)
(16,RET)
(17,memset(source, 'C', 100-1)
(18,source)
(19,source)
(20,source)
(21,100)
(22,)
(23,1)
(24,data)
(25,'\\0')
(26,100)
(27,goto source;)
(28,data = dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^