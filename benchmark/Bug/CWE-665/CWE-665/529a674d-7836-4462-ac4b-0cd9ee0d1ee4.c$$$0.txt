-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_02_bad()
{
    double * data;
    data = (double *)ALLOCA(10*sizeof(double));
    if(1)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i] = (double)i;
            }
        }
    }
    if(1)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
32,33
33,34
33,35
34,35
35,36
35,37
37,38
39,40
39,41
39,42
39,43
40,41
41,42
41,43
42,43
45,46
45,47
46,47
48,49
49,50
49,51
52,53
53,54
55,56
56,57
57,58
57,59
58,59
58,60
59,60
61,62
63,64
63,65
64,65
64,66
67,68
69,70
69,71
71,72
72,73
72,74
73,74
74,75
74,76
76,77
78,79
78,80
78,81
78,82
79,80
80,81
80,82
81,82
84,85
84,86
85,86
88,89
89,90
91,92
92,93
93,94
93,95
94,95
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,31,36,38,43,44,47,50,51,54,60,62,65,66,68,70,75,77,82,83,86,87,90,95,98,100
-----computeFrom-----
13,14
13,15
24,25
24,26
41,42
41,43
45,46
45,47
49,50
49,51
57,58
57,59
80,81
80,82
84,85
84,86
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_02_bad(){    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(1)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    if(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_02_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_02_bad
{    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(1)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    if(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
data = (double *)ALLOCA(10*sizeof(double));
data = (double *)ALLOCA(10*sizeof(double))
data
data
(double *)ALLOCA(10*sizeof(double))
double *
double
*
*
ALLOCA(10*sizeof(double))
ALLOCA
ALLOCA
10*sizeof(double)
10
sizeof(double)
double
double

if(1)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
1
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i] = (double)i;            }
data[i] = (double)i;
data[i] = (double)i
data[i]
data
data
i
i
(double)i
double
double

i
i
if(1)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
1
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(23,1,0)
(39,52,0)
(1,13,0)
(49,40,0)
(1,53,0)
(27,53,0)
(20,13,0)
(50,34,0)
(12,32,0)
(31,5,0)
(15,34,0)
(5,53,0)
(22,15,0)
(25,5,0)
(38,14,0)
(6,13,0)
(0,9,0)
(54,2,0)
(49,22,0)
(23,18,0)
(53,48,0)
(45,12,0)
(11,20,0)
(29,52,0)
(17,9,0)
(15,22,0)
(53,27,0)
(27,52,0)
(21,1,0)
(14,44,0)
(4,34,0)
(1,15,0)
(46,22,0)
(19,15,0)
(33,6,0)
(22,46,0)
(43,9,0)
(24,6,0)
(16,17,0)
(2,52,0)
(41,14,0)
(10,13,0)
(27,36,0)
(42,40,0)
(3,51,0)
(30,13,0)
(9,17,0)
(51,40,0)
(36,27,0)
(5,52,0)
(1,23,0)
(35,1,0)
(40,51,0)
(7,27,0)
(22,49,0)
(40,49,0)
(5,15,0)
(17,52,0)
(8,34,0)
(37,12,0)
(49,40,1)
(28,15,1)
(35,6,1)
(17,52,1)
(29,39,1)
(15,22,1)
(20,11,1)
(25,31,1)
(0,16,1)
(3,42,1)
(54,53,1)
(13,30,1)
(20,13,1)
(5,25,1)
(24,20,1)
(6,13,1)
(1,15,1)
(16,52,1)
(53,27,1)
(9,43,1)
(26,28,1)
(40,51,1)
(2,52,1)
(24,13,1)
(17,9,1)
(23,1,1)
(7,5,1)
(1,13,1)
(10,26,1)
(22,46,1)
(33,24,1)
(21,35,1)
(43,0,1)
(6,33,1)
(42,19,1)
(1,21,1)
(1,53,1)
(27,7,1)
(51,3,1)
(5,52,1)
(47,6,1)
(47,26,1)
(5,15,1)
(30,10,1)
(27,52,1)
(31,17,1)
(16,2,1)
(11,23,1)
(26,17,1)
(39,28,1)
(27,36,1)
(2,54,1)
(22,49,1)
(52,29,1)
(54,17,2)
(40,51,2)
(24,26,2)
(1,6,2)
(17,52,2)
(53,17,2)
(27,17,2)
(33,26,2)
(35,6,2)
(39,28,2)
(21,6,2)
(31,17,2)
(22,49,2)
(20,6,2)
(6,26,2)
(49,40,2)
(1,53,2)
(5,17,2)
(43,28,2)
(43,17,2)
(22,46,2)
(25,17,2)
(53,27,2)
(9,17,2)
(6,6,2)
(6,13,2)
(23,6,2)
(0,28,2)
(17,28,2)
(2,17,2)
(16,28,2)
(16,17,2)
(7,17,2)
(2,52,2)
(13,26,2)
(30,26,2)
(10,26,2)
(23,1,2)
(17,17,2)
(15,22,2)
(20,13,2)
(24,6,2)
(5,52,2)
(27,52,2)
(11,6,2)
(0,17,2)
(1,15,2)
(9,28,2)
(5,15,2)
(52,28,2)
(1,13,2)
(27,36,2)
(29,28,2)
(17,9,2)
(33,6,2)
-----------------------------------
(0,10)
(1,data[i])
(2,i++)
(3,double)
(4,if(1)
(5,data[i])
(6,i<10)
(7,i)
(8,if(1)
(9,10/2)
(10,i)
(11,i)
(12,)
(13,i=0)
(14,)
(15,data = (double *)
(16,i)
(17,i<(10/2)
(18,)
(19,data)
(20,i++)
(21,i)
(22,(double *)
(23,printDoubleLine(data[i])
(24,i)
(25,i)
(26,1)
(27,(double)
(28,1)
(29,0)
(30,0)
(31,data)
(32,)
(33,10)
(34,)
(35,data)
(36,double)
(37,i)
(38,for(i=0; i<(10/2)
(39,i)
(40,10*sizeof(double)
(41,i)
(42,10)
(43,2)
(44,)
(45,for(i=0; i<10; i++)
(46,double *)
(47,RET)
(48,)
(49,ALLOCA(10*sizeof(double)
(50,data)
(51,sizeof(double)
(52,i=0)
(53,data[i] = (double)
(54,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^