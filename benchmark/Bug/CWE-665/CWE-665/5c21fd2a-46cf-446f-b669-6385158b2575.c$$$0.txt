-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_07_bad()
{
    twoIntsStruct * data;
    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i].intOne);
                printIntLine(data[i].intTwo);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
17,19
18,19
18,20
19,20
21,22
23,24
23,25
24,25
26,27
26,28
28,29
29,30
29,31
30,31
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
46,47
46,48
47,48
47,49
48,49
51,52
53,54
53,55
54,55
54,56
55,56
58,59
59,60
59,61
60,61
61,62
61,63
63,64
65,66
65,67
65,68
65,69
66,67
67,68
67,69
68,69
71,72
71,73
72,73
75,76
76,77
78,79
78,80
79,80
80,81
80,82
81,82
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
94,96
95,96
95,97
96,97
98,99
-----nextToken-----
2,4,9,11,12,16,20,22,25,27,31,32,36,38,43,45,49,50,52,56,57,62,64,69,70,73,74,77,82,86,88,89,93,97,99,100
-----computeFrom-----
14,15
14,16
26,27
26,28
34,35
34,36
47,48
47,49
54,55
54,56
67,68
67,69
71,72
71,73
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_07_bad(){    twoIntsStruct * data;    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    if(staticFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_07_bad()
CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_07_bad
{    twoIntsStruct * data;    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    if(staticFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));
data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)malloc(10*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
malloc(10*sizeof(twoIntsStruct))
malloc
malloc
10*sizeof(twoIntsStruct)
10
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
if(staticFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
printIntLine(data[i].intOne);
printIntLine(data[i].intOne)
printIntLine
printIntLine
data[i].intOne
data[i]
data
data
i
i
intOne
printIntLine(data[i].intTwo);
printIntLine(data[i].intTwo)
printIntLine
printIntLine
data[i].intTwo
data[i]
data
data
i
i
intTwo
-----joern-----
(25,31,0)
(2,1,0)
(31,30,0)
(3,11,0)
(30,12,0)
(42,49,0)
(10,48,0)
(44,0,0)
(25,41,0)
(23,0,0)
(40,1,0)
(39,25,0)
(12,30,0)
(51,13,0)
(7,39,0)
(37,3,0)
(24,6,0)
(25,39,0)
(52,13,0)
(16,13,0)
(1,2,0)
(20,7,0)
(11,3,0)
(35,18,0)
(27,9,0)
(30,31,0)
(46,12,0)
(19,9,0)
(50,26,0)
(11,10,0)
(32,30,0)
(3,39,0)
(35,48,0)
(31,25,0)
(29,14,0)
(6,39,0)
(43,49,0)
(9,14,0)
(28,26,0)
(4,3,0)
(21,14,0)
(6,18,0)
(6,14,0)
(38,18,0)
(22,13,0)
(18,6,0)
(10,11,0)
(33,29,0)
(8,14,0)
(39,13,0)
(2,15,0)
(3,14,0)
(36,6,0)
(18,35,0)
(26,5,0)
(45,11,0)
(17,39,0)
(41,25,0)
(34,7,0)
(18,6,1)
(38,6,1)
(10,11,1)
(7,34,1)
(44,7,1)
(29,14,1)
(45,3,1)
(34,20,1)
(9,14,1)
(43,42,1)
(40,7,1)
(37,9,1)
(35,18,1)
(0,23,1)
(4,37,1)
(21,8,1)
(29,33,1)
(44,2,1)
(14,21,1)
(24,10,1)
(25,41,1)
(3,39,1)
(3,4,1)
(2,1,1)
(23,44,1)
(11,45,1)
(7,39,1)
(11,3,1)
(47,9,1)
(32,17,1)
(27,29,1)
(18,38,1)
(47,49,1)
(46,32,1)
(6,39,1)
(30,12,1)
(49,43,1)
(3,14,1)
(9,19,1)
(6,36,1)
(1,40,1)
(27,14,1)
(39,25,1)
(36,24,1)
(25,31,1)
(31,30,1)
(42,0,1)
(6,14,1)
(12,46,1)
(8,49,1)
(20,39,1)
(19,27,1)
(33,35,1)
(39,25,2)
(9,9,2)
(11,3,2)
(14,49,2)
(2,7,2)
(35,18,2)
(4,9,2)
(8,49,2)
(9,49,2)
(24,9,2)
(19,49,2)
(7,39,2)
(3,39,2)
(45,9,2)
(10,9,2)
(29,14,2)
(6,39,2)
(37,9,2)
(19,9,2)
(30,12,2)
(3,14,2)
(40,7,2)
(2,1,2)
(31,30,2)
(25,41,2)
(18,6,2)
(11,9,2)
(38,9,2)
(27,9,2)
(1,7,2)
(6,14,2)
(27,49,2)
(33,9,2)
(6,9,2)
(25,31,2)
(35,9,2)
(36,9,2)
(21,49,2)
(18,9,2)
(10,11,2)
(9,14,2)
(3,9,2)
(29,9,2)
-----------------------------------
(0,staticFive==5)
(1,-1)
(2,exit(-1)
(3,data[i])
(4,i)
(5,)
(6,data[i])
(7,data == NULL)
(8,i)
(9,i<10)
(10,printIntLine(data[i].intOne)
(11,data[i].intOne)
(12,sizeof(twoIntsStruct)
(13,)
(14,i=0)
(15,)
(16,if(staticFive==5)
(17,data)
(18,data[i].intTwo)
(19,10)
(20,data)
(21,0)
(22,data)
(23,5)
(24,data)
(25,(twoIntsStruct *)
(26,)
(27,i)
(28,for(i=0; i<10; i++)
(29,i++)
(30,10*sizeof(twoIntsStruct)
(31,malloc(10*sizeof(twoIntsStruct)
(32,10)
(33,i)
(34,NULL)
(35,printIntLine(data[i].intTwo)
(36,i)
(37,data)
(38,intTwo)
(39,data = (twoIntsStruct *)
(40,1)
(41,twoIntsStruct *)
(42,staticFive)
(43,5)
(44,staticFive)
(45,intOne)
(46,twoIntsStruct)
(47,RET)
(48,)
(49,staticFive==5)
(50,i)
(51,if(staticFive==5)
(52,if (data == NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^