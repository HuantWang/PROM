-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_04_bad()
{
    double * data;
    double dataUninitArray[10];
    data = dataUninitArray;
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i] = (double)i;
            }
        }
    }
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
28,29
29,30
29,31
30,31
31,32
31,33
33,34
35,36
35,37
35,38
35,39
36,37
37,38
37,39
38,39
41,42
41,43
42,43
44,45
45,46
45,47
48,49
49,50
51,52
52,53
53,54
53,55
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
63,64
65,66
65,67
66,67
68,69
69,70
69,71
70,71
71,72
71,73
73,74
75,76
75,77
75,78
75,79
76,77
77,78
77,79
78,79
81,82
81,83
82,83
85,86
86,87
88,89
89,90
90,91
90,92
91,92
93,94
93,95
94,95
96,97
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,27,32,34,39,40,43,46,47,50,56,58,61,62,64,67,72,74,79,80,83,84,87,92,95,97
-----computeFrom-----
20,21
20,22
37,38
37,39
41,42
41,43
45,46
45,47
53,54
53,55
77,78
77,79
81,82
81,83
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_04_bad(){    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_04_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_04_bad
{    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
double dataUninitArray[10];
double dataUninitArray[10];
double
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i] = (double)i;            }
data[i] = (double)i;
data[i] = (double)i
data[i]
data
data
i
i
(double)i
double
double

i
i
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(48,32,0)
(8,35,0)
(4,29,0)
(16,13,0)
(12,42,0)
(30,11,0)
(19,10,0)
(3,17,0)
(17,18,0)
(5,29,0)
(45,17,0)
(44,8,0)
(0,11,0)
(27,35,0)
(15,35,0)
(18,17,0)
(47,18,0)
(13,30,0)
(29,38,0)
(34,13,0)
(21,32,0)
(10,7,0)
(13,44,0)
(44,40,0)
(13,2,0)
(22,49,0)
(32,35,0)
(24,27,0)
(1,10,0)
(14,11,0)
(2,39,0)
(26,8,0)
(32,44,0)
(8,20,0)
(25,42,0)
(31,30,0)
(28,11,0)
(6,42,0)
(18,35,0)
(32,30,0)
(8,44,0)
(20,8,0)
(13,42,0)
(46,49,0)
(36,6,0)
(2,13,0)
(37,30,0)
(49,42,0)
(9,35,0)
(23,11,0)
(27,35,1)
(42,25,1)
(15,41,1)
(49,42,1)
(30,37,1)
(46,22,1)
(26,32,1)
(27,24,1)
(8,20,1)
(35,9,1)
(2,13,1)
(25,12,1)
(32,30,1)
(43,18,1)
(34,49,1)
(8,35,1)
(36,2,1)
(21,18,1)
(12,43,1)
(24,44,1)
(43,41,1)
(33,43,1)
(44,8,1)
(32,35,1)
(41,30,1)
(47,27,1)
(13,30,1)
(6,36,1)
(17,3,1)
(37,31,1)
(18,35,1)
(16,34,1)
(6,42,1)
(48,21,1)
(22,42,1)
(49,46,1)
(45,47,1)
(32,48,1)
(8,26,1)
(9,15,1)
(13,44,1)
(22,6,1)
(13,42,1)
(18,17,1)
(3,45,1)
(13,16,1)
(47,35,1)
(33,49,1)
(13,30,2)
(26,18,2)
(6,42,2)
(13,42,2)
(32,35,2)
(49,49,2)
(32,30,2)
(47,18,2)
(49,42,2)
(18,17,2)
(45,41,2)
(16,49,2)
(45,18,2)
(27,18,2)
(17,18,2)
(22,43,2)
(32,18,2)
(25,43,2)
(44,8,2)
(6,49,2)
(36,49,2)
(13,44,2)
(3,41,2)
(18,18,2)
(35,41,2)
(27,35,2)
(8,18,2)
(34,49,2)
(3,18,2)
(2,49,2)
(46,49,2)
(12,43,2)
(13,49,2)
(8,20,2)
(48,18,2)
(42,43,2)
(17,41,2)
(49,43,2)
(2,13,2)
(47,41,2)
(18,35,2)
(15,41,2)
(9,41,2)
(21,18,2)
(24,18,2)
(46,43,2)
(18,41,2)
(44,18,2)
(8,35,2)
(22,49,2)
-----------------------------------
(0,dataUninitArray)
(1,for(i=0; i<(10/2)
(2,printDoubleLine(data[i])
(3,2)
(4,for(i=0; i<10; i++)
(5,i)
(6,i++)
(7,)
(8,(double)
(9,0)
(10,)
(11,)
(12,i)
(13,data[i])
(14,if(STATIC_CONST_TRUE)
(15,i)
(16,i)
(17,10/2)
(18,i<(10/2)
(19,i)
(20,double)
(21,data)
(22,i)
(23,data)
(24,i)
(25,0)
(26,i)
(27,i++)
(28,if(STATIC_CONST_TRUE)
(29,)
(30,data = dataUninitArray)
(31,data)
(32,data[i])
(33,RET)
(34,data)
(35,i=0)
(36,i)
(37,dataUninitArray)
(38,)
(39,)
(40,)
(41,STATIC_CONST_TRUE)
(42,i=0)
(43,STATIC_CONST_TRUE)
(44,data[i] = (double)
(45,10)
(46,10)
(47,i)
(48,i)
(49,i<10)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^