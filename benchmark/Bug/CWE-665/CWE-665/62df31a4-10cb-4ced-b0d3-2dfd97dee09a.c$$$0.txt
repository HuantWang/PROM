-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_07_bad()
{
    int * data;
    data = (int *)malloc(10*sizeof(int));
    if (data == NULL) {exit(-1);}
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
44,45
44,46
45,46
48,49
50,51
50,52
51,52
51,53
52,53
55,56
56,57
56,58
57,58
58,59
58,60
60,61
62,63
62,64
62,65
62,66
63,64
64,65
64,66
65,66
68,69
68,70
69,70
72,73
73,74
75,76
76,77
77,78
77,79
78,79
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,46,47,49,53,54,59,61,66,67,70,71,74,79,82,84
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
51,52
51,53
64,65
64,66
68,69
68,70
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_07_bad(){    int * data;    data = (int *)malloc(10*sizeof(int));    if (data == NULL) {exit(-1);}    if(staticFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_07_bad()
CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_07_bad
{    int * data;    data = (int *)malloc(10*sizeof(int));    if (data == NULL) {exit(-1);}    if(staticFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
int * data;
int * data;
int
* data
*
data
data = (int *)malloc(10*sizeof(int));
data = (int *)malloc(10*sizeof(int))
data
data
(int *)malloc(10*sizeof(int))
int *
int
*
*
malloc(10*sizeof(int))
malloc
malloc
10*sizeof(int)
10
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
if(staticFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(staticFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i]);            }
printIntLine(data[i]);
printIntLine(data[i])
printIntLine
printIntLine
data[i]
data
data
i
i
-----joern-----
(29,4,0)
(3,20,0)
(40,37,0)
(3,17,0)
(12,35,0)
(18,25,0)
(30,42,0)
(1,3,0)
(28,17,0)
(34,6,0)
(38,42,0)
(44,35,0)
(4,24,0)
(41,37,0)
(39,8,0)
(24,6,0)
(17,4,0)
(24,4,0)
(33,10,0)
(23,28,0)
(6,10,0)
(2,15,0)
(32,37,0)
(7,17,0)
(10,6,0)
(20,14,0)
(17,42,0)
(26,21,0)
(11,42,0)
(0,19,0)
(4,17,0)
(4,29,0)
(8,37,0)
(36,42,0)
(16,3,0)
(9,28,0)
(43,25,0)
(22,8,0)
(20,3,0)
(31,41,0)
(3,37,0)
(6,24,0)
(5,21,0)
(21,13,0)
(19,2,0)
(2,19,0)
(31,20,1)
(4,29,1)
(0,28,1)
(6,10,1)
(44,28,1)
(4,24,1)
(10,33,1)
(23,17,1)
(39,37,1)
(28,17,1)
(2,19,1)
(18,43,1)
(12,44,1)
(37,32,1)
(44,2,1)
(3,16,1)
(8,37,1)
(25,18,1)
(22,39,1)
(24,6,1)
(39,41,1)
(34,7,1)
(17,4,1)
(28,9,1)
(27,25,1)
(27,8,1)
(20,3,1)
(32,40,1)
(9,23,1)
(43,35,1)
(16,1,1)
(19,0,1)
(41,37,1)
(3,37,1)
(40,25,1)
(33,34,1)
(35,12,1)
(1,8,1)
(3,17,1)
(8,22,1)
(41,31,1)
(22,8,2)
(19,28,2)
(32,25,2)
(20,3,2)
(3,37,2)
(20,8,2)
(6,10,2)
(41,8,2)
(4,29,2)
(17,4,2)
(31,8,2)
(3,8,2)
(39,8,2)
(16,8,2)
(8,25,2)
(28,17,2)
(37,25,2)
(41,37,2)
(2,28,2)
(22,25,2)
(1,8,2)
(2,19,2)
(8,37,2)
(24,6,2)
(39,25,2)
(3,17,2)
(8,8,2)
(4,24,2)
(40,25,2)
(0,28,2)
-----------------------------------
(0,1)
(1,data)
(2,exit(-1)
(3,data[i])
(4,(int *)
(5,i)
(6,10*sizeof(int)
(7,data)
(8,i<10)
(9,NULL)
(10,sizeof(int)
(11,if(staticFive==5)
(12,5)
(13,)
(14,)
(15,)
(16,i)
(17,data = (int *)
(18,5)
(19,-1)
(20,printIntLine(data[i])
(21,)
(22,10)
(23,data)
(24,malloc(10*sizeof(int)
(25,staticFive==5)
(26,for(i=0; i<10; i++)
(27,RET)
(28,data == NULL)
(29,int *)
(30,if (data == NULL)
(31,i)
(32,0)
(33,int)
(34,10)
(35,staticFive==5)
(36,data)
(37,i=0)
(38,if(staticFive==5)
(39,i)
(40,i)
(41,i++)
(42,)
(43,staticFive)
(44,staticFive)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^