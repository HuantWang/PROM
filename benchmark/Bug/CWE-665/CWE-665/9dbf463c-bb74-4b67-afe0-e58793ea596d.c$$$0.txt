-----label-----
1
-----code-----
void CWE665_Improper_Initialization__char_ncat_01_bad()
{
    char * data;
    char dataBuffer[100];
    data = dataBuffer;
    /* FLAW: Do not initialize data */
    ; /* empty statement needed for some flow variants */
    {
        size_t sourceLen;
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        sourceLen = strlen(source);
        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */
        strncat(data, source, sourceLen);
        printLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
26,27
26,28
26,29
26,30
26,31
26,32
26,33
27,28
28,29
28,30
29,30
31,32
33,34
34,35
34,36
36,37
36,38
38,39
40,41
41,42
41,43
41,44
41,45
42,43
44,45
47,48
47,49
50,51
51,52
51,53
52,53
52,54
53,54
55,56
55,57
59,60
60,61
60,62
61,62
63,64
63,65
64,65
66,67
68,69
69,70
69,71
69,72
69,73
70,71
72,73
74,75
76,77
78,79
79,80
79,81
80,81
82,83
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,25,30,32,35,37,39,43,45,46,48,49,54,56,57,58,62,65,67,71,73,75,77,81,83
-----computeFrom-----
20,21
20,22
47,48
47,49
51,52
51,53
55,56
55,57
60,61
60,62
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;NullStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__char_ncat_01_bad(){    char * data;    char dataBuffer[100];    data = dataBuffer;    /* FLAW: Do not initialize data */    ; /* empty statement needed for some flow variants */    {        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }}
void
CWE665_Improper_Initialization__char_ncat_01_bad()
CWE665_Improper_Initialization__char_ncat_01_bad
{    char * data;    char dataBuffer[100];    data = dataBuffer;    /* FLAW: Do not initialize data */    ; /* empty statement needed for some flow variants */    {        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100];
char dataBuffer[100];
char
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
;
{        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
sourceLen = strlen(source);
sourceLen = strlen(source)
sourceLen
sourceLen
strlen(source)
strlen
strlen
source
source
strncat(data, source, sourceLen);
strncat(data, source, sourceLen)
strncat
strncat
data
data
source
source
sourceLen
sourceLen
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(1,7,0)
(8,14,0)
(6,32,0)
(19,0,0)
(20,14,0)
(9,16,0)
(16,0,0)
(26,6,0)
(7,27,0)
(14,8,0)
(4,5,0)
(13,5,0)
(8,0,0)
(22,27,0)
(12,4,0)
(10,8,0)
(29,1,0)
(17,7,0)
(28,21,0)
(31,6,0)
(2,7,0)
(0,27,0)
(25,4,0)
(21,5,0)
(4,7,0)
(1,0,0)
(5,21,0)
(11,14,0)
(4,0,0)
(5,0,0)
(24,0,0)
(18,32,0)
(23,8,0)
(32,16,0)
(32,6,0)
(30,4,0)
(3,27,0)
(20,23,1)
(32,6,1)
(31,18,1)
(29,4,1)
(8,14,1)
(6,26,1)
(4,7,1)
(2,17,1)
(18,8,1)
(30,12,1)
(1,7,1)
(26,31,1)
(28,13,1)
(1,29,1)
(9,32,1)
(5,21,1)
(21,28,1)
(11,20,1)
(4,5,1)
(14,11,1)
(23,10,1)
(15,1,1)
(25,30,1)
(7,2,1)
(10,7,1)
(13,16,1)
(16,9,1)
(12,5,1)
(4,25,1)
(4,5,2)
(4,7,2)
(8,14,2)
(1,7,2)
(32,6,2)
(5,21,2)
-----------------------------------
(0,)
(1,printLine(data)
(2,dataBuffer)
(3,data)
(4,strncat(data, source, sourceLen)
(5,sourceLen = strlen(source)
(6,100-1)
(7,data = dataBuffer)
(8,memset(source, 'C', 100-1)
(9,'\\0')
(10,source)
(11,1)
(12,data)
(13,sourceLen)
(14,100-1)
(15,RET)
(16,source[100-1] = '\\0')
(17,data)
(18,source)
(19,source)
(20,100)
(21,strlen(source)
(22,dataBuffer)
(23,'C')
(24,sourceLen)
(25,sourceLen)
(26,1)
(27,)
(28,source)
(29,data)
(30,source)
(31,100)
(32,source[100-1])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^