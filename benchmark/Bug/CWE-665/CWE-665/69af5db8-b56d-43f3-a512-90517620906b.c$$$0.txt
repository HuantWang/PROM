-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_06_bad()
{
    int * data;
    data = (int *)ALLOCA(10*sizeof(int));
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
35,36
37,38
37,39
38,39
38,40
39,40
42,43
43,44
43,45
44,45
45,46
45,47
47,48
49,50
49,51
49,52
49,53
50,51
51,52
51,53
52,53
55,56
55,57
56,57
59,60
60,61
62,63
63,64
64,65
64,66
65,66
67,68
67,69
68,69
70,71
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,34,36,40,41,46,48,53,54,57,58,61,66,69,71
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
38,39
38,40
51,52
51,53
55,56
55,57
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_06_bad(){    int * data;    data = (int *)ALLOCA(10*sizeof(int));    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_06_bad()
CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_06_bad
{    int * data;    data = (int *)ALLOCA(10*sizeof(int));    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }}
int * data;
int * data;
int
* data
*
data
data = (int *)ALLOCA(10*sizeof(int));
data = (int *)ALLOCA(10*sizeof(int))
data
data
(int *)ALLOCA(10*sizeof(int))
int *
int
*
*
ALLOCA(10*sizeof(int))
ALLOCA
ALLOCA
10*sizeof(int)
10
sizeof(int)
int
int

if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i]);            }
printIntLine(data[i]);
printIntLine(data[i])
printIntLine
printIntLine
data[i]
data
data
i
i
-----joern-----
(35,14,0)
(17,25,0)
(9,25,0)
(4,34,0)
(11,6,0)
(12,18,0)
(26,16,0)
(14,34,0)
(29,5,0)
(34,4,0)
(16,29,0)
(1,22,0)
(7,16,0)
(23,4,0)
(27,21,0)
(18,4,0)
(4,18,0)
(13,22,0)
(14,29,0)
(36,6,0)
(16,22,0)
(34,14,0)
(32,16,0)
(3,5,0)
(31,10,0)
(8,10,0)
(33,22,0)
(24,1,0)
(28,29,0)
(7,19,0)
(21,22,0)
(14,35,0)
(2,21,0)
(6,30,0)
(0,5,0)
(16,7,0)
(29,14,0)
(20,5,0)
(16,22,1)
(1,22,1)
(9,17,1)
(21,22,1)
(23,28,1)
(24,7,1)
(33,13,1)
(17,10,1)
(27,1,1)
(21,2,1)
(14,34,1)
(25,9,1)
(1,24,1)
(15,25,1)
(4,18,1)
(16,32,1)
(26,21,1)
(7,16,1)
(15,21,1)
(2,27,1)
(12,23,1)
(14,35,1)
(31,29,1)
(13,25,1)
(8,31,1)
(22,33,1)
(10,8,1)
(29,14,1)
(32,26,1)
(18,12,1)
(27,22,1)
(34,4,1)
(16,29,1)
(2,21,2)
(33,25,2)
(21,25,2)
(34,4,2)
(16,21,2)
(13,25,2)
(22,25,2)
(21,22,2)
(27,25,2)
(14,35,2)
(16,29,2)
(7,16,2)
(1,21,2)
(2,25,2)
(32,21,2)
(24,21,2)
(21,21,2)
(26,21,2)
(16,22,2)
(27,21,2)
(14,34,2)
(4,18,2)
(1,22,2)
(7,21,2)
(29,14,2)
-----------------------------------
(0,data)
(1,i++)
(2,10)
(3,if(STATIC_CONST_FIVE==5)
(4,10*sizeof(int)
(5,)
(6,)
(7,printIntLine(data[i])
(8,5)
(9,5)
(10,STATIC_CONST_FIVE==5)
(11,i)
(12,int)
(13,i)
(14,(int *)
(15,RET)
(16,data[i])
(17,STATIC_CONST_FIVE)
(18,sizeof(int)
(19,)
(20,if(STATIC_CONST_FIVE==5)
(21,i<10)
(22,i=0)
(23,10)
(24,i)
(25,STATIC_CONST_FIVE==5)
(26,data)
(27,i)
(28,data)
(29,data = (int *)
(30,)
(31,STATIC_CONST_FIVE)
(32,i)
(33,0)
(34,ALLOCA(10*sizeof(int)
(35,int *)
(36,for(i=0; i<10; i++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^