-----label-----
1
-----code-----
void CWE665_Improper_Initialization__char_cat_07_bad()
{
    char * data;
    char dataBuffer[100];
    data = dataBuffer;
    if(staticFive==5)
    {
        /* FLAW: Do not initialize data */
        ; /* empty statement needed for some flow variants */
    }
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */
        strcat(data, source);
        printLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
26,28
27,28
30,31
32,33
32,34
32,35
32,36
32,37
33,34
34,35
34,36
36,37
36,38
38,39
40,41
41,42
41,43
41,44
41,45
42,43
44,45
47,48
47,49
50,51
51,52
51,53
52,53
52,54
53,54
55,56
55,57
59,60
60,61
60,62
60,63
61,62
63,64
65,66
67,68
68,69
68,70
69,70
71,72
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,28,29,31,35,37,39,43,45,46,48,49,54,56,57,58,62,64,66,70,72
-----computeFrom-----
20,21
20,22
26,27
26,28
47,48
47,49
51,52
51,53
55,56
55,57
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__char_cat_07_bad(){    char * data;    char dataBuffer[100];    data = dataBuffer;    if(staticFive==5)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */        strcat(data, source);        printLine(data);    }}
void
CWE665_Improper_Initialization__char_cat_07_bad()
CWE665_Improper_Initialization__char_cat_07_bad
{    char * data;    char dataBuffer[100];    data = dataBuffer;    if(staticFive==5)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */        strcat(data, source);        printLine(data);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100];
char dataBuffer[100];
char
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticFive==5)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
staticFive==5
staticFive
staticFive
5
{        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
;
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: If data is not initialized properly, strcat() may not function correctly */        strcat(data, source);        printLine(data);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
strcat(data, source);
strcat(data, source)
strcat
strcat
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(27,12,0)
(17,7,0)
(11,10,0)
(20,21,0)
(15,18,0)
(0,15,0)
(16,21,0)
(28,7,0)
(7,21,0)
(25,26,0)
(23,6,0)
(29,2,0)
(15,0,0)
(26,2,0)
(30,23,0)
(21,7,0)
(22,0,0)
(2,10,0)
(7,6,0)
(19,2,0)
(23,2,0)
(1,15,0)
(3,10,0)
(5,0,0)
(24,10,0)
(14,26,0)
(18,6,0)
(9,12,0)
(13,6,0)
(26,6,0)
(6,10,0)
(8,18,0)
(25,14,1)
(2,19,1)
(1,7,1)
(15,0,1)
(27,9,1)
(7,21,1)
(5,22,1)
(0,5,1)
(8,15,1)
(14,18,1)
(4,23,1)
(30,26,1)
(12,27,1)
(9,2,1)
(26,2,1)
(28,17,1)
(23,30,1)
(16,28,1)
(21,20,1)
(18,8,1)
(23,2,1)
(26,25,1)
(22,1,1)
(19,29,1)
(20,16,1)
(17,12,1)
(7,21,2)
(15,0,2)
(23,2,2)
(26,2,2)
-----------------------------------
(0,100-1)
(1,source)
(2,data = dataBuffer)
(3,if(staticFive==5)
(4,RET)
(5,1)
(6,)
(7,memset(source, 'C', 100-1)
(8,'\\0')
(9,staticFive)
(10,)
(11,dataBuffer)
(12,staticFive==5)
(13,source)
(14,data)
(15,source[100-1])
(16,100)
(17,source)
(18,source[100-1] = '\\0')
(19,dataBuffer)
(20,1)
(21,100-1)
(22,100)
(23,printLine(data)
(24,data)
(25,source)
(26,strcat(data, source)
(27,5)
(28,'C')
(29,data)
(30,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^