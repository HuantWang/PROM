-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_03_bad()
{
    double * data;
    double dataUninitArray[10];
    data = dataUninitArray;
    if(5==5)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i] = (double)i;
            }
        }
    }
    if(5==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
26,28
29,30
30,31
30,32
31,32
32,33
32,34
34,35
36,37
36,38
36,39
36,40
37,38
38,39
38,40
39,40
42,43
42,44
43,44
45,46
46,47
46,48
49,50
50,51
52,53
53,54
54,55
54,56
55,56
55,57
56,57
58,59
60,61
60,62
61,62
61,63
64,65
66,67
66,68
67,68
67,69
70,71
71,72
71,73
72,73
73,74
73,75
75,76
77,78
77,79
77,80
77,81
78,79
79,80
79,81
80,81
83,84
83,85
84,85
87,88
88,89
90,91
91,92
92,93
92,94
93,94
95,96
95,97
96,97
98,99
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,27,28,33,35,40,41,44,47,48,51,57,59,62,63,65,68,69,74,76,81,82,85,86,89,94,97,99
-----computeFrom-----
20,21
20,22
26,27
26,28
38,39
38,40
42,43
42,44
46,47
46,48
54,55
54,56
67,68
67,69
79,80
79,81
83,84
83,85
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_03_bad(){    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(5==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    if(5==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_03_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_declare_partial_init_03_bad
{    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(5==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }    if(5==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
double dataUninitArray[10];
double dataUninitArray[10];
double
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
if(5==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
5==5
5
5
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i] = (double)i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i] = (double)i;            }
data[i] = (double)i;
data[i] = (double)i
data[i]
data
data
i
i
(double)i
double
double

i
i
if(5==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
5==5
5
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(50,25,0)
(49,43,0)
(41,13,0)
(13,18,0)
(8,4,0)
(13,25,0)
(18,4,0)
(7,47,0)
(7,48,0)
(4,52,0)
(29,46,0)
(48,6,0)
(14,6,0)
(48,18,0)
(33,30,0)
(36,4,0)
(45,31,0)
(18,38,0)
(4,18,0)
(37,52,0)
(28,46,0)
(22,14,0)
(27,52,0)
(4,8,0)
(2,43,0)
(43,20,0)
(53,51,0)
(9,20,0)
(23,46,0)
(48,25,0)
(3,51,0)
(51,6,0)
(21,6,0)
(12,5,0)
(16,30,0)
(44,11,0)
(39,12,0)
(35,48,0)
(15,26,0)
(48,7,0)
(20,43,0)
(0,12,0)
(17,13,0)
(13,52,0)
(11,52,0)
(25,46,0)
(30,32,0)
(20,52,0)
(42,26,0)
(1,46,0)
(10,48,0)
(40,6,0)
(34,31,0)
(19,25,0)
(15,25,1)
(44,18,1)
(53,6,1)
(48,18,1)
(24,51,1)
(4,8,1)
(43,2,1)
(51,3,1)
(50,19,1)
(42,15,1)
(22,7,1)
(14,6,1)
(13,25,1)
(45,20,1)
(40,31,1)
(4,52,1)
(49,9,1)
(18,4,1)
(7,48,1)
(14,22,1)
(3,53,1)
(11,44,1)
(45,26,1)
(20,43,1)
(27,37,1)
(48,25,1)
(24,31,1)
(51,6,1)
(53,14,1)
(41,17,1)
(6,21,1)
(48,6,1)
(48,35,1)
(52,27,1)
(11,52,1)
(35,10,1)
(2,49,1)
(13,41,1)
(13,52,1)
(17,20,1)
(31,34,1)
(36,13,1)
(4,36,1)
(25,50,1)
(9,11,1)
(10,51,1)
(34,45,1)
(21,40,1)
(20,52,1)
(9,52,1)
(37,26,1)
(26,42,1)
(43,26,2)
(48,25,2)
(20,20,2)
(21,31,2)
(13,20,2)
(18,4,2)
(51,31,2)
(41,20,2)
(13,25,2)
(4,52,2)
(18,20,2)
(44,20,2)
(2,20,2)
(13,52,2)
(6,31,2)
(51,51,2)
(9,20,2)
(36,20,2)
(17,20,2)
(11,20,2)
(35,51,2)
(43,20,2)
(48,6,2)
(48,18,2)
(14,6,2)
(7,51,2)
(2,26,2)
(3,51,2)
(53,31,2)
(37,26,2)
(10,51,2)
(53,51,2)
(11,52,2)
(40,31,2)
(4,8,2)
(20,43,2)
(48,51,2)
(20,52,2)
(3,31,2)
(22,51,2)
(9,26,2)
(27,26,2)
(7,48,2)
(4,20,2)
(51,6,2)
(52,26,2)
(49,20,2)
(14,51,2)
(49,26,2)
(20,26,2)
-----------------------------------
(0,i)
(1,dataUninitArray)
(2,2)
(3,10)
(4,(double)
(5,)
(6,i=0)
(7,printDoubleLine(data[i])
(8,double)
(9,i)
(10,data)
(11,i++)
(12,)
(13,data[i])
(14,i++)
(15,5)
(16,for(i=0; i<(10/2)
(17,data)
(18,data[i] = (double)
(19,data)
(20,i<(10/2)
(21,0)
(22,i)
(23,data)
(24,RET)
(25,data = dataUninitArray)
(26,5==5)
(27,0)
(28,if(5==5)
(29,if(5==5)
(30,)
(31,5==5)
(32,)
(33,i)
(34,5)
(35,i)
(36,i)
(37,i)
(38,)
(39,for(i=0; i<10; i++)
(40,i)
(41,i)
(42,5)
(43,10/2)
(44,i)
(45,5)
(46,)
(47,)
(48,data[i])
(49,10)
(50,dataUninitArray)
(51,i<10)
(52,i=0)
(53,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^