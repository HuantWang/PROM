-----label-----
1
-----code-----
size_t CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fscanf_61b_badSource(size_t data)
{
    /* POTENTIAL FLAW: Read data from the console using fscanf() */
    fscanf(stdin, "%zu", &data);
    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
6,7
6,8
7,8
9,10
11,12
11,13
12,13
13,14
13,15
13,16
13,17
14,15
16,17
19,20
20,21
22,23
23,24
-----nextToken-----
3,5,8,10,15,17,18,21,24
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
size_t CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fscanf_61b_badSource(size_t data){    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%zu", &data);    return data;}
size_t
size_t
CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fscanf_61b_badSource(size_t data)
CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fscanf_61b_badSource
size_t data
size_t
size_t
data
data
{    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%zu", &data);    return data;}
fscanf(stdin, "%zu", &data);
fscanf(stdin, "%zu", &data)
fscanf
fscanf
stdin
stdin
"%zu"
&data
data
data
return data;
data
data
-----joern-----
(5,1,0)
(6,9,0)
(4,1,0)
(9,1,0)
(1,2,0)
(1,9,0)
(8,3,0)
(3,2,0)
(9,0,0)
(7,3,0)
(3,0,0)
(7,1,1)
(3,0,1)
(9,0,1)
(1,9,1)
(6,4,1)
(3,7,1)
(8,3,1)
(9,6,1)
(4,5,1)
(3,0,2)
(1,9,2)
(9,0,2)
(8,3,2)
-----------------------------------
(0,size_t data)
(1,fscanf(stdin, "%zu", &data)
(2,)
(3,return data;)
(4,"%zu")
(5,stdin)
(6,data)
(7,data)
(8,RET)
(9,&data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^