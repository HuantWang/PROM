-----label-----
1
-----code-----
void CWE665_Improper_Initialization__wchar_t_ncat_63b_badSink(wchar_t * * dataPtr)
{
    wchar_t * data = *dataPtr;
    {
        size_t sourceLen;
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        sourceLen = wcslen(source);
        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */
        wcsncat(data, source, sourceLen);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
20,21
22,23
22,24
22,25
22,26
22,27
22,28
22,29
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
32,33
32,34
34,35
36,37
37,38
37,39
37,40
37,41
38,39
40,41
43,44
43,45
46,47
47,48
47,49
48,49
48,50
49,50
51,52
51,53
55,56
56,57
56,58
57,58
59,60
59,61
60,61
62,63
64,65
65,66
65,67
65,68
65,69
66,67
68,69
70,71
72,73
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,26,28,31,33,35,39,41,42,44,45,50,52,53,54,58,61,63,67,69,71,73,77,79
-----computeFrom-----
43,44
43,45
47,48
47,49
51,52
51,53
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__wchar_t_ncat_63b_badSink(wchar_t * * dataPtr){    wchar_t * data = *dataPtr;    {        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }}
void
CWE665_Improper_Initialization__wchar_t_ncat_63b_badSink(wchar_t * * dataPtr)
CWE665_Improper_Initialization__wchar_t_ncat_63b_badSink
wchar_t * * dataPtr
wchar_t
* * dataPtr
*
*
dataPtr
{    wchar_t * data = *dataPtr;    {        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }}
wchar_t * data = *dataPtr;
wchar_t * data = *dataPtr;
wchar_t
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
sourceLen = wcslen(source);
sourceLen = wcslen(source)
sourceLen
sourceLen
wcslen(source)
wcslen
wcslen
source
source
wcsncat(data, source, sourceLen);
wcsncat(data, source, sourceLen)
wcsncat
wcsncat
data
data
source
source
sourceLen
sourceLen
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(3,16,0)
(6,1,0)
(0,2,0)
(10,6,0)
(8,2,0)
(2,18,0)
(6,18,0)
(5,8,0)
(8,7,0)
(17,18,0)
(20,14,0)
(14,6,0)
(19,2,0)
(21,8,0)
(1,9,0)
(1,6,0)
(16,7,0)
(12,1,0)
(7,2,0)
(13,2,0)
(8,6,0)
(4,7,0)
(15,8,0)
(7,16,0)
(14,2,0)
(4,0,1)
(1,12,1)
(12,10,1)
(15,21,1)
(5,15,1)
(14,20,1)
(7,16,1)
(0,6,1)
(8,5,1)
(1,9,1)
(21,7,1)
(11,14,1)
(8,7,1)
(14,6,1)
(20,8,1)
(3,4,1)
(8,6,1)
(16,3,1)
(6,1,1)
(1,9,2)
(8,7,2)
(6,1,2)
(7,16,2)
(14,6,2)
(8,6,2)
-----------------------------------
(0,'\\0')
(1,*dataPtr)
(2,)
(3,source)
(4,sourceLen)
(5,sourceLen)
(6,* data = *dataPtr)
(7,sourceLen = wcslen(source)
(8,wcsncat(data, source, sourceLen)
(9,wchar_t * * dataPtr)
(10,data)
(11,RET)
(12,dataPtr)
(13,sourceLen)
(14,printWLine(data)
(15,source)
(16,wcslen(source)
(17,data)
(18,)
(19,source)
(20,data)
(21,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^