-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_13_bad()
{
    twoIntsStruct * data;
    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Partially initialize data */
        {
            int i;
            for(i=0; i<(10/2); i++)
            {
                data[i].intOne = i;
                data[i].intTwo = i;
            }
        }
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i].intOne);
                printIntLine(data[i].intTwo);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
17,19
18,19
18,20
19,20
21,22
23,24
23,25
24,25
26,27
26,28
28,29
29,30
29,31
30,31
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
40,41
41,42
41,43
43,44
45,46
45,47
45,48
45,49
46,47
47,48
47,49
48,49
51,52
51,53
52,53
54,55
55,56
55,57
58,59
59,60
61,62
61,63
62,63
63,64
63,65
64,65
64,66
65,66
65,67
66,67
68,69
71,72
73,74
74,75
74,76
75,76
75,77
76,77
76,78
77,78
79,80
82,83
84,85
84,86
85,86
85,87
86,87
89,90
90,91
90,92
91,92
92,93
92,94
94,95
96,97
96,98
96,99
96,100
97,98
98,99
98,100
99,100
102,103
102,104
103,104
106,107
107,108
109,110
109,111
110,111
111,112
111,113
112,113
114,115
114,116
115,116
115,117
116,117
118,119
121,122
122,123
122,124
123,124
125,126
125,127
126,127
126,128
127,128
129,130
-----nextToken-----
2,4,9,11,12,16,20,22,25,27,31,32,36,37,42,44,49,50,53,56,57,60,67,69,70,72,78,80,81,83,87,88,93,95,100,101,104,105,108,113,117,119,120,124,128,130,131
-----computeFrom-----
14,15
14,16
26,27
26,28
34,35
34,36
47,48
47,49
51,52
51,53
55,56
55,57
63,64
63,65
74,75
74,76
85,86
85,87
98,99
98,100
102,103
102,104
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_13_bad(){    twoIntsStruct * data;    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_13_bad()
CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_13_bad
{    twoIntsStruct * data;    data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct));
data = (twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)ALLOCA(10*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
ALLOCA(10*sizeof(twoIntsStruct))
ALLOCA
ALLOCA
10*sizeof(twoIntsStruct)
10
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Partially initialize data */        {            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }    }
{            int i;            for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }        }
int i;
int i;
int
i
i
for(i=0; i<(10/2); i++)            {                data[i].intOne = i;                data[i].intTwo = i;            }
i=0;
i=0
i
i
0
i<(10/2)
i
i
(10/2)
10/2
10
2
i++
i
i
{                data[i].intOne = i;                data[i].intTwo = i;            }
data[i].intOne = i;
data[i].intOne = i
data[i].intOne
data[i]
data
data
i
i
intOne
i
i
data[i].intTwo = i;
data[i].intTwo = i
data[i].intTwo
data[i]
data
data
i
i
intTwo
i
i
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
printIntLine(data[i].intOne);
printIntLine(data[i].intOne)
printIntLine
printIntLine
data[i].intOne
data[i]
data
data
i
i
intOne
printIntLine(data[i].intTwo);
printIntLine(data[i].intTwo)
printIntLine
printIntLine
data[i].intTwo
data[i]
data
data
i
i
intTwo
-----joern-----
(22,41,0)
(6,56,0)
(27,14,0)
(10,39,0)
(70,22,0)
(64,31,0)
(72,24,0)
(73,40,0)
(46,28,0)
(24,5,0)
(68,54,0)
(54,36,0)
(66,39,0)
(67,18,0)
(65,73,0)
(62,36,0)
(20,5,0)
(16,65,0)
(36,23,0)
(56,58,0)
(48,65,0)
(26,14,0)
(1,47,0)
(29,54,0)
(54,29,0)
(0,3,0)
(58,56,0)
(13,48,0)
(48,39,0)
(47,40,0)
(44,39,0)
(19,2,0)
(31,39,0)
(43,49,0)
(31,1,0)
(4,60,0)
(18,24,0)
(69,5,0)
(36,34,0)
(48,24,0)
(17,23,0)
(65,36,0)
(28,34,0)
(18,23,0)
(46,18,0)
(53,44,0)
(33,41,0)
(21,31,0)
(71,28,0)
(11,49,0)
(1,28,0)
(60,56,0)
(24,63,0)
(29,23,0)
(52,2,0)
(59,29,0)
(61,32,0)
(63,58,0)
(15,46,0)
(28,23,0)
(42,38,0)
(45,5,0)
(7,22,0)
(35,48,0)
(63,24,0)
(31,24,0)
(58,63,0)
(63,50,0)
(65,48,0)
(41,22,0)
(1,31,0)
(8,23,0)
(9,18,0)
(56,60,0)
(38,23,0)
(29,24,0)
(49,25,0)
(55,29,0)
(51,1,0)
(41,23,0)
(57,3,0)
(50,63,0)
(2,37,0)
(47,1,0)
(73,65,0)
(18,46,0)
(32,39,0)
(30,32,0)
(31,24,1)
(73,65,1)
(35,47,1)
(30,61,1)
(58,56,1)
(1,28,1)
(17,8,1)
(0,24,1)
(31,39,1)
(60,4,1)
(38,23,1)
(44,39,1)
(28,23,1)
(46,18,1)
(32,30,1)
(15,18,1)
(63,50,1)
(61,39,1)
(63,58,1)
(18,24,1)
(3,57,1)
(1,31,1)
(23,17,1)
(7,33,1)
(65,36,1)
(53,73,1)
(59,55,1)
(62,54,1)
(67,41,1)
(33,23,1)
(13,35,1)
(8,3,1)
(56,60,1)
(26,27,1)
(48,13,1)
(38,42,1)
(16,48,1)
(44,53,1)
(47,1,1)
(6,72,1)
(61,44,1)
(29,24,1)
(10,14,1)
(18,9,1)
(65,48,1)
(4,6,1)
(71,46,1)
(54,68,1)
(46,15,1)
(14,26,1)
(48,24,1)
(42,36,1)
(36,23,1)
(64,21,1)
(24,63,1)
(41,22,1)
(33,38,1)
(54,29,1)
(51,31,1)
(12,14,1)
(27,3,1)
(70,7,1)
(32,39,1)
(29,59,1)
(9,67,1)
(18,23,1)
(48,39,1)
(12,32,1)
(65,16,1)
(21,32,1)
(29,23,1)
(31,64,1)
(36,62,1)
(66,10,1)
(39,66,1)
(1,51,1)
(27,41,1)
(28,71,1)
(41,23,1)
(55,28,1)
(22,70,1)
(57,0,1)
(68,29,1)
(41,3,2)
(64,32,2)
(62,41,2)
(36,41,2)
(73,65,2)
(36,23,2)
(65,32,2)
(63,50,2)
(41,23,2)
(33,41,2)
(31,32,2)
(65,48,2)
(63,58,2)
(70,3,2)
(54,29,2)
(56,60,2)
(71,41,2)
(48,32,2)
(53,32,2)
(7,3,2)
(23,3,2)
(33,3,2)
(47,1,2)
(1,32,2)
(18,23,2)
(48,24,2)
(1,31,2)
(68,41,2)
(31,39,2)
(31,24,2)
(38,41,2)
(15,41,2)
(38,23,2)
(24,63,2)
(28,23,2)
(58,56,2)
(66,14,2)
(18,41,2)
(55,41,2)
(22,3,2)
(30,14,2)
(9,41,2)
(39,14,2)
(48,39,2)
(46,41,2)
(18,24,2)
(47,32,2)
(29,23,2)
(65,36,2)
(29,24,2)
(8,3,2)
(73,32,2)
(21,32,2)
(41,22,2)
(32,14,2)
(30,32,2)
(29,41,2)
(41,41,2)
(10,14,2)
(51,32,2)
(70,41,2)
(16,32,2)
(35,32,2)
(61,14,2)
(44,39,2)
(13,32,2)
(28,41,2)
(67,41,2)
(54,41,2)
(59,41,2)
(42,41,2)
(22,41,2)
(7,41,2)
(32,39,2)
(61,32,2)
(32,32,2)
(46,18,2)
(17,3,2)
(44,32,2)
(1,28,2)
-----------------------------------
(0,GLOBAL_CONST_FIVE)
(1,data[i].intOne)
(2,)
(3,GLOBAL_CONST_FIVE==5)
(4,twoIntsStruct)
(5,)
(6,10)
(7,10)
(8,i)
(9,i)
(10,i)
(11,for(i=0; i<10; i++)
(12,RET)
(13,i)
(14,GLOBAL_CONST_FIVE==5)
(15,intOne)
(16,intTwo)
(17,0)
(18,data[i])
(19,for(i=0; i<(10/2)
(20,if(GLOBAL_CONST_FIVE==5)
(21,data)
(22,10/2)
(23,i=0)
(24,data = (twoIntsStruct *)
(25,)
(26,5)
(27,GLOBAL_CONST_FIVE)
(28,data[i].intOne = i)
(29,data[i])
(30,10)
(31,data[i])
(32,i<10)
(33,i)
(34,)
(35,data)
(36,data[i].intTwo = i)
(37,)
(38,i++)
(39,i=0)
(40,)
(41,i<(10/2)
(42,i)
(43,i)
(44,i++)
(45,if(GLOBAL_CONST_FIVE==5)
(46,data[i].intOne)
(47,printIntLine(data[i].intOne)
(48,data[i])
(49,)
(50,twoIntsStruct *)
(51,intOne)
(52,i)
(53,i)
(54,data[i].intTwo)
(55,data)
(56,10*sizeof(twoIntsStruct)
(57,5)
(58,ALLOCA(10*sizeof(twoIntsStruct)
(59,i)
(60,sizeof(twoIntsStruct)
(61,i)
(62,i)
(63,(twoIntsStruct *)
(64,i)
(65,data[i].intTwo)
(66,0)
(67,data)
(68,intTwo)
(69,data)
(70,2)
(71,i)
(72,data)
(73,printIntLine(data[i].intTwo)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^