-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_08_bad()
{
    double * data;
    double dataUninitArray[10];
    data = dataUninitArray;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
27,28
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
37,38
38,39
38,40
40,41
42,43
42,44
42,45
42,46
43,44
44,45
44,46
45,46
48,49
48,50
49,50
52,53
53,54
55,56
56,57
57,58
57,59
58,59
60,61
60,62
61,62
63,64
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,28,30,34,39,41,46,47,50,51,54,59,62,64
-----computeFrom-----
20,21
20,22
44,45
44,46
48,49
48,50
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;NullStatement;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_08_bad(){    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_08_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_08_bad
{    double * data;    double dataUninitArray[10];    data = dataUninitArray;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
double dataUninitArray[10];
double dataUninitArray[10];
double
dataUninitArray[10]
dataUninitArray
[10]
10
data = dataUninitArray;
data = dataUninitArray
data
data
dataUninitArray
dataUninitArray
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(7,5,0)
(27,25,0)
(6,25,0)
(14,5,0)
(7,27,0)
(0,7,0)
(22,5,0)
(15,9,0)
(15,7,0)
(23,3,0)
(3,5,0)
(16,25,0)
(19,5,0)
(4,25,0)
(18,20,0)
(2,27,0)
(21,19,0)
(13,7,0)
(17,3,0)
(11,25,0)
(8,18,0)
(7,15,0)
(10,27,0)
(1,18,0)
(3,23,1)
(22,26,1)
(21,15,1)
(2,10,1)
(17,5,1)
(15,7,1)
(26,24,1)
(7,5,1)
(17,19,1)
(12,3,1)
(19,21,1)
(7,0,1)
(23,17,1)
(3,5,1)
(14,22,1)
(12,26,1)
(13,3,1)
(24,27,1)
(27,2,1)
(19,5,1)
(5,14,1)
(7,27,1)
(0,13,1)
(21,3,2)
(17,3,2)
(13,3,2)
(3,26,2)
(23,3,2)
(14,26,2)
(19,5,2)
(0,3,2)
(22,26,2)
(15,3,2)
(23,26,2)
(3,3,2)
(7,27,2)
(3,5,2)
(5,26,2)
(17,26,2)
(7,3,2)
(19,3,2)
(15,7,2)
(7,5,2)
-----------------------------------
(0,i)
(1,i)
(2,dataUninitArray)
(3,i<10)
(4,if(staticReturnsTrue()
(5,i=0)
(6,data)
(7,data[i])
(8,for(i=0; i<10; i++)
(9,)
(10,data)
(11,if(staticReturnsTrue()
(12,RET)
(13,data)
(14,0)
(15,printDoubleLine(data[i])
(16,dataUninitArray)
(17,i)
(18,)
(19,i++)
(20,)
(21,i)
(22,i)
(23,10)
(24,staticReturnsTrue()
(25,)
(26,staticReturnsTrue()
(27,data = dataUninitArray)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^