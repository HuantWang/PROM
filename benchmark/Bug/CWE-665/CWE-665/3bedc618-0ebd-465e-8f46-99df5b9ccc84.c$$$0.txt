-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_10_bad()
{
    twoIntsStruct * data;
    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printIntLine(data[i].intOne);
                printIntLine(data[i].intTwo);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
17,19
18,19
18,20
19,20
21,22
23,24
23,25
24,25
26,27
26,28
28,29
29,30
29,31
30,31
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
46,47
46,48
47,48
49,50
51,52
51,53
52,53
54,55
55,56
55,57
56,57
57,58
57,59
59,60
61,62
61,63
61,64
61,65
62,63
63,64
63,65
64,65
67,68
67,69
68,69
71,72
72,73
74,75
74,76
75,76
76,77
76,78
77,78
79,80
79,81
80,81
80,82
81,82
83,84
86,87
87,88
87,89
88,89
90,91
90,92
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,9,11,12,16,20,22,25,27,31,32,36,38,43,45,48,50,53,58,60,65,66,69,70,73,78,82,84,85,89,93,95,96
-----computeFrom-----
14,15
14,16
26,27
26,28
34,35
34,36
63,64
63,65
67,68
67,69
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;NullStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_10_bad(){    twoIntsStruct * data;    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    if(globalTrue)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(globalTrue)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_10_bad()
CWE457_Use_of_Uninitialized_Variable__struct_array_malloc_no_init_10_bad
{    twoIntsStruct * data;    data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    if(globalTrue)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(globalTrue)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct));
data = (twoIntsStruct *)malloc(10*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)malloc(10*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
malloc(10*sizeof(twoIntsStruct))
malloc
malloc
10*sizeof(twoIntsStruct)
10
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
if(globalTrue)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(globalTrue)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printIntLine(data[i].intOne);                printIntLine(data[i].intTwo);            }
printIntLine(data[i].intOne);
printIntLine(data[i].intOne)
printIntLine
printIntLine
data[i].intOne
data[i]
data
data
i
i
intOne
printIntLine(data[i].intTwo);
printIntLine(data[i].intTwo)
printIntLine
printIntLine
data[i].intTwo
data[i]
data
data
i
i
intTwo
-----joern-----
(19,45,0)
(47,40,0)
(39,44,0)
(27,13,0)
(45,19,0)
(3,16,0)
(31,43,0)
(5,22,0)
(34,29,0)
(37,11,0)
(46,0,0)
(21,11,0)
(32,4,0)
(6,48,0)
(42,45,0)
(48,15,0)
(5,39,0)
(22,5,0)
(15,4,0)
(44,39,0)
(19,18,0)
(23,44,0)
(47,41,0)
(34,13,0)
(15,44,0)
(38,45,0)
(40,48,0)
(7,31,0)
(12,4,0)
(30,0,0)
(44,15,0)
(18,19,0)
(9,22,0)
(18,41,0)
(48,0,0)
(16,0,0)
(28,40,0)
(33,5,0)
(45,15,0)
(40,47,0)
(2,16,0)
(39,5,0)
(1,4,0)
(48,40,0)
(13,34,0)
(26,30,0)
(45,0,0)
(11,15,0)
(25,19,0)
(36,48,0)
(35,0,0)
(10,4,0)
(24,31,0)
(44,23,0)
(17,15,0)
(46,14,1)
(3,2,1)
(39,5,1)
(19,45,1)
(2,0,1)
(42,16,1)
(45,15,1)
(20,16,1)
(44,39,1)
(28,48,1)
(2,30,1)
(20,14,1)
(25,45,1)
(14,8,1)
(38,42,1)
(48,15,1)
(30,0,1)
(8,34,1)
(48,36,1)
(11,15,1)
(37,15,1)
(5,22,1)
(22,9,1)
(33,17,1)
(11,21,1)
(21,37,1)
(9,33,1)
(40,48,1)
(45,38,1)
(13,27,1)
(8,11,1)
(16,3,1)
(34,13,1)
(0,35,1)
(36,6,1)
(19,25,1)
(35,46,1)
(44,23,1)
(15,44,1)
(18,19,1)
(27,11,1)
(45,0,1)
(16,0,1)
(40,28,1)
(26,47,1)
(30,26,1)
(48,0,1)
(6,18,1)
(47,40,1)
(2,14,2)
(48,16,2)
(48,0,2)
(40,16,2)
(3,14,2)
(30,16,2)
(40,48,2)
(16,16,2)
(15,44,2)
(46,14,2)
(5,22,2)
(47,16,2)
(13,11,2)
(19,16,2)
(28,16,2)
(34,13,2)
(47,40,2)
(45,15,2)
(45,0,2)
(36,16,2)
(27,11,2)
(35,14,2)
(44,23,2)
(11,15,2)
(18,19,2)
(19,45,2)
(30,0,2)
(45,16,2)
(44,39,2)
(38,16,2)
(34,11,2)
(26,16,2)
(16,14,2)
(2,16,2)
(25,16,2)
(48,15,2)
(39,5,2)
(18,16,2)
(0,14,2)
(16,0,2)
(6,16,2)
(3,16,2)
(42,16,2)
-----------------------------------
(0,i=0)
(1,if(globalTrue)
(2,i)
(3,10)
(4,)
(5,10*sizeof(twoIntsStruct)
(6,data)
(7,for(i=0; i<10; i++)
(8,globalTrue)
(9,twoIntsStruct)
(10,if (data == NULL)
(11,data == NULL)
(12,if(globalTrue)
(13,-1)
(14,globalTrue)
(15,data = (twoIntsStruct *)
(16,i<10)
(17,data)
(18,printIntLine(data[i].intOne)
(19,data[i].intOne)
(20,RET)
(21,NULL)
(22,sizeof(twoIntsStruct)
(23,twoIntsStruct *)
(24,i)
(25,intOne)
(26,i)
(27,1)
(28,intTwo)
(29,)
(30,i++)
(31,)
(32,data)
(33,10)
(34,exit(-1)
(35,0)
(36,i)
(37,data)
(38,i)
(39,malloc(10*sizeof(twoIntsStruct)
(40,data[i].intTwo)
(41,)
(42,data)
(43,)
(44,(twoIntsStruct *)
(45,data[i])
(46,i)
(47,printIntLine(data[i].intTwo)
(48,data[i])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^