-----label-----
1
-----code-----
void CWE665_Improper_Initialization__wchar_t_ncat_16_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100];
    data = dataBuffer;
    while(1)
    {
        /* FLAW: Do not initialize data */
        ; /* empty statement needed for some flow variants */
        break;
    }
    {
        size_t sourceLen;
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        sourceLen = wcslen(source);
        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */
        wcsncat(data, source, sourceLen);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
27,28
27,29
30,31
30,32
30,33
30,34
30,35
30,36
30,37
31,32
32,33
32,34
33,34
35,36
37,38
38,39
38,40
40,41
40,42
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
64,65
64,66
65,66
67,68
67,69
68,69
70,71
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
86,87
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,26,28,29,34,36,39,41,43,47,49,50,52,53,58,60,61,62,66,69,71,75,77,79,81,85,87
-----computeFrom-----
20,21
20,22
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;NullStatement;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__wchar_t_ncat_16_bad(){    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    while(1)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */        break;    }    {        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }}
void
CWE665_Improper_Initialization__wchar_t_ncat_16_bad()
CWE665_Improper_Initialization__wchar_t_ncat_16_bad
{    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    while(1)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */        break;    }    {        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100];
wchar_t dataBuffer[100];
wchar_t
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
while(1)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */        break;    }
1
{        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */        break;    }
;
break;
{        size_t sourceLen;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        sourceLen = wcslen(source);        /* POTENTIAL FLAW: If data is not initialized properly, wcsncat() may not function correctly */        wcsncat(data, source, sourceLen);        printWLine(data);    }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
sourceLen = wcslen(source);
sourceLen = wcslen(source)
sourceLen
sourceLen
wcslen(source)
wcslen
wcslen
source
source
wcsncat(data, source, sourceLen);
wcsncat(data, source, sourceLen)
wcsncat
wcsncat
data
data
source
source
sourceLen
sourceLen
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(18,15,0)
(9,8,0)
(23,18,0)
(6,8,0)
(14,15,0)
(2,15,0)
(22,4,0)
(15,8,0)
(21,15,0)
(12,18,0)
(1,7,0)
(20,4,0)
(11,15,0)
(13,24,0)
(0,8,0)
(18,12,0)
(24,4,0)
(16,2,0)
(4,8,0)
(2,4,0)
(24,18,0)
(24,15,0)
(3,12,0)
(19,24,0)
(17,24,0)
(1,5,1)
(22,20,1)
(24,19,1)
(18,12,1)
(14,5,1)
(24,18,1)
(10,2,1)
(13,18,1)
(16,24,1)
(24,4,1)
(5,4,1)
(12,3,1)
(4,22,1)
(3,23,1)
(14,1,1)
(19,17,1)
(2,16,1)
(2,4,1)
(23,14,1)
(17,13,1)
(18,12,2)
(1,5,2)
(24,18,2)
(2,4,2)
(24,4,2)
-----------------------------------
(0,while(1)
(1,break;)
(2,printWLine(data)
(3,source)
(4,data = dataBuffer)
(5,1)
(6,dataBuffer)
(7,)
(8,)
(9,data)
(10,RET)
(11,source)
(12,wcslen(source)
(13,data)
(14,'\\0')
(15,)
(16,data)
(17,source)
(18,sourceLen = wcslen(source)
(19,sourceLen)
(20,data)
(21,sourceLen)
(22,dataBuffer)
(23,sourceLen)
(24,wcsncat(data, source, sourceLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^