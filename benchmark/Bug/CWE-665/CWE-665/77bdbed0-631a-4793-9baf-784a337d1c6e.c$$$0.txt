-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__char_pointer_03_bad()
{
    char * data;
    if(5==5)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(5==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        printLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
6,7
7,8
7,9
9,10
9,11
12,13
12,14
13,14
13,15
16,17
18,19
18,20
19,20
19,21
22,23
23,24
24,25
24,26
25,26
27,28
-----nextToken-----
2,4,8,10,11,14,15,17,20,21,26,28
-----computeFrom-----
13,14
13,15
19,20
19,21
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;NullStatement;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__char_pointer_03_bad(){    char * data;    if(5==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(5==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        printLine(data);    }}
void
CWE457_Use_of_Uninitialized_Variable__char_pointer_03_bad()
CWE457_Use_of_Uninitialized_Variable__char_pointer_03_bad
{    char * data;    if(5==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(5==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        printLine(data);    }}
char * data;
char * data;
char
* data
*
data
if(5==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
5==5
5
5
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(5==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        printLine(data);    }
5==5
5
5
{        /* POTENTIAL FLAW: Use data without initializing it */        printLine(data);    }
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(3,6,0)
(1,7,0)
(9,10,0)
(12,10,0)
(5,10,0)
(2,13,0)
(8,7,0)
(4,6,0)
(13,0,0)
(6,4,1)
(11,13,1)
(2,7,1)
(7,1,1)
(11,7,1)
(13,2,1)
(4,3,1)
(8,6,1)
(1,8,1)
(13,7,2)
(2,7,2)
-----------------------------------
(0,)
(1,5)
(2,data)
(3,5)
(4,5)
(5,if(5==5)
(6,5==5)
(7,5==5)
(8,5)
(9,if(5==5)
(10,)
(11,RET)
(12,data)
(13,printLine(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^