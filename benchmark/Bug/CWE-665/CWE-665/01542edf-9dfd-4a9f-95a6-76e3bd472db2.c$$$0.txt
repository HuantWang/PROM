-----label-----
1
-----code-----
void CWE665_Improper_Initialization__char_ncat_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    char * * dataPtr = (char * *)dataVoidPtr;
    /* dereference dataPtr into data */
    char * data = (*dataPtr);
    {
        size_t sourceLen;
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        sourceLen = strlen(source);
        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */
        strncat(data, source, sourceLen);
        printLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
14,18
18,19
19,20
19,21
20,21
20,22
22,23
22,24
25,26
27,28
28,29
28,30
30,31
30,32
30,33
33,34
34,35
35,36
36,37
38,39
38,40
38,41
38,42
38,43
38,44
38,45
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
50,51
52,53
53,54
53,55
53,56
53,57
54,55
56,57
59,60
59,61
62,63
63,64
63,65
64,65
64,66
65,66
67,68
67,69
71,72
72,73
72,74
73,74
75,76
75,77
76,77
78,79
80,81
81,82
81,83
81,84
81,85
82,83
84,85
86,87
88,89
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,6,8,9,13,15,16,17,21,23,24,26,29,31,32,37,42,44,47,49,51,55,57,58,60,61,66,68,69,70,74,77,79,83,85,87,89,93,95
-----computeFrom-----
59,60
59,61
63,64
63,65
67,68
67,69
72,73
72,74
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__char_ncat_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    char * * dataPtr = (char * *)dataVoidPtr;    /* dereference dataPtr into data */    char * data = (*dataPtr);    {        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }}
void
CWE665_Improper_Initialization__char_ncat_64b_badSink(void * dataVoidPtr)
CWE665_Improper_Initialization__char_ncat_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    char * * dataPtr = (char * *)dataVoidPtr;    /* dereference dataPtr into data */    char * data = (*dataPtr);    {        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }}
char * * dataPtr = (char * *)dataVoidPtr;
char * * dataPtr = (char * *)dataVoidPtr;
char
* * dataPtr = (char * *)dataVoidPtr
*
*
dataPtr
= (char * *)dataVoidPtr
(char * *)dataVoidPtr
char * *
char
* *
*
*
dataVoidPtr
dataVoidPtr
char * data = (*dataPtr);
char * data = (*dataPtr);
char
* data = (*dataPtr)
*
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
sourceLen = strlen(source);
sourceLen = strlen(source)
sourceLen
sourceLen
strlen(source)
strlen
strlen
source
source
strncat(data, source, sourceLen);
strncat(data, source, sourceLen)
strncat
strncat
data
data
source
source
sourceLen
sourceLen
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(19,22,0)
(4,35,0)
(23,17,0)
(16,12,0)
(22,19,0)
(25,24,0)
(38,3,0)
(27,39,0)
(37,35,0)
(26,2,0)
(7,4,0)
(12,2,0)
(39,27,0)
(34,26,0)
(11,35,0)
(35,17,0)
(4,39,0)
(8,39,0)
(37,2,0)
(0,19,0)
(14,35,0)
(1,11,0)
(19,13,0)
(31,24,0)
(21,37,0)
(15,22,0)
(4,2,0)
(33,4,0)
(6,3,0)
(28,27,0)
(3,26,0)
(11,22,0)
(20,17,0)
(9,4,0)
(24,16,0)
(19,5,0)
(10,26,0)
(39,2,0)
(16,24,0)
(18,2,0)
(30,16,0)
(13,19,0)
(29,2,0)
(26,3,0)
(32,12,0)
(2,17,0)
(22,17,0)
(35,11,0)
(24,31,1)
(21,4,1)
(0,15,1)
(19,5,1)
(19,13,1)
(32,16,1)
(37,21,1)
(27,28,1)
(34,10,1)
(8,12,1)
(39,27,1)
(7,39,1)
(3,6,1)
(4,9,1)
(19,0,1)
(6,38,1)
(35,11,1)
(4,39,1)
(22,19,1)
(36,37,1)
(28,8,1)
(31,25,1)
(11,1,1)
(10,35,1)
(9,33,1)
(4,35,1)
(12,32,1)
(14,22,1)
(1,14,1)
(25,30,1)
(38,34,1)
(16,24,1)
(30,26,1)
(37,35,1)
(26,3,1)
(11,22,1)
(33,7,1)
(11,22,2)
(26,3,2)
(39,27,2)
(4,39,2)
(19,13,2)
(35,11,2)
(37,35,2)
(19,5,2)
(22,19,2)
(16,24,2)
(4,35,2)
-----------------------------------
(0,dataVoidPtr)
(1,dataPtr)
(2,)
(3,100-1)
(4,strncat(data, source, sourceLen)
(5,void * dataVoidPtr)
(6,1)
(7,data)
(8,sourceLen)
(9,sourceLen)
(10,source)
(11,*dataPtr)
(12,source[100-1] = '\\0')
(13,char * *)
(14,data)
(15,dataPtr)
(16,source[100-1])
(17,)
(18,sourceLen)
(19,(char * *)
(20,data)
(21,data)
(22,* * dataPtr = (char * *)
(23,dataPtr)
(24,100-1)
(25,100)
(26,memset(source, 'C', 100-1)
(27,strlen(source)
(28,source)
(29,source)
(30,source)
(31,1)
(32,'\\0')
(33,source)
(34,'C')
(35,* data = (*dataPtr)
(36,RET)
(37,printLine(data)
(38,100)
(39,sourceLen = strlen(source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^