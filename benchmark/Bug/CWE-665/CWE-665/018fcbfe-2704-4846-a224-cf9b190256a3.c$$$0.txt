-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_14_bad()
{
    double * data;
    data = (double *)ALLOCA(10*sizeof(double));
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        {
            int i;
            for(i=0; i<10; i++)
            {
                printDoubleLine(data[i]);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
35,36
37,38
37,39
38,39
38,40
39,40
42,43
43,44
43,45
44,45
45,46
45,47
47,48
49,50
49,51
49,52
49,53
50,51
51,52
51,53
52,53
55,56
55,57
56,57
59,60
60,61
62,63
63,64
64,65
64,66
65,66
67,68
67,69
68,69
70,71
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,34,36,40,41,46,48,53,54,57,58,61,66,69,71
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
38,39
38,40
51,52
51,53
55,56
55,57
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_14_bad(){    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(globalFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
void
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_14_bad()
CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_14_bad
{    double * data;    data = (double *)ALLOCA(10*sizeof(double));    if(globalFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }}
double * data;
double * data;
double
* data
*
data
data = (double *)ALLOCA(10*sizeof(double));
data = (double *)ALLOCA(10*sizeof(double))
data
data
(double *)ALLOCA(10*sizeof(double))
double *
double
*
*
ALLOCA(10*sizeof(double))
ALLOCA
ALLOCA
10*sizeof(double)
10
sizeof(double)
double
double

if(globalFive==5)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(globalFive==5)    {        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use data without initializing it */        {            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }    }
{            int i;            for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }        }
int i;
int i;
int
i
i
for(i=0; i<10; i++)            {                printDoubleLine(data[i]);            }
i=0;
i=0
i
i
0
i<10
i
i
10
i++
i
i
{                printDoubleLine(data[i]);            }
printDoubleLine(data[i]);
printDoubleLine(data[i])
printDoubleLine
printDoubleLine
data[i]
data
data
i
i
-----joern-----
(0,15,0)
(5,27,0)
(25,16,0)
(1,25,0)
(36,8,0)
(14,15,0)
(6,13,0)
(1,8,0)
(12,11,0)
(16,25,0)
(31,15,0)
(17,36,0)
(22,14,0)
(25,34,0)
(24,0,0)
(29,7,0)
(11,30,0)
(23,15,0)
(2,7,0)
(21,13,0)
(14,34,0)
(34,25,0)
(19,27,0)
(10,14,0)
(28,18,0)
(8,36,0)
(4,15,0)
(35,23,0)
(33,13,0)
(32,34,0)
(34,13,0)
(9,11,0)
(28,14,0)
(8,1,0)
(26,0,0)
(25,1,0)
(3,8,0)
(14,28,0)
(22,0,1)
(26,23,1)
(25,1,1)
(5,19,1)
(17,3,1)
(27,5,1)
(0,24,1)
(14,15,1)
(2,34,1)
(1,8,1)
(0,15,1)
(8,36,1)
(14,34,1)
(34,25,1)
(10,22,1)
(29,2,1)
(7,29,1)
(4,27,1)
(31,4,1)
(23,35,1)
(14,10,1)
(3,32,1)
(35,28,1)
(36,17,1)
(25,16,1)
(20,27,1)
(15,31,1)
(26,15,1)
(19,7,1)
(23,15,1)
(28,14,1)
(24,26,1)
(20,0,1)
(28,14,2)
(26,27,2)
(14,15,2)
(28,0,2)
(25,16,2)
(23,0,2)
(22,0,2)
(0,27,2)
(23,15,2)
(34,25,2)
(8,36,2)
(15,27,2)
(24,27,2)
(0,15,2)
(31,27,2)
(4,27,2)
(25,1,2)
(35,0,2)
(14,0,2)
(26,0,2)
(1,8,2)
(0,0,2)
(14,34,2)
(10,0,2)
(24,0,2)
-----------------------------------
(0,i<10)
(1,ALLOCA(10*sizeof(double)
(2,globalFive)
(3,10)
(4,i)
(5,5)
(6,data)
(7,globalFive==5)
(8,10*sizeof(double)
(9,i)
(10,i)
(11,)
(12,for(i=0; i<10; i++)
(13,)
(14,data[i])
(15,i=0)
(16,double *)
(17,double)
(18,)
(19,globalFive)
(20,RET)
(21,if(globalFive==5)
(22,data)
(23,i++)
(24,10)
(25,(double *)
(26,i)
(27,globalFive==5)
(28,printDoubleLine(data[i])
(29,5)
(30,)
(31,0)
(32,data)
(33,if(globalFive==5)
(34,data = (double *)
(35,i)
(36,sizeof(double)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^