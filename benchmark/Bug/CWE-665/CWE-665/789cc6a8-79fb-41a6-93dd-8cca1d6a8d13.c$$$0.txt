-----label-----
1
-----code-----
void CWE457_Use_of_Uninitialized_Variable__struct_05_bad()
{
    twoIntsStruct data;
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Don't initialize data */
        ; /* empty statement needed for some flow variants */
    }
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Use data without initializing it */
        printIntLine(data.intOne);
        printIntLine(data.intTwo);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
6,7
7,8
7,9
8,9
10,11
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
20,22
21,22
22,23
22,24
23,24
25,26
25,27
26,27
29,30
30,31
30,32
31,32
33,34
33,35
34,35
-----nextToken-----
2,4,9,11,14,16,19,24,27,28,32,35,36
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;IfStatement;IdExpression;Name;CompoundStatement;NullStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;
-----ast_node-----
void CWE457_Use_of_Uninitialized_Variable__struct_05_bad(){    twoIntsStruct data;    if(staticTrue)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(staticTrue)    {        /* POTENTIAL FLAW: Use data without initializing it */        printIntLine(data.intOne);        printIntLine(data.intTwo);    }}
void
CWE457_Use_of_Uninitialized_Variable__struct_05_bad()
CWE457_Use_of_Uninitialized_Variable__struct_05_bad
{    twoIntsStruct data;    if(staticTrue)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }    if(staticTrue)    {        /* POTENTIAL FLAW: Use data without initializing it */        printIntLine(data.intOne);        printIntLine(data.intTwo);    }}
twoIntsStruct data;
twoIntsStruct data;
twoIntsStruct
twoIntsStruct
data
data
if(staticTrue)    {        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Don't initialize data */        ; /* empty statement needed for some flow variants */    }
;
if(staticTrue)    {        /* POTENTIAL FLAW: Use data without initializing it */        printIntLine(data.intOne);        printIntLine(data.intTwo);    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Use data without initializing it */        printIntLine(data.intOne);        printIntLine(data.intTwo);    }
printIntLine(data.intOne);
printIntLine(data.intOne)
printIntLine
printIntLine
data.intOne
data
data
intOne
printIntLine(data.intTwo);
printIntLine(data.intTwo)
printIntLine
printIntLine
data.intTwo
data
data
intTwo
-----joern-----
(1,9,0)
(0,12,0)
(3,12,0)
(9,5,0)
(6,11,0)
(11,4,0)
(4,11,0)
(4,5,0)
(15,1,0)
(9,1,0)
(7,1,0)
(8,12,0)
(14,11,0)
(11,14,1)
(2,13,1)
(15,7,1)
(7,13,1)
(13,10,1)
(4,11,1)
(14,6,1)
(1,15,1)
(9,1,1)
(2,4,1)
(6,9,1)
(9,1,2)
(1,13,2)
(15,13,2)
(4,11,2)
(14,13,2)
(7,13,2)
(4,13,2)
(6,13,2)
(11,13,2)
(9,13,2)
-----------------------------------
(0,if(staticTrue)
(1,data.intOne)
(2,RET)
(3,data)
(4,printIntLine(data.intTwo)
(5,)
(6,data)
(7,data)
(8,if(staticTrue)
(9,printIntLine(data.intOne)
(10,staticTrue)
(11,data.intTwo)
(12,)
(13,staticTrue)
(14,intTwo)
(15,intOne)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^