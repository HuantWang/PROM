-----label-----
1
-----code-----
void CWE665_Improper_Initialization__char_ncat_03_bad()
{
    char * data;
    char dataBuffer[100];
    data = dataBuffer;
    if(5==5)
    {
        /* FLAW: Do not initialize data */
        ; /* empty statement needed for some flow variants */
    }
    {
        size_t sourceLen;
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        sourceLen = strlen(source);
        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */
        strncat(data, source, sourceLen);
        printLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
26,28
29,30
31,32
31,33
31,34
31,35
31,36
31,37
31,38
32,33
33,34
33,35
34,35
36,37
38,39
39,40
39,41
41,42
41,43
43,44
45,46
46,47
46,48
46,49
46,50
47,48
49,50
52,53
52,54
55,56
56,57
56,58
57,58
57,59
58,59
60,61
60,62
64,65
65,66
65,67
66,67
68,69
68,70
69,70
71,72
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
87,88
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,27,28,30,35,37,40,42,44,48,50,51,53,54,59,61,62,63,67,70,72,76,78,80,82,86,88
-----computeFrom-----
20,21
20,22
26,27
26,28
52,53
52,54
56,57
56,58
60,61
60,62
65,66
65,67
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;NullStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__char_ncat_03_bad(){    char * data;    char dataBuffer[100];    data = dataBuffer;    if(5==5)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }}
void
CWE665_Improper_Initialization__char_ncat_03_bad()
CWE665_Improper_Initialization__char_ncat_03_bad
{    char * data;    char dataBuffer[100];    data = dataBuffer;    if(5==5)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100];
char dataBuffer[100];
char
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(5==5)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
5==5
5
5
{        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
;
{        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
sourceLen = strlen(source);
sourceLen = strlen(source)
sourceLen
sourceLen
strlen(source)
strlen
strlen
source
source
strncat(data, source, sourceLen);
strncat(data, source, sourceLen)
strncat
strncat
data
data
source
source
sourceLen
sourceLen
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(5,4,0)
(29,28,0)
(7,4,0)
(9,24,0)
(32,3,0)
(10,3,0)
(19,29,0)
(14,28,0)
(1,2,0)
(26,28,0)
(28,31,0)
(6,4,0)
(17,36,0)
(5,28,0)
(24,4,0)
(13,14,0)
(36,14,0)
(27,3,0)
(24,29,0)
(21,24,0)
(18,31,0)
(3,10,0)
(14,36,0)
(23,5,0)
(0,10,0)
(10,16,0)
(4,31,0)
(34,2,0)
(35,31,0)
(15,24,0)
(20,29,0)
(22,28,0)
(33,16,0)
(30,19,0)
(12,31,0)
(25,14,0)
(24,28,0)
(29,19,0)
(16,28,0)
(11,36,0)
(9,15,1)
(20,16,1)
(5,23,1)
(7,6,1)
(36,17,1)
(24,29,1)
(14,36,1)
(33,10,1)
(32,0,1)
(17,11,1)
(3,27,1)
(29,19,1)
(1,34,1)
(24,21,1)
(11,25,1)
(19,30,1)
(2,1,1)
(4,7,1)
(30,20,1)
(15,29,1)
(34,4,1)
(13,2,1)
(10,3,1)
(0,14,1)
(23,24,1)
(27,32,1)
(24,4,1)
(25,13,1)
(8,5,1)
(5,4,1)
(21,9,1)
(16,33,1)
(29,19,2)
(14,36,2)
(24,4,2)
(10,3,2)
(5,4,2)
(24,29,2)
-----------------------------------
(0,source)
(1,5)
(2,5==5)
(3,100-1)
(4,data = dataBuffer)
(5,printLine(data)
(6,data)
(7,dataBuffer)
(8,RET)
(9,source)
(10,source[100-1])
(11,100)
(12,dataBuffer)
(13,source)
(14,memset(source, 'C', 100-1)
(15,data)
(16,source[100-1] = '\\0')
(17,1)
(18,if(5==5)
(19,strlen(source)
(20,sourceLen)
(21,sourceLen)
(22,source)
(23,data)
(24,strncat(data, source, sourceLen)
(25,'C')
(26,sourceLen)
(27,1)
(28,)
(29,sourceLen = strlen(source)
(30,source)
(31,)
(32,100)
(33,'\\0')
(34,5)
(35,data)
(36,100-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^