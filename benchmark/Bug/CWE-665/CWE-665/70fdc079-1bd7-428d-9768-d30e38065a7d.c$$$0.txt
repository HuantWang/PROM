-----label-----
1
-----code-----
void CWE665_Improper_Initialization__char_ncat_14_bad()
{
    char * data;
    char dataBuffer[100];
    data = dataBuffer;
    if(globalFive==5)
    {
        /* FLAW: Do not initialize data */
        ; /* empty statement needed for some flow variants */
    }
    {
        size_t sourceLen;
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        sourceLen = strlen(source);
        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */
        strncat(data, source, sourceLen);
        printLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
26,28
27,28
30,31
32,33
32,34
32,35
32,36
32,37
32,38
32,39
33,34
34,35
34,36
35,36
37,38
39,40
40,41
40,42
42,43
42,44
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
53,55
56,57
57,58
57,59
58,59
58,60
59,60
61,62
61,63
65,66
66,67
66,68
67,68
69,70
69,71
70,71
72,73
74,75
75,76
75,77
75,78
75,79
76,77
78,79
80,81
82,83
84,85
85,86
85,87
86,87
88,89
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,28,29,31,36,38,41,43,45,49,51,52,54,55,60,62,63,64,68,71,73,77,79,81,83,87,89
-----computeFrom-----
20,21
20,22
26,27
26,28
53,54
53,55
57,58
57,59
61,62
61,63
66,67
66,68
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__char_ncat_14_bad(){    char * data;    char dataBuffer[100];    data = dataBuffer;    if(globalFive==5)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }}
void
CWE665_Improper_Initialization__char_ncat_14_bad()
CWE665_Improper_Initialization__char_ncat_14_bad
{    char * data;    char dataBuffer[100];    data = dataBuffer;    if(globalFive==5)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }    {        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100];
char dataBuffer[100];
char
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalFive==5)    {        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
globalFive==5
globalFive
globalFive
5
{        /* FLAW: Do not initialize data */        ; /* empty statement needed for some flow variants */    }
;
{        size_t sourceLen;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        sourceLen = strlen(source);        /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */        strncat(data, source, sourceLen);        printLine(data);    }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
sourceLen = strlen(source);
sourceLen = strlen(source)
sourceLen
sourceLen
strlen(source)
strlen
strlen
source
source
strncat(data, source, sourceLen);
strncat(data, source, sourceLen)
strncat
strncat
data
data
source
source
sourceLen
sourceLen
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(19,13,0)
(0,4,0)
(36,30,0)
(16,31,0)
(3,30,0)
(4,32,0)
(31,32,0)
(17,32,0)
(27,36,0)
(0,22,0)
(17,30,0)
(7,5,0)
(20,32,0)
(2,17,0)
(21,32,0)
(30,33,0)
(22,0,0)
(36,23,0)
(8,24,0)
(14,22,0)
(18,33,0)
(34,23,0)
(32,33,0)
(23,32,0)
(31,13,0)
(11,30,0)
(1,13,0)
(36,32,0)
(29,5,0)
(28,0,0)
(25,4,0)
(15,33,0)
(6,22,0)
(13,31,0)
(9,36,0)
(26,31,0)
(23,24,0)
(24,23,0)
(35,36,0)
(12,33,0)
(35,9,1)
(25,0,1)
(36,23,1)
(6,14,1)
(28,31,1)
(31,13,1)
(19,16,1)
(8,34,1)
(36,27,1)
(14,28,1)
(22,6,1)
(30,11,1)
(29,30,1)
(34,4,1)
(9,23,1)
(36,30,1)
(26,5,1)
(2,36,1)
(1,19,1)
(11,3,1)
(7,29,1)
(13,1,1)
(23,24,1)
(5,7,1)
(27,35,1)
(4,25,1)
(24,8,1)
(16,26,1)
(17,30,1)
(17,2,1)
(0,22,1)
(10,17,1)
(0,22,2)
(36,30,2)
(36,23,2)
(17,30,2)
(31,13,2)
(23,24,2)
-----------------------------------
(0,source[100-1])
(1,1)
(2,data)
(3,data)
(4,source[100-1] = '\\0')
(5,globalFive==5)
(6,1)
(7,5)
(8,source)
(9,data)
(10,RET)
(11,dataBuffer)
(12,data)
(13,100-1)
(14,100)
(15,if(globalFive==5)
(16,'C')
(17,printLine(data)
(18,dataBuffer)
(19,100)
(20,source)
(21,sourceLen)
(22,100-1)
(23,sourceLen = strlen(source)
(24,strlen(source)
(25,'\\0')
(26,source)
(27,sourceLen)
(28,source)
(29,globalFive)
(30,data = dataBuffer)
(31,memset(source, 'C', 100-1)
(32,)
(33,)
(34,sourceLen)
(35,source)
(36,strncat(data, source, sourceLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^