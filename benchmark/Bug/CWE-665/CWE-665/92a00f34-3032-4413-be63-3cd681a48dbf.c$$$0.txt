-----label-----
1
-----code-----
void CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_66_bad()
{
    size_t data;
    size_t dataArray[5];
    /* Initialize data */
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to unsigned int */
            data = strtoul(inputBuffer, NULL, 0);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    /* put data in array */
    dataArray[2] = data;
    CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_66b_badSink(dataArray);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
16,17
16,18
18,19
20,21
21,22
21,23
22,23
25,26
25,27
26,27
27,28
27,29
29,30
29,31
29,32
31,32
32,33
34,35
36,37
36,38
36,39
37,38
37,39
38,39
38,40
38,41
38,42
39,40
41,42
43,44
45,46
47,48
49,50
50,51
51,52
51,53
52,53
54,55
54,56
54,57
54,58
55,56
57,58
59,60
62,63
63,64
64,65
64,66
65,66
68,69
69,70
69,71
70,71
70,72
71,72
74,75
76,77
77,78
77,79
78,79
80,81
-----nextToken-----
2,4,9,11,15,17,19,23,24,28,30,33,35,40,42,44,46,48,53,56,58,60,61,66,67,72,73,75,79,81
-----computeFrom-----
21,22
21,23
37,38
37,39
51,52
51,53
69,70
69,71
-----guardedBy-----
42,58
48,60
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_66_bad(){    size_t data;    size_t dataArray[5];    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }    }    /* put data in array */    dataArray[2] = data;    CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_66b_badSink(dataArray);}
void
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_66_bad()
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_66_bad
{    size_t data;    size_t dataArray[5];    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }    }    /* put data in array */    dataArray[2] = data;    CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_66b_badSink(dataArray);}
size_t data;
size_t data;
size_t
size_t
data
data
size_t dataArray[5];
size_t dataArray[5];
size_t
size_t
dataArray[5]
dataArray
[5]
5
data = 0;
data = 0
data
data
0
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }
data = strtoul(inputBuffer, NULL, 0);
data = strtoul(inputBuffer, NULL, 0)
data
data
strtoul(inputBuffer, NULL, 0)
strtoul
strtoul
inputBuffer
inputBuffer
NULL
NULL
0
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
dataArray[2] = data;
dataArray[2] = data
dataArray[2]
dataArray
dataArray
2
data
data
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_66b_badSink(dataArray);
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_66b_badSink(dataArray)
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_66b_badSink
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_66b_badSink
dataArray
dataArray
-----joern-----
(29,12,0)
(12,18,0)
(28,18,0)
(10,5,0)
(33,34,0)
(7,34,0)
(34,32,0)
(19,23,0)
(6,27,0)
(24,1,0)
(31,32,0)
(4,18,0)
(1,22,0)
(22,1,0)
(32,27,0)
(5,0,0)
(30,27,0)
(19,34,0)
(2,16,0)
(16,18,0)
(20,2,0)
(8,1,0)
(16,4,0)
(11,2,0)
(3,4,0)
(34,19,0)
(15,32,0)
(16,19,0)
(1,32,0)
(35,34,0)
(21,18,0)
(14,4,0)
(25,16,0)
(9,19,0)
(27,18,0)
(13,22,0)
(26,1,0)
(34,35,1)
(29,16,1)
(12,29,1)
(31,4,1)
(16,25,1)
(2,11,1)
(25,2,1)
(14,3,1)
(4,14,1)
(22,13,1)
(10,22,1)
(5,10,1)
(17,12,1)
(7,9,1)
(20,5,1)
(1,32,1)
(33,7,1)
(26,8,1)
(11,20,1)
(32,15,1)
(19,34,1)
(9,22,1)
(13,1,1)
(34,32,1)
(16,19,1)
(8,32,1)
(22,1,1)
(24,26,1)
(16,4,1)
(20,19,1)
(1,24,1)
(15,31,1)
(35,33,1)
(34,22,2)
(19,34,2)
(22,1,2)
(33,22,2)
(19,22,2)
(1,32,2)
(16,19,2)
(9,22,2)
(7,22,2)
(34,32,2)
(16,4,2)
(5,22,2)
(35,22,2)
(10,22,2)
-----------------------------------
(0,)
(1,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(2,dataArray[2])
(3,data)
(4,data = 0)
(5,printLine("fgets()
(6,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(7,inputBuffer)
(8,inputBuffer)
(9,data)
(10,"fgets()
(11,2)
(12,CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_66b_badSink(dataArray)
(13,NULL)
(14,0)
(15,"")
(16,dataArray[2] = data)
(17,RET)
(18,)
(19,data = strtoul(inputBuffer, NULL, 0)
(20,dataArray)
(21,data)
(22,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(23,)
(24,stdin)
(25,data)
(26,CHAR_ARRAY_SIZE)
(27,)
(28,dataArray)
(29,dataArray)
(30,inputBuffer)
(31,inputBuffer)
(32,inputBuffer[CHAR_ARRAY_SIZE] = "")
(33,NULL)
(34,strtoul(inputBuffer, NULL, 0)
(35,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^