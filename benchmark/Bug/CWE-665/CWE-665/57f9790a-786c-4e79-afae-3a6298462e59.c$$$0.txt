-----label-----
1
-----code-----
void CWE665_Improper_Initialization__char_ncat_34_bad()
{
    char * data;
    CWE665_Improper_Initialization__char_ncat_34_unionType myUnion;
    char dataBuffer[100];
    data = dataBuffer;
    /* FLAW: Do not initialize data */
    ; /* empty statement needed for some flow variants */
    myUnion.unionFirst = data;
    {
        char * data = myUnion.unionSecond;
        {
            size_t sourceLen;
            char source[100];
            memset(source, 'C', 100-1); /* fill with 'C's */
            source[100-1] = '\0'; /* null terminate */
            sourceLen = strlen(source);
            /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */
            strncat(data, source, sourceLen);
            printLine(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
23,24
25,26
26,27
26,28
27,28
29,30
32,33
33,34
33,35
34,35
34,36
35,36
38,39
40,41
40,42
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
52,53
52,54
52,55
52,56
52,57
52,58
52,59
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
62,63
62,64
64,65
66,67
67,68
67,69
67,70
67,71
68,69
70,71
73,74
73,75
76,77
77,78
77,79
78,79
78,80
79,80
81,82
81,83
85,86
86,87
86,88
87,88
89,90
89,91
90,91
92,93
94,95
95,96
95,97
95,98
95,99
96,97
98,99
100,101
102,103
104,105
105,106
105,107
106,107
108,109
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,28,30,31,36,37,39,43,45,46,50,51,56,58,61,63,65,69,71,72,74,75,80,82,83,84,88,91,93,97,99,101,103,107,109
-----computeFrom-----
26,27
26,28
33,34
33,35
73,74
73,75
77,78
77,79
81,82
81,83
86,87
86,88
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;NullStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE665_Improper_Initialization__char_ncat_34_bad(){    char * data;    CWE665_Improper_Initialization__char_ncat_34_unionType myUnion;    char dataBuffer[100];    data = dataBuffer;    /* FLAW: Do not initialize data */    ; /* empty statement needed for some flow variants */    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        {            size_t sourceLen;            char source[100];            memset(source, 'C', 100-1); /* fill with 'C's */            source[100-1] = '\0'; /* null terminate */            sourceLen = strlen(source);            /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */            strncat(data, source, sourceLen);            printLine(data);        }    }}
void
CWE665_Improper_Initialization__char_ncat_34_bad()
CWE665_Improper_Initialization__char_ncat_34_bad
{    char * data;    CWE665_Improper_Initialization__char_ncat_34_unionType myUnion;    char dataBuffer[100];    data = dataBuffer;    /* FLAW: Do not initialize data */    ; /* empty statement needed for some flow variants */    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        {            size_t sourceLen;            char source[100];            memset(source, 'C', 100-1); /* fill with 'C's */            source[100-1] = '\0'; /* null terminate */            sourceLen = strlen(source);            /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */            strncat(data, source, sourceLen);            printLine(data);        }    }}
char * data;
char * data;
char
* data
*
data
CWE665_Improper_Initialization__char_ncat_34_unionType myUnion;
CWE665_Improper_Initialization__char_ncat_34_unionType myUnion;
CWE665_Improper_Initialization__char_ncat_34_unionType
CWE665_Improper_Initialization__char_ncat_34_unionType
myUnion
myUnion
char dataBuffer[100];
char dataBuffer[100];
char
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
;
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        char * data = myUnion.unionSecond;        {            size_t sourceLen;            char source[100];            memset(source, 'C', 100-1); /* fill with 'C's */            source[100-1] = '\0'; /* null terminate */            sourceLen = strlen(source);            /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */            strncat(data, source, sourceLen);            printLine(data);        }    }
char * data = myUnion.unionSecond;
char * data = myUnion.unionSecond;
char
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            size_t sourceLen;            char source[100];            memset(source, 'C', 100-1); /* fill with 'C's */            source[100-1] = '\0'; /* null terminate */            sourceLen = strlen(source);            /* POTENTIAL FLAW: If data is not initialized properly, strncat() may not function correctly */            strncat(data, source, sourceLen);            printLine(data);        }
size_t sourceLen;
size_t sourceLen;
size_t
size_t
sourceLen
sourceLen
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
sourceLen = strlen(source);
sourceLen = strlen(source)
sourceLen
sourceLen
strlen(source)
strlen
strlen
source
source
strncat(data, source, sourceLen);
strncat(data, source, sourceLen)
strncat
strncat
data
data
source
source
sourceLen
sourceLen
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(32,22,0)
(12,42,0)
(33,28,0)
(5,11,0)
(36,40,0)
(30,40,0)
(16,42,0)
(41,37,0)
(23,6,0)
(34,32,0)
(1,6,0)
(42,3,0)
(18,6,0)
(36,42,0)
(26,25,0)
(14,6,0)
(13,4,0)
(28,3,0)
(0,14,0)
(43,36,0)
(4,40,0)
(22,28,0)
(3,6,0)
(17,32,0)
(29,22,0)
(25,37,0)
(20,3,0)
(40,28,0)
(39,42,0)
(40,4,0)
(25,11,0)
(15,16,0)
(19,6,0)
(12,28,0)
(27,12,0)
(10,8,0)
(45,22,0)
(21,36,0)
(22,32,0)
(31,28,0)
(35,37,0)
(7,36,0)
(42,16,0)
(37,25,0)
(9,16,0)
(36,28,0)
(44,19,0)
(2,14,0)
(8,19,0)
(19,14,0)
(24,8,0)
(11,28,0)
(7,40,1)
(24,14,1)
(29,45,1)
(36,43,1)
(12,27,1)
(17,34,1)
(39,19,1)
(19,14,1)
(42,16,1)
(16,9,1)
(14,0,1)
(25,37,1)
(10,24,1)
(36,40,1)
(11,5,1)
(0,2,1)
(32,17,1)
(27,36,1)
(4,13,1)
(43,21,1)
(12,42,1)
(40,4,1)
(9,15,1)
(13,30,1)
(19,44,1)
(41,26,1)
(30,11,1)
(44,8,1)
(38,12,1)
(34,29,1)
(45,42,1)
(36,42,1)
(22,32,1)
(26,22,1)
(35,41,1)
(37,35,1)
(15,39,1)
(21,7,1)
(8,10,1)
(5,25,1)
(36,40,2)
(36,42,2)
(19,14,2)
(25,37,2)
(42,16,2)
(40,4,2)
(22,32,2)
(12,42,2)
-----------------------------------
(0,dataBuffer)
(1,data)
(2,data)
(3,)
(4,strlen(source)
(5,'\\0')
(6,)
(7,data)
(8,myUnion.unionFirst)
(9,unionSecond)
(10,unionFirst)
(11,source[100-1] = '\\0')
(12,printLine(data)
(13,source)
(14,data = dataBuffer)
(15,myUnion)
(16,myUnion.unionSecond)
(17,1)
(18,dataBuffer)
(19,myUnion.unionFirst = data)
(20,data)
(21,source)
(22,memset(source, 'C', 100-1)
(23,myUnion)
(24,myUnion)
(25,source[100-1])
(26,source)
(27,data)
(28,)
(29,'C')
(30,sourceLen)
(31,source)
(32,100-1)
(33,sourceLen)
(34,100)
(35,1)
(36,strncat(data, source, sourceLen)
(37,100-1)
(38,RET)
(39,data)
(40,sourceLen = strlen(source)
(41,100)
(42,* data = myUnion.unionSecond)
(43,sourceLen)
(44,data)
(45,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^