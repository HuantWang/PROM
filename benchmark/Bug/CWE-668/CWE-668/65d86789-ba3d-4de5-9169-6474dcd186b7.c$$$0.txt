-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_03_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[250] = L"PATH=";
    data = dataBuffer;
    if(5==5)
    {
        {
            /* Read input from a file */
            size_t dataLen = wcslen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (250-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                    {
                        printLine("fgetws() failed");
                        /* Restore NUL terminator if fgetws fails */
                        data[dataLen] = L'\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */
    PUTENV(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
47,48
49,50
49,51
52,53
52,54
53,54
53,55
54,55
54,56
56,57
59,60
59,61
60,61
61,62
61,63
62,63
64,65
64,66
64,67
65,66
67,68
70,71
70,72
71,72
71,73
72,73
74,75
76,77
76,78
77,78
77,79
78,79
78,80
79,80
79,81
79,82
79,83
80,81
82,83
82,84
83,84
85,86
87,88
87,89
88,89
88,90
91,92
92,93
92,94
94,95
96,97
98,99
100,101
100,102
101,102
102,103
102,104
103,104
106,107
107,108
107,109
108,109
108,110
109,110
111,112
114,115
115,116
115,117
116,117
118,119
120,121
121,122
121,123
122,123
124,125
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,29,30,36,38,42,44,48,50,51,55,57,58,63,66,68,69,73,75,81,84,86,89,90,93,95,97,99,104,105,110,112,113,117,119,123,125
-----computeFrom-----
22,23
22,24
28,29
28,30
53,54
53,55
54,55
54,56
61,62
61,63
71,72
71,73
78,79
78,80
82,83
82,84
92,93
92,94
107,108
107,109
-----guardedBy-----
57,112
75,99
73,119
84,110
95,112
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_03_bad(){    wchar_t * data;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    if(5==5)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
void
CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_03_bad()
CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_03_bad
{    wchar_t * data;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    if(5==5)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[250] = L"PATH=";
wchar_t dataBuffer[250] = L"PATH=";
wchar_t
dataBuffer[250] = L"PATH="
dataBuffer
[250]
250
= L"PATH="
L"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(5==5)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }
5==5
5
5
{        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }
if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }
fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(250-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
PUTENV(data);
PUTENV(data)
PUTENV
PUTENV
data
data
-----joern-----
(15,55,0)
(54,45,0)
(34,56,0)
(42,38,0)
(29,53,0)
(0,20,0)
(36,4,0)
(53,19,0)
(32,38,0)
(46,55,0)
(53,29,0)
(52,38,0)
(38,42,0)
(4,31,0)
(39,14,0)
(52,40,0)
(4,45,0)
(6,40,0)
(24,53,0)
(11,31,0)
(18,56,0)
(7,12,0)
(29,55,0)
(3,55,0)
(18,17,0)
(31,14,0)
(55,28,0)
(22,32,0)
(48,12,0)
(31,11,0)
(5,11,0)
(41,13,0)
(37,14,0)
(8,14,0)
(29,31,0)
(49,42,0)
(11,55,0)
(27,7,0)
(44,42,0)
(19,53,0)
(45,4,0)
(43,3,0)
(53,38,0)
(53,18,0)
(10,52,0)
(18,53,0)
(21,19,0)
(17,18,0)
(35,32,0)
(51,38,0)
(3,28,0)
(56,18,0)
(38,13,0)
(25,20,0)
(33,28,0)
(2,28,0)
(14,30,0)
(50,29,0)
(9,29,0)
(56,31,0)
(16,28,0)
(23,4,0)
(47,56,0)
(1,31,0)
(48,7,1)
(43,20,1)
(24,18,1)
(11,5,1)
(19,53,1)
(38,42,1)
(0,55,1)
(53,38,1)
(43,52,1)
(20,25,1)
(49,51,1)
(10,19,1)
(18,56,1)
(43,45,1)
(29,55,1)
(56,31,1)
(31,11,1)
(3,43,1)
(9,50,1)
(53,24,1)
(10,48,1)
(32,38,1)
(29,31,1)
(47,34,1)
(50,32,1)
(4,31,1)
(26,3,1)
(53,29,1)
(32,22,1)
(22,35,1)
(36,23,1)
(5,1,1)
(53,18,1)
(34,29,1)
(54,4,1)
(42,44,1)
(11,55,1)
(51,45,1)
(21,53,1)
(35,38,1)
(23,31,1)
(29,9,1)
(45,54,1)
(52,10,1)
(55,15,1)
(3,55,1)
(56,47,1)
(1,20,1)
(27,19,1)
(7,27,1)
(19,21,1)
(44,49,1)
(15,46,1)
(45,4,1)
(46,33,1)
(18,17,1)
(25,0,1)
(52,38,1)
(43,32,1)
(4,36,1)
(5,20,2)
(42,45,2)
(34,32,2)
(19,32,2)
(18,17,2)
(7,19,2)
(32,45,2)
(27,19,2)
(47,32,2)
(32,38,2)
(44,45,2)
(31,11,2)
(10,32,2)
(4,31,2)
(18,56,2)
(22,45,2)
(24,32,2)
(54,20,2)
(29,32,2)
(38,45,2)
(45,4,2)
(1,20,2)
(49,45,2)
(29,55,2)
(51,45,2)
(35,45,2)
(52,32,2)
(50,32,2)
(53,32,2)
(23,20,2)
(4,20,2)
(11,20,2)
(11,55,2)
(45,20,2)
(56,32,2)
(21,32,2)
(9,32,2)
(38,42,2)
(19,53,2)
(36,20,2)
(48,19,2)
(31,20,2)
(18,32,2)
(53,18,2)
(53,29,2)
(56,31,2)
(3,55,2)
(53,38,2)
(29,31,2)
(52,38,2)
-----------------------------------
(0,5)
(1,dataLen)
(2,if(5==5)
(3,PUTENV(data)
(4,250-dataLen)
(5,data)
(6,if (fgetws(data+dataLen, (int)
(7,printLine("fgetws()
(8,if (250-dataLen > 1)
(9,dataLen)
(10,pFile)
(11,wcslen(data)
(12,)
(13,)
(14,)
(15,dataBuffer)
(16,data)
(17,int)
(18,(int)
(19,fgetws(data+dataLen, (int)
(20,5==5)
(21,NULL)
(22,NULL)
(23,250)
(24,pFile)
(25,5)
(26,RET)
(27,"fgetws()
(28,)
(29,data+dataLen)
(30,)
(31,dataLen = wcslen(data)
(32,pFile != NULL)
(33,"PATH=")
(34,250)
(35,pFile)
(36,dataLen)
(37,pFile)
(38,pFile = fopen(FILENAME, "r")
(39,dataLen)
(40,)
(41,if (pFile != NULL)
(42,fopen(FILENAME, "r")
(43,data)
(44,"r")
(45,250-dataLen > 1)
(46,data)
(47,dataLen)
(48,\\\'\\\\0\\\')
(49,FILENAME)
(50,data)
(51,pFile)
(52,fclose(pFile)
(53,fgetws(data+dataLen, (int)
(54,1)
(55,data = dataBuffer)
(56,250-dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
