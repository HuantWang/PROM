-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_05_bad()
{
    char * data;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    if(staticTrue)
    {
        {
            /* Read input from a file */
            size_t dataLen = strlen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (250-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                    {
                        printLine("fgets() failed");
                        /* Restore NUL terminator if fgets fails */
                        data[dataLen] = '\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */
    PUTENV(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
30,31
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
48,49
48,50
51,52
51,53
52,53
52,54
53,54
53,55
55,56
58,59
58,60
59,60
60,61
60,62
61,62
63,64
63,65
63,66
64,65
66,67
69,70
69,71
70,71
70,72
71,72
73,74
75,76
75,77
76,77
76,78
77,78
77,79
78,79
78,80
78,81
78,82
79,80
81,82
81,83
82,83
84,85
86,87
86,88
87,88
87,89
90,91
91,92
91,93
93,94
95,96
97,98
99,100
99,101
100,101
101,102
101,103
102,103
105,106
106,107
106,108
107,108
107,109
108,109
110,111
113,114
114,115
114,116
115,116
117,118
119,120
120,121
120,122
121,122
123,124
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,29,35,37,41,43,47,49,50,54,56,57,62,65,67,68,72,74,80,83,85,88,89,92,94,96,98,103,104,109,111,112,116,118,122,124
-----computeFrom-----
22,23
22,24
52,53
52,54
53,54
53,55
60,61
60,62
70,71
70,72
77,78
77,79
81,82
81,83
91,92
91,93
106,107
106,108
-----guardedBy-----
56,111
74,98
72,118
83,109
94,111
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_05_bad(){    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    if(staticTrue)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_file_05_bad()
CWE427_Uncontrolled_Search_Path_Element__char_file_05_bad
{    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    if(staticTrue)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticTrue)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
staticTrue
staticTrue
{        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(250-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
PUTENV(data);
PUTENV(data)
PUTENV
PUTENV
data
data
-----joern-----
(26,15,0)
(60,35,0)
(12,60,0)
(56,3,0)
(25,12,0)
(23,48,0)
(22,33,0)
(37,61,0)
(31,6,0)
(25,35,0)
(9,21,0)
(58,23,0)
(17,58,0)
(51,6,0)
(43,16,0)
(54,23,0)
(41,3,0)
(16,21,0)
(27,61,0)
(39,46,0)
(46,39,0)
(16,2,0)
(29,34,0)
(13,6,0)
(20,23,0)
(51,12,0)
(3,6,0)
(33,36,0)
(58,12,0)
(48,8,0)
(34,14,0)
(40,12,0)
(42,12,0)
(28,39,0)
(32,14,0)
(8,48,0)
(0,5,0)
(61,16,0)
(7,33,0)
(57,20,0)
(53,2,0)
(5,15,0)
(13,26,0)
(48,3,0)
(23,20,0)
(4,26,0)
(59,35,0)
(38,51,0)
(6,51,0)
(30,2,0)
(3,48,0)
(23,58,0)
(55,35,0)
(13,12,0)
(1,35,0)
(6,33,0)
(48,23,0)
(39,6,0)
(18,60,0)
(19,58,0)
(47,60,0)
(58,6,0)
(2,16,0)
(34,16,0)
(23,16,0)
(45,13,0)
(12,35,0)
(49,33,0)
(24,46,0)
(52,39,0)
(11,13,0)
(44,25,0)
(20,23,1)
(18,47,1)
(23,48,1)
(38,31,1)
(17,61,1)
(52,6,1)
(12,40,1)
(58,12,1)
(4,13,1)
(19,17,1)
(26,4,1)
(34,16,1)
(11,5,1)
(61,16,1)
(50,25,1)
(28,52,1)
(24,39,1)
(13,6,1)
(40,42,1)
(51,12,1)
(58,19,1)
(48,8,1)
(30,43,1)
(31,10,1)
(57,23,1)
(56,58,1)
(37,16,1)
(39,28,1)
(60,18,1)
(39,6,1)
(23,58,1)
(44,34,1)
(45,11,1)
(23,54,1)
(27,37,1)
(0,20,1)
(44,61,1)
(44,10,1)
(51,38,1)
(54,48,1)
(43,46,1)
(58,6,1)
(34,29,1)
(46,24,1)
(13,45,1)
(10,12,1)
(46,39,1)
(6,51,1)
(12,60,1)
(29,26,1)
(44,46,1)
(25,44,1)
(13,12,1)
(48,3,1)
(20,57,1)
(23,16,1)
(42,60,1)
(3,6,1)
(29,20,1)
(25,12,1)
(5,0,1)
(2,53,1)
(41,56,1)
(16,2,1)
(53,30,1)
(61,27,1)
(3,41,1)
(39,10,2)
(4,20,2)
(51,10,2)
(6,10,2)
(38,10,2)
(56,61,2)
(45,20,2)
(58,12,2)
(16,46,2)
(46,39,2)
(2,46,2)
(53,46,2)
(23,61,2)
(24,10,2)
(20,61,2)
(13,20,2)
(61,16,2)
(58,61,2)
(31,10,2)
(58,6,2)
(13,12,2)
(52,10,2)
(3,6,2)
(12,60,2)
(5,20,2)
(51,12,2)
(17,61,2)
(16,2,2)
(48,61,2)
(23,48,2)
(34,61,2)
(13,6,2)
(57,61,2)
(19,61,2)
(23,58,2)
(25,12,2)
(20,23,2)
(23,16,2)
(6,51,2)
(43,46,2)
(61,46,2)
(54,61,2)
(29,61,2)
(0,20,2)
(30,46,2)
(48,8,2)
(26,20,2)
(11,20,2)
(48,3,2)
(34,16,2)
(39,6,2)
(37,46,2)
(46,10,2)
(28,10,2)
(41,61,2)
(27,46,2)
(3,61,2)
-----------------------------------
(0,"fgets()
(1,data)
(2,fopen(FILENAME, "r")
(3,250-dataLen)
(4,\\\'\\\\0\\\')
(5,printLine("fgets()
(6,dataLen = strlen(data)
(7,if (250-dataLen > 1)
(8,int)
(9,if (pFile != NULL)
(10,staticTrue)
(11,data)
(12,data = dataBuffer)
(13,data[dataLen])
(14,)
(15,)
(16,pFile = fopen(FILENAME, "r")
(17,data)
(18,"PATH=")
(19,dataLen)
(20,fgets(data+dataLen, (int)
(21,)
(22,pFile)
(23,fgets(data+dataLen, (int)
(24,1)
(25,PUTENV(data)
(26,data[dataLen] = \\\'\\\\0\\\')
(27,NULL)
(28,dataLen)
(29,pFile)
(30,FILENAME)
(31,dataLen)
(32,if (fgets(data+dataLen, (int)
(33,)
(34,fclose(pFile)
(35,)
(36,)
(37,pFile)
(38,data)
(39,250-dataLen)
(40,dataBuffer)
(41,dataLen)
(42,data)
(43,pFile)
(44,data)
(45,dataLen)
(46,250-dataLen > 1)
(47,dataBuffer)
(48,(int)
(49,dataLen)
(50,RET)
(51,strlen(data)
(52,250)
(53,"r")
(54,pFile)
(55,dataBuffer)
(56,250)
(57,NULL)
(58,data+dataLen)
(59,if(staticTrue)
(60,dataBuffer[250] = "PATH=")
(61,pFile != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
