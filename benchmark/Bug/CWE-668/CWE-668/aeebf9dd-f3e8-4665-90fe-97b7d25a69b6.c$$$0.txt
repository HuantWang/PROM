-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_char_44_bad()
{
    char * data;
    /* define a function pointer */
    void (*funcPtr) (char *) = badSink;
    char dataBuffer[100] = "";
    data = dataBuffer;
    {
        FILE *pFile;
        pFile = fopen("passwords.txt", "r");
        if (pFile != NULL)
        {
            /* POTENTIAL FLAW: Read the password from a file */
            if (fgets(data, 100, pFile) == NULL)
            {
                data[0] = '\0';
            }
            fclose(pFile);
        }
        else
        {
            data[0] = '\0';
        }
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
30,31
30,32
30,33
32,33
34,35
36,37
37,38
37,39
38,39
40,41
42,43
42,44
42,45
43,44
44,45
44,46
45,46
47,48
47,49
50,51
51,52
51,53
52,53
54,55
54,56
54,57
55,56
59,60
59,61
59,62
60,61
60,62
61,62
63,64
65,66
65,67
66,67
66,68
67,68
67,69
68,69
68,70
68,71
68,72
69,70
71,72
74,75
76,77
78,79
79,80
80,81
80,82
81,82
81,83
82,83
86,87
87,88
87,89
88,89
90,91
92,93
93,94
94,95
94,96
95,96
95,97
96,97
100,101
101,102
101,103
102,103
104,105
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,29,31,33,35,39,41,46,48,49,53,56,57,58,62,64,70,72,73,75,77,83,84,85,89,91,97,98,99,103,105
-----computeFrom-----
37,38
37,39
51,52
51,53
60,61
60,62
67,68
67,69
80,81
80,82
94,95
94,96
-----guardedBy-----
64,77
62,91
72,83
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_char_44_bad(){    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = badSink;    char dataBuffer[100] = "";    data = dataBuffer;    {        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgets(data, 100, pFile) == NULL)            {                data[0] = '\0';            }            fclose(pFile);        }        else        {            data[0] = '\0';        }    }    /* use the function pointer */    funcPtr(data);}
void
CWE256_Plaintext_Storage_of_Password__w32_char_44_bad()
CWE256_Plaintext_Storage_of_Password__w32_char_44_bad
{    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = badSink;    char dataBuffer[100] = "";    data = dataBuffer;    {        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgets(data, 100, pFile) == NULL)            {                data[0] = '\0';            }            fclose(pFile);        }        else        {            data[0] = '\0';        }    }    /* use the function pointer */    funcPtr(data);}
char * data;
char * data;
char
* data
*
data
void (*funcPtr) (char *) = badSink;
void (*funcPtr) (char *) = badSink;
void
(*funcPtr) (char *) = badSink
*funcPtr
*
funcPtr
char *
char
*
*

= badSink
badSink
badSink
char dataBuffer[100] = "";
char dataBuffer[100] = "";
char
dataBuffer[100] = ""
dataBuffer
[100]
100
= ""
""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgets(data, 100, pFile) == NULL)            {                data[0] = '\0';            }            fclose(pFile);        }        else        {            data[0] = '\0';        }    }
FILE *pFile;
FILE *pFile;
FILE
FILE
*pFile
*
pFile
pFile = fopen("passwords.txt", "r");
pFile = fopen("passwords.txt", "r")
pFile
pFile
fopen("passwords.txt", "r")
fopen
fopen
"passwords.txt"
"r"
if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgets(data, 100, pFile) == NULL)            {                data[0] = '\0';            }            fclose(pFile);        }        else        {            data[0] = '\0';        }
pFile != NULL
pFile
pFile
NULL
NULL
{            /* POTENTIAL FLAW: Read the password from a file */            if (fgets(data, 100, pFile) == NULL)            {                data[0] = '\0';            }            fclose(pFile);        }
if (fgets(data, 100, pFile) == NULL)            {                data[0] = '\0';            }
fgets(data, 100, pFile) == NULL
fgets(data, 100, pFile)
fgets
fgets
data
data
100
pFile
pFile
NULL
NULL
{                data[0] = '\0';            }
data[0] = '\0';
data[0] = '\0'
data[0]
data
data
0
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
{            data[0] = '\0';        }
data[0] = '\0';
data[0] = '\0'
data[0]
data
data
0
'\0'
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(3,35,0)
(6,3,0)
(30,47,0)
(26,47,0)
(0,3,0)
(9,2,0)
(14,35,0)
(30,2,0)
(3,2,0)
(4,10,0)
(40,24,0)
(15,47,0)
(43,27,0)
(10,35,0)
(22,8,0)
(33,27,0)
(11,41,0)
(17,14,0)
(31,47,0)
(1,2,0)
(5,6,0)
(36,46,0)
(20,47,0)
(35,27,0)
(34,31,0)
(28,8,0)
(48,3,0)
(23,39,0)
(24,47,0)
(37,3,0)
(2,47,0)
(16,1,0)
(18,35,0)
(8,2,0)
(27,47,0)
(13,30,0)
(3,6,0)
(14,32,0)
(45,10,0)
(7,32,0)
(1,11,0)
(19,11,0)
(21,31,0)
(42,2,0)
(39,12,0)
(46,35,0)
(8,39,0)
(35,10,0)
(44,1,0)
(29,46,0)
(25,24,0)
(2,24,0)
(31,21,1)
(11,19,1)
(45,18,1)
(6,5,1)
(39,23,1)
(30,13,1)
(13,11,1)
(23,8,1)
(28,6,1)
(9,42,1)
(6,3,1)
(29,36,1)
(8,2,1)
(37,0,1)
(1,2,1)
(5,3,1)
(35,10,1)
(18,2,1)
(25,40,1)
(14,35,1)
(0,48,1)
(46,29,1)
(36,35,1)
(22,28,1)
(3,35,1)
(3,2,1)
(2,24,1)
(17,39,1)
(4,45,1)
(48,46,1)
(8,22,1)
(3,37,1)
(24,25,1)
(16,46,1)
(10,4,1)
(21,34,1)
(19,1,1)
(13,14,1)
(30,2,1)
(2,9,1)
(14,17,1)
(17,6,1)
(44,16,1)
(40,31,1)
(1,44,1)
(42,24,1)
(46,35,1)
(38,30,1)
(22,6,2)
(1,46,2)
(0,46,2)
(6,46,2)
(8,6,2)
(35,10,2)
(28,6,2)
(17,46,2)
(19,46,2)
(3,2,2)
(3,35,2)
(1,2,2)
(46,35,2)
(30,2,2)
(37,46,2)
(6,3,2)
(11,46,2)
(16,46,2)
(14,35,2)
(23,6,2)
(3,46,2)
(2,24,2)
(48,46,2)
(5,46,2)
(14,46,2)
(39,6,2)
(44,46,2)
(8,2,2)
-----------------------------------
(0,100)
(1,data[0])
(2,data = dataBuffer)
(3,fgets(data, 100, pFile)
(4,"r")
(5,NULL)
(6,fgets(data, 100, pFile)
(7,if (fgets(data, 100, pFile)
(8,data[0])
(9,dataBuffer)
(10,fopen("passwords.txt", "r")
(11,data[0] = \\\'\\\\0\\\')
(12,)
(13,data)
(14,fclose(pFile)
(15,funcPtr)
(16,data)
(17,pFile)
(18,pFile)
(19,\\\'\\\\0\\\')
(20,dataBuffer)
(21,badSink)
(22,0)
(23,\\\'\\\\0\\\')
(24,dataBuffer[100] = "")
(25,"")
(26,data)
(27,)
(28,data)
(29,NULL)
(30,funcPtr(data)
(31,(*funcPtr)
(32,)
(33,pFile)
(34,funcPtr)
(35,pFile = fopen("passwords.txt", "r")
(36,pFile)
(37,pFile)
(38,RET)
(39,data[0] = \\\'\\\\0\\\')
(40,dataBuffer)
(41,)
(42,data)
(43,if (pFile != NULL)
(44,0)
(45,"passwords.txt")
(46,pFile != NULL)
(47,)
(48,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
