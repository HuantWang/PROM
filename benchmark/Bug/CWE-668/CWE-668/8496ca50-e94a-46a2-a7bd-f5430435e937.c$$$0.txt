-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65_bad()
{
    wchar_t * data;
    /* define a function pointer */
    void (*funcPtr) (wchar_t *) = CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65b_badSink;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    {
        FILE *pFile;
        pFile = fopen("passwords.txt", "r");
        if (pFile != NULL)
        {
            /* POTENTIAL FLAW: Read the password from a file */
            if (fgetws(data, 100, pFile) == NULL)
            {
                data[0] = L'\0';
            }
            fclose(pFile);
        }
        else
        {
            data[0] = L'\0';
        }
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
30,31
30,32
30,33
32,33
34,35
36,37
37,38
37,39
38,39
40,41
42,43
42,44
42,45
43,44
44,45
44,46
45,46
47,48
47,49
50,51
51,52
51,53
52,53
54,55
54,56
54,57
55,56
59,60
59,61
59,62
60,61
60,62
61,62
63,64
65,66
65,67
66,67
66,68
67,68
67,69
68,69
68,70
68,71
68,72
69,70
71,72
74,75
76,77
78,79
79,80
80,81
80,82
81,82
81,83
82,83
86,87
87,88
87,89
88,89
90,91
92,93
93,94
94,95
94,96
95,96
95,97
96,97
100,101
101,102
101,103
102,103
104,105
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,29,31,33,35,39,41,46,48,49,53,56,57,58,62,64,70,72,73,75,77,83,84,85,89,91,97,98,99,103,105
-----computeFrom-----
37,38
37,39
51,52
51,53
60,61
60,62
67,68
67,69
80,81
80,82
94,95
94,96
-----guardedBy-----
64,77
62,91
72,83
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65_bad(){    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65b_badSink;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }    }    /* use the function pointer */    funcPtr(data);}
void
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65_bad()
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65_bad
{    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65b_badSink;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }    }    /* use the function pointer */    funcPtr(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
void (*funcPtr) (wchar_t *) = CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65b_badSink;
void (*funcPtr) (wchar_t *) = CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65b_badSink;
void
(*funcPtr) (wchar_t *) = CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65b_badSink
*funcPtr
*
funcPtr
wchar_t *
wchar_t
*
*

= CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65b_badSink
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65b_badSink
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65b_badSink
wchar_t dataBuffer[100] = L"";
wchar_t dataBuffer[100] = L"";
wchar_t
dataBuffer[100] = L""
dataBuffer
[100]
100
= L""
L""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }    }
FILE *pFile;
FILE *pFile;
FILE
FILE
*pFile
*
pFile
pFile = fopen("passwords.txt", "r");
pFile = fopen("passwords.txt", "r")
pFile
pFile
fopen("passwords.txt", "r")
fopen
fopen
"passwords.txt"
"r"
if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }
pFile != NULL
pFile
pFile
NULL
NULL
{            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }
if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }
fgetws(data, 100, pFile) == NULL
fgetws(data, 100, pFile)
fgetws
fgetws
data
data
100
pFile
pFile
NULL
NULL
{                data[0] = L'\0';            }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
{            data[0] = L'\0';        }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(0,32,0)
(9,35,0)
(32,5,0)
(18,27,0)
(30,4,0)
(21,32,0)
(20,12,0)
(8,24,0)
(11,23,0)
(2,32,0)
(35,27,0)
(32,21,0)
(35,5,0)
(1,3,0)
(15,24,0)
(32,8,0)
(13,27,0)
(36,27,0)
(3,8,0)
(29,5,0)
(4,8,0)
(26,24,0)
(37,34,0)
(14,33,0)
(5,27,0)
(19,12,0)
(8,4,0)
(12,8,0)
(7,8,0)
(23,27,0)
(31,4,0)
(3,33,0)
(10,32,0)
(25,5,0)
(17,21,0)
(16,23,0)
(24,27,0)
(28,22,0)
(9,3,1)
(5,25,1)
(8,4,1)
(21,17,1)
(31,7,1)
(0,10,1)
(29,36,1)
(36,23,1)
(30,31,1)
(12,20,1)
(21,32,1)
(1,37,1)
(2,0,1)
(35,9,1)
(3,1,1)
(23,11,1)
(17,32,1)
(7,5,1)
(11,16,1)
(25,29,1)
(28,12,1)
(20,19,1)
(1,21,1)
(35,5,1)
(3,8,1)
(6,35,1)
(32,2,1)
(32,8,1)
(19,8,1)
(4,30,1)
(12,8,1)
(37,21,1)
(10,12,1)
(9,28,1)
(32,5,1)
(32,5,2)
(0,12,2)
(17,12,2)
(2,12,2)
(28,12,2)
(1,12,2)
(35,5,2)
(21,32,2)
(32,12,2)
(3,8,2)
(12,8,2)
(3,12,2)
(37,21,2)
(21,12,2)
(8,4,2)
(32,8,2)
(10,12,2)
-----------------------------------
(0,100)
(1,pFile)
(2,pFile)
(3,fclose(pFile)
(4,fopen("passwords.txt", "r")
(5,data = dataBuffer)
(6,RET)
(7,pFile)
(8,pFile = fopen("passwords.txt", "r")
(9,data)
(10,data)
(11,CWE256_Plaintext_Storage_of_Password__w32_wchar_t_65b_badSink)
(12,pFile != NULL)
(13,data)
(14,if (fgetws(data, 100, pFile)
(15,pFile)
(16,funcPtr)
(17,NULL)
(18,funcPtr)
(19,pFile)
(20,NULL)
(21,fgetws(data, 100, pFile)
(22,)
(23,(*funcPtr)
(24,)
(25,dataBuffer)
(26,if (pFile != NULL)
(27,)
(28,\\\'\\\\0\\\')
(29,data)
(30,"r")
(31,"passwords.txt")
(32,fgetws(data, 100, pFile)
(33,)
(34,)
(35,funcPtr(data)
(36,"")
(37,\\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
