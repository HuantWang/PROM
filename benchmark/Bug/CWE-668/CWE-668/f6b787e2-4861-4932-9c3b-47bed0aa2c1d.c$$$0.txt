-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_06_bad()
{
    char * data;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* Read input from a file */
            size_t dataLen = strlen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (250-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                    {
                        printLine("fgets() failed");
                        /* Restore NUL terminator if fgets fails */
                        data[dataLen] = '\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */
    PUTENV(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
29,30
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
50,51
50,52
53,54
53,55
54,55
54,56
55,56
55,57
57,58
60,61
60,62
61,62
62,63
62,64
63,64
65,66
65,67
65,68
66,67
68,69
71,72
71,73
72,73
72,74
73,74
75,76
77,78
77,79
78,79
78,80
79,80
79,81
80,81
80,82
80,83
80,84
81,82
83,84
83,85
84,85
86,87
88,89
88,90
89,90
89,91
92,93
93,94
93,95
95,96
97,98
99,100
101,102
101,103
102,103
103,104
103,105
104,105
107,108
108,109
108,110
109,110
109,111
110,111
112,113
115,116
116,117
116,118
117,118
119,120
121,122
122,123
122,124
123,124
125,126
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,30,31,37,39,43,45,49,51,52,56,58,59,64,67,69,70,74,76,82,85,87,90,91,94,96,98,100,105,106,111,113,114,118,120,124,126
-----computeFrom-----
22,23
22,24
28,29
28,30
54,55
54,56
55,56
55,57
62,63
62,64
72,73
72,74
79,80
79,81
83,84
83,85
93,94
93,95
108,109
108,110
-----guardedBy-----
58,113
76,100
74,120
85,111
96,113
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_06_bad(){    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_file_06_bad()
CWE427_Uncontrolled_Search_Path_Element__char_file_06_bad
{    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(STATIC_CONST_FIVE==5)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(250-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
PUTENV(data);
PUTENV(data)
PUTENV
PUTENV
data
data
-----joern-----
(12,36,0)
(55,57,0)
(59,35,0)
(23,62,0)
(32,33,0)
(53,57,0)
(42,60,0)
(0,59,0)
(25,57,0)
(3,59,0)
(2,26,0)
(57,33,0)
(7,12,0)
(10,36,0)
(57,4,0)
(24,51,0)
(47,37,0)
(14,57,0)
(18,9,0)
(45,14,0)
(30,40,0)
(36,12,0)
(14,12,0)
(12,62,0)
(36,3,0)
(3,36,0)
(29,51,0)
(8,19,0)
(31,26,0)
(63,2,0)
(38,14,0)
(58,35,0)
(48,4,0)
(13,33,0)
(20,59,0)
(46,47,0)
(44,37,0)
(51,47,0)
(21,44,0)
(11,3,0)
(60,39,0)
(14,59,0)
(17,63,0)
(54,2,0)
(56,40,0)
(36,10,0)
(35,57,0)
(6,33,0)
(59,60,0)
(28,25,0)
(16,0,0)
(19,2,0)
(41,0,0)
(0,41,0)
(18,2,0)
(61,19,0)
(51,59,0)
(35,59,0)
(25,33,0)
(4,33,0)
(43,0,0)
(1,63,0)
(49,4,0)
(34,18,0)
(5,3,0)
(12,14,0)
(62,12,0)
(52,9,0)
(27,60,0)
(22,60,0)
(15,41,0)
(2,63,0)
(51,57,0)
(12,2,0)
(12,2,1)
(58,20,1)
(18,2,1)
(1,54,1)
(19,8,1)
(36,3,1)
(12,7,1)
(51,57,1)
(18,34,1)
(34,62,1)
(44,21,1)
(20,40,1)
(61,2,1)
(34,47,1)
(28,19,1)
(57,4,1)
(28,41,1)
(0,16,1)
(30,57,1)
(41,0,1)
(23,12,1)
(63,17,1)
(14,38,1)
(54,41,1)
(25,28,1)
(29,24,1)
(35,57,1)
(50,25,1)
(12,36,1)
(16,43,1)
(5,11,1)
(3,5,1)
(56,30,1)
(35,58,1)
(4,48,1)
(43,59,1)
(36,10,1)
(51,29,1)
(28,40,1)
(14,59,1)
(17,1,1)
(57,55,1)
(59,35,1)
(28,18,1)
(3,59,1)
(41,15,1)
(51,59,1)
(24,44,1)
(0,59,1)
(48,49,1)
(12,14,1)
(38,45,1)
(21,62,1)
(2,63,1)
(25,57,1)
(47,46,1)
(8,61,1)
(62,12,1)
(7,36,1)
(53,4,1)
(40,56,1)
(45,19,1)
(46,51,1)
(62,23,1)
(11,14,1)
(55,53,1)
(15,0,1)
(19,2,1)
(14,57,1)
(14,59,2)
(62,12,2)
(54,41,2)
(63,41,2)
(59,35,2)
(16,40,2)
(19,41,2)
(18,2,2)
(12,36,2)
(57,4,2)
(47,62,2)
(14,57,2)
(62,19,2)
(8,41,2)
(17,41,2)
(2,63,2)
(43,40,2)
(2,41,2)
(35,57,2)
(7,19,2)
(46,62,2)
(51,62,2)
(21,62,2)
(36,3,2)
(1,41,2)
(34,19,2)
(51,57,2)
(0,59,2)
(3,19,2)
(44,62,2)
(15,40,2)
(23,19,2)
(59,40,2)
(41,40,2)
(41,0,2)
(45,19,2)
(51,59,2)
(18,19,2)
(3,59,2)
(12,19,2)
(12,14,2)
(20,40,2)
(0,40,2)
(38,19,2)
(14,19,2)
(36,19,2)
(29,62,2)
(61,41,2)
(24,62,2)
(58,40,2)
(19,2,2)
(5,19,2)
(25,57,2)
(36,10,2)
(12,2,2)
(35,40,2)
(11,19,2)
-----------------------------------
(0,250-dataLen)
(1,FILENAME)
(2,pFile = fopen(FILENAME, "r")
(3,250-dataLen)
(4,dataBuffer[250] = "PATH=")
(5,dataLen)
(6,data)
(7,pFile)
(8,NULL)
(9,)
(10,int)
(11,250)
(12,fgets(data+dataLen, (int)
(13,if(STATIC_CONST_FIVE==5)
(14,data+dataLen)
(15,1)
(16,dataLen)
(17,"r")
(18,fclose(pFile)
(19,pFile != NULL)
(20,dataLen)
(21,"fgets()
(22,if (250-dataLen > 1)
(23,NULL)
(24,data)
(25,PUTENV(data)
(26,)
(27,dataLen)
(28,data)
(29,dataLen)
(30,STATIC_CONST_FIVE)
(31,if (pFile != NULL)
(32,dataBuffer)
(33,)
(34,pFile)
(35,strlen(data)
(36,(int)
(37,)
(38,dataLen)
(39,)
(40,STATIC_CONST_FIVE==5)
(41,250-dataLen > 1)
(42,pFile)
(43,250)
(44,printLine("fgets()
(45,data)
(46,\\\'\\\\0\\\')
(47,data[dataLen] = \\\'\\\\0\\\')
(48,"PATH=")
(49,dataBuffer)
(50,RET)
(51,data[dataLen])
(52,if (fgets(data+dataLen, (int)
(53,data)
(54,pFile)
(55,dataBuffer)
(56,5)
(57,data = dataBuffer)
(58,data)
(59,dataLen = strlen(data)
(60,)
(61,pFile)
(62,fgets(data+dataLen, (int)
(63,fopen(FILENAME, "r")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
