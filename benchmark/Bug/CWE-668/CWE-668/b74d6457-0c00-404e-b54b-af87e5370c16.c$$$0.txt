-----label-----
1
-----code-----
static void badSink(char * data)
{
    {
        HANDLE pHandle;
        char * username = "User";
        char * domain = "Domain";
        /* POTENTIAL FLAW: Attempt to login user with password from the source */
        if (LogonUserA(
                    username,
                    domain,
                    data,
                    LOGON32_LOGON_NETWORK,
                    LOGON32_PROVIDER_DEFAULT,
                    &pHandle) != 0)
        {
            printLine("User logged in successfully.");
            CloseHandle(pHandle);
        }
        else
        {
            printLine("Unable to login.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
11,14
11,15
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
24,25
26,27
27,28
27,29
29,30
29,31
29,32
32,33
34,35
34,36
34,37
35,36
35,37
36,37
36,38
36,39
36,40
36,41
36,42
36,43
37,38
39,40
41,42
43,44
45,46
47,48
49,50
50,51
53,54
53,55
54,55
55,56
55,57
56,57
59,60
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
68,69
-----nextToken-----
2,4,6,8,9,15,17,20,22,23,25,28,30,31,33,38,40,42,44,46,48,51,52,57,58,62,64,69,70
-----computeFrom-----
35,36
35,37
-----guardedBy-----
51,64
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void badSink(char * data){    {        HANDLE pHandle;        char * username = "User";        char * domain = "Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
static void
badSink(char * data)
badSink
char * data
char
* data
*
data
{    {        HANDLE pHandle;        char * username = "User";        char * domain = "Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
{        HANDLE pHandle;        char * username = "User";        char * domain = "Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
char * username = "User";
char * username = "User";
char
* username = "User"
*
username
= "User"
"User"
char * domain = "Domain";
char * domain = "Domain";
char
* domain = "Domain"
*
domain
= "Domain"
"Domain"
if (LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }
LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0
LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle)
LogonUserA
LogonUserA
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{            printLine("User logged in successfully.");            CloseHandle(pHandle);        }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{            printLine("Unable to login.");        }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(22,23,0)
(26,24,0)
(17,7,0)
(7,2,0)
(2,14,0)
(3,23,0)
(29,25,0)
(2,7,0)
(13,3,0)
(27,2,0)
(23,15,0)
(11,24,0)
(21,23,0)
(28,2,0)
(2,3,0)
(31,23,0)
(10,2,0)
(2,20,0)
(16,23,0)
(12,11,0)
(30,26,0)
(18,3,0)
(8,2,0)
(1,6,0)
(5,14,0)
(4,2,0)
(14,2,0)
(2,25,0)
(0,25,0)
(6,19,0)
(25,23,0)
(2,7,1)
(30,14,1)
(9,11,1)
(18,13,1)
(29,0,1)
(28,4,1)
(8,10,1)
(14,5,1)
(5,2,1)
(11,12,1)
(17,28,1)
(14,2,1)
(12,26,1)
(2,25,1)
(10,3,1)
(4,27,1)
(26,30,1)
(7,17,1)
(1,14,1)
(2,20,1)
(25,29,1)
(2,3,1)
(9,6,1)
(27,8,1)
(6,1,1)
(3,18,1)
(13,25,1)
(12,14,2)
(6,14,2)
(2,3,2)
(1,14,2)
(30,14,2)
(26,14,2)
(2,25,2)
(14,2,2)
(2,20,2)
(11,14,2)
(2,7,2)
-----------------------------------
(0,username)
(1,"Unable to login.")
(2,LogonUserA(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(3,* domain = "Domain")
(4,LOGON32_LOGON_NETWORK)
(5,0)
(6,printLine("Unable to login.")
(7,&pHandle)
(8,domain)
(9,RET)
(10,username)
(11,CloseHandle(pHandle)
(12,pHandle)
(13,domain)
(14,LogonUserA(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(15,)
(16,if (LogonUserA(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(17,pHandle)
(18,"Domain")
(19,)
(20,char * data)
(21,domain)
(22,pHandle)
(23,)
(24,)
(25,* username = "User")
(26,printLine("User logged in successfully.")
(27,data)
(28,LOGON32_PROVIDER_DEFAULT)
(29,"User")
(30,"User logged in successfully.")
(31,username)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
