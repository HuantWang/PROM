-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_65_bad()
{
    char * data;
    /* define a function pointer */
    void (*funcPtr) (char *) = CWE427_Uncontrolled_Search_Path_Element__char_file_65b_badSink;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (250-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
30,31
30,32
30,33
32,33
34,35
36,37
37,38
37,39
38,39
40,41
42,43
42,44
42,45
43,44
44,45
44,46
45,46
47,48
47,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
59,60
59,61
62,63
62,64
63,64
63,65
64,65
64,66
66,67
69,70
69,71
70,71
71,72
71,73
72,73
74,75
74,76
74,77
75,76
77,78
80,81
80,82
81,82
81,83
82,83
84,85
86,87
86,88
87,88
87,89
88,89
88,90
89,90
89,91
89,92
89,93
90,91
92,93
92,94
93,94
95,96
97,98
97,99
98,99
98,100
101,102
102,103
102,104
104,105
106,107
108,109
110,111
110,112
111,112
112,113
112,114
113,114
116,117
117,118
117,119
118,119
118,120
119,120
121,122
124,125
125,126
125,127
126,127
128,129
130,131
131,132
131,133
132,133
134,135
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,29,31,33,35,39,41,46,48,52,54,58,60,61,65,67,68,73,76,78,79,83,85,91,94,96,99,100,103,105,107,109,114,115,120,122,123,127,129,133,135
-----computeFrom-----
37,38
37,39
63,64
63,65
64,65
64,66
71,72
71,73
81,82
81,83
88,89
88,90
92,93
92,94
102,103
102,104
117,118
117,119
-----guardedBy-----
67,122
85,109
83,129
94,120
105,122
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_65_bad(){    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = CWE427_Uncontrolled_Search_Path_Element__char_file_65b_badSink;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    /* use the function pointer */    funcPtr(data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_file_65_bad()
CWE427_Uncontrolled_Search_Path_Element__char_file_65_bad
{    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = CWE427_Uncontrolled_Search_Path_Element__char_file_65b_badSink;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    /* use the function pointer */    funcPtr(data);}
char * data;
char * data;
char
* data
*
data
void (*funcPtr) (char *) = CWE427_Uncontrolled_Search_Path_Element__char_file_65b_badSink;
void (*funcPtr) (char *) = CWE427_Uncontrolled_Search_Path_Element__char_file_65b_badSink;
void
(*funcPtr) (char *) = CWE427_Uncontrolled_Search_Path_Element__char_file_65b_badSink
*funcPtr
*
funcPtr
char *
char
*
*

= CWE427_Uncontrolled_Search_Path_Element__char_file_65b_badSink
CWE427_Uncontrolled_Search_Path_Element__char_file_65b_badSink
CWE427_Uncontrolled_Search_Path_Element__char_file_65b_badSink
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(250-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(41,50,0)
(1,56,0)
(17,54,0)
(10,56,0)
(12,14,0)
(49,14,0)
(31,43,0)
(47,51,0)
(44,17,0)
(53,49,0)
(37,10,0)
(9,26,0)
(54,12,0)
(4,44,0)
(54,17,0)
(43,24,0)
(2,18,0)
(40,46,0)
(42,51,0)
(6,35,0)
(39,59,0)
(20,51,0)
(23,50,0)
(62,24,0)
(10,14,0)
(39,56,0)
(46,51,0)
(15,12,0)
(36,14,0)
(17,44,0)
(25,26,0)
(11,43,0)
(19,12,0)
(14,50,0)
(12,56,0)
(3,59,0)
(27,31,0)
(5,49,0)
(6,43,0)
(28,49,0)
(56,20,0)
(45,54,0)
(24,43,0)
(26,51,0)
(18,0,0)
(21,39,0)
(12,54,0)
(33,56,0)
(43,13,0)
(60,51,0)
(14,10,0)
(59,0,0)
(17,8,0)
(49,28,0)
(30,31,0)
(54,43,0)
(29,13,0)
(16,6,0)
(52,24,0)
(57,44,0)
(50,51,0)
(7,28,0)
(61,54,0)
(8,17,0)
(46,56,0)
(56,51,0)
(44,14,0)
(58,20,0)
(55,50,0)
(39,14,0)
(38,20,0)
(48,45,0)
(22,35,0)
(34,39,0)
(54,45,0)
(40,28,1)
(39,56,1)
(11,28,1)
(12,15,1)
(18,2,1)
(54,43,1)
(6,16,1)
(12,14,1)
(44,57,1)
(31,43,1)
(14,10,1)
(32,46,1)
(5,53,1)
(12,56,1)
(10,56,1)
(33,1,1)
(17,8,1)
(62,11,1)
(52,62,1)
(39,34,1)
(46,40,1)
(48,54,1)
(2,45,1)
(15,19,1)
(16,45,1)
(3,39,1)
(61,17,1)
(31,30,1)
(46,56,1)
(6,43,1)
(56,20,1)
(44,14,1)
(53,14,1)
(54,12,1)
(38,58,1)
(36,56,1)
(54,17,1)
(24,52,1)
(27,43,1)
(54,61,1)
(21,18,1)
(26,9,1)
(43,24,1)
(7,49,1)
(37,36,1)
(49,14,1)
(28,49,1)
(59,3,1)
(49,5,1)
(58,26,1)
(16,59,1)
(20,38,1)
(57,4,1)
(39,14,1)
(40,6,1)
(10,37,1)
(56,33,1)
(9,25,1)
(45,54,1)
(30,27,1)
(4,12,1)
(19,31,1)
(34,21,1)
(40,31,1)
(17,44,1)
(28,7,1)
(45,48,1)
(1,20,1)
(31,28,2)
(31,43,2)
(27,28,2)
(39,45,2)
(61,31,2)
(3,45,2)
(54,31,2)
(10,56,2)
(19,31,2)
(28,49,2)
(44,31,2)
(12,31,2)
(6,31,2)
(12,14,2)
(30,28,2)
(21,45,2)
(15,31,2)
(43,24,2)
(17,8,2)
(34,45,2)
(12,56,2)
(44,14,2)
(59,45,2)
(39,56,2)
(62,28,2)
(6,43,2)
(57,31,2)
(2,45,2)
(48,31,2)
(52,28,2)
(39,14,2)
(24,28,2)
(54,12,2)
(16,31,2)
(46,56,2)
(18,45,2)
(17,31,2)
(49,14,2)
(54,17,2)
(11,28,2)
(17,44,2)
(14,10,2)
(45,31,2)
(45,54,2)
(43,28,2)
(56,20,2)
(4,31,2)
(54,43,2)
-----------------------------------
(0,)
(1,data)
(2,"fgets()
(3,\\\'\\\\0\\\')
(4,250)
(5,dataLen)
(6,fclose(pFile)
(7,1)
(8,int)
(9,CWE427_Uncontrolled_Search_Path_Element__char_file_65b_badSink)
(10,strlen(data)
(11,pFile)
(12,data+dataLen)
(13,)
(14,dataLen = strlen(data)
(15,dataLen)
(16,pFile)
(17,(int)
(18,printLine("fgets()
(19,data)
(20,dataBuffer[250] = "PATH=")
(21,data)
(22,if (fgets(data+dataLen, (int)
(23,pFile)
(24,fopen(FILENAME, "r")
(25,funcPtr)
(26,(*funcPtr)
(27,pFile)
(28,250-dataLen > 1)
(29,if (pFile != NULL)
(30,NULL)
(31,pFile != NULL)
(32,RET)
(33,dataBuffer)
(34,dataLen)
(35,)
(36,dataLen)
(37,data)
(38,"PATH=")
(39,data[dataLen])
(40,data)
(41,dataLen)
(42,funcPtr)
(43,pFile = fopen(FILENAME, "r")
(44,250-dataLen)
(45,fgets(data+dataLen, (int)
(46,funcPtr(data)
(47,dataBuffer)
(48,NULL)
(49,250-dataLen)
(50,)
(51,)
(52,"r")
(53,250)
(54,fgets(data+dataLen, (int)
(55,if (250-dataLen > 1)
(56,data = dataBuffer)
(57,dataLen)
(58,dataBuffer)
(59,data[dataLen] = \\\'\\\\0\\\')
(60,data)
(61,pFile)
(62,FILENAME)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
