-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_11_bad()
{
    if(globalReturnsTrue())
    {
        {
            wchar_t filename[MAX_PATH] = L"";
            int fileDesc;
            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,
            * leading to an inescapable race condition when we try to open it again. */
            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)
            {
                exit(1);
            }
            printWLine(filename);
            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
8,9
10,11
11,12
11,13
11,14
11,15
11,16
11,17
12,13
13,14
13,15
15,16
15,17
15,18
17,18
18,19
20,21
22,23
23,24
23,25
25,26
27,28
27,29
28,29
28,30
29,30
29,31
29,32
29,33
29,34
30,31
35,36
38,39
39,40
40,41
40,42
41,42
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
52,53
54,55
54,56
54,57
54,58
55,56
57,58
59,60
59,61
60,61
62,63
64,65
64,66
65,66
67,68
69,70
69,71
70,71
70,72
71,72
73,74
75,76
75,77
76,77
77,78
77,79
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,9,14,16,19,21,24,26,31,32,33,34,36,37,42,43,47,49,53,56,58,61,63,66,68,72,74,79,80,84,86
-----computeFrom-----
28,29
28,30
51,52
51,53
59,60
59,61
64,65
64,66
70,71
70,72
-----guardedBy-----
72,86
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_11_bad(){    if(globalReturnsTrue())    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
void
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_11_bad()
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_11_bad
{    if(globalReturnsTrue())    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
if(globalReturnsTrue())    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
{            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
wchar_t filename[MAX_PATH] = L"";
wchar_t filename[MAX_PATH] = L"";
wchar_t
filename[MAX_PATH] = L""
filename
[MAX_PATH]
MAX_PATH
MAX_PATH
= L""
L""
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }
GetTempFileNameW(L".", L"bad", 0, filename) == 0
GetTempFileNameW(L".", L"bad", 0, filename)
GetTempFileNameW
GetTempFileNameW
L"."
L"bad"
0
filename
filename
0
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printWLine(filename);
printWLine(filename)
printWLine
printWLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
-----joern-----
(0,30,0)
(28,11,0)
(15,25,0)
(17,7,0)
(18,10,0)
(23,9,0)
(22,4,0)
(9,19,0)
(12,15,0)
(30,12,0)
(2,15,0)
(1,29,0)
(6,19,0)
(4,31,0)
(21,20,0)
(3,20,0)
(24,13,0)
(14,13,0)
(16,14,0)
(11,15,0)
(32,14,0)
(19,9,0)
(7,11,0)
(13,11,0)
(20,13,0)
(13,20,0)
(5,15,0)
(11,13,0)
(29,15,0)
(13,14,0)
(27,15,0)
(19,11,0)
(7,31,0)
(32,16,1)
(13,14,1)
(17,4,1)
(20,3,1)
(7,17,1)
(7,11,1)
(28,29,1)
(27,8,1)
(21,24,1)
(26,19,1)
(29,1,1)
(9,23,1)
(26,8,1)
(16,20,1)
(4,22,1)
(14,32,1)
(6,11,1)
(30,0,1)
(0,27,1)
(1,30,1)
(19,11,1)
(13,20,1)
(19,9,1)
(11,13,1)
(3,21,1)
(24,28,1)
(22,19,1)
(26,7,1)
(23,6,1)
(11,8,2)
(19,8,2)
(22,19,2)
(16,8,2)
(24,8,2)
(32,8,2)
(4,19,2)
(27,8,2)
(13,20,2)
(20,8,2)
(13,8,2)
(19,9,2)
(23,8,2)
(29,8,2)
(0,8,2)
(7,11,2)
(28,8,2)
(19,11,2)
(14,8,2)
(6,8,2)
(30,8,2)
(1,8,2)
(13,14,2)
(17,19,2)
(3,8,2)
(9,8,2)
(7,19,2)
(21,8,2)
(11,13,2)
-----------------------------------
(0,1)
(1,filename)
(2,if (fileDesc != -1)
(3,O_CREAT)
(4,printLine("Temporary file was opened...now closing file")
(5,fileDesc)
(6,fileDesc)
(7,CLOSE(fileDesc)
(8,globalReturnsTrue()
(9,-1)
(10,)
(11,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(12,)
(13,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(14,S_IREAD|S_IWRITE)
(15,)
(16,S_IREAD)
(17,fileDesc)
(18,if(globalReturnsTrue()
(19,fileDesc != -1)
(20,O_RDWR|O_CREAT)
(21,O_RDWR)
(22,"Temporary file was opened...now closing file")
(23,1)
(24,filename)
(25,)
(26,RET)
(27,"")
(28,fileDesc)
(29,printWLine(filename)
(30,exit(1)
(31,)
(32,S_IWRITE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
