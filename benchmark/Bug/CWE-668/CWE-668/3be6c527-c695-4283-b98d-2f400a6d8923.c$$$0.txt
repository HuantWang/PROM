-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_char_02_bad()
{
    char * data;
    char dataBuffer[100] = "";
    data = dataBuffer;
    if(1)
    {
        {
            FILE *pFile;
            pFile = fopen("passwords.txt", "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read the password from a file */
                if (fgets(data, 100, pFile) == NULL)
                {
                    data[0] = '\0';
                }
                fclose(pFile);
            }
            else
            {
                data[0] = '\0';
            }
        }
    }
    if(1)
    {
        {
            HANDLE pHandle;
            char * username = "User";
            char * domain = "Domain";
            /* POTENTIAL FLAW: Attempt to login user with password from the source */
            if (LogonUserA(
                        username,
                        domain,
                        data,
                        LOGON32_LOGON_NETWORK,
                        LOGON32_PROVIDER_DEFAULT,
                        &pHandle) != 0)
            {
                printLine("User logged in successfully.");
                CloseHandle(pHandle);
            }
            else
            {
                printLine("Unable to login.");
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
29,30
30,31
30,32
30,33
31,32
32,33
32,34
33,34
35,36
35,37
38,39
39,40
39,41
40,41
42,43
42,44
42,45
43,44
47,48
47,49
47,50
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
55,57
56,57
56,58
56,59
56,60
57,58
59,60
62,63
64,65
66,67
67,68
68,69
68,70
69,70
69,71
70,71
74,75
75,76
75,77
76,77
78,79
80,81
81,82
82,83
82,84
83,84
83,85
84,85
88,89
88,90
90,91
91,92
91,93
91,94
91,95
92,93
93,94
93,95
94,95
96,97
98,99
99,100
99,101
101,102
101,103
101,104
104,105
106,107
107,108
107,109
109,110
109,111
109,112
112,113
114,115
114,116
114,117
115,116
115,117
116,117
116,118
116,119
116,120
116,121
116,122
116,123
117,118
119,120
121,122
123,124
125,126
127,128
129,130
130,131
133,134
133,135
134,135
135,136
135,137
136,137
139,140
140,141
140,142
141,142
143,144
145,146
146,147
147,148
147,149
148,149
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,28,34,36,37,41,44,45,46,50,52,58,60,61,63,65,71,72,73,77,79,85,86,87,89,95,97,100,102,103,105,108,110,111,113,118,120,122,124,126,128,131,132,137,138,142,144,149,150
-----computeFrom-----
22,23
22,24
39,40
39,41
48,49
48,50
55,56
55,57
68,69
68,70
82,83
82,84
115,116
115,117
-----guardedBy-----
52,65
50,79
60,71
131,144
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_char_02_bad(){    char * data;    char dataBuffer[100] = "";    data = dataBuffer;    if(1)    {        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgets(data, 100, pFile) == NULL)                {                    data[0] = '\0';                }                fclose(pFile);            }            else            {                data[0] = '\0';            }        }    }    if(1)    {        {            HANDLE pHandle;            char * username = "User";            char * domain = "Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserA(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }}
void
CWE256_Plaintext_Storage_of_Password__w32_char_02_bad()
CWE256_Plaintext_Storage_of_Password__w32_char_02_bad
{    char * data;    char dataBuffer[100] = "";    data = dataBuffer;    if(1)    {        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgets(data, 100, pFile) == NULL)                {                    data[0] = '\0';                }                fclose(pFile);            }            else            {                data[0] = '\0';            }        }    }    if(1)    {        {            HANDLE pHandle;            char * username = "User";            char * domain = "Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserA(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = "";
char dataBuffer[100] = "";
char
dataBuffer[100] = ""
dataBuffer
[100]
100
= ""
""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(1)    {        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgets(data, 100, pFile) == NULL)                {                    data[0] = '\0';                }                fclose(pFile);            }            else            {                data[0] = '\0';            }        }    }
1
{        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgets(data, 100, pFile) == NULL)                {                    data[0] = '\0';                }                fclose(pFile);            }            else            {                data[0] = '\0';            }        }    }
{            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgets(data, 100, pFile) == NULL)                {                    data[0] = '\0';                }                fclose(pFile);            }            else            {                data[0] = '\0';            }        }
FILE *pFile;
FILE *pFile;
FILE
FILE
*pFile
*
pFile
pFile = fopen("passwords.txt", "r");
pFile = fopen("passwords.txt", "r")
pFile
pFile
fopen("passwords.txt", "r")
fopen
fopen
"passwords.txt"
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgets(data, 100, pFile) == NULL)                {                    data[0] = '\0';                }                fclose(pFile);            }            else            {                data[0] = '\0';            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read the password from a file */                if (fgets(data, 100, pFile) == NULL)                {                    data[0] = '\0';                }                fclose(pFile);            }
if (fgets(data, 100, pFile) == NULL)                {                    data[0] = '\0';                }
fgets(data, 100, pFile) == NULL
fgets(data, 100, pFile)
fgets
fgets
data
data
100
pFile
pFile
NULL
NULL
{                    data[0] = '\0';                }
data[0] = '\0';
data[0] = '\0'
data[0]
data
data
0
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
{                data[0] = '\0';            }
data[0] = '\0';
data[0] = '\0'
data[0]
data
data
0
'\0'
if(1)    {        {            HANDLE pHandle;            char * username = "User";            char * domain = "Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserA(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }
1
{        {            HANDLE pHandle;            char * username = "User";            char * domain = "Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserA(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }
{            HANDLE pHandle;            char * username = "User";            char * domain = "Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserA(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
char * username = "User";
char * username = "User";
char
* username = "User"
*
username
= "User"
"User"
char * domain = "Domain";
char * domain = "Domain";
char
* domain = "Domain"
*
domain
= "Domain"
"Domain"
if (LogonUserA(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }
LogonUserA(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0
LogonUserA(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle)
LogonUserA
LogonUserA
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{                printLine("User logged in successfully.");                CloseHandle(pHandle);            }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{                printLine("Unable to login.");            }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(14,3,0)
(41,69,0)
(74,3,0)
(70,33,0)
(71,0,0)
(32,31,0)
(39,0,0)
(47,0,0)
(0,3,0)
(33,19,0)
(47,50,0)
(21,39,0)
(72,45,0)
(33,52,0)
(39,49,0)
(63,23,0)
(77,58,0)
(48,15,0)
(62,15,0)
(15,43,0)
(36,59,0)
(7,34,0)
(63,0,0)
(50,6,0)
(30,17,0)
(69,19,0)
(20,63,0)
(42,19,0)
(15,19,0)
(58,19,0)
(40,34,0)
(75,24,0)
(54,68,0)
(17,3,0)
(49,60,0)
(26,47,0)
(51,63,0)
(38,31,0)
(43,15,0)
(46,50,0)
(34,57,0)
(56,63,0)
(63,45,0)
(5,43,0)
(59,76,0)
(15,0,0)
(29,69,0)
(10,15,0)
(67,34,0)
(12,3,0)
(13,25,0)
(65,25,0)
(35,37,0)
(25,34,0)
(61,39,0)
(31,34,0)
(19,59,0)
(1,52,0)
(53,34,0)
(63,31,0)
(63,25,0)
(4,23,0)
(24,68,0)
(27,58,0)
(45,63,0)
(28,59,0)
(66,0,0)
(37,55,0)
(8,49,0)
(16,63,0)
(64,63,0)
(11,54,0)
(23,63,0)
(44,17,0)
(2,47,0)
(0,17,0)
(19,69,0)
(18,3,0)
(23,4,1)
(23,63,1)
(27,77,1)
(10,62,1)
(64,20,1)
(22,54,1)
(62,58,1)
(44,30,1)
(9,0,1)
(54,11,1)
(47,2,1)
(70,43,1)
(61,43,1)
(50,46,1)
(63,31,1)
(73,50,1)
(56,64,1)
(39,21,1)
(2,26,1)
(19,69,1)
(45,72,1)
(5,15,1)
(15,0,1)
(51,31,1)
(29,41,1)
(70,49,1)
(43,15,1)
(13,65,1)
(42,9,1)
(37,35,1)
(0,17,1)
(65,73,1)
(77,19,1)
(17,44,1)
(69,29,1)
(24,75,1)
(73,9,1)
(22,73,1)
(48,10,1)
(63,0,1)
(11,24,1)
(0,66,1)
(4,63,1)
(32,25,1)
(33,19,1)
(15,48,1)
(58,27,1)
(26,58,1)
(63,25,1)
(21,61,1)
(16,56,1)
(22,37,1)
(71,17,1)
(63,45,1)
(25,13,1)
(38,32,1)
(33,70,1)
(43,5,1)
(20,51,1)
(47,0,1)
(73,33,1)
(58,19,1)
(41,42,1)
(8,39,1)
(46,47,1)
(66,71,1)
(39,0,1)
(75,23,1)
(31,38,1)
(72,16,1)
(35,23,1)
(15,19,1)
(49,8,1)
(45,73,2)
(2,58,2)
(77,9,2)
(31,73,2)
(0,17,2)
(25,73,2)
(54,23,2)
(33,58,2)
(47,0,2)
(61,43,2)
(51,73,2)
(42,9,2)
(43,58,2)
(64,73,2)
(46,58,2)
(49,43,2)
(69,9,2)
(58,19,2)
(29,9,2)
(10,58,2)
(23,73,2)
(19,69,2)
(19,9,2)
(15,19,2)
(35,23,2)
(72,73,2)
(16,73,2)
(13,73,2)
(23,63,2)
(41,9,2)
(56,73,2)
(50,58,2)
(24,23,2)
(63,73,2)
(37,23,2)
(70,58,2)
(15,0,2)
(65,73,2)
(11,23,2)
(58,9,2)
(27,9,2)
(4,73,2)
(33,19,2)
(47,58,2)
(26,58,2)
(38,73,2)
(62,58,2)
(32,73,2)
(43,15,2)
(75,23,2)
(63,0,2)
(5,58,2)
(15,58,2)
(21,43,2)
(20,73,2)
(39,43,2)
(8,43,2)
(63,45,2)
(63,25,2)
(39,0,2)
(48,58,2)
(63,31,2)
-----------------------------------
(0,data = dataBuffer)
(1,if (fgets(data, 100, pFile)
(2,0)
(3,)
(4,0)
(5,NULL)
(6,)
(7,pHandle)
(8,\\\'\\\\0\\\')
(9,1)
(10,100)
(11,pHandle)
(12,if(1)
(13,"User")
(14,dataBuffer)
(15,fgets(data, 100, pFile)
(16,LOGON32_PROVIDER_DEFAULT)
(17,dataBuffer[100] = "")
(18,data)
(19,pFile = fopen("passwords.txt", "r")
(20,domain)
(21,0)
(22,RET)
(23,LogonUserA(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(24,printLine("User logged in successfully.")
(25,* username = "User")
(26,data)
(27,NULL)
(28,pFile)
(29,"r")
(30,dataBuffer)
(31,* domain = "Domain")
(32,domain)
(33,fclose(pFile)
(34,)
(35,"Unable to login.")
(36,if (pFile != NULL)
(37,printLine("Unable to login.")
(38,"Domain")
(39,data[0])
(40,username)
(41,"passwords.txt")
(42,pFile)
(43,fgets(data, 100, pFile)
(44,"")
(45,&pHandle)
(46,\\\'\\\\0\\\')
(47,data[0])
(48,pFile)
(49,data[0] = \\\'\\\\0\\\')
(50,data[0] = \\\'\\\\0\\\')
(51,username)
(52,)
(53,domain)
(54,CloseHandle(pHandle)
(55,)
(56,LOGON32_LOGON_NETWORK)
(57,)
(58,pFile != NULL)
(59,)
(60,)
(61,data)
(62,data)
(63,LogonUserA(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(64,data)
(65,username)
(66,dataBuffer)
(67,if (LogonUserA(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(68,)
(69,fopen("passwords.txt", "r")
(70,pFile)
(71,data)
(72,pHandle)
(73,1)
(74,if(1)
(75,"User logged in successfully.")
(76,)
(77,pFile)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
