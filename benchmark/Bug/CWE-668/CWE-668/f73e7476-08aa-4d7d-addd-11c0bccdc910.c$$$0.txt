-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__wchar_t_tmpnam_12_bad()
{
    if(globalReturnsTrueOrFalse())
    {
        {
            wchar_t * filename;
            int fileDesc;
            filename = TMPNAM(NULL);
            if (filename == NULL)
            {
                exit(1);
            }
            printWLine(filename);
            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
    }
    else
    {
        {
            wchar_t * filename;
            int fileDesc;
            filename = TMPNAM(NULL);
            if (filename == NULL)
            {
                exit(1);
            }
            printWLine(filename);
            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags
             * NOTE: This is not a perfect solution, but it is the base case scenario */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
6,9
7,8
8,9
10,11
11,12
11,13
11,14
11,15
11,16
11,17
11,18
12,13
13,14
13,15
15,16
15,17
18,19
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
28,29
30,31
32,33
32,34
33,34
33,35
34,35
36,37
38,39
39,40
40,41
40,42
41,42
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
52,53
54,55
54,56
54,57
54,58
55,56
57,58
59,60
59,61
60,61
62,63
64,65
64,66
65,66
67,68
69,70
69,71
70,71
70,72
71,72
73,74
75,76
75,77
76,77
77,78
77,79
78,79
81,82
82,83
82,84
83,84
85,86
87,88
88,89
88,90
88,91
88,92
88,93
88,94
88,95
89,90
90,91
90,92
92,93
92,94
95,96
96,97
96,98
98,99
100,101
101,102
101,103
102,103
104,105
104,106
105,106
107,108
109,110
109,111
110,111
110,112
111,112
113,114
115,116
116,117
117,118
117,119
118,119
121,122
122,123
122,124
123,124
125,126
127,128
128,129
128,130
129,130
131,132
131,133
131,134
131,135
132,133
134,135
136,137
136,138
137,138
137,139
138,139
140,141
142,143
144,145
144,146
145,146
147,148
149,150
149,151
150,151
150,152
151,152
153,154
155,156
155,157
156,157
157,158
157,159
158,159
161,162
162,163
162,164
163,164
165,166
-----nextToken-----
2,4,9,14,16,17,20,22,26,29,31,35,37,42,43,47,49,53,56,58,61,63,66,68,72,74,79,80,84,86,91,93,94,97,99,103,106,108,112,114,119,120,124,126,130,133,135,139,141,143,146,148,152,154,159,160,164,166
-----computeFrom-----
24,25
24,26
33,34
33,35
51,52
51,53
59,60
59,61
64,65
64,66
70,71
70,72
101,102
101,103
110,111
110,112
128,129
128,130
136,137
136,138
137,138
137,139
144,145
144,146
150,151
150,152
-----guardedBy-----
72,86
152,166
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE377_Insecure_Temporary_File__wchar_t_tmpnam_12_bad(){    if(globalReturnsTrueOrFalse())    {        {            wchar_t * filename;            int fileDesc;            filename = TMPNAM(NULL);            if (filename == NULL)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }    else    {        {            wchar_t * filename;            int fileDesc;            filename = TMPNAM(NULL);            if (filename == NULL)            {                exit(1);            }            printWLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags             * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
void
CWE377_Insecure_Temporary_File__wchar_t_tmpnam_12_bad()
CWE377_Insecure_Temporary_File__wchar_t_tmpnam_12_bad
{    if(globalReturnsTrueOrFalse())    {        {            wchar_t * filename;            int fileDesc;            filename = TMPNAM(NULL);            if (filename == NULL)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }    else    {        {            wchar_t * filename;            int fileDesc;            filename = TMPNAM(NULL);            if (filename == NULL)            {                exit(1);            }            printWLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags             * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
if(globalReturnsTrueOrFalse())    {        {            wchar_t * filename;            int fileDesc;            filename = TMPNAM(NULL);            if (filename == NULL)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }    else    {        {            wchar_t * filename;            int fileDesc;            filename = TMPNAM(NULL);            if (filename == NULL)            {                exit(1);            }            printWLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags             * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            wchar_t * filename;            int fileDesc;            filename = TMPNAM(NULL);            if (filename == NULL)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
{            wchar_t * filename;            int fileDesc;            filename = TMPNAM(NULL);            if (filename == NULL)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
wchar_t * filename;
wchar_t * filename;
wchar_t
* filename
*
filename
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
filename = TMPNAM(NULL);
filename = TMPNAM(NULL)
filename
filename
TMPNAM(NULL)
TMPNAM
TMPNAM
NULL
NULL
if (filename == NULL)            {                exit(1);            }
filename == NULL
filename
filename
NULL
NULL
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printWLine(filename);
printWLine(filename)
printWLine
printWLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
{        {            wchar_t * filename;            int fileDesc;            filename = TMPNAM(NULL);            if (filename == NULL)            {                exit(1);            }            printWLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags             * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
{            wchar_t * filename;            int fileDesc;            filename = TMPNAM(NULL);            if (filename == NULL)            {                exit(1);            }            printWLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags             * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
wchar_t * filename;
wchar_t * filename;
wchar_t
* filename
*
filename
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
filename = TMPNAM(NULL);
filename = TMPNAM(NULL)
filename
filename
TMPNAM(NULL)
TMPNAM
TMPNAM
NULL
NULL
if (filename == NULL)            {                exit(1);            }
filename == NULL
filename
filename
NULL
NULL
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printWLine(filename);
printWLine(filename)
printWLine
printWLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT|O_EXCL
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
O_EXCL
O_EXCL
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
-----joern-----
(72,18,0)
(44,50,0)
(2,40,0)
(14,40,0)
(56,41,0)
(59,2,0)
(62,34,0)
(18,48,0)
(70,62,0)
(57,0,0)
(27,63,0)
(51,77,0)
(65,36,0)
(22,40,0)
(30,40,0)
(55,0,0)
(73,45,0)
(31,18,0)
(36,0,0)
(28,7,0)
(37,36,0)
(40,58,0)
(69,52,0)
(42,39,0)
(75,27,0)
(45,63,0)
(29,62,0)
(32,44,0)
(36,37,0)
(34,36,0)
(42,25,0)
(49,0,0)
(54,48,0)
(27,39,0)
(52,26,0)
(2,64,0)
(5,2,0)
(4,39,0)
(78,3,0)
(34,3,0)
(25,42,0)
(34,62,0)
(13,74,0)
(17,5,0)
(48,2,0)
(47,38,0)
(38,36,0)
(12,42,0)
(24,5,0)
(3,34,0)
(48,26,0)
(66,8,0)
(64,2,0)
(77,6,0)
(23,0,0)
(7,1,0)
(34,1,0)
(67,74,0)
(43,26,0)
(79,67,0)
(0,15,0)
(74,67,0)
(11,2,0)
(16,23,0)
(26,48,0)
(68,40,0)
(39,40,0)
(1,0,0)
(1,34,0)
(7,50,0)
(26,52,0)
(61,52,0)
(48,39,0)
(53,3,0)
(39,48,0)
(21,11,0)
(67,1,0)
(71,38,0)
(19,37,0)
(9,25,0)
(35,66,0)
(11,40,0)
(33,34,0)
(76,1,0)
(60,64,0)
(48,18,0)
(23,36,0)
(20,0,0)
(66,35,1)
(11,21,1)
(67,1,1)
(34,3,1)
(37,19,1)
(11,2,1)
(26,52,1)
(28,44,1)
(12,39,1)
(13,79,1)
(44,32,1)
(79,1,1)
(54,4,1)
(29,33,1)
(34,36,1)
(67,74,1)
(23,16,1)
(17,2,1)
(71,36,1)
(21,5,1)
(16,38,1)
(27,39,1)
(2,64,1)
(18,31,1)
(78,53,1)
(48,2,1)
(70,29,1)
(42,39,1)
(48,18,1)
(60,59,1)
(76,23,1)
(19,65,1)
(46,27,1)
(16,66,1)
(64,60,1)
(61,43,1)
(74,13,1)
(46,67,1)
(45,73,1)
(43,54,1)
(32,67,1)
(52,69,1)
(38,36,1)
(59,10,1)
(36,37,1)
(33,76,1)
(65,10,1)
(62,70,1)
(38,47,1)
(53,62,1)
(34,62,1)
(5,24,1)
(3,78,1)
(35,38,1)
(39,48,1)
(27,75,1)
(72,26,1)
(21,77,1)
(47,71,1)
(4,11,1)
(9,12,1)
(25,9,1)
(46,42,1)
(24,17,1)
(7,28,1)
(77,51,1)
(46,7,1)
(23,36,1)
(75,45,1)
(42,25,1)
(73,42,1)
(31,72,1)
(5,2,1)
(51,5,1)
(7,1,1)
(48,26,1)
(69,61,1)
(1,34,1)
(42,39,2)
(36,10,2)
(34,3,2)
(53,10,2)
(1,34,2)
(4,10,2)
(48,2,2)
(24,10,2)
(7,1,2)
(75,42,2)
(64,10,2)
(27,39,2)
(38,10,2)
(17,10,2)
(48,10,2)
(23,10,2)
(65,10,2)
(66,38,2)
(35,38,2)
(59,10,2)
(62,10,2)
(2,64,2)
(69,10,2)
(45,42,2)
(70,10,2)
(44,67,2)
(74,10,2)
(9,10,2)
(71,10,2)
(26,52,2)
(16,10,2)
(54,10,2)
(34,36,2)
(77,5,2)
(39,10,2)
(67,1,2)
(12,10,2)
(5,10,2)
(3,10,2)
(39,48,2)
(42,25,2)
(21,10,2)
(72,10,2)
(42,10,2)
(11,2,2)
(52,10,2)
(37,10,2)
(28,67,2)
(48,18,2)
(26,10,2)
(34,62,2)
(38,36,2)
(25,10,2)
(33,10,2)
(18,10,2)
(36,37,2)
(1,10,2)
(27,42,2)
(61,10,2)
(67,74,2)
(73,42,2)
(79,10,2)
(19,10,2)
(78,10,2)
(2,10,2)
(60,10,2)
(29,10,2)
(51,5,2)
(7,67,2)
(47,10,2)
(76,10,2)
(34,10,2)
(32,67,2)
(43,10,2)
(11,10,2)
(5,2,2)
(67,10,2)
(31,10,2)
(13,10,2)
(48,26,2)
(23,36,2)
-----------------------------------
(0,)
(1,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(2,filename = TMPNAM(NULL)
(3,S_IREAD|S_IWRITE)
(4,fileDesc)
(5,filename == NULL)
(6,)
(7,CLOSE(fileDesc)
(8,)
(9,1)
(10,globalReturnsTrueOrFalse()
(11,printWLine(filename)
(12,fileDesc)
(13,1)
(14,if (filename == NULL)
(15,)
(16,filename)
(17,filename)
(18,S_IREAD|S_IWRITE)
(19,NULL)
(20,fileDesc)
(21,filename)
(22,filename)
(23,printWLine(filename)
(24,NULL)
(25,-1)
(26,O_RDWR|O_CREAT|O_EXCL)
(27,CLOSE(fileDesc)
(28,fileDesc)
(29,O_RDWR)
(30,fileDesc)
(31,S_IWRITE)
(32,"Temporary file was opened...now closing file")
(33,filename)
(34,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(35,1)
(36,filename = TMPNAM(NULL)
(37,TMPNAM(NULL)
(38,filename == NULL)
(39,fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE)
(40,)
(41,)
(42,fileDesc != -1)
(43,O_RDWR)
(44,printLine("Temporary file was opened...now closing file")
(45,printLine("Temporary file was opened...now closing file")
(46,RET)
(47,NULL)
(48,OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE)
(49,if (filename == NULL)
(50,)
(51,1)
(52,O_CREAT|O_EXCL)
(53,S_IREAD)
(54,filename)
(55,filename)
(56,if(globalReturnsTrueOrFalse()
(57,if (fileDesc != -1)
(58,)
(59,filename)
(60,NULL)
(61,O_CREAT)
(62,O_RDWR|O_CREAT)
(63,)
(64,TMPNAM(NULL)
(65,filename)
(66,exit(1)
(67,fileDesc != -1)
(68,if (fileDesc != -1)
(69,O_EXCL)
(70,O_CREAT)
(71,filename)
(72,S_IREAD)
(73,"Temporary file was opened...now closing file")
(74,-1)
(75,fileDesc)
(76,fileDesc)
(77,exit(1)
(78,S_IWRITE)
(79,fileDesc)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
