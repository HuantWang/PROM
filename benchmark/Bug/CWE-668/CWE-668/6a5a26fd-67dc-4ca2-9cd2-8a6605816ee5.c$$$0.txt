-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__char_w32GetTempFileName_16_bad()
{
    while(1)
    {
        {
            char filename[MAX_PATH] = "";
            int fileDesc;
            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,
            * leading to an inescapable race condition when we try to open it again. */
            if (GetTempFileNameA(".", "bad", 0, filename) == 0)
            {
                exit(1);
            }
            printLine(filename);
            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
8,9
8,10
9,10
9,11
9,12
9,13
9,14
9,15
10,11
11,12
11,13
13,14
13,15
13,16
15,16
16,17
18,19
20,21
21,22
21,23
23,24
25,26
25,27
26,27
26,28
27,28
27,29
27,30
27,31
27,32
28,29
33,34
36,37
37,38
38,39
38,40
39,40
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
52,53
52,54
52,55
52,56
53,54
55,56
57,58
57,59
58,59
60,61
62,63
62,64
63,64
65,66
67,68
67,69
68,69
68,70
69,70
71,72
73,74
73,75
74,75
75,76
75,77
76,77
79,80
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,7,12,14,17,19,22,24,29,30,31,32,34,35,40,41,45,47,51,54,56,59,61,64,66,70,72,77,78,82,84,85
-----computeFrom-----
26,27
26,28
49,50
49,51
57,58
57,59
62,63
62,64
68,69
68,70
-----guardedBy-----
70,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE377_Insecure_Temporary_File__char_w32GetTempFileName_16_bad(){    while(1)    {        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }        break;    }}
void
CWE377_Insecure_Temporary_File__char_w32GetTempFileName_16_bad()
CWE377_Insecure_Temporary_File__char_w32GetTempFileName_16_bad
{    while(1)    {        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }        break;    }}
while(1)    {        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }        break;    }
1
{        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }        break;    }
{            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
char filename[MAX_PATH] = "";
char filename[MAX_PATH] = "";
char
filename[MAX_PATH] = ""
filename
[MAX_PATH]
MAX_PATH
MAX_PATH
= ""
""
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }
GetTempFileNameA(".", "bad", 0, filename) == 0
GetTempFileNameA(".", "bad", 0, filename)
GetTempFileNameA
GetTempFileNameA
"."
"bad"
0
filename
filename
0
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printLine(filename);
printLine(filename)
printLine
printLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
break;
-----joern-----
(1,40,0)
(11,1,0)
(23,1,0)
(25,31,0)
(2,0,0)
(21,30,0)
(24,34,0)
(14,23,0)
(39,42,0)
(40,1,0)
(17,0,0)
(37,6,0)
(40,29,0)
(1,24,0)
(40,42,0)
(16,24,0)
(5,35,0)
(33,5,0)
(27,26,0)
(38,24,0)
(8,42,0)
(15,34,0)
(10,21,0)
(42,40,0)
(32,0,0)
(12,40,0)
(36,0,0)
(43,41,0)
(4,24,0)
(7,23,0)
(9,29,0)
(41,31,0)
(21,24,0)
(23,7,0)
(3,25,0)
(30,24,0)
(25,1,0)
(18,29,0)
(44,30,0)
(29,40,0)
(20,24,0)
(6,0,0)
(28,7,0)
(22,30,0)
(0,6,0)
(40,30,0)
(0,30,0)
(28,14,1)
(6,37,1)
(29,9,1)
(37,0,1)
(2,32,1)
(22,44,1)
(0,36,1)
(40,29,1)
(33,6,1)
(6,0,1)
(3,41,1)
(32,30,1)
(41,43,1)
(40,30,1)
(15,23,1)
(8,39,1)
(25,1,1)
(36,17,1)
(5,33,1)
(25,3,1)
(18,12,1)
(21,10,1)
(15,25,1)
(0,30,1)
(44,19,1)
(39,29,1)
(43,23,1)
(13,15,1)
(23,7,1)
(17,2,1)
(10,6,1)
(12,11,1)
(42,8,1)
(21,30,1)
(1,40,1)
(40,42,1)
(30,22,1)
(14,1,1)
(13,19,1)
(23,1,1)
(9,18,1)
(10,5,1)
(11,21,1)
(7,28,1)
(8,19,2)
(21,30,2)
(23,7,2)
(25,1,2)
(7,19,2)
(9,19,2)
(36,19,2)
(42,19,2)
(11,19,2)
(30,19,2)
(14,19,2)
(21,19,2)
(29,19,2)
(43,23,2)
(1,40,2)
(2,19,2)
(23,1,2)
(41,23,2)
(6,19,2)
(25,23,2)
(18,19,2)
(40,19,2)
(15,19,2)
(40,29,2)
(33,6,2)
(37,19,2)
(17,19,2)
(39,19,2)
(28,19,2)
(10,19,2)
(3,23,2)
(40,30,2)
(6,0,2)
(23,19,2)
(40,42,2)
(22,19,2)
(5,6,2)
(0,30,2)
(32,19,2)
(12,19,2)
(44,19,2)
(1,19,2)
(0,19,2)
-----------------------------------
(0,GetTempFileNameA(".", "bad", 0, filename)
(1,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(2,"bad")
(3,fileDesc)
(4,filename)
(5,exit(1)
(6,GetTempFileNameA(".", "bad", 0, filename)
(7,-1)
(8,S_IWRITE)
(9,O_CREAT)
(10,filename)
(11,fileDesc)
(12,filename)
(13,RET)
(14,fileDesc)
(15,break;)
(16,if (GetTempFileNameA(".", "bad", 0, filename)
(17,0)
(18,O_RDWR)
(19,1)
(20,fileDesc)
(21,printLine(filename)
(22,"")
(23,fileDesc != -1)
(24,)
(25,CLOSE(fileDesc)
(26,)
(27,while(1)
(28,1)
(29,O_RDWR|O_CREAT)
(30,filename[MAX_PATH] = "")
(31,)
(32,".")
(33,1)
(34,)
(35,)
(36,filename)
(37,0)
(38,if (fileDesc != -1)
(39,S_IREAD)
(40,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(41,printLine("Temporary file was opened...now closing file")
(42,S_IREAD|S_IWRITE)
(43,"Temporary file was opened...now closing file")
(44,filename)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
