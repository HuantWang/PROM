-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_31_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    {
        FILE *pFile;
        pFile = fopen("passwords.txt", "r");
        if (pFile != NULL)
        {
            /* POTENTIAL FLAW: Read the password from a file */
            if (fgetws(data, 100, pFile) == NULL)
            {
                data[0] = L'\0';
            }
            fclose(pFile);
        }
        else
        {
            data[0] = L'\0';
        }
    }
    {
        wchar_t * dataCopy = data;
        wchar_t * data = dataCopy;
        {
            HANDLE pHandle;
            wchar_t * username = L"User";
            wchar_t * domain = L"Domain";
            /* POTENTIAL FLAW: Attempt to login user with password from the source */
            if (LogonUserW(
                        username,
                        domain,
                        data,
                        LOGON32_LOGON_NETWORK,
                        LOGON32_PROVIDER_DEFAULT,
                        &pHandle) != 0)
            {
                printLine("User logged in successfully.");
                CloseHandle(pHandle);
            }
            else
            {
                printLine("Unable to login.");
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
28,29
29,30
29,31
30,31
32,33
32,34
35,36
36,37
36,38
37,38
39,40
39,41
39,42
40,41
44,45
44,46
44,47
45,46
45,47
46,47
48,49
50,51
50,52
51,52
51,53
52,53
52,54
53,54
53,55
53,56
53,57
54,55
56,57
59,60
61,62
63,64
64,65
65,66
65,67
66,67
66,68
67,68
71,72
72,73
72,74
73,74
75,76
77,78
78,79
79,80
79,81
80,81
80,82
81,82
85,86
85,87
85,88
86,87
87,88
87,89
89,90
89,91
89,92
92,93
93,94
95,96
96,97
96,98
98,99
98,100
98,101
101,102
102,103
104,105
104,106
104,107
104,108
105,106
106,107
106,108
107,108
109,110
111,112
112,113
112,114
114,115
114,116
114,117
117,118
119,120
120,121
120,122
122,123
122,124
122,125
125,126
127,128
127,129
127,130
128,129
128,130
129,130
129,131
129,132
129,133
129,134
129,135
129,136
130,131
132,133
134,135
136,137
138,139
140,141
142,143
143,144
146,147
146,148
147,148
148,149
148,150
149,150
152,153
153,154
153,155
154,155
156,157
158,159
159,160
160,161
160,162
161,162
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,31,33,34,38,41,42,43,47,49,55,57,58,60,62,68,69,70,74,76,82,83,84,88,90,91,94,97,99,100,103,108,110,113,115,116,118,121,123,124,126,131,133,135,137,139,141,144,145,150,151,155,157,162,163
-----computeFrom-----
22,23
22,24
36,37
36,38
45,46
45,47
52,53
52,54
65,66
65,67
79,80
79,81
128,129
128,130
-----guardedBy-----
49,62
47,76
57,68
144,157
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_31_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }    }    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }}
void
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_31_bad()
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_31_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }    }    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = L"";
wchar_t dataBuffer[100] = L"";
wchar_t
dataBuffer[100] = L""
dataBuffer
[100]
100
= L""
L""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }    }
FILE *pFile;
FILE *pFile;
FILE
FILE
*pFile
*
pFile
pFile = fopen("passwords.txt", "r");
pFile = fopen("passwords.txt", "r")
pFile
pFile
fopen("passwords.txt", "r")
fopen
fopen
"passwords.txt"
"r"
if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }
pFile != NULL
pFile
pFile
NULL
NULL
{            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }
if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }
fgetws(data, 100, pFile) == NULL
fgetws(data, 100, pFile)
fgetws
fgetws
data
data
100
pFile
pFile
NULL
NULL
{                data[0] = L'\0';            }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
{            data[0] = L'\0';        }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
{        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }
wchar_t * dataCopy = data;
wchar_t * dataCopy = data;
wchar_t
* dataCopy = data
*
dataCopy
= data
data
data
wchar_t * data = dataCopy;
wchar_t * data = dataCopy;
wchar_t
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
{            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
wchar_t * username = L"User";
wchar_t * username = L"User";
wchar_t
* username = L"User"
*
username
= L"User"
L"User"
wchar_t * domain = L"Domain";
wchar_t * domain = L"Domain";
wchar_t
* domain = L"Domain"
*
domain
= L"Domain"
L"Domain"
if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }
LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0
LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle)
LogonUserW
LogonUserW
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{                printLine("User logged in successfully.");                CloseHandle(pHandle);            }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{                printLine("Unable to login.");            }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(39,18,0)
(24,0,0)
(39,28,0)
(5,24,0)
(61,0,0)
(33,61,0)
(23,54,0)
(27,35,0)
(59,7,0)
(53,45,0)
(57,38,0)
(29,39,0)
(47,1,0)
(44,15,0)
(7,24,0)
(17,25,0)
(8,48,0)
(32,43,0)
(37,39,0)
(1,38,0)
(55,24,0)
(15,6,0)
(9,22,0)
(46,48,0)
(48,61,0)
(20,16,0)
(3,7,0)
(18,39,0)
(7,38,0)
(50,5,0)
(19,0,0)
(13,0,0)
(28,39,0)
(4,12,0)
(51,24,0)
(12,6,0)
(36,5,0)
(62,39,0)
(39,22,0)
(34,38,0)
(11,61,0)
(45,7,0)
(56,22,0)
(22,5,0)
(26,48,0)
(40,39,0)
(63,7,0)
(49,34,0)
(35,38,0)
(38,35,0)
(5,61,0)
(25,2,0)
(10,60,0)
(52,39,0)
(21,35,0)
(7,45,0)
(54,0,0)
(38,54,0)
(14,28,0)
(41,54,0)
(22,61,0)
(42,18,0)
(30,48,0)
(1,43,0)
(31,34,0)
(31,38,1)
(57,24,1)
(27,57,1)
(24,51,1)
(40,29,1)
(39,22,1)
(47,45,1)
(1,47,1)
(1,38,1)
(22,56,1)
(45,7,1)
(49,31,1)
(50,36,1)
(14,40,1)
(56,9,1)
(29,62,1)
(36,10,1)
(35,21,1)
(37,30,1)
(52,37,1)
(51,55,1)
(3,59,1)
(22,5,1)
(9,5,1)
(7,24,1)
(58,15,1)
(59,63,1)
(47,20,1)
(34,49,1)
(38,35,1)
(46,22,1)
(39,28,1)
(18,42,1)
(18,39,1)
(36,1,1)
(34,38,1)
(44,12,1)
(25,17,1)
(28,14,1)
(42,39,1)
(63,34,1)
(45,53,1)
(58,25,1)
(20,45,1)
(53,7,1)
(7,38,1)
(12,4,1)
(62,52,1)
(4,18,1)
(17,18,1)
(55,19,1)
(21,27,1)
(7,3,1)
(30,46,1)
(5,24,1)
(5,50,1)
(10,34,1)
(15,44,1)
(5,24,2)
(22,5,2)
(1,34,2)
(25,18,2)
(4,18,2)
(1,38,2)
(45,34,2)
(7,38,2)
(10,34,2)
(20,45,2)
(39,22,2)
(7,24,2)
(3,34,2)
(17,18,2)
(47,34,2)
(15,18,2)
(39,28,2)
(38,35,2)
(44,18,2)
(34,38,2)
(63,34,2)
(53,34,2)
(45,7,2)
(7,34,2)
(59,34,2)
(12,18,2)
(18,39,2)
-----------------------------------
(0,)
(1,fclose(pFile)
(2,)
(3,pFile)
(4,"User logged in successfully.")
(5,* dataCopy = data)
(6,)
(7,fgetws(data, 100, pFile)
(8,if (LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(9,data)
(10,\\\'\\\\0\\\')
(11,dataCopy)
(12,printLine("User logged in successfully.")
(13,data)
(14,pHandle)
(15,CloseHandle(pHandle)
(16,)
(17,"Unable to login.")
(18,LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(19,"")
(20,\\\'\\\\0\\\')
(21,"r")
(22,* data = dataCopy)
(23,pFile)
(24,data = dataBuffer)
(25,printLine("Unable to login.")
(26,pHandle)
(27,"passwords.txt")
(28,&pHandle)
(29,LOGON32_LOGON_NETWORK)
(30,"Domain")
(31,pFile)
(32,if (fgetws(data, 100, pFile)
(33,data)
(34,pFile != NULL)
(35,fopen("passwords.txt", "r")
(36,dataCopy)
(37,username)
(38,pFile = fopen("passwords.txt", "r")
(39,LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(40,LOGON32_PROVIDER_DEFAULT)
(41,if (pFile != NULL)
(42,0)
(43,)
(44,pHandle)
(45,fgetws(data, 100, pFile)
(46,"User")
(47,pFile)
(48,)
(49,NULL)
(50,data)
(51,dataBuffer)
(52,domain)
(53,NULL)
(54,)
(55,data)
(56,dataCopy)
(57,pFile)
(58,RET)
(59,100)
(60,)
(61,)
(62,data)
(63,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
