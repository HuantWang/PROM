-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_console_52_bad()
{
    char * data;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    {
        /* Read input from the console */
        size_t dataLen = strlen(data);
        /* if there is room in data, read into it from the console */
        if (250-dataLen > 1)
        {
            /* POTENTIAL FLAW: Read data from the console */
            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)
            {
                /* The next few lines remove the carriage return from the string that is
                 * inserted by fgets() */
                dataLen = strlen(data);
                if (dataLen > 0 && data[dataLen-1] == '\n')
                {
                    data[dataLen-1] = '\0';
                }
            }
            else
            {
                printLine("fgets() failed");
                /* Restore NUL terminator if fgets fails */
                data[dataLen] = '\0';
            }
        }
    }
    CWE427_Uncontrolled_Search_Path_Element__char_console_52b_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
38,39
40,41
40,42
41,42
41,43
42,43
42,44
44,45
47,48
48,49
48,50
48,51
49,50
49,51
50,51
50,52
50,53
50,54
51,52
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
62,63
63,64
63,65
65,66
67,68
69,70
71,72
71,73
72,73
73,74
73,75
74,75
76,77
76,78
77,78
79,80
81,82
81,83
82,83
82,84
83,84
83,85
84,85
87,88
87,89
88,89
88,90
89,90
91,92
91,93
92,93
96,97
97,98
98,99
98,100
99,100
99,101
100,101
102,103
102,104
103,104
107,108
107,109
108,109
109,110
109,111
110,111
113,114
114,115
114,116
115,116
115,117
116,117
118,119
121,122
122,123
122,124
123,124
125,126
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,31,33,37,39,43,45,46,52,55,57,60,61,64,66,68,70,75,78,80,85,86,90,93,94,95,101,104,105,106,111,112,117,119,120,124,126
-----computeFrom-----
22,23
22,24
41,42
41,43
42,43
42,44
49,50
49,51
53,54
53,55
63,64
63,65
73,74
73,75
82,83
82,84
83,84
83,85
87,88
87,89
91,92
91,93
98,99
98,100
102,103
102,104
114,115
114,116
-----guardedBy-----
45,119
55,101
66,104
90,101
93,104
-----guardedByNegation-----
55,117
66,119
-----lastLexicalUse-----
55,117
66,119
-----jump-----
55,117
66,119
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_console_52_bad(){    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }    CWE427_Uncontrolled_Search_Path_Element__char_console_52b_badSink(data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_console_52_bad()
CWE427_Uncontrolled_Search_Path_Element__char_console_52_bad
{    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }    CWE427_Uncontrolled_Search_Path_Element__char_console_52b_badSink(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }
if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }
fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL
fgets(data+dataLen, (int)(250-dataLen), stdin)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
stdin
stdin
NULL
NULL
{                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }
dataLen = strlen(data);
dataLen = strlen(data)
dataLen
dataLen
strlen(data)
strlen
strlen
data
data
if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }
dataLen > 0 && data[dataLen-1] == '\n'
dataLen > 0
dataLen
dataLen
0
data[dataLen-1] == '\n'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\n'
{                    data[dataLen-1] = '\0';                }
data[dataLen-1] = '\0';
data[dataLen-1] = '\0'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\0'
{                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
CWE427_Uncontrolled_Search_Path_Element__char_console_52b_badSink(data);
CWE427_Uncontrolled_Search_Path_Element__char_console_52b_badSink(data)
CWE427_Uncontrolled_Search_Path_Element__char_console_52b_badSink
CWE427_Uncontrolled_Search_Path_Element__char_console_52b_badSink
data
data
-----joern-----
(68,53,0)
(21,50,0)
(10,32,0)
(55,70,0)
(44,29,0)
(28,44,0)
(3,55,0)
(1,10,0)
(47,16,0)
(40,15,0)
(6,23,0)
(0,35,0)
(50,32,0)
(56,15,0)
(3,38,0)
(23,40,0)
(65,52,0)
(63,66,0)
(39,43,0)
(16,43,0)
(49,42,0)
(23,15,0)
(18,68,0)
(58,3,0)
(52,29,0)
(69,42,0)
(36,10,0)
(30,44,0)
(12,49,0)
(10,38,0)
(51,70,0)
(33,40,0)
(37,29,0)
(32,10,0)
(40,25,0)
(50,35,0)
(49,12,0)
(49,68,0)
(55,40,0)
(67,9,0)
(64,40,0)
(41,64,0)
(52,68,0)
(8,19,0)
(59,57,0)
(34,37,0)
(61,39,0)
(31,25,0)
(11,25,0)
(9,40,0)
(64,38,0)
(9,29,0)
(32,50,0)
(52,40,0)
(42,29,0)
(60,14,0)
(68,49,0)
(29,66,0)
(7,29,0)
(14,38,0)
(24,66,0)
(35,40,0)
(9,39,0)
(68,52,0)
(54,52,0)
(5,55,0)
(70,62,0)
(38,64,0)
(48,38,0)
(35,50,0)
(57,44,0)
(25,15,0)
(4,40,0)
(13,53,0)
(45,15,0)
(66,15,0)
(38,19,0)
(35,14,0)
(42,49,0)
(17,14,0)
(44,57,0)
(14,35,0)
(46,42,0)
(29,37,0)
(53,68,0)
(20,3,0)
(37,40,0)
(55,3,0)
(22,9,0)
(2,26,0)
(37,34,1)
(64,41,1)
(31,11,1)
(44,29,1)
(55,40,1)
(52,65,1)
(49,12,1)
(17,0,1)
(22,67,1)
(53,68,1)
(1,38,1)
(41,48,1)
(30,28,1)
(60,17,1)
(25,31,1)
(37,40,1)
(10,38,1)
(20,58,1)
(9,29,1)
(35,40,1)
(33,4,1)
(23,6,1)
(65,54,1)
(67,16,1)
(54,57,1)
(38,64,1)
(14,38,1)
(64,40,1)
(70,51,1)
(32,50,1)
(46,52,1)
(55,3,1)
(52,29,1)
(18,49,1)
(40,33,1)
(48,53,1)
(68,49,1)
(58,5,1)
(16,47,1)
(7,40,1)
(40,25,1)
(3,20,1)
(23,40,1)
(50,35,1)
(51,55,1)
(5,32,1)
(49,42,1)
(68,18,1)
(44,30,1)
(3,38,1)
(34,7,1)
(4,25,1)
(42,29,1)
(53,13,1)
(61,9,1)
(52,40,1)
(6,32,1)
(10,36,1)
(6,70,1)
(14,60,1)
(50,21,1)
(36,1,1)
(42,69,1)
(28,29,1)
(47,53,1)
(57,44,1)
(21,35,1)
(39,61,1)
(35,14,1)
(27,23,1)
(6,39,1)
(68,52,1)
(69,46,1)
(32,10,1)
(13,68,1)
(9,22,1)
(0,10,1)
(9,40,1)
(6,57,1)
(29,37,1)
(57,59,1)
(59,44,1)
(13,57,2)
(68,52,2)
(69,57,2)
(20,32,2)
(55,3,2)
(48,53,2)
(68,57,2)
(47,53,2)
(10,38,2)
(18,57,2)
(9,40,2)
(53,57,2)
(49,42,2)
(16,53,2)
(38,64,2)
(35,40,2)
(68,49,2)
(64,40,2)
(9,53,2)
(39,53,2)
(70,32,2)
(55,40,2)
(57,44,2)
(54,57,2)
(21,10,2)
(14,10,2)
(32,50,2)
(46,57,2)
(22,53,2)
(67,53,2)
(65,57,2)
(50,35,2)
(55,32,2)
(32,53,2)
(51,32,2)
(17,10,2)
(49,12,2)
(52,29,2)
(36,53,2)
(10,53,2)
(41,53,2)
(23,40,2)
(53,68,2)
(29,37,2)
(50,10,2)
(3,38,2)
(14,38,2)
(35,14,2)
(61,53,2)
(0,10,2)
(3,32,2)
(52,40,2)
(64,53,2)
(1,53,2)
(9,29,2)
(35,10,2)
(44,29,2)
(52,57,2)
(38,53,2)
(42,57,2)
(32,10,2)
(37,40,2)
(49,57,2)
(58,32,2)
(42,29,2)
(5,32,2)
(40,25,2)
(60,10,2)
-----------------------------------
(0,data)
(1,dataLen)
(2,if (fgets(data+dataLen, (int)
(3,dataLen-1)
(4,data)
(5,data)
(6,data)
(7,dataLen)
(8,if (dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(9,data[dataLen])
(10,dataLen > 0)
(11,dataBuffer)
(12,int)
(13,NULL)
(14,dataLen-1)
(15,)
(16,printLine("fgets()
(17,dataLen)
(18,stdin)
(19,)
(20,1)
(21,\\\'\\\\n\\\')
(22,dataLen)
(23,CWE427_Uncontrolled_Search_Path_Element__char_console_52b_badSink(data)
(24,if (250-dataLen > 1)
(25,dataBuffer[250] = "PATH=")
(26,)
(27,RET)
(28,250)
(29,dataLen = strlen(data)
(30,dataLen)
(31,"PATH=")
(32,dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(33,dataBuffer)
(34,data)
(35,data[dataLen-1])
(36,0)
(37,strlen(data)
(38,dataLen = strlen(data)
(39,data[dataLen] = \\\'\\\\0\\\')
(40,data = dataBuffer)
(41,data)
(42,250-dataLen)
(43,)
(44,250-dataLen)
(45,data)
(46,250)
(47,"fgets()
(48,dataLen)
(49,(int)
(50,data[dataLen-1] == \\\'\\\\n\\\')
(51,\\\'\\\\0\\\')
(52,data+dataLen)
(53,fgets(data+dataLen, (int)
(54,data)
(55,data[dataLen-1])
(56,dataBuffer)
(57,250-dataLen > 1)
(58,dataLen)
(59,1)
(60,1)
(61,\\\'\\\\0\\\')
(62,)
(63,dataLen)
(64,strlen(data)
(65,dataLen)
(66,)
(67,data)
(68,fgets(data+dataLen, (int)
(69,dataLen)
(70,data[dataLen-1] = \\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
