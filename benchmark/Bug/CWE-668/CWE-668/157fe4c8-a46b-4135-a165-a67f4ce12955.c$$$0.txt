-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67b_badSink(CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType myStruct)
{
    wchar_t * data = myStruct.structFirst;
    {
        HANDLE pHandle;
        wchar_t * username = L"User";
        wchar_t * domain = L"Domain";
        /* POTENTIAL FLAW: Attempt to login user with password from the source */
        if (LogonUserW(
                    username,
                    domain,
                    data,
                    LOGON32_LOGON_NETWORK,
                    LOGON32_PROVIDER_DEFAULT,
                    &pHandle) != 0)
        {
            printLine("User logged in successfully.");
            CloseHandle(pHandle);
        }
        else
        {
            printLine("Unable to login.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
22,23
22,24
22,25
22,26
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
32,33
32,34
32,35
35,36
37,38
38,39
38,40
40,41
40,42
40,43
43,44
45,46
45,47
45,48
46,47
46,48
47,48
47,49
47,50
47,51
47,52
47,53
47,54
48,49
50,51
52,53
54,55
56,57
58,59
60,61
61,62
64,65
64,66
65,66
66,67
66,68
67,68
70,71
71,72
71,73
72,73
74,75
76,77
77,78
78,79
78,80
79,80
-----nextToken-----
2,4,7,9,13,15,16,20,21,26,28,31,33,34,36,39,41,42,44,49,51,53,55,57,59,62,63,68,69,73,75,80,81
-----computeFrom-----
46,47
46,48
-----guardedBy-----
62,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67b_badSink(CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType myStruct){    wchar_t * data = myStruct.structFirst;    {        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
void
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67b_badSink(CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType myStruct)
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67b_badSink
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType myStruct
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType
myStruct
myStruct
{    wchar_t * data = myStruct.structFirst;    {        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
wchar_t * data = myStruct.structFirst;
wchar_t * data = myStruct.structFirst;
wchar_t
* data = myStruct.structFirst
*
data
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
{        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
wchar_t * username = L"User";
wchar_t * username = L"User";
wchar_t
* username = L"User"
*
username
= L"User"
L"User"
wchar_t * domain = L"Domain";
wchar_t * domain = L"Domain";
wchar_t
* domain = L"Domain"
*
domain
= L"Domain"
L"Domain"
if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }
LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0
LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle)
LogonUserW
LogonUserW
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{            printLine("User logged in successfully.");            CloseHandle(pHandle);        }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{            printLine("Unable to login.");        }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(1,7,0)
(30,19,0)
(20,23,0)
(31,20,0)
(10,27,0)
(5,10,0)
(12,14,0)
(27,26,0)
(17,26,0)
(19,14,0)
(14,27,0)
(14,7,0)
(14,19,0)
(4,15,0)
(11,10,0)
(21,15,0)
(24,23,0)
(28,14,0)
(15,26,0)
(3,27,0)
(18,14,0)
(10,16,0)
(2,0,0)
(29,14,0)
(9,14,0)
(22,15,0)
(8,15,0)
(7,14,0)
(27,10,0)
(13,2,0)
(25,24,0)
(9,18,1)
(7,1,1)
(11,5,1)
(5,3,1)
(13,7,1)
(20,31,1)
(24,25,1)
(30,29,1)
(10,11,1)
(27,10,1)
(19,30,1)
(12,28,1)
(10,16,1)
(28,22,1)
(22,8,1)
(7,14,1)
(8,27,1)
(14,19,1)
(14,27,1)
(6,2,1)
(31,7,1)
(25,20,1)
(18,12,1)
(1,14,1)
(2,13,1)
(29,9,1)
(6,24,1)
(25,7,2)
(2,7,2)
(20,7,2)
(14,27,2)
(7,14,2)
(14,19,2)
(10,16,2)
(31,7,2)
(27,10,2)
(13,7,2)
(24,7,2)
-----------------------------------
(0,)
(1,0)
(2,printLine("Unable to login.")
(3,data)
(4,if (LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(5,myStruct)
(6,RET)
(7,LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(8,"User")
(9,LOGON32_LOGON_NETWORK)
(10,myStruct.structFirst)
(11,structFirst)
(12,domain)
(13,"Unable to login.")
(14,LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(15,)
(16,CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType myStruct)
(17,data)
(18,data)
(19,&pHandle)
(20,printLine("User logged in successfully.")
(21,pHandle)
(22,"Domain")
(23,)
(24,CloseHandle(pHandle)
(25,pHandle)
(26,)
(27,* data = myStruct.structFirst)
(28,username)
(29,LOGON32_PROVIDER_DEFAULT)
(30,pHandle)
(31,"User logged in successfully.")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
