-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__char_w32GetTempFileName_05_bad()
{
    if(staticTrue)
    {
        {
            char filename[MAX_PATH] = "";
            int fileDesc;
            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,
            * leading to an inescapable race condition when we try to open it again. */
            if (GetTempFileNameA(".", "bad", 0, filename) == 0)
            {
                exit(1);
            }
            printLine(filename);
            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
11,12
12,13
12,14
14,15
14,16
14,17
16,17
17,18
19,20
21,22
22,23
22,24
24,25
26,27
26,28
27,28
27,29
28,29
28,30
28,31
28,32
28,33
29,30
34,35
37,38
38,39
39,40
39,41
40,41
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
53,54
53,55
53,56
53,57
54,55
56,57
58,59
58,60
59,60
61,62
63,64
63,65
64,65
66,67
68,69
68,70
69,70
69,71
70,71
72,73
74,75
74,76
75,76
76,77
76,78
77,78
80,81
81,82
81,83
82,83
84,85
-----nextToken-----
2,4,8,13,15,18,20,23,25,30,31,32,33,35,36,41,42,46,48,52,55,57,60,62,65,67,71,73,78,79,83,85
-----computeFrom-----
27,28
27,29
50,51
50,52
58,59
58,60
63,64
63,65
69,70
69,71
-----guardedBy-----
71,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE377_Insecure_Temporary_File__char_w32GetTempFileName_05_bad(){    if(staticTrue)    {        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
void
CWE377_Insecure_Temporary_File__char_w32GetTempFileName_05_bad()
CWE377_Insecure_Temporary_File__char_w32GetTempFileName_05_bad
{    if(staticTrue)    {        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
if(staticTrue)    {        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
staticTrue
staticTrue
{        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
{            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
char filename[MAX_PATH] = "";
char filename[MAX_PATH] = "";
char
filename[MAX_PATH] = ""
filename
[MAX_PATH]
MAX_PATH
MAX_PATH
= ""
""
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }
GetTempFileNameA(".", "bad", 0, filename) == 0
GetTempFileNameA(".", "bad", 0, filename)
GetTempFileNameA
GetTempFileNameA
"."
"bad"
0
filename
filename
0
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printLine(filename);
printLine(filename)
printLine
printLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
-----joern-----
(41,10,0)
(24,32,0)
(2,9,0)
(20,24,0)
(1,9,0)
(42,2,0)
(3,41,0)
(28,34,0)
(29,32,0)
(9,25,0)
(20,39,0)
(33,23,0)
(10,41,0)
(12,32,0)
(19,37,0)
(32,2,0)
(13,12,0)
(40,9,0)
(32,24,0)
(16,34,0)
(17,2,0)
(43,9,0)
(32,23,0)
(6,2,0)
(18,16,0)
(35,10,0)
(31,23,0)
(22,12,0)
(7,24,0)
(10,2,0)
(36,0,0)
(24,9,0)
(23,32,0)
(32,12,0)
(39,20,0)
(15,20,0)
(8,10,0)
(38,9,0)
(28,24,0)
(5,6,0)
(37,21,0)
(27,39,0)
(11,10,0)
(30,10,0)
(26,28,0)
(6,9,0)
(26,16,1)
(8,35,1)
(18,20,1)
(41,3,1)
(32,2,1)
(13,22,1)
(42,14,1)
(20,39,1)
(28,24,1)
(20,24,1)
(15,24,1)
(16,18,1)
(41,10,1)
(30,8,1)
(24,32,1)
(23,31,1)
(4,14,1)
(28,26,1)
(7,6,1)
(27,15,1)
(6,5,1)
(10,30,1)
(17,42,1)
(5,37,1)
(19,41,1)
(33,12,1)
(12,13,1)
(4,20,1)
(32,23,1)
(31,33,1)
(4,28,1)
(32,12,1)
(39,27,1)
(2,17,1)
(29,7,1)
(37,19,1)
(22,29,1)
(5,41,1)
(3,10,1)
(10,2,1)
(11,2,1)
(35,11,1)
(6,2,1)
(32,23,2)
(30,14,2)
(31,14,2)
(7,14,2)
(3,14,2)
(29,14,2)
(23,14,2)
(2,14,2)
(39,14,2)
(10,2,2)
(6,14,2)
(15,14,2)
(19,41,2)
(27,14,2)
(6,2,2)
(10,14,2)
(32,12,2)
(20,14,2)
(12,14,2)
(42,14,2)
(37,41,2)
(17,14,2)
(32,2,2)
(11,14,2)
(5,14,2)
(13,14,2)
(20,24,2)
(33,14,2)
(28,24,2)
(18,20,2)
(35,14,2)
(26,20,2)
(8,14,2)
(24,32,2)
(41,14,2)
(24,14,2)
(22,14,2)
(32,14,2)
(28,20,2)
(20,39,2)
(41,10,2)
(16,20,2)
-----------------------------------
(0,)
(1,filename)
(2,filename[MAX_PATH] = "")
(3,0)
(4,RET)
(5,filename)
(6,printLine(filename)
(7,fileDesc)
(8,0)
(9,)
(10,GetTempFileNameA(".", "bad", 0, filename)
(11,".")
(12,O_RDWR|O_CREAT)
(13,O_CREAT)
(14,staticTrue)
(15,fileDesc)
(16,printLine("Temporary file was opened...now closing file")
(17,"")
(18,"Temporary file was opened...now closing file")
(19,1)
(20,fileDesc != -1)
(21,)
(22,O_RDWR)
(23,S_IREAD|S_IWRITE)
(24,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(25,)
(26,fileDesc)
(27,1)
(28,CLOSE(fileDesc)
(29,filename)
(30,filename)
(31,S_IWRITE)
(32,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(33,S_IREAD)
(34,)
(35,"bad")
(36,if(staticTrue)
(37,exit(1)
(38,if (fileDesc != -1)
(39,-1)
(40,fileDesc)
(41,GetTempFileNameA(".", "bad", 0, filename)
(42,filename)
(43,if (GetTempFileNameA(".", "bad", 0, filename)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
