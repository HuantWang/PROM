-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_16_bad()
{
    while(1)
    {
        {
            wchar_t filename[MAX_PATH] = L"";
            int fileDesc;
            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,
            * leading to an inescapable race condition when we try to open it again. */
            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)
            {
                exit(1);
            }
            printWLine(filename);
            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
8,9
8,10
9,10
9,11
9,12
9,13
9,14
9,15
10,11
11,12
11,13
13,14
13,15
13,16
15,16
16,17
18,19
20,21
21,22
21,23
23,24
25,26
25,27
26,27
26,28
27,28
27,29
27,30
27,31
27,32
28,29
33,34
36,37
37,38
38,39
38,40
39,40
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
52,53
52,54
52,55
52,56
53,54
55,56
57,58
57,59
58,59
60,61
62,63
62,64
63,64
65,66
67,68
67,69
68,69
68,70
69,70
71,72
73,74
73,75
74,75
75,76
75,77
76,77
79,80
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,7,12,14,17,19,22,24,29,30,31,32,34,35,40,41,45,47,51,54,56,59,61,64,66,70,72,77,78,82,84,85
-----computeFrom-----
26,27
26,28
49,50
49,51
57,58
57,59
62,63
62,64
68,69
68,70
-----guardedBy-----
70,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_16_bad(){    while(1)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }        break;    }}
void
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_16_bad()
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_16_bad
{    while(1)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }        break;    }}
while(1)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }        break;    }
1
{        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }        break;    }
{            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
wchar_t filename[MAX_PATH] = L"";
wchar_t filename[MAX_PATH] = L"";
wchar_t
filename[MAX_PATH] = L""
filename
[MAX_PATH]
MAX_PATH
MAX_PATH
= L""
L""
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }
GetTempFileNameW(L".", L"bad", 0, filename) == 0
GetTempFileNameW(L".", L"bad", 0, filename)
GetTempFileNameW
GetTempFileNameW
L"."
L"bad"
0
filename
filename
0
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printWLine(filename);
printWLine(filename)
printWLine
printWLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
break;
-----joern-----
(0,11,0)
(10,11,0)
(11,10,0)
(26,28,0)
(25,9,0)
(5,25,0)
(30,14,0)
(16,15,0)
(8,30,0)
(14,19,0)
(20,28,0)
(27,9,0)
(33,14,0)
(2,29,0)
(28,14,0)
(22,8,0)
(3,25,0)
(4,14,0)
(25,28,0)
(6,3,0)
(32,10,0)
(17,16,0)
(7,21,0)
(1,9,0)
(18,3,0)
(12,14,0)
(20,15,0)
(28,25,0)
(23,19,0)
(29,14,0)
(10,28,0)
(9,25,0)
(25,3,0)
(31,20,0)
(4,24,1)
(17,10,1)
(2,8,1)
(28,25,1)
(22,4,1)
(8,22,1)
(23,10,1)
(29,2,1)
(20,31,1)
(9,27,1)
(20,28,1)
(18,6,1)
(11,0,1)
(0,32,1)
(5,26,1)
(31,16,1)
(25,3,1)
(13,23,1)
(23,20,1)
(10,11,1)
(10,28,1)
(3,18,1)
(13,24,1)
(32,28,1)
(1,5,1)
(16,17,1)
(27,1,1)
(26,29,1)
(6,9,1)
(25,9,1)
(25,9,2)
(10,11,2)
(2,24,2)
(32,24,2)
(18,24,2)
(23,24,2)
(0,24,2)
(4,24,2)
(8,24,2)
(29,24,2)
(27,24,2)
(26,24,2)
(16,10,2)
(25,24,2)
(22,24,2)
(10,28,2)
(5,24,2)
(31,10,2)
(10,24,2)
(28,25,2)
(1,24,2)
(11,24,2)
(28,24,2)
(17,10,2)
(9,24,2)
(25,3,2)
(20,10,2)
(6,24,2)
(3,24,2)
(20,28,2)
-----------------------------------
(0,1)
(1,O_RDWR)
(2,filename)
(3,S_IREAD|S_IWRITE)
(4,"")
(5,filename)
(6,S_IREAD)
(7,while(1)
(8,exit(1)
(9,O_RDWR|O_CREAT)
(10,fileDesc != -1)
(11,-1)
(12,fileDesc)
(13,RET)
(14,)
(15,)
(16,printLine("Temporary file was opened...now closing file")
(17,"Temporary file was opened...now closing file")
(18,S_IWRITE)
(19,)
(20,CLOSE(fileDesc)
(21,)
(22,1)
(23,break;)
(24,1)
(25,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(26,fileDesc)
(27,O_CREAT)
(28,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(29,printWLine(filename)
(30,)
(31,fileDesc)
(32,fileDesc)
(33,if (fileDesc != -1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
