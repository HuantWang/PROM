-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_01_bad()
{
    char * data;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (250-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */
    PUTENV(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
28,29
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
38,39
40,41
41,42
41,43
42,43
44,45
44,46
47,48
47,49
48,49
48,50
49,50
49,51
51,52
54,55
54,56
55,56
56,57
56,58
57,58
59,60
59,61
59,62
60,61
62,63
65,66
65,67
66,67
66,68
67,68
69,70
71,72
71,73
72,73
72,74
73,74
73,75
74,75
74,76
74,77
74,78
75,76
77,78
77,79
78,79
80,81
82,83
82,84
83,84
83,85
86,87
87,88
87,89
89,90
91,92
93,94
95,96
95,97
96,97
97,98
97,99
98,99
101,102
102,103
102,104
103,104
103,105
104,105
106,107
109,110
110,111
110,112
111,112
113,114
115,116
116,117
116,118
117,118
119,120
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,31,33,37,39,43,45,46,50,52,53,58,61,63,64,68,70,76,79,81,84,85,88,90,92,94,99,100,105,107,108,112,114,118,120
-----computeFrom-----
22,23
22,24
48,49
48,50
49,50
49,51
56,57
56,58
66,67
66,68
73,74
73,75
77,78
77,79
87,88
87,89
102,103
102,104
-----guardedBy-----
52,107
70,94
68,114
79,105
90,107
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_01_bad(){    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_file_01_bad()
CWE427_Uncontrolled_Search_Path_Element__char_file_01_bad
{    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(250-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
PUTENV(data);
PUTENV(data)
PUTENV
PUTENV
data
data
-----joern-----
(12,23,0)
(40,19,0)
(49,15,0)
(19,29,0)
(18,43,0)
(9,19,0)
(31,29,0)
(43,34,0)
(44,3,0)
(57,33,0)
(28,31,0)
(44,1,0)
(21,53,0)
(6,29,0)
(38,21,0)
(14,7,0)
(1,23,0)
(39,48,0)
(1,40,0)
(3,44,0)
(53,31,0)
(48,1,0)
(21,38,0)
(37,44,0)
(5,1,0)
(56,32,0)
(52,31,0)
(25,34,0)
(40,53,0)
(51,57,0)
(23,22,0)
(2,30,0)
(1,44,0)
(24,31,0)
(1,48,0)
(27,3,0)
(4,21,0)
(17,36,0)
(50,22,0)
(47,45,0)
(43,53,0)
(58,53,0)
(7,36,0)
(30,29,0)
(23,15,0)
(10,19,0)
(19,32,0)
(11,29,0)
(35,3,0)
(43,19,0)
(42,40,0)
(8,43,0)
(44,37,0)
(53,45,0)
(46,38,0)
(32,29,0)
(45,53,0)
(13,15,0)
(34,33,0)
(45,19,0)
(20,12,0)
(3,53,0)
(54,21,0)
(16,12,0)
(55,32,0)
(30,19,0)
(15,23,0)
(40,1,0)
(41,40,0)
(7,23,0)
(26,23,0)
(23,15,1)
(13,49,1)
(43,19,1)
(48,39,1)
(9,10,1)
(46,21,1)
(45,19,1)
(57,51,1)
(39,1,1)
(38,21,1)
(14,34,1)
(1,5,1)
(27,40,1)
(54,53,1)
(12,20,1)
(32,56,1)
(43,18,1)
(41,12,1)
(35,27,1)
(58,19,1)
(19,32,1)
(30,19,1)
(47,58,1)
(21,53,1)
(20,16,1)
(34,25,1)
(10,32,1)
(45,47,1)
(2,7,1)
(8,57,1)
(44,3,1)
(26,38,1)
(38,46,1)
(40,42,1)
(14,48,1)
(2,12,1)
(15,13,1)
(0,30,1)
(25,43,1)
(1,23,1)
(18,8,1)
(5,44,1)
(1,44,1)
(7,14,1)
(48,1,1)
(2,38,1)
(53,45,1)
(21,4,1)
(3,35,1)
(12,23,1)
(49,26,1)
(42,41,1)
(43,53,1)
(40,19,1)
(7,23,1)
(44,37,1)
(4,54,1)
(40,53,1)
(51,48,1)
(3,53,1)
(1,40,1)
(56,55,1)
(19,9,1)
(30,2,1)
(16,23,1)
(12,23,2)
(14,12,2)
(41,12,2)
(18,48,2)
(3,12,2)
(27,12,2)
(1,44,2)
(48,12,2)
(13,38,2)
(40,19,2)
(44,3,2)
(42,12,2)
(40,12,2)
(40,53,2)
(1,12,2)
(5,12,2)
(44,12,2)
(8,48,2)
(53,45,2)
(7,12,2)
(39,12,2)
(1,23,2)
(30,19,2)
(21,53,2)
(43,19,2)
(35,12,2)
(26,38,2)
(1,40,2)
(44,37,2)
(15,38,2)
(57,48,2)
(23,38,2)
(7,23,2)
(51,48,2)
(45,19,2)
(16,38,2)
(49,38,2)
(43,53,2)
(12,38,2)
(38,21,2)
(19,32,2)
(3,53,2)
(34,48,2)
(25,48,2)
(20,38,2)
(43,48,2)
(23,15,2)
(48,1,2)
-----------------------------------
(0,RET)
(1,fgets(data+dataLen, (int)
(2,data)
(3,250-dataLen)
(4,dataLen)
(5,pFile)
(6,data)
(7,fclose(pFile)
(8,data)
(9,dataBuffer)
(10,data)
(11,dataBuffer)
(12,pFile != NULL)
(13,"r")
(14,pFile)
(15,fopen(FILENAME, "r")
(16,pFile)
(17,if (fgets(data+dataLen, (int)
(18,dataLen)
(19,data = dataBuffer)
(20,NULL)
(21,250-dataLen)
(22,)
(23,pFile = fopen(FILENAME, "r")
(24,pFile)
(25,\\\'\\\\0\\\')
(26,pFile)
(27,250)
(28,dataLen)
(29,)
(30,PUTENV(data)
(31,)
(32,dataBuffer[250] = "PATH=")
(33,)
(34,data[dataLen] = \\\'\\\\0\\\')
(35,dataLen)
(36,)
(37,int)
(38,250-dataLen > 1)
(39,NULL)
(40,data+dataLen)
(41,data)
(42,dataLen)
(43,data[dataLen])
(44,(int)
(45,strlen(data)
(46,1)
(47,data)
(48,fgets(data+dataLen, (int)
(49,FILENAME)
(50,if (pFile != NULL)
(51,"fgets()
(52,if (250-dataLen > 1)
(53,dataLen = strlen(data)
(54,250)
(55,dataBuffer)
(56,"PATH=")
(57,printLine("fgets()
(58,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
