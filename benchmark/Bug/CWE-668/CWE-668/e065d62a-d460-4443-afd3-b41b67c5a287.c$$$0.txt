-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_18_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[250] = L"PATH=";
    data = dataBuffer;
    goto source;
source:
    {
        /* Read input from a file */
        size_t dataLen = wcslen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (250-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                {
                    printLine("fgetws() failed");
                    /* Restore NUL terminator if fgetws fails */
                    data[dataLen] = L'\0';
                }
                fclose(pFile);
            }
        }
    }
    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */
    PUTENV(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
29,30
29,31
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
48,49
48,50
51,52
51,53
52,53
52,54
53,54
53,55
55,56
58,59
58,60
59,60
60,61
60,62
61,62
63,64
63,65
63,66
64,65
66,67
69,70
69,71
70,71
70,72
71,72
73,74
75,76
75,77
76,77
76,78
77,78
77,79
78,79
78,80
78,81
78,82
79,80
81,82
81,83
82,83
84,85
86,87
86,88
87,88
87,89
90,91
91,92
91,93
93,94
95,96
97,98
99,100
99,101
100,101
101,102
101,103
102,103
105,106
106,107
106,108
107,108
107,109
108,109
110,111
113,114
114,115
114,116
115,116
117,118
119,120
120,121
120,122
121,122
123,124
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,28,30,35,37,41,43,47,49,50,54,56,57,62,65,67,68,72,74,80,83,85,88,89,92,94,96,98,103,104,109,111,112,116,118,122,124
-----computeFrom-----
22,23
22,24
52,53
52,54
53,54
53,55
60,61
60,62
70,71
70,72
77,78
77,79
81,82
81,83
91,92
91,93
106,107
106,108
-----guardedBy-----
56,111
74,98
72,118
83,109
94,111
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_18_bad(){    wchar_t * data;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    goto source;source:    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
void
CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_18_bad()
CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_18_bad
{    wchar_t * data;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    goto source;source:    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[250] = L"PATH=";
wchar_t dataBuffer[250] = L"PATH=";
wchar_t
dataBuffer[250] = L"PATH="
dataBuffer
[250]
250
= L"PATH="
L"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
goto source;
source
source:    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }
source
{        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(250-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
PUTENV(data);
PUTENV(data)
PUTENV
PUTENV
data
data
-----joern-----
(14,33,0)
(22,8,0)
(29,45,0)
(41,45,0)
(21,45,0)
(17,38,0)
(12,11,0)
(28,49,0)
(26,44,0)
(48,27,0)
(27,48,0)
(16,48,0)
(47,8,0)
(51,48,0)
(34,10,0)
(18,20,0)
(20,36,0)
(6,32,0)
(11,8,0)
(36,10,0)
(24,21,0)
(53,10,0)
(36,20,0)
(8,39,0)
(37,21,0)
(27,36,0)
(15,39,0)
(10,45,0)
(50,21,0)
(19,51,0)
(7,47,0)
(27,21,0)
(48,8,0)
(42,10,0)
(16,9,0)
(32,36,0)
(32,16,0)
(35,39,0)
(48,51,0)
(3,36,0)
(5,3,0)
(44,3,0)
(47,33,0)
(2,45,0)
(46,3,0)
(13,36,0)
(30,48,0)
(23,11,0)
(48,16,0)
(52,38,0)
(39,8,0)
(43,32,0)
(0,27,0)
(3,44,0)
(9,16,0)
(37,45,0)
(20,21,0)
(4,27,0)
(16,32,0)
(31,17,0)
(25,45,0)
(40,37,0)
(8,49,0)
(11,12,1)
(44,26,1)
(46,5,1)
(36,20,1)
(48,27,1)
(3,46,1)
(16,9,1)
(4,11,1)
(27,36,1)
(5,36,1)
(37,40,1)
(48,16,1)
(44,3,1)
(32,43,1)
(3,36,1)
(0,4,1)
(21,50,1)
(31,51,1)
(11,8,1)
(12,23,1)
(43,6,1)
(47,8,1)
(40,11,1)
(47,7,1)
(39,15,1)
(22,44,1)
(7,51,1)
(52,17,1)
(24,25,1)
(32,36,1)
(27,21,1)
(7,52,1)
(50,24,1)
(48,8,1)
(40,47,1)
(40,44,1)
(20,21,1)
(37,21,1)
(51,48,1)
(6,27,1)
(27,0,1)
(17,31,1)
(26,3,1)
(35,22,1)
(18,13,1)
(19,48,1)
(48,30,1)
(20,18,1)
(30,16,1)
(13,41,1)
(8,39,1)
(16,32,1)
(41,21,1)
(51,19,1)
(15,35,1)
(23,8,1)
(1,37,1)
(16,11,2)
(12,44,2)
(47,11,2)
(19,11,2)
(36,20,2)
(23,44,2)
(35,44,2)
(52,51,2)
(48,27,2)
(4,11,2)
(48,16,2)
(48,11,2)
(8,44,2)
(51,48,2)
(27,21,2)
(22,44,2)
(43,11,2)
(17,51,2)
(30,11,2)
(48,8,2)
(44,3,2)
(47,8,2)
(31,51,2)
(3,36,2)
(11,44,2)
(7,11,2)
(15,44,2)
(11,8,2)
(16,9,2)
(51,11,2)
(27,11,2)
(20,21,2)
(6,11,2)
(37,21,2)
(27,36,2)
(16,32,2)
(32,36,2)
(32,11,2)
(8,39,2)
(39,44,2)
(0,11,2)
-----------------------------------
(0,dataLen)
(1,RET)
(2,data)
(3,250-dataLen)
(4,data)
(5,250)
(6,250)
(7,pFile)
(8,pFile = fopen(FILENAME, "r")
(9,int)
(10,)
(11,pFile != NULL)
(12,NULL)
(13,dataLen)
(14,if (fgetws(data+dataLen, (int)
(15,"r")
(16,(int)
(17,printLine("fgetws()
(18,data)
(19,NULL)
(20,wcslen(data)
(21,data = dataBuffer)
(22,pFile)
(23,pFile)
(24,data)
(25,"PATH=")
(26,1)
(27,data+dataLen)
(28,if (pFile != NULL)
(29,source:)
(30,pFile)
(31,"fgetws()
(32,250-dataLen)
(33,)
(34,pFile)
(35,FILENAME)
(36,dataLen = wcslen(data)
(37,PUTENV(data)
(38,)
(39,fopen(FILENAME, "r")
(40,data)
(41,goto source;)
(42,dataLen)
(43,dataLen)
(44,250-dataLen > 1)
(45,)
(46,dataLen)
(47,fclose(pFile)
(48,fgetws(data+dataLen, (int)
(49,)
(50,dataBuffer)
(51,fgetws(data+dataLen, (int)
(52,\\\'\\\\0\\\')
(53,if (250-dataLen > 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
