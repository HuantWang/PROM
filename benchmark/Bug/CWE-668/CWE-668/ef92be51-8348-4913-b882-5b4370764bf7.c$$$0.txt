-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_52c_badSink(wchar_t * data)
{
    {
        HANDLE pHandle;
        wchar_t * username = L"User";
        wchar_t * domain = L"Domain";
        /* POTENTIAL FLAW: Attempt to login user with password from the source */
        if (LogonUserW(
                    username,
                    domain,
                    data,
                    LOGON32_LOGON_NETWORK,
                    LOGON32_PROVIDER_DEFAULT,
                    &pHandle) != 0)
        {
            printLine("User logged in successfully.");
            CloseHandle(pHandle);
        }
        else
        {
            printLine("Unable to login.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
11,14
11,15
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
24,25
26,27
27,28
27,29
29,30
29,31
29,32
32,33
34,35
34,36
34,37
35,36
35,37
36,37
36,38
36,39
36,40
36,41
36,42
36,43
37,38
39,40
41,42
43,44
45,46
47,48
49,50
50,51
53,54
53,55
54,55
55,56
55,57
56,57
59,60
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
68,69
-----nextToken-----
2,4,6,8,9,15,17,20,22,23,25,28,30,31,33,38,40,42,44,46,48,51,52,57,58,62,64,69,70
-----computeFrom-----
35,36
35,37
-----guardedBy-----
51,64
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_52c_badSink(wchar_t * data){    {        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
void
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_52c_badSink(wchar_t * data)
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_52c_badSink
wchar_t * data
wchar_t
* data
*
data
{    {        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
{        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
wchar_t * username = L"User";
wchar_t * username = L"User";
wchar_t
* username = L"User"
*
username
= L"User"
L"User"
wchar_t * domain = L"Domain";
wchar_t * domain = L"Domain";
wchar_t
* domain = L"Domain"
*
domain
= L"Domain"
L"Domain"
if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }
LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0
LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle)
LogonUserW
LogonUserW
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{            printLine("User logged in successfully.");            CloseHandle(pHandle);        }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{            printLine("Unable to login.");        }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(11,1,0)
(20,10,0)
(17,10,0)
(14,3,0)
(24,6,0)
(10,9,0)
(10,3,0)
(25,13,0)
(19,10,0)
(23,24,0)
(2,13,0)
(1,10,0)
(0,12,0)
(3,10,0)
(18,10,0)
(10,1,0)
(16,12,0)
(8,13,0)
(22,16,0)
(7,10,0)
(4,0,0)
(13,15,0)
(5,13,0)
(21,24,1)
(21,16,1)
(1,11,1)
(19,7,1)
(22,0,1)
(3,14,1)
(10,3,1)
(20,2,1)
(17,18,1)
(11,10,1)
(16,22,1)
(14,19,1)
(1,10,1)
(23,1,1)
(7,17,1)
(18,20,1)
(2,8,1)
(10,9,1)
(4,1,1)
(24,23,1)
(0,4,1)
(22,1,2)
(4,1,2)
(0,1,2)
(24,1,2)
(10,3,2)
(1,10,2)
(10,9,2)
(23,1,2)
(16,1,2)
-----------------------------------
(0,printLine("User logged in successfully.")
(1,LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(2,"Domain")
(3,&pHandle)
(4,"User logged in successfully.")
(5,if (LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(6,)
(7,LOGON32_LOGON_NETWORK)
(8,"User")
(9,wchar_t * data)
(10,LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(11,0)
(12,)
(13,)
(14,pHandle)
(15,)
(16,CloseHandle(pHandle)
(17,data)
(18,domain)
(19,LOGON32_PROVIDER_DEFAULT)
(20,username)
(21,RET)
(22,pHandle)
(23,"Unable to login.")
(24,printLine("Unable to login.")
(25,pHandle)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
