-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_console_54_bad()
{
    char * data;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    {
        /* Read input from the console */
        size_t dataLen = strlen(data);
        /* if there is room in data, read into it from the console */
        if (250-dataLen > 1)
        {
            /* POTENTIAL FLAW: Read data from the console */
            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)
            {
                /* The next few lines remove the carriage return from the string that is
                 * inserted by fgets() */
                dataLen = strlen(data);
                if (dataLen > 0 && data[dataLen-1] == '\n')
                {
                    data[dataLen-1] = '\0';
                }
            }
            else
            {
                printLine("fgets() failed");
                /* Restore NUL terminator if fgets fails */
                data[dataLen] = '\0';
            }
        }
    }
    CWE427_Uncontrolled_Search_Path_Element__char_console_54b_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
38,39
40,41
40,42
41,42
41,43
42,43
42,44
44,45
47,48
48,49
48,50
48,51
49,50
49,51
50,51
50,52
50,53
50,54
51,52
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
62,63
63,64
63,65
65,66
67,68
69,70
71,72
71,73
72,73
73,74
73,75
74,75
76,77
76,78
77,78
79,80
81,82
81,83
82,83
82,84
83,84
83,85
84,85
87,88
87,89
88,89
88,90
89,90
91,92
91,93
92,93
96,97
97,98
98,99
98,100
99,100
99,101
100,101
102,103
102,104
103,104
107,108
107,109
108,109
109,110
109,111
110,111
113,114
114,115
114,116
115,116
115,117
116,117
118,119
121,122
122,123
122,124
123,124
125,126
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,31,33,37,39,43,45,46,52,55,57,60,61,64,66,68,70,75,78,80,85,86,90,93,94,95,101,104,105,106,111,112,117,119,120,124,126
-----computeFrom-----
22,23
22,24
41,42
41,43
42,43
42,44
49,50
49,51
53,54
53,55
63,64
63,65
73,74
73,75
82,83
82,84
83,84
83,85
87,88
87,89
91,92
91,93
98,99
98,100
102,103
102,104
114,115
114,116
-----guardedBy-----
45,119
55,101
66,104
90,101
93,104
-----guardedByNegation-----
55,117
66,119
-----lastLexicalUse-----
55,117
66,119
-----jump-----
55,117
66,119
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_console_54_bad(){    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }    CWE427_Uncontrolled_Search_Path_Element__char_console_54b_badSink(data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_console_54_bad()
CWE427_Uncontrolled_Search_Path_Element__char_console_54_bad
{    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }    CWE427_Uncontrolled_Search_Path_Element__char_console_54b_badSink(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }
if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }
fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL
fgets(data+dataLen, (int)(250-dataLen), stdin)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
stdin
stdin
NULL
NULL
{                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }
dataLen = strlen(data);
dataLen = strlen(data)
dataLen
dataLen
strlen(data)
strlen
strlen
data
data
if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }
dataLen > 0 && data[dataLen-1] == '\n'
dataLen > 0
dataLen
dataLen
0
data[dataLen-1] == '\n'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\n'
{                    data[dataLen-1] = '\0';                }
data[dataLen-1] = '\0';
data[dataLen-1] = '\0'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\0'
{                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
CWE427_Uncontrolled_Search_Path_Element__char_console_54b_badSink(data);
CWE427_Uncontrolled_Search_Path_Element__char_console_54b_badSink(data)
CWE427_Uncontrolled_Search_Path_Element__char_console_54b_badSink
CWE427_Uncontrolled_Search_Path_Element__char_console_54b_badSink
data
data
-----joern-----
(54,39,0)
(57,65,0)
(1,59,0)
(17,13,0)
(3,1,0)
(23,12,0)
(35,2,0)
(6,16,0)
(47,21,0)
(46,17,0)
(39,55,0)
(53,59,0)
(5,55,0)
(6,58,0)
(70,64,0)
(37,64,0)
(1,17,0)
(48,7,0)
(10,58,0)
(39,54,0)
(2,45,0)
(6,37,0)
(12,37,0)
(12,7,0)
(44,13,0)
(30,53,0)
(28,6,0)
(9,54,0)
(21,49,0)
(43,58,0)
(67,33,0)
(27,12,0)
(26,64,0)
(55,39,0)
(49,36,0)
(49,39,0)
(50,23,0)
(20,21,0)
(62,37,0)
(61,31,0)
(53,37,0)
(36,49,0)
(51,23,0)
(68,16,0)
(14,57,0)
(15,1,0)
(37,33,0)
(29,39,0)
(11,67,0)
(45,31,0)
(32,67,0)
(7,8,0)
(55,59,0)
(62,33,0)
(41,33,0)
(16,56,0)
(60,37,0)
(42,45,0)
(23,45,0)
(38,45,0)
(52,44,0)
(2,56,0)
(63,42,0)
(49,21,0)
(59,67,0)
(40,59,0)
(69,62,0)
(66,37,0)
(59,53,0)
(24,33,0)
(22,55,0)
(19,25,0)
(1,37,0)
(45,42,0)
(56,2,0)
(65,57,0)
(64,33,0)
(34,57,0)
(0,2,0)
(16,6,0)
(57,59,0)
(12,23,0)
(56,16,0)
(55,37,0)
(42,37,0)
(39,49,0)
(58,45,0)
(21,59,0)
(58,6,0)
(18,65,0)
(18,57,1)
(2,0,1)
(20,55,1)
(14,59,1)
(57,34,1)
(39,49,1)
(6,37,1)
(44,52,1)
(55,22,1)
(35,45,1)
(60,66,1)
(48,12,1)
(58,45,1)
(70,26,1)
(29,49,1)
(1,3,1)
(53,37,1)
(7,48,1)
(45,42,1)
(37,60,1)
(16,68,1)
(51,50,1)
(54,9,1)
(64,70,1)
(39,29,1)
(52,54,1)
(34,14,1)
(65,18,1)
(2,45,1)
(3,15,1)
(38,54,1)
(10,43,1)
(6,58,1)
(46,1,1)
(55,59,1)
(4,62,1)
(0,35,1)
(30,40,1)
(37,64,1)
(47,20,1)
(68,6,1)
(69,17,1)
(69,7,1)
(65,57,1)
(16,6,1)
(50,27,1)
(69,65,1)
(1,37,1)
(55,37,1)
(62,69,1)
(21,47,1)
(23,51,1)
(57,59,1)
(1,59,1)
(56,16,1)
(39,55,1)
(59,53,1)
(15,44,1)
(12,37,1)
(42,63,1)
(5,65,1)
(56,2,1)
(66,64,1)
(27,56,1)
(23,45,1)
(22,5,1)
(12,23,1)
(49,21,1)
(28,2,1)
(17,46,1)
(53,30,1)
(62,37,1)
(42,37,1)
(54,39,1)
(63,38,1)
(9,39,1)
(49,36,1)
(21,59,1)
(58,10,1)
(69,56,1)
(40,37,1)
(43,28,1)
(63,54,2)
(21,59,2)
(38,54,2)
(51,56,2)
(42,37,2)
(45,54,2)
(58,2,2)
(12,56,2)
(6,37,2)
(55,65,2)
(42,54,2)
(50,56,2)
(2,45,2)
(52,54,2)
(47,65,2)
(56,2,2)
(56,54,2)
(12,23,2)
(44,54,2)
(57,59,2)
(46,54,2)
(55,37,2)
(1,37,2)
(6,58,2)
(23,56,2)
(7,56,2)
(15,54,2)
(37,64,2)
(68,2,2)
(65,57,2)
(35,54,2)
(2,54,2)
(39,49,2)
(54,65,2)
(1,59,2)
(9,65,2)
(21,65,2)
(54,39,2)
(45,42,2)
(5,65,2)
(43,2,2)
(16,6,2)
(55,59,2)
(56,16,2)
(49,36,2)
(12,37,2)
(49,65,2)
(53,37,2)
(48,56,2)
(22,65,2)
(3,54,2)
(16,2,2)
(28,2,2)
(58,45,2)
(62,37,2)
(1,54,2)
(10,2,2)
(39,65,2)
(29,65,2)
(6,2,2)
(39,55,2)
(23,45,2)
(20,65,2)
(49,21,2)
(59,53,2)
(17,54,2)
(27,56,2)
(0,54,2)
-----------------------------------
(0,0)
(1,data[dataLen])
(2,dataLen > 0)
(3,dataLen)
(4,RET)
(5,data)
(6,data[dataLen-1])
(7,data[dataLen-1] = \\\'\\\\0\\\')
(8,)
(9,NULL)
(10,1)
(11,if (250-dataLen > 1)
(12,data[dataLen-1])
(13,)
(14,250)
(15,data)
(16,data[dataLen-1] == \\\'\\\\n\\\')
(17,data[dataLen] = \\\'\\\\0\\\')
(18,1)
(19,if (fgets(data+dataLen, (int)
(20,250)
(21,250-dataLen)
(22,dataLen)
(23,dataLen-1)
(24,data)
(25,)
(26,dataBuffer)
(27,data)
(28,data)
(29,stdin)
(30,data)
(31,)
(32,dataLen)
(33,)
(34,dataLen)
(35,dataLen)
(36,int)
(37,data = dataBuffer)
(38,dataLen)
(39,fgets(data+dataLen, (int)
(40,dataLen)
(41,dataBuffer)
(42,strlen(data)
(43,dataLen)
(44,printLine("fgets()
(45,dataLen = strlen(data)
(46,\\\'\\\\0\\\')
(47,dataLen)
(48,\\\'\\\\0\\\')
(49,(int)
(50,dataLen)
(51,1)
(52,"fgets()
(53,strlen(data)
(54,fgets(data+dataLen, (int)
(55,data+dataLen)
(56,dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(57,250-dataLen)
(58,dataLen-1)
(59,dataLen = strlen(data)
(60,dataBuffer)
(61,if (dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(62,CWE427_Uncontrolled_Search_Path_Element__char_console_54b_badSink(data)
(63,data)
(64,dataBuffer[250] = "PATH=")
(65,250-dataLen > 1)
(66,data)
(67,)
(68,\\\'\\\\n\\\')
(69,data)
(70,"PATH=")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
