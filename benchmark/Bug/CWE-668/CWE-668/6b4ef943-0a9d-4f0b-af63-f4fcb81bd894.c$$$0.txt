-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__char_w32GetTempFileName_17_bad()
{
    int j;
    for(j = 0; j < 1; j++)
    {
        {
            char filename[MAX_PATH] = "";
            int fileDesc;
            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,
            * leading to an inescapable race condition when we try to open it again. */
            if (GetTempFileNameA(".", "bad", 0, filename) == 0)
            {
                exit(1);
            }
            printLine(filename);
            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
11,12
11,13
11,14
11,15
12,13
13,14
13,15
14,15
17,18
17,19
18,19
21,22
22,23
24,25
25,26
25,27
25,28
25,29
25,30
25,31
26,27
27,28
27,29
29,30
29,31
29,32
31,32
32,33
34,35
36,37
37,38
37,39
39,40
41,42
41,43
42,43
42,44
43,44
43,45
43,46
43,47
43,48
44,45
49,50
52,53
53,54
54,55
54,56
55,56
58,59
59,60
59,61
60,61
62,63
64,65
65,66
65,67
66,67
68,69
68,70
68,71
68,72
69,70
71,72
73,74
73,75
74,75
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
85,86
87,88
89,90
89,91
90,91
91,92
91,93
92,93
95,96
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,8,10,15,16,19,20,23,28,30,33,35,38,40,45,46,47,48,50,51,56,57,61,63,67,70,72,75,77,80,82,86,88,93,94,98,100
-----computeFrom-----
13,14
13,15
17,18
17,19
42,43
42,44
65,66
65,67
73,74
73,75
78,79
78,80
84,85
84,86
-----guardedBy-----
86,100
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE377_Insecure_Temporary_File__char_w32GetTempFileName_17_bad(){    int j;    for(j = 0; j < 1; j++)    {        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
void
CWE377_Insecure_Temporary_File__char_w32GetTempFileName_17_bad()
CWE377_Insecure_Temporary_File__char_w32GetTempFileName_17_bad
{    int j;    for(j = 0; j < 1; j++)    {        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
int j;
int j;
int
j
j
for(j = 0; j < 1; j++)    {        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
{            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
char filename[MAX_PATH] = "";
char filename[MAX_PATH] = "";
char
filename[MAX_PATH] = ""
filename
[MAX_PATH]
MAX_PATH
MAX_PATH
= ""
""
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }
GetTempFileNameA(".", "bad", 0, filename) == 0
GetTempFileNameA(".", "bad", 0, filename)
GetTempFileNameA
GetTempFileNameA
"."
"bad"
0
filename
filename
0
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printLine(filename);
printLine(filename)
printLine
printLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
-----joern-----
(8,46,0)
(27,32,0)
(38,26,0)
(10,24,0)
(50,24,0)
(30,51,0)
(50,18,0)
(3,46,0)
(50,36,0)
(23,50,0)
(26,18,0)
(26,20,0)
(6,30,0)
(25,51,0)
(33,20,0)
(22,26,0)
(28,14,0)
(24,50,0)
(17,39,0)
(20,26,0)
(35,46,0)
(14,18,0)
(29,19,0)
(16,3,0)
(4,26,0)
(19,34,0)
(11,46,0)
(21,37,0)
(18,32,0)
(15,8,0)
(43,18,0)
(13,26,0)
(39,17,0)
(2,32,0)
(51,32,0)
(1,8,0)
(17,51,0)
(12,32,0)
(49,18,0)
(40,24,0)
(51,50,0)
(0,36,0)
(32,44,0)
(9,17,0)
(48,32,0)
(14,32,0)
(30,34,0)
(50,51,0)
(7,31,0)
(45,39,0)
(36,50,0)
(5,36,0)
(31,42,0)
(41,37,0)
(23,25,1)
(35,11,1)
(40,36,1)
(50,36,1)
(38,13,1)
(22,38,1)
(26,18,1)
(18,49,1)
(14,18,1)
(29,17,1)
(43,8,1)
(20,26,1)
(3,46,1)
(1,3,1)
(24,10,1)
(31,7,1)
(16,30,1)
(50,24,1)
(7,20,1)
(19,29,1)
(49,43,1)
(5,0,1)
(10,40,1)
(36,5,1)
(16,17,1)
(26,22,1)
(13,4,1)
(50,18,1)
(39,45,1)
(9,51,1)
(8,15,1)
(17,51,1)
(25,14,1)
(17,39,1)
(14,28,1)
(4,18,1)
(51,50,1)
(20,33,1)
(28,20,1)
(6,19,1)
(30,51,1)
(3,16,1)
(15,1,1)
(45,9,1)
(0,23,1)
(46,35,1)
(28,31,1)
(1,46,1)
(30,6,1)
(8,46,1)
(33,26,1)
(47,8,1)
(1,8,2)
(9,8,2)
(33,8,2)
(13,8,2)
(50,8,2)
(14,18,2)
(30,51,2)
(19,17,2)
(17,39,2)
(24,8,2)
(49,8,2)
(4,8,2)
(38,8,2)
(50,18,2)
(8,8,2)
(26,18,2)
(8,46,2)
(31,20,2)
(6,17,2)
(17,8,2)
(0,8,2)
(22,8,2)
(20,8,2)
(43,8,2)
(30,17,2)
(15,8,2)
(3,46,2)
(26,8,2)
(10,8,2)
(3,8,2)
(5,8,2)
(36,8,2)
(45,8,2)
(7,20,2)
(20,26,2)
(16,8,2)
(51,8,2)
(25,8,2)
(14,8,2)
(18,8,2)
(23,8,2)
(17,51,2)
(40,8,2)
(51,50,2)
(39,8,2)
(28,8,2)
(50,36,2)
(29,17,2)
(50,24,2)
-----------------------------------
(0,O_RDWR)
(1,j)
(2,if (GetTempFileNameA(".", "bad", 0, filename)
(3,j++)
(4,".")
(5,O_CREAT)
(6,fileDesc)
(7,1)
(8,j < 1)
(9,fileDesc)
(10,S_IWRITE)
(11,j)
(12,filename)
(13,"bad")
(14,printLine(filename)
(15,1)
(16,j)
(17,fileDesc != -1)
(18,filename[MAX_PATH] = "")
(19,printLine("Temporary file was opened...now closing file")
(20,GetTempFileNameA(".", "bad", 0, filename)
(21,j)
(22,filename)
(23,filename)
(24,S_IREAD|S_IWRITE)
(25,fileDesc)
(26,GetTempFileNameA(".", "bad", 0, filename)
(27,fileDesc)
(28,filename)
(29,"Temporary file was opened...now closing file")
(30,CLOSE(fileDesc)
(31,exit(1)
(32,)
(33,0)
(34,)
(35,0)
(36,O_RDWR|O_CREAT)
(37,)
(38,0)
(39,-1)
(40,S_IREAD)
(41,for(j = 0; j < 1; j++)
(42,)
(43,filename)
(44,)
(45,1)
(46,j = 0)
(47,RET)
(48,if (fileDesc != -1)
(49,"")
(50,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(51,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
