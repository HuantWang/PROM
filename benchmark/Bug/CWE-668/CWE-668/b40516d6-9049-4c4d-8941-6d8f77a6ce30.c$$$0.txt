-----label-----
1
-----code-----
static void badSink(wchar_t * data)
{
    if(badStatic)
    {
        {
            HANDLE pHandle;
            wchar_t * username = L"User";
            wchar_t * domain = L"Domain";
            /* POTENTIAL FLAW: Attempt to login user with password from the source */
            if (LogonUserW(
                        username,
                        domain,
                        data,
                        LOGON32_LOGON_NETWORK,
                        LOGON32_PROVIDER_DEFAULT,
                        &pHandle) != 0)
            {
                printLine("User logged in successfully.");
                CloseHandle(pHandle);
            }
            else
            {
                printLine("Unable to login.");
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
12,13
14,15
15,16
15,17
15,18
15,19
16,17
17,18
17,19
18,19
20,21
22,23
23,24
23,25
25,26
25,27
25,28
28,29
30,31
31,32
31,33
33,34
33,35
33,36
36,37
38,39
38,40
38,41
39,40
39,41
40,41
40,42
40,43
40,44
40,45
40,46
40,47
41,42
43,44
45,46
47,48
49,50
51,52
53,54
54,55
57,58
57,59
58,59
59,60
59,61
60,61
63,64
64,65
64,66
65,66
67,68
69,70
70,71
71,72
71,73
72,73
-----nextToken-----
2,4,6,8,9,13,19,21,24,26,27,29,32,34,35,37,42,44,46,48,50,52,55,56,61,62,66,68,73,74
-----computeFrom-----
39,40
39,41
-----guardedBy-----
55,68
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void badSink(wchar_t * data){    if(badStatic)    {        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }}
static void
badSink(wchar_t * data)
badSink
wchar_t * data
wchar_t
* data
*
data
{    if(badStatic)    {        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }}
if(badStatic)    {        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }
badStatic
badStatic
{        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }
{            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
wchar_t * username = L"User";
wchar_t * username = L"User";
wchar_t
* username = L"User"
*
username
= L"User"
L"User"
wchar_t * domain = L"Domain";
wchar_t * domain = L"Domain";
wchar_t
* domain = L"Domain"
*
domain
= L"Domain"
L"Domain"
if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }
LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0
LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle)
LogonUserW
LogonUserW
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{                printLine("User logged in successfully.");                CloseHandle(pHandle);            }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{                printLine("Unable to login.");            }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(22,14,0)
(5,28,0)
(25,28,0)
(21,22,0)
(19,17,0)
(2,28,0)
(28,5,0)
(28,2,0)
(27,2,0)
(8,19,0)
(1,22,0)
(24,9,0)
(28,0,0)
(26,22,0)
(15,28,0)
(6,24,0)
(13,23,0)
(20,28,0)
(4,9,0)
(16,28,0)
(10,4,0)
(12,5,0)
(11,28,0)
(18,22,0)
(28,5,1)
(3,7,1)
(11,15,1)
(10,2,1)
(15,25,1)
(6,4,1)
(12,16,1)
(1,7,1)
(8,2,1)
(3,19,1)
(27,28,1)
(16,11,1)
(20,21,1)
(2,28,1)
(5,12,1)
(24,6,1)
(2,27,1)
(4,10,1)
(21,1,1)
(19,8,1)
(28,0,1)
(25,20,1)
(3,24,1)
(28,5,2)
(28,7,2)
(25,7,2)
(20,7,2)
(21,7,2)
(4,2,2)
(24,2,2)
(5,7,2)
(28,0,2)
(27,7,2)
(16,7,2)
(2,28,2)
(12,7,2)
(8,2,2)
(10,2,2)
(19,2,2)
(11,7,2)
(15,7,2)
(2,7,2)
(6,2,2)
(1,7,2)
-----------------------------------
(0,wchar_t * data)
(1,"User")
(2,LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(3,RET)
(4,printLine("User logged in successfully.")
(5,&pHandle)
(6,pHandle)
(7,badStatic)
(8,"Unable to login.")
(9,)
(10,"User logged in successfully.")
(11,LOGON32_LOGON_NETWORK)
(12,pHandle)
(13,if(badStatic)
(14,)
(15,data)
(16,LOGON32_PROVIDER_DEFAULT)
(17,)
(18,pHandle)
(19,printLine("Unable to login.")
(20,username)
(21,"Domain")
(22,)
(23,)
(24,CloseHandle(pHandle)
(25,domain)
(26,if (LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(27,0)
(28,LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
