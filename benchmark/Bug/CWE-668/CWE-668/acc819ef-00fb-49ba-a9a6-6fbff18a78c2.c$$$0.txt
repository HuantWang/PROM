-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_01_bad()
{
    {
        wchar_t filename[MAX_PATH] = L"";
        int fileDesc;
        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,
        * leading to an inescapable race condition when we try to open it again. */
        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)
        {
            exit(1);
        }
        printWLine(filename);
        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
        if (fileDesc != -1)
        {
            printLine("Temporary file was opened...now closing file");
            CLOSE(fileDesc);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
6,9
6,10
6,11
6,12
7,8
8,9
8,10
10,11
10,12
10,13
12,13
13,14
15,16
17,18
18,19
18,20
20,21
22,23
22,24
23,24
23,25
24,25
24,26
24,27
24,28
24,29
25,26
30,31
33,34
34,35
35,36
35,37
36,37
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
47,48
49,50
49,51
49,52
49,53
50,51
52,53
54,55
54,56
55,56
57,58
59,60
59,61
60,61
62,63
64,65
64,66
65,66
65,67
66,67
68,69
70,71
70,72
71,72
72,73
72,74
73,74
76,77
77,78
77,79
78,79
80,81
-----nextToken-----
2,4,9,11,14,16,19,21,26,27,28,29,31,32,37,38,42,44,48,51,53,56,58,61,63,67,69,74,75,79,81
-----computeFrom-----
23,24
23,25
46,47
46,48
54,55
54,56
59,60
59,61
65,66
65,67
-----guardedBy-----
67,81
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_01_bad(){    {        wchar_t filename[MAX_PATH] = L"";        int fileDesc;        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,        * leading to an inescapable race condition when we try to open it again. */        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }        printWLine(filename);        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }    }}
void
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_01_bad()
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_01_bad
{    {        wchar_t filename[MAX_PATH] = L"";        int fileDesc;        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,        * leading to an inescapable race condition when we try to open it again. */        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }        printWLine(filename);        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }    }}
{        wchar_t filename[MAX_PATH] = L"";        int fileDesc;        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,        * leading to an inescapable race condition when we try to open it again. */        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }        printWLine(filename);        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }    }
wchar_t filename[MAX_PATH] = L"";
wchar_t filename[MAX_PATH] = L"";
wchar_t
filename[MAX_PATH] = L""
filename
[MAX_PATH]
MAX_PATH
MAX_PATH
= L""
L""
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }
GetTempFileNameW(L".", L"bad", 0, filename) == 0
GetTempFileNameW(L".", L"bad", 0, filename)
GetTempFileNameW
GetTempFileNameW
L"."
L"bad"
0
filename
filename
0
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
printWLine(filename);
printWLine(filename)
printWLine
printWLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }
fileDesc != -1
fileDesc
fileDesc
-1
1
{            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
-----joern-----
(12,1,0)
(23,16,0)
(1,17,0)
(3,10,0)
(25,22,0)
(15,21,0)
(18,27,0)
(9,25,0)
(25,10,0)
(27,29,0)
(28,27,0)
(6,16,0)
(24,6,0)
(17,10,0)
(10,6,0)
(5,27,0)
(14,19,0)
(20,28,0)
(16,6,0)
(10,27,0)
(21,22,0)
(6,10,0)
(0,16,0)
(13,14,0)
(17,1,0)
(2,24,0)
(26,6,0)
(11,27,0)
(19,27,0)
(7,24,0)
(8,17,0)
(6,24,0)
(4,25,1)
(2,7,1)
(1,12,1)
(14,13,1)
(6,16,1)
(7,26,1)
(16,0,1)
(20,14,1)
(28,20,1)
(3,28,1)
(6,24,1)
(26,3,1)
(23,24,1)
(10,6,1)
(13,18,1)
(24,2,1)
(8,10,1)
(17,10,1)
(4,17,1)
(12,8,1)
(21,15,1)
(17,1,1)
(25,9,1)
(0,23,1)
(15,17,1)
(9,21,1)
(25,10,1)
(9,17,2)
(17,10,2)
(25,10,2)
(6,16,2)
(10,6,2)
(17,1,2)
(21,17,2)
(15,17,2)
(6,24,2)
(25,17,2)
-----------------------------------
(0,S_IWRITE)
(1,-1)
(2,O_CREAT)
(3,fileDesc)
(4,RET)
(5,fileDesc)
(6,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(7,O_RDWR)
(8,fileDesc)
(9,fileDesc)
(10,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(11,if (fileDesc != -1)
(12,1)
(13,1)
(14,exit(1)
(15,"Temporary file was opened...now closing file")
(16,S_IREAD|S_IWRITE)
(17,fileDesc != -1)
(18,"")
(19,)
(20,filename)
(21,printLine("Temporary file was opened...now closing file")
(22,)
(23,S_IREAD)
(24,O_RDWR|O_CREAT)
(25,CLOSE(fileDesc)
(26,filename)
(27,)
(28,printWLine(filename)
(29,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
