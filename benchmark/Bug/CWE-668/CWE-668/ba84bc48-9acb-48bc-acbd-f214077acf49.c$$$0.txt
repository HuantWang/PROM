-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_18_bad()
{
    char * data;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    goto source;
source:
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (250-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */
    PUTENV(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
29,30
29,31
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
48,49
48,50
51,52
51,53
52,53
52,54
53,54
53,55
55,56
58,59
58,60
59,60
60,61
60,62
61,62
63,64
63,65
63,66
64,65
66,67
69,70
69,71
70,71
70,72
71,72
73,74
75,76
75,77
76,77
76,78
77,78
77,79
78,79
78,80
78,81
78,82
79,80
81,82
81,83
82,83
84,85
86,87
86,88
87,88
87,89
90,91
91,92
91,93
93,94
95,96
97,98
99,100
99,101
100,101
101,102
101,103
102,103
105,106
106,107
106,108
107,108
107,109
108,109
110,111
113,114
114,115
114,116
115,116
117,118
119,120
120,121
120,122
121,122
123,124
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,28,30,35,37,41,43,47,49,50,54,56,57,62,65,67,68,72,74,80,83,85,88,89,92,94,96,98,103,104,109,111,112,116,118,122,124
-----computeFrom-----
22,23
22,24
52,53
52,54
53,54
53,55
60,61
60,62
70,71
70,72
77,78
77,79
81,82
81,83
91,92
91,93
106,107
106,108
-----guardedBy-----
56,111
74,98
72,118
83,109
94,111
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_18_bad(){    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    goto source;source:    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_file_18_bad()
CWE427_Uncontrolled_Search_Path_Element__char_file_18_bad
{    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    goto source;source:    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
goto source;
source
source:    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
source
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(250-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
PUTENV(data);
PUTENV(data)
PUTENV
PUTENV
data
data
-----joern-----
(5,28,0)
(57,34,0)
(50,59,0)
(12,28,0)
(15,2,0)
(12,40,0)
(24,38,0)
(9,43,0)
(55,45,0)
(0,17,0)
(59,57,0)
(49,54,0)
(17,45,0)
(18,28,0)
(52,7,0)
(16,20,0)
(50,31,0)
(59,8,0)
(25,38,0)
(51,7,0)
(54,7,0)
(30,7,0)
(46,20,0)
(27,7,0)
(47,5,0)
(59,50,0)
(60,57,0)
(53,28,0)
(4,58,0)
(53,50,0)
(57,38,0)
(8,59,0)
(45,52,0)
(14,52,0)
(1,11,0)
(20,59,0)
(33,45,0)
(6,34,0)
(31,50,0)
(40,32,0)
(26,11,0)
(43,7,0)
(39,5,0)
(58,5,0)
(5,58,0)
(35,12,0)
(36,12,0)
(26,57,0)
(59,20,0)
(45,7,0)
(56,59,0)
(29,53,0)
(42,7,0)
(12,45,0)
(28,17,0)
(38,57,0)
(20,28,0)
(21,10,0)
(2,32,0)
(37,53,0)
(54,45,0)
(50,53,0)
(28,43,0)
(20,45,0)
(10,57,0)
(23,43,0)
(41,10,0)
(17,28,0)
(19,8,0)
(13,52,0)
(22,43,0)
(3,26,0)
(48,40,0)
(44,54,1)
(50,53,1)
(58,4,1)
(45,52,1)
(20,45,1)
(3,40,1)
(53,29,1)
(40,48,1)
(55,52,1)
(41,21,1)
(5,28,1)
(17,45,1)
(59,56,1)
(54,49,1)
(16,46,1)
(12,45,1)
(8,59,1)
(24,60,1)
(53,28,1)
(58,5,1)
(45,33,1)
(12,28,1)
(28,17,1)
(29,37,1)
(26,3,1)
(49,10,1)
(8,19,1)
(4,5,1)
(18,42,1)
(50,31,1)
(48,12,1)
(59,50,1)
(26,57,1)
(25,24,1)
(37,20,1)
(10,57,1)
(20,16,1)
(14,13,1)
(0,18,1)
(3,8,1)
(49,26,1)
(59,57,1)
(20,28,1)
(2,15,1)
(15,8,1)
(60,58,1)
(52,14,1)
(47,39,1)
(36,35,1)
(5,47,1)
(19,59,1)
(38,25,1)
(54,45,1)
(35,2,1)
(12,36,1)
(57,38,1)
(17,0,1)
(33,55,1)
(59,20,1)
(42,45,1)
(39,28,1)
(46,10,1)
(10,41,1)
(21,57,1)
(56,50,1)
(49,58,1)
(59,20,2)
(26,10,2)
(21,58,2)
(20,45,2)
(36,8,2)
(20,10,2)
(12,45,2)
(58,5,2)
(12,28,2)
(25,58,2)
(2,8,2)
(50,53,2)
(50,31,2)
(8,59,2)
(60,58,2)
(53,10,2)
(38,58,2)
(8,10,2)
(37,10,2)
(3,10,2)
(57,38,2)
(59,50,2)
(15,8,2)
(24,58,2)
(41,58,2)
(29,10,2)
(5,28,2)
(48,8,2)
(56,10,2)
(19,10,2)
(20,28,2)
(12,8,2)
(17,45,2)
(46,10,2)
(16,10,2)
(26,57,2)
(28,17,2)
(54,45,2)
(59,57,2)
(45,52,2)
(57,58,2)
(40,8,2)
(35,8,2)
(53,28,2)
(59,10,2)
(50,10,2)
(10,57,2)
(10,58,2)
-----------------------------------
(0,data)
(1,if (fgets(data+dataLen, (int)
(2,printLine("fgets()
(3,pFile)
(4,1)
(5,250-dataLen)
(6,if (pFile != NULL)
(7,)
(8,fgets(data+dataLen, (int)
(9,if (250-dataLen > 1)
(10,pFile != NULL)
(11,)
(12,data[dataLen])
(13,dataBuffer)
(14,"PATH=")
(15,"fgets()
(16,dataLen)
(17,strlen(data)
(18,dataLen)
(19,NULL)
(20,data+dataLen)
(21,pFile)
(22,pFile)
(23,dataLen)
(24,FILENAME)
(25,"r")
(26,fclose(pFile)
(27,dataBuffer)
(28,dataLen = strlen(data)
(29,dataLen)
(30,source:)
(31,int)
(32,)
(33,dataBuffer)
(34,)
(35,data)
(36,dataLen)
(37,250)
(38,fopen(FILENAME, "r")
(39,250)
(40,data[dataLen] = \\\'\\\\0\\\')
(41,NULL)
(42,goto source;)
(43,)
(44,RET)
(45,data = dataBuffer)
(46,data)
(47,dataLen)
(48,\\\'\\\\0\\\')
(49,data)
(50,(int)
(51,data)
(52,dataBuffer[250] = "PATH=")
(53,250-dataLen)
(54,PUTENV(data)
(55,data)
(56,pFile)
(57,pFile = fopen(FILENAME, "r")
(58,250-dataLen > 1)
(59,fgets(data+dataLen, (int)
(60,pFile)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
