-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_64_bad()
{
    char * data;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (250-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE427_Uncontrolled_Search_Path_Element__char_file_64b_badSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
28,29
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
38,39
40,41
41,42
41,43
42,43
44,45
44,46
47,48
47,49
48,49
48,50
49,50
49,51
51,52
54,55
54,56
55,56
56,57
56,58
57,58
59,60
59,61
59,62
60,61
62,63
65,66
65,67
66,67
66,68
67,68
69,70
71,72
71,73
72,73
72,74
73,74
73,75
74,75
74,76
74,77
74,78
75,76
77,78
77,79
78,79
80,81
82,83
82,84
83,84
83,85
86,87
87,88
87,89
89,90
91,92
93,94
95,96
95,97
96,97
97,98
97,99
98,99
101,102
102,103
102,104
103,104
103,105
104,105
106,107
109,110
110,111
110,112
111,112
113,114
115,116
116,117
116,118
117,118
119,120
120,121
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,31,33,37,39,43,45,46,50,52,53,58,61,63,64,68,70,76,79,81,84,85,88,90,92,94,99,100,105,107,108,112,114,118,121
-----computeFrom-----
22,23
22,24
48,49
48,50
49,50
49,51
56,57
56,58
66,67
66,68
73,74
73,75
77,78
77,79
87,88
87,89
102,103
102,104
-----guardedBy-----
52,107
70,94
68,114
79,105
90,107
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_64_bad(){    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE427_Uncontrolled_Search_Path_Element__char_file_64b_badSink(&data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_file_64_bad()
CWE427_Uncontrolled_Search_Path_Element__char_file_64_bad
{    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE427_Uncontrolled_Search_Path_Element__char_file_64b_badSink(&data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(250-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE427_Uncontrolled_Search_Path_Element__char_file_64b_badSink(&data);
CWE427_Uncontrolled_Search_Path_Element__char_file_64b_badSink(&data)
CWE427_Uncontrolled_Search_Path_Element__char_file_64b_badSink
CWE427_Uncontrolled_Search_Path_Element__char_file_64b_badSink
&data
data
data
-----joern-----
(31,58,0)
(0,58,0)
(5,56,0)
(37,47,0)
(34,32,0)
(2,16,0)
(58,0,0)
(5,54,0)
(0,11,0)
(33,30,0)
(51,57,0)
(54,55,0)
(27,50,0)
(43,8,0)
(36,54,0)
(58,32,0)
(24,50,0)
(46,24,0)
(4,9,0)
(15,16,0)
(59,56,0)
(32,58,0)
(17,57,0)
(0,47,0)
(21,12,0)
(41,27,0)
(23,30,0)
(9,15,0)
(52,43,0)
(43,57,0)
(9,26,0)
(58,31,0)
(41,43,0)
(40,16,0)
(30,43,0)
(3,9,0)
(42,53,0)
(11,0,0)
(54,12,0)
(8,57,0)
(32,15,0)
(1,27,0)
(6,41,0)
(14,43,0)
(48,43,0)
(0,54,0)
(44,41,0)
(22,8,0)
(53,54,0)
(19,53,0)
(20,5,0)
(15,48,0)
(41,15,0)
(13,16,0)
(25,55,0)
(23,57,0)
(16,57,0)
(48,15,0)
(38,12,0)
(28,26,0)
(18,15,0)
(39,0,0)
(29,48,0)
(35,11,0)
(7,32,0)
(26,9,0)
(49,8,0)
(11,43,0)
(11,15,0)
(12,54,0)
(47,0,0)
(10,11,0)
(30,23,0)
(30,33,1)
(22,49,1)
(1,41,1)
(11,43,1)
(7,11,1)
(48,43,1)
(3,15,1)
(33,53,1)
(43,14,1)
(46,47,1)
(14,52,1)
(11,10,1)
(30,43,1)
(15,48,1)
(39,58,1)
(58,32,1)
(21,38,1)
(44,6,1)
(54,12,1)
(29,18,1)
(0,11,1)
(0,39,1)
(4,3,1)
(43,8,1)
(18,43,1)
(41,15,1)
(9,15,1)
(41,44,1)
(26,9,1)
(10,35,1)
(32,34,1)
(5,20,1)
(5,54,1)
(20,47,1)
(12,21,1)
(6,24,1)
(19,54,1)
(45,23,1)
(37,0,1)
(53,42,1)
(52,8,1)
(48,29,1)
(23,30,1)
(41,43,1)
(47,37,1)
(42,19,1)
(8,22,1)
(20,27,1)
(38,36,1)
(47,0,1)
(26,28,1)
(28,9,1)
(36,26,1)
(58,31,1)
(0,54,1)
(27,1,1)
(33,26,1)
(53,54,1)
(34,7,1)
(9,4,1)
(24,46,1)
(11,15,1)
(32,15,1)
(35,53,1)
(33,5,1)
(0,58,1)
(19,26,2)
(10,53,2)
(11,15,2)
(58,31,2)
(32,53,2)
(35,53,2)
(53,54,2)
(32,15,2)
(39,53,2)
(42,26,2)
(7,53,2)
(41,43,2)
(48,43,2)
(15,48,2)
(38,26,2)
(41,47,2)
(58,32,2)
(26,9,2)
(23,30,2)
(34,53,2)
(58,53,2)
(54,26,2)
(53,26,2)
(27,47,2)
(24,47,2)
(36,26,2)
(1,47,2)
(20,53,2)
(11,43,2)
(41,15,2)
(5,53,2)
(47,0,2)
(0,11,2)
(11,53,2)
(46,47,2)
(54,12,2)
(6,47,2)
(37,53,2)
(5,54,2)
(44,47,2)
(12,26,2)
(0,53,2)
(0,54,2)
(47,53,2)
(9,15,2)
(30,43,2)
(21,26,2)
(0,58,2)
(43,8,2)
-----------------------------------
(0,fgets(data+dataLen, (int)
(1,\\\'\\\\0\\\')
(2,dataLen)
(3,250)
(4,dataLen)
(5,fclose(pFile)
(6,data)
(7,250)
(8,dataBuffer[250] = "PATH=")
(9,250-dataLen)
(10,dataLen)
(11,data+dataLen)
(12,fopen(FILENAME, "r")
(13,pFile)
(14,dataBuffer)
(15,dataLen = strlen(data)
(16,)
(17,dataBuffer)
(18,dataLen)
(19,pFile)
(20,pFile)
(21,"r")
(22,"PATH=")
(23,CWE427_Uncontrolled_Search_Path_Element__char_file_64b_badSink(&data)
(24,printLine("fgets()
(25,if (pFile != NULL)
(26,250-dataLen > 1)
(27,data[dataLen] = \\\'\\\\0\\\')
(28,1)
(29,data)
(30,&data)
(31,int)
(32,250-dataLen)
(33,data)
(34,dataLen)
(35,data)
(36,pFile)
(37,NULL)
(38,FILENAME)
(39,pFile)
(40,if (250-dataLen > 1)
(41,data[dataLen])
(42,NULL)
(43,data = dataBuffer)
(44,dataLen)
(45,RET)
(46,"fgets()
(47,fgets(data+dataLen, (int)
(48,strlen(data)
(49,dataBuffer)
(50,)
(51,data)
(52,data)
(53,pFile != NULL)
(54,pFile = fopen(FILENAME, "r")
(55,)
(56,)
(57,)
(58,(int)
(59,if (fgets(data+dataLen, (int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
