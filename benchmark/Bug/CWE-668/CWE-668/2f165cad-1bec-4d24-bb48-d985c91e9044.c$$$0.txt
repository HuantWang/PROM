-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_16_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[250] = L"PATH=";
    data = dataBuffer;
    while(1)
    {
        {
            /* Read input from a file */
            size_t dataLen = wcslen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (250-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                    {
                        printLine("fgetws() failed");
                        /* Restore NUL terminator if fgetws fails */
                        data[dataLen] = L'\0';
                    }
                    fclose(pFile);
                }
            }
        }
        break;
    }
    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */
    PUTENV(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
29,30
29,31
30,31
30,32
30,33
31,32
32,33
32,34
33,34
35,36
35,37
37,38
38,39
38,40
39,40
41,42
43,44
44,45
44,46
45,46
47,48
47,49
50,51
50,52
51,52
51,53
52,53
52,54
54,55
57,58
57,59
58,59
59,60
59,61
60,61
62,63
62,64
62,65
63,64
65,66
68,69
68,70
69,70
69,71
70,71
72,73
74,75
74,76
75,76
75,77
76,77
76,78
77,78
77,79
77,80
77,81
78,79
80,81
80,82
81,82
83,84
85,86
85,87
86,87
86,88
89,90
90,91
90,92
92,93
94,95
96,97
98,99
98,100
99,100
100,101
100,102
101,102
104,105
105,106
105,107
106,107
106,108
107,108
109,110
112,113
113,114
113,115
114,115
116,117
119,120
120,121
120,122
121,122
123,124
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,28,34,36,40,42,46,48,49,53,55,56,61,64,66,67,71,73,79,82,84,87,88,91,93,95,97,102,103,108,110,111,115,117,118,122,124
-----computeFrom-----
22,23
22,24
51,52
51,53
52,53
52,54
59,60
59,61
69,70
69,71
76,77
76,78
80,81
80,82
90,91
90,92
105,106
105,107
-----guardedBy-----
55,110
73,97
71,117
82,108
93,110
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_16_bad(){    wchar_t * data;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    while(1)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }        break;    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
void
CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_16_bad()
CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_16_bad
{    wchar_t * data;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    while(1)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }        break;    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[250] = L"PATH=";
wchar_t dataBuffer[250] = L"PATH=";
wchar_t
dataBuffer[250] = L"PATH="
dataBuffer
[250]
250
= L"PATH="
L"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
while(1)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }        break;    }
1
{        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }        break;    }
{            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }
if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }
fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(250-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
break;
PUTENV(data);
PUTENV(data)
PUTENV
PUTENV
data
data
-----joern-----
(25,15,0)
(24,55,0)
(19,2,0)
(0,41,0)
(5,8,0)
(21,43,0)
(35,4,0)
(4,51,0)
(55,24,0)
(16,5,0)
(2,37,0)
(24,29,0)
(8,51,0)
(49,55,0)
(2,43,0)
(9,50,0)
(15,25,0)
(52,15,0)
(36,15,0)
(6,14,0)
(53,43,0)
(44,50,0)
(17,0,0)
(55,2,0)
(34,25,0)
(22,43,0)
(29,24,0)
(28,8,0)
(41,0,0)
(39,24,0)
(37,8,0)
(46,51,0)
(18,25,0)
(29,45,0)
(15,20,0)
(4,8,0)
(54,48,0)
(0,2,0)
(30,8,0)
(1,5,0)
(10,51,0)
(47,52,0)
(48,31,0)
(37,2,0)
(33,51,0)
(5,29,0)
(13,0,0)
(32,55,0)
(23,20,0)
(29,5,0)
(29,15,0)
(38,29,0)
(24,39,0)
(50,15,0)
(5,2,0)
(40,37,0)
(43,11,0)
(42,11,0)
(26,31,0)
(3,41,0)
(52,14,0)
(45,29,0)
(27,45,0)
(44,9,1)
(47,45,1)
(49,32,1)
(45,27,1)
(41,3,1)
(29,38,1)
(5,2,1)
(15,25,1)
(50,15,1)
(45,29,1)
(47,26,1)
(26,48,1)
(42,41,1)
(8,28,1)
(4,8,1)
(24,55,1)
(54,45,1)
(55,49,1)
(38,24,1)
(35,7,1)
(12,4,1)
(50,44,1)
(27,29,1)
(2,37,1)
(42,50,1)
(0,13,1)
(55,2,1)
(4,35,1)
(0,2,1)
(17,2,1)
(41,0,1)
(1,50,1)
(25,34,1)
(52,47,1)
(28,30,1)
(34,18,1)
(32,5,1)
(5,8,1)
(35,42,1)
(37,40,1)
(48,54,1)
(36,41,1)
(29,15,1)
(29,5,1)
(9,15,1)
(16,1,1)
(29,24,1)
(19,7,1)
(24,39,1)
(18,36,1)
(42,52,1)
(37,8,1)
(3,0,1)
(52,15,1)
(13,17,1)
(5,16,1)
(40,19,1)
(7,8,1)
(30,10,1)
(38,50,2)
(36,41,2)
(50,41,2)
(24,50,2)
(2,37,2)
(3,7,2)
(18,41,2)
(42,7,2)
(50,15,2)
(24,39,2)
(40,7,2)
(41,7,2)
(0,2,2)
(44,41,2)
(19,7,2)
(26,45,2)
(15,41,2)
(5,8,2)
(54,45,2)
(48,45,2)
(37,8,2)
(29,50,2)
(29,24,2)
(37,7,2)
(45,29,2)
(52,50,2)
(41,0,2)
(15,25,2)
(29,15,2)
(45,50,2)
(49,50,2)
(16,50,2)
(47,50,2)
(55,50,2)
(9,41,2)
(5,50,2)
(29,5,2)
(2,7,2)
(4,8,2)
(13,7,2)
(32,50,2)
(52,15,2)
(34,41,2)
(25,41,2)
(24,55,2)
(55,2,2)
(5,2,2)
(0,7,2)
(1,50,2)
(17,7,2)
(27,50,2)
-----------------------------------
(0,250-dataLen)
(1,data)
(2,dataLen = wcslen(data)
(3,1)
(4,PUTENV(data)
(5,data+dataLen)
(6,if (fgetws(data+dataLen, (int)
(7,1)
(8,data = dataBuffer)
(9,pFile)
(10,"PATH=")
(11,)
(12,RET)
(13,dataLen)
(14,)
(15,pFile = fopen(FILENAME, "r")
(16,dataLen)
(17,250)
(18,FILENAME)
(19,dataLen)
(20,)
(21,dataLen)
(22,pFile)
(23,if (pFile != NULL)
(24,(int)
(25,fopen(FILENAME, "r")
(26,\\\'\\\\0\\\')
(27,NULL)
(28,dataBuffer)
(29,fgetws(data+dataLen, (int)
(30,data)
(31,)
(32,250)
(33,data)
(34,"r")
(35,data)
(36,pFile)
(37,wcslen(data)
(38,pFile)
(39,int)
(40,data)
(41,250-dataLen > 1)
(42,break;)
(43,)
(44,NULL)
(45,fgetws(data+dataLen, (int)
(46,while(1)
(47,pFile)
(48,printLine("fgetws()
(49,dataLen)
(50,pFile != NULL)
(51,)
(52,fclose(pFile)
(53,if (250-dataLen > 1)
(54,"fgetws()
(55,250-dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
