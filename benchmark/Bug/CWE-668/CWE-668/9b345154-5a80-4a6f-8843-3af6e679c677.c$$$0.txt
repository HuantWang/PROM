-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_07_bad()
{
    char * data;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    if(staticFive==5)
    {
        {
            /* Read input from a file */
            size_t dataLen = strlen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (250-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                    {
                        printLine("fgets() failed");
                        /* Restore NUL terminator if fgets fails */
                        data[dataLen] = '\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */
    PUTENV(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
29,30
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
50,51
50,52
53,54
53,55
54,55
54,56
55,56
55,57
57,58
60,61
60,62
61,62
62,63
62,64
63,64
65,66
65,67
65,68
66,67
68,69
71,72
71,73
72,73
72,74
73,74
75,76
77,78
77,79
78,79
78,80
79,80
79,81
80,81
80,82
80,83
80,84
81,82
83,84
83,85
84,85
86,87
88,89
88,90
89,90
89,91
92,93
93,94
93,95
95,96
97,98
99,100
101,102
101,103
102,103
103,104
103,105
104,105
107,108
108,109
108,110
109,110
109,111
110,111
112,113
115,116
116,117
116,118
117,118
119,120
121,122
122,123
122,124
123,124
125,126
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,30,31,37,39,43,45,49,51,52,56,58,59,64,67,69,70,74,76,82,85,87,90,91,94,96,98,100,105,106,111,113,114,118,120,124,126
-----computeFrom-----
22,23
22,24
28,29
28,30
54,55
54,56
55,56
55,57
62,63
62,64
72,73
72,74
79,80
79,81
83,84
83,85
93,94
93,95
108,109
108,110
-----guardedBy-----
58,113
76,100
74,120
85,111
96,113
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_07_bad(){    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    if(staticFive==5)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_file_07_bad()
CWE427_Uncontrolled_Search_Path_Element__char_file_07_bad
{    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    if(staticFive==5)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticFive==5)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(250-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
PUTENV(data);
PUTENV(data)
PUTENV
PUTENV
data
data
-----joern-----
(25,0,0)
(4,48,0)
(61,9,0)
(58,26,0)
(51,29,0)
(42,59,0)
(6,32,0)
(29,48,0)
(11,52,0)
(50,29,0)
(10,25,0)
(55,10,0)
(33,1,0)
(16,45,0)
(43,59,0)
(37,46,0)
(57,8,0)
(24,9,0)
(45,41,0)
(41,26,0)
(52,45,0)
(25,1,0)
(62,39,0)
(26,41,0)
(5,6,0)
(45,52,0)
(8,34,0)
(28,6,0)
(6,41,0)
(9,29,0)
(29,59,0)
(32,7,0)
(10,55,0)
(59,48,0)
(53,41,0)
(4,29,0)
(27,1,0)
(60,25,0)
(63,45,0)
(30,23,0)
(49,53,0)
(44,38,0)
(14,48,0)
(13,8,0)
(18,46,0)
(54,23,0)
(56,27,0)
(40,47,0)
(19,0,0)
(3,41,0)
(53,10,0)
(1,38,0)
(25,9,0)
(10,53,0)
(17,20,0)
(36,48,0)
(12,4,0)
(25,10,0)
(27,20,0)
(21,53,0)
(6,29,0)
(26,29,0)
(41,8,0)
(1,39,0)
(9,25,0)
(31,38,0)
(15,32,0)
(22,48,0)
(47,7,0)
(2,8,0)
(0,25,0)
(38,1,0)
(9,41,0)
(46,1,0)
(63,16,1)
(45,63,1)
(23,54,1)
(52,11,1)
(46,1,1)
(41,26,1)
(25,10,1)
(12,27,1)
(35,4,1)
(11,45,1)
(26,58,1)
(37,1,1)
(47,40,1)
(49,21,1)
(27,56,1)
(61,46,1)
(0,25,1)
(4,12,1)
(53,41,1)
(59,42,1)
(42,43,1)
(10,55,1)
(27,1,1)
(25,9,1)
(58,3,1)
(29,51,1)
(6,5,1)
(9,29,1)
(56,32,1)
(38,31,1)
(44,33,1)
(18,37,1)
(25,1,1)
(29,59,1)
(5,28,1)
(12,46,1)
(12,23,1)
(31,44,1)
(3,23,1)
(40,0,1)
(1,38,1)
(45,41,1)
(50,59,1)
(30,29,1)
(12,52,1)
(0,19,1)
(33,52,1)
(15,6,1)
(52,45,1)
(53,49,1)
(16,41,1)
(46,18,1)
(26,29,1)
(10,53,1)
(9,24,1)
(6,29,1)
(60,10,1)
(56,0,1)
(19,25,1)
(25,60,1)
(9,41,1)
(21,9,1)
(24,61,1)
(54,30,1)
(32,15,1)
(6,41,1)
(4,29,1)
(28,47,1)
(51,50,1)
(63,23,2)
(0,46,2)
(60,46,2)
(53,41,2)
(18,52,2)
(44,52,2)
(29,59,2)
(41,23,2)
(9,29,2)
(25,46,2)
(6,0,2)
(45,23,2)
(47,0,2)
(25,9,2)
(58,23,2)
(1,52,2)
(52,45,2)
(28,0,2)
(1,38,2)
(25,10,2)
(19,46,2)
(41,26,2)
(11,23,2)
(33,52,2)
(0,25,2)
(26,29,2)
(49,46,2)
(27,46,2)
(26,23,2)
(46,52,2)
(21,46,2)
(27,1,2)
(15,0,2)
(31,52,2)
(38,52,2)
(10,46,2)
(53,46,2)
(10,55,2)
(24,46,2)
(46,1,2)
(45,41,2)
(9,46,2)
(5,0,2)
(16,23,2)
(56,46,2)
(25,1,2)
(61,46,2)
(4,29,2)
(6,29,2)
(6,41,2)
(37,52,2)
(3,23,2)
(52,23,2)
(10,53,2)
(40,0,2)
(9,41,2)
(32,0,2)
-----------------------------------
(0,fgets(data+dataLen, (int)
(1,pFile = fopen(FILENAME, "r")
(2,pFile)
(3,dataLen)
(4,PUTENV(data)
(5,dataLen)
(6,data[dataLen])
(7,)
(8,)
(9,data+dataLen)
(10,(int)
(11,1)
(12,data)
(13,dataLen)
(14,dataBuffer)
(15,\\\'\\\\0\\\')
(16,250)
(17,if (fgets(data+dataLen, (int)
(18,NULL)
(19,NULL)
(20,)
(21,250)
(22,data)
(23,staticFive==5)
(24,dataLen)
(25,fgets(data+dataLen, (int)
(26,strlen(data)
(27,fclose(pFile)
(28,data)
(29,data = dataBuffer)
(30,staticFive)
(31,"r")
(32,data[dataLen] = \\\'\\\\0\\\')
(33,pFile)
(34,)
(35,RET)
(36,if(staticFive==5)
(37,pFile)
(38,fopen(FILENAME, "r")
(39,)
(40,"fgets()
(41,dataLen = strlen(data)
(42,"PATH=")
(43,dataBuffer)
(44,FILENAME)
(45,250-dataLen)
(46,pFile != NULL)
(47,printLine("fgets()
(48,)
(49,dataLen)
(50,data)
(51,dataBuffer)
(52,250-dataLen > 1)
(53,250-dataLen)
(54,5)
(55,int)
(56,pFile)
(57,if (250-dataLen > 1)
(58,data)
(59,dataBuffer[250] = "PATH=")
(60,pFile)
(61,data)
(62,if (pFile != NULL)
(63,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
