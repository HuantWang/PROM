-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_17_bad()
{
    int j;
    for(j = 0; j < 1; j++)
    {
        {
            wchar_t filename[MAX_PATH] = L"";
            int fileDesc;
            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,
            * leading to an inescapable race condition when we try to open it again. */
            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)
            {
                exit(1);
            }
            printWLine(filename);
            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
11,12
11,13
11,14
11,15
12,13
13,14
13,15
14,15
17,18
17,19
18,19
21,22
22,23
24,25
25,26
25,27
25,28
25,29
25,30
25,31
26,27
27,28
27,29
29,30
29,31
29,32
31,32
32,33
34,35
36,37
37,38
37,39
39,40
41,42
41,43
42,43
42,44
43,44
43,45
43,46
43,47
43,48
44,45
49,50
52,53
53,54
54,55
54,56
55,56
58,59
59,60
59,61
60,61
62,63
64,65
65,66
65,67
66,67
68,69
68,70
68,71
68,72
69,70
71,72
73,74
73,75
74,75
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
85,86
87,88
89,90
89,91
90,91
91,92
91,93
92,93
95,96
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,8,10,15,16,19,20,23,28,30,33,35,38,40,45,46,47,48,50,51,56,57,61,63,67,70,72,75,77,80,82,86,88,93,94,98,100
-----computeFrom-----
13,14
13,15
17,18
17,19
42,43
42,44
65,66
65,67
73,74
73,75
78,79
78,80
84,85
84,86
-----guardedBy-----
86,100
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_17_bad(){    int j;    for(j = 0; j < 1; j++)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
void
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_17_bad()
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_17_bad
{    int j;    for(j = 0; j < 1; j++)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
int j;
int j;
int
j
j
for(j = 0; j < 1; j++)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
{            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
wchar_t filename[MAX_PATH] = L"";
wchar_t filename[MAX_PATH] = L"";
wchar_t
filename[MAX_PATH] = L""
filename
[MAX_PATH]
MAX_PATH
MAX_PATH
= L""
L""
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }
GetTempFileNameW(L".", L"bad", 0, filename) == 0
GetTempFileNameW(L".", L"bad", 0, filename)
GetTempFileNameW
GetTempFileNameW
L"."
L"bad"
0
filename
filename
0
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printWLine(filename);
printWLine(filename)
printWLine
printWLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
-----joern-----
(19,32,0)
(35,2,0)
(31,15,0)
(24,14,0)
(1,30,0)
(15,31,0)
(27,29,0)
(25,37,0)
(38,15,0)
(34,0,0)
(6,30,0)
(23,18,0)
(20,3,0)
(36,27,0)
(4,18,0)
(40,18,0)
(8,40,0)
(3,16,0)
(31,3,0)
(2,27,0)
(16,3,0)
(21,18,0)
(22,0,0)
(10,25,0)
(26,31,0)
(37,27,0)
(30,16,0)
(16,30,0)
(17,14,0)
(5,22,0)
(12,23,0)
(39,27,0)
(9,40,0)
(16,32,0)
(7,32,0)
(3,27,0)
(33,34,0)
(32,16,0)
(13,27,0)
(11,16,0)
(34,3,0)
(25,10,1)
(31,3,1)
(6,11,1)
(19,7,1)
(4,21,1)
(16,32,1)
(10,39,1)
(20,2,1)
(11,20,1)
(9,18,1)
(40,8,1)
(3,16,1)
(35,25,1)
(39,40,1)
(1,6,1)
(38,26,1)
(2,35,1)
(23,12,1)
(34,3,1)
(22,5,1)
(16,30,1)
(12,31,1)
(32,19,1)
(15,38,1)
(30,1,1)
(5,31,1)
(26,3,1)
(28,40,1)
(23,18,1)
(12,34,1)
(7,30,1)
(33,22,1)
(8,9,1)
(31,15,1)
(34,33,1)
(40,18,1)
(18,4,1)
(9,23,1)
(31,3,2)
(19,40,2)
(16,32,2)
(23,40,2)
(3,16,2)
(26,40,2)
(7,40,2)
(25,40,2)
(34,3,2)
(40,18,2)
(30,40,2)
(16,30,2)
(15,40,2)
(33,31,2)
(40,40,2)
(6,40,2)
(10,40,2)
(38,40,2)
(35,40,2)
(20,40,2)
(2,40,2)
(12,40,2)
(1,40,2)
(31,15,2)
(32,40,2)
(16,40,2)
(5,31,2)
(34,31,2)
(3,40,2)
(31,40,2)
(11,40,2)
(23,18,2)
(9,40,2)
(8,40,2)
(22,31,2)
(39,40,2)
-----------------------------------
(0,)
(1,O_CREAT)
(2,printWLine(filename)
(3,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(4,0)
(5,"Temporary file was opened...now closing file")
(6,O_RDWR)
(7,S_IREAD)
(8,1)
(9,j)
(10,1)
(11,filename)
(12,j)
(13,if (fileDesc != -1)
(14,)
(15,-1)
(16,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(17,j)
(18,j = 0)
(19,S_IWRITE)
(20,fileDesc)
(21,j)
(22,printLine("Temporary file was opened...now closing file")
(23,j++)
(24,for(j = 0; j < 1; j++)
(25,exit(1)
(26,fileDesc)
(27,)
(28,RET)
(29,)
(30,O_RDWR|O_CREAT)
(31,fileDesc != -1)
(32,S_IREAD|S_IWRITE)
(33,fileDesc)
(34,CLOSE(fileDesc)
(35,filename)
(36,fileDesc)
(37,)
(38,1)
(39,"")
(40,j < 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
