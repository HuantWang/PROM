-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_bad()
{
    wchar_t * data;
    CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType myStruct;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    {
        FILE *pFile;
        pFile = fopen("passwords.txt", "r");
        if (pFile != NULL)
        {
            /* POTENTIAL FLAW: Read the password from a file */
            if (fgetws(data, 100, pFile) == NULL)
            {
                data[0] = L'\0';
            }
            fclose(pFile);
        }
        else
        {
            data[0] = L'\0';
        }
    }
    myStruct.structFirst = data;
    CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67b_badSink(myStruct);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
27,28
28,29
28,30
29,30
31,32
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
46,47
50,51
50,52
50,53
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
58,60
59,60
59,61
59,62
59,63
60,61
62,63
65,66
67,68
69,70
70,71
71,72
71,73
72,73
72,74
73,74
77,78
78,79
78,80
79,80
81,82
83,84
84,85
85,86
85,87
86,87
86,88
87,88
91,92
92,93
92,94
93,94
93,95
94,95
97,98
99,100
100,101
100,102
101,102
103,104
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,26,30,32,37,39,40,44,47,48,49,53,55,61,63,64,66,68,74,75,76,80,82,88,89,90,95,96,98,102,104
-----computeFrom-----
28,29
28,30
42,43
42,44
51,52
51,53
58,59
58,60
71,72
71,73
85,86
85,87
92,93
92,94
-----guardedBy-----
55,68
53,82
63,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_bad(){    wchar_t * data;    CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType myStruct;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }    }    myStruct.structFirst = data;    CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67b_badSink(myStruct);}
void
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_bad()
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_bad
{    wchar_t * data;    CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType myStruct;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }    }    myStruct.structFirst = data;    CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67b_badSink(myStruct);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType myStruct;
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType myStruct;
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67_structType
myStruct
myStruct
wchar_t dataBuffer[100] = L"";
wchar_t dataBuffer[100] = L"";
wchar_t
dataBuffer[100] = L""
dataBuffer
[100]
100
= L""
L""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }    }
FILE *pFile;
FILE *pFile;
FILE
FILE
*pFile
*
pFile
pFile = fopen("passwords.txt", "r");
pFile = fopen("passwords.txt", "r")
pFile
pFile
fopen("passwords.txt", "r")
fopen
fopen
"passwords.txt"
"r"
if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }
pFile != NULL
pFile
pFile
NULL
NULL
{            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }
if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }
fgetws(data, 100, pFile) == NULL
fgetws(data, 100, pFile)
fgetws
fgetws
data
data
100
pFile
pFile
NULL
NULL
{                data[0] = L'\0';            }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
{            data[0] = L'\0';        }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
myStruct.structFirst = data;
myStruct.structFirst = data
myStruct.structFirst
myStruct
myStruct
structFirst
data
data
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67b_badSink(myStruct);
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67b_badSink(myStruct)
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67b_badSink
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67b_badSink
myStruct
myStruct
-----joern-----
(6,9,0)
(9,6,0)
(25,23,0)
(10,32,0)
(4,9,0)
(20,25,0)
(3,32,0)
(33,39,0)
(37,29,0)
(18,2,0)
(31,39,0)
(29,39,0)
(14,17,0)
(21,37,0)
(24,6,0)
(17,23,0)
(8,17,0)
(2,39,0)
(19,36,0)
(10,23,0)
(23,17,0)
(35,39,0)
(36,39,0)
(1,9,0)
(30,10,0)
(0,36,0)
(11,9,0)
(13,23,0)
(22,29,0)
(9,23,0)
(34,38,0)
(29,31,0)
(23,36,0)
(5,7,0)
(28,37,0)
(9,31,0)
(27,31,0)
(26,31,0)
(15,25,0)
(12,39,0)
(29,31,1)
(37,21,1)
(4,25,1)
(2,18,1)
(22,37,1)
(28,34,1)
(20,15,1)
(23,17,1)
(17,8,1)
(1,4,1)
(14,13,1)
(11,1,1)
(30,6,1)
(9,11,1)
(30,5,1)
(9,31,1)
(29,22,1)
(6,9,1)
(9,23,1)
(31,27,1)
(24,9,1)
(18,29,1)
(28,10,1)
(34,25,1)
(26,12,1)
(21,28,1)
(25,23,1)
(13,31,1)
(16,2,1)
(15,23,1)
(25,20,1)
(10,30,1)
(8,14,1)
(5,6,1)
(6,24,1)
(27,26,1)
(10,23,1)
(9,31,2)
(9,25,2)
(10,23,2)
(9,23,2)
(6,25,2)
(11,25,2)
(24,25,2)
(1,25,2)
(10,25,2)
(29,31,2)
(34,25,2)
(30,25,2)
(5,6,2)
(23,17,2)
(25,23,2)
(4,25,2)
(6,9,2)
-----------------------------------
(0,pFile)
(1,100)
(2,CWE256_Plaintext_Storage_of_Password__w32_wchar_t_67b_badSink(myStruct)
(3,if (fgetws(data, 100, pFile)
(4,data)
(5,\\\'\\\\0\\\')
(6,fgetws(data, 100, pFile)
(7,)
(8,"r")
(9,fgetws(data, 100, pFile)
(10,fclose(pFile)
(11,pFile)
(12,"")
(13,pFile)
(14,"passwords.txt")
(15,pFile)
(16,RET)
(17,fopen("passwords.txt", "r")
(18,myStruct)
(19,if (pFile != NULL)
(20,NULL)
(21,structFirst)
(22,data)
(23,pFile = fopen("passwords.txt", "r")
(24,NULL)
(25,pFile != NULL)
(26,data)
(27,dataBuffer)
(28,myStruct)
(29,myStruct.structFirst = data)
(30,pFile)
(31,data = dataBuffer)
(32,)
(33,myStruct)
(34,\\\'\\\\0\\\')
(35,data)
(36,)
(37,myStruct.structFirst)
(38,)
(39,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
