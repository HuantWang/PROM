-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_console_64_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[250] = L"PATH=";
    data = dataBuffer;
    {
        /* Read input from the console */
        size_t dataLen = wcslen(data);
        /* if there is room in data, read into it from the console */
        if (250-dataLen > 1)
        {
            /* POTENTIAL FLAW: Read data from the console */
            if (fgetws(data+dataLen, (int)(250-dataLen), stdin) != NULL)
            {
                /* The next few lines remove the carriage return from the string that is
                 * inserted by fgetws() */
                dataLen = wcslen(data);
                if (dataLen > 0 && data[dataLen-1] == L'\n')
                {
                    data[dataLen-1] = L'\0';
                }
            }
            else
            {
                printLine("fgetws() failed");
                /* Restore NUL terminator if fgetws fails */
                data[dataLen] = L'\0';
            }
        }
    }
    CWE427_Uncontrolled_Search_Path_Element__wchar_t_console_64b_badSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
38,39
40,41
40,42
41,42
41,43
42,43
42,44
44,45
47,48
48,49
48,50
48,51
49,50
49,51
50,51
50,52
50,53
50,54
51,52
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
62,63
63,64
63,65
65,66
67,68
69,70
71,72
71,73
72,73
73,74
73,75
74,75
76,77
76,78
77,78
79,80
81,82
81,83
82,83
82,84
83,84
83,85
84,85
87,88
87,89
88,89
88,90
89,90
91,92
91,93
92,93
96,97
97,98
98,99
98,100
99,100
99,101
100,101
102,103
102,104
103,104
107,108
107,109
108,109
109,110
109,111
110,111
113,114
114,115
114,116
115,116
115,117
116,117
118,119
121,122
122,123
122,124
123,124
125,126
126,127
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,31,33,37,39,43,45,46,52,55,57,60,61,64,66,68,70,75,78,80,85,86,90,93,94,95,101,104,105,106,111,112,117,119,120,124,127
-----computeFrom-----
22,23
22,24
41,42
41,43
42,43
42,44
49,50
49,51
53,54
53,55
63,64
63,65
73,74
73,75
82,83
82,84
83,84
83,85
87,88
87,89
91,92
91,93
98,99
98,100
102,103
102,104
114,115
114,116
-----guardedBy-----
45,119
55,101
66,104
90,101
93,104
-----guardedByNegation-----
55,117
66,119
-----lastLexicalUse-----
55,117
66,119
-----jump-----
55,117
66,119
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_console_64_bad(){    wchar_t * data;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    {        /* Read input from the console */        size_t dataLen = wcslen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgetws(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgetws() */                dataLen = wcslen(data);                if (dataLen > 0 && data[dataLen-1] == L'\n')                {                    data[dataLen-1] = L'\0';                }            }            else            {                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                data[dataLen] = L'\0';            }        }    }    CWE427_Uncontrolled_Search_Path_Element__wchar_t_console_64b_badSink(&data);}
void
CWE427_Uncontrolled_Search_Path_Element__wchar_t_console_64_bad()
CWE427_Uncontrolled_Search_Path_Element__wchar_t_console_64_bad
{    wchar_t * data;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    {        /* Read input from the console */        size_t dataLen = wcslen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgetws(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgetws() */                dataLen = wcslen(data);                if (dataLen > 0 && data[dataLen-1] == L'\n')                {                    data[dataLen-1] = L'\0';                }            }            else            {                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                data[dataLen] = L'\0';            }        }    }    CWE427_Uncontrolled_Search_Path_Element__wchar_t_console_64b_badSink(&data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[250] = L"PATH=";
wchar_t dataBuffer[250] = L"PATH=";
wchar_t
dataBuffer[250] = L"PATH="
dataBuffer
[250]
250
= L"PATH="
L"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from the console */        size_t dataLen = wcslen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgetws(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgetws() */                dataLen = wcslen(data);                if (dataLen > 0 && data[dataLen-1] == L'\n')                {                    data[dataLen-1] = L'\0';                }            }            else            {                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                data[dataLen] = L'\0';            }        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgetws(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgetws() */                dataLen = wcslen(data);                if (dataLen > 0 && data[dataLen-1] == L'\n')                {                    data[dataLen-1] = L'\0';                }            }            else            {                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                data[dataLen] = L'\0';            }        }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{            /* POTENTIAL FLAW: Read data from the console */            if (fgetws(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgetws() */                dataLen = wcslen(data);                if (dataLen > 0 && data[dataLen-1] == L'\n')                {                    data[dataLen-1] = L'\0';                }            }            else            {                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                data[dataLen] = L'\0';            }        }
if (fgetws(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgetws() */                dataLen = wcslen(data);                if (dataLen > 0 && data[dataLen-1] == L'\n')                {                    data[dataLen-1] = L'\0';                }            }            else            {                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                data[dataLen] = L'\0';            }
fgetws(data+dataLen, (int)(250-dataLen), stdin) != NULL
fgetws(data+dataLen, (int)(250-dataLen), stdin)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
stdin
stdin
NULL
NULL
{                /* The next few lines remove the carriage return from the string that is                 * inserted by fgetws() */                dataLen = wcslen(data);                if (dataLen > 0 && data[dataLen-1] == L'\n')                {                    data[dataLen-1] = L'\0';                }            }
dataLen = wcslen(data);
dataLen = wcslen(data)
dataLen
dataLen
wcslen(data)
wcslen
wcslen
data
data
if (dataLen > 0 && data[dataLen-1] == L'\n')                {                    data[dataLen-1] = L'\0';                }
dataLen > 0 && data[dataLen-1] == L'\n'
dataLen > 0
dataLen
dataLen
0
data[dataLen-1] == L'\n'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
L'\n'
{                    data[dataLen-1] = L'\0';                }
data[dataLen-1] = L'\0';
data[dataLen-1] = L'\0'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
L'\0'
{                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                data[dataLen] = L'\0';            }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
CWE427_Uncontrolled_Search_Path_Element__wchar_t_console_64b_badSink(&data);
CWE427_Uncontrolled_Search_Path_Element__wchar_t_console_64b_badSink(&data)
CWE427_Uncontrolled_Search_Path_Element__wchar_t_console_64b_badSink
CWE427_Uncontrolled_Search_Path_Element__wchar_t_console_64b_badSink
&data
data
data
-----joern-----
(33,45,0)
(28,38,0)
(17,34,0)
(6,12,0)
(46,12,0)
(21,40,0)
(23,6,0)
(16,7,0)
(38,42,0)
(42,38,0)
(34,22,0)
(43,14,0)
(43,2,0)
(3,14,0)
(7,34,0)
(8,15,0)
(38,18,0)
(45,33,0)
(11,2,0)
(22,14,0)
(17,28,0)
(0,19,0)
(12,6,0)
(41,12,0)
(7,29,0)
(38,28,0)
(2,43,0)
(9,18,0)
(40,44,0)
(5,34,0)
(24,4,0)
(12,34,0)
(18,34,0)
(35,14,0)
(28,17,0)
(34,7,0)
(1,28,0)
(31,17,0)
(27,22,0)
(29,14,0)
(15,28,0)
(39,24,0)
(26,4,0)
(36,22,0)
(25,33,0)
(2,29,0)
(32,17,0)
(45,44,0)
(18,38,0)
(17,29,0)
(13,18,0)
(30,45,0)
(37,29,0)
(20,29,0)
(33,29,0)
(28,15,0)
(8,28,1)
(34,7,1)
(2,11,1)
(11,26,1)
(13,17,1)
(28,1,1)
(29,20,1)
(6,12,1)
(33,25,1)
(17,31,1)
(20,37,1)
(15,28,1)
(30,15,1)
(2,29,1)
(21,45,1)
(5,29,1)
(28,38,1)
(43,2,1)
(37,35,1)
(6,23,1)
(16,5,1)
(38,18,1)
(26,24,1)
(32,6,1)
(31,32,1)
(17,29,1)
(17,34,1)
(38,42,1)
(15,8,1)
(46,34,1)
(11,6,1)
(9,13,1)
(18,34,1)
(25,30,1)
(12,34,1)
(12,41,1)
(33,29,1)
(7,16,1)
(23,12,1)
(11,21,1)
(39,15,1)
(10,43,1)
(45,33,1)
(28,17,1)
(7,29,1)
(18,9,1)
(41,46,1)
(1,38,1)
(24,39,1)
(17,34,2)
(32,6,2)
(8,6,2)
(25,15,2)
(28,6,2)
(13,6,2)
(12,34,2)
(39,15,2)
(2,29,2)
(18,6,2)
(28,38,2)
(38,18,2)
(43,2,2)
(6,12,2)
(26,15,2)
(9,6,2)
(24,15,2)
(7,29,2)
(1,6,2)
(45,15,2)
(28,17,2)
(34,7,2)
(21,15,2)
(45,33,2)
(18,34,2)
(33,15,2)
(38,6,2)
(17,29,2)
(17,6,2)
(15,28,2)
(33,29,2)
(15,6,2)
(38,42,2)
(31,6,2)
(30,15,2)
-----------------------------------
(0,if (fgetws(data+dataLen, (int)
(1,stdin)
(2,&data)
(3,data)
(4,)
(5,dataLen)
(6,250-dataLen > 1)
(7,wcslen(data)
(8,NULL)
(9,dataLen)
(10,RET)
(11,data)
(12,250-dataLen)
(13,250)
(14,)
(15,fgetws(data+dataLen, (int)
(16,data)
(17,data+dataLen)
(18,250-dataLen)
(19,)
(20,dataBuffer)
(21,\\\'\\\\0\\\')
(22,)
(23,1)
(24,printLine("fgetws()
(25,data)
(26,\\\'\\\\0\\\')
(27,if (250-dataLen > 1)
(28,fgetws(data+dataLen, (int)
(29,data = dataBuffer)
(30,dataLen)
(31,dataLen)
(32,data)
(33,wcslen(data)
(34,dataLen = wcslen(data)
(35,"PATH=")
(36,dataLen)
(37,data)
(38,(int)
(39,"fgetws()
(40,)
(41,dataLen)
(42,int)
(43,CWE427_Uncontrolled_Search_Path_Element__wchar_t_console_64b_badSink(&data)
(44,)
(45,dataLen = wcslen(data)
(46,250)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
