-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_07_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    if(staticFive==5)
    {
        {
            FILE *pFile;
            pFile = fopen("passwords.txt", "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read the password from a file */
                if (fgetws(data, 100, pFile) == NULL)
                {
                    data[0] = L'\0';
                }
                fclose(pFile);
            }
            else
            {
                data[0] = L'\0';
            }
        }
    }
    if(staticFive==5)
    {
        {
            HANDLE pHandle;
            wchar_t * username = L"User";
            wchar_t * domain = L"Domain";
            /* POTENTIAL FLAW: Attempt to login user with password from the source */
            if (LogonUserW(
                        username,
                        domain,
                        data,
                        LOGON32_LOGON_NETWORK,
                        LOGON32_PROVIDER_DEFAULT,
                        &pHandle) != 0)
            {
                printLine("User logged in successfully.");
                CloseHandle(pHandle);
            }
            else
            {
                printLine("Unable to login.");
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
29,30
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
46,47
50,51
50,52
50,53
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
58,60
59,60
59,61
59,62
59,63
60,61
62,63
65,66
67,68
69,70
70,71
71,72
71,73
72,73
72,74
73,74
77,78
78,79
78,80
79,80
81,82
83,84
84,85
85,86
85,87
86,87
86,88
87,88
91,92
91,93
92,93
92,94
93,94
96,97
97,98
97,99
97,100
97,101
98,99
99,100
99,101
100,101
102,103
104,105
105,106
105,107
107,108
107,109
107,110
110,111
112,113
113,114
113,115
115,116
115,117
115,118
118,119
120,121
120,122
120,123
121,122
121,123
122,123
122,124
122,125
122,126
122,127
122,128
122,129
123,124
125,126
127,128
129,130
131,132
133,134
135,136
136,137
139,140
139,141
140,141
141,142
141,143
142,143
145,146
146,147
146,148
147,148
149,150
151,152
152,153
153,154
153,155
154,155
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,30,31,37,39,40,44,47,48,49,53,55,61,63,64,66,68,74,75,76,80,82,88,89,90,94,95,101,103,106,108,109,111,114,116,117,119,124,126,128,130,132,134,137,138,143,144,148,150,155,156
-----computeFrom-----
22,23
22,24
28,29
28,30
42,43
42,44
51,52
51,53
58,59
58,60
71,72
71,73
85,86
85,87
92,93
92,94
121,122
121,123
-----guardedBy-----
55,68
53,82
63,74
137,150
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_07_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    if(staticFive==5)    {        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }    }    if(staticFive==5)    {        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }}
void
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_07_bad()
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_07_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    if(staticFive==5)    {        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }    }    if(staticFive==5)    {        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = L"";
wchar_t dataBuffer[100] = L"";
wchar_t
dataBuffer[100] = L""
dataBuffer
[100]
100
= L""
L""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticFive==5)    {        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }    }
staticFive==5
staticFive
staticFive
5
{        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }    }
{            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }
FILE *pFile;
FILE *pFile;
FILE
FILE
*pFile
*
pFile
pFile = fopen("passwords.txt", "r");
pFile = fopen("passwords.txt", "r")
pFile
pFile
fopen("passwords.txt", "r")
fopen
fopen
"passwords.txt"
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }
if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }
fgetws(data, 100, pFile) == NULL
fgetws(data, 100, pFile)
fgetws
fgetws
data
data
100
pFile
pFile
NULL
NULL
{                    data[0] = L'\0';                }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
{                data[0] = L'\0';            }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
if(staticFive==5)    {        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }
staticFive==5
staticFive
staticFive
5
{        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }
{            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
wchar_t * username = L"User";
wchar_t * username = L"User";
wchar_t
* username = L"User"
*
username
= L"User"
L"User"
wchar_t * domain = L"Domain";
wchar_t * domain = L"Domain";
wchar_t
* domain = L"Domain"
*
domain
= L"Domain"
L"Domain"
if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }
LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0
LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle)
LogonUserW
LogonUserW
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{                printLine("User logged in successfully.");                CloseHandle(pHandle);            }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{                printLine("Unable to login.");            }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(28,59,0)
(2,12,0)
(43,22,0)
(57,40,0)
(41,61,0)
(26,36,0)
(51,33,0)
(5,51,0)
(13,54,0)
(52,31,0)
(32,36,0)
(20,40,0)
(56,48,0)
(46,41,0)
(49,22,0)
(35,61,0)
(30,54,0)
(22,49,0)
(17,46,0)
(41,59,0)
(60,33,0)
(29,10,0)
(59,18,0)
(46,31,0)
(23,51,0)
(1,36,0)
(0,36,0)
(51,5,0)
(63,37,0)
(10,58,0)
(61,41,0)
(19,56,0)
(3,51,0)
(6,49,0)
(49,41,0)
(50,4,0)
(47,49,0)
(44,4,0)
(42,53,0)
(54,38,0)
(25,15,0)
(8,61,0)
(37,48,0)
(34,51,0)
(55,0,0)
(62,51,0)
(45,54,0)
(24,49,0)
(39,51,0)
(53,41,0)
(49,0,0)
(51,0,0)
(27,59,0)
(21,0,0)
(64,41,0)
(33,51,0)
(9,36,0)
(14,5,0)
(11,53,0)
(16,54,0)
(16,4,1)
(55,21,1)
(39,23,1)
(25,22,1)
(3,45,1)
(56,19,1)
(49,41,1)
(42,41,1)
(37,63,1)
(63,5,1)
(14,51,1)
(0,55,1)
(4,44,1)
(5,14,1)
(49,0,1)
(43,49,1)
(53,41,1)
(47,6,1)
(60,34,1)
(50,46,1)
(7,56,1)
(51,33,1)
(50,2,1)
(45,16,1)
(35,8,1)
(61,35,1)
(57,20,1)
(53,11,1)
(49,24,1)
(17,22,1)
(20,0,1)
(62,3,1)
(10,29,1)
(23,62,1)
(2,53,1)
(6,53,1)
(11,42,1)
(22,43,1)
(40,57,1)
(46,41,1)
(22,49,1)
(19,37,1)
(34,39,1)
(8,64,1)
(29,5,1)
(7,10,1)
(17,25,1)
(44,50,1)
(46,17,1)
(64,40,1)
(33,60,1)
(51,0,1)
(5,51,1)
(24,47,1)
(7,4,1)
(21,32,1)
(50,40,1)
(41,61,1)
(19,5,2)
(23,4,2)
(51,4,2)
(49,0,2)
(56,5,2)
(41,40,2)
(5,51,2)
(16,4,2)
(51,0,2)
(14,4,2)
(22,53,2)
(37,5,2)
(53,41,2)
(63,5,2)
(5,4,2)
(62,4,2)
(45,4,2)
(46,41,2)
(42,40,2)
(53,40,2)
(11,40,2)
(29,5,2)
(25,22,2)
(49,53,2)
(33,4,2)
(35,40,2)
(46,53,2)
(2,53,2)
(34,4,2)
(61,40,2)
(39,4,2)
(60,4,2)
(64,40,2)
(22,49,2)
(6,53,2)
(3,4,2)
(10,5,2)
(43,53,2)
(51,33,2)
(24,53,2)
(49,41,2)
(47,53,2)
(17,53,2)
(8,40,2)
(41,61,2)
-----------------------------------
(0,data = dataBuffer)
(1,if(staticFive==5)
(2,\\\'\\\\0\\\')
(3,username)
(4,staticFive==5)
(5,LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(6,data)
(7,RET)
(8,"passwords.txt")
(9,data)
(10,printLine("Unable to login.")
(11,NULL)
(12,)
(13,pHandle)
(14,0)
(15,)
(16,"User")
(17,pFile)
(18,)
(19,pHandle)
(20,staticFive)
(21,data)
(22,fgetws(data, 100, pFile)
(23,data)
(24,pFile)
(25,\\\'\\\\0\\\')
(26,if(staticFive==5)
(27,pFile)
(28,if (pFile != NULL)
(29,"Unable to login.")
(30,if (LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(31,)
(32,"")
(33,&pHandle)
(34,LOGON32_PROVIDER_DEFAULT)
(35,"r")
(36,)
(37,printLine("User logged in successfully.")
(38,)
(39,LOGON32_LOGON_NETWORK)
(40,staticFive==5)
(41,pFile = fopen("passwords.txt", "r")
(42,pFile)
(43,NULL)
(44,5)
(45,"Domain")
(46,fclose(pFile)
(47,100)
(48,)
(49,fgetws(data, 100, pFile)
(50,staticFive)
(51,LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(52,if (fgetws(data, 100, pFile)
(53,pFile != NULL)
(54,)
(55,dataBuffer)
(56,CloseHandle(pHandle)
(57,5)
(58,)
(59,)
(60,pHandle)
(61,fopen("passwords.txt", "r")
(62,domain)
(63,"User logged in successfully.")
(64,pFile)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
