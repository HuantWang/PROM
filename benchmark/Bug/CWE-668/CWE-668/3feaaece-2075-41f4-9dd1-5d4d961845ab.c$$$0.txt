-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_63b_badSink(wchar_t * * dataPtr)
{
    wchar_t * data = *dataPtr;
    {
        HANDLE pHandle;
        wchar_t * username = L"User";
        wchar_t * domain = L"Domain";
        /* POTENTIAL FLAW: Attempt to login user with password from the source */
        if (LogonUserW(
                    username,
                    domain,
                    data,
                    LOGON32_LOGON_NETWORK,
                    LOGON32_PROVIDER_DEFAULT,
                    &pHandle) != 0)
        {
            printLine("User logged in successfully.");
            CloseHandle(pHandle);
        }
        else
        {
            printLine("Unable to login.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
20,21
22,23
22,24
22,25
22,26
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
32,33
32,34
32,35
35,36
37,38
38,39
38,40
40,41
40,42
40,43
43,44
45,46
45,47
45,48
46,47
46,48
47,48
47,49
47,50
47,51
47,52
47,53
47,54
48,49
50,51
52,53
54,55
56,57
58,59
60,61
61,62
64,65
64,66
65,66
66,67
66,68
67,68
70,71
71,72
71,73
72,73
74,75
76,77
77,78
78,79
78,80
79,80
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,26,28,31,33,34,36,39,41,42,44,49,51,53,55,57,59,62,63,68,69,73,75,80,81
-----computeFrom-----
46,47
46,48
-----guardedBy-----
62,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_63b_badSink(wchar_t * * dataPtr){    wchar_t * data = *dataPtr;    {        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
void
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_63b_badSink(wchar_t * * dataPtr)
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_63b_badSink
wchar_t * * dataPtr
wchar_t
* * dataPtr
*
*
dataPtr
{    wchar_t * data = *dataPtr;    {        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
wchar_t * data = *dataPtr;
wchar_t * data = *dataPtr;
wchar_t
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
wchar_t * username = L"User";
wchar_t * username = L"User";
wchar_t
* username = L"User"
*
username
= L"User"
L"User"
wchar_t * domain = L"Domain";
wchar_t * domain = L"Domain";
wchar_t
* domain = L"Domain"
*
domain
= L"Domain"
L"Domain"
if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }
LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0
LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle)
LogonUserW
LogonUserW
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{            printLine("User logged in successfully.");            CloseHandle(pHandle);        }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{            printLine("Unable to login.");        }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(17,27,0)
(29,12,0)
(12,28,0)
(21,29,0)
(14,13,0)
(25,23,0)
(18,9,0)
(24,27,0)
(19,9,0)
(10,27,0)
(23,0,0)
(6,27,0)
(9,7,0)
(16,9,0)
(5,27,0)
(20,27,0)
(11,17,0)
(4,8,0)
(27,17,0)
(27,29,0)
(30,12,0)
(22,8,0)
(12,29,0)
(26,4,0)
(29,7,0)
(1,9,0)
(15,7,0)
(3,22,0)
(27,13,0)
(13,27,0)
(19,16,1)
(26,17,1)
(2,23,1)
(27,13,1)
(14,24,1)
(27,29,1)
(5,6,1)
(6,10,1)
(13,14,1)
(29,12,1)
(12,28,1)
(4,26,1)
(16,29,1)
(10,20,1)
(23,25,1)
(2,22,1)
(22,3,1)
(17,27,1)
(20,19,1)
(11,27,1)
(3,4,1)
(25,17,1)
(17,11,1)
(24,5,1)
(30,21,1)
(12,30,1)
(26,17,2)
(3,17,2)
(4,17,2)
(27,29,2)
(23,17,2)
(25,17,2)
(17,27,2)
(27,13,2)
(29,12,2)
(12,28,2)
(22,17,2)
-----------------------------------
(0,)
(1,if (LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(2,RET)
(3,pHandle)
(4,printLine("User logged in successfully.")
(5,LOGON32_LOGON_NETWORK)
(6,data)
(7,)
(8,)
(9,)
(10,domain)
(11,0)
(12,*dataPtr)
(13,&pHandle)
(14,pHandle)
(15,data)
(16,"User")
(17,LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(18,pHandle)
(19,"Domain")
(20,username)
(21,data)
(22,CloseHandle(pHandle)
(23,printLine("Unable to login.")
(24,LOGON32_PROVIDER_DEFAULT)
(25,"Unable to login.")
(26,"User logged in successfully.")
(27,LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(28,wchar_t * * dataPtr)
(29,* data = *dataPtr)
(30,dataPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
