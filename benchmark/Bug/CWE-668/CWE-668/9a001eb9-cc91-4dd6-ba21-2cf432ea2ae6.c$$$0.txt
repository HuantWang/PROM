-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__char_tempnam_12_bad()
{
    if(globalReturnsTrueOrFalse())
    {
        {
            char * filename;
            int fileDesc;
            filename = TEMPNAM(NULL, NULL);
            if (filename == NULL)
            {
                exit(1);
            }
            printLine(filename);
            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
            free(filename);
        }
    }
    else
    {
        {
            char * filename;
            int fileDesc;
            filename = TEMPNAM(NULL, NULL);
            if (filename == NULL)
            {
                exit(1);
            }
            printLine(filename);
            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags
             * NOTE: This is not a perfect solution, but it is the base case scenario */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
            free(filename);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
6,9
7,8
8,9
10,11
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
12,13
13,14
13,15
15,16
15,17
18,19
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
28,29
30,31
32,33
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
56,57
56,58
56,59
56,60
57,58
59,60
61,62
61,63
62,63
64,65
66,67
66,68
67,68
69,70
71,72
71,73
72,73
72,74
73,74
75,76
77,78
77,79
78,79
79,80
79,81
80,81
83,84
84,85
84,86
85,86
87,88
89,90
90,91
90,92
91,92
93,94
95,96
96,97
96,98
96,99
96,100
96,101
96,102
96,103
96,104
97,98
98,99
98,100
100,101
100,102
103,104
104,105
104,106
106,107
108,109
109,110
109,111
110,111
112,113
112,114
112,115
113,114
115,116
117,118
119,120
119,121
120,121
120,122
121,122
123,124
125,126
126,127
127,128
127,129
128,129
131,132
132,133
132,134
133,134
135,136
137,138
138,139
138,140
139,140
141,142
141,143
141,144
141,145
142,143
144,145
146,147
146,148
147,148
147,149
148,149
150,151
152,153
154,155
154,156
155,156
157,158
159,160
159,161
160,161
160,162
161,162
163,164
165,166
165,167
166,167
167,168
167,169
168,169
171,172
172,173
172,174
173,174
175,176
177,178
178,179
178,180
179,180
181,182
-----nextToken-----
2,4,9,14,16,17,20,22,26,29,31,33,37,39,44,45,49,51,55,58,60,63,65,68,70,74,76,81,82,86,88,92,94,99,101,102,105,107,111,114,116,118,122,124,129,130,134,136,140,143,145,149,151,153,156,158,162,164,169,170,174,176,180,182
-----computeFrom-----
24,25
24,26
35,36
35,37
53,54
53,55
61,62
61,63
66,67
66,68
72,73
72,74
109,110
109,111
120,121
120,122
138,139
138,140
146,147
146,148
147,148
147,149
154,155
154,156
160,161
160,162
-----guardedBy-----
74,88
162,176
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE377_Insecure_Temporary_File__char_tempnam_12_bad(){    if(globalReturnsTrueOrFalse())    {        {            char * filename;            int fileDesc;            filename = TEMPNAM(NULL, NULL);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }            free(filename);        }    }    else    {        {            char * filename;            int fileDesc;            filename = TEMPNAM(NULL, NULL);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags             * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }            free(filename);        }    }}
void
CWE377_Insecure_Temporary_File__char_tempnam_12_bad()
CWE377_Insecure_Temporary_File__char_tempnam_12_bad
{    if(globalReturnsTrueOrFalse())    {        {            char * filename;            int fileDesc;            filename = TEMPNAM(NULL, NULL);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }            free(filename);        }    }    else    {        {            char * filename;            int fileDesc;            filename = TEMPNAM(NULL, NULL);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags             * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }            free(filename);        }    }}
if(globalReturnsTrueOrFalse())    {        {            char * filename;            int fileDesc;            filename = TEMPNAM(NULL, NULL);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }            free(filename);        }    }    else    {        {            char * filename;            int fileDesc;            filename = TEMPNAM(NULL, NULL);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags             * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }            free(filename);        }    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            char * filename;            int fileDesc;            filename = TEMPNAM(NULL, NULL);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }            free(filename);        }    }
{            char * filename;            int fileDesc;            filename = TEMPNAM(NULL, NULL);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }            free(filename);        }
char * filename;
char * filename;
char
* filename
*
filename
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
filename = TEMPNAM(NULL, NULL);
filename = TEMPNAM(NULL, NULL)
filename
filename
TEMPNAM(NULL, NULL)
TEMPNAM
TEMPNAM
NULL
NULL
NULL
NULL
if (filename == NULL)            {                exit(1);            }
filename == NULL
filename
filename
NULL
NULL
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printLine(filename);
printLine(filename)
printLine
printLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
free(filename);
free(filename)
free
free
filename
filename
{        {            char * filename;            int fileDesc;            filename = TEMPNAM(NULL, NULL);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags             * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }            free(filename);        }    }
{            char * filename;            int fileDesc;            filename = TEMPNAM(NULL, NULL);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags             * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }            free(filename);        }
char * filename;
char * filename;
char
* filename
*
filename
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
filename = TEMPNAM(NULL, NULL);
filename = TEMPNAM(NULL, NULL)
filename
filename
TEMPNAM(NULL, NULL)
TEMPNAM
TEMPNAM
NULL
NULL
NULL
NULL
if (filename == NULL)            {                exit(1);            }
filename == NULL
filename
filename
NULL
NULL
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printLine(filename);
printLine(filename)
printLine
printLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT|O_EXCL
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
O_EXCL
O_EXCL
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
free(filename);
free(filename)
free
free
filename
filename
-----joern-----
(6,74,0)
(66,81,0)
(73,79,0)
(29,57,0)
(75,15,0)
(41,29,0)
(57,74,0)
(25,67,0)
(33,74,0)
(21,59,0)
(1,67,0)
(38,43,0)
(83,76,0)
(6,57,0)
(40,77,0)
(70,72,0)
(39,57,0)
(61,39,0)
(12,33,0)
(40,1,0)
(10,72,0)
(72,76,0)
(59,60,0)
(27,76,0)
(80,60,0)
(23,76,0)
(84,52,0)
(1,40,0)
(52,81,0)
(46,5,0)
(58,36,0)
(18,74,0)
(36,44,0)
(77,40,0)
(16,23,0)
(56,63,0)
(45,74,0)
(81,20,0)
(5,32,0)
(81,52,0)
(76,60,0)
(60,82,0)
(68,49,0)
(35,60,0)
(53,77,0)
(79,49,0)
(7,83,0)
(78,57,0)
(63,50,0)
(55,20,0)
(71,20,0)
(83,60,0)
(28,60,0)
(9,52,0)
(67,1,0)
(21,32,0)
(47,29,0)
(17,78,0)
(40,59,0)
(15,60,0)
(59,40,0)
(85,33,0)
(4,54,0)
(31,74,0)
(69,60,0)
(22,44,0)
(43,12,0)
(44,36,0)
(76,72,0)
(74,64,0)
(13,59,0)
(26,77,0)
(62,1,0)
(81,33,0)
(81,57,0)
(57,39,0)
(40,76,0)
(0,6,0)
(12,43,0)
(36,59,0)
(14,39,0)
(20,81,0)
(15,76,0)
(11,40,0)
(42,65,0)
(51,67,0)
(2,68,0)
(30,21,0)
(33,81,0)
(8,57,0)
(37,23,0)
(48,12,0)
(3,74,0)
(79,33,0)
(78,74,0)
(34,4,0)
(75,36,1)
(83,76,1)
(17,79,1)
(23,16,1)
(4,34,1)
(36,59,1)
(43,38,1)
(81,57,1)
(15,75,1)
(11,13,1)
(7,23,1)
(71,52,1)
(29,57,1)
(57,39,1)
(85,6,1)
(7,63,1)
(46,36,1)
(34,29,1)
(76,72,1)
(40,1,1)
(6,57,1)
(14,61,1)
(12,33,1)
(78,17,1)
(73,68,1)
(55,71,1)
(52,84,1)
(24,78,1)
(68,2,1)
(25,62,1)
(36,44,1)
(81,20,1)
(44,22,1)
(66,85,1)
(81,52,1)
(21,59,1)
(17,12,1)
(39,14,1)
(0,29,1)
(48,33,1)
(77,53,1)
(16,37,1)
(21,30,1)
(0,4,1)
(22,58,1)
(72,10,1)
(13,83,1)
(12,43,1)
(47,57,1)
(38,48,1)
(30,5,1)
(70,27,1)
(75,21,1)
(5,46,1)
(23,76,1)
(27,19,1)
(37,76,1)
(26,1,1)
(24,15,1)
(56,23,1)
(9,66,1)
(15,76,1)
(33,81,1)
(40,76,1)
(1,67,1)
(79,73,1)
(29,41,1)
(61,8,1)
(83,7,1)
(67,51,1)
(78,57,1)
(20,55,1)
(62,11,1)
(8,19,1)
(53,26,1)
(58,59,1)
(41,47,1)
(51,25,1)
(84,9,1)
(59,40,1)
(79,33,1)
(10,70,1)
(63,56,1)
(2,12,1)
(6,0,1)
(40,77,1)
(76,72,2)
(81,19,2)
(81,20,2)
(44,19,2)
(79,12,2)
(79,33,2)
(59,19,2)
(47,19,2)
(26,19,2)
(12,19,2)
(4,29,2)
(72,19,2)
(83,19,2)
(7,19,2)
(30,36,2)
(51,19,2)
(40,77,2)
(21,59,2)
(46,36,2)
(37,19,2)
(76,19,2)
(78,19,2)
(16,19,2)
(43,19,2)
(1,67,2)
(84,19,2)
(55,19,2)
(39,19,2)
(25,19,2)
(40,19,2)
(77,19,2)
(10,19,2)
(40,1,2)
(15,76,2)
(59,40,2)
(12,43,2)
(23,76,2)
(22,19,2)
(6,57,2)
(17,19,2)
(29,19,2)
(21,36,2)
(8,19,2)
(57,39,2)
(52,19,2)
(73,12,2)
(15,19,2)
(6,19,2)
(33,19,2)
(27,19,2)
(11,19,2)
(66,19,2)
(70,19,2)
(56,23,2)
(9,19,2)
(38,19,2)
(48,19,2)
(85,19,2)
(40,76,2)
(20,19,2)
(83,76,2)
(36,59,2)
(71,19,2)
(61,19,2)
(36,19,2)
(62,19,2)
(81,52,2)
(81,57,2)
(12,33,2)
(1,19,2)
(63,23,2)
(41,19,2)
(5,36,2)
(13,19,2)
(58,19,2)
(14,19,2)
(68,12,2)
(57,19,2)
(29,57,2)
(67,19,2)
(78,57,2)
(2,12,2)
(34,29,2)
(75,19,2)
(0,19,2)
(53,19,2)
(36,44,2)
(33,81,2)
(23,19,2)
-----------------------------------
(0,filename)
(1,O_RDWR|O_CREAT|O_EXCL)
(2,"Temporary file was opened...now closing file")
(3,fileDesc)
(4,exit(1)
(5,printLine("Temporary file was opened...now closing file")
(6,printLine(filename)
(7,filename)
(8,filename)
(9,O_RDWR)
(10,NULL)
(11,filename)
(12,fileDesc != -1)
(13,fileDesc)
(14,NULL)
(15,free(filename)
(16,NULL)
(17,filename)
(18,if (filename == NULL)
(19,globalReturnsTrueOrFalse()
(20,S_IREAD|S_IWRITE)
(21,CLOSE(fileDesc)
(22,1)
(23,filename == NULL)
(24,RET)
(25,O_CREAT)
(26,S_IREAD)
(27,filename)
(28,fileDesc)
(29,filename == NULL)
(30,fileDesc)
(31,if (fileDesc != -1)
(32,)
(33,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(34,1)
(35,filename)
(36,fileDesc != -1)
(37,filename)
(38,1)
(39,TEMPNAM(NULL, NULL)
(40,OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE)
(41,NULL)
(42,if(globalReturnsTrueOrFalse()
(43,-1)
(44,-1)
(45,filename)
(46,"Temporary file was opened...now closing file")
(47,filename)
(48,fileDesc)
(49,)
(50,)
(51,O_EXCL)
(52,O_RDWR|O_CREAT)
(53,S_IWRITE)
(54,)
(55,S_IWRITE)
(56,1)
(57,filename = TEMPNAM(NULL, NULL)
(58,fileDesc)
(59,fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE)
(60,)
(61,NULL)
(62,O_RDWR)
(63,exit(1)
(64,)
(65,)
(66,filename)
(67,O_CREAT|O_EXCL)
(68,printLine("Temporary file was opened...now closing file")
(69,if (filename == NULL)
(70,NULL)
(71,S_IREAD)
(72,TEMPNAM(NULL, NULL)
(73,fileDesc)
(74,)
(75,filename)
(76,filename = TEMPNAM(NULL, NULL)
(77,S_IREAD|S_IWRITE)
(78,free(filename)
(79,CLOSE(fileDesc)
(80,if (fileDesc != -1)
(81,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(82,)
(83,printLine(filename)
(84,O_CREAT)
(85,fileDesc)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
