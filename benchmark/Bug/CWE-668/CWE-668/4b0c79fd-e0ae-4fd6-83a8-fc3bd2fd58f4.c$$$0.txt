-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_environment_15_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[250] = L"PATH=";
    data = dataBuffer;
    switch(6)
    {
    case 6:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 250-dataLen-1);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */
    PUTENV(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
29,30
29,31
29,32
29,33
29,34
29,35
30,31
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
83,84
84,85
84,86
85,86
89,90
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,28,31,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,81,82,86,87,88,92,94
-----computeFrom-----
22,23
22,24
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_environment_15_bad(){    wchar_t * data;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 250-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
void
CWE427_Uncontrolled_Search_Path_Element__wchar_t_environment_15_bad()
CWE427_Uncontrolled_Search_Path_Element__wchar_t_environment_15_bad
{    wchar_t * data;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 250-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[250] = L"PATH=";
wchar_t dataBuffer[250] = L"PATH=";
wchar_t
dataBuffer[250] = L"PATH="
dataBuffer
[250]
250
= L"PATH="
L"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 250-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 250-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 250-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 250-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 250-dataLen-1);        }
wcsncat(data+dataLen, environment, 250-dataLen-1);
wcsncat(data+dataLen, environment, 250-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
250-dataLen-1
250-dataLen
250
dataLen
dataLen
1
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
PUTENV(data);
PUTENV(data)
PUTENV
PUTENV
data
data
-----joern-----
(26,28,0)
(31,21,0)
(3,22,0)
(16,20,0)
(25,31,0)
(4,10,0)
(23,26,0)
(41,20,0)
(22,28,0)
(21,22,0)
(32,31,0)
(43,22,0)
(20,31,0)
(37,29,0)
(0,16,0)
(33,22,0)
(5,8,0)
(42,28,0)
(29,37,0)
(15,16,0)
(31,20,0)
(14,15,0)
(13,8,0)
(15,21,0)
(40,8,0)
(35,8,0)
(20,16,0)
(10,29,0)
(16,6,0)
(35,39,0)
(29,22,0)
(21,7,0)
(11,10,0)
(9,7,0)
(12,15,0)
(15,39,0)
(27,35,0)
(2,29,0)
(34,39,0)
(19,39,0)
(38,28,0)
(16,29,0)
(16,15,0)
(7,21,0)
(18,37,0)
(17,28,0)
(1,21,0)
(36,28,0)
(39,8,0)
(7,39,0)
(9,1,1)
(4,29,1)
(15,12,1)
(37,18,1)
(7,9,1)
(26,23,1)
(24,35,1)
(12,14,1)
(19,5,1)
(0,15,1)
(15,21,1)
(10,29,1)
(31,25,1)
(10,11,1)
(11,4,1)
(36,10,1)
(16,20,1)
(16,15,1)
(27,36,1)
(14,10,1)
(36,16,1)
(25,32,1)
(35,27,1)
(2,21,1)
(32,41,1)
(39,34,1)
(27,42,1)
(30,39,1)
(29,37,1)
(23,30,1)
(20,31,1)
(31,21,1)
(34,19,1)
(18,2,1)
(15,39,1)
(42,26,1)
(41,0,1)
(1,30,1)
(35,39,1)
(21,7,1)
(16,29,1)
(7,39,1)
(12,10,2)
(36,30,2)
(7,30,2)
(10,30,2)
(18,30,2)
(37,30,2)
(15,39,2)
(16,15,2)
(4,30,2)
(31,10,2)
(42,30,2)
(32,10,2)
(20,10,2)
(16,10,2)
(14,10,2)
(16,29,2)
(29,37,2)
(21,7,2)
(9,30,2)
(26,30,2)
(2,30,2)
(29,30,2)
(15,10,2)
(10,29,2)
(25,10,2)
(20,31,2)
(1,30,2)
(11,30,2)
(16,20,2)
(15,21,2)
(35,39,2)
(41,10,2)
(7,39,2)
(21,30,2)
(23,30,2)
(31,21,2)
(0,10,2)
-----------------------------------
(0,environment)
(1,dataLen)
(2,environment)
(3,if (environment != NULL)
(4,environment)
(5,"PATH=")
(6,)
(7,wcslen(data)
(8,)
(9,data)
(10,environment != NULL)
(11,NULL)
(12,dataLen)
(13,data)
(14,data)
(15,data+dataLen)
(16,wcsncat(data+dataLen, environment, 250-dataLen-1)
(17,default:)
(18,ENV_VARIABLE)
(19,data)
(20,250-dataLen-1)
(21,dataLen = wcslen(data)
(22,)
(23,"Benign, fixed string")
(24,RET)
(25,1)
(26,printLine("Benign, fixed string")
(27,data)
(28,)
(29,* environment = GETENV(ENV_VARIABLE)
(30,6)
(31,dataLen-1)
(32,dataLen)
(33,environment)
(34,dataBuffer)
(35,PUTENV(data)
(36,break;)
(37,GETENV(ENV_VARIABLE)
(38,case 6:)
(39,data = dataBuffer)
(40,switch(6)
(41,250)
(42,break;)
(43,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
