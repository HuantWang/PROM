-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_18_bad()
{
    goto sink;
sink:
    {
        wchar_t filename[MAX_PATH] = L"";
        int fileDesc;
        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,
        * leading to an inescapable race condition when we try to open it again. */
        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)
        {
            exit(1);
        }
        printWLine(filename);
        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
        if (fileDesc != -1)
        {
            printLine("Temporary file was opened...now closing file");
            CLOSE(fileDesc);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
8,9
8,10
10,11
10,12
10,13
10,14
10,15
10,16
11,12
12,13
12,14
14,15
14,16
14,17
16,17
17,18
19,20
21,22
22,23
22,24
24,25
26,27
26,28
27,28
27,29
28,29
28,30
28,31
28,32
28,33
29,30
34,35
37,38
38,39
39,40
39,41
40,41
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
53,54
53,55
53,56
53,57
54,55
56,57
58,59
58,60
59,60
61,62
63,64
63,65
64,65
66,67
68,69
68,70
69,70
69,71
70,71
72,73
74,75
74,76
75,76
76,77
76,78
77,78
80,81
81,82
81,83
82,83
84,85
-----nextToken-----
2,4,7,9,13,15,18,20,23,25,30,31,32,33,35,36,41,42,46,48,52,55,57,60,62,65,67,71,73,78,79,83,85
-----computeFrom-----
27,28
27,29
50,51
50,52
58,59
58,60
63,64
63,65
69,70
69,71
-----guardedBy-----
71,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_18_bad(){    goto sink;sink:    {        wchar_t filename[MAX_PATH] = L"";        int fileDesc;        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,        * leading to an inescapable race condition when we try to open it again. */        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }        printWLine(filename);        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }    }}
void
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_18_bad()
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_18_bad
{    goto sink;sink:    {        wchar_t filename[MAX_PATH] = L"";        int fileDesc;        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,        * leading to an inescapable race condition when we try to open it again. */        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }        printWLine(filename);        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }    }}
goto sink;
sink
sink:    {        wchar_t filename[MAX_PATH] = L"";        int fileDesc;        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,        * leading to an inescapable race condition when we try to open it again. */        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }        printWLine(filename);        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }    }
sink
{        wchar_t filename[MAX_PATH] = L"";        int fileDesc;        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,        * leading to an inescapable race condition when we try to open it again. */        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }        printWLine(filename);        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }    }
wchar_t filename[MAX_PATH] = L"";
wchar_t filename[MAX_PATH] = L"";
wchar_t
filename[MAX_PATH] = L""
filename
[MAX_PATH]
MAX_PATH
MAX_PATH
= L""
L""
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }
GetTempFileNameW(L".", L"bad", 0, filename) == 0
GetTempFileNameW(L".", L"bad", 0, filename)
GetTempFileNameW
GetTempFileNameW
L"."
L"bad"
0
filename
filename
0
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
printWLine(filename);
printWLine(filename)
printWLine
printWLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }
fileDesc != -1
fileDesc
fileDesc
-1
1
{            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
-----joern-----
(1,28,0)
(2,25,0)
(15,2,0)
(24,15,0)
(14,31,0)
(4,7,0)
(22,28,0)
(28,22,0)
(22,31,0)
(7,13,0)
(31,22,0)
(0,2,0)
(29,2,0)
(11,15,0)
(26,21,0)
(20,28,0)
(9,3,0)
(10,24,0)
(23,3,0)
(5,25,0)
(12,0,0)
(21,17,0)
(22,2,0)
(8,22,0)
(19,25,0)
(15,24,0)
(25,3,0)
(30,31,0)
(0,13,0)
(18,25,0)
(2,22,0)
(6,19,0)
(17,25,0)
(16,25,0)
(10,11,1)
(15,2,1)
(27,15,1)
(15,24,1)
(4,15,1)
(11,2,1)
(29,19,1)
(22,28,1)
(21,26,1)
(27,0,1)
(20,1,1)
(19,6,1)
(16,9,1)
(7,4,1)
(30,8,1)
(0,12,1)
(12,7,1)
(26,16,1)
(1,31,1)
(8,29,1)
(2,22,1)
(28,20,1)
(31,14,1)
(22,31,1)
(24,10,1)
(14,30,1)
(0,2,1)
(6,21,1)
(2,22,2)
(22,28,2)
(15,24,2)
(0,2,2)
(4,15,2)
(12,15,2)
(15,2,2)
(7,15,2)
(22,31,2)
(0,15,2)
-----------------------------------
(0,CLOSE(fileDesc)
(1,S_IREAD)
(2,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(3,)
(4,"Temporary file was opened...now closing file")
(5,if (fileDesc != -1)
(6,filename)
(7,printLine("Temporary file was opened...now closing file")
(8,filename)
(9,goto sink;)
(10,1)
(11,fileDesc)
(12,fileDesc)
(13,)
(14,O_CREAT)
(15,fileDesc != -1)
(16,"")
(17,)
(18,fileDesc)
(19,printWLine(filename)
(20,S_IWRITE)
(21,exit(1)
(22,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(23,sink:)
(24,-1)
(25,)
(26,1)
(27,RET)
(28,S_IREAD|S_IWRITE)
(29,fileDesc)
(30,O_RDWR)
(31,O_RDWR|O_CREAT)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
