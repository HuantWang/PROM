-----label-----
1
-----code-----
char * CWE427_Uncontrolled_Search_Path_Element__char_console_22_badSource(char * data)
{
    if(CWE427_Uncontrolled_Search_Path_Element__char_console_22_badGlobal)
    {
        {
            /* Read input from the console */
            size_t dataLen = strlen(data);
            /* if there is room in data, read into it from the console */
            if (250-dataLen > 1)
            {
                /* POTENTIAL FLAW: Read data from the console */
                if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)
                {
                    /* The next few lines remove the carriage return from the string that is
                     * inserted by fgets() */
                    dataLen = strlen(data);
                    if (dataLen > 0 && data[dataLen-1] == '\n')
                    {
                        data[dataLen-1] = '\0';
                    }
                }
                else
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
13,14
15,16
16,17
16,18
17,18
18,19
18,20
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
29,30
29,31
30,31
30,32
31,32
31,33
33,34
36,37
37,38
37,39
37,40
38,39
38,40
39,40
39,41
39,42
39,43
40,41
42,43
42,44
43,44
45,46
47,48
47,49
48,49
48,50
51,52
52,53
52,54
54,55
56,57
58,59
60,61
60,62
61,62
62,63
62,64
63,64
65,66
65,67
66,67
68,69
70,71
70,72
71,72
71,73
72,73
72,74
73,74
76,77
76,78
77,78
77,79
78,79
80,81
80,82
81,82
85,86
86,87
87,88
87,89
88,89
88,90
89,90
91,92
91,93
92,93
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
-----nextToken-----
2,4,5,7,9,10,14,20,22,26,28,32,34,35,41,44,46,49,50,53,55,57,59,64,67,69,74,75,79,82,83,84,90,93,94,95,100,101,106,108,109,112
-----computeFrom-----
30,31
30,32
31,32
31,33
38,39
38,40
42,43
42,44
52,53
52,54
62,63
62,64
71,72
71,73
72,73
72,74
76,77
76,78
80,81
80,82
87,88
87,89
91,92
91,93
103,104
103,105
-----guardedBy-----
34,108
44,90
55,93
79,90
82,93
-----guardedByNegation-----
44,106
55,108
-----lastLexicalUse-----
44,106
55,108
-----jump-----
44,106
55,108
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE427_Uncontrolled_Search_Path_Element__char_console_22_badSource(char * data){    if(CWE427_Uncontrolled_Search_Path_Element__char_console_22_badGlobal)    {        {            /* Read input from the console */            size_t dataLen = strlen(data);            /* if there is room in data, read into it from the console */            if (250-dataLen > 1)            {                /* POTENTIAL FLAW: Read data from the console */                if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)                {                    /* The next few lines remove the carriage return from the string that is                     * inserted by fgets() */                    dataLen = strlen(data);                    if (dataLen > 0 && data[dataLen-1] == '\n')                    {                        data[dataLen-1] = '\0';                    }                }                else                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }            }        }    }    return data;}
char
* CWE427_Uncontrolled_Search_Path_Element__char_console_22_badSource(char * data)
*
CWE427_Uncontrolled_Search_Path_Element__char_console_22_badSource
char * data
char
* data
*
data
{    if(CWE427_Uncontrolled_Search_Path_Element__char_console_22_badGlobal)    {        {            /* Read input from the console */            size_t dataLen = strlen(data);            /* if there is room in data, read into it from the console */            if (250-dataLen > 1)            {                /* POTENTIAL FLAW: Read data from the console */                if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)                {                    /* The next few lines remove the carriage return from the string that is                     * inserted by fgets() */                    dataLen = strlen(data);                    if (dataLen > 0 && data[dataLen-1] == '\n')                    {                        data[dataLen-1] = '\0';                    }                }                else                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }            }        }    }    return data;}
if(CWE427_Uncontrolled_Search_Path_Element__char_console_22_badGlobal)    {        {            /* Read input from the console */            size_t dataLen = strlen(data);            /* if there is room in data, read into it from the console */            if (250-dataLen > 1)            {                /* POTENTIAL FLAW: Read data from the console */                if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)                {                    /* The next few lines remove the carriage return from the string that is                     * inserted by fgets() */                    dataLen = strlen(data);                    if (dataLen > 0 && data[dataLen-1] == '\n')                    {                        data[dataLen-1] = '\0';                    }                }                else                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }            }        }    }
CWE427_Uncontrolled_Search_Path_Element__char_console_22_badGlobal
CWE427_Uncontrolled_Search_Path_Element__char_console_22_badGlobal
{        {            /* Read input from the console */            size_t dataLen = strlen(data);            /* if there is room in data, read into it from the console */            if (250-dataLen > 1)            {                /* POTENTIAL FLAW: Read data from the console */                if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)                {                    /* The next few lines remove the carriage return from the string that is                     * inserted by fgets() */                    dataLen = strlen(data);                    if (dataLen > 0 && data[dataLen-1] == '\n')                    {                        data[dataLen-1] = '\0';                    }                }                else                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }            }        }    }
{            /* Read input from the console */            size_t dataLen = strlen(data);            /* if there is room in data, read into it from the console */            if (250-dataLen > 1)            {                /* POTENTIAL FLAW: Read data from the console */                if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)                {                    /* The next few lines remove the carriage return from the string that is                     * inserted by fgets() */                    dataLen = strlen(data);                    if (dataLen > 0 && data[dataLen-1] == '\n')                    {                        data[dataLen-1] = '\0';                    }                }                else                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
if (250-dataLen > 1)            {                /* POTENTIAL FLAW: Read data from the console */                if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)                {                    /* The next few lines remove the carriage return from the string that is                     * inserted by fgets() */                    dataLen = strlen(data);                    if (dataLen > 0 && data[dataLen-1] == '\n')                    {                        data[dataLen-1] = '\0';                    }                }                else                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }            }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{                /* POTENTIAL FLAW: Read data from the console */                if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)                {                    /* The next few lines remove the carriage return from the string that is                     * inserted by fgets() */                    dataLen = strlen(data);                    if (dataLen > 0 && data[dataLen-1] == '\n')                    {                        data[dataLen-1] = '\0';                    }                }                else                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }            }
if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)                {                    /* The next few lines remove the carriage return from the string that is                     * inserted by fgets() */                    dataLen = strlen(data);                    if (dataLen > 0 && data[dataLen-1] == '\n')                    {                        data[dataLen-1] = '\0';                    }                }                else                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL
fgets(data+dataLen, (int)(250-dataLen), stdin)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
stdin
stdin
NULL
NULL
{                    /* The next few lines remove the carriage return from the string that is                     * inserted by fgets() */                    dataLen = strlen(data);                    if (dataLen > 0 && data[dataLen-1] == '\n')                    {                        data[dataLen-1] = '\0';                    }                }
dataLen = strlen(data);
dataLen = strlen(data)
dataLen
dataLen
strlen(data)
strlen
strlen
data
data
if (dataLen > 0 && data[dataLen-1] == '\n')                    {                        data[dataLen-1] = '\0';                    }
dataLen > 0 && data[dataLen-1] == '\n'
dataLen > 0
dataLen
dataLen
0
data[dataLen-1] == '\n'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\n'
{                        data[dataLen-1] = '\0';                    }
data[dataLen-1] = '\0';
data[dataLen-1] = '\0'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\0'
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
return data;
data
data
-----joern-----
(26,27,0)
(55,33,0)
(39,34,0)
(19,22,0)
(62,24,0)
(45,20,0)
(63,45,0)
(14,25,0)
(35,29,0)
(52,56,0)
(34,52,0)
(11,1,0)
(16,37,0)
(28,5,0)
(10,16,0)
(1,21,0)
(66,28,0)
(51,1,0)
(22,3,0)
(22,34,0)
(62,28,0)
(20,56,0)
(20,41,0)
(54,51,0)
(47,13,0)
(53,27,0)
(21,34,0)
(3,22,0)
(34,7,0)
(17,33,0)
(51,13,0)
(31,7,0)
(2,7,0)
(60,16,0)
(27,55,0)
(37,59,0)
(48,66,0)
(24,33,0)
(13,51,0)
(13,56,0)
(57,21,0)
(64,22,0)
(9,28,0)
(52,34,0)
(18,14,0)
(32,20,0)
(43,21,0)
(1,11,0)
(41,15,0)
(46,41,0)
(38,51,0)
(13,34,0)
(44,45,0)
(8,5,0)
(24,62,0)
(33,24,0)
(20,45,0)
(33,55,0)
(16,34,0)
(28,66,0)
(45,28,0)
(7,30,0)
(40,62,0)
(4,25,0)
(65,3,0)
(29,59,0)
(16,56,0)
(12,23,0)
(50,52,0)
(51,54,0)
(6,14,0)
(14,56,0)
(36,62,0)
(61,37,0)
(58,13,0)
(55,56,0)
(42,55,0)
(27,28,0)
(21,1,0)
(1,51,0)
(66,56,0)
(55,27,0)
(0,54,0)
(6,41,1)
(13,34,1)
(51,13,1)
(27,26,1)
(35,54,1)
(21,34,1)
(27,28,1)
(6,49,1)
(62,28,1)
(32,24,1)
(3,65,1)
(55,56,1)
(6,37,1)
(10,29,1)
(21,43,1)
(14,56,1)
(47,58,1)
(26,53,1)
(39,49,1)
(57,13,1)
(66,48,1)
(28,66,1)
(46,20,1)
(54,0,1)
(16,56,1)
(52,56,1)
(33,55,1)
(42,62,1)
(9,54,1)
(17,55,1)
(24,62,1)
(33,17,1)
(54,51,1)
(36,40,1)
(53,42,1)
(22,19,1)
(18,14,1)
(1,21,1)
(65,22,1)
(13,47,1)
(20,56,1)
(58,3,1)
(34,52,1)
(6,3,1)
(6,24,1)
(52,50,1)
(45,44,1)
(13,56,1)
(51,1,1)
(29,35,1)
(66,56,1)
(24,33,1)
(43,57,1)
(37,61,1)
(48,9,1)
(60,10,1)
(50,39,1)
(16,34,1)
(40,28,1)
(61,16,1)
(14,6,1)
(44,63,1)
(3,22,1)
(55,27,1)
(1,11,1)
(19,64,1)
(22,34,1)
(20,45,1)
(38,1,1)
(63,32,1)
(64,34,1)
(0,51,1)
(51,38,1)
(41,46,1)
(62,36,1)
(16,60,1)
(45,28,1)
(18,14,2)
(44,24,2)
(37,54,2)
(53,62,2)
(48,54,2)
(32,24,2)
(24,33,2)
(42,62,2)
(38,3,2)
(36,54,2)
(34,52,2)
(51,13,2)
(22,34,2)
(47,3,2)
(29,54,2)
(41,24,2)
(24,54,2)
(62,54,2)
(33,62,2)
(54,51,2)
(63,24,2)
(16,34,2)
(27,62,2)
(21,34,2)
(16,54,2)
(46,24,2)
(22,49,2)
(61,54,2)
(34,49,2)
(3,22,2)
(13,34,2)
(0,3,2)
(19,49,2)
(66,56,2)
(3,49,2)
(9,54,2)
(20,24,2)
(45,24,2)
(64,49,2)
(27,28,2)
(60,54,2)
(52,56,2)
(28,54,2)
(65,49,2)
(45,28,2)
(28,66,2)
(51,1,2)
(52,49,2)
(24,62,2)
(55,62,2)
(13,3,2)
(58,3,2)
(16,56,2)
(62,28,2)
(1,21,2)
(40,54,2)
(33,55,2)
(55,27,2)
(13,56,2)
(26,62,2)
(55,56,2)
(66,54,2)
(57,3,2)
(39,49,2)
(20,56,2)
(14,56,2)
(54,3,2)
(10,54,2)
(20,45,2)
(21,3,2)
(17,62,2)
(50,49,2)
(43,3,2)
(35,54,2)
(51,3,2)
(1,3,2)
(1,11,2)
-----------------------------------
(0,NULL)
(1,(int)
(2,if (250-dataLen > 1)
(3,250-dataLen > 1)
(4,if(CWE427_Uncontrolled_Search_Path_Element__char_console_22_badGlobal)
(5,)
(6,data)
(7,)
(8,if (dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(9,dataLen)
(10,data)
(11,int)
(12,if (fgets(data+dataLen, (int)
(13,data+dataLen)
(14,return data;)
(15,)
(16,data[dataLen])
(17,\\\'\\\\n\\\')
(18,RET)
(19,dataLen)
(20,data[dataLen-1])
(21,250-dataLen)
(22,250-dataLen)
(23,)
(24,dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(25,)
(26,1)
(27,dataLen-1)
(28,dataLen = strlen(data)
(29,printLine("fgets()
(30,)
(31,dataLen)
(32,data)
(33,data[dataLen-1] == \\\'\\\\n\\\')
(34,dataLen = strlen(data)
(35,"fgets()
(36,0)
(37,data[dataLen] = \\\'\\\\0\\\')
(38,stdin)
(39,dataLen)
(40,dataLen)
(41,data[dataLen-1] = \\\'\\\\0\\\')
(42,data)
(43,dataLen)
(44,1)
(45,dataLen-1)
(46,\\\'\\\\0\\\')
(47,dataLen)
(48,data)
(49,CWE427_Uncontrolled_Search_Path_Element__char_console_22_badGlobal)
(50,data)
(51,fgets(data+dataLen, (int)
(52,strlen(data)
(53,dataLen)
(54,fgets(data+dataLen, (int)
(55,data[dataLen-1])
(56,char * data)
(57,250)
(58,data)
(59,)
(60,dataLen)
(61,\\\'\\\\0\\\')
(62,dataLen > 0)
(63,dataLen)
(64,250)
(65,1)
(66,strlen(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
