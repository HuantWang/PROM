-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_13_bad()
{
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            wchar_t filename[MAX_PATH] = L"";
            int fileDesc;
            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,
            * leading to an inescapable race condition when we try to open it again. */
            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)
            {
                exit(1);
            }
            printWLine(filename);
            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
7,9
8,9
11,12
12,13
12,14
12,15
12,16
12,17
12,18
13,14
14,15
14,16
16,17
16,18
16,19
18,19
19,20
21,22
23,24
24,25
24,26
26,27
28,29
28,30
29,30
29,31
30,31
30,32
30,33
30,34
30,35
31,32
36,37
39,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
55,56
55,57
55,58
55,59
56,57
58,59
60,61
60,62
61,62
63,64
65,66
65,67
66,67
68,69
70,71
70,72
71,72
71,73
72,73
74,75
76,77
76,78
77,78
78,79
78,80
79,80
82,83
83,84
83,85
84,85
86,87
-----nextToken-----
2,4,9,10,15,17,20,22,25,27,32,33,34,35,37,38,43,44,48,50,54,57,59,62,64,67,69,73,75,80,81,85,87
-----computeFrom-----
7,8
7,9
29,30
29,31
52,53
52,54
60,61
60,62
65,66
65,67
71,72
71,73
-----guardedBy-----
73,87
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_13_bad(){    if(GLOBAL_CONST_FIVE==5)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
void
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_13_bad()
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_13_bad
{    if(GLOBAL_CONST_FIVE==5)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
if(GLOBAL_CONST_FIVE==5)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
{            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
wchar_t filename[MAX_PATH] = L"";
wchar_t filename[MAX_PATH] = L"";
wchar_t
filename[MAX_PATH] = L""
filename
[MAX_PATH]
MAX_PATH
MAX_PATH
= L""
L""
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }
GetTempFileNameW(L".", L"bad", 0, filename) == 0
GetTempFileNameW(L".", L"bad", 0, filename)
GetTempFileNameW
GetTempFileNameW
L"."
L"bad"
0
filename
filename
0
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printWLine(filename);
printWLine(filename)
printWLine
printWLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
-----joern-----
(18,16,0)
(16,6,0)
(31,24,0)
(3,23,0)
(28,11,0)
(29,22,0)
(17,31,0)
(13,24,0)
(1,7,0)
(24,31,0)
(25,11,0)
(24,23,0)
(33,11,0)
(30,0,0)
(12,25,0)
(27,26,0)
(23,11,0)
(32,13,0)
(0,34,0)
(15,26,0)
(4,24,0)
(23,24,0)
(7,23,0)
(19,13,0)
(8,15,0)
(11,10,0)
(24,13,0)
(26,23,0)
(21,11,0)
(14,31,0)
(7,6,0)
(20,9,0)
(34,11,0)
(2,9,0)
(26,15,0)
(7,1,1)
(19,4,1)
(4,3,1)
(8,27,1)
(5,9,1)
(12,0,1)
(30,33,1)
(9,20,1)
(5,7,1)
(16,18,1)
(25,12,1)
(31,17,1)
(15,8,1)
(14,13,1)
(23,24,1)
(27,23,1)
(1,16,1)
(24,31,1)
(33,9,1)
(7,23,1)
(5,26,1)
(26,23,1)
(20,2,1)
(32,19,1)
(24,13,1)
(0,30,1)
(13,32,1)
(26,15,1)
(18,26,1)
(3,25,1)
(17,14,1)
(13,9,2)
(27,9,2)
(25,9,2)
(1,26,2)
(8,9,2)
(7,23,2)
(15,9,2)
(26,23,2)
(24,9,2)
(32,9,2)
(30,9,2)
(18,26,2)
(3,9,2)
(23,9,2)
(12,9,2)
(14,9,2)
(26,15,2)
(19,9,2)
(4,9,2)
(7,26,2)
(17,9,2)
(33,9,2)
(16,26,2)
(24,13,2)
(31,9,2)
(26,9,2)
(23,24,2)
(0,9,2)
(24,31,2)
-----------------------------------
(0,exit(1)
(1,fileDesc)
(2,GLOBAL_CONST_FIVE)
(3,fileDesc)
(4,filename)
(5,RET)
(6,)
(7,CLOSE(fileDesc)
(8,1)
(9,GLOBAL_CONST_FIVE==5)
(10,)
(11,)
(12,filename)
(13,O_RDWR|O_CREAT)
(14,S_IREAD)
(15,-1)
(16,printLine("Temporary file was opened...now closing file")
(17,S_IWRITE)
(18,"Temporary file was opened...now closing file")
(19,O_RDWR)
(20,5)
(21,fileDesc)
(22,)
(23,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(24,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(25,printWLine(filename)
(26,fileDesc != -1)
(27,fileDesc)
(28,if (fileDesc != -1)
(29,if(GLOBAL_CONST_FIVE==5)
(30,1)
(31,S_IREAD|S_IWRITE)
(32,O_CREAT)
(33,"")
(34,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
