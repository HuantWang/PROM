-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_console_63_bad()
{
    char * data;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    {
        /* Read input from the console */
        size_t dataLen = strlen(data);
        /* if there is room in data, read into it from the console */
        if (250-dataLen > 1)
        {
            /* POTENTIAL FLAW: Read data from the console */
            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)
            {
                /* The next few lines remove the carriage return from the string that is
                 * inserted by fgets() */
                dataLen = strlen(data);
                if (dataLen > 0 && data[dataLen-1] == '\n')
                {
                    data[dataLen-1] = '\0';
                }
            }
            else
            {
                printLine("fgets() failed");
                /* Restore NUL terminator if fgets fails */
                data[dataLen] = '\0';
            }
        }
    }
    CWE427_Uncontrolled_Search_Path_Element__char_console_63b_badSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
38,39
40,41
40,42
41,42
41,43
42,43
42,44
44,45
47,48
48,49
48,50
48,51
49,50
49,51
50,51
50,52
50,53
50,54
51,52
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
62,63
63,64
63,65
65,66
67,68
69,70
71,72
71,73
72,73
73,74
73,75
74,75
76,77
76,78
77,78
79,80
81,82
81,83
82,83
82,84
83,84
83,85
84,85
87,88
87,89
88,89
88,90
89,90
91,92
91,93
92,93
96,97
97,98
98,99
98,100
99,100
99,101
100,101
102,103
102,104
103,104
107,108
107,109
108,109
109,110
109,111
110,111
113,114
114,115
114,116
115,116
115,117
116,117
118,119
121,122
122,123
122,124
123,124
125,126
126,127
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,31,33,37,39,43,45,46,52,55,57,60,61,64,66,68,70,75,78,80,85,86,90,93,94,95,101,104,105,106,111,112,117,119,120,124,127
-----computeFrom-----
22,23
22,24
41,42
41,43
42,43
42,44
49,50
49,51
53,54
53,55
63,64
63,65
73,74
73,75
82,83
82,84
83,84
83,85
87,88
87,89
91,92
91,93
98,99
98,100
102,103
102,104
114,115
114,116
-----guardedBy-----
45,119
55,101
66,104
90,101
93,104
-----guardedByNegation-----
55,117
66,119
-----lastLexicalUse-----
55,117
66,119
-----jump-----
55,117
66,119
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_console_63_bad(){    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }    CWE427_Uncontrolled_Search_Path_Element__char_console_63b_badSink(&data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_console_63_bad()
CWE427_Uncontrolled_Search_Path_Element__char_console_63_bad
{    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }    CWE427_Uncontrolled_Search_Path_Element__char_console_63b_badSink(&data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }
if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }
fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL
fgets(data+dataLen, (int)(250-dataLen), stdin)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
stdin
stdin
NULL
NULL
{                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }
dataLen = strlen(data);
dataLen = strlen(data)
dataLen
dataLen
strlen(data)
strlen
strlen
data
data
if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }
dataLen > 0 && data[dataLen-1] == '\n'
dataLen > 0
dataLen
dataLen
0
data[dataLen-1] == '\n'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\n'
{                    data[dataLen-1] = '\0';                }
data[dataLen-1] = '\0';
data[dataLen-1] = '\0'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\0'
{                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
CWE427_Uncontrolled_Search_Path_Element__char_console_63b_badSink(&data);
CWE427_Uncontrolled_Search_Path_Element__char_console_63b_badSink(&data)
CWE427_Uncontrolled_Search_Path_Element__char_console_63b_badSink
CWE427_Uncontrolled_Search_Path_Element__char_console_63b_badSink
&data
data
data
-----joern-----
(31,53,0)
(59,25,0)
(19,47,0)
(26,49,0)
(23,57,0)
(48,45,0)
(67,45,0)
(9,32,0)
(28,46,0)
(51,0,0)
(49,6,0)
(11,25,0)
(6,32,0)
(5,59,0)
(2,5,0)
(15,17,0)
(6,49,0)
(56,5,0)
(63,43,0)
(13,28,0)
(16,51,0)
(11,34,0)
(39,46,0)
(12,15,0)
(58,37,0)
(51,25,0)
(45,28,0)
(52,28,0)
(45,67,0)
(50,17,0)
(61,20,0)
(7,18,0)
(47,25,0)
(32,0,0)
(59,5,0)
(62,42,0)
(35,11,0)
(37,28,0)
(3,18,0)
(46,18,0)
(70,47,0)
(34,11,0)
(14,8,0)
(1,13,0)
(54,38,0)
(34,38,0)
(66,52,0)
(27,32,0)
(0,51,0)
(19,18,0)
(57,0,0)
(28,52,0)
(53,31,0)
(44,11,0)
(13,15,0)
(33,14,0)
(0,42,0)
(25,18,0)
(5,0,0)
(20,18,0)
(49,59,0)
(57,14,0)
(71,59,0)
(65,37,0)
(22,45,0)
(29,67,0)
(31,37,0)
(4,13,0)
(14,25,0)
(36,50,0)
(8,69,0)
(59,49,0)
(34,31,0)
(11,28,0)
(40,8,0)
(13,25,0)
(30,46,0)
(64,25,0)
(32,6,0)
(25,20,0)
(47,19,0)
(37,31,0)
(31,34,0)
(52,25,0)
(41,34,0)
(24,25,0)
(60,57,0)
(38,34,0)
(21,28,0)
(55,0,0)
(68,20,0)
(14,57,0)
(20,68,1)
(65,58,1)
(6,32,1)
(41,31,1)
(11,44,1)
(36,38,1)
(37,65,1)
(27,0,1)
(14,25,1)
(10,19,1)
(6,49,1)
(35,67,1)
(28,52,1)
(45,22,1)
(2,71,1)
(52,66,1)
(40,14,1)
(9,27,1)
(13,25,1)
(66,21,1)
(70,8,1)
(37,28,1)
(12,13,1)
(54,34,1)
(31,53,1)
(25,24,1)
(16,55,1)
(31,37,1)
(25,20,1)
(34,31,1)
(64,20,1)
(47,25,1)
(11,28,1)
(29,45,1)
(13,1,1)
(56,2,1)
(68,61,1)
(55,38,1)
(34,11,1)
(49,26,1)
(70,67,1)
(15,12,1)
(8,40,1)
(71,32,1)
(60,33,1)
(21,25,1)
(38,54,1)
(11,25,1)
(23,60,1)
(51,25,1)
(52,25,1)
(19,47,1)
(13,28,1)
(51,16,1)
(34,41,1)
(24,64,1)
(14,57,1)
(58,11,1)
(4,50,1)
(67,45,1)
(59,25,1)
(48,28,1)
(50,36,1)
(33,6,1)
(32,0,1)
(57,0,1)
(45,28,1)
(70,15,1)
(1,4,1)
(38,34,1)
(26,59,1)
(57,23,1)
(44,35,1)
(67,29,1)
(32,9,1)
(5,56,1)
(47,70,1)
(59,5,1)
(49,59,1)
(0,51,1)
(70,6,1)
(22,48,1)
(5,0,1)
(11,25,2)
(51,25,2)
(12,38,2)
(55,38,2)
(71,32,2)
(0,51,2)
(54,67,2)
(59,5,2)
(59,25,2)
(2,32,2)
(59,32,2)
(33,6,2)
(6,38,2)
(49,32,2)
(34,31,2)
(23,6,2)
(37,67,2)
(5,0,2)
(31,67,2)
(4,38,2)
(56,32,2)
(26,32,2)
(50,38,2)
(13,38,2)
(11,67,2)
(14,6,2)
(37,28,2)
(9,38,2)
(52,25,2)
(25,20,2)
(6,49,2)
(6,32,2)
(11,28,2)
(57,6,2)
(41,67,2)
(34,67,2)
(14,25,2)
(14,57,2)
(8,6,2)
(27,38,2)
(32,0,2)
(13,25,2)
(31,37,2)
(13,28,2)
(31,53,2)
(38,67,2)
(47,25,2)
(60,6,2)
(65,67,2)
(35,67,2)
(49,59,2)
(67,45,2)
(58,67,2)
(16,38,2)
(34,11,2)
(1,38,2)
(38,34,2)
(28,52,2)
(15,38,2)
(44,67,2)
(51,38,2)
(36,38,2)
(32,38,2)
(5,32,2)
(57,0,2)
(19,47,2)
(40,6,2)
(0,38,2)
(45,28,2)
-----------------------------------
(0,dataLen = strlen(data)
(1,dataLen)
(2,dataLen)
(3,data)
(4,data)
(5,dataLen-1)
(6,dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(7,dataBuffer)
(8,data[dataLen-1] = \\\'\\\\0\\\')
(9,0)
(10,RET)
(11,data+dataLen)
(12,\\\'\\\\0\\\')
(13,data[dataLen])
(14,data[dataLen-1])
(15,data[dataLen] = \\\'\\\\0\\\')
(16,data)
(17,)
(18,)
(19,CWE427_Uncontrolled_Search_Path_Element__char_console_63b_badSink(&data)
(20,dataBuffer[250] = "PATH=")
(21,dataLen)
(22,dataLen)
(23,1)
(24,dataBuffer)
(25,data = dataBuffer)
(26,\\\'\\\\n\\\')
(27,dataLen)
(28,dataLen = strlen(data)
(29,1)
(30,if (250-dataLen > 1)
(31,(int)
(32,dataLen > 0)
(33,data)
(34,fgets(data+dataLen, (int)
(35,data)
(36,"fgets()
(37,250-dataLen)
(38,fgets(data+dataLen, (int)
(39,dataLen)
(40,\\\'\\\\0\\\')
(41,stdin)
(42,)
(43,)
(44,dataLen)
(45,250-dataLen)
(46,)
(47,&data)
(48,250)
(49,data[dataLen-1] == \\\'\\\\n\\\')
(50,printLine("fgets()
(51,strlen(data)
(52,strlen(data)
(53,int)
(54,NULL)
(55,dataLen)
(56,1)
(57,dataLen-1)
(58,250)
(59,data[dataLen-1])
(60,dataLen)
(61,dataBuffer)
(62,if (dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(63,if (fgets(data+dataLen, (int)
(64,data)
(65,dataLen)
(66,data)
(67,250-dataLen > 1)
(68,"PATH=")
(69,)
(70,data)
(71,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
