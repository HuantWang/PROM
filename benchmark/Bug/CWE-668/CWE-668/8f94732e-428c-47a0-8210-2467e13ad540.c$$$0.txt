-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_char_63b_badSink(char * * dataPtr)
{
    char * data = *dataPtr;
    {
        HANDLE pHandle;
        char * username = "User";
        char * domain = "Domain";
        /* POTENTIAL FLAW: Attempt to login user with password from the source */
        if (LogonUserA(
                    username,
                    domain,
                    data,
                    LOGON32_LOGON_NETWORK,
                    LOGON32_PROVIDER_DEFAULT,
                    &pHandle) != 0)
        {
            printLine("User logged in successfully.");
            CloseHandle(pHandle);
        }
        else
        {
            printLine("Unable to login.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
20,21
22,23
22,24
22,25
22,26
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
32,33
32,34
32,35
35,36
37,38
38,39
38,40
40,41
40,42
40,43
43,44
45,46
45,47
45,48
46,47
46,48
47,48
47,49
47,50
47,51
47,52
47,53
47,54
48,49
50,51
52,53
54,55
56,57
58,59
60,61
61,62
64,65
64,66
65,66
66,67
66,68
67,68
70,71
71,72
71,73
72,73
74,75
76,77
77,78
78,79
78,80
79,80
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,26,28,31,33,34,36,39,41,42,44,49,51,53,55,57,59,62,63,68,69,73,75,80,81
-----computeFrom-----
46,47
46,48
-----guardedBy-----
62,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_char_63b_badSink(char * * dataPtr){    char * data = *dataPtr;    {        HANDLE pHandle;        char * username = "User";        char * domain = "Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
void
CWE256_Plaintext_Storage_of_Password__w32_char_63b_badSink(char * * dataPtr)
CWE256_Plaintext_Storage_of_Password__w32_char_63b_badSink
char * * dataPtr
char
* * dataPtr
*
*
dataPtr
{    char * data = *dataPtr;    {        HANDLE pHandle;        char * username = "User";        char * domain = "Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
char * data = *dataPtr;
char * data = *dataPtr;
char
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        HANDLE pHandle;        char * username = "User";        char * domain = "Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
char * username = "User";
char * username = "User";
char
* username = "User"
*
username
= "User"
"User"
char * domain = "Domain";
char * domain = "Domain";
char
* domain = "Domain"
*
domain
= "Domain"
"Domain"
if (LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }
LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0
LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle)
LogonUserA
LogonUserA
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{            printLine("User logged in successfully.");            CloseHandle(pHandle);        }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{            printLine("Unable to login.");        }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(28,19,0)
(33,19,0)
(27,22,0)
(11,4,0)
(7,36,0)
(21,14,0)
(22,16,0)
(25,16,0)
(36,16,0)
(36,7,0)
(31,22,0)
(7,18,0)
(19,23,0)
(5,22,0)
(20,19,0)
(19,14,0)
(3,36,0)
(19,6,0)
(26,19,0)
(24,2,0)
(1,19,0)
(19,36,0)
(23,22,0)
(29,11,0)
(12,6,0)
(9,6,0)
(19,17,0)
(2,4,0)
(14,19,0)
(10,23,0)
(6,22,0)
(35,30,0)
(0,22,0)
(13,7,0)
(32,17,0)
(8,23,0)
(34,35,0)
(17,19,0)
(28,33,1)
(23,10,1)
(12,36,1)
(7,13,1)
(21,19,1)
(8,6,1)
(19,17,1)
(34,14,1)
(24,11,1)
(17,32,1)
(33,26,1)
(2,24,1)
(15,2,1)
(20,23,1)
(6,9,1)
(13,3,1)
(35,34,1)
(14,19,1)
(19,6,1)
(15,35,1)
(19,36,1)
(11,29,1)
(1,28,1)
(10,8,1)
(9,12,1)
(36,7,1)
(29,14,1)
(7,18,1)
(19,23,1)
(32,1,1)
(14,21,1)
(26,20,1)
(14,19,2)
(19,17,2)
(7,18,2)
(36,7,2)
(2,14,2)
(19,6,2)
(34,14,2)
(29,14,2)
(24,14,2)
(35,14,2)
(19,36,2)
(11,14,2)
(19,23,2)
-----------------------------------
(0,username)
(1,LOGON32_PROVIDER_DEFAULT)
(2,CloseHandle(pHandle)
(3,data)
(4,)
(5,if (LogonUserA(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(6,* username = "User")
(7,*dataPtr)
(8,domain)
(9,"User")
(10,"Domain")
(11,printLine("User logged in successfully.")
(12,username)
(13,dataPtr)
(14,LogonUserA(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(15,RET)
(16,)
(17,&pHandle)
(18,char * * dataPtr)
(19,LogonUserA(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(20,username)
(21,0)
(22,)
(23,* domain = "Domain")
(24,pHandle)
(25,data)
(26,domain)
(27,pHandle)
(28,LOGON32_LOGON_NETWORK)
(29,"User logged in successfully.")
(30,)
(31,domain)
(32,pHandle)
(33,data)
(34,"Unable to login.")
(35,printLine("Unable to login.")
(36,* data = *dataPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
