-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_17_bad()
{
    int i,j;
    wchar_t * data;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    for(i = 0; i < 1; i++)
    {
        {
            FILE *pFile;
            pFile = fopen("passwords.txt", "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read the password from a file */
                if (fgetws(data, 100, pFile) == NULL)
                {
                    data[0] = L'\0';
                }
                fclose(pFile);
            }
            else
            {
                data[0] = L'\0';
            }
        }
    }
    for(j = 0; j < 1; j++)
    {
        {
            HANDLE pHandle;
            wchar_t * username = L"User";
            wchar_t * domain = L"Domain";
            /* POTENTIAL FLAW: Attempt to login user with password from the source */
            if (LogonUserW(
                        username,
                        domain,
                        data,
                        LOGON32_LOGON_NETWORK,
                        LOGON32_PROVIDER_DEFAULT,
                        &pHandle) != 0)
            {
                printLine("User logged in successfully.");
                CloseHandle(pHandle);
            }
            else
            {
                printLine("Unable to login.");
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
16,18
19,20
20,21
20,22
22,23
22,24
22,25
24,25
26,27
28,29
29,30
29,31
30,31
32,33
34,35
34,36
34,37
34,38
35,36
36,37
36,38
37,38
40,41
40,42
41,42
44,45
45,46
47,48
48,49
48,50
48,51
49,50
50,51
50,52
51,52
53,54
53,55
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
65,66
65,67
65,68
66,67
66,68
67,68
69,70
71,72
71,73
72,73
72,74
73,74
73,75
74,75
74,76
74,77
74,78
75,76
77,78
80,81
82,83
84,85
85,86
86,87
86,88
87,88
87,89
88,89
92,93
93,94
93,95
94,95
96,97
98,99
99,100
100,101
100,102
101,102
101,103
102,103
106,107
106,108
106,109
106,110
107,108
108,109
108,110
109,110
112,113
112,114
113,114
116,117
117,118
119,120
120,121
120,122
120,123
120,124
121,122
122,123
122,124
123,124
125,126
127,128
128,129
128,130
130,131
130,132
130,133
133,134
135,136
136,137
136,138
138,139
138,140
138,141
141,142
143,144
143,145
143,146
144,145
144,146
145,146
145,147
145,148
145,149
145,150
145,151
145,152
146,147
148,149
150,151
152,153
154,155
156,157
158,159
159,160
162,163
162,164
163,164
164,165
164,166
165,166
168,169
169,170
169,171
170,171
172,173
174,175
175,176
176,177
176,178
177,178
-----nextToken-----
2,4,8,10,12,15,17,18,21,23,25,27,31,33,38,39,42,43,46,52,54,55,59,62,63,64,68,70,76,78,79,81,83,89,90,91,95,97,103,104,105,110,111,114,115,118,124,126,129,131,132,134,137,139,140,142,147,149,151,153,155,157,160,161,166,167,171,173,178,179
-----computeFrom-----
29,30
29,31
36,37
36,38
40,41
40,42
57,58
57,59
66,67
66,68
73,74
73,75
86,87
86,88
100,101
100,102
108,109
108,110
112,113
112,114
144,145
144,146
-----guardedBy-----
70,83
68,97
78,89
160,173
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_17_bad(){    int i,j;    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }    }    for(j = 0; j < 1; j++)    {        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }}
void
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_17_bad()
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_17_bad
{    int i,j;    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }    }    for(j = 0; j < 1; j++)    {        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }}
int i,j;
int i,j;
int
i
i
j
j
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = L"";
wchar_t dataBuffer[100] = L"";
wchar_t
dataBuffer[100] = L""
dataBuffer
[100]
100
= L""
L""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
for(i = 0; i < 1; i++)    {        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }    }
{            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }
FILE *pFile;
FILE *pFile;
FILE
FILE
*pFile
*
pFile
pFile = fopen("passwords.txt", "r");
pFile = fopen("passwords.txt", "r")
pFile
pFile
fopen("passwords.txt", "r")
fopen
fopen
"passwords.txt"
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }
if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }
fgetws(data, 100, pFile) == NULL
fgetws(data, 100, pFile)
fgetws
fgetws
data
data
100
pFile
pFile
NULL
NULL
{                    data[0] = L'\0';                }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
{                data[0] = L'\0';            }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
for(j = 0; j < 1; j++)    {        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }
{            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
wchar_t * username = L"User";
wchar_t * username = L"User";
wchar_t
* username = L"User"
*
username
= L"User"
L"User"
wchar_t * domain = L"Domain";
wchar_t * domain = L"Domain";
wchar_t
* domain = L"Domain"
*
domain
= L"Domain"
L"Domain"
if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }
LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0
LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle)
LogonUserW
LogonUserW
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{                printLine("User logged in successfully.");                CloseHandle(pHandle);            }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{                printLine("Unable to login.");            }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(25,70,0)
(18,16,0)
(1,71,0)
(74,46,0)
(35,53,0)
(71,18,0)
(50,7,0)
(40,7,0)
(11,31,0)
(64,16,0)
(49,16,0)
(67,36,0)
(16,27,0)
(55,31,0)
(63,18,0)
(42,14,0)
(66,28,0)
(58,41,0)
(19,67,0)
(38,66,0)
(21,51,0)
(56,28,0)
(53,30,0)
(60,76,0)
(46,59,0)
(52,31,0)
(26,7,0)
(57,67,0)
(18,65,0)
(43,52,0)
(20,28,0)
(53,36,0)
(67,18,0)
(9,71,0)
(47,65,0)
(63,12,0)
(67,57,0)
(45,54,0)
(30,53,0)
(2,53,0)
(13,7,0)
(54,28,0)
(69,57,0)
(70,22,0)
(62,18,0)
(39,7,0)
(44,55,0)
(14,53,0)
(72,70,0)
(3,30,0)
(17,55,0)
(48,23,0)
(37,36,0)
(53,14,0)
(34,53,0)
(36,7,0)
(4,66,0)
(68,63,0)
(51,75,0)
(10,31,0)
(0,12,0)
(61,65,0)
(33,70,0)
(5,53,0)
(76,75,0)
(24,53,0)
(32,67,0)
(15,67,0)
(8,7,0)
(29,36,0)
(65,18,0)
(73,70,0)
(38,28,1)
(56,20,1)
(28,56,1)
(4,38,1)
(29,50,1)
(72,73,1)
(6,66,1)
(31,10,1)
(42,53,1)
(11,36,1)
(62,55,1)
(48,57,1)
(51,21,1)
(19,71,1)
(67,18,1)
(76,60,1)
(66,28,1)
(5,34,1)
(73,66,1)
(52,43,1)
(54,28,1)
(57,67,1)
(52,31,1)
(46,74,1)
(58,71,1)
(14,42,1)
(10,11,1)
(47,62,1)
(63,68,1)
(54,45,1)
(44,52,1)
(71,18,1)
(15,19,1)
(66,4,1)
(14,53,1)
(21,14,1)
(68,57,1)
(17,44,1)
(45,76,1)
(55,17,1)
(43,63,1)
(67,32,1)
(9,18,1)
(3,2,1)
(61,47,1)
(38,54,1)
(74,14,1)
(67,36,1)
(68,48,1)
(69,67,1)
(53,36,1)
(53,30,1)
(45,46,1)
(65,61,1)
(18,65,1)
(71,1,1)
(36,37,1)
(37,29,1)
(63,18,1)
(1,9,1)
(43,58,1)
(30,3,1)
(32,15,1)
(44,31,1)
(24,5,1)
(35,24,1)
(20,55,1)
(2,35,1)
(57,69,1)
(55,31,1)
(34,72,1)
(60,51,1)
(18,55,2)
(60,14,2)
(66,28,2)
(55,55,2)
(57,67,2)
(54,28,2)
(57,71,2)
(14,66,2)
(47,55,2)
(48,57,2)
(43,55,2)
(63,71,2)
(62,55,2)
(14,53,2)
(67,18,2)
(73,66,2)
(54,66,2)
(74,14,2)
(67,36,2)
(69,71,2)
(9,55,2)
(1,55,2)
(52,31,2)
(4,66,2)
(30,66,2)
(68,71,2)
(24,66,2)
(53,66,2)
(52,55,2)
(53,36,2)
(65,55,2)
(72,66,2)
(71,55,2)
(5,66,2)
(18,65,2)
(58,71,2)
(17,55,2)
(63,18,2)
(38,66,2)
(46,14,2)
(76,14,2)
(67,71,2)
(53,30,2)
(21,14,2)
(51,14,2)
(66,66,2)
(2,66,2)
(3,66,2)
(34,66,2)
(45,66,2)
(71,18,2)
(42,66,2)
(44,55,2)
(15,71,2)
(32,71,2)
(55,31,2)
(61,55,2)
(19,71,2)
(35,66,2)
-----------------------------------
(0,if (fgetws(data, 100, pFile)
(1,NULL)
(2,LOGON32_PROVIDER_DEFAULT)
(3,pHandle)
(4,1)
(5,domain)
(6,RET)
(7,)
(8,j)
(9,pFile)
(10,0)
(11,i)
(12,)
(13,i)
(14,LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(15,100)
(16,)
(17,1)
(18,pFile = fopen("passwords.txt", "r")
(19,data)
(20,j)
(21,"User logged in successfully.")
(22,)
(23,)
(24,data)
(25,pHandle)
(26,for(i = 0; i < 1; i++)
(27,)
(28,j = 0)
(29,data)
(30,&pHandle)
(31,i = 0)
(32,pFile)
(33,if (LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(34,username)
(35,LOGON32_LOGON_NETWORK)
(36,data = dataBuffer)
(37,dataBuffer)
(38,j)
(39,for(j = 0; j < 1; j++)
(40,data)
(41,)
(42,0)
(43,i)
(44,i)
(45,j)
(46,printLine("Unable to login.")
(47,"passwords.txt")
(48,\\\'\\\\0\\\')
(49,pFile)
(50,"")
(51,printLine("User logged in successfully.")
(52,i++)
(53,LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(54,j++)
(55,i < 1)
(56,0)
(57,fgetws(data, 100, pFile)
(58,\\\'\\\\0\\\')
(59,)
(60,pHandle)
(61,"r")
(62,pFile)
(63,fclose(pFile)
(64,if (pFile != NULL)
(65,fopen("passwords.txt", "r")
(66,j < 1)
(67,fgetws(data, 100, pFile)
(68,pFile)
(69,NULL)
(70,)
(71,pFile != NULL)
(72,"Domain")
(73,"User")
(74,"Unable to login.")
(75,)
(76,CloseHandle(pHandle)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
