-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_06_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[250] = L"PATH=";
    data = dataBuffer;
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* Read input from a file */
            size_t dataLen = wcslen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (250-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                    {
                        printLine("fgetws() failed");
                        /* Restore NUL terminator if fgetws fails */
                        data[dataLen] = L'\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */
    PUTENV(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
29,30
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
50,51
50,52
53,54
53,55
54,55
54,56
55,56
55,57
57,58
60,61
60,62
61,62
62,63
62,64
63,64
65,66
65,67
65,68
66,67
68,69
71,72
71,73
72,73
72,74
73,74
75,76
77,78
77,79
78,79
78,80
79,80
79,81
80,81
80,82
80,83
80,84
81,82
83,84
83,85
84,85
86,87
88,89
88,90
89,90
89,91
92,93
93,94
93,95
95,96
97,98
99,100
101,102
101,103
102,103
103,104
103,105
104,105
107,108
108,109
108,110
109,110
109,111
110,111
112,113
115,116
116,117
116,118
117,118
119,120
121,122
122,123
122,124
123,124
125,126
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,30,31,37,39,43,45,49,51,52,56,58,59,64,67,69,70,74,76,82,85,87,90,91,94,96,98,100,105,106,111,113,114,118,120,124,126
-----computeFrom-----
22,23
22,24
28,29
28,30
54,55
54,56
55,56
55,57
62,63
62,64
72,73
72,74
79,80
79,81
83,84
83,85
93,94
93,95
108,109
108,110
-----guardedBy-----
58,113
76,100
74,120
85,111
96,113
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_06_bad(){    wchar_t * data;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
void
CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_06_bad()
CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_06_bad
{    wchar_t * data;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[250] = L"PATH=";
wchar_t dataBuffer[250] = L"PATH=";
wchar_t
dataBuffer[250] = L"PATH="
dataBuffer
[250]
250
= L"PATH="
L"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(STATIC_CONST_FIVE==5)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }
if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }
fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(250-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
PUTENV(data);
PUTENV(data)
PUTENV
PUTENV
data
data
-----joern-----
(25,45,0)
(38,3,0)
(13,8,0)
(26,28,0)
(47,28,0)
(45,48,0)
(21,0,0)
(33,11,0)
(28,9,0)
(38,9,0)
(18,9,0)
(20,51,0)
(34,3,0)
(51,50,0)
(9,31,0)
(45,18,0)
(48,45,0)
(42,15,0)
(9,42,0)
(22,52,0)
(28,26,0)
(54,4,0)
(32,17,0)
(40,8,0)
(39,24,0)
(49,9,0)
(3,0,0)
(10,22,0)
(25,38,0)
(45,25,0)
(2,28,0)
(56,26,0)
(31,3,0)
(19,0,0)
(50,11,0)
(8,50,0)
(31,9,0)
(22,50,0)
(25,4,0)
(41,0,0)
(38,25,0)
(37,36,0)
(23,38,0)
(55,18,0)
(1,52,0)
(27,42,0)
(5,31,0)
(29,42,0)
(18,45,0)
(53,0,0)
(4,25,0)
(43,3,0)
(53,3,0)
(7,53,0)
(14,51,0)
(36,17,0)
(12,42,0)
(6,38,0)
(30,25,0)
(35,18,0)
(50,8,0)
(44,24,0)
(16,50,0)
(25,50,0)
(25,50,1)
(10,32,1)
(45,18,1)
(56,28,1)
(43,34,1)
(30,45,1)
(51,14,1)
(51,50,1)
(22,10,1)
(8,40,1)
(16,26,1)
(5,49,1)
(53,7,1)
(39,44,1)
(6,51,1)
(23,6,1)
(10,4,1)
(34,41,1)
(25,45,1)
(28,9,1)
(7,26,1)
(31,5,1)
(14,20,1)
(38,3,1)
(55,35,1)
(2,9,1)
(47,2,1)
(26,56,1)
(25,38,1)
(49,24,1)
(18,55,1)
(25,30,1)
(40,13,1)
(7,22,1)
(4,54,1)
(7,24,1)
(9,31,1)
(22,50,1)
(13,16,1)
(4,25,1)
(53,3,1)
(36,37,1)
(28,47,1)
(35,38,1)
(31,3,1)
(46,53,1)
(18,9,1)
(32,36,1)
(50,8,1)
(37,4,1)
(45,48,1)
(44,3,1)
(3,43,1)
(38,9,1)
(20,50,1)
(7,51,1)
(38,23,1)
(54,25,1)
(24,39,1)
(26,28,1)
(2,24,2)
(4,25,2)
(40,26,2)
(38,9,2)
(38,3,2)
(26,28,2)
(9,31,2)
(31,3,2)
(10,51,2)
(31,24,2)
(28,24,2)
(16,26,2)
(8,26,2)
(22,51,2)
(9,24,2)
(26,24,2)
(13,26,2)
(56,24,2)
(50,26,2)
(14,26,2)
(25,38,2)
(35,51,2)
(22,50,2)
(47,24,2)
(45,48,2)
(23,51,2)
(20,26,2)
(28,9,2)
(45,18,2)
(53,3,2)
(18,51,2)
(25,45,2)
(30,51,2)
(25,50,2)
(49,24,2)
(5,24,2)
(51,50,2)
(32,4,2)
(6,51,2)
(51,26,2)
(38,51,2)
(54,51,2)
(18,9,2)
(55,51,2)
(36,4,2)
(50,8,2)
(45,51,2)
(4,51,2)
(25,51,2)
(37,4,2)
-----------------------------------
(0,)
(1,if (fgetws(data+dataLen, (int)
(2,250)
(3,data = dataBuffer)
(4,fgetws(data+dataLen, (int)
(5,data)
(6,data)
(7,data)
(8,fopen(FILENAME, "r")
(9,dataLen = wcslen(data)
(10,pFile)
(11,)
(12,pFile)
(13,FILENAME)
(14,NULL)
(15,)
(16,pFile)
(17,)
(18,250-dataLen)
(19,data)
(20,pFile)
(21,if(STATIC_CONST_FIVE==5)
(22,fclose(pFile)
(23,dataLen)
(24,STATIC_CONST_FIVE==5)
(25,fgetws(data+dataLen, (int)
(26,250-dataLen > 1)
(27,if (250-dataLen > 1)
(28,250-dataLen)
(29,dataLen)
(30,pFile)
(31,wcslen(data)
(32,\\\'\\\\0\\\')
(33,if (pFile != NULL)
(34,data)
(35,250)
(36,printLine("fgetws()
(37,"fgetws()
(38,data+dataLen)
(39,5)
(40,"r")
(41,"PATH=")
(42,)
(43,dataBuffer)
(44,STATIC_CONST_FIVE)
(45,(int)
(46,RET)
(47,dataLen)
(48,int)
(49,dataLen)
(50,pFile = fopen(FILENAME, "r")
(51,pFile != NULL)
(52,)
(53,PUTENV(data)
(54,NULL)
(55,dataLen)
(56,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
