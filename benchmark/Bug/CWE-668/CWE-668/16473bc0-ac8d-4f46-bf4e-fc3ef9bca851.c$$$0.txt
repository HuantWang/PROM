-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_10_bad()
{
    if(globalTrue)
    {
        {
            wchar_t filename[MAX_PATH] = L"";
            int fileDesc;
            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,
            * leading to an inescapable race condition when we try to open it again. */
            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)
            {
                exit(1);
            }
            printWLine(filename);
            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
11,12
12,13
12,14
14,15
14,16
14,17
16,17
17,18
19,20
21,22
22,23
22,24
24,25
26,27
26,28
27,28
27,29
28,29
28,30
28,31
28,32
28,33
29,30
34,35
37,38
38,39
39,40
39,41
40,41
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
53,54
53,55
53,56
53,57
54,55
56,57
58,59
58,60
59,60
61,62
63,64
63,65
64,65
66,67
68,69
68,70
69,70
69,71
70,71
72,73
74,75
74,76
75,76
76,77
76,78
77,78
80,81
81,82
81,83
82,83
84,85
-----nextToken-----
2,4,8,13,15,18,20,23,25,30,31,32,33,35,36,41,42,46,48,52,55,57,60,62,65,67,71,73,78,79,83,85
-----computeFrom-----
27,28
27,29
50,51
50,52
58,59
58,60
63,64
63,65
69,70
69,71
-----guardedBy-----
71,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_10_bad(){    if(globalTrue)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
void
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_10_bad()
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_10_bad
{    if(globalTrue)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
if(globalTrue)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
globalTrue
globalTrue
{        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
{            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
wchar_t filename[MAX_PATH] = L"";
wchar_t filename[MAX_PATH] = L"";
wchar_t
filename[MAX_PATH] = L""
filename
[MAX_PATH]
MAX_PATH
MAX_PATH
= L""
L""
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }
GetTempFileNameW(L".", L"bad", 0, filename) == 0
GetTempFileNameW(L".", L"bad", 0, filename)
GetTempFileNameW
GetTempFileNameW
L"."
L"bad"
0
filename
filename
0
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printWLine(filename);
printWLine(filename)
printWLine
printWLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
-----joern-----
(20,1,0)
(0,24,0)
(9,19,0)
(5,31,0)
(30,23,0)
(28,10,0)
(1,14,0)
(26,2,0)
(16,7,0)
(23,8,0)
(21,32,0)
(7,22,0)
(24,28,0)
(11,14,0)
(17,32,0)
(15,28,0)
(6,1,0)
(8,23,0)
(8,22,0)
(14,22,0)
(32,14,0)
(25,8,0)
(12,28,0)
(18,22,0)
(29,28,0)
(13,5,0)
(27,28,0)
(14,32,0)
(14,1,0)
(7,31,0)
(22,14,0)
(22,28,0)
(19,12,0)
(25,22,1)
(4,3,1)
(24,0,1)
(13,8,1)
(19,9,1)
(16,5,1)
(8,22,1)
(18,24,1)
(21,11,1)
(30,25,1)
(1,20,1)
(15,3,1)
(4,8,1)
(11,18,1)
(23,30,1)
(14,32,1)
(5,13,1)
(8,23,1)
(0,19,1)
(9,15,1)
(20,6,1)
(6,32,1)
(17,21,1)
(32,17,1)
(7,22,1)
(22,14,1)
(4,7,1)
(14,1,1)
(7,16,1)
(11,3,2)
(18,3,2)
(17,3,2)
(21,3,2)
(8,23,2)
(8,22,2)
(25,3,2)
(0,3,2)
(22,14,2)
(16,8,2)
(20,3,2)
(7,8,2)
(1,3,2)
(6,3,2)
(9,3,2)
(19,3,2)
(14,1,2)
(14,3,2)
(8,3,2)
(22,3,2)
(14,32,2)
(32,3,2)
(13,8,2)
(5,8,2)
(7,22,2)
(24,3,2)
(30,3,2)
(23,3,2)
(15,3,2)
-----------------------------------
(0,filename)
(1,S_IREAD|S_IWRITE)
(2,)
(3,globalTrue)
(4,RET)
(5,printLine("Temporary file was opened...now closing file")
(6,S_IREAD)
(7,CLOSE(fileDesc)
(8,fileDesc != -1)
(9,1)
(10,)
(11,filename)
(12,)
(13,"Temporary file was opened...now closing file")
(14,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(15,"")
(16,fileDesc)
(17,O_CREAT)
(18,fileDesc)
(19,exit(1)
(20,S_IWRITE)
(21,O_RDWR)
(22,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(23,-1)
(24,printWLine(filename)
(25,fileDesc)
(26,if(globalTrue)
(27,if (fileDesc != -1)
(28,)
(29,fileDesc)
(30,1)
(31,)
(32,O_RDWR|O_CREAT)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
