-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_13_bad()
{
    char * data;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* Read input from a file */
            size_t dataLen = strlen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (250-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                    {
                        printLine("fgets() failed");
                        /* Restore NUL terminator if fgets fails */
                        data[dataLen] = '\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */
    PUTENV(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
29,30
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
50,51
50,52
53,54
53,55
54,55
54,56
55,56
55,57
57,58
60,61
60,62
61,62
62,63
62,64
63,64
65,66
65,67
65,68
66,67
68,69
71,72
71,73
72,73
72,74
73,74
75,76
77,78
77,79
78,79
78,80
79,80
79,81
80,81
80,82
80,83
80,84
81,82
83,84
83,85
84,85
86,87
88,89
88,90
89,90
89,91
92,93
93,94
93,95
95,96
97,98
99,100
101,102
101,103
102,103
103,104
103,105
104,105
107,108
108,109
108,110
109,110
109,111
110,111
112,113
115,116
116,117
116,118
117,118
119,120
121,122
122,123
122,124
123,124
125,126
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,30,31,37,39,43,45,49,51,52,56,58,59,64,67,69,70,74,76,82,85,87,90,91,94,96,98,100,105,106,111,113,114,118,120,124,126
-----computeFrom-----
22,23
22,24
28,29
28,30
54,55
54,56
55,56
55,57
62,63
62,64
72,73
72,74
79,80
79,81
83,84
83,85
93,94
93,95
108,109
108,110
-----guardedBy-----
58,113
76,100
74,120
85,111
96,113
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_13_bad(){    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    if(GLOBAL_CONST_FIVE==5)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_file_13_bad()
CWE427_Uncontrolled_Search_Path_Element__char_file_13_bad
{    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    if(GLOBAL_CONST_FIVE==5)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(GLOBAL_CONST_FIVE==5)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(250-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
PUTENV(data);
PUTENV(data)
PUTENV
PUTENV
data
data
-----joern-----
(18,22,0)
(62,22,0)
(58,49,0)
(30,49,0)
(22,49,0)
(26,22,0)
(8,21,0)
(33,49,0)
(14,63,0)
(15,4,0)
(48,28,0)
(23,37,0)
(28,11,0)
(12,11,0)
(1,59,0)
(35,37,0)
(54,36,0)
(40,4,0)
(42,36,0)
(34,12,0)
(55,21,0)
(44,19,0)
(28,54,0)
(13,37,0)
(6,3,0)
(36,22,0)
(32,37,0)
(9,11,0)
(13,22,0)
(21,11,0)
(5,7,0)
(11,21,0)
(35,22,0)
(51,12,0)
(63,4,0)
(31,26,0)
(29,63,0)
(22,13,0)
(10,37,0)
(37,63,0)
(25,28,0)
(47,27,0)
(20,36,0)
(7,60,0)
(2,35,0)
(50,26,0)
(53,18,0)
(11,19,0)
(18,7,0)
(46,4,0)
(38,32,0)
(54,0,0)
(61,43,0)
(37,4,0)
(24,9,0)
(43,60,0)
(32,4,0)
(49,17,0)
(57,18,0)
(35,28,0)
(59,26,0)
(39,11,0)
(54,28,0)
(0,54,0)
(56,35,0)
(16,25,0)
(45,27,0)
(41,13,0)
(18,37,0)
(26,59,0)
(28,35,0)
(36,54,0)
(9,3,0)
(28,25,0)
(9,11,1)
(50,31,1)
(13,37,1)
(18,37,1)
(32,37,1)
(1,26,1)
(28,48,1)
(59,26,1)
(38,12,1)
(12,11,1)
(26,50,1)
(32,38,1)
(36,20,1)
(38,9,1)
(45,37,1)
(38,59,1)
(28,11,1)
(11,21,1)
(41,62,1)
(56,2,1)
(21,8,1)
(38,27,1)
(61,25,1)
(28,35,1)
(37,10,1)
(43,61,1)
(5,18,1)
(9,24,1)
(54,36,1)
(25,16,1)
(35,56,1)
(57,43,1)
(62,27,1)
(39,59,1)
(34,11,1)
(48,54,1)
(16,28,1)
(36,22,1)
(12,51,1)
(23,63,1)
(14,29,1)
(55,39,1)
(18,53,1)
(47,45,1)
(27,47,1)
(22,13,1)
(20,42,1)
(24,7,1)
(52,32,1)
(54,0,1)
(8,55,1)
(51,34,1)
(35,37,1)
(26,22,1)
(13,41,1)
(31,22,1)
(18,22,1)
(7,5,1)
(28,54,1)
(35,22,1)
(2,12,1)
(42,35,1)
(37,63,1)
(24,25,1)
(10,23,1)
(25,28,1)
(63,14,1)
(59,1,1)
(53,57,1)
(18,22,2)
(48,12,2)
(24,12,2)
(25,28,2)
(39,59,2)
(35,37,2)
(7,25,2)
(59,26,2)
(31,27,2)
(28,11,2)
(57,25,2)
(54,0,2)
(18,25,2)
(32,37,2)
(11,59,2)
(36,12,2)
(28,12,2)
(9,12,2)
(26,22,2)
(16,12,2)
(26,27,2)
(55,59,2)
(62,27,2)
(35,22,2)
(11,21,2)
(59,27,2)
(43,25,2)
(36,22,2)
(51,59,2)
(37,63,2)
(22,27,2)
(41,27,2)
(34,59,2)
(56,12,2)
(1,27,2)
(28,35,2)
(5,25,2)
(25,12,2)
(18,37,2)
(13,37,2)
(12,59,2)
(53,25,2)
(54,12,2)
(54,36,2)
(22,13,2)
(28,54,2)
(21,59,2)
(50,27,2)
(20,12,2)
(9,11,2)
(35,12,2)
(61,25,2)
(13,27,2)
(42,12,2)
(8,59,2)
(12,11,2)
(2,12,2)
-----------------------------------
(0,int)
(1,1)
(2,data)
(3,)
(4,)
(5,\\\'\\\\0\\\')
(6,if (fgets(data+dataLen, (int)
(7,data[dataLen] = \\\'\\\\0\\\')
(8,"r")
(9,fclose(pFile)
(10,dataBuffer)
(11,pFile = fopen(FILENAME, "r")
(12,pFile != NULL)
(13,strlen(data)
(14,"PATH=")
(15,dataBuffer)
(16,NULL)
(17,)
(18,data[dataLen])
(19,)
(20,dataLen)
(21,fopen(FILENAME, "r")
(22,dataLen = strlen(data)
(23,data)
(24,pFile)
(25,fgets(data+dataLen, (int)
(26,250-dataLen)
(27,GLOBAL_CONST_FIVE==5)
(28,fgets(data+dataLen, (int)
(29,dataBuffer)
(30,if (250-dataLen > 1)
(31,250)
(32,PUTENV(data)
(33,dataLen)
(34,pFile)
(35,data+dataLen)
(36,250-dataLen)
(37,data = dataBuffer)
(38,data)
(39,pFile)
(40,if(GLOBAL_CONST_FIVE==5)
(41,data)
(42,250)
(43,printLine("fgets()
(44,if (pFile != NULL)
(45,GLOBAL_CONST_FIVE)
(46,data)
(47,5)
(48,pFile)
(49,)
(50,dataLen)
(51,NULL)
(52,RET)
(53,dataLen)
(54,(int)
(55,FILENAME)
(56,dataLen)
(57,data)
(58,pFile)
(59,250-dataLen > 1)
(60,)
(61,"fgets()
(62,dataLen)
(63,dataBuffer[250] = "PATH=")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
