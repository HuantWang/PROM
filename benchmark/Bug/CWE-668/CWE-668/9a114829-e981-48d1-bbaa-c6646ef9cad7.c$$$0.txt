-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_01_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    {
        FILE *pFile;
        pFile = fopen("passwords.txt", "r");
        if (pFile != NULL)
        {
            /* POTENTIAL FLAW: Read the password from a file */
            if (fgetws(data, 100, pFile) == NULL)
            {
                data[0] = L'\0';
            }
            fclose(pFile);
        }
        else
        {
            data[0] = L'\0';
        }
    }
    {
        HANDLE pHandle;
        wchar_t * username = L"User";
        wchar_t * domain = L"Domain";
        /* POTENTIAL FLAW: Attempt to login user with password from the source */
        if (LogonUserW(
                    username,
                    domain,
                    data,
                    LOGON32_LOGON_NETWORK,
                    LOGON32_PROVIDER_DEFAULT,
                    &pHandle) != 0)
        {
            printLine("User logged in successfully.");
            CloseHandle(pHandle);
        }
        else
        {
            printLine("Unable to login.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
28,29
29,30
29,31
30,31
32,33
32,34
35,36
36,37
36,38
37,38
39,40
39,41
39,42
40,41
44,45
44,46
44,47
45,46
45,47
46,47
48,49
50,51
50,52
51,52
51,53
52,53
52,54
53,54
53,55
53,56
53,57
54,55
56,57
59,60
61,62
63,64
64,65
65,66
65,67
66,67
66,68
67,68
71,72
72,73
72,74
73,74
75,76
77,78
78,79
79,80
79,81
80,81
80,82
81,82
85,86
85,87
85,88
85,89
86,87
87,88
87,89
88,89
90,91
92,93
93,94
93,95
95,96
95,97
95,98
98,99
100,101
101,102
101,103
103,104
103,105
103,106
106,107
108,109
108,110
108,111
109,110
109,111
110,111
110,112
110,113
110,114
110,115
110,116
110,117
111,112
113,114
115,116
117,118
119,120
121,122
123,124
124,125
127,128
127,129
128,129
129,130
129,131
130,131
133,134
134,135
134,136
135,136
137,138
139,140
140,141
141,142
141,143
142,143
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,31,33,34,38,41,42,43,47,49,55,57,58,60,62,68,69,70,74,76,82,83,84,89,91,94,96,97,99,102,104,105,107,112,114,116,118,120,122,125,126,131,132,136,138,143,144
-----computeFrom-----
22,23
22,24
36,37
36,38
45,46
45,47
52,53
52,54
65,66
65,67
79,80
79,81
109,110
109,111
-----guardedBy-----
49,62
47,76
57,68
125,138
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_01_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }    }    {        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
void
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_01_bad()
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_01_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }    }    {        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = L"";
wchar_t dataBuffer[100] = L"";
wchar_t
dataBuffer[100] = L""
dataBuffer
[100]
100
= L""
L""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }    }
FILE *pFile;
FILE *pFile;
FILE
FILE
*pFile
*
pFile
pFile = fopen("passwords.txt", "r");
pFile = fopen("passwords.txt", "r")
pFile
pFile
fopen("passwords.txt", "r")
fopen
fopen
"passwords.txt"
"r"
if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }        else        {            data[0] = L'\0';        }
pFile != NULL
pFile
pFile
NULL
NULL
{            /* POTENTIAL FLAW: Read the password from a file */            if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }            fclose(pFile);        }
if (fgetws(data, 100, pFile) == NULL)            {                data[0] = L'\0';            }
fgetws(data, 100, pFile) == NULL
fgetws(data, 100, pFile)
fgetws
fgetws
data
data
100
pFile
pFile
NULL
NULL
{                data[0] = L'\0';            }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
{            data[0] = L'\0';        }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
{        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
wchar_t * username = L"User";
wchar_t * username = L"User";
wchar_t
* username = L"User"
*
username
= L"User"
L"User"
wchar_t * domain = L"Domain";
wchar_t * domain = L"Domain";
wchar_t
* domain = L"Domain"
*
domain
= L"Domain"
L"Domain"
if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }
LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0
LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle)
LogonUserW
LogonUserW
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{            printLine("User logged in successfully.");            CloseHandle(pHandle);        }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{            printLine("Unable to login.");        }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(37,32,0)
(3,5,0)
(4,8,0)
(53,19,0)
(19,9,0)
(5,40,0)
(24,15,0)
(21,40,0)
(28,24,0)
(8,54,0)
(39,47,0)
(49,47,0)
(45,14,0)
(30,15,0)
(44,40,0)
(1,39,0)
(14,13,0)
(22,40,0)
(10,25,0)
(52,51,0)
(32,39,0)
(32,29,0)
(24,22,0)
(9,19,0)
(11,7,0)
(34,19,0)
(39,21,0)
(19,22,0)
(47,39,0)
(26,36,0)
(2,36,0)
(6,5,0)
(0,22,0)
(23,24,0)
(7,54,0)
(24,20,0)
(27,5,0)
(16,20,0)
(46,24,0)
(18,21,0)
(42,40,0)
(31,47,0)
(17,24,0)
(20,24,0)
(36,39,0)
(41,22,0)
(15,24,0)
(50,19,0)
(33,5,0)
(48,9,0)
(19,39,0)
(38,24,0)
(43,21,0)
(12,29,0)
(30,24,1)
(15,24,1)
(22,0,1)
(38,23,1)
(23,3,1)
(1,22,1)
(26,39,1)
(34,53,1)
(15,30,1)
(24,22,1)
(2,26,1)
(39,47,1)
(45,15,1)
(19,22,1)
(17,46,1)
(32,37,1)
(37,9,1)
(53,50,1)
(48,19,1)
(19,39,1)
(19,34,1)
(49,31,1)
(32,39,1)
(9,19,1)
(50,36,1)
(8,4,1)
(35,8,1)
(27,10,1)
(27,32,1)
(28,38,1)
(24,20,1)
(52,9,1)
(4,7,1)
(36,2,1)
(47,49,1)
(46,28,1)
(3,27,1)
(9,48,1)
(37,52,1)
(20,16,1)
(10,36,1)
(41,42,1)
(0,41,1)
(16,17,1)
(7,11,1)
(11,15,1)
(36,39,1)
(31,1,1)
(35,14,1)
(14,45,1)
(11,15,2)
(53,36,2)
(48,36,2)
(4,15,2)
(8,15,2)
(10,36,2)
(24,20,2)
(19,36,2)
(19,39,2)
(34,36,2)
(19,22,2)
(36,39,2)
(9,19,2)
(37,36,2)
(45,15,2)
(32,39,2)
(14,15,2)
(24,22,2)
(52,9,2)
(32,36,2)
(7,15,2)
(9,36,2)
(50,36,2)
(15,24,2)
(39,47,2)
-----------------------------------
(0,dataBuffer)
(1,pFile)
(2,NULL)
(3,"Domain")
(4,pHandle)
(5,)
(6,if (LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(7,printLine("User logged in successfully.")
(8,CloseHandle(pHandle)
(9,fgetws(data, 100, pFile)
(10,\\\'\\\\0\\\')
(11,"User logged in successfully.")
(12,if (fgetws(data, 100, pFile)
(13,)
(14,printLine("Unable to login.")
(15,LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(16,pHandle)
(17,LOGON32_PROVIDER_DEFAULT)
(18,pFile)
(19,fgetws(data, 100, pFile)
(20,&pHandle)
(21,)
(22,data = dataBuffer)
(23,username)
(24,LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(25,)
(26,pFile)
(27,"User")
(28,data)
(29,)
(30,0)
(31,"passwords.txt")
(32,fclose(pFile)
(33,pHandle)
(34,pFile)
(35,RET)
(36,pFile != NULL)
(37,pFile)
(38,domain)
(39,pFile = fopen("passwords.txt", "r")
(40,)
(41,data)
(42,"")
(43,if (pFile != NULL)
(44,data)
(45,"Unable to login.")
(46,LOGON32_LOGON_NETWORK)
(47,fopen("passwords.txt", "r")
(48,NULL)
(49,"r")
(50,data)
(51,)
(52,\\\'\\\\0\\\')
(53,100)
(54,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
