-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_02_bad()
{
    char * data;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    if(1)
    {
        {
            /* Read input from a file */
            size_t dataLen = strlen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (250-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                    {
                        printLine("fgets() failed");
                        /* Restore NUL terminator if fgets fails */
                        data[dataLen] = '\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */
    PUTENV(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
29,30
30,31
30,32
30,33
31,32
32,33
32,34
33,34
35,36
35,37
37,38
38,39
38,40
39,40
41,42
43,44
44,45
44,46
45,46
47,48
47,49
50,51
50,52
51,52
51,53
52,53
52,54
54,55
57,58
57,59
58,59
59,60
59,61
60,61
62,63
62,64
62,65
63,64
65,66
68,69
68,70
69,70
69,71
70,71
72,73
74,75
74,76
75,76
75,77
76,77
76,78
77,78
77,79
77,80
77,81
78,79
80,81
80,82
81,82
83,84
85,86
85,87
86,87
86,88
89,90
90,91
90,92
92,93
94,95
96,97
98,99
98,100
99,100
100,101
100,102
101,102
104,105
105,106
105,107
106,107
106,108
107,108
109,110
112,113
113,114
113,115
114,115
116,117
118,119
119,120
119,121
120,121
122,123
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,28,34,36,40,42,46,48,49,53,55,56,61,64,66,67,71,73,79,82,84,87,88,91,93,95,97,102,103,108,110,111,115,117,121,123
-----computeFrom-----
22,23
22,24
51,52
51,53
52,53
52,54
59,60
59,61
69,70
69,71
76,77
76,78
80,81
80,82
90,91
90,92
105,106
105,107
-----guardedBy-----
55,110
73,97
71,117
82,108
93,110
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_02_bad(){    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    if(1)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_file_02_bad()
CWE427_Uncontrolled_Search_Path_Element__char_file_02_bad
{    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    if(1)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    /* POTENTIAL FLAW: Set a new environment variable with a path that is possibly insecure */    PUTENV(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(1)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
1
{        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(250-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
PUTENV(data);
PUTENV(data)
PUTENV
PUTENV
data
data
-----joern-----
(54,2,0)
(15,22,0)
(18,47,0)
(48,34,0)
(20,26,0)
(61,25,0)
(7,33,0)
(21,47,0)
(14,61,0)
(56,46,0)
(15,45,0)
(47,2,0)
(21,61,0)
(46,39,0)
(31,26,0)
(50,37,0)
(24,25,0)
(28,61,0)
(2,36,0)
(8,35,0)
(32,11,0)
(51,45,0)
(4,50,0)
(45,21,0)
(38,47,0)
(61,52,0)
(34,39,0)
(42,49,0)
(49,61,0)
(22,15,0)
(16,52,0)
(29,39,0)
(45,51,0)
(5,11,0)
(33,61,0)
(35,37,0)
(11,32,0)
(26,39,0)
(43,21,0)
(44,52,0)
(39,34,0)
(23,21,0)
(27,49,0)
(6,51,0)
(58,18,0)
(30,60,0)
(39,60,0)
(21,45,0)
(55,11,0)
(49,47,0)
(53,32,0)
(3,28,0)
(13,25,0)
(49,50,0)
(45,39,0)
(15,18,0)
(33,25,0)
(18,15,0)
(19,25,0)
(46,57,0)
(47,28,0)
(17,45,0)
(28,47,0)
(11,47,0)
(59,57,0)
(41,18,0)
(12,2,0)
(9,2,0)
(45,15,0)
(40,61,0)
(52,25,0)
(10,34,0)
(38,0,1)
(3,38,1)
(55,47,1)
(53,11,1)
(43,26,1)
(45,17,1)
(45,39,1)
(45,21,1)
(11,5,1)
(42,27,1)
(56,51,1)
(23,43,1)
(8,51,1)
(21,47,1)
(17,15,1)
(18,47,1)
(21,61,1)
(33,7,1)
(5,55,1)
(4,49,1)
(39,34,1)
(21,23,1)
(49,61,1)
(31,39,1)
(7,32,1)
(61,52,1)
(26,20,1)
(15,18,1)
(40,52,1)
(49,42,1)
(28,3,1)
(56,50,1)
(7,46,1)
(27,35,1)
(50,4,1)
(6,45,1)
(7,0,1)
(61,14,1)
(28,61,1)
(48,10,1)
(20,31,1)
(10,29,1)
(49,47,1)
(58,21,1)
(18,41,1)
(11,47,1)
(46,39,1)
(26,39,1)
(51,45,1)
(7,26,1)
(46,56,1)
(16,44,1)
(32,11,1)
(32,53,1)
(47,28,1)
(14,40,1)
(35,8,1)
(51,6,1)
(15,22,1)
(29,32,1)
(45,15,1)
(52,16,1)
(0,61,1)
(33,61,1)
(34,48,1)
(41,58,1)
(1,33,1)
(11,47,2)
(41,26,2)
(15,26,2)
(15,18,2)
(49,61,2)
(26,32,2)
(29,32,2)
(55,0,2)
(6,26,2)
(26,39,2)
(58,26,2)
(35,51,2)
(3,0,2)
(49,47,2)
(4,51,2)
(8,51,2)
(10,32,2)
(45,21,2)
(21,47,2)
(18,47,2)
(32,0,2)
(11,0,2)
(32,11,2)
(33,61,2)
(48,32,2)
(53,0,2)
(61,52,2)
(34,32,2)
(15,22,2)
(39,32,2)
(45,15,2)
(27,51,2)
(31,32,2)
(47,28,2)
(21,26,2)
(51,45,2)
(39,34,2)
(5,0,2)
(46,39,2)
(21,61,2)
(50,51,2)
(38,0,2)
(45,26,2)
(43,26,2)
(45,39,2)
(42,51,2)
(49,51,2)
(51,26,2)
(17,26,2)
(46,26,2)
(47,0,2)
(56,26,2)
(28,0,2)
(23,26,2)
(18,26,2)
(28,61,2)
(20,32,2)
-----------------------------------
(0,1)
(1,RET)
(2,)
(3,data)
(4,\\\'\\\\0\\\')
(5,dataLen)
(6,NULL)
(7,data)
(8,"fgets()
(9,if (250-dataLen > 1)
(10,FILENAME)
(11,250-dataLen)
(12,dataLen)
(13,data)
(14,dataBuffer)
(15,(int)
(16,"PATH=")
(17,pFile)
(18,250-dataLen)
(19,if(1)
(20,NULL)
(21,data+dataLen)
(22,int)
(23,dataLen)
(24,dataBuffer)
(25,)
(26,pFile != NULL)
(27,data)
(28,strlen(data)
(29,pFile)
(30,if (pFile != NULL)
(31,pFile)
(32,250-dataLen > 1)
(33,PUTENV(data)
(34,fopen(FILENAME, "r")
(35,printLine("fgets()
(36,)
(37,)
(38,dataLen)
(39,pFile = fopen(FILENAME, "r")
(40,data)
(41,dataLen)
(42,dataLen)
(43,data)
(44,dataBuffer)
(45,fgets(data+dataLen, (int)
(46,fclose(pFile)
(47,dataLen = strlen(data)
(48,"r")
(49,data[dataLen])
(50,data[dataLen] = \\\'\\\\0\\\')
(51,fgets(data+dataLen, (int)
(52,dataBuffer[250] = "PATH=")
(53,1)
(54,pFile)
(55,250)
(56,pFile)
(57,)
(58,250)
(59,if (fgets(data+dataLen, (int)
(60,)
(61,data = dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
