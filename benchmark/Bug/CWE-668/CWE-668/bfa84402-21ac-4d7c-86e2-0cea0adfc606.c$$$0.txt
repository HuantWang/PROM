-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__char_mktemp_12_bad()
{
    if(globalReturnsTrueOrFalse())
    {
        {
            char * filename;
            char tmpl[] = "fnXXXXXX";
            int fileDesc;
            filename = MKTEMP(tmpl);
            if (filename == NULL)
            {
                exit(1);
            }
            printLine(filename);
            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
    }
    else
    {
        {
            char * filename;
            char tmpl[] = "fnXXXXXX";
            int fileDesc;
            filename = MKTEMP(tmpl);
            if (filename == NULL)
            {
                exit(1);
            }
            printLine(filename);
            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags
            * NOTE: This is not a perfect solution, but it is the base case scenario */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
6,9
7,8
8,9
10,11
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
12,13
13,14
13,15
15,16
15,17
18,19
19,20
19,21
21,22
21,23
21,24
24,25
26,27
27,28
27,29
29,30
31,32
32,33
32,34
33,34
35,36
35,37
36,37
38,39
40,41
40,42
41,42
41,43
42,43
44,45
46,47
47,48
48,49
48,50
49,50
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
60,61
62,63
62,64
62,65
62,66
63,64
65,66
67,68
67,69
68,69
70,71
72,73
72,74
73,74
75,76
77,78
77,79
78,79
78,80
79,80
81,82
83,84
83,85
84,85
85,86
85,87
86,87
89,90
90,91
90,92
91,92
93,94
95,96
96,97
96,98
96,99
96,100
96,101
96,102
96,103
96,104
97,98
98,99
98,100
100,101
100,102
103,104
104,105
104,106
106,107
106,108
106,109
109,110
111,112
112,113
112,114
114,115
116,117
117,118
117,119
118,119
120,121
120,122
121,122
123,124
125,126
125,127
126,127
126,128
127,128
129,130
131,132
132,133
133,134
133,135
134,135
137,138
138,139
138,140
139,140
141,142
143,144
144,145
144,146
145,146
147,148
147,149
147,150
147,151
148,149
150,151
152,153
152,154
153,154
153,155
154,155
156,157
158,159
160,161
160,162
161,162
163,164
165,166
165,167
166,167
166,168
167,168
169,170
171,172
171,173
172,173
173,174
173,175
174,175
177,178
178,179
178,180
179,180
181,182
-----nextToken-----
2,4,9,14,16,17,20,22,23,25,28,30,34,37,39,43,45,50,51,55,57,61,64,66,69,71,74,76,80,82,87,88,92,94,99,101,102,105,107,108,110,113,115,119,122,124,128,130,135,136,140,142,146,149,151,155,157,159,162,164,168,170,175,176,180,182
-----computeFrom-----
32,33
32,34
41,42
41,43
59,60
59,61
67,68
67,69
72,73
72,74
78,79
78,80
117,118
117,119
126,127
126,128
144,145
144,146
152,153
152,154
153,154
153,155
160,161
160,162
166,167
166,168
-----guardedBy-----
80,94
168,182
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE377_Insecure_Temporary_File__char_mktemp_12_bad(){    if(globalReturnsTrueOrFalse())    {        {            char * filename;            char tmpl[] = "fnXXXXXX";            int fileDesc;            filename = MKTEMP(tmpl);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }    else    {        {            char * filename;            char tmpl[] = "fnXXXXXX";            int fileDesc;            filename = MKTEMP(tmpl);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags            * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
void
CWE377_Insecure_Temporary_File__char_mktemp_12_bad()
CWE377_Insecure_Temporary_File__char_mktemp_12_bad
{    if(globalReturnsTrueOrFalse())    {        {            char * filename;            char tmpl[] = "fnXXXXXX";            int fileDesc;            filename = MKTEMP(tmpl);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }    else    {        {            char * filename;            char tmpl[] = "fnXXXXXX";            int fileDesc;            filename = MKTEMP(tmpl);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags            * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
if(globalReturnsTrueOrFalse())    {        {            char * filename;            char tmpl[] = "fnXXXXXX";            int fileDesc;            filename = MKTEMP(tmpl);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }    else    {        {            char * filename;            char tmpl[] = "fnXXXXXX";            int fileDesc;            filename = MKTEMP(tmpl);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags            * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            char * filename;            char tmpl[] = "fnXXXXXX";            int fileDesc;            filename = MKTEMP(tmpl);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
{            char * filename;            char tmpl[] = "fnXXXXXX";            int fileDesc;            filename = MKTEMP(tmpl);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
char * filename;
char * filename;
char
* filename
*
filename
char tmpl[] = "fnXXXXXX";
char tmpl[] = "fnXXXXXX";
char
tmpl[] = "fnXXXXXX"
tmpl
[]
= "fnXXXXXX"
"fnXXXXXX"
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
filename = MKTEMP(tmpl);
filename = MKTEMP(tmpl)
filename
filename
MKTEMP(tmpl)
MKTEMP
MKTEMP
tmpl
tmpl
if (filename == NULL)            {                exit(1);            }
filename == NULL
filename
filename
NULL
NULL
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printLine(filename);
printLine(filename)
printLine
printLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
{        {            char * filename;            char tmpl[] = "fnXXXXXX";            int fileDesc;            filename = MKTEMP(tmpl);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags            * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
{            char * filename;            char tmpl[] = "fnXXXXXX";            int fileDesc;            filename = MKTEMP(tmpl);            if (filename == NULL)            {                exit(1);            }            printLine(filename);            /* FIX: Open a temporary file using open() and the O_CREAT and O_EXCL flags            * NOTE: This is not a perfect solution, but it is the base case scenario */            fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
char * filename;
char * filename;
char
* filename
*
filename
char tmpl[] = "fnXXXXXX";
char tmpl[] = "fnXXXXXX";
char
tmpl[] = "fnXXXXXX"
tmpl
[]
= "fnXXXXXX"
"fnXXXXXX"
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
filename = MKTEMP(tmpl);
filename = MKTEMP(tmpl)
filename
filename
MKTEMP(tmpl)
MKTEMP
MKTEMP
tmpl
tmpl
if (filename == NULL)            {                exit(1);            }
filename == NULL
filename
filename
NULL
NULL
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printLine(filename);
printLine(filename)
printLine
printLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT|O_EXCL
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
O_EXCL
O_EXCL
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
-----joern-----
(17,11,0)
(85,58,0)
(31,29,0)
(27,20,0)
(60,55,0)
(0,23,0)
(80,62,0)
(10,18,0)
(52,84,0)
(20,61,0)
(2,36,0)
(40,14,0)
(49,70,0)
(16,53,0)
(32,11,0)
(11,17,0)
(55,51,0)
(18,10,0)
(79,85,0)
(42,85,0)
(53,60,0)
(63,55,0)
(19,79,0)
(17,79,0)
(44,79,0)
(13,2,0)
(82,51,0)
(73,51,0)
(1,82,0)
(11,85,0)
(41,72,0)
(75,55,0)
(84,51,0)
(39,67,0)
(55,75,0)
(25,0,0)
(65,2,0)
(8,11,0)
(3,14,0)
(64,2,0)
(21,85,0)
(15,2,0)
(66,40,0)
(33,2,0)
(87,11,0)
(54,73,0)
(46,18,0)
(68,87,0)
(61,67,0)
(61,20,0)
(22,39,0)
(53,56,0)
(34,62,0)
(51,73,0)
(7,18,0)
(67,85,0)
(8,62,0)
(6,75,0)
(83,17,0)
(24,75,0)
(67,8,0)
(26,85,0)
(5,15,0)
(57,11,0)
(47,43,0)
(43,81,0)
(59,8,0)
(73,15,0)
(74,15,0)
(78,10,0)
(60,2,0)
(35,38,0)
(50,61,0)
(38,56,0)
(37,67,0)
(10,55,0)
(62,8,0)
(32,85,0)
(48,87,0)
(28,51,0)
(71,2,0)
(84,2,0)
(39,70,0)
(14,40,0)
(45,49,0)
(14,60,0)
(72,8,0)
(12,85,0)
(9,32,0)
(77,60,0)
(86,82,0)
(8,67,0)
(69,72,0)
(8,72,0)
(51,2,0)
(55,60,0)
(55,10,0)
(4,85,0)
(0,25,1)
(25,87,1)
(74,30,1)
(18,7,1)
(47,82,1)
(61,67,1)
(9,0,1)
(55,75,1)
(7,46,1)
(53,60,1)
(17,79,1)
(38,35,1)
(10,18,1)
(79,19,1)
(8,62,1)
(14,40,1)
(53,16,1)
(5,74,1)
(8,11,1)
(55,10,1)
(87,68,1)
(52,82,1)
(1,86,1)
(48,11,1)
(60,55,1)
(73,15,1)
(83,57,1)
(76,39,1)
(24,10,1)
(28,15,1)
(49,45,1)
(41,69,1)
(50,67,1)
(11,17,1)
(39,67,1)
(87,11,1)
(32,9,1)
(32,11,1)
(84,52,1)
(61,20,1)
(76,61,1)
(59,37,1)
(78,63,1)
(27,50,1)
(76,53,1)
(62,34,1)
(45,61,1)
(57,79,1)
(69,59,1)
(75,6,1)
(40,66,1)
(19,44,1)
(52,43,1)
(37,32,1)
(8,72,1)
(35,14,1)
(82,1,1)
(63,77,1)
(68,48,1)
(82,51,1)
(39,22,1)
(86,51,1)
(67,8,1)
(20,27,1)
(3,60,1)
(73,54,1)
(9,87,1)
(66,3,1)
(76,14,1)
(17,83,1)
(55,51,1)
(22,49,1)
(43,47,1)
(51,73,1)
(80,72,1)
(54,28,1)
(16,38,1)
(84,51,1)
(14,60,1)
(34,80,1)
(77,84,1)
(46,78,1)
(72,41,1)
(15,5,1)
(44,30,1)
(6,24,1)
(61,67,2)
(53,60,2)
(67,30,2)
(67,8,2)
(77,30,2)
(54,30,2)
(51,30,2)
(87,30,2)
(82,30,2)
(10,30,2)
(55,51,2)
(40,30,2)
(39,67,2)
(63,30,2)
(61,20,2)
(41,30,2)
(38,14,2)
(8,72,2)
(69,30,2)
(16,14,2)
(43,82,2)
(49,61,2)
(5,30,2)
(55,10,2)
(11,30,2)
(55,30,2)
(74,30,2)
(72,30,2)
(48,30,2)
(44,30,2)
(46,30,2)
(14,30,2)
(86,30,2)
(17,79,2)
(34,30,2)
(9,30,2)
(79,30,2)
(32,11,2)
(8,11,2)
(60,55,2)
(35,14,2)
(47,82,2)
(22,61,2)
(15,30,2)
(7,30,2)
(80,30,2)
(20,30,2)
(55,75,2)
(73,30,2)
(27,30,2)
(17,30,2)
(83,30,2)
(68,30,2)
(59,30,2)
(75,30,2)
(53,14,2)
(45,61,2)
(84,30,2)
(11,17,2)
(87,11,2)
(18,30,2)
(24,30,2)
(14,40,2)
(61,30,2)
(60,30,2)
(78,30,2)
(39,61,2)
(6,30,2)
(32,30,2)
(28,30,2)
(52,30,2)
(66,30,2)
(0,87,2)
(73,15,2)
(10,18,2)
(1,30,2)
(62,30,2)
(3,30,2)
(8,30,2)
(14,60,2)
(82,51,2)
(37,30,2)
(25,87,2)
(84,51,2)
(50,30,2)
(51,73,2)
(57,30,2)
(19,30,2)
(8,62,2)
-----------------------------------
(0,exit(1)
(1,NULL)
(2,)
(3,fileDesc)
(4,fileDesc)
(5,"fnXXXXXX")
(6,S_IWRITE)
(7,O_EXCL)
(8,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(9,filename)
(10,O_RDWR|O_CREAT|O_EXCL)
(11,filename = MKTEMP(tmpl)
(12,filename)
(13,if (fileDesc != -1)
(14,fileDesc != -1)
(15,tmpl[] = "fnXXXXXX")
(16,fileDesc)
(17,MKTEMP(tmpl)
(18,O_CREAT|O_EXCL)
(19,"fnXXXXXX")
(20,-1)
(21,if (fileDesc != -1)
(22,fileDesc)
(23,)
(24,S_IREAD)
(25,1)
(26,tmpl)
(27,1)
(28,filename)
(29,)
(30,globalReturnsTrueOrFalse()
(31,if(globalReturnsTrueOrFalse()
(32,printLine(filename)
(33,if (filename == NULL)
(34,S_IWRITE)
(35,"Temporary file was opened...now closing file")
(36,)
(37,fileDesc)
(38,printLine("Temporary file was opened...now closing file")
(39,CLOSE(fileDesc)
(40,-1)
(41,O_CREAT)
(42,if (filename == NULL)
(43,exit(1)
(44,tmpl)
(45,"Temporary file was opened...now closing file")
(46,O_CREAT)
(47,1)
(48,filename)
(49,printLine("Temporary file was opened...now closing file")
(50,fileDesc)
(51,filename = MKTEMP(tmpl)
(52,filename)
(53,CLOSE(fileDesc)
(54,tmpl)
(55,OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE)
(56,)
(57,filename)
(58,)
(59,filename)
(60,fileDesc = OPEN(filename, O_RDWR|O_CREAT|O_EXCL, S_IREAD|S_IWRITE)
(61,fileDesc != -1)
(62,S_IREAD|S_IWRITE)
(63,filename)
(64,tmpl)
(65,fileDesc)
(66,1)
(67,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(68,NULL)
(69,O_RDWR)
(70,)
(71,filename)
(72,O_RDWR|O_CREAT)
(73,MKTEMP(tmpl)
(74,tmpl)
(75,S_IREAD|S_IWRITE)
(76,RET)
(77,fileDesc)
(78,O_RDWR)
(79,tmpl[] = "fnXXXXXX")
(80,S_IREAD)
(81,)
(82,filename == NULL)
(83,tmpl)
(84,printLine(filename)
(85,)
(86,filename)
(87,filename == NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
