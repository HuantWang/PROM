-----label-----
1
-----code-----
char * CWE427_Uncontrolled_Search_Path_Element__char_file_61b_badSource(char * data)
{
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (250-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
32,33
32,34
33,34
33,35
34,35
34,36
36,37
39,40
39,41
40,41
41,42
41,43
42,43
44,45
44,46
44,47
45,46
47,48
50,51
50,52
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
58,60
59,60
59,61
59,62
59,63
60,61
62,63
62,64
63,64
65,66
67,68
67,69
68,69
68,70
71,72
72,73
72,74
74,75
76,77
78,79
80,81
80,82
81,82
82,83
82,84
83,84
86,87
87,88
87,89
88,89
88,90
89,90
91,92
94,95
95,96
95,97
96,97
98,99
100,101
101,102
-----nextToken-----
2,4,5,7,9,10,16,18,22,24,28,30,31,35,37,38,43,46,48,49,53,55,61,64,66,69,70,73,75,77,79,84,85,90,92,93,97,99,102
-----computeFrom-----
33,34
33,35
34,35
34,36
41,42
41,43
51,52
51,53
58,59
58,60
62,63
62,64
72,73
72,74
87,88
87,89
-----guardedBy-----
37,92
55,79
53,99
64,90
75,92
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE427_Uncontrolled_Search_Path_Element__char_file_61b_badSource(char * data){    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    return data;}
char
* CWE427_Uncontrolled_Search_Path_Element__char_file_61b_badSource(char * data)
*
CWE427_Uncontrolled_Search_Path_Element__char_file_61b_badSource
char * data
char
* data
*
data
{    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    return data;}
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(250-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
return data;
data
data
-----joern-----
(13,25,0)
(41,5,0)
(7,6,0)
(42,19,0)
(5,40,0)
(35,36,0)
(29,11,0)
(38,34,0)
(37,27,0)
(34,46,0)
(42,1,0)
(1,42,0)
(50,17,0)
(27,16,0)
(3,19,0)
(36,42,0)
(46,42,0)
(46,34,0)
(19,43,0)
(28,2,0)
(5,21,0)
(2,13,0)
(18,16,0)
(48,11,0)
(40,5,0)
(13,2,0)
(13,5,0)
(51,10,0)
(36,9,0)
(6,42,0)
(33,6,0)
(17,24,0)
(4,40,0)
(23,21,0)
(27,5,0)
(2,28,0)
(17,13,0)
(36,24,0)
(20,17,0)
(44,13,0)
(1,24,0)
(47,19,0)
(2,6,0)
(0,41,0)
(12,25,0)
(11,43,0)
(26,36,0)
(11,24,0)
(31,42,0)
(10,22,0)
(49,41,0)
(39,5,0)
(13,17,0)
(30,46,0)
(32,46,0)
(9,22,0)
(25,13,0)
(15,40,0)
(8,19,0)
(6,2,0)
(14,9,0)
(17,42,0)
(45,1,0)
(17,20,1)
(12,13,1)
(30,42,1)
(1,45,1)
(11,24,1)
(37,9,1)
(0,5,1)
(40,4,1)
(4,15,1)
(29,34,1)
(27,37,1)
(20,50,1)
(39,34,1)
(44,2,1)
(33,17,1)
(6,42,1)
(35,10,1)
(2,28,1)
(49,0,1)
(13,2,1)
(25,12,1)
(46,42,1)
(27,5,1)
(13,17,1)
(50,41,1)
(15,39,1)
(37,25,1)
(6,7,1)
(13,44,1)
(36,42,1)
(36,24,1)
(1,24,1)
(11,29,1)
(32,30,1)
(17,42,1)
(5,40,1)
(42,1,1)
(10,51,1)
(26,35,1)
(41,5,1)
(41,49,1)
(46,32,1)
(17,24,1)
(14,36,1)
(7,33,1)
(29,41,1)
(45,31,1)
(38,46,1)
(25,13,1)
(29,27,1)
(2,6,1)
(34,46,1)
(36,26,1)
(9,14,1)
(48,11,1)
(51,25,1)
(13,5,1)
(34,38,1)
(35,25,2)
(36,42,2)
(12,41,2)
(25,13,2)
(33,41,2)
(27,41,2)
(2,41,2)
(6,42,2)
(6,41,2)
(25,41,2)
(48,11,2)
(13,41,2)
(17,41,2)
(26,25,2)
(27,5,2)
(41,34,2)
(51,25,2)
(4,34,2)
(46,42,2)
(10,25,2)
(36,24,2)
(44,41,2)
(2,6,2)
(11,24,2)
(49,34,2)
(5,34,2)
(34,46,2)
(2,28,2)
(40,34,2)
(41,5,2)
(36,25,2)
(50,41,2)
(1,24,2)
(39,34,2)
(17,24,2)
(5,40,2)
(9,25,2)
(13,2,2)
(14,25,2)
(42,1,2)
(20,41,2)
(13,5,2)
(17,42,2)
(37,41,2)
(13,17,2)
(7,41,2)
(0,34,2)
(15,34,2)
-----------------------------------
(0,pFile)
(1,strlen(data)
(2,(int)
(3,pFile)
(4,"r")
(5,pFile = fopen(FILENAME, "r")
(6,250-dataLen)
(7,dataLen)
(8,if (250-dataLen > 1)
(9,data[dataLen] = \\\'\\\\0\\\')
(10,printLine("fgets()
(11,return data;)
(12,NULL)
(13,fgets(data+dataLen, (int)
(14,\\\'\\\\0\\\')
(15,FILENAME)
(16,)
(17,data+dataLen)
(18,if (fgets(data+dataLen, (int)
(19,)
(20,dataLen)
(21,)
(22,)
(23,if (pFile != NULL)
(24,char * data)
(25,fgets(data+dataLen, (int)
(26,dataLen)
(27,fclose(pFile)
(28,int)
(29,data)
(30,250)
(31,dataLen)
(32,dataLen)
(33,250)
(34,250-dataLen > 1)
(35,data)
(36,data[dataLen])
(37,pFile)
(38,1)
(39,pFile)
(40,fopen(FILENAME, "r")
(41,pFile != NULL)
(42,dataLen = strlen(data)
(43,)
(44,pFile)
(45,data)
(46,250-dataLen)
(47,dataLen)
(48,RET)
(49,NULL)
(50,data)
(51,"fgets()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
