-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_03_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    if(5==5)
    {
        {
            FILE *pFile;
            pFile = fopen("passwords.txt", "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read the password from a file */
                if (fgetws(data, 100, pFile) == NULL)
                {
                    data[0] = L'\0';
                }
                fclose(pFile);
            }
            else
            {
                data[0] = L'\0';
            }
        }
    }
    if(5==5)
    {
        {
            HANDLE pHandle;
            wchar_t * username = L"User";
            wchar_t * domain = L"Domain";
            /* POTENTIAL FLAW: Attempt to login user with password from the source */
            if (LogonUserW(
                        username,
                        domain,
                        data,
                        LOGON32_LOGON_NETWORK,
                        LOGON32_PROVIDER_DEFAULT,
                        &pHandle) != 0)
            {
                printLine("User logged in successfully.");
                CloseHandle(pHandle);
            }
            else
            {
                printLine("Unable to login.");
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
40,41
41,42
41,43
42,43
44,45
44,46
44,47
45,46
49,50
49,51
49,52
50,51
50,52
51,52
53,54
55,56
55,57
56,57
56,58
57,58
57,59
58,59
58,60
58,61
58,62
59,60
61,62
64,65
66,67
68,69
69,70
70,71
70,72
71,72
71,73
72,73
76,77
77,78
77,79
78,79
80,81
82,83
83,84
84,85
84,86
85,86
85,87
86,87
90,91
90,92
91,92
91,93
94,95
95,96
95,97
95,98
95,99
96,97
97,98
97,99
98,99
100,101
102,103
103,104
103,105
105,106
105,107
105,108
108,109
110,111
111,112
111,113
113,114
113,115
113,116
116,117
118,119
118,120
118,121
119,120
119,121
120,121
120,122
120,123
120,124
120,125
120,126
120,127
121,122
123,124
125,126
127,128
129,130
131,132
133,134
134,135
137,138
137,139
138,139
139,140
139,141
140,141
143,144
144,145
144,146
145,146
147,148
149,150
150,151
151,152
151,153
152,153
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,29,30,36,38,39,43,46,47,48,52,54,60,62,63,65,67,73,74,75,79,81,87,88,89,92,93,99,101,104,106,107,109,112,114,115,117,122,124,126,128,130,132,135,136,141,142,146,148,153,154
-----computeFrom-----
22,23
22,24
28,29
28,30
41,42
41,43
50,51
50,52
57,58
57,59
70,71
70,72
84,85
84,86
91,92
91,93
119,120
119,121
-----guardedBy-----
54,67
52,81
62,73
135,148
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_03_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    if(5==5)    {        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }    }    if(5==5)    {        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }}
void
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_03_bad()
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_03_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    if(5==5)    {        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }    }    if(5==5)    {        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = L"";
wchar_t dataBuffer[100] = L"";
wchar_t
dataBuffer[100] = L""
dataBuffer
[100]
100
= L""
L""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(5==5)    {        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }    }
5==5
5
5
{        {            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }    }
{            FILE *pFile;            pFile = fopen("passwords.txt", "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }        }
FILE *pFile;
FILE *pFile;
FILE
FILE
*pFile
*
pFile
pFile = fopen("passwords.txt", "r");
pFile = fopen("passwords.txt", "r")
pFile
pFile
fopen("passwords.txt", "r")
fopen
fopen
"passwords.txt"
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }            else            {                data[0] = L'\0';            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read the password from a file */                if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }                fclose(pFile);            }
if (fgetws(data, 100, pFile) == NULL)                {                    data[0] = L'\0';                }
fgetws(data, 100, pFile) == NULL
fgetws(data, 100, pFile)
fgetws
fgetws
data
data
100
pFile
pFile
NULL
NULL
{                    data[0] = L'\0';                }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
{                data[0] = L'\0';            }
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
if(5==5)    {        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }
5==5
5
5
{        {            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }    }
{            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            /* POTENTIAL FLAW: Attempt to login user with password from the source */            if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }        }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
wchar_t * username = L"User";
wchar_t * username = L"User";
wchar_t
* username = L"User"
*
username
= L"User"
L"User"
wchar_t * domain = L"Domain";
wchar_t * domain = L"Domain";
wchar_t
* domain = L"Domain"
*
domain
= L"Domain"
L"Domain"
if (LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }
LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0
LogonUserW(                        username,                        domain,                        data,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle)
LogonUserW
LogonUserW
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{                printLine("User logged in successfully.");                CloseHandle(pHandle);            }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{                printLine("Unable to login.");            }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(50,23,0)
(64,38,0)
(25,23,0)
(34,63,0)
(46,30,0)
(57,13,0)
(16,51,0)
(39,43,0)
(3,14,0)
(56,36,0)
(33,50,0)
(38,39,0)
(14,33,0)
(24,50,0)
(58,15,0)
(2,43,0)
(41,62,0)
(19,43,0)
(35,49,0)
(27,63,0)
(63,31,0)
(59,33,0)
(61,23,0)
(21,33,0)
(47,63,0)
(4,46,0)
(33,14,0)
(11,53,0)
(45,33,0)
(31,63,0)
(33,13,0)
(43,39,0)
(6,62,0)
(44,33,0)
(26,33,0)
(0,39,0)
(29,23,0)
(28,31,0)
(18,5,0)
(53,17,0)
(42,5,0)
(52,50,0)
(20,7,0)
(5,39,0)
(48,32,0)
(1,12,0)
(63,50,0)
(10,51,0)
(54,20,0)
(37,62,0)
(9,46,0)
(22,23,0)
(63,39,0)
(15,7,0)
(62,55,0)
(13,33,0)
(8,12,0)
(40,62,0)
(39,46,0)
(38,49,0)
(27,34,1)
(42,39,1)
(37,12,1)
(38,39,1)
(57,33,1)
(14,3,1)
(5,39,1)
(6,37,1)
(28,63,1)
(63,50,1)
(43,2,1)
(1,8,1)
(15,58,1)
(3,44,1)
(21,45,1)
(54,13,1)
(38,64,1)
(60,53,1)
(16,10,1)
(50,52,1)
(8,51,1)
(34,47,1)
(18,42,1)
(13,33,1)
(31,63,1)
(44,59,1)
(8,56,1)
(39,43,1)
(64,48,1)
(10,50,1)
(26,6,1)
(48,31,1)
(47,5,1)
(52,24,1)
(0,51,1)
(60,15,1)
(11,13,1)
(45,26,1)
(33,50,1)
(33,14,1)
(53,11,1)
(56,5,1)
(63,27,1)
(31,28,1)
(59,21,1)
(20,54,1)
(12,1,1)
(19,0,1)
(8,38,1)
(58,20,1)
(63,39,1)
(13,57,1)
(5,18,1)
(51,16,1)
(24,29,1)
(64,31,1)
(60,12,1)
(2,19,1)
(0,51,2)
(34,5,2)
(26,12,2)
(38,39,2)
(6,12,2)
(44,12,2)
(5,39,2)
(19,51,2)
(20,13,2)
(37,12,2)
(47,5,2)
(33,14,2)
(33,50,2)
(64,5,2)
(63,39,2)
(21,12,2)
(31,5,2)
(15,13,2)
(42,51,2)
(43,51,2)
(13,33,2)
(3,12,2)
(13,12,2)
(63,50,2)
(45,12,2)
(48,31,2)
(11,13,2)
(58,13,2)
(5,51,2)
(27,5,2)
(39,51,2)
(59,12,2)
(14,12,2)
(28,5,2)
(57,12,2)
(2,51,2)
(53,13,2)
(39,43,2)
(63,5,2)
(54,13,2)
(38,5,2)
(31,63,2)
(33,12,2)
(18,51,2)
(56,5,2)
-----------------------------------
(0,pFile)
(1,5)
(2,"r")
(3,pHandle)
(4,pFile)
(5,pFile != NULL)
(6,"Domain")
(7,)
(8,5)
(9,if (pFile != NULL)
(10,5)
(11,"Unable to login.")
(12,5==5)
(13,LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(14,&pHandle)
(15,CloseHandle(pHandle)
(16,5)
(17,)
(18,NULL)
(19,"passwords.txt")
(20,printLine("User logged in successfully.")
(21,data)
(22,data)
(23,)
(24,data)
(25,if(5==5)
(26,username)
(27,pFile)
(28,NULL)
(29,"")
(30,)
(31,fgetws(data, 100, pFile)
(32,)
(33,LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(34,100)
(35,if (fgetws(data, 100, pFile)
(36,)
(37,"User")
(38,fclose(pFile)
(39,pFile = fopen("passwords.txt", "r")
(40,pHandle)
(41,if (LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        data,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(42,pFile)
(43,fopen("passwords.txt", "r")
(44,LOGON32_PROVIDER_DEFAULT)
(45,domain)
(46,)
(47,data)
(48,\\\'\\\\0\\\')
(49,)
(50,data = dataBuffer)
(51,5==5)
(52,dataBuffer)
(53,printLine("Unable to login.")
(54,"User logged in successfully.")
(55,)
(56,\\\'\\\\0\\\')
(57,0)
(58,pHandle)
(59,LOGON32_LOGON_NETWORK)
(60,RET)
(61,if(5==5)
(62,)
(63,fgetws(data, 100, pFile)
(64,pFile)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
