-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_44_bad()
{
    wchar_t * data;
    /* define a function pointer */
    void (*funcPtr) (wchar_t *) = badSink;
    wchar_t dataBuffer[250] = L"PATH=";
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = wcslen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (250-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                {
                    printLine("fgetws() failed");
                    /* Restore NUL terminator if fgetws fails */
                    data[dataLen] = L'\0';
                }
                fclose(pFile);
            }
        }
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
30,31
30,32
30,33
32,33
34,35
36,37
37,38
37,39
38,39
40,41
42,43
42,44
42,45
43,44
44,45
44,46
45,46
47,48
47,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
59,60
59,61
62,63
62,64
63,64
63,65
64,65
64,66
66,67
69,70
69,71
70,71
71,72
71,73
72,73
74,75
74,76
74,77
75,76
77,78
80,81
80,82
81,82
81,83
82,83
84,85
86,87
86,88
87,88
87,89
88,89
88,90
89,90
89,91
89,92
89,93
90,91
92,93
92,94
93,94
95,96
97,98
97,99
98,99
98,100
101,102
102,103
102,104
104,105
106,107
108,109
110,111
110,112
111,112
112,113
112,114
113,114
116,117
117,118
117,119
118,119
118,120
119,120
121,122
124,125
125,126
125,127
126,127
128,129
130,131
131,132
131,133
132,133
134,135
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,29,31,33,35,39,41,46,48,52,54,58,60,61,65,67,68,73,76,78,79,83,85,91,94,96,99,100,103,105,107,109,114,115,120,122,123,127,129,133,135
-----computeFrom-----
37,38
37,39
63,64
63,65
64,65
64,66
71,72
71,73
81,82
81,83
88,89
88,90
92,93
92,94
102,103
102,104
117,118
117,119
-----guardedBy-----
67,122
85,109
83,129
94,120
105,122
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_44_bad(){    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = badSink;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* use the function pointer */    funcPtr(data);}
void
CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_44_bad()
CWE427_Uncontrolled_Search_Path_Element__wchar_t_file_44_bad
{    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = badSink;    wchar_t dataBuffer[250] = L"PATH=";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* use the function pointer */    funcPtr(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
void (*funcPtr) (wchar_t *) = badSink;
void (*funcPtr) (wchar_t *) = badSink;
void
(*funcPtr) (wchar_t *) = badSink
*funcPtr
*
funcPtr
wchar_t *
wchar_t
*
*

= badSink
badSink
badSink
wchar_t dataBuffer[250] = L"PATH=";
wchar_t dataBuffer[250] = L"PATH=";
wchar_t
dataBuffer[250] = L"PATH="
dataBuffer
[250]
250
= L"PATH="
L"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
if (fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
fgetws(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(250-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(31,37,0)
(32,31,0)
(31,39,0)
(53,3,0)
(42,32,0)
(29,5,0)
(18,23,0)
(33,5,0)
(21,4,0)
(30,31,0)
(54,20,0)
(39,19,0)
(30,34,0)
(25,46,0)
(50,3,0)
(12,17,0)
(49,15,0)
(4,30,0)
(20,15,0)
(11,44,0)
(45,44,0)
(9,31,0)
(30,4,0)
(35,19,0)
(52,5,0)
(10,37,0)
(41,18,0)
(1,7,0)
(15,20,0)
(31,30,0)
(53,47,0)
(31,32,0)
(3,5,0)
(20,53,0)
(13,23,0)
(26,37,0)
(8,39,0)
(33,44,0)
(6,5,0)
(22,7,0)
(37,44,0)
(51,8,0)
(14,3,0)
(40,3,0)
(47,44,0)
(48,4,0)
(4,53,0)
(28,6,0)
(34,30,0)
(47,53,0)
(2,5,0)
(19,39,0)
(24,53,0)
(8,17,0)
(0,19,0)
(55,33,0)
(39,46,0)
(37,31,0)
(38,39,0)
(43,6,0)
(16,20,0)
(7,39,0)
(36,47,0)
(44,5,0)
(37,53,0)
(51,13,1)
(24,44,1)
(27,33,1)
(20,53,1)
(36,24,1)
(39,19,1)
(38,15,1)
(37,10,1)
(44,11,1)
(30,4,1)
(15,49,1)
(35,38,1)
(0,35,1)
(19,0,1)
(16,54,1)
(20,16,1)
(6,43,1)
(43,28,1)
(49,20,1)
(55,7,1)
(2,6,1)
(33,55,1)
(55,15,1)
(42,31,1)
(45,2,1)
(55,8,1)
(47,36,1)
(1,39,1)
(15,20,1)
(53,47,1)
(7,39,1)
(7,22,1)
(31,30,1)
(18,41,1)
(21,37,1)
(4,53,1)
(47,44,1)
(8,39,1)
(31,9,1)
(11,45,1)
(51,32,1)
(32,31,1)
(41,32,1)
(4,48,1)
(37,44,1)
(31,37,1)
(33,44,1)
(22,1,1)
(31,39,1)
(32,42,1)
(13,18,1)
(30,34,1)
(10,26,1)
(9,30,1)
(48,21,1)
(37,53,1)
(26,7,1)
(8,51,1)
(54,53,1)
(32,31,2)
(1,15,2)
(31,39,2)
(21,7,2)
(31,37,2)
(13,32,2)
(19,15,2)
(7,15,2)
(37,7,2)
(30,34,2)
(32,7,2)
(51,7,2)
(47,44,2)
(53,47,2)
(4,53,2)
(15,20,2)
(41,32,2)
(7,39,2)
(8,7,2)
(37,44,2)
(0,15,2)
(30,4,2)
(42,7,2)
(4,7,2)
(22,15,2)
(39,19,2)
(26,7,2)
(39,15,2)
(30,7,2)
(38,15,2)
(33,44,2)
(37,53,2)
(20,53,2)
(8,39,2)
(31,7,2)
(35,15,2)
(48,7,2)
(18,32,2)
(10,7,2)
(31,30,2)
(9,7,2)
-----------------------------------
(0,"r")
(1,pFile)
(2,"PATH=")
(3,)
(4,250-dataLen)
(5,)
(6,(*funcPtr)
(7,pFile != NULL)
(8,fclose(pFile)
(9,pFile)
(10,dataLen)
(11,dataBuffer)
(12,if (fgetws(data+dataLen, (int)
(13,\\\'\\\\0\\\')
(14,dataLen)
(15,250-dataLen > 1)
(16,dataLen)
(17,)
(18,printLine("fgetws()
(19,fopen(FILENAME, "r")
(20,250-dataLen)
(21,250)
(22,NULL)
(23,)
(24,dataLen)
(25,if (pFile != NULL)
(26,data)
(27,RET)
(28,funcPtr)
(29,data)
(30,(int)
(31,fgetws(data+dataLen, (int)
(32,fgetws(data+dataLen, (int)
(33,funcPtr(data)
(34,int)
(35,FILENAME)
(36,data)
(37,data+dataLen)
(38,pFile)
(39,pFile = fopen(FILENAME, "r")
(40,if (250-dataLen > 1)
(41,"fgetws()
(42,NULL)
(43,badSink)
(44,data = dataBuffer)
(45,data)
(46,)
(47,wcslen(data)
(48,dataLen)
(49,1)
(50,pFile)
(51,pFile)
(52,funcPtr)
(53,dataLen = wcslen(data)
(54,250)
(55,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
