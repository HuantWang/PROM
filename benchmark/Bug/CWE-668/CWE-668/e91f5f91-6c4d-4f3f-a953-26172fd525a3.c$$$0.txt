-----label-----
1
-----code-----
void CWE535_Info_Exposure_Shell_Error__w32_wchar_t_02_bad()
{
    if(1)
    {
        {
            wchar_t password[100] = L"";
            size_t passwordLen = 0;
            HANDLE pHandle;
            wchar_t * username = L"User";
            wchar_t * domain = L"Domain";
            if (fgetws(password, 100, stdin) == NULL)
            {
                printLine("fgetws() failed");
                /* Restore NUL terminator if fgetws fails */
                password[0] = L'\0';
            }
            /* Remove the carriage return from the string that is inserted by fgetws() */
            passwordLen = wcslen(password);
            if (passwordLen > 0)
            {
                password[passwordLen-1] = L'\0';
            }
            /* Use the password in LogonUser() to establish that it is "sensitive" */
            if (LogonUserW(
                        username,
                        domain,
                        password,
                        LOGON32_LOGON_NETWORK,
                        LOGON32_PROVIDER_DEFAULT,
                        &pHandle) != 0)
            {
                printLine("User logged in successfully.");
                CloseHandle(pHandle);
            }
            else
            {
                printLine("Unable to login.");
            }
            /* FLAW: Write sensitive data to stderr */
            fwprintf(stderr, L"User attempted access with password: %s\n", password);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
8,9
9,10
9,11
9,12
9,13
9,14
9,15
9,16
9,17
9,18
9,19
10,11
11,12
11,13
13,14
13,15
13,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
34,35
34,36
36,37
36,38
36,39
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
49,50
49,51
50,51
50,52
51,52
51,53
51,54
51,55
52,53
54,55
57,58
59,60
61,62
61,63
62,63
63,64
63,65
64,65
67,68
68,69
68,70
69,70
69,71
70,71
74,75
75,76
75,77
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
85,86
88,89
89,90
90,91
90,92
91,92
91,93
92,93
94,95
94,96
95,96
99,100
99,101
99,102
100,101
100,102
101,102
101,103
101,104
101,105
101,106
101,107
101,108
102,103
104,105
106,107
108,109
110,111
112,113
114,115
115,116
118,119
118,120
119,120
120,121
120,122
121,122
124,125
125,126
125,127
126,127
128,129
130,131
131,132
132,133
132,134
133,134
136,137
137,138
137,139
137,140
137,141
138,139
140,141
143,144
-----nextToken-----
2,4,7,12,14,16,18,22,24,26,30,32,35,37,38,40,43,45,46,48,53,55,56,58,60,65,66,71,72,73,77,80,82,86,87,93,96,97,98,103,105,107,109,111,113,116,117,122,123,127,129,134,135,139,141,142,144
-----computeFrom-----
50,51
50,52
68,69
68,70
75,76
75,77
84,85
84,86
90,91
90,92
94,95
94,96
100,101
100,102
-----guardedBy-----
55,71
86,96
116,129
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;
-----ast_node-----
void CWE535_Info_Exposure_Shell_Error__w32_wchar_t_02_bad(){    if(1)    {        {            wchar_t password[100] = L"";            size_t passwordLen = 0;            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            if (fgetws(password, 100, stdin) == NULL)            {                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                password[0] = L'\0';            }            /* Remove the carriage return from the string that is inserted by fgetws() */            passwordLen = wcslen(password);            if (passwordLen > 0)            {                password[passwordLen-1] = L'\0';            }            /* Use the password in LogonUser() to establish that it is "sensitive" */            if (LogonUserW(                        username,                        domain,                        password,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }            /* FLAW: Write sensitive data to stderr */            fwprintf(stderr, L"User attempted access with password: %s\n", password);        }    }}
void
CWE535_Info_Exposure_Shell_Error__w32_wchar_t_02_bad()
CWE535_Info_Exposure_Shell_Error__w32_wchar_t_02_bad
{    if(1)    {        {            wchar_t password[100] = L"";            size_t passwordLen = 0;            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            if (fgetws(password, 100, stdin) == NULL)            {                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                password[0] = L'\0';            }            /* Remove the carriage return from the string that is inserted by fgetws() */            passwordLen = wcslen(password);            if (passwordLen > 0)            {                password[passwordLen-1] = L'\0';            }            /* Use the password in LogonUser() to establish that it is "sensitive" */            if (LogonUserW(                        username,                        domain,                        password,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }            /* FLAW: Write sensitive data to stderr */            fwprintf(stderr, L"User attempted access with password: %s\n", password);        }    }}
if(1)    {        {            wchar_t password[100] = L"";            size_t passwordLen = 0;            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            if (fgetws(password, 100, stdin) == NULL)            {                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                password[0] = L'\0';            }            /* Remove the carriage return from the string that is inserted by fgetws() */            passwordLen = wcslen(password);            if (passwordLen > 0)            {                password[passwordLen-1] = L'\0';            }            /* Use the password in LogonUser() to establish that it is "sensitive" */            if (LogonUserW(                        username,                        domain,                        password,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }            /* FLAW: Write sensitive data to stderr */            fwprintf(stderr, L"User attempted access with password: %s\n", password);        }    }
1
{        {            wchar_t password[100] = L"";            size_t passwordLen = 0;            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            if (fgetws(password, 100, stdin) == NULL)            {                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                password[0] = L'\0';            }            /* Remove the carriage return from the string that is inserted by fgetws() */            passwordLen = wcslen(password);            if (passwordLen > 0)            {                password[passwordLen-1] = L'\0';            }            /* Use the password in LogonUser() to establish that it is "sensitive" */            if (LogonUserW(                        username,                        domain,                        password,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }            /* FLAW: Write sensitive data to stderr */            fwprintf(stderr, L"User attempted access with password: %s\n", password);        }    }
{            wchar_t password[100] = L"";            size_t passwordLen = 0;            HANDLE pHandle;            wchar_t * username = L"User";            wchar_t * domain = L"Domain";            if (fgetws(password, 100, stdin) == NULL)            {                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                password[0] = L'\0';            }            /* Remove the carriage return from the string that is inserted by fgetws() */            passwordLen = wcslen(password);            if (passwordLen > 0)            {                password[passwordLen-1] = L'\0';            }            /* Use the password in LogonUser() to establish that it is "sensitive" */            if (LogonUserW(                        username,                        domain,                        password,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }            /* FLAW: Write sensitive data to stderr */            fwprintf(stderr, L"User attempted access with password: %s\n", password);        }
wchar_t password[100] = L"";
wchar_t password[100] = L"";
wchar_t
password[100] = L""
password
[100]
100
= L""
L""
size_t passwordLen = 0;
size_t passwordLen = 0;
size_t
size_t
passwordLen = 0
passwordLen
= 0
0
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
wchar_t * username = L"User";
wchar_t * username = L"User";
wchar_t
* username = L"User"
*
username
= L"User"
L"User"
wchar_t * domain = L"Domain";
wchar_t * domain = L"Domain";
wchar_t
* domain = L"Domain"
*
domain
= L"Domain"
L"Domain"
if (fgetws(password, 100, stdin) == NULL)            {                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                password[0] = L'\0';            }
fgetws(password, 100, stdin) == NULL
fgetws(password, 100, stdin)
fgetws
fgetws
password
password
100
stdin
stdin
NULL
NULL
{                printLine("fgetws() failed");                /* Restore NUL terminator if fgetws fails */                password[0] = L'\0';            }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
password[0] = L'\0';
password[0] = L'\0'
password[0]
password
password
0
L'\0'
passwordLen = wcslen(password);
passwordLen = wcslen(password)
passwordLen
passwordLen
wcslen(password)
wcslen
wcslen
password
password
if (passwordLen > 0)            {                password[passwordLen-1] = L'\0';            }
passwordLen > 0
passwordLen
passwordLen
0
{                password[passwordLen-1] = L'\0';            }
password[passwordLen-1] = L'\0';
password[passwordLen-1] = L'\0'
password[passwordLen-1]
password
password
passwordLen-1
passwordLen
passwordLen
1
L'\0'
if (LogonUserW(                        username,                        domain,                        password,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0)            {                printLine("User logged in successfully.");                CloseHandle(pHandle);            }            else            {                printLine("Unable to login.");            }
LogonUserW(                        username,                        domain,                        password,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle) != 0
LogonUserW(                        username,                        domain,                        password,                        LOGON32_LOGON_NETWORK,                        LOGON32_PROVIDER_DEFAULT,                        &pHandle)
LogonUserW
LogonUserW
username
username
domain
domain
password
password
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{                printLine("User logged in successfully.");                CloseHandle(pHandle);            }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{                printLine("Unable to login.");            }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
fwprintf(stderr, L"User attempted access with password: %s\n", password);
fwprintf(stderr, L"User attempted access with password: %s\n", password)
fwprintf
fwprintf
stderr
stderr
L"User attempted access with password: %s\n"
password
password
-----joern-----
(25,28,0)
(49,28,0)
(26,9,0)
(23,46,0)
(21,17,0)
(15,30,0)
(14,7,0)
(53,28,0)
(52,28,0)
(41,44,0)
(43,7,0)
(36,5,0)
(33,38,0)
(6,28,0)
(3,43,0)
(27,30,0)
(35,51,0)
(19,9,0)
(51,9,0)
(28,12,0)
(29,44,0)
(10,15,0)
(16,29,0)
(9,51,0)
(32,23,0)
(20,28,0)
(42,29,0)
(18,28,0)
(9,28,0)
(40,29,0)
(31,26,0)
(30,15,0)
(8,45,0)
(4,29,0)
(47,39,0)
(13,15,0)
(29,42,0)
(37,26,0)
(17,0,0)
(45,46,0)
(22,29,0)
(34,42,0)
(2,39,0)
(39,28,0)
(44,29,0)
(50,29,0)
(24,28,0)
(11,15,0)
(15,10,1)
(23,32,1)
(4,16,1)
(41,50,1)
(30,15,1)
(48,1,1)
(3,30,1)
(31,9,1)
(21,42,1)
(33,26,1)
(51,35,1)
(13,11,1)
(9,51,1)
(26,9,1)
(45,8,1)
(49,39,1)
(19,14,1)
(34,29,1)
(16,26,1)
(19,30,1)
(26,37,1)
(2,47,1)
(48,45,1)
(48,17,1)
(10,13,1)
(40,4,1)
(47,52,1)
(50,22,1)
(53,49,1)
(27,15,1)
(29,44,1)
(37,31,1)
(30,27,1)
(32,42,1)
(14,43,1)
(39,2,1)
(42,34,1)
(43,3,1)
(16,33,1)
(22,40,1)
(44,41,1)
(42,29,1)
(8,23,1)
(52,1,1)
(35,19,1)
(11,53,1)
(17,21,1)
(22,1,2)
(11,1,2)
(17,42,2)
(4,1,2)
(9,1,2)
(27,1,2)
(40,1,2)
(53,1,2)
(21,42,2)
(33,26,2)
(45,42,2)
(26,9,2)
(42,29,2)
(31,1,2)
(30,1,2)
(13,1,2)
(43,30,2)
(19,1,2)
(52,1,2)
(41,1,2)
(44,1,2)
(47,1,2)
(26,1,2)
(29,1,2)
(29,44,2)
(2,1,2)
(34,1,2)
(23,42,2)
(37,1,2)
(50,1,2)
(9,51,2)
(30,15,2)
(15,1,2)
(51,1,2)
(10,1,2)
(3,30,2)
(35,1,2)
(16,1,2)
(32,42,2)
(39,1,2)
(49,1,2)
(42,1,2)
(8,42,2)
(14,30,2)
-----------------------------------
(0,)
(1,1)
(2,0)
(3,"fgetws()
(4,domain)
(5,)
(6,if (fgetws(password, 100, stdin)
(7,)
(8,pHandle)
(9,passwordLen = wcslen(password)
(10,stdin)
(11,password)
(12,)
(13,100)
(14,\\\'\\\\0\\\')
(15,fgetws(password, 100, stdin)
(16,username)
(17,printLine("Unable to login.")
(18,pHandle)
(19,passwordLen)
(20,if (passwordLen > 0)
(21,"Unable to login.")
(22,LOGON32_LOGON_NETWORK)
(23,printLine("User logged in successfully.")
(24,if (LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        password,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(25,passwordLen)
(26,passwordLen > 0)
(27,NULL)
(28,)
(29,LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        password,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(30,fgetws(password, 100, stdin)
(31,passwordLen)
(32,"User logged in successfully.")
(33,\\\'\\\\0\\\')
(34,0)
(35,password)
(36,if(1)
(37,0)
(38,)
(39,passwordLen = 0)
(40,password)
(41,pHandle)
(42,LogonUserW(\\\\n                        username,\\\\n                        domain,\\\\n                        password,\\\\n                        LOGON32_LOGON_NETWORK,\\\\n                        LOGON32_PROVIDER_DEFAULT,\\\\n                        &pHandle)
(43,printLine("fgetws()
(44,&pHandle)
(45,CloseHandle(pHandle)
(46,)
(47,passwordLen)
(48,RET)
(49,"User")
(50,LOGON32_PROVIDER_DEFAULT)
(51,wcslen(password)
(52,"")
(53,"Domain")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
