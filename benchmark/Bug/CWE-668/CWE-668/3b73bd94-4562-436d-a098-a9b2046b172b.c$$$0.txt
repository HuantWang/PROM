-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_char_67_bad()
{
    char * data;
    CWE256_Plaintext_Storage_of_Password__w32_char_67_structType myStruct;
    char dataBuffer[100] = "";
    data = dataBuffer;
    {
        FILE *pFile;
        pFile = fopen("passwords.txt", "r");
        if (pFile != NULL)
        {
            /* POTENTIAL FLAW: Read the password from a file */
            if (fgets(data, 100, pFile) == NULL)
            {
                data[0] = '\0';
            }
            fclose(pFile);
        }
        else
        {
            data[0] = '\0';
        }
    }
    myStruct.structFirst = data;
    CWE256_Plaintext_Storage_of_Password__w32_char_67b_badSink(myStruct);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
27,28
28,29
28,30
29,30
31,32
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
46,47
50,51
50,52
50,53
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
58,60
59,60
59,61
59,62
59,63
60,61
62,63
65,66
67,68
69,70
70,71
71,72
71,73
72,73
72,74
73,74
77,78
78,79
78,80
79,80
81,82
83,84
84,85
85,86
85,87
86,87
86,88
87,88
91,92
92,93
92,94
93,94
93,95
94,95
97,98
99,100
100,101
100,102
101,102
103,104
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,26,30,32,37,39,40,44,47,48,49,53,55,61,63,64,66,68,74,75,76,80,82,88,89,90,95,96,98,102,104
-----computeFrom-----
28,29
28,30
42,43
42,44
51,52
51,53
58,59
58,60
71,72
71,73
85,86
85,87
92,93
92,94
-----guardedBy-----
55,68
53,82
63,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_char_67_bad(){    char * data;    CWE256_Plaintext_Storage_of_Password__w32_char_67_structType myStruct;    char dataBuffer[100] = "";    data = dataBuffer;    {        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgets(data, 100, pFile) == NULL)            {                data[0] = '\0';            }            fclose(pFile);        }        else        {            data[0] = '\0';        }    }    myStruct.structFirst = data;    CWE256_Plaintext_Storage_of_Password__w32_char_67b_badSink(myStruct);}
void
CWE256_Plaintext_Storage_of_Password__w32_char_67_bad()
CWE256_Plaintext_Storage_of_Password__w32_char_67_bad
{    char * data;    CWE256_Plaintext_Storage_of_Password__w32_char_67_structType myStruct;    char dataBuffer[100] = "";    data = dataBuffer;    {        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgets(data, 100, pFile) == NULL)            {                data[0] = '\0';            }            fclose(pFile);        }        else        {            data[0] = '\0';        }    }    myStruct.structFirst = data;    CWE256_Plaintext_Storage_of_Password__w32_char_67b_badSink(myStruct);}
char * data;
char * data;
char
* data
*
data
CWE256_Plaintext_Storage_of_Password__w32_char_67_structType myStruct;
CWE256_Plaintext_Storage_of_Password__w32_char_67_structType myStruct;
CWE256_Plaintext_Storage_of_Password__w32_char_67_structType
CWE256_Plaintext_Storage_of_Password__w32_char_67_structType
myStruct
myStruct
char dataBuffer[100] = "";
char dataBuffer[100] = "";
char
dataBuffer[100] = ""
dataBuffer
[100]
100
= ""
""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        FILE *pFile;        pFile = fopen("passwords.txt", "r");        if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgets(data, 100, pFile) == NULL)            {                data[0] = '\0';            }            fclose(pFile);        }        else        {            data[0] = '\0';        }    }
FILE *pFile;
FILE *pFile;
FILE
FILE
*pFile
*
pFile
pFile = fopen("passwords.txt", "r");
pFile = fopen("passwords.txt", "r")
pFile
pFile
fopen("passwords.txt", "r")
fopen
fopen
"passwords.txt"
"r"
if (pFile != NULL)        {            /* POTENTIAL FLAW: Read the password from a file */            if (fgets(data, 100, pFile) == NULL)            {                data[0] = '\0';            }            fclose(pFile);        }        else        {            data[0] = '\0';        }
pFile != NULL
pFile
pFile
NULL
NULL
{            /* POTENTIAL FLAW: Read the password from a file */            if (fgets(data, 100, pFile) == NULL)            {                data[0] = '\0';            }            fclose(pFile);        }
if (fgets(data, 100, pFile) == NULL)            {                data[0] = '\0';            }
fgets(data, 100, pFile) == NULL
fgets(data, 100, pFile)
fgets
fgets
data
data
100
pFile
pFile
NULL
NULL
{                data[0] = '\0';            }
data[0] = '\0';
data[0] = '\0'
data[0]
data
data
0
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
{            data[0] = '\0';        }
data[0] = '\0';
data[0] = '\0'
data[0]
data
data
0
'\0'
myStruct.structFirst = data;
myStruct.structFirst = data
myStruct.structFirst
myStruct
myStruct
structFirst
data
data
CWE256_Plaintext_Storage_of_Password__w32_char_67b_badSink(myStruct);
CWE256_Plaintext_Storage_of_Password__w32_char_67b_badSink(myStruct)
CWE256_Plaintext_Storage_of_Password__w32_char_67b_badSink
CWE256_Plaintext_Storage_of_Password__w32_char_67b_badSink
myStruct
myStruct
-----joern-----
(44,4,0)
(9,8,0)
(21,36,0)
(47,4,0)
(49,15,0)
(35,18,0)
(17,42,0)
(33,30,0)
(27,24,0)
(12,17,0)
(20,8,0)
(23,18,0)
(45,3,0)
(46,18,0)
(34,15,0)
(36,15,0)
(16,22,0)
(2,31,0)
(18,4,0)
(4,31,0)
(8,15,0)
(31,15,0)
(3,4,0)
(5,18,0)
(30,29,0)
(48,20,0)
(24,17,0)
(50,29,0)
(44,10,0)
(7,30,0)
(1,10,0)
(14,24,0)
(20,16,0)
(13,44,0)
(25,16,0)
(29,15,0)
(8,49,0)
(24,8,0)
(28,31,0)
(19,26,0)
(43,15,0)
(29,8,0)
(38,49,0)
(32,15,0)
(41,8,0)
(37,26,0)
(6,46,0)
(18,46,0)
(18,8,0)
(0,49,0)
(39,3,0)
(26,4,0)
(11,20,0)
(4,3,0)
(30,7,1)
(50,30,1)
(35,26,1)
(25,20,1)
(33,17,1)
(3,45,1)
(26,4,1)
(26,19,1)
(44,13,1)
(20,8,1)
(13,46,1)
(8,49,1)
(14,26,1)
(12,24,1)
(48,11,1)
(8,41,1)
(29,50,1)
(24,27,1)
(20,48,1)
(23,5,1)
(47,8,1)
(46,6,1)
(24,8,1)
(7,33,1)
(9,49,1)
(18,8,1)
(18,4,1)
(46,18,1)
(41,9,1)
(17,12,1)
(40,36,1)
(27,14,1)
(29,8,1)
(45,39,1)
(0,38,1)
(18,23,1)
(49,0,1)
(16,25,1)
(36,21,1)
(44,4,1)
(4,3,1)
(11,46,1)
(6,18,1)
(33,44,1)
(39,47,1)
(19,37,1)
(21,29,1)
(13,16,1)
(37,4,1)
(5,35,1)
(14,26,2)
(12,26,2)
(17,26,2)
(23,26,2)
(18,26,2)
(44,26,2)
(24,26,2)
(18,8,2)
(27,26,2)
(20,46,2)
(29,8,2)
(26,4,2)
(48,46,2)
(24,8,2)
(8,49,2)
(6,26,2)
(5,26,2)
(25,46,2)
(20,8,2)
(16,46,2)
(13,26,2)
(11,46,2)
(35,26,2)
(44,4,2)
(4,3,2)
(46,26,2)
(18,4,2)
(46,18,2)
-----------------------------------
(0,"")
(1,if (fgets(data, 100, pFile)
(2,if (pFile != NULL)
(3,fopen("passwords.txt", "r")
(4,pFile = fopen("passwords.txt", "r")
(5,100)
(6,NULL)
(7,structFirst)
(8,data = dataBuffer)
(9,data)
(10,)
(11,data)
(12,\\\'\\\\0\\\')
(13,pFile)
(14,data)
(15,)
(16,data[0] = \\\'\\\\0\\\')
(17,data[0] = \\\'\\\\0\\\')
(18,fgets(data, 100, pFile)
(19,NULL)
(20,data[0])
(21,myStruct)
(22,)
(23,pFile)
(24,data[0])
(25,\\\'\\\\0\\\')
(26,pFile != NULL)
(27,0)
(28,pFile)
(29,myStruct.structFirst = data)
(30,myStruct.structFirst)
(31,)
(32,myStruct)
(33,myStruct)
(34,data)
(35,data)
(36,CWE256_Plaintext_Storage_of_Password__w32_char_67b_badSink(myStruct)
(37,pFile)
(38,dataBuffer)
(39,"passwords.txt")
(40,RET)
(41,dataBuffer)
(42,)
(43,dataBuffer)
(44,fclose(pFile)
(45,"r")
(46,fgets(data, 100, pFile)
(47,pFile)
(48,0)
(49,dataBuffer[100] = "")
(50,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
