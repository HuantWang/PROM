-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_14_bad()
{
    if(globalFive==5)
    {
        {
            wchar_t filename[MAX_PATH] = L"";
            int fileDesc;
            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,
            * leading to an inescapable race condition when we try to open it again. */
            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)
            {
                exit(1);
            }
            printWLine(filename);
            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
7,9
8,9
11,12
12,13
12,14
12,15
12,16
12,17
12,18
13,14
14,15
14,16
16,17
16,18
16,19
18,19
19,20
21,22
23,24
24,25
24,26
26,27
28,29
28,30
29,30
29,31
30,31
30,32
30,33
30,34
30,35
31,32
36,37
39,40
40,41
41,42
41,43
42,43
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
55,56
55,57
55,58
55,59
56,57
58,59
60,61
60,62
61,62
63,64
65,66
65,67
66,67
68,69
70,71
70,72
71,72
71,73
72,73
74,75
76,77
76,78
77,78
78,79
78,80
79,80
82,83
83,84
83,85
84,85
86,87
-----nextToken-----
2,4,9,10,15,17,20,22,25,27,32,33,34,35,37,38,43,44,48,50,54,57,59,62,64,67,69,73,75,80,81,85,87
-----computeFrom-----
7,8
7,9
29,30
29,31
52,53
52,54
60,61
60,62
65,66
65,67
71,72
71,73
-----guardedBy-----
73,87
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_14_bad(){    if(globalFive==5)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
void
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_14_bad()
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_14_bad
{    if(globalFive==5)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
if(globalFive==5)    {        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
globalFive==5
globalFive
globalFive
5
{        {            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
{            wchar_t filename[MAX_PATH] = L"";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }            printWLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
wchar_t filename[MAX_PATH] = L"";
wchar_t filename[MAX_PATH] = L"";
wchar_t
filename[MAX_PATH] = L""
filename
[MAX_PATH]
MAX_PATH
MAX_PATH
= L""
L""
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)            {                exit(1);            }
GetTempFileNameW(L".", L"bad", 0, filename) == 0
GetTempFileNameW(L".", L"bad", 0, filename)
GetTempFileNameW
GetTempFileNameW
L"."
L"bad"
0
filename
filename
0
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printWLine(filename);
printWLine(filename)
printWLine
printWLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
-----joern-----
(22,20,0)
(29,7,0)
(8,30,0)
(10,6,0)
(17,7,0)
(24,17,0)
(28,25,0)
(1,30,0)
(30,17,0)
(16,20,0)
(4,17,0)
(14,25,0)
(11,34,0)
(26,9,0)
(2,4,0)
(19,16,0)
(13,20,0)
(20,12,0)
(23,34,0)
(17,4,0)
(14,4,0)
(18,4,0)
(25,14,0)
(21,14,0)
(17,30,0)
(2,9,0)
(3,20,0)
(5,20,0)
(27,7,0)
(4,20,0)
(15,26,0)
(7,17,0)
(33,19,0)
(31,5,0)
(0,2,0)
(8,1,1)
(3,34,1)
(28,21,1)
(33,3,1)
(32,14,1)
(1,24,1)
(5,31,1)
(32,2,1)
(25,28,1)
(34,23,1)
(2,0,1)
(4,17,1)
(18,5,1)
(14,4,1)
(17,7,1)
(26,15,1)
(19,33,1)
(27,30,1)
(21,4,1)
(0,26,1)
(15,14,1)
(14,25,1)
(2,4,1)
(23,11,1)
(30,8,1)
(17,30,1)
(32,34,1)
(7,29,1)
(29,27,1)
(31,19,1)
(24,18,1)
(26,14,2)
(17,30,2)
(19,34,2)
(28,34,2)
(7,34,2)
(33,34,2)
(4,17,2)
(8,34,2)
(5,34,2)
(17,7,2)
(27,34,2)
(31,34,2)
(3,34,2)
(15,14,2)
(14,25,2)
(14,34,2)
(18,34,2)
(30,34,2)
(25,34,2)
(21,34,2)
(17,34,2)
(24,34,2)
(4,34,2)
(0,14,2)
(14,4,2)
(1,34,2)
(2,14,2)
(29,34,2)
(2,4,2)
-----------------------------------
(0,fileDesc)
(1,O_RDWR)
(2,CLOSE(fileDesc)
(3,"")
(4,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(5,printWLine(filename)
(6,)
(7,S_IREAD|S_IWRITE)
(8,O_CREAT)
(9,)
(10,if(globalFive==5)
(11,globalFive)
(12,)
(13,fileDesc)
(14,fileDesc != -1)
(15,"Temporary file was opened...now closing file")
(16,)
(17,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(18,fileDesc)
(19,exit(1)
(20,)
(21,fileDesc)
(22,if (fileDesc != -1)
(23,5)
(24,filename)
(25,-1)
(26,printLine("Temporary file was opened...now closing file")
(27,S_IREAD)
(28,1)
(29,S_IWRITE)
(30,O_RDWR|O_CREAT)
(31,filename)
(32,RET)
(33,1)
(34,globalFive==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
