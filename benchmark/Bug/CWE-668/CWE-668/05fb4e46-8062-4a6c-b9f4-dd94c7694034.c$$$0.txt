-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__char_w32GetTempFileName_10_bad()
{
    if(globalTrue)
    {
        {
            char filename[MAX_PATH] = "";
            int fileDesc;
            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,
            * leading to an inescapable race condition when we try to open it again. */
            if (GetTempFileNameA(".", "bad", 0, filename) == 0)
            {
                exit(1);
            }
            printLine(filename);
            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
            if (fileDesc != -1)
            {
                printLine("Temporary file was opened...now closing file");
                CLOSE(fileDesc);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
11,12
12,13
12,14
14,15
14,16
14,17
16,17
17,18
19,20
21,22
22,23
22,24
24,25
26,27
26,28
27,28
27,29
28,29
28,30
28,31
28,32
28,33
29,30
34,35
37,38
38,39
39,40
39,41
40,41
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
53,54
53,55
53,56
53,57
54,55
56,57
58,59
58,60
59,60
61,62
63,64
63,65
64,65
66,67
68,69
68,70
69,70
69,71
70,71
72,73
74,75
74,76
75,76
76,77
76,78
77,78
80,81
81,82
81,83
82,83
84,85
-----nextToken-----
2,4,8,13,15,18,20,23,25,30,31,32,33,35,36,41,42,46,48,52,55,57,60,62,65,67,71,73,78,79,83,85
-----computeFrom-----
27,28
27,29
50,51
50,52
58,59
58,60
63,64
63,65
69,70
69,71
-----guardedBy-----
71,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE377_Insecure_Temporary_File__char_w32GetTempFileName_10_bad(){    if(globalTrue)    {        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
void
CWE377_Insecure_Temporary_File__char_w32GetTempFileName_10_bad()
CWE377_Insecure_Temporary_File__char_w32GetTempFileName_10_bad
{    if(globalTrue)    {        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }}
if(globalTrue)    {        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
globalTrue
globalTrue
{        {            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }    }
{            char filename[MAX_PATH] = "";            int fileDesc;            /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,            * leading to an inescapable race condition when we try to open it again. */            if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }            printLine(filename);            /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */            fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);            if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }        }
char filename[MAX_PATH] = "";
char filename[MAX_PATH] = "";
char
filename[MAX_PATH] = ""
filename
[MAX_PATH]
MAX_PATH
MAX_PATH
= ""
""
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
if (GetTempFileNameA(".", "bad", 0, filename) == 0)            {                exit(1);            }
GetTempFileNameA(".", "bad", 0, filename) == 0
GetTempFileNameA(".", "bad", 0, filename)
GetTempFileNameA
GetTempFileNameA
"."
"bad"
0
filename
filename
0
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
printLine(filename);
printLine(filename)
printLine
printLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)            {                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
fileDesc != -1
fileDesc
fileDesc
-1
1
{                printLine("Temporary file was opened...now closing file");                CLOSE(fileDesc);            }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
-----joern-----
(2,33,0)
(34,33,0)
(3,14,0)
(14,42,0)
(24,12,0)
(8,17,0)
(37,33,0)
(42,2,0)
(23,29,0)
(18,10,0)
(19,27,0)
(41,23,0)
(31,9,0)
(30,27,0)
(1,33,0)
(36,29,0)
(0,6,0)
(43,42,0)
(9,33,0)
(27,9,0)
(36,2,0)
(33,38,0)
(25,33,0)
(25,9,0)
(17,15,0)
(40,36,0)
(16,2,0)
(42,43,0)
(39,27,0)
(6,27,0)
(32,43,0)
(35,15,0)
(22,25,0)
(21,24,0)
(20,33,0)
(5,27,0)
(2,42,0)
(15,2,0)
(27,6,0)
(15,17,0)
(4,14,0)
(42,14,0)
(13,42,0)
(11,43,0)
(42,9,0)
(7,9,0)
(27,9,1)
(31,26,1)
(25,22,1)
(27,39,1)
(22,6,1)
(42,14,1)
(16,25,1)
(23,41,1)
(30,19,1)
(28,15,1)
(5,30,1)
(40,23,1)
(17,8,1)
(3,4,1)
(8,35,1)
(15,17,1)
(6,0,1)
(39,5,1)
(15,2,1)
(9,7,1)
(19,9,1)
(42,43,1)
(0,27,1)
(7,31,1)
(36,2,1)
(14,3,1)
(24,21,1)
(28,26,1)
(4,43,1)
(22,24,1)
(21,6,1)
(25,9,1)
(2,42,1)
(36,40,1)
(6,27,1)
(32,11,1)
(13,16,1)
(11,13,1)
(28,36,1)
(35,2,1)
(42,9,1)
(43,32,1)
(41,15,1)
(35,26,2)
(25,9,2)
(9,26,2)
(32,26,2)
(7,26,2)
(36,2,2)
(6,27,2)
(40,15,2)
(39,26,2)
(2,42,2)
(5,26,2)
(19,26,2)
(36,15,2)
(11,26,2)
(23,15,2)
(15,17,2)
(30,26,2)
(31,26,2)
(0,26,2)
(14,26,2)
(15,26,2)
(42,14,2)
(8,26,2)
(22,26,2)
(43,26,2)
(27,9,2)
(6,26,2)
(16,26,2)
(3,26,2)
(42,26,2)
(21,6,2)
(25,26,2)
(27,26,2)
(4,26,2)
(42,43,2)
(13,26,2)
(24,6,2)
(42,9,2)
(41,15,2)
(17,26,2)
(2,26,2)
(15,2,2)
-----------------------------------
(0,0)
(1,filename)
(2,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(3,S_IWRITE)
(4,S_IREAD)
(5,0)
(6,GetTempFileNameA(".", "bad", 0, filename)
(7,"")
(8,1)
(9,filename[MAX_PATH] = "")
(10,)
(11,O_RDWR)
(12,)
(13,filename)
(14,S_IREAD|S_IWRITE)
(15,fileDesc != -1)
(16,fileDesc)
(17,-1)
(18,if(globalTrue)
(19,".")
(20,fileDesc)
(21,1)
(22,filename)
(23,printLine("Temporary file was opened...now closing file")
(24,exit(1)
(25,printLine(filename)
(26,globalTrue)
(27,GetTempFileNameA(".", "bad", 0, filename)
(28,RET)
(29,)
(30,"bad")
(31,filename)
(32,O_CREAT)
(33,)
(34,if (GetTempFileNameA(".", "bad", 0, filename)
(35,fileDesc)
(36,CLOSE(fileDesc)
(37,if (fileDesc != -1)
(38,)
(39,filename)
(40,fileDesc)
(41,"Temporary file was opened...now closing file")
(42,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(43,O_RDWR|O_CREAT)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
