-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_console_41_bad()
{
    char * data;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    {
        /* Read input from the console */
        size_t dataLen = strlen(data);
        /* if there is room in data, read into it from the console */
        if (250-dataLen > 1)
        {
            /* POTENTIAL FLAW: Read data from the console */
            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)
            {
                /* The next few lines remove the carriage return from the string that is
                 * inserted by fgets() */
                dataLen = strlen(data);
                if (dataLen > 0 && data[dataLen-1] == '\n')
                {
                    data[dataLen-1] = '\0';
                }
            }
            else
            {
                printLine("fgets() failed");
                /* Restore NUL terminator if fgets fails */
                data[dataLen] = '\0';
            }
        }
    }
    CWE427_Uncontrolled_Search_Path_Element__char_console_41_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
38,39
40,41
40,42
41,42
41,43
42,43
42,44
44,45
47,48
48,49
48,50
48,51
49,50
49,51
50,51
50,52
50,53
50,54
51,52
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
62,63
63,64
63,65
65,66
67,68
69,70
71,72
71,73
72,73
73,74
73,75
74,75
76,77
76,78
77,78
79,80
81,82
81,83
82,83
82,84
83,84
83,85
84,85
87,88
87,89
88,89
88,90
89,90
91,92
91,93
92,93
96,97
97,98
98,99
98,100
99,100
99,101
100,101
102,103
102,104
103,104
107,108
107,109
108,109
109,110
109,111
110,111
113,114
114,115
114,116
115,116
115,117
116,117
118,119
121,122
122,123
122,124
123,124
125,126
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,31,33,37,39,43,45,46,52,55,57,60,61,64,66,68,70,75,78,80,85,86,90,93,94,95,101,104,105,106,111,112,117,119,120,124,126
-----computeFrom-----
22,23
22,24
41,42
41,43
42,43
42,44
49,50
49,51
53,54
53,55
63,64
63,65
73,74
73,75
82,83
82,84
83,84
83,85
87,88
87,89
91,92
91,93
98,99
98,100
102,103
102,104
114,115
114,116
-----guardedBy-----
45,119
55,101
66,104
90,101
93,104
-----guardedByNegation-----
55,117
66,119
-----lastLexicalUse-----
55,117
66,119
-----jump-----
55,117
66,119
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_console_41_bad(){    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }    CWE427_Uncontrolled_Search_Path_Element__char_console_41_badSink(data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_console_41_bad()
CWE427_Uncontrolled_Search_Path_Element__char_console_41_bad
{    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }    CWE427_Uncontrolled_Search_Path_Element__char_console_41_badSink(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
if (250-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }
if (fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }
fgets(data+dataLen, (int)(250-dataLen), stdin) != NULL
fgets(data+dataLen, (int)(250-dataLen), stdin)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
stdin
stdin
NULL
NULL
{                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }
dataLen = strlen(data);
dataLen = strlen(data)
dataLen
dataLen
strlen(data)
strlen
strlen
data
data
if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }
dataLen > 0 && data[dataLen-1] == '\n'
dataLen > 0
dataLen
dataLen
0
data[dataLen-1] == '\n'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\n'
{                    data[dataLen-1] = '\0';                }
data[dataLen-1] = '\0';
data[dataLen-1] = '\0'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\0'
{                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
CWE427_Uncontrolled_Search_Path_Element__char_console_41_badSink(data);
CWE427_Uncontrolled_Search_Path_Element__char_console_41_badSink(data)
CWE427_Uncontrolled_Search_Path_Element__char_console_41_badSink
CWE427_Uncontrolled_Search_Path_Element__char_console_41_badSink
data
data
-----joern-----
(1,10,0)
(37,54,0)
(50,41,0)
(69,60,0)
(59,32,0)
(41,43,0)
(9,19,0)
(65,48,0)
(32,16,0)
(19,50,0)
(18,63,0)
(53,51,0)
(11,41,0)
(0,61,0)
(32,49,0)
(66,52,0)
(55,43,0)
(36,4,0)
(25,0,0)
(3,43,0)
(17,38,0)
(33,47,0)
(7,44,0)
(30,68,0)
(63,65,0)
(55,20,0)
(49,40,0)
(19,20,0)
(47,48,0)
(14,4,0)
(0,14,0)
(24,36,0)
(64,4,0)
(22,63,0)
(26,4,0)
(41,50,0)
(38,49,0)
(50,19,0)
(34,55,0)
(63,14,0)
(43,44,0)
(58,36,0)
(49,38,0)
(40,4,0)
(5,54,0)
(67,14,0)
(57,65,0)
(10,51,0)
(64,14,0)
(8,55,0)
(60,43,0)
(12,4,0)
(10,28,0)
(20,14,0)
(54,14,0)
(0,66,0)
(20,19,0)
(27,51,0)
(56,70,0)
(23,20,0)
(28,54,0)
(42,41,0)
(16,32,0)
(63,49,0)
(51,49,0)
(13,40,0)
(15,14,0)
(35,49,0)
(2,32,0)
(54,28,0)
(54,49,0)
(62,16,0)
(21,64,0)
(43,60,0)
(39,40,0)
(70,28,0)
(28,70,0)
(10,1,0)
(14,36,0)
(38,14,0)
(6,61,0)
(29,66,0)
(31,28,0)
(60,14,0)
(61,0,0)
(45,61,0)
(61,43,0)
(28,10,0)
(20,55,0)
(51,10,0)
(70,28,1)
(38,17,1)
(21,16,1)
(61,43,1)
(55,43,1)
(58,24,1)
(28,54,1)
(18,22,1)
(23,41,1)
(43,60,1)
(36,58,1)
(37,16,1)
(34,23,1)
(2,49,1)
(62,32,1)
(50,41,1)
(61,45,1)
(25,50,1)
(14,36,1)
(16,32,1)
(49,38,1)
(21,66,1)
(56,28,1)
(60,14,1)
(31,10,1)
(60,69,1)
(21,50,1)
(41,43,1)
(32,49,1)
(16,62,1)
(17,35,1)
(6,25,1)
(54,14,1)
(8,34,1)
(65,57,1)
(54,5,1)
(63,14,1)
(42,43,1)
(20,14,1)
(32,59,1)
(63,18,1)
(21,65,1)
(59,2,1)
(69,3,1)
(5,37,1)
(51,53,1)
(22,47,1)
(0,61,1)
(54,49,1)
(33,70,1)
(67,15,1)
(46,64,1)
(27,54,1)
(38,14,1)
(47,33,1)
(63,49,1)
(50,19,1)
(28,10,1)
(53,27,1)
(15,36,1)
(28,31,1)
(20,55,1)
(35,14,1)
(29,0,1)
(10,1,1)
(66,29,1)
(70,56,1)
(14,67,1)
(10,51,1)
(64,21,1)
(45,6,1)
(55,8,1)
(9,20,1)
(51,49,1)
(19,20,1)
(19,9,1)
(41,11,1)
(0,14,1)
(57,63,1)
(11,42,1)
(3,70,1)
(64,14,1)
(27,16,2)
(5,16,2)
(19,20,2)
(37,16,2)
(3,70,2)
(22,70,2)
(38,14,2)
(25,50,2)
(50,19,2)
(57,70,2)
(18,70,2)
(63,14,2)
(63,49,2)
(66,50,2)
(60,14,2)
(0,14,2)
(51,49,2)
(54,16,2)
(63,70,2)
(20,55,2)
(19,41,2)
(50,70,2)
(51,16,2)
(16,32,2)
(65,70,2)
(54,14,2)
(11,70,2)
(61,43,2)
(0,61,2)
(41,43,2)
(45,50,2)
(64,14,2)
(6,50,2)
(10,1,2)
(70,28,2)
(0,50,2)
(23,41,2)
(54,49,2)
(28,10,2)
(41,70,2)
(33,70,2)
(47,70,2)
(61,50,2)
(42,70,2)
(29,50,2)
(60,70,2)
(8,41,2)
(10,16,2)
(31,16,2)
(50,41,2)
(28,54,2)
(32,49,2)
(55,41,2)
(49,38,2)
(69,70,2)
(70,16,2)
(34,41,2)
(20,14,2)
(43,60,2)
(20,41,2)
(10,51,2)
(56,16,2)
(55,43,2)
(28,16,2)
(9,41,2)
(53,16,2)
(14,36,2)
(43,70,2)
-----------------------------------
(0,data[dataLen-1])
(1,int)
(2,250)
(3,dataLen)
(4,)
(5,dataLen)
(6,dataLen)
(7,if (dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(8,1)
(9,\\\'\\\\n\\\')
(10,(int)
(11,0)
(12,data)
(13,if (250-dataLen > 1)
(14,data = dataBuffer)
(15,data)
(16,250-dataLen > 1)
(17,data)
(18,dataLen)
(19,data[dataLen-1] == \\\'\\\\n\\\')
(20,data[dataLen-1])
(21,data)
(22,data)
(23,data)
(24,dataBuffer)
(25,data)
(26,dataBuffer)
(27,250)
(28,fgets(data+dataLen, (int)
(29,\\\'\\\\0\\\')
(30,if (fgets(data+dataLen, (int)
(31,stdin)
(32,250-dataLen)
(33,"fgets()
(34,dataLen)
(35,dataLen)
(36,dataBuffer[250] = "PATH=")
(37,data)
(38,strlen(data)
(39,dataLen)
(40,)
(41,dataLen > 0)
(42,dataLen)
(43,dataLen = strlen(data)
(44,)
(45,1)
(46,RET)
(47,printLine("fgets()
(48,)
(49,dataLen = strlen(data)
(50,dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(51,250-dataLen)
(52,)
(53,dataLen)
(54,data+dataLen)
(55,dataLen-1)
(56,NULL)
(57,\\\'\\\\0\\\')
(58,"PATH=")
(59,dataLen)
(60,strlen(data)
(61,dataLen-1)
(62,1)
(63,data[dataLen])
(64,CWE427_Uncontrolled_Search_Path_Element__char_console_41_badSink(data)
(65,data[dataLen] = \\\'\\\\0\\\')
(66,data[dataLen-1] = \\\'\\\\0\\\')
(67,dataBuffer)
(68,)
(69,data)
(70,fgets(data+dataLen, (int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
