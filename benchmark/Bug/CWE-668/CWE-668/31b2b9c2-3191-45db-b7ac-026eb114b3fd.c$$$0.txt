-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_char_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    char * * dataPtr = (char * *)dataVoidPtr;
    /* dereference dataPtr into data */
    char * data = (*dataPtr);
    {
        HANDLE pHandle;
        char * username = "User";
        char * domain = "Domain";
        /* POTENTIAL FLAW: Attempt to login user with password from the source */
        if (LogonUserA(
                    username,
                    domain,
                    data,
                    LOGON32_LOGON_NETWORK,
                    LOGON32_PROVIDER_DEFAULT,
                    &pHandle) != 0)
        {
            printLine("User logged in successfully.");
            CloseHandle(pHandle);
        }
        else
        {
            printLine("Unable to login.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
14,18
18,19
19,20
19,21
20,21
20,22
22,23
22,24
25,26
27,28
28,29
28,30
30,31
30,32
30,33
33,34
34,35
35,36
36,37
38,39
38,40
38,41
38,42
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
53,54
54,55
54,56
56,57
56,58
56,59
59,60
61,62
61,63
61,64
62,63
62,64
63,64
63,65
63,66
63,67
63,68
63,69
63,70
64,65
66,67
68,69
70,71
72,73
74,75
76,77
77,78
80,81
80,82
81,82
82,83
82,84
83,84
86,87
87,88
87,89
88,89
90,91
92,93
93,94
94,95
94,96
95,96
-----nextToken-----
2,4,6,8,9,13,15,16,17,21,23,24,26,29,31,32,37,42,44,47,49,50,52,55,57,58,60,65,67,69,71,73,75,78,79,84,85,89,91,96,97
-----computeFrom-----
62,63
62,64
-----guardedBy-----
78,91
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_char_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    char * * dataPtr = (char * *)dataVoidPtr;    /* dereference dataPtr into data */    char * data = (*dataPtr);    {        HANDLE pHandle;        char * username = "User";        char * domain = "Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
void
CWE256_Plaintext_Storage_of_Password__w32_char_64b_badSink(void * dataVoidPtr)
CWE256_Plaintext_Storage_of_Password__w32_char_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    char * * dataPtr = (char * *)dataVoidPtr;    /* dereference dataPtr into data */    char * data = (*dataPtr);    {        HANDLE pHandle;        char * username = "User";        char * domain = "Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
char * * dataPtr = (char * *)dataVoidPtr;
char * * dataPtr = (char * *)dataVoidPtr;
char
* * dataPtr = (char * *)dataVoidPtr
*
*
dataPtr
= (char * *)dataVoidPtr
(char * *)dataVoidPtr
char * *
char
* *
*
*
dataVoidPtr
dataVoidPtr
char * data = (*dataPtr);
char * data = (*dataPtr);
char
* data = (*dataPtr)
*
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        HANDLE pHandle;        char * username = "User";        char * domain = "Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
char * username = "User";
char * username = "User";
char
* username = "User"
*
username
= "User"
"User"
char * domain = "Domain";
char * domain = "Domain";
char
* domain = "Domain"
*
domain
= "Domain"
"Domain"
if (LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }
LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0
LogonUserA(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle)
LogonUserA
LogonUserA
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{            printLine("User logged in successfully.");            CloseHandle(pHandle);        }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{            printLine("Unable to login.");        }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(10,30,0)
(15,32,0)
(13,38,0)
(4,11,0)
(24,36,0)
(35,1,0)
(22,1,0)
(2,1,0)
(23,24,0)
(16,11,0)
(24,38,0)
(0,1,0)
(8,11,0)
(7,4,0)
(4,18,0)
(14,4,0)
(39,9,0)
(26,5,0)
(39,17,0)
(37,10,0)
(31,4,0)
(25,7,0)
(39,19,0)
(29,6,0)
(33,4,0)
(41,19,0)
(21,32,0)
(28,4,0)
(1,38,0)
(12,38,0)
(3,4,0)
(36,24,0)
(5,30,0)
(19,38,0)
(40,36,0)
(4,24,0)
(36,19,0)
(42,39,0)
(18,4,0)
(6,34,0)
(4,7,0)
(20,18,0)
(11,1,0)
(32,1,0)
(4,32,0)
(19,39,0)
(9,39,0)
(15,24,1)
(3,33,1)
(23,19,1)
(37,5,1)
(18,4,1)
(27,6,1)
(28,14,1)
(26,18,1)
(4,24,1)
(39,9,1)
(11,16,1)
(16,8,1)
(42,41,1)
(36,19,1)
(14,31,1)
(5,26,1)
(36,40,1)
(21,15,1)
(4,11,1)
(40,23,1)
(32,21,1)
(25,3,1)
(6,29,1)
(20,4,1)
(27,10,1)
(29,18,1)
(24,36,1)
(39,42,1)
(18,20,1)
(39,17,1)
(8,32,1)
(31,11,1)
(4,7,1)
(10,37,1)
(19,39,1)
(33,28,1)
(7,25,1)
(4,32,1)
(37,18,2)
(4,11,2)
(36,19,2)
(19,39,2)
(6,18,2)
(10,18,2)
(4,24,2)
(29,18,2)
(4,32,2)
(39,9,2)
(24,36,2)
(18,4,2)
(4,7,2)
(39,17,2)
(26,18,2)
(5,18,2)
-----------------------------------
(0,pHandle)
(1,)
(2,if (LogonUserA(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(3,LOGON32_PROVIDER_DEFAULT)
(4,LogonUserA(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(5,printLine("User logged in successfully.")
(6,printLine("Unable to login.")
(7,&pHandle)
(8,domain)
(9,char * *)
(10,CloseHandle(pHandle)
(11,* domain = "Domain")
(12,data)
(13,dataPtr)
(14,domain)
(15,username)
(16,"Domain")
(17,void * dataVoidPtr)
(18,LogonUserA(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(19,* * dataPtr = (char * *)
(20,0)
(21,"User")
(22,domain)
(23,data)
(24,* data = (*dataPtr)
(25,pHandle)
(26,"User logged in successfully.")
(27,RET)
(28,data)
(29,"Unable to login.")
(30,)
(31,username)
(32,* username = "User")
(33,LOGON32_LOGON_NETWORK)
(34,)
(35,username)
(36,*dataPtr)
(37,pHandle)
(38,)
(39,(char * *)
(40,dataPtr)
(41,dataPtr)
(42,dataVoidPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
