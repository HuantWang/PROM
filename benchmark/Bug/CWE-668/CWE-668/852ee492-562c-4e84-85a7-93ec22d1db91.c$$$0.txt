-----label-----
1
-----code-----
char * CWE427_Uncontrolled_Search_Path_Element__char_file_22_badSource(char * data)
{
    if(CWE427_Uncontrolled_Search_Path_Element__char_file_22_badGlobal)
    {
        {
            /* Read input from a file */
            size_t dataLen = strlen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (250-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                    {
                        printLine("fgets() failed");
                        /* Restore NUL terminator if fgets fails */
                        data[dataLen] = '\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
13,14
15,16
16,17
16,18
16,19
17,18
18,19
18,20
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
31,32
33,34
33,35
36,37
36,38
37,38
37,39
38,39
38,40
40,41
43,44
43,45
44,45
45,46
45,47
46,47
48,49
48,50
48,51
49,50
51,52
54,55
54,56
55,56
55,57
56,57
58,59
60,61
60,62
61,62
61,63
62,63
62,64
63,64
63,65
63,66
63,67
64,65
66,67
66,68
67,68
69,70
71,72
71,73
72,73
72,74
75,76
76,77
76,78
78,79
80,81
82,83
84,85
84,86
85,86
86,87
86,88
87,88
90,91
91,92
91,93
92,93
92,94
93,94
95,96
98,99
99,100
99,101
100,101
102,103
104,105
105,106
-----nextToken-----
2,4,5,7,9,10,14,20,22,26,28,32,34,35,39,41,42,47,50,52,53,57,59,65,68,70,73,74,77,79,81,83,88,89,94,96,97,101,103,106
-----computeFrom-----
37,38
37,39
38,39
38,40
45,46
45,47
55,56
55,57
62,63
62,64
66,67
66,68
76,77
76,78
91,92
91,93
-----guardedBy-----
41,96
59,83
57,103
68,94
79,96
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE427_Uncontrolled_Search_Path_Element__char_file_22_badSource(char * data){    if(CWE427_Uncontrolled_Search_Path_Element__char_file_22_badGlobal)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    return data;}
char
* CWE427_Uncontrolled_Search_Path_Element__char_file_22_badSource(char * data)
*
CWE427_Uncontrolled_Search_Path_Element__char_file_22_badSource
char * data
char
* data
*
data
{    if(CWE427_Uncontrolled_Search_Path_Element__char_file_22_badGlobal)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    return data;}
if(CWE427_Uncontrolled_Search_Path_Element__char_file_22_badGlobal)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
CWE427_Uncontrolled_Search_Path_Element__char_file_22_badGlobal
CWE427_Uncontrolled_Search_Path_Element__char_file_22_badGlobal
{        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(250-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
return data;
data
data
-----joern-----
(30,16,0)
(19,26,0)
(20,6,0)
(25,19,0)
(21,6,0)
(52,30,0)
(13,40,0)
(4,47,0)
(44,26,0)
(24,47,0)
(37,15,0)
(37,51,0)
(0,53,0)
(50,20,0)
(21,45,0)
(19,6,0)
(10,41,0)
(53,0,0)
(47,53,0)
(41,37,0)
(42,19,0)
(26,46,0)
(39,51,0)
(12,14,0)
(42,53,0)
(54,27,0)
(20,26,0)
(33,17,0)
(27,2,0)
(46,11,0)
(44,22,0)
(42,37,0)
(3,21,0)
(29,45,0)
(51,37,0)
(7,2,0)
(23,40,0)
(21,26,0)
(28,42,0)
(45,16,0)
(5,19,0)
(31,37,0)
(22,44,0)
(49,26,0)
(14,42,0)
(48,46,0)
(26,20,0)
(27,6,0)
(19,42,0)
(35,27,0)
(9,22,0)
(53,47,0)
(36,44,0)
(40,37,0)
(47,26,0)
(43,15,0)
(1,21,0)
(53,42,0)
(41,17,0)
(42,14,0)
(18,44,0)
(32,46,0)
(38,46,0)
(34,51,0)
(22,9,1)
(14,42,1)
(24,19,1)
(14,12,1)
(37,51,1)
(26,20,1)
(54,27,1)
(31,22,1)
(35,22,1)
(23,13,1)
(41,10,1)
(19,26,1)
(29,21,1)
(44,36,1)
(5,40,1)
(42,19,1)
(10,45,1)
(42,28,1)
(36,18,1)
(19,25,1)
(35,8,1)
(49,8,1)
(51,34,1)
(53,47,1)
(21,6,1)
(9,44,1)
(40,23,1)
(1,30,1)
(19,6,1)
(50,49,1)
(4,24,1)
(25,5,1)
(20,50,1)
(27,6,1)
(21,3,1)
(21,26,1)
(13,37,1)
(39,31,1)
(35,41,1)
(3,1,1)
(47,26,1)
(42,37,1)
(47,4,1)
(10,14,1)
(18,26,1)
(44,26,1)
(28,53,1)
(34,39,1)
(45,29,1)
(30,52,1)
(27,35,1)
(35,40,1)
(52,14,1)
(20,6,1)
(12,42,1)
(22,44,1)
(41,37,1)
(40,37,1)
(42,53,1)
(53,0,1)
(23,22,2)
(25,40,2)
(20,8,2)
(28,40,2)
(44,8,2)
(21,26,2)
(22,8,2)
(19,6,2)
(20,6,2)
(27,6,2)
(14,42,2)
(3,14,2)
(26,8,2)
(10,40,2)
(31,22,2)
(41,37,2)
(5,40,2)
(29,14,2)
(45,14,2)
(37,22,2)
(21,6,2)
(14,40,2)
(53,0,2)
(51,22,2)
(12,40,2)
(44,26,2)
(41,40,2)
(53,47,2)
(42,19,2)
(36,8,2)
(52,14,2)
(19,40,2)
(39,22,2)
(24,40,2)
(40,22,2)
(18,8,2)
(30,14,2)
(34,22,2)
(40,37,2)
(1,14,2)
(9,8,2)
(42,40,2)
(26,20,2)
(47,26,2)
(4,40,2)
(54,27,2)
(37,51,2)
(22,44,2)
(47,40,2)
(50,8,2)
(21,14,2)
(42,37,2)
(49,8,2)
(42,53,2)
(19,26,2)
(13,22,2)
(53,40,2)
-----------------------------------
(0,int)
(1,data)
(2,)
(3,dataLen)
(4,dataLen)
(5,data)
(6,char * data)
(7,if(CWE427_Uncontrolled_Search_Path_Element__char_file_22_badGlobal)
(8,CWE427_Uncontrolled_Search_Path_Element__char_file_22_badGlobal)
(9,1)
(10,pFile)
(11,)
(12,NULL)
(13,pFile)
(14,fgets(data+dataLen, (int)
(15,)
(16,)
(17,)
(18,250)
(19,data+dataLen)
(20,strlen(data)
(21,data[dataLen])
(22,250-dataLen > 1)
(23,NULL)
(24,250)
(25,dataLen)
(26,dataLen = strlen(data)
(27,return data;)
(28,pFile)
(29,\\\'\\\\0\\\')
(30,printLine("fgets()
(31,pFile)
(32,dataLen)
(33,if (fgets(data+dataLen, (int)
(34,"r")
(35,data)
(36,dataLen)
(37,pFile = fopen(FILENAME, "r")
(38,pFile)
(39,FILENAME)
(40,pFile != NULL)
(41,fclose(pFile)
(42,fgets(data+dataLen, (int)
(43,if (pFile != NULL)
(44,250-dataLen)
(45,data[dataLen] = \\\'\\\\0\\\')
(46,)
(47,250-dataLen)
(48,if (250-dataLen > 1)
(49,dataLen)
(50,data)
(51,fopen(FILENAME, "r")
(52,"fgets()
(53,(int)
(54,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
