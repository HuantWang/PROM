-----label-----
1
-----code-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_15_bad()
{
    switch(6)
    {
    case 6:
    {
        wchar_t filename[MAX_PATH] = L"";
        int fileDesc;
        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,
        * leading to an inescapable race condition when we try to open it again. */
        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)
        {
            exit(1);
        }
        printWLine(filename);
        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */
        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
        if (fileDesc != -1)
        {
            printLine("Temporary file was opened...now closing file");
            CLOSE(fileDesc);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
8,9
8,10
8,11
8,12
8,13
8,14
9,10
11,12
11,13
11,14
11,15
11,16
11,17
12,13
13,14
13,15
15,16
15,17
15,18
17,18
18,19
20,21
22,23
23,24
23,25
25,26
27,28
27,29
28,29
28,30
29,30
29,31
29,32
29,33
29,34
30,31
35,36
38,39
39,40
40,41
40,42
41,42
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
52,53
54,55
54,56
54,57
54,58
55,56
57,58
59,60
59,61
60,61
62,63
64,65
64,66
65,66
67,68
69,70
69,71
70,71
70,72
71,72
73,74
75,76
75,77
76,77
77,78
77,79
78,79
81,82
82,83
82,84
83,84
85,86
89,90
90,91
90,92
91,92
-----nextToken-----
2,4,7,10,14,16,19,21,24,26,31,32,33,34,36,37,42,43,47,49,53,56,58,61,63,66,68,72,74,79,80,84,86,87,88,92,93,94
-----computeFrom-----
28,29
28,30
51,52
51,53
59,60
59,61
64,65
64,66
70,71
70,72
-----guardedBy-----
72,86
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;
-----ast_node-----
void CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_15_bad(){    switch(6)    {    case 6:    {        wchar_t filename[MAX_PATH] = L"";        int fileDesc;        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,        * leading to an inescapable race condition when we try to open it again. */        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }        printWLine(filename);        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
void
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_15_bad()
CWE377_Insecure_Temporary_File__wchar_t_w32GetTempFileName_15_bad
{    switch(6)    {    case 6:    {        wchar_t filename[MAX_PATH] = L"";        int fileDesc;        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,        * leading to an inescapable race condition when we try to open it again. */        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }        printWLine(filename);        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
switch(6)    {    case 6:    {        wchar_t filename[MAX_PATH] = L"";        int fileDesc;        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,        * leading to an inescapable race condition when we try to open it again. */        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }        printWLine(filename);        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        wchar_t filename[MAX_PATH] = L"";        int fileDesc;        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,        * leading to an inescapable race condition when we try to open it again. */        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }        printWLine(filename);        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        wchar_t filename[MAX_PATH] = L"";        int fileDesc;        /* FLAW: Passing 0 in for uUnique tells GetTempFileName to create and then close the file,        * leading to an inescapable race condition when we try to open it again. */        if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }        printWLine(filename);        /* FLAW: Open a temporary file using open() and flags that do not prevent a race condition */        fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }    }
wchar_t filename[MAX_PATH] = L"";
wchar_t filename[MAX_PATH] = L"";
wchar_t
filename[MAX_PATH] = L""
filename
[MAX_PATH]
MAX_PATH
MAX_PATH
= L""
L""
int fileDesc;
int fileDesc;
int
fileDesc
fileDesc
if (GetTempFileNameW(L".", L"bad", 0, filename) == 0)        {            exit(1);        }
GetTempFileNameW(L".", L"bad", 0, filename) == 0
GetTempFileNameW(L".", L"bad", 0, filename)
GetTempFileNameW
GetTempFileNameW
L"."
L"bad"
0
filename
filename
0
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
printWLine(filename);
printWLine(filename)
printWLine
printWLine
filename
filename
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
fileDesc
fileDesc
OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
filename
filename
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (fileDesc != -1)        {            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }
fileDesc != -1
fileDesc
fileDesc
-1
1
{            printLine("Temporary file was opened...now closing file");            CLOSE(fileDesc);        }
printLine("Temporary file was opened...now closing file");
printLine("Temporary file was opened...now closing file")
printLine
printLine
"Temporary file was opened...now closing file"
CLOSE(fileDesc);
CLOSE(fileDesc)
CLOSE
CLOSE
fileDesc
fileDesc
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
-----joern-----
(11,26,0)
(18,25,0)
(35,18,0)
(6,25,0)
(0,21,0)
(36,26,0)
(20,2,0)
(29,22,0)
(27,18,0)
(10,31,0)
(15,25,0)
(13,18,0)
(24,3,0)
(12,22,0)
(35,26,0)
(3,22,0)
(8,35,0)
(4,2,0)
(4,18,0)
(19,20,0)
(33,4,0)
(17,22,0)
(26,35,0)
(16,1,0)
(34,10,0)
(35,37,0)
(32,25,0)
(38,27,0)
(18,35,0)
(27,21,0)
(31,25,0)
(25,22,0)
(37,35,0)
(14,37,0)
(23,22,0)
(21,27,0)
(5,25,0)
(9,37,0)
(7,6,0)
(3,24,1)
(13,6,1)
(12,3,1)
(29,27,1)
(26,11,1)
(28,12,1)
(21,0,1)
(4,18,1)
(29,4,1)
(14,9,1)
(19,27,1)
(33,20,1)
(38,18,1)
(6,7,1)
(4,33,1)
(24,30,1)
(7,10,1)
(20,19,1)
(34,32,1)
(11,36,1)
(9,26,1)
(28,29,1)
(36,8,1)
(10,34,1)
(27,18,1)
(37,14,1)
(35,26,1)
(27,21,1)
(18,35,1)
(32,30,1)
(8,13,1)
(35,37,1)
(0,38,1)
(24,30,2)
(26,30,2)
(3,30,2)
(35,37,2)
(37,30,2)
(19,27,2)
(11,30,2)
(35,26,2)
(38,30,2)
(10,30,2)
(35,30,2)
(32,30,2)
(20,27,2)
(12,30,2)
(27,18,2)
(21,30,2)
(4,27,2)
(18,30,2)
(18,35,2)
(14,30,2)
(34,30,2)
(27,30,2)
(33,27,2)
(0,30,2)
(9,30,2)
(4,18,2)
(6,30,2)
(27,21,2)
(7,30,2)
(8,30,2)
(36,30,2)
(13,30,2)
(29,30,2)
-----------------------------------
(0,1)
(1,)
(2,)
(3,printLine("Benign, fixed string")
(4,CLOSE(fileDesc)
(5,fileDesc)
(6,printWLine(filename)
(7,filename)
(8,filename)
(9,S_IREAD)
(10,exit(1)
(11,O_CREAT)
(12,break;)
(13,fileDesc)
(14,S_IWRITE)
(15,if (fileDesc != -1)
(16,switch(6)
(17,default:)
(18,fileDesc = OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(19,"Temporary file was opened...now closing file")
(20,printLine("Temporary file was opened...now closing file")
(21,-1)
(22,)
(23,case 6:)
(24,"Benign, fixed string")
(25,)
(26,O_RDWR|O_CREAT)
(27,fileDesc != -1)
(28,RET)
(29,break;)
(30,6)
(31,)
(32,"")
(33,fileDesc)
(34,1)
(35,OPEN(filename, O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(36,O_RDWR)
(37,S_IREAD|S_IWRITE)
(38,fileDesc)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
