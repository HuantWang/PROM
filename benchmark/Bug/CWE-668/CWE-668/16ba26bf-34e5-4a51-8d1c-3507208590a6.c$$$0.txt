-----label-----
1
-----code-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
    /* dereference dataPtr into data */
    wchar_t * data = (*dataPtr);
    {
        HANDLE pHandle;
        wchar_t * username = L"User";
        wchar_t * domain = L"Domain";
        /* POTENTIAL FLAW: Attempt to login user with password from the source */
        if (LogonUserW(
                    username,
                    domain,
                    data,
                    LOGON32_LOGON_NETWORK,
                    LOGON32_PROVIDER_DEFAULT,
                    &pHandle) != 0)
        {
            printLine("User logged in successfully.");
            CloseHandle(pHandle);
        }
        else
        {
            printLine("Unable to login.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
14,18
18,19
19,20
19,21
20,21
20,22
22,23
22,24
25,26
27,28
28,29
28,30
30,31
30,32
30,33
33,34
34,35
35,36
36,37
38,39
38,40
38,41
38,42
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
53,54
54,55
54,56
56,57
56,58
56,59
59,60
61,62
61,63
61,64
62,63
62,64
63,64
63,65
63,66
63,67
63,68
63,69
63,70
64,65
66,67
68,69
70,71
72,73
74,75
76,77
77,78
80,81
80,82
81,82
82,83
82,84
83,84
86,87
87,88
87,89
88,89
90,91
92,93
93,94
94,95
94,96
95,96
-----nextToken-----
2,4,6,8,9,13,15,16,17,21,23,24,26,29,31,32,37,42,44,47,49,50,52,55,57,58,60,65,67,69,71,73,75,78,79,84,85,89,91,96,97
-----computeFrom-----
62,63
62,64
-----guardedBy-----
78,91
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE256_Plaintext_Storage_of_Password__w32_wchar_t_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;    /* dereference dataPtr into data */    wchar_t * data = (*dataPtr);    {        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
void
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_64b_badSink(void * dataVoidPtr)
CWE256_Plaintext_Storage_of_Password__w32_wchar_t_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;    /* dereference dataPtr into data */    wchar_t * data = (*dataPtr);    {        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }}
wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
wchar_t
* * dataPtr = (wchar_t * *)dataVoidPtr
*
*
dataPtr
= (wchar_t * *)dataVoidPtr
(wchar_t * *)dataVoidPtr
wchar_t * *
wchar_t
* *
*
*
dataVoidPtr
dataVoidPtr
wchar_t * data = (*dataPtr);
wchar_t * data = (*dataPtr);
wchar_t
* data = (*dataPtr)
*
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        HANDLE pHandle;        wchar_t * username = L"User";        wchar_t * domain = L"Domain";        /* POTENTIAL FLAW: Attempt to login user with password from the source */        if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }    }
HANDLE pHandle;
HANDLE pHandle;
HANDLE
HANDLE
pHandle
pHandle
wchar_t * username = L"User";
wchar_t * username = L"User";
wchar_t
* username = L"User"
*
username
= L"User"
L"User"
wchar_t * domain = L"Domain";
wchar_t * domain = L"Domain";
wchar_t
* domain = L"Domain"
*
domain
= L"Domain"
L"Domain"
if (LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0)        {            printLine("User logged in successfully.");            CloseHandle(pHandle);        }        else        {            printLine("Unable to login.");        }
LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle) != 0
LogonUserW(                    username,                    domain,                    data,                    LOGON32_LOGON_NETWORK,                    LOGON32_PROVIDER_DEFAULT,                    &pHandle)
LogonUserW
LogonUserW
username
username
domain
domain
data
data
LOGON32_LOGON_NETWORK
LOGON32_LOGON_NETWORK
LOGON32_PROVIDER_DEFAULT
LOGON32_PROVIDER_DEFAULT
&pHandle
pHandle
pHandle
0
{            printLine("User logged in successfully.");            CloseHandle(pHandle);        }
printLine("User logged in successfully.");
printLine("User logged in successfully.")
printLine
printLine
"User logged in successfully."
CloseHandle(pHandle);
CloseHandle(pHandle)
CloseHandle
CloseHandle
pHandle
pHandle
{            printLine("Unable to login.");        }
printLine("Unable to login.");
printLine("Unable to login.")
printLine
printLine
"Unable to login."
-----joern-----
(27,14,0)
(3,8,0)
(25,27,0)
(23,19,0)
(0,19,0)
(20,23,0)
(28,34,0)
(30,23,0)
(35,7,0)
(23,7,0)
(26,10,0)
(24,23,0)
(16,15,0)
(18,36,0)
(34,3,0)
(15,5,0)
(22,13,0)
(9,8,0)
(11,13,0)
(13,8,0)
(12,23,0)
(5,8,0)
(5,15,0)
(36,14,0)
(29,13,0)
(10,33,0)
(34,17,0)
(3,34,0)
(21,3,0)
(23,5,0)
(2,34,0)
(32,8,0)
(7,23,0)
(15,3,0)
(19,23,0)
(1,13,0)
(6,5,0)
(34,28,0)
(31,23,0)
(12,20,1)
(15,3,1)
(29,22,1)
(19,0,1)
(15,16,1)
(3,34,1)
(4,10,1)
(0,23,1)
(19,23,1)
(34,17,1)
(24,12,1)
(7,35,1)
(4,27,1)
(23,7,1)
(22,5,1)
(10,26,1)
(26,19,1)
(16,6,1)
(34,28,1)
(5,15,1)
(23,5,1)
(31,30,1)
(27,25,1)
(35,24,1)
(2,21,1)
(20,31,1)
(6,3,1)
(36,18,1)
(34,2,1)
(25,36,1)
(30,29,1)
(18,19,1)
(27,19,2)
(18,19,2)
(10,19,2)
(19,23,2)
(23,7,2)
(15,3,2)
(3,34,2)
(25,19,2)
(36,19,2)
(26,19,2)
(34,28,2)
(5,15,2)
(34,17,2)
(23,5,2)
-----------------------------------
(0,0)
(1,if (LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(2,dataVoidPtr)
(3,* * dataPtr = (wchar_t * *)
(4,RET)
(5,* data = (*dataPtr)
(6,data)
(7,&pHandle)
(8,)
(9,data)
(10,printLine("Unable to login.")
(11,pHandle)
(12,LOGON32_LOGON_NETWORK)
(13,)
(14,)
(15,*dataPtr)
(16,dataPtr)
(17,void * dataVoidPtr)
(18,"User logged in successfully.")
(19,LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(20,data)
(21,dataPtr)
(22,"User")
(23,LogonUserW(\\\\n                    username,\\\\n                    domain,\\\\n                    data,\\\\n                    LOGON32_LOGON_NETWORK,\\\\n                    LOGON32_PROVIDER_DEFAULT,\\\\n                    &pHandle)
(24,LOGON32_PROVIDER_DEFAULT)
(25,pHandle)
(26,"Unable to login.")
(27,CloseHandle(pHandle)
(28,wchar_t * *)
(29,"Domain")
(30,username)
(31,domain)
(32,dataPtr)
(33,)
(34,(wchar_t * *)
(35,pHandle)
(36,printLine("User logged in successfully.")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
