-----label-----
1
-----code-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_63_bad()
{
    char * data;
    char dataBuffer[250] = "PATH=";
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (250-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE427_Uncontrolled_Search_Path_Element__char_file_63b_badSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
28,29
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
38,39
40,41
41,42
41,43
42,43
44,45
44,46
47,48
47,49
48,49
48,50
49,50
49,51
51,52
54,55
54,56
55,56
56,57
56,58
57,58
59,60
59,61
59,62
60,61
62,63
65,66
65,67
66,67
66,68
67,68
69,70
71,72
71,73
72,73
72,74
73,74
73,75
74,75
74,76
74,77
74,78
75,76
77,78
77,79
78,79
80,81
82,83
82,84
83,84
83,85
86,87
87,88
87,89
89,90
91,92
93,94
95,96
95,97
96,97
97,98
97,99
98,99
101,102
102,103
102,104
103,104
103,105
104,105
106,107
109,110
110,111
110,112
111,112
113,114
115,116
116,117
116,118
117,118
119,120
120,121
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,31,33,37,39,43,45,46,50,52,53,58,61,63,64,68,70,76,79,81,84,85,88,90,92,94,99,100,105,107,108,112,114,118,121
-----computeFrom-----
22,23
22,24
48,49
48,50
49,50
49,51
56,57
56,58
66,67
66,68
73,74
73,75
77,78
77,79
87,88
87,89
102,103
102,104
-----guardedBy-----
52,107
70,94
68,114
79,105
90,107
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
void CWE427_Uncontrolled_Search_Path_Element__char_file_63_bad(){    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE427_Uncontrolled_Search_Path_Element__char_file_63b_badSink(&data);}
void
CWE427_Uncontrolled_Search_Path_Element__char_file_63_bad()
CWE427_Uncontrolled_Search_Path_Element__char_file_63_bad
{    char * data;    char dataBuffer[250] = "PATH=";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE427_Uncontrolled_Search_Path_Element__char_file_63b_badSink(&data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[250] = "PATH=";
char dataBuffer[250] = "PATH=";
char
dataBuffer[250] = "PATH="
dataBuffer
[250]
250
= "PATH="
"PATH="
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (250-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
250-dataLen > 1
250-dataLen
250
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(250-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(250-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(250-dataLen)
int
int

(250-dataLen)
250-dataLen
250
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE427_Uncontrolled_Search_Path_Element__char_file_63b_badSink(&data);
CWE427_Uncontrolled_Search_Path_Element__char_file_63b_badSink(&data)
CWE427_Uncontrolled_Search_Path_Element__char_file_63b_badSink
CWE427_Uncontrolled_Search_Path_Element__char_file_63b_badSink
&data
data
data
-----joern-----
(59,49,0)
(38,44,0)
(21,14,0)
(33,10,0)
(27,38,0)
(26,3,0)
(12,14,0)
(51,7,0)
(47,44,0)
(28,49,0)
(46,14,0)
(16,58,0)
(57,5,0)
(42,9,0)
(48,9,0)
(14,49,0)
(17,38,0)
(3,1,0)
(43,55,0)
(32,58,0)
(34,27,0)
(42,21,0)
(50,59,0)
(37,5,0)
(55,10,0)
(5,14,0)
(22,59,0)
(31,44,0)
(21,42,0)
(54,33,0)
(1,38,0)
(45,27,0)
(53,23,0)
(35,1,0)
(58,32,0)
(2,8,0)
(41,10,0)
(37,49,0)
(42,10,0)
(20,44,0)
(25,42,0)
(40,41,0)
(7,24,0)
(58,38,0)
(21,38,0)
(46,38,0)
(15,14,0)
(29,21,0)
(10,41,0)
(4,32,0)
(0,56,0)
(44,49,0)
(3,26,0)
(36,21,0)
(11,46,0)
(13,33,0)
(42,3,0)
(5,37,0)
(27,14,0)
(27,56,0)
(39,1,0)
(55,8,0)
(30,41,0)
(3,42,0)
(1,3,0)
(18,58,0)
(6,10,0)
(38,46,0)
(9,42,0)
(56,24,0)
(10,23,0)
(19,49,0)
(14,59,0)
(48,42,1)
(35,39,1)
(27,45,1)
(55,43,1)
(14,12,1)
(42,21,1)
(9,42,1)
(27,38,1)
(4,58,1)
(25,3,1)
(34,7,1)
(43,56,1)
(42,10,1)
(3,1,1)
(17,14,1)
(33,10,1)
(40,6,1)
(54,13,1)
(21,14,1)
(57,55,1)
(1,35,1)
(30,40,1)
(43,9,1)
(32,4,1)
(39,21,1)
(0,27,1)
(37,5,1)
(5,57,1)
(9,48,1)
(7,51,1)
(16,38,1)
(18,16,1)
(29,36,1)
(56,0,1)
(58,38,1)
(33,54,1)
(6,32,1)
(46,14,1)
(14,59,1)
(58,18,1)
(38,46,1)
(11,17,1)
(46,11,1)
(12,15,1)
(42,25,1)
(10,41,1)
(57,33,1)
(45,34,1)
(51,9,1)
(42,3,1)
(3,26,1)
(27,14,1)
(36,33,1)
(21,29,1)
(52,37,1)
(5,14,1)
(1,38,1)
(55,10,1)
(21,38,1)
(59,22,1)
(32,58,1)
(57,32,1)
(13,10,1)
(22,50,1)
(15,59,1)
(41,30,1)
(42,3,2)
(41,32,2)
(58,38,2)
(21,38,2)
(33,32,2)
(3,1,2)
(36,33,2)
(25,33,2)
(10,41,2)
(55,10,2)
(1,38,2)
(38,46,2)
(14,59,2)
(34,9,2)
(40,32,2)
(13,32,2)
(27,9,2)
(51,9,2)
(10,32,2)
(35,33,2)
(56,9,2)
(42,10,2)
(3,26,2)
(32,58,2)
(42,33,2)
(7,9,2)
(30,32,2)
(6,32,2)
(46,14,2)
(33,10,2)
(21,33,2)
(21,14,2)
(0,9,2)
(43,33,2)
(9,33,2)
(45,9,2)
(37,5,2)
(5,14,2)
(3,33,2)
(27,38,2)
(29,33,2)
(9,42,2)
(1,33,2)
(48,33,2)
(55,33,2)
(42,21,2)
(54,32,2)
(27,14,2)
(39,33,2)
-----------------------------------
(0,\\\'\\\\0\\\')
(1,250-dataLen)
(2,if (fgets(data+dataLen, (int)
(3,(int)
(4,1)
(5,&data)
(6,pFile)
(7,printLine("fgets()
(8,)
(9,fgets(data+dataLen, (int)
(10,pFile = fopen(FILENAME, "r")
(11,data)
(12,dataBuffer)
(13,pFile)
(14,data = dataBuffer)
(15,data)
(16,250)
(17,dataLen)
(18,dataLen)
(19,dataBuffer)
(20,dataLen)
(21,data+dataLen)
(22,"PATH=")
(23,)
(24,)
(25,pFile)
(26,int)
(27,data[dataLen])
(28,data)
(29,dataLen)
(30,"r")
(31,pFile)
(32,250-dataLen > 1)
(33,pFile != NULL)
(34,data)
(35,dataLen)
(36,data)
(37,CWE427_Uncontrolled_Search_Path_Element__char_file_63b_badSink(&data)
(38,dataLen = strlen(data)
(39,250)
(40,FILENAME)
(41,fopen(FILENAME, "r")
(42,fgets(data+dataLen, (int)
(43,pFile)
(44,)
(45,dataLen)
(46,strlen(data)
(47,if (250-dataLen > 1)
(48,NULL)
(49,)
(50,dataBuffer)
(51,"fgets()
(52,RET)
(53,if (pFile != NULL)
(54,NULL)
(55,fclose(pFile)
(56,data[dataLen] = \\\'\\\\0\\\')
(57,data)
(58,250-dataLen)
(59,dataBuffer[250] = "PATH=")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
