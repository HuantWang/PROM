-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_41_bad()
{
    int * data;
    data = NULL;
    /* FLAW: Allocate memory without using sizeof(int) */
    data = (int *)malloc(10);
    if (data == NULL) {exit(-1);}
    CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_41_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
31,32
31,33
32,33
32,34
33,34
35,36
37,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,30,34,36,41,43,47,49
-----computeFrom-----
13,14
13,15
19,20
19,21
32,33
32,34
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_41_bad(){    int * data;    data = NULL;    /* FLAW: Allocate memory without using sizeof(int) */    data = (int *)malloc(10);    if (data == NULL) {exit(-1);}    CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_41_badSink(data);}
void
CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_41_bad()
CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_41_bad
{    int * data;    data = NULL;    /* FLAW: Allocate memory without using sizeof(int) */    data = (int *)malloc(10);    if (data == NULL) {exit(-1);}    CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_41_badSink(data);}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)malloc(10);
data = (int *)malloc(10)
data
data
(int *)malloc(10)
int *
int
*
*
malloc(10)
malloc
malloc
10
if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_41_badSink(data);
CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_41_badSink(data)
CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_41_badSink
CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_41_badSink
data
data
-----joern-----
(6,16,0)
(18,20,0)
(5,1,0)
(11,19,0)
(1,20,0)
(9,4,0)
(12,20,0)
(1,21,0)
(21,8,0)
(13,4,0)
(15,5,0)
(3,10,0)
(21,17,0)
(5,20,0)
(16,3,0)
(7,8,0)
(14,1,0)
(17,21,0)
(0,19,0)
(21,1,0)
(3,16,0)
(19,1,0)
(4,20,0)
(8,21,0)
(5,15,1)
(6,19,1)
(19,0,1)
(19,1,1)
(4,9,1)
(7,14,1)
(1,21,1)
(21,17,1)
(11,1,1)
(21,8,1)
(15,3,1)
(16,6,1)
(3,16,1)
(8,7,1)
(2,5,1)
(14,4,1)
(0,11,1)
(9,13,1)
(15,19,1)
(5,1,1)
(6,19,2)
(16,19,2)
(3,16,2)
(21,8,2)
(19,1,2)
(5,1,2)
(3,19,2)
(21,17,2)
(1,21,2)
-----------------------------------
(0,NULL)
(1,data = (int *)
(2,RET)
(3,exit(-1)
(4,data = NULL)
(5,CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_41_badSink(data)
(6,1)
(7,10)
(8,malloc(10)
(9,NULL)
(10,)
(11,data)
(12,data)
(13,data)
(14,data)
(15,data)
(16,-1)
(17,int *)
(18,if (data == NULL)
(19,data == NULL)
(20,)
(21,(int *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^