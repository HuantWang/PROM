-----label-----
1
-----code-----
void CWE127_Buffer_Underread__malloc_wchar_t_ncpy_11_bad()
{
    wchar_t * data;
    data = NULL;
    if(globalReturnsTrue())
    {
        {
            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (dataBuffer == NULL) {exit(-1);}
            wmemset(dataBuffer, L'A', 100-1);
            dataBuffer[100-1] = L'\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        wchar_t dest[100];
        wmemset(dest, L'C', 100-1); /* fill with 'C's */
        dest[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */
        wcsncpy(dest, data, wcslen(dest));
        /* Ensure null termination */
        dest[100-1] = L'\0';
        printWLine(dest);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
20,21
22,23
23,24
23,25
23,26
23,27
23,28
24,25
25,26
25,27
27,28
27,29
27,30
30,31
31,32
31,33
32,33
32,34
34,35
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
59,62
59,63
60,61
62,63
65,66
65,67
68,69
69,70
69,71
70,71
70,72
71,72
73,74
73,75
77,78
78,79
78,80
79,80
81,82
81,83
82,83
85,86
85,87
85,88
85,89
85,90
85,91
86,87
87,88
87,89
89,90
89,91
91,92
93,94
94,95
94,96
94,97
94,98
95,96
97,98
100,101
100,102
103,104
104,105
104,106
105,106
105,107
106,107
108,109
108,110
112,113
113,114
113,115
113,116
113,117
114,115
116,117
118,119
120,121
120,122
121,122
123,124
125,126
126,127
126,128
127,128
127,129
128,129
130,131
130,132
134,135
135,136
135,137
136,137
138,139
-----nextToken-----
2,4,8,10,11,15,17,21,26,28,29,33,35,38,40,43,44,48,50,55,57,61,63,64,66,67,72,74,75,76,80,83,84,88,90,92,96,98,99,101,102,107,109,110,111,115,117,119,122,124,129,131,132,133,137,139
-----computeFrom-----
13,14
13,15
39,40
39,41
46,47
46,48
65,66
65,67
69,70
69,71
73,74
73,75
78,79
78,80
81,82
81,83
100,101
100,102
104,105
104,106
108,109
108,110
126,127
126,128
130,131
130,132
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE127_Buffer_Underread__malloc_wchar_t_ncpy_11_bad(){    wchar_t * data;    data = NULL;    if(globalReturnsTrue())    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        wchar_t dest[100];        wmemset(dest, L'C', 100-1); /* fill with 'C's */        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        wcsncpy(dest, data, wcslen(dest));        /* Ensure null termination */        dest[100-1] = L'\0';        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE127_Buffer_Underread__malloc_wchar_t_ncpy_11_bad()
CWE127_Buffer_Underread__malloc_wchar_t_ncpy_11_bad
{    wchar_t * data;    data = NULL;    if(globalReturnsTrue())    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        wchar_t dest[100];        wmemset(dest, L'C', 100-1); /* fill with 'C's */        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        wcsncpy(dest, data, wcslen(dest));        /* Ensure null termination */        dest[100-1] = L'\0';        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(globalReturnsTrue())    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBuffer, L'A', 100-1);
wmemset(dataBuffer, L'A', 100-1)
wmemset
wmemset
dataBuffer
dataBuffer
L'A'
100-1
100
1
dataBuffer[100-1] = L'\0';
dataBuffer[100-1] = L'\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
L'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        wchar_t dest[100];        wmemset(dest, L'C', 100-1); /* fill with 'C's */        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        wcsncpy(dest, data, wcslen(dest));        /* Ensure null termination */        dest[100-1] = L'\0';        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
wchar_t dest[100];
wchar_t dest[100];
wchar_t
dest[100]
dest
[100]
100
wmemset(dest, L'C', 100-1);
wmemset(dest, L'C', 100-1)
wmemset
wmemset
dest
dest
L'C'
100-1
100
1
dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
wcsncpy(dest, data, wcslen(dest));
wcsncpy(dest, data, wcslen(dest))
wcsncpy
wcsncpy
dest
dest
data
data
wcslen(dest)
wcslen
wcslen
dest
dest
dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
printWLine(dest);
printWLine(dest)
printWLine
printWLine
dest
dest
-----joern-----
(27,8,0)
(18,8,0)
(33,35,0)
(41,26,0)
(28,31,0)
(1,13,0)
(8,9,0)
(38,35,0)
(36,11,0)
(17,8,0)
(24,44,0)
(1,31,0)
(20,2,0)
(8,1,0)
(7,34,0)
(11,37,0)
(32,1,0)
(14,44,0)
(3,26,0)
(33,12,0)
(35,31,0)
(6,2,0)
(9,2,0)
(37,11,0)
(30,9,0)
(10,13,0)
(43,31,0)
(31,5,0)
(42,13,0)
(37,22,0)
(34,35,0)
(12,33,0)
(33,3,0)
(40,34,0)
(8,44,0)
(0,44,0)
(8,17,0)
(4,44,0)
(21,17,0)
(39,26,0)
(26,41,0)
(16,31,0)
(35,33,0)
(19,0,0)
(23,41,0)
(13,35,0)
(3,33,0)
(45,9,0)
(26,3,0)
(44,2,0)
(13,1,0)
(3,26,1)
(21,27,1)
(7,35,1)
(28,37,1)
(15,0,1)
(14,8,1)
(19,14,1)
(38,25,1)
(36,34,1)
(17,21,1)
(26,41,1)
(34,35,1)
(9,30,1)
(37,11,1)
(0,19,1)
(11,36,1)
(18,24,1)
(42,10,1)
(8,17,1)
(13,35,1)
(24,25,1)
(33,12,1)
(35,33,1)
(1,13,1)
(24,1,1)
(40,7,1)
(8,9,1)
(10,32,1)
(32,28,1)
(27,18,1)
(39,38,1)
(23,39,1)
(28,34,1)
(33,3,1)
(41,23,1)
(8,1,1)
(30,45,1)
(34,40,1)
(13,42,1)
(25,9,1)
(13,35,2)
(42,25,2)
(32,25,2)
(34,35,2)
(40,25,2)
(1,25,2)
(33,3,2)
(8,1,2)
(7,25,2)
(3,26,2)
(13,25,2)
(11,34,2)
(8,17,2)
(8,9,2)
(33,25,2)
(37,11,2)
(33,12,2)
(26,25,2)
(36,34,2)
(1,13,2)
(35,33,2)
(39,25,2)
(35,25,2)
(26,41,2)
(38,25,2)
(34,25,2)
(10,25,2)
(23,25,2)
(3,25,2)
(41,25,2)
(28,25,2)
(37,34,2)
-----------------------------------
(0,printWLine(dest)
(1,data = dataBuffer - 8)
(2,)
(3,malloc(100*sizeof(wchar_t)
(4,dest)
(5,)
(6,data)
(7,dataBuffer)
(8,wcsncpy(dest, data, wcslen(dest)
(9,data = NULL)
(10,dataBuffer)
(11,-1)
(12,wchar_t *)
(13,dataBuffer - 8)
(14,'\\\\0')
(15,RET)
(16,dataBuffer)
(17,wcslen(dest)
(18,dest)
(19,dest)
(20,if(globalReturnsTrue()
(21,dest)
(22,)
(23,wchar_t)
(24,'\\\\0')
(25,globalReturnsTrue()
(26,100*sizeof(wchar_t)
(27,data)
(28,'\\\\0')
(29,\'\\\\0\')
(30,NULL)
(31,)
(32,data)
(33,(wchar_t *)
(34,dataBuffer == NULL)
(35,* dataBuffer = (wchar_t *)
(36,1)
(37,exit(-1)
(38,dataBuffer)
(39,100)
(40,NULL)
(41,sizeof(wchar_t)
(42,8)
(43,if (dataBuffer == NULL)
(44,)
(45,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^