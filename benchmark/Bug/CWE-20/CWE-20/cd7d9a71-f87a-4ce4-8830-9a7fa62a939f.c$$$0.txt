-----label-----
1
-----code-----
static void badSink()
{
    wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_45_badData;
    {
        size_t i;
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */
        for (i = 0; i < 100; i++)
        {
            data[i] = source[i];
        }
        data[100-1] = L'\0'; /* Ensure the destination buffer is null terminated */
        printWLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
9,12
12,13
13,14
15,16
15,17
15,18
15,19
15,20
15,21
15,22
15,23
16,17
17,18
17,19
18,19
20,21
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
30,33
30,34
31,32
33,34
36,37
36,38
39,40
40,41
40,42
41,42
41,43
42,43
44,45
44,46
48,49
48,50
48,51
48,52
49,50
50,51
50,52
51,52
54,55
54,56
55,56
58,59
59,60
61,62
62,63
63,64
63,65
64,65
64,66
65,66
67,68
69,70
69,71
70,71
72,73
74,75
75,76
75,77
76,77
76,78
77,78
79,80
79,81
83,84
84,85
84,86
85,86
87,88
89,90
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,8,10,11,14,19,21,24,26,28,32,34,35,37,38,43,45,46,47,52,53,56,57,60,66,68,71,73,78,80,81,82,86,88,92,94
-----computeFrom-----
36,37
36,38
40,41
40,42
44,45
44,46
50,51
50,52
54,55
54,56
63,64
63,65
75,76
75,77
79,80
79,81
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_45_badData;    {        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        data[100-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
static void
badSink()
badSink
{    wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_45_badData;    {        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        data[100-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_45_badData;
wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_45_badData;
wchar_t
* data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_45_badData
*
data
= CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_45_badData
{        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        data[100-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }
size_t i;
size_t i;
size_t
size_t
i
i
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
for (i = 0; i < 100; i++)        {            data[i] = source[i];        }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{            data[i] = source[i];        }
data[i] = source[i];
data[i] = source[i]
data[i]
data
data
i
i
source[i]
source
source
i
i
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(4,15,0)
(9,13,0)
(13,11,0)
(23,1,0)
(17,11,0)
(22,2,0)
(1,11,0)
(8,23,0)
(29,30,0)
(12,1,0)
(31,15,0)
(10,1,0)
(12,13,0)
(20,15,0)
(24,1,0)
(30,22,0)
(30,15,0)
(27,1,0)
(26,15,0)
(0,15,0)
(21,31,0)
(5,30,0)
(22,30,0)
(23,13,0)
(31,22,0)
(19,1,0)
(6,4,0)
(25,1,0)
(18,12,0)
(16,31,0)
(28,20,0)
(7,13,0)
(31,13,0)
(3,20,0)
(15,26,1)
(31,13,1)
(9,7,1)
(23,8,1)
(20,15,1)
(8,25,1)
(28,3,1)
(16,20,1)
(13,9,1)
(19,13,1)
(4,6,1)
(3,4,1)
(14,12,1)
(30,15,1)
(20,28,1)
(29,31,1)
(18,23,1)
(12,18,1)
(3,15,1)
(30,5,1)
(12,13,1)
(26,0,1)
(25,20,1)
(23,13,1)
(6,22,1)
(31,21,1)
(22,30,1)
(21,16,1)
(4,15,1)
(5,29,1)
(31,15,1)
(0,19,1)
(31,15,2)
(29,20,2)
(20,15,2)
(6,20,2)
(30,15,2)
(31,20,2)
(20,20,2)
(3,20,2)
(16,20,2)
(31,13,2)
(21,20,2)
(28,20,2)
(30,20,2)
(12,13,2)
(5,20,2)
(4,15,2)
(23,13,2)
(4,20,2)
(22,30,2)
(22,20,2)
-----------------------------------
(0,i)
(1,)
(2,)
(3,i)
(4,i++)
(5,i)
(6,i)
(7,data)
(8,data)
(9,CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_45_badData)
(10,i)
(11,)
(12,free(data)
(13,* data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_45_badData)
(14,RET)
(15,i = 0)
(16,data)
(17,data)
(18,data)
(19,'\\\\0')
(20,i < 100)
(21,i)
(22,data[i] = source[i])
(23,printWLine(data)
(24,for (i = 0; i < 100; i++)
(25,'\\\\0')
(26,0)
(27,source)
(28,100)
(29,source)
(30,source[i])
(31,data[i])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^