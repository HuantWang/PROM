-----label-----
1
-----code-----
static void badSink()
{
    int * data = CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_45_badData;
    {
        int source[10] = {0};
        /* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */
        memmove(data, source, 10*sizeof(int));
        printIntLine(data[0]);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
9,12
12,13
13,14
15,16
15,17
15,18
15,19
16,17
17,18
17,19
19,20
19,21
19,22
21,22
23,24
24,25
26,27
27,28
27,29
27,30
27,31
28,29
30,31
32,33
34,35
34,36
36,37
37,38
37,39
40,41
41,42
41,43
42,43
44,45
44,46
45,46
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,11,14,18,20,22,25,29,31,33,35,38,39,43,46,47,51,53
-----computeFrom-----
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;InitializerList;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    int * data = CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_45_badData;    {        int source[10] = {0};        /* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */        memmove(data, source, 10*sizeof(int));        printIntLine(data[0]);        free(data);    }}
static void
badSink()
badSink
{    int * data = CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_45_badData;    {        int source[10] = {0};        /* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */        memmove(data, source, 10*sizeof(int));        printIntLine(data[0]);        free(data);    }}
int * data = CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_45_badData;
int * data = CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_45_badData;
int
* data = CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_45_badData
*
data
= CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_45_badData
CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_45_badData
CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_45_badData
{        int source[10] = {0};        /* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */        memmove(data, source, 10*sizeof(int));        printIntLine(data[0]);        free(data);    }
int source[10] = {0};
int source[10] = {0};
int
source[10] = {0}
source
[10]
10
= {0}
{0}
0
memmove(data, source, 10*sizeof(int));
memmove(data, source, 10*sizeof(int))
memmove
memmove
data
data
source
source
10*sizeof(int)
10
sizeof(int)
int
int

printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(3,5,0)
(4,8,0)
(17,1,0)
(18,11,0)
(15,16,0)
(5,3,0)
(8,16,0)
(22,5,0)
(11,16,0)
(9,0,0)
(2,1,0)
(20,3,0)
(22,11,0)
(7,22,0)
(5,22,0)
(22,19,0)
(13,1,0)
(12,5,0)
(13,8,0)
(0,8,0)
(21,11,0)
(1,13,0)
(1,11,0)
(22,8,0)
(0,11,0)
(10,22,0)
(19,8,0)
(14,19,0)
(0,11,1)
(12,10,1)
(1,11,1)
(2,17,1)
(22,11,1)
(3,20,1)
(1,2,1)
(22,19,1)
(0,9,1)
(20,12,1)
(7,19,1)
(21,18,1)
(6,0,1)
(17,22,1)
(14,11,1)
(11,21,1)
(9,13,1)
(19,14,1)
(13,1,1)
(5,3,1)
(22,5,1)
(10,7,1)
(22,19,2)
(22,5,2)
(1,11,2)
(5,3,2)
(22,11,2)
(13,1,2)
(0,11,2)
-----------------------------------
(0,free(data)
(1,data[0])
(2,0)
(3,sizeof(int)
(4,source)
(5,10*sizeof(int)
(6,RET)
(7,data)
(8,)
(9,data)
(10,source)
(11,* data = CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_45_badData)
(12,10)
(13,printIntLine(data[0])
(14,source)
(15,data)
(16,)
(17,data)
(18,data)
(19,source[10] = {0})
(20,int)
(21,CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_45_badData)
(22,memmove(data, source, 10*sizeof(int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^