-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_08_bad()
{
    char * data;
    data = NULL;
    if(staticReturnsTrue())
    {
        {
            char * dataBuffer = (char *)malloc(100*sizeof(char));
            if (dataBuffer == NULL) {exit(-1);}
            memset(dataBuffer, 'A', 100-1);
            dataBuffer[100-1] = '\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        strcpy(data, source);
        printLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
20,21
22,23
23,24
23,25
23,26
23,27
23,28
24,25
25,26
25,27
27,28
27,29
27,30
30,31
31,32
31,33
32,33
32,34
34,35
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
59,62
59,63
60,61
62,63
65,66
65,67
68,69
69,70
69,71
70,71
70,72
71,72
73,74
73,75
77,78
78,79
78,80
79,80
81,82
81,83
82,83
85,86
85,87
85,88
85,89
85,90
86,87
87,88
87,89
89,90
89,91
91,92
93,94
94,95
94,96
94,97
94,98
95,96
97,98
100,101
100,102
103,104
104,105
104,106
105,106
105,107
106,107
108,109
108,110
112,113
113,114
113,115
113,116
114,115
116,117
118,119
120,121
121,122
121,123
122,123
124,125
-----nextToken-----
2,4,8,10,11,15,17,21,26,28,29,33,35,38,40,43,44,48,50,55,57,61,63,64,66,67,72,74,75,76,80,83,84,88,90,92,96,98,99,101,102,107,109,110,111,115,117,119,123,125
-----computeFrom-----
13,14
13,15
39,40
39,41
46,47
46,48
65,66
65,67
69,70
69,71
73,74
73,75
78,79
78,80
81,82
81,83
100,101
100,102
104,105
104,106
108,109
108,110
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_08_bad(){    char * data;    data = NULL;    if(staticReturnsTrue())    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_char_cpy_08_bad()
CWE124_Buffer_Underwrite__malloc_char_cpy_08_bad
{    char * data;    data = NULL;    if(staticReturnsTrue())    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(staticReturnsTrue())    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
strcpy(data, source);
strcpy(data, source)
strcpy
strcpy
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(6,49,0)
(59,19,0)
(15,70,0)
(61,16,0)
(69,65,0)
(67,56,0)
(64,55,0)
(32,29,0)
(68,5,0)
(0,6,0)
(18,50,0)
(36,29,0)
(51,22,0)
(44,1,0)
(6,28,0)
(55,4,0)
(22,11,0)
(34,23,0)
(50,60,0)
(45,6,0)
(28,6,0)
(49,69,0)
(43,28,0)
(42,16,0)
(11,22,0)
(24,66,0)
(12,25,0)
(69,49,0)
(63,69,0)
(41,16,0)
(48,11,0)
(16,1,0)
(41,53,0)
(40,17,0)
(7,1,0)
(31,41,0)
(55,64,0)
(70,15,0)
(27,53,0)
(21,47,0)
(65,11,0)
(39,64,0)
(52,70,0)
(58,25,0)
(56,49,0)
(20,49,0)
(54,70,0)
(33,5,0)
(3,19,0)
(10,47,0)
(56,5,0)
(29,19,0)
(25,16,0)
(11,65,0)
(47,1,0)
(53,50,0)
(66,49,0)
(38,28,0)
(49,50,0)
(15,42,0)
(53,66,0)
(2,50,0)
(35,15,0)
(25,53,0)
(29,16,0)
(56,23,0)
(25,47,0)
(9,17,0)
(5,56,0)
(30,66,0)
(46,42,0)
(41,47,0)
(6,50,0)
(17,49,0)
(23,50,0)
(19,29,0)
(66,53,0)
(65,69,0)
(69,63,0)
(28,38,1)
(46,15,1)
(58,42,1)
(38,43,1)
(68,33,1)
(64,39,1)
(17,49,1)
(54,35,1)
(24,30,1)
(52,54,1)
(19,59,1)
(67,6,1)
(66,24,1)
(29,19,1)
(36,32,1)
(53,66,1)
(48,20,1)
(25,53,1)
(8,41,1)
(30,27,1)
(23,34,1)
(41,47,1)
(33,67,1)
(49,69,1)
(25,12,1)
(32,53,1)
(41,53,1)
(5,68,1)
(47,21,1)
(11,22,1)
(45,17,1)
(17,40,1)
(25,47,1)
(34,56,1)
(69,63,1)
(51,48,1)
(6,49,1)
(3,36,1)
(12,58,1)
(70,52,1)
(41,31,1)
(45,55,1)
(20,13,1)
(65,11,1)
(35,29,1)
(66,49,1)
(56,5,1)
(32,13,1)
(59,3,1)
(69,65,1)
(40,9,1)
(27,23,1)
(42,46,1)
(55,64,1)
(43,0,1)
(39,17,1)
(13,47,1)
(56,49,1)
(21,10,1)
(22,51,1)
(9,49,1)
(6,28,1)
(31,25,1)
(0,45,1)
(15,70,1)
(68,13,2)
(29,19,2)
(9,13,2)
(24,13,2)
(43,13,2)
(11,22,2)
(5,13,2)
(56,49,2)
(6,13,2)
(53,13,2)
(25,53,2)
(23,13,2)
(25,47,2)
(6,28,2)
(55,64,2)
(69,65,2)
(33,13,2)
(56,13,2)
(40,13,2)
(39,17,2)
(30,13,2)
(38,13,2)
(41,47,2)
(67,13,2)
(69,63,2)
(66,13,2)
(20,13,2)
(48,13,2)
(17,49,2)
(27,13,2)
(49,69,2)
(51,13,2)
(69,13,2)
(11,13,2)
(56,5,2)
(65,11,2)
(22,13,2)
(15,70,2)
(34,13,2)
(0,13,2)
(53,66,2)
(64,17,2)
(55,17,2)
(28,13,2)
(45,13,2)
(6,49,2)
(65,13,2)
(41,53,2)
(17,13,2)
(49,13,2)
(66,49,2)
-----------------------------------
(0,'A')
(1,)
(2,if (dataBuffer == NULL)
(3,100)
(4,)
(5,100-1)
(6,memset(dataBuffer, 'A', 100-1)
(7,data)
(8,RET)
(9,dataBuffer)
(10,data)
(11,100*sizeof(char)
(12,source)
(13,staticReturnsTrue()
(14,memset(dataBuffer, \'A\', 100-1)
(15,source[100-1])
(16,)
(17,dataBuffer == NULL)
(18,dataBuffer)
(19,100-1)
(20,dataBuffer)
(21,NULL)
(22,sizeof(char)
(23,dataBuffer[100-1] = '\\\\0')
(24,8)
(25,strcpy(data, source)
(26,dataBuffer[100-1] = \'\\\\0\')
(27,data)
(28,100-1)
(29,memset(source, 'C', 100-1)
(30,dataBuffer)
(31,data)
(32,source)
(33,100)
(34,\'\\\\0\')
(35,source)
(36,'C')
(37,'\\\\0')
(38,1)
(39,1)
(40,NULL)
(41,printLine(data)
(42,source[100-1] = '\\\\0')
(43,100)
(44,if(staticReturnsTrue()
(45,dataBuffer)
(46,'\\\\0')
(47,data = NULL)
(48,100)
(49,* dataBuffer = (char *)
(50,)
(51,char)
(52,1)
(53,data = dataBuffer - 8)
(54,100)
(55,exit(-1)
(56,dataBuffer[100-1])
(57,\'A\')
(58,data)
(59,1)
(60,)
(61,source)
(62,memset(source, \'C\', 100-1)
(63,char *)
(64,-1)
(65,malloc(100*sizeof(char)
(66,dataBuffer - 8)
(67,dataBuffer)
(68,1)
(69,(char *)
(70,100-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^