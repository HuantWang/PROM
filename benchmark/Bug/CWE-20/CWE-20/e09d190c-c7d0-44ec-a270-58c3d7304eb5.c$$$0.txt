-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_preinc_14_bad()
{
    unsigned int data;
    data = 0;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(globalFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_preinc_14_bad(){    unsigned int data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_preinc_14_bad()
CWE190_Integer_Overflow__unsigned_int_max_preinc_14_bad
{    unsigned int data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(9,21,0)
(17,25,0)
(13,6,0)
(18,23,0)
(8,6,0)
(10,5,0)
(14,20,0)
(0,20,0)
(24,21,0)
(4,19,0)
(7,5,0)
(21,6,0)
(2,6,0)
(9,5,0)
(17,23,0)
(23,5,0)
(22,17,0)
(27,21,0)
(16,9,0)
(25,12,0)
(3,23,0)
(23,21,0)
(26,19,0)
(5,11,0)
(9,25,0)
(1,25,0)
(23,25,0)
(9,5,1)
(4,26,1)
(23,18,1)
(3,9,1)
(14,19,1)
(16,20,1)
(24,27,1)
(14,5,1)
(23,5,1)
(23,21,1)
(5,10,1)
(15,20,1)
(17,23,1)
(17,22,1)
(9,16,1)
(10,7,1)
(0,14,1)
(26,21,1)
(15,17,1)
(19,4,1)
(18,3,1)
(20,0,1)
(22,23,1)
(7,19,1)
(21,24,1)
(9,21,1)
(16,20,2)
(9,5,2)
(22,20,2)
(17,20,2)
(3,20,2)
(17,23,2)
(23,21,2)
(23,5,2)
(23,20,2)
(7,19,2)
(10,19,2)
(9,21,2)
(9,20,2)
(18,20,2)
(5,19,2)
-----------------------------------
(0,5)
(1,result)
(2,if(globalFive==5)
(3,result)
(4,5)
(5,data = UINT_MAX)
(6,)
(7,data)
(8,if(globalFive==5)
(9,++data)
(10,UINT_MAX)
(11,)
(12,)
(13,data)
(14,globalFive)
(15,RET)
(16,data)
(17,printUnsignedLine(result)
(18,data)
(19,globalFive==5)
(20,globalFive==5)
(21,data = 0)
(22,result)
(23,result = data)
(24,0)
(25,)
(26,globalFive)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^