-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_bad()
{
    double * data;
    /* Initialize data */
    data = NULL;
    if(globalFive==5)
    {
        /* INCIDENTAL: CWE-467 (Use of sizeof() on a pointer type) */
        /* FLAW: Using sizeof the pointer and not the data type in malloc() */
        data = (double *)malloc(sizeof(data));
        if (data == NULL) {exit(-1);}
        *data = 1.7E300;
    }
    /* POTENTIAL FLAW: Attempt to use data, which may not have enough memory allocated */
    printDoubleLine(*data);
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
20,21
23,24
23,25
23,26
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
34,35
36,37
37,38
38,39
40,41
40,42
41,42
41,43
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
53,54
54,55
54,56
55,56
56,57
59,60
60,61
60,62
61,62
63,64
64,65
66,67
67,68
67,69
68,69
70,71
-----nextToken-----
2,4,8,10,11,15,17,21,22,27,30,32,35,39,43,45,50,52,57,58,62,65,69,71
-----computeFrom-----
13,14
13,15
19,20
19,21
25,26
25,27
41,42
41,43
54,55
54,56
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;UnaryExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_bad(){    double * data;    /* Initialize data */    data = NULL;    if(globalFive==5)    {        /* INCIDENTAL: CWE-467 (Use of sizeof() on a pointer type) */        /* FLAW: Using sizeof the pointer and not the data type in malloc() */        data = (double *)malloc(sizeof(data));        if (data == NULL) {exit(-1);}        *data = 1.7E300;    }    /* POTENTIAL FLAW: Attempt to use data, which may not have enough memory allocated */    printDoubleLine(*data);    free(data);}
void
CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_bad()
CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_bad
{    double * data;    /* Initialize data */    data = NULL;    if(globalFive==5)    {        /* INCIDENTAL: CWE-467 (Use of sizeof() on a pointer type) */        /* FLAW: Using sizeof the pointer and not the data type in malloc() */        data = (double *)malloc(sizeof(data));        if (data == NULL) {exit(-1);}        *data = 1.7E300;    }    /* POTENTIAL FLAW: Attempt to use data, which may not have enough memory allocated */    printDoubleLine(*data);    free(data);}
double * data;
double * data;
double
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(globalFive==5)    {        /* INCIDENTAL: CWE-467 (Use of sizeof() on a pointer type) */        /* FLAW: Using sizeof the pointer and not the data type in malloc() */        data = (double *)malloc(sizeof(data));        if (data == NULL) {exit(-1);}        *data = 1.7E300;    }
globalFive==5
globalFive
globalFive
5
{        /* INCIDENTAL: CWE-467 (Use of sizeof() on a pointer type) */        /* FLAW: Using sizeof the pointer and not the data type in malloc() */        data = (double *)malloc(sizeof(data));        if (data == NULL) {exit(-1);}        *data = 1.7E300;    }
data = (double *)malloc(sizeof(data));
data = (double *)malloc(sizeof(data))
data
data
(double *)malloc(sizeof(data))
double *
double
*
*
malloc(sizeof(data))
malloc
malloc
sizeof(data)
(data)
data
data
if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
*data = 1.7E300;
*data = 1.7E300
*data
data
data
1.7E300
printDoubleLine(*data);
printDoubleLine(*data)
printDoubleLine
printDoubleLine
*data
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(25,3,0)
(5,26,0)
(29,3,0)
(25,32,0)
(12,17,0)
(23,32,0)
(10,25,0)
(9,16,0)
(20,25,0)
(15,8,0)
(31,8,0)
(30,4,0)
(32,16,0)
(26,3,0)
(27,30,0)
(8,15,0)
(25,30,0)
(21,23,0)
(1,30,0)
(23,4,0)
(18,33,0)
(7,17,0)
(26,32,0)
(20,4,0)
(14,30,0)
(22,24,0)
(23,30,0)
(32,8,0)
(8,32,0)
(15,1,0)
(13,22,0)
(24,22,0)
(1,15,0)
(25,20,0)
(2,32,0)
(11,1,0)
(28,33,0)
(24,6,0)
(3,16,0)
(33,32,0)
(19,4,0)
(8,31,0)
(34,4,0)
(27,14,1)
(20,25,1)
(10,3,1)
(0,23,1)
(12,7,1)
(26,5,1)
(25,10,1)
(10,17,1)
(25,30,1)
(24,22,1)
(23,32,1)
(7,30,1)
(17,12,1)
(1,30,1)
(23,30,1)
(15,1,1)
(5,33,1)
(26,32,1)
(23,21,1)
(33,28,1)
(29,26,1)
(5,24,1)
(2,17,1)
(18,32,1)
(8,31,1)
(3,29,1)
(13,33,1)
(30,27,1)
(25,3,1)
(21,20,1)
(25,32,1)
(33,32,1)
(28,18,1)
(1,11,1)
(22,13,1)
(32,8,1)
(11,2,1)
(8,15,1)
(1,17,2)
(15,1,2)
(26,32,2)
(20,25,2)
(11,17,2)
(5,17,2)
(26,17,2)
(32,17,2)
(18,17,2)
(22,33,2)
(24,22,2)
(2,17,2)
(8,15,2)
(25,3,2)
(33,32,2)
(23,32,2)
(33,17,2)
(15,17,2)
(29,17,2)
(28,17,2)
(1,30,2)
(25,30,2)
(32,8,2)
(3,17,2)
(25,32,2)
(24,33,2)
(8,17,2)
(13,33,2)
(23,30,2)
(8,31,2)
-----------------------------------
(0,RET)
(1,sizeof(data)
(2,data)
(3,*data = 1.7E300)
(4,)
(5,data)
(6,)
(7,globalFive)
(8,(double *)
(9,if (data == NULL)
(10,data)
(11,data)
(12,5)
(13,1)
(14,data)
(15,malloc(sizeof(data)
(16,)
(17,globalFive==5)
(18,data)
(19,data)
(20,printDoubleLine(*data)
(21,data)
(22,-1)
(23,free(data)
(24,exit(-1)
(25,*data)
(26,*data)
(27,NULL)
(28,NULL)
(29,1.7E300)
(30,data = NULL)
(31,double *)
(32,data = (double *)
(33,data == NULL)
(34,if(globalFive==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^