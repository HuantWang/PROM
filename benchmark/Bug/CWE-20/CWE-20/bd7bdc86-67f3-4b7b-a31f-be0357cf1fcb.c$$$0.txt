-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_06_bad()
{
    char * data;
    data = NULL;
    if(STATIC_CONST_FIVE==5)
    {
        {
            char * dataBuffer = (char *)malloc(100*sizeof(char));
            if (dataBuffer == NULL) {exit(-1);}
            memset(dataBuffer, 'A', 100-1);
            dataBuffer[100-1] = '\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        strcpy(data, source);
        printLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
20,21
23,24
24,25
24,26
24,27
24,28
24,29
25,26
26,27
26,28
28,29
28,30
28,31
31,32
32,33
32,34
33,34
33,35
35,36
37,38
37,39
38,39
40,41
40,42
42,43
43,44
43,45
46,47
46,48
47,48
47,49
48,49
50,51
52,53
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
60,63
60,64
61,62
63,64
66,67
66,68
69,70
70,71
70,72
71,72
71,73
72,73
74,75
74,76
78,79
79,80
79,81
80,81
82,83
82,84
83,84
86,87
86,88
86,89
86,90
86,91
87,88
88,89
88,90
90,91
90,92
92,93
94,95
95,96
95,97
95,98
95,99
96,97
98,99
101,102
101,103
104,105
105,106
105,107
106,107
106,108
107,108
109,110
109,111
113,114
114,115
114,116
114,117
115,116
117,118
119,120
121,122
122,123
122,124
123,124
125,126
-----nextToken-----
2,4,8,10,11,15,17,21,22,27,29,30,34,36,39,41,44,45,49,51,56,58,62,64,65,67,68,73,75,76,77,81,84,85,89,91,93,97,99,100,102,103,108,110,111,112,116,118,120,124,126
-----computeFrom-----
13,14
13,15
19,20
19,21
40,41
40,42
47,48
47,49
66,67
66,68
70,71
70,72
74,75
74,76
79,80
79,81
82,83
82,84
101,102
101,103
105,106
105,107
109,110
109,111
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_06_bad(){    char * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_char_cpy_06_bad()
CWE124_Buffer_Underwrite__malloc_char_cpy_06_bad
{    char * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(STATIC_CONST_FIVE==5)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
strcpy(data, source);
strcpy(data, source)
strcpy
strcpy
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(49,4,0)
(16,4,0)
(56,41,0)
(8,49,0)
(44,13,0)
(52,29,0)
(38,20,0)
(40,41,0)
(0,72,0)
(58,43,0)
(5,44,0)
(13,34,0)
(3,42,0)
(65,29,0)
(68,27,0)
(7,34,0)
(72,27,0)
(49,7,0)
(64,16,0)
(4,34,0)
(19,42,0)
(34,50,0)
(33,4,0)
(53,47,0)
(17,21,0)
(11,54,0)
(42,41,0)
(15,30,0)
(21,42,0)
(51,14,0)
(9,26,0)
(19,40,0)
(18,72,0)
(14,6,0)
(59,14,0)
(48,27,0)
(21,40,0)
(49,47,0)
(31,6,0)
(16,64,0)
(6,34,0)
(24,13,0)
(25,54,0)
(67,41,0)
(28,47,0)
(70,20,0)
(2,26,0)
(30,15,0)
(19,13,0)
(45,34,0)
(23,44,0)
(60,43,0)
(47,49,0)
(20,40,0)
(38,26,0)
(6,4,0)
(57,40,0)
(4,16,0)
(32,38,0)
(13,44,0)
(30,64,0)
(16,35,0)
(54,4,0)
(1,6,0)
(29,65,0)
(35,16,0)
(65,46,0)
(71,42,0)
(44,4,0)
(27,72,0)
(21,13,0)
(27,40,0)
(22,7,0)
(63,19,0)
(36,19,0)
(69,15,0)
(12,30,0)
(26,38,0)
(6,14,0)
(64,30,0)
(55,34,0)
(70,38,1)
(44,5,1)
(1,65,1)
(47,53,1)
(20,70,1)
(21,13,1)
(3,71,1)
(8,6,1)
(21,42,1)
(32,27,1)
(9,2,1)
(2,32,1)
(63,36,1)
(29,52,1)
(30,15,1)
(19,63,1)
(52,54,1)
(48,13,1)
(12,33,1)
(25,11,1)
(19,42,1)
(13,44,1)
(14,59,1)
(51,31,1)
(17,19,1)
(27,72,1)
(49,47,1)
(36,20,1)
(54,4,1)
(31,1,1)
(68,48,1)
(5,23,1)
(0,68,1)
(24,7,1)
(53,28,1)
(33,43,1)
(26,9,1)
(11,4,1)
(65,29,1)
(15,69,1)
(59,51,1)
(6,14,1)
(6,4,1)
(19,13,1)
(28,8,1)
(16,64,1)
(54,25,1)
(44,4,1)
(58,60,1)
(69,12,1)
(42,3,1)
(49,4,1)
(43,58,1)
(21,17,1)
(22,49,1)
(18,0,1)
(1,54,1)
(64,30,1)
(38,26,1)
(72,18,1)
(4,16,1)
(7,22,1)
(60,42,1)
(23,24,1)
(39,21,1)
(16,35,1)
(48,43,1)
(13,44,2)
(21,42,2)
(52,54,2)
(1,43,2)
(54,4,2)
(5,43,2)
(21,13,2)
(19,13,2)
(29,54,2)
(7,43,2)
(16,43,2)
(12,43,2)
(44,43,2)
(49,4,2)
(28,43,2)
(49,47,2)
(6,14,2)
(30,43,2)
(25,43,2)
(33,43,2)
(23,43,2)
(16,35,2)
(6,43,2)
(27,72,2)
(47,43,2)
(4,16,2)
(64,30,2)
(49,43,2)
(15,43,2)
(4,43,2)
(59,43,2)
(44,4,2)
(65,29,2)
(19,42,2)
(24,43,2)
(69,43,2)
(6,4,2)
(53,43,2)
(16,64,2)
(11,43,2)
(38,26,2)
(30,15,2)
(31,43,2)
(13,43,2)
(14,43,2)
(51,43,2)
(65,54,2)
(54,43,2)
(22,43,2)
(8,43,2)
(64,43,2)
-----------------------------------
(0,100)
(1,dataBuffer)
(2,100)
(3,NULL)
(4,* dataBuffer = (char *)
(5,8)
(6,memset(dataBuffer, \'A\', 100-1)
(7,dataBuffer[100-1] = '\\\\0')
(8,dataBuffer)
(9,1)
(10,memset(dataBuffer, 'A', 100-1)
(11,dataBuffer)
(12,100)
(13,data = dataBuffer - 8)
(14,100-1)
(15,sizeof(char)
(16,(char *)
(17,data)
(18,1)
(19,strcpy(data, source)
(20,source[100-1] = '\\\\0')
(21,printLine(data)
(22,\'\\\\0\')
(23,dataBuffer)
(24,data)
(25,NULL)
(26,100-1)
(27,memset(source, \'C\', 100-1)
(28,100)
(29,-1)
(30,100*sizeof(char)
(31,'A')
(32,source)
(33,dataBuffer)
(34,)
(35,char *)
(36,data)
(37,'\\\\0')
(38,source[100-1])
(39,RET)
(40,)
(41,)
(42,data = NULL)
(43,STATIC_CONST_FIVE==5)
(44,dataBuffer - 8)
(45,dataBuffer)
(46,)
(47,100-1)
(48,source)
(49,dataBuffer[100-1])
(50,)
(51,100)
(52,1)
(53,1)
(54,dataBuffer == NULL)
(55,if (dataBuffer == NULL)
(56,data)
(57,source)
(58,5)
(59,1)
(60,STATIC_CONST_FIVE)
(61,dataBuffer[100-1] = \'\\\\0\')
(62,\'A\')
(63,source)
(64,malloc(100*sizeof(char)
(65,exit(-1)
(66,memset(source, 'C', 100-1)
(67,if(STATIC_CONST_FIVE==5)
(68,'C')
(69,char)
(70,'\\\\0')
(71,data)
(72,100-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^