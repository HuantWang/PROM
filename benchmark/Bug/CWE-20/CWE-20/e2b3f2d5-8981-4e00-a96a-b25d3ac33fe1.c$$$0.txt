-----label-----
1
-----code-----
static void badSink(unsigned int data)
{
    {
        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
        unsigned int result = data * data;
        printUnsignedLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
20,21
22,23
23,24
23,25
24,25
26,27
-----nextToken-----
2,4,6,8,13,15,19,21,25,27
-----computeFrom-----
17,18
17,19
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(unsigned int data){    {        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }}
static void
badSink(unsigned int data)
badSink
unsigned int data
unsigned int
data
data
{    {        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }}
{        /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */        unsigned int result = data * data;        printUnsignedLine(result);    }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(7,3,0)
(7,4,0)
(4,7,0)
(0,7,0)
(4,8,0)
(9,4,0)
(2,3,0)
(6,2,0)
(2,7,0)
(11,4,0)
(3,10,0)
(5,3,0)
(4,9,1)
(11,0,1)
(1,2,1)
(7,4,1)
(2,7,1)
(2,6,1)
(4,8,1)
(6,7,1)
(9,11,1)
(4,8,2)
(7,4,2)
(2,7,2)
-----------------------------------
(0,result)
(1,RET)
(2,printUnsignedLine(result)
(3,)
(4,data * data)
(5,result)
(6,result)
(7,result = data * data)
(8,unsigned int data)
(9,data)
(10,)
(11,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^