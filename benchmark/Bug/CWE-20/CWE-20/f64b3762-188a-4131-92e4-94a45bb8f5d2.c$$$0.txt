-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__wchar_t_type_overrun_memmove_05_bad()
{
    if(staticTrue)
    {
        {
            charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));
            if (structCharVoid == NULL) {exit(-1);}
            structCharVoid->voidSecond = (void *)SRC_STR;
            /* Print the initial block pointed to by structCharVoid->voidSecond */
            printWLine((wchar_t *)structCharVoid->voidSecond);
            /* FLAW: Use the sizeof(*structCharVoid) which will overwrite the pointer y */
            memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));
            structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'; /* null terminate the string */
            printWLine((wchar_t *)structCharVoid->charFirst);
            printWLine((wchar_t *)structCharVoid->voidSecond);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
10,17
10,18
11,12
12,13
12,14
13,14
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
21,22
23,24
25,26
25,27
26,27
28,29
29,30
29,31
30,31
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
48,50
49,50
52,53
52,54
53,54
53,55
55,56
57,58
59,60
60,61
60,62
61,62
63,64
63,65
64,65
64,66
66,67
68,69
68,70
69,70
72,73
73,74
73,75
73,76
73,77
74,75
76,77
76,78
77,78
80,81
82,83
83,84
84,85
85,86
87,88
88,89
88,90
89,90
89,91
90,91
90,92
91,92
94,95
94,96
95,96
96,97
96,98
97,98
98,99
99,100
99,101
100,101
103,104
104,105
104,106
109,110
110,111
110,112
111,112
113,114
113,115
114,115
114,116
116,117
118,119
118,120
119,120
122,123
123,124
123,125
124,125
126,127
126,128
127,128
127,129
129,130
131,132
131,133
132,133
-----nextToken-----
2,4,8,14,16,17,22,24,27,31,32,36,38,43,45,50,51,54,56,58,62,65,67,70,71,75,78,79,81,86,92,93,101,102,105,106,107,108,112,115,117,120,121,125,128,130,133,134
-----computeFrom-----
34,35
34,36
47,48
47,49
88,89
88,90
94,95
94,96
96,97
96,98
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;UnaryExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;UnaryExpression;BinaryExpression;UnaryExpression;UnaryExpression;FieldReference;IdExpression;Name;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__wchar_t_type_overrun_memmove_05_bad(){    if(staticTrue)    {        {            charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));            if (structCharVoid == NULL) {exit(-1);}            structCharVoid->voidSecond = (void *)SRC_STR;            /* Print the initial block pointed to by structCharVoid->voidSecond */            printWLine((wchar_t *)structCharVoid->voidSecond);            /* FLAW: Use the sizeof(*structCharVoid) which will overwrite the pointer y */            memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));            structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'; /* null terminate the string */            printWLine((wchar_t *)structCharVoid->charFirst);            printWLine((wchar_t *)structCharVoid->voidSecond);        }    }}
void
CWE122_Heap_Based_Buffer_Overflow__wchar_t_type_overrun_memmove_05_bad()
CWE122_Heap_Based_Buffer_Overflow__wchar_t_type_overrun_memmove_05_bad
{    if(staticTrue)    {        {            charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));            if (structCharVoid == NULL) {exit(-1);}            structCharVoid->voidSecond = (void *)SRC_STR;            /* Print the initial block pointed to by structCharVoid->voidSecond */            printWLine((wchar_t *)structCharVoid->voidSecond);            /* FLAW: Use the sizeof(*structCharVoid) which will overwrite the pointer y */            memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));            structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'; /* null terminate the string */            printWLine((wchar_t *)structCharVoid->charFirst);            printWLine((wchar_t *)structCharVoid->voidSecond);        }    }}
if(staticTrue)    {        {            charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));            if (structCharVoid == NULL) {exit(-1);}            structCharVoid->voidSecond = (void *)SRC_STR;            /* Print the initial block pointed to by structCharVoid->voidSecond */            printWLine((wchar_t *)structCharVoid->voidSecond);            /* FLAW: Use the sizeof(*structCharVoid) which will overwrite the pointer y */            memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));            structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'; /* null terminate the string */            printWLine((wchar_t *)structCharVoid->charFirst);            printWLine((wchar_t *)structCharVoid->voidSecond);        }    }
staticTrue
staticTrue
{        {            charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));            if (structCharVoid == NULL) {exit(-1);}            structCharVoid->voidSecond = (void *)SRC_STR;            /* Print the initial block pointed to by structCharVoid->voidSecond */            printWLine((wchar_t *)structCharVoid->voidSecond);            /* FLAW: Use the sizeof(*structCharVoid) which will overwrite the pointer y */            memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));            structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'; /* null terminate the string */            printWLine((wchar_t *)structCharVoid->charFirst);            printWLine((wchar_t *)structCharVoid->voidSecond);        }    }
{            charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));            if (structCharVoid == NULL) {exit(-1);}            structCharVoid->voidSecond = (void *)SRC_STR;            /* Print the initial block pointed to by structCharVoid->voidSecond */            printWLine((wchar_t *)structCharVoid->voidSecond);            /* FLAW: Use the sizeof(*structCharVoid) which will overwrite the pointer y */            memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));            structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'; /* null terminate the string */            printWLine((wchar_t *)structCharVoid->charFirst);            printWLine((wchar_t *)structCharVoid->voidSecond);        }
charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));
charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));
charVoid
charVoid
* structCharVoid = (charVoid *)malloc(sizeof(charVoid))
*
structCharVoid
= (charVoid *)malloc(sizeof(charVoid))
(charVoid *)malloc(sizeof(charVoid))
charVoid *
charVoid
charVoid
*
*
malloc(sizeof(charVoid))
malloc
malloc
sizeof(charVoid)
charVoid
charVoid
charVoid

if (structCharVoid == NULL) {exit(-1);}
structCharVoid == NULL
structCharVoid
structCharVoid
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
structCharVoid->voidSecond = (void *)SRC_STR;
structCharVoid->voidSecond = (void *)SRC_STR
structCharVoid->voidSecond
structCharVoid
structCharVoid
voidSecond
(void *)SRC_STR
void *
void
*
*
SRC_STR
SRC_STR
printWLine((wchar_t *)structCharVoid->voidSecond);
printWLine((wchar_t *)structCharVoid->voidSecond)
printWLine
printWLine
(wchar_t *)structCharVoid->voidSecond
wchar_t *
wchar_t
*
*
structCharVoid->voidSecond
structCharVoid
structCharVoid
voidSecond
memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));
memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid))
memmove
memmove
structCharVoid->charFirst
structCharVoid
structCharVoid
charFirst
SRC_STR
SRC_STR
sizeof(*structCharVoid)
(*structCharVoid)
*structCharVoid
structCharVoid
structCharVoid
structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0';
structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'
structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1]
structCharVoid->charFirst
structCharVoid
structCharVoid
charFirst
(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1
(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))
sizeof(structCharVoid->charFirst)/sizeof(wchar_t)
sizeof(structCharVoid->charFirst)
(structCharVoid->charFirst)
structCharVoid->charFirst
structCharVoid
structCharVoid
charFirst
sizeof(wchar_t)
wchar_t
wchar_t

1
L'\0'
printWLine((wchar_t *)structCharVoid->charFirst);
printWLine((wchar_t *)structCharVoid->charFirst)
printWLine
printWLine
(wchar_t *)structCharVoid->charFirst
wchar_t *
wchar_t
*
*
structCharVoid->charFirst
structCharVoid
structCharVoid
charFirst
printWLine((wchar_t *)structCharVoid->voidSecond);
printWLine((wchar_t *)structCharVoid->voidSecond)
printWLine
printWLine
(wchar_t *)structCharVoid->voidSecond
wchar_t *
wchar_t
*
*
structCharVoid->voidSecond
structCharVoid
structCharVoid
voidSecond
-----joern-----
(22,29,0)
(51,30,0)
(38,8,0)
(18,16,0)
(7,29,0)
(4,42,0)
(53,17,0)
(23,43,0)
(8,28,0)
(28,8,0)
(47,17,0)
(32,2,0)
(17,47,0)
(26,49,0)
(12,40,0)
(34,33,0)
(42,29,0)
(42,28,0)
(55,14,0)
(11,5,0)
(44,27,0)
(56,50,0)
(16,18,0)
(13,28,0)
(41,13,0)
(27,44,0)
(46,43,0)
(14,16,0)
(18,31,0)
(10,28,0)
(33,16,0)
(28,2,0)
(14,50,0)
(29,42,0)
(50,56,0)
(54,30,0)
(29,22,0)
(19,13,0)
(8,44,0)
(50,14,0)
(53,2,0)
(56,2,0)
(6,33,0)
(40,2,0)
(30,51,0)
(45,2,0)
(35,9,0)
(37,2,0)
(43,17,0)
(2,1,0)
(20,27,0)
(22,2,0)
(21,42,0)
(17,53,0)
(36,14,0)
(29,7,0)
(5,40,0)
(43,16,0)
(40,13,0)
(25,50,0)
(11,28,0)
(16,2,0)
(9,28,0)
(13,40,0)
(40,5,0)
(48,18,0)
(33,28,0)
(44,8,0)
(39,9,0)
(51,0,0)
(17,43,0)
(43,28,0)
(50,25,0)
(15,11,0)
(14,28,0)
(8,38,0)
(31,18,0)
(5,11,0)
(3,56,1)
(29,7,1)
(45,40,1)
(22,29,1)
(43,46,1)
(28,8,1)
(8,44,1)
(33,28,1)
(40,13,1)
(20,10,1)
(41,53,1)
(9,28,1)
(48,33,1)
(4,45,1)
(10,24,1)
(44,27,1)
(56,50,1)
(40,5,1)
(39,28,1)
(6,9,1)
(18,31,1)
(14,28,1)
(50,25,1)
(19,41,1)
(42,21,1)
(21,4,1)
(30,54,1)
(11,28,1)
(43,16,1)
(33,34,1)
(3,24,1)
(6,51,1)
(17,43,1)
(46,23,1)
(42,28,1)
(43,28,1)
(53,17,1)
(34,6,1)
(15,12,1)
(51,30,1)
(13,28,1)
(23,16,1)
(36,22,1)
(5,11,1)
(8,38,1)
(12,13,1)
(29,42,1)
(55,36,1)
(50,14,1)
(13,19,1)
(54,9,1)
(14,55,1)
(27,20,1)
(16,18,1)
(11,15,1)
(14,16,1)
(9,35,1)
(35,39,1)
(18,48,1)
(17,47,1)
(40,24,2)
(6,24,2)
(28,24,2)
(54,9,2)
(16,24,2)
(12,24,2)
(11,28,2)
(19,24,2)
(14,24,2)
(17,47,2)
(27,24,2)
(16,18,2)
(29,24,2)
(21,24,2)
(29,7,2)
(23,24,2)
(8,44,2)
(15,24,2)
(43,16,2)
(9,24,2)
(36,24,2)
(39,24,2)
(20,24,2)
(41,24,2)
(5,11,2)
(50,25,2)
(30,9,2)
(44,24,2)
(4,24,2)
(29,42,2)
(18,24,2)
(55,24,2)
(50,24,2)
(33,28,2)
(48,24,2)
(13,24,2)
(8,38,2)
(46,24,2)
(33,24,2)
(14,16,2)
(22,24,2)
(56,24,2)
(22,29,2)
(43,28,2)
(18,31,2)
(40,13,2)
(10,24,2)
(43,24,2)
(5,24,2)
(17,43,2)
(14,28,2)
(53,17,2)
(45,24,2)
(9,28,2)
(17,24,2)
(35,24,2)
(13,28,2)
(50,14,2)
(34,24,2)
(40,5,2)
(51,30,2)
(28,8,2)
(42,28,2)
(51,9,2)
(42,24,2)
(56,50,2)
(44,27,2)
(8,24,2)
(53,24,2)
(11,24,2)
-----------------------------------
(0,)
(1,)
(2,)
(3,RET)
(4,structCharVoid)
(5,sizeof(*structCharVoid)
(6,structCharVoid)
(7,wchar_t *)
(8,(charVoid *)
(9,structCharVoid == NULL)
(10,structCharVoid)
(11,*structCharVoid)
(12,SRC_STR)
(13,structCharVoid->charFirst)
(14,structCharVoid->voidSecond)
(15,structCharVoid)
(16,structCharVoid->voidSecond = (void *)
(17,(wchar_t *)
(18,(void *)
(19,charFirst)
(20,charVoid)
(21,charFirst)
(22,printWLine((wchar_t *)
(23,structCharVoid)
(24,staticTrue)
(25,wchar_t *)
(26,if(staticTrue)
(27,sizeof(charVoid)
(28,* structCharVoid = (charVoid *)
(29,(wchar_t *)
(30,-1)
(31,void *)
(32,if (structCharVoid == NULL)
(33,structCharVoid->voidSecond)
(34,voidSecond)
(35,NULL)
(36,structCharVoid)
(37,structCharVoid)
(38,charVoid *)
(39,structCharVoid)
(40,memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid)
(41,structCharVoid)
(42,structCharVoid->charFirst)
(43,structCharVoid->voidSecond)
(44,malloc(sizeof(charVoid)
(45,\'\\\\0\')
(46,voidSecond)
(47,wchar_t *)
(48,SRC_STR)
(49,)
(50,(wchar_t *)
(51,exit(-1)
(52,'\\\\0')
(53,printWLine((wchar_t *)
(54,1)
(55,voidSecond)
(56,printWLine((wchar_t *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^