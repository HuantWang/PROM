-----label-----
1
-----code-----
wchar_t * CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_61b_badSource(wchar_t * data)
{
    /* FLAW: Did not leave space for a null terminator */
    data = (wchar_t *)malloc(10*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
11,14
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
44,45
-----nextToken-----
2,4,5,7,9,10,15,18,20,23,25,28,29,33,35,40,42,45
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
wchar_t * CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_61b_badSource(wchar_t * data){    /* FLAW: Did not leave space for a null terminator */    data = (wchar_t *)malloc(10*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    return data;}
wchar_t
* CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_61b_badSource(wchar_t * data)
*
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_61b_badSource
wchar_t * data
wchar_t
* data
*
data
{    /* FLAW: Did not leave space for a null terminator */    data = (wchar_t *)malloc(10*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    return data;}
data = (wchar_t *)malloc(10*sizeof(wchar_t));
data = (wchar_t *)malloc(10*sizeof(wchar_t))
data
data
(wchar_t *)malloc(10*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(10*sizeof(wchar_t))
malloc
malloc
10*sizeof(wchar_t)
10
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
return data;
data
data
-----joern-----
(13,5,0)
(3,12,0)
(19,6,0)
(1,12,0)
(8,17,0)
(12,16,0)
(3,6,0)
(15,16,0)
(7,8,0)
(11,8,0)
(13,21,0)
(18,4,0)
(8,3,0)
(16,15,0)
(8,6,0)
(14,15,0)
(16,12,0)
(12,1,0)
(9,3,0)
(15,4,0)
(5,13,0)
(10,3,0)
(0,10,0)
(3,17,0)
(2,10,0)
(12,3,0)
(20,5,0)
(4,15,0)
(10,17,0)
(8,17,1)
(3,12,1)
(18,14,1)
(7,13,1)
(4,18,1)
(0,3,1)
(3,17,1)
(2,0,1)
(10,2,1)
(12,1,1)
(8,7,1)
(14,9,1)
(8,3,1)
(15,4,1)
(5,20,1)
(11,8,1)
(7,10,1)
(13,5,1)
(16,15,1)
(12,16,1)
(20,10,1)
(10,17,1)
(10,3,1)
(5,10,2)
(13,5,2)
(12,16,2)
(16,15,2)
(8,17,2)
(13,10,2)
(3,17,2)
(8,3,2)
(10,3,2)
(10,17,2)
(11,8,2)
(12,1,2)
(3,12,2)
(15,4,2)
(20,10,2)
-----------------------------------
(0,data)
(1,wchar_t *)
(2,NULL)
(3,data = (wchar_t *)
(4,sizeof(wchar_t)
(5,-1)
(6,)
(7,data)
(8,return data;)
(9,data)
(10,data == NULL)
(11,RET)
(12,(wchar_t *)
(13,exit(-1)
(14,10)
(15,10*sizeof(wchar_t)
(16,malloc(10*sizeof(wchar_t)
(17,wchar_t * data)
(18,wchar_t)
(19,if (data == NULL)
(20,1)
(21,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^