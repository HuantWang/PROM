-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_postinc_05_bad()
{
    short data;
    data = 0;
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
32,33
34,35
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,33,39,42,44,47,51,53
-----computeFrom-----
12,13
12,14
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_postinc_05_bad(){    short data;    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_postinc_05_bad()
CWE190_Integer_Overflow__short_rand_postinc_05_bad
{    short data;    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticTrue)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(21,11,0)
(22,5,0)
(10,11,0)
(10,6,0)
(6,3,0)
(8,7,0)
(15,25,0)
(20,22,0)
(18,10,0)
(10,25,0)
(2,25,0)
(0,7,0)
(22,6,0)
(11,7,0)
(2,10,0)
(24,11,0)
(15,6,0)
(22,20,0)
(13,7,0)
(5,22,0)
(25,1,0)
(6,22,0)
(23,10,0)
(15,11,0)
(19,15,0)
(17,2,0)
(4,6,0)
(12,25,0)
(18,15,1)
(9,16,1)
(21,24,1)
(15,11,1)
(10,11,1)
(14,9,1)
(17,10,1)
(23,18,1)
(22,5,1)
(6,22,1)
(15,19,1)
(16,11,1)
(10,23,1)
(14,2,1)
(10,6,1)
(2,10,1)
(4,16,1)
(20,4,1)
(11,21,1)
(15,6,1)
(2,17,1)
(22,20,1)
(9,6,1)
(19,9,1)
(22,20,2)
(4,16,2)
(15,9,2)
(22,16,2)
(23,9,2)
(15,11,2)
(2,9,2)
(20,16,2)
(6,22,2)
(15,6,2)
(10,11,2)
(17,9,2)
(10,6,2)
(19,9,2)
(6,16,2)
(18,9,2)
(10,9,2)
(22,5,2)
(2,10,2)
-----------------------------------
(0,data)
(1,)
(2,printIntLine(result)
(3,)
(4,data)
(5,short)
(6,data = (short)
(7,)
(8,if(staticTrue)
(9,staticTrue)
(10,result = data)
(11,data = 0)
(12,result)
(13,if(staticTrue)
(14,RET)
(15,data++)
(16,staticTrue)
(17,result)
(18,result)
(19,data)
(20,RAND32()
(21,0)
(22,(short)
(23,data)
(24,data)
(25,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^