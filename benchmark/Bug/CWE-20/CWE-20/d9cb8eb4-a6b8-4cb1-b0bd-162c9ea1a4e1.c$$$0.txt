-----label-----
1
-----code-----
void CWE127_Buffer_Underread__malloc_char_loop_10_bad()
{
    char * data;
    data = NULL;
    if(globalTrue)
    {
        {
            char * dataBuffer = (char *)malloc(100*sizeof(char));
            if (dataBuffer == NULL) {exit(-1);}
            memset(dataBuffer, 'A', 100-1);
            dataBuffer[100-1] = '\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        size_t i;
        char dest[100];
        memset(dest, 'C', 100-1); /* fill with 'C's */
        dest[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */
        for (i = 0; i < 100; i++)
        {
            dest[i] = data[i];
        }
        /* Ensure null termination */
        dest[100-1] = '\0';
        printLine(dest);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
21,22
22,23
22,24
22,25
22,26
22,27
23,24
24,25
24,26
26,27
26,28
26,29
29,30
30,31
30,32
31,32
31,33
33,34
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
44,45
44,46
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
58,61
58,62
59,60
61,62
64,65
64,66
67,68
68,69
68,70
69,70
69,71
70,71
72,73
72,74
76,77
77,78
77,79
78,79
80,81
80,82
81,82
84,85
84,86
84,87
84,88
84,89
84,90
84,91
85,86
86,87
86,88
87,88
89,90
91,92
92,93
92,94
94,95
94,96
96,97
98,99
99,100
99,101
99,102
99,103
100,101
102,103
105,106
105,107
108,109
109,110
109,111
110,111
110,112
111,112
113,114
113,115
117,118
117,119
117,120
117,121
118,119
119,120
119,121
120,121
123,124
123,125
124,125
127,128
128,129
130,131
131,132
132,133
132,134
133,134
133,135
134,135
136,137
138,139
138,140
139,140
141,142
143,144
144,145
144,146
145,146
145,147
146,147
148,149
148,150
152,153
153,154
153,155
154,155
156,157
-----nextToken-----
2,4,8,10,11,15,17,20,25,27,28,32,34,37,39,42,43,47,49,54,56,60,62,63,65,66,71,73,74,75,79,82,83,88,90,93,95,97,101,103,104,106,107,112,114,115,116,121,122,125,126,129,135,137,140,142,147,149,150,151,155,157
-----computeFrom-----
13,14
13,15
38,39
38,40
45,46
45,47
64,65
64,66
68,69
68,70
72,73
72,74
77,78
77,79
80,81
80,82
105,106
105,107
109,110
109,111
113,114
113,115
119,120
119,121
123,124
123,125
132,133
132,134
144,145
144,146
148,149
148,150
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE127_Buffer_Underread__malloc_char_loop_10_bad(){    char * data;    data = NULL;    if(globalTrue)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        size_t i;        char dest[100];        memset(dest, 'C', 100-1); /* fill with 'C's */        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        for (i = 0; i < 100; i++)        {            dest[i] = data[i];        }        /* Ensure null termination */        dest[100-1] = '\0';        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE127_Buffer_Underread__malloc_char_loop_10_bad()
CWE127_Buffer_Underread__malloc_char_loop_10_bad
{    char * data;    data = NULL;    if(globalTrue)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        size_t i;        char dest[100];        memset(dest, 'C', 100-1); /* fill with 'C's */        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        for (i = 0; i < 100; i++)        {            dest[i] = data[i];        }        /* Ensure null termination */        dest[100-1] = '\0';        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(globalTrue)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
globalTrue
globalTrue
{        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        size_t i;        char dest[100];        memset(dest, 'C', 100-1); /* fill with 'C's */        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        for (i = 0; i < 100; i++)        {            dest[i] = data[i];        }        /* Ensure null termination */        dest[100-1] = '\0';        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
size_t i;
size_t i;
size_t
size_t
i
i
char dest[100];
char dest[100];
char
dest[100]
dest
[100]
100
memset(dest, 'C', 100-1);
memset(dest, 'C', 100-1)
memset
memset
dest
dest
'C'
100-1
100
1
dest[100-1] = '\0';
dest[100-1] = '\0'
dest[100-1]
dest
dest
100-1
100
1
'\0'
for (i = 0; i < 100; i++)        {            dest[i] = data[i];        }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{            dest[i] = data[i];        }
dest[i] = data[i];
dest[i] = data[i]
dest[i]
dest
dest
i
i
data[i]
data
data
i
i
dest[100-1] = '\0';
dest[100-1] = '\0'
dest[100-1]
dest
dest
100-1
100
1
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(90,88,0)
(55,16,0)
(85,81,0)
(48,58,0)
(41,88,0)
(13,61,0)
(43,67,0)
(73,49,0)
(65,75,0)
(54,88,0)
(10,17,0)
(39,37,0)
(60,47,0)
(36,31,0)
(7,56,0)
(37,7,0)
(17,10,0)
(62,48,0)
(52,54,0)
(29,78,0)
(91,53,0)
(24,91,0)
(82,49,0)
(81,88,0)
(9,7,0)
(88,30,0)
(11,37,0)
(42,1,0)
(87,88,0)
(77,37,0)
(84,77,0)
(61,88,0)
(64,1,0)
(16,18,0)
(59,70,0)
(53,91,0)
(74,5,0)
(31,18,0)
(48,37,0)
(9,77,0)
(38,30,0)
(37,74,0)
(19,58,0)
(2,37,0)
(70,18,0)
(20,2,0)
(47,81,0)
(47,1,0)
(59,80,0)
(21,78,0)
(40,7,0)
(14,75,0)
(86,10,0)
(5,74,0)
(92,18,0)
(2,7,0)
(66,50,0)
(53,63,0)
(33,30,0)
(16,59,0)
(83,70,0)
(44,86,0)
(28,11,0)
(2,75,0)
(57,69,0)
(17,74,0)
(45,18,0)
(26,52,0)
(8,11,0)
(27,2,0)
(10,86,0)
(69,18,0)
(70,67,0)
(29,88,0)
(48,49,0)
(51,70,0)
(70,59,0)
(25,16,0)
(89,77,0)
(52,50,0)
(35,31,0)
(74,37,0)
(15,9,0)
(67,30,0)
(32,29,0)
(74,17,0)
(1,47,0)
(77,9,0)
(50,52,0)
(75,2,0)
(4,67,0)
(70,9,0)
(46,54,0)
(3,7,0)
(12,10,0)
(79,50,0)
(49,48,0)
(58,7,0)
(6,29,0)
(34,78,0)
(78,29,0)
(85,47,1)
(68,67,1)
(27,11,1)
(35,69,1)
(27,53,1)
(26,29,1)
(31,18,1)
(69,57,1)
(29,78,1)
(82,73,1)
(73,62,1)
(58,19,1)
(14,20,1)
(70,67,1)
(16,18,1)
(16,25,1)
(64,42,1)
(77,37,1)
(70,83,1)
(24,11,1)
(57,59,1)
(81,85,1)
(84,89,1)
(39,68,1)
(86,44,1)
(46,52,1)
(2,37,1)
(44,12,1)
(45,54,1)
(50,66,1)
(47,1,1)
(2,75,1)
(48,37,1)
(78,21,1)
(77,84,1)
(6,68,1)
(59,70,1)
(69,18,1)
(0,61,1)
(28,8,1)
(17,10,1)
(74,5,1)
(11,37,1)
(51,16,1)
(74,17,1)
(49,82,1)
(70,18,1)
(66,79,1)
(36,35,1)
(48,49,1)
(35,18,1)
(8,37,1)
(32,6,1)
(52,50,1)
(34,32,1)
(4,43,1)
(79,26,1)
(12,39,1)
(20,27,1)
(53,91,1)
(60,31,1)
(11,28,1)
(10,86,1)
(70,9,1)
(91,24,1)
(25,55,1)
(89,15,1)
(75,65,1)
(54,46,1)
(18,92,1)
(42,60,1)
(55,31,1)
(31,36,1)
(37,74,1)
(65,14,1)
(92,45,1)
(19,48,1)
(13,81,1)
(67,4,1)
(62,2,1)
(83,51,1)
(21,34,1)
(6,9,1)
(1,64,1)
(15,58,1)
(9,77,1)
(61,13,1)
(53,91,2)
(15,68,2)
(59,31,2)
(51,31,2)
(9,68,2)
(65,68,2)
(19,68,2)
(35,31,2)
(84,68,2)
(73,68,2)
(48,37,2)
(8,68,2)
(59,70,2)
(39,68,2)
(53,11,2)
(27,68,2)
(17,10,2)
(36,31,2)
(77,37,2)
(16,31,2)
(16,18,2)
(91,11,2)
(69,18,2)
(37,74,2)
(10,86,2)
(24,11,2)
(83,31,2)
(29,78,2)
(11,37,2)
(28,68,2)
(12,68,2)
(44,68,2)
(77,68,2)
(74,5,2)
(31,18,2)
(82,68,2)
(37,68,2)
(70,31,2)
(49,68,2)
(52,50,2)
(74,17,2)
(11,68,2)
(70,9,2)
(57,31,2)
(75,68,2)
(25,31,2)
(58,68,2)
(86,68,2)
(20,68,2)
(48,68,2)
(69,31,2)
(2,68,2)
(55,31,2)
(31,31,2)
(10,68,2)
(14,68,2)
(89,68,2)
(2,75,2)
(17,68,2)
(74,68,2)
(9,77,2)
(47,1,2)
(62,68,2)
(70,67,2)
(48,49,2)
(2,37,2)
(70,18,2)
-----------------------------------
(0,RET)
(1,100-1)
(2,memset(dataBuffer, \'A\', 100-1)
(3,if (dataBuffer == NULL)
(4,NULL)
(5,char *)
(6,dest)
(7,)
(8,dataBuffer)
(9,data = dataBuffer - 8)
(10,100*sizeof(char)
(11,dataBuffer == NULL)
(12,100)
(13,dest)
(14,100)
(15,data)
(16,dest[i])
(17,malloc(100*sizeof(char)
(18,i = 0)
(19,\'\\\\0\')
(20,'A')
(21,1)
(22,'\\\\0')
(23,memset(dataBuffer, 'A', 100-1)
(24,1)
(25,i)
(26,dest)
(27,dataBuffer)
(28,NULL)
(29,memset(dest, \'C\', 100-1)
(30,)
(31,i < 100)
(32,'C')
(33,if(globalTrue)
(34,100)
(35,i)
(36,100)
(37,* dataBuffer = (char *)
(38,data)
(39,dataBuffer)
(40,dataBuffer)
(41,i)
(42,100)
(43,data)
(44,char)
(45,i)
(46,'\\\\0')
(47,dest[100-1])
(48,dataBuffer[100-1])
(49,100-1)
(50,100-1)
(51,data)
(52,dest[100-1])
(53,exit(-1)
(54,dest[100-1] = '\\\\0')
(55,dest)
(56,)
(57,i)
(58,dataBuffer[100-1] = '\\\\0')
(59,dest[i] = data[i])
(60,dest)
(61,printLine(dest)
(62,dataBuffer)
(63,)
(64,1)
(65,1)
(66,1)
(67,data = NULL)
(68,globalTrue)
(69,i++)
(70,data[i])
(71,\'A\')
(72,memset(dest, 'C', 100-1)
(73,100)
(74,(char *)
(75,100-1)
(76,dataBuffer[100-1] = \'\\\\0\')
(77,dataBuffer - 8)
(78,100-1)
(79,100)
(80,)
(81,dest[100-1] = '\\\\0')
(82,1)
(83,i)
(84,8)
(85,'\\\\0')
(86,sizeof(char)
(87,dest)
(88,)
(89,dataBuffer)
(90,for (i = 0; i < 100; i++)
(91,-1)
(92,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^