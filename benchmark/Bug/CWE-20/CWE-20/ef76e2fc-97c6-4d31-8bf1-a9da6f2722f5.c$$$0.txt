-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_add_02_bad()
{
    int64_t data;
    data = 0LL;
    if(1)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%" SCNd64, &data);
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
            int64_t result = data + 1;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
19,20
20,21
21,22
21,23
23,24
24,25
24,26
25,26
26,27
26,28
27,28
29,30
29,31
31,32
32,33
32,34
33,34
36,37
37,38
37,39
38,39
40,41
-----nextToken-----
2,4,9,11,15,16,18,22,28,30,34,35,39,41
-----computeFrom-----
13,14
13,15
32,33
32,34
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ProblemStatement;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_add_02_bad(){    int64_t data;    data = 0LL;    if(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    if(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_add_02_bad()
CWE190_Integer_Overflow__int64_t_fscanf_add_02_bad
{    int64_t data;    data = 0LL;    if(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    if(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
1
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
fscanf (stdin, "%" SCNd64, &data);
if(1)    {        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */            int64_t result = data + 1;            printLongLongLine(result);        }
int64_t result = data + 1;
int64_t result = data + 1;
int64_t
int64_t
result = data + 1
result
= data + 1
data + 1
data
data
1
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(16,5,0)
(15,1,0)
(16,7,0)
(8,14,0)
(3,14,0)
(2,5,0)
(5,16,0)
(9,7,0)
(6,16,0)
(7,12,0)
(10,5,0)
(4,14,0)
(1,16,0)
(0,14,0)
(1,7,0)
(15,16,1)
(2,6,1)
(10,2,1)
(17,1,1)
(17,11,1)
(5,10,1)
(13,4,1)
(6,11,1)
(11,13,1)
(1,15,1)
(1,16,1)
(16,5,1)
(5,11,2)
(10,11,2)
(2,11,2)
(6,11,2)
(16,5,2)
(15,11,2)
(1,16,2)
(16,11,2)
(1,11,2)
-----------------------------------
(0,if(1)
(1,printLongLongLine(result)
(2,data)
(3,if(1)
(4,L)
(5,data + 1)
(6,result)
(7,)
(8,data)
(9,result)
(10,1)
(11,1)
(12,)
(13,1)
(14,)
(15,result)
(16,result = data + 1)
(17,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^