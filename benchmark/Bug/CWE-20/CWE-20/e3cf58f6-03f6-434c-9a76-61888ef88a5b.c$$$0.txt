-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_15_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    switch(6)
    {
    case 6:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    /* spawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
30,33
30,34
30,35
30,36
31,32
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
84,85
85,86
85,87
86,87
90,91
91,92
91,93
91,94
91,95
91,96
91,97
91,98
92,93
94,95
96,97
98,99
100,101
102,103
104,105
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,32,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,82,83,87,88,89,93,95,97,99,101,103,105
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_15_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32spawnl_15_bad()
CWE78_OS_Command_Injection__char_environment_w32spawnl_15_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(8,27,0)
(2,17,0)
(42,46,0)
(15,42,0)
(30,20,0)
(17,22,0)
(38,33,0)
(28,46,0)
(13,39,0)
(7,17,0)
(19,49,0)
(47,12,0)
(29,27,0)
(41,20,0)
(16,42,0)
(50,7,0)
(21,39,0)
(18,20,0)
(42,38,0)
(39,12,0)
(48,4,0)
(46,28,0)
(49,46,0)
(31,39,0)
(5,22,0)
(6,22,0)
(9,39,0)
(7,4,0)
(36,38,0)
(1,39,0)
(43,33,0)
(17,12,0)
(42,0,0)
(45,20,0)
(42,16,0)
(26,46,0)
(32,3,0)
(24,27,0)
(37,28,0)
(22,12,0)
(4,7,0)
(51,12,0)
(11,49,0)
(14,16,0)
(38,42,0)
(27,20,0)
(16,4,0)
(23,12,0)
(40,17,0)
(3,20,0)
(33,38,0)
(16,17,0)
(44,16,0)
(46,27,0)
(33,4,0)
(4,27,0)
(35,33,0)
(25,39,0)
(43,35,1)
(50,48,1)
(48,34,1)
(5,6,1)
(42,16,1)
(33,4,1)
(39,21,1)
(1,13,1)
(42,46,1)
(33,43,1)
(21,1,1)
(16,4,1)
(41,49,1)
(49,46,1)
(28,37,1)
(37,26,1)
(40,22,1)
(11,19,1)
(36,15,1)
(15,16,1)
(16,17,1)
(4,7,1)
(49,11,1)
(22,5,1)
(46,28,1)
(17,22,1)
(16,14,1)
(32,34,1)
(10,39,1)
(38,33,1)
(13,9,1)
(41,42,1)
(7,50,1)
(42,38,1)
(25,18,1)
(17,2,1)
(18,3,1)
(25,41,1)
(14,44,1)
(19,46,1)
(35,36,1)
(31,25,1)
(9,31,1)
(2,40,1)
(7,17,1)
(34,17,1)
(26,4,1)
(44,49,1)
(3,32,1)
(16,4,2)
(4,7,2)
(42,46,2)
(41,34,2)
(49,46,2)
(48,34,2)
(7,17,2)
(36,49,2)
(49,34,2)
(38,49,2)
(42,49,2)
(42,16,2)
(38,33,2)
(28,34,2)
(44,49,2)
(43,49,2)
(35,49,2)
(3,34,2)
(26,34,2)
(15,49,2)
(16,17,2)
(37,34,2)
(32,34,2)
(46,34,2)
(18,34,2)
(46,28,2)
(33,49,2)
(17,22,2)
(14,49,2)
(19,34,2)
(16,49,2)
(11,34,2)
(33,4,2)
(4,34,2)
(7,34,2)
(42,38,2)
(50,34,2)
-----------------------------------
(0,)
(1,COMMAND_ARG3)
(2,dataBuffer)
(3,printLine("Benign, fixed string")
(4,dataLen = strlen(data)
(5,COMMAND_ARG2)
(6,dataBuffer)
(7,strlen(data)
(8,environment)
(9,COMMAND_INT_PATH)
(10,RET)
(11,NULL)
(12,)
(13,COMMAND_ARG1)
(14,dataLen)
(15,environment)
(16,data+dataLen)
(17,data = dataBuffer)
(18,break;)
(19,environment)
(20,)
(21,NULL)
(22,dataBuffer[100] = COMMAND_ARG2)
(23,dataBuffer)
(24,if (environment != NULL)
(25,_P_WAIT)
(26,environment)
(27,)
(28,GETENV(ENV_VARIABLE)
(29,dataLen)
(30,case 6:)
(31,COMMAND_INT_PATH)
(32,"Benign, fixed string")
(33,dataLen-1)
(34,6)
(35,dataLen)
(36,100)
(37,ENV_VARIABLE)
(38,100-dataLen-1)
(39,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(40,data)
(41,break;)
(42,strncat(data+dataLen, environment, 100-dataLen-1)
(43,1)
(44,data)
(45,default:)
(46,* environment = GETENV(ENV_VARIABLE)
(47,switch(6)
(48,dataLen)
(49,environment != NULL)
(50,data)
(51,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^