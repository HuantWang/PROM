-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_system_15_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    switch(6)
    {
    case 6:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
30,33
30,34
30,35
30,36
31,32
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
84,85
85,86
85,87
86,87
90,91
90,92
91,92
91,93
92,93
92,94
93,94
95,96
98,99
98,100
99,100
100,101
100,102
101,102
104,105
105,106
105,107
106,107
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,32,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,82,83,87,88,89,94,96,97,102,103,107,108
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
91,92
91,93
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_system_15_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_environment_system_15_bad()
CWE78_OS_Command_Injection__char_environment_system_15_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(15,54,0)
(20,32,0)
(31,20,0)
(23,51,0)
(36,39,0)
(53,37,0)
(25,36,0)
(35,1,0)
(29,54,0)
(54,36,0)
(16,22,0)
(32,20,0)
(22,34,0)
(22,28,0)
(27,34,0)
(12,0,0)
(20,54,0)
(45,29,0)
(3,1,0)
(42,15,0)
(15,22,0)
(40,33,0)
(4,39,0)
(37,0,0)
(1,51,0)
(17,34,0)
(44,39,0)
(38,7,0)
(18,39,0)
(6,53,0)
(34,22,0)
(46,15,0)
(30,53,0)
(5,36,0)
(54,39,0)
(35,29,0)
(41,43,0)
(24,1,0)
(26,37,0)
(15,35,0)
(29,35,0)
(19,40,0)
(49,54,0)
(34,17,0)
(48,51,0)
(14,32,0)
(52,17,0)
(43,33,0)
(13,51,0)
(21,35,0)
(10,1,0)
(22,37,0)
(22,15,0)
(0,37,0)
(7,51,0)
(47,17,0)
(8,51,0)
(2,54,0)
(37,1,0)
(9,39,0)
(17,35,0)
(22,15,1)
(25,5,1)
(7,38,1)
(37,0,1)
(48,22,1)
(20,54,1)
(43,41,1)
(26,35,1)
(41,32,1)
(22,37,1)
(22,34,1)
(40,19,1)
(2,49,1)
(53,37,1)
(46,53,1)
(48,53,1)
(35,29,1)
(11,40,1)
(12,26,1)
(49,36,1)
(30,6,1)
(0,12,1)
(20,31,1)
(32,20,1)
(6,37,1)
(45,21,1)
(17,47,1)
(21,50,1)
(34,17,1)
(36,25,1)
(47,52,1)
(15,35,1)
(54,36,1)
(15,42,1)
(19,43,1)
(27,16,1)
(16,15,1)
(11,32,1)
(42,46,1)
(29,45,1)
(23,7,1)
(50,54,1)
(38,50,1)
(14,20,1)
(17,35,1)
(31,23,1)
(15,54,1)
(53,30,1)
(54,2,1)
(31,48,1)
(32,14,1)
(52,27,1)
(29,54,1)
(32,20,2)
(48,50,2)
(34,53,2)
(22,34,2)
(47,53,2)
(52,53,2)
(41,32,2)
(7,50,2)
(12,50,2)
(17,35,2)
(40,32,2)
(22,15,2)
(27,53,2)
(22,37,2)
(45,50,2)
(6,50,2)
(46,53,2)
(20,54,2)
(35,29,2)
(15,35,2)
(54,36,2)
(29,54,2)
(37,0,2)
(16,53,2)
(21,50,2)
(0,50,2)
(42,53,2)
(30,50,2)
(34,17,2)
(23,50,2)
(43,32,2)
(22,53,2)
(19,32,2)
(37,50,2)
(15,54,2)
(15,53,2)
(29,50,2)
(53,37,2)
(26,50,2)
(35,50,2)
(17,53,2)
(38,50,2)
(53,50,2)
-----------------------------------
(0,GETENV(ENV_VARIABLE)
(1,)
(2,data_buf)
(3,environment)
(4,data)
(5,data_buf)
(6,environment)
(7,printLine("Benign, fixed string")
(8,default:)
(9,if (SYSTEM(data)
(10,dataLen)
(11,RET)
(12,ENV_VARIABLE)
(13,case 6:)
(14,0)
(15,data+dataLen)
(16,environment)
(17,dataLen-1)
(18,switch(6)
(19,1)
(20,SYSTEM(data)
(21,dataLen)
(22,strncat(data+dataLen, environment, 100-dataLen-1)
(23,break;)
(24,if (environment != NULL)
(25,FULL_COMMAND)
(26,environment)
(27,100)
(28,)
(29,strlen(data)
(30,NULL)
(31,data)
(32,SYSTEM(data)
(33,)
(34,100-dataLen-1)
(35,dataLen = strlen(data)
(36,data_buf[100] = FULL_COMMAND)
(37,* environment = GETENV(ENV_VARIABLE)
(38,"Benign, fixed string")
(39,)
(40,exit(1)
(41,"command execution failed!")
(42,dataLen)
(43,printLine("command execution failed!")
(44,data_buf)
(45,data)
(46,data)
(47,1)
(48,break;)
(49,data)
(50,6)
(51,)
(52,dataLen)
(53,environment != NULL)
(54,data = data_buf)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^