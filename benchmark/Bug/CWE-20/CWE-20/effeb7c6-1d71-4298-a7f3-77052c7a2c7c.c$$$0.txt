-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_44_bad()
{
    int * data;
    /* define a function pointer */
    void (*funcPtr) (int *) = badSink;
    data = NULL;
    /* FLAW: Allocate memory without using sizeof(int) */
    data = (int *)malloc(10);
    if (data == NULL) {exit(-1);}
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
34,35
34,36
35,36
37,38
37,39
38,39
38,40
40,41
42,43
42,44
43,44
46,47
46,48
47,48
47,49
48,49
50,51
52,53
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
61,62
63,64
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,30,32,36,39,41,44,45,49,51,56,58,62,64
-----computeFrom-----
28,29
28,30
34,35
34,36
47,48
47,49
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_44_bad(){    int * data;    /* define a function pointer */    void (*funcPtr) (int *) = badSink;    data = NULL;    /* FLAW: Allocate memory without using sizeof(int) */    data = (int *)malloc(10);    if (data == NULL) {exit(-1);}    /* use the function pointer */    funcPtr(data);}
void
CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_44_bad()
CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_44_bad
{    int * data;    /* define a function pointer */    void (*funcPtr) (int *) = badSink;    data = NULL;    /* FLAW: Allocate memory without using sizeof(int) */    data = (int *)malloc(10);    if (data == NULL) {exit(-1);}    /* use the function pointer */    funcPtr(data);}
int * data;
int * data;
int
* data
*
data
void (*funcPtr) (int *) = badSink;
void (*funcPtr) (int *) = badSink;
void
(*funcPtr) (int *) = badSink
*funcPtr
*
funcPtr
int *
int
*
*

= badSink
badSink
badSink
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)malloc(10);
data = (int *)malloc(10)
data
data
(int *)malloc(10)
int *
int
*
*
malloc(10)
malloc
malloc
10
if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(20,5,0)
(7,9,0)
(15,0,0)
(2,17,0)
(14,22,0)
(10,22,0)
(9,4,0)
(12,17,0)
(21,4,0)
(18,0,0)
(4,13,0)
(25,6,0)
(5,0,0)
(8,0,0)
(13,4,0)
(4,21,0)
(6,9,0)
(11,21,0)
(1,9,0)
(2,16,0)
(24,1,0)
(6,0,0)
(4,9,0)
(19,1,0)
(17,2,0)
(9,0,0)
(3,5,0)
(22,0,0)
(6,9,1)
(25,1,1)
(4,13,1)
(3,20,1)
(6,25,1)
(25,2,1)
(4,21,1)
(9,4,1)
(11,7,1)
(10,14,1)
(2,17,1)
(1,19,1)
(20,22,1)
(12,1,1)
(23,6,1)
(5,3,1)
(7,5,1)
(19,24,1)
(21,11,1)
(24,9,1)
(1,9,1)
(22,10,1)
(17,12,1)
(12,1,2)
(17,1,2)
(1,9,2)
(6,9,2)
(4,13,2)
(4,21,2)
(9,4,2)
(2,1,2)
(2,17,2)
-----------------------------------
(0,)
(1,data == NULL)
(2,exit(-1)
(3,NULL)
(4,(int *)
(5,data = NULL)
(6,funcPtr(data)
(7,data)
(8,data)
(9,data = (int *)
(10,badSink)
(11,10)
(12,1)
(13,int *)
(14,funcPtr)
(15,if (data == NULL)
(16,)
(17,-1)
(18,funcPtr)
(19,NULL)
(20,data)
(21,malloc(10)
(22,(*funcPtr)
(23,RET)
(24,data)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^