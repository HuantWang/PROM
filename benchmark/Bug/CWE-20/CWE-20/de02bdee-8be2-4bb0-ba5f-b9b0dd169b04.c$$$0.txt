-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21_bad()
{
    char * data;
    data = NULL;
    badStatic = 1; /* true */
    data = badSource(data);
    {
        char source[10+1] = SRC_STRING;
        /* POTENTIAL FLAW: data may not have enough space to hold source */
        strcpy(data, source);
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
23,24
24,25
24,26
25,26
27,28
27,29
28,29
30,31
32,33
32,34
32,35
32,36
33,34
34,35
34,36
36,37
36,38
36,39
38,39
39,40
39,41
42,43
43,44
45,46
46,47
46,48
46,49
47,48
49,50
51,52
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
61,62
63,64
-----nextToken-----
2,4,8,10,11,15,17,21,22,26,29,31,35,37,40,41,44,48,50,52,56,58,62,64
-----computeFrom-----
13,14
13,15
19,20
19,21
24,25
24,26
39,40
39,41
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;BinaryExpression;LiteralExpression;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21_bad(){    char * data;    data = NULL;    badStatic = 1; /* true */    data = badSource(data);    {        char source[10+1] = SRC_STRING;        /* POTENTIAL FLAW: data may not have enough space to hold source */        strcpy(data, source);        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21_bad
{    char * data;    data = NULL;    badStatic = 1; /* true */    data = badSource(data);    {        char source[10+1] = SRC_STRING;        /* POTENTIAL FLAW: data may not have enough space to hold source */        strcpy(data, source);        printLine(data);        free(data);    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char source[10+1] = SRC_STRING;        /* POTENTIAL FLAW: data may not have enough space to hold source */        strcpy(data, source);        printLine(data);        free(data);    }
char source[10+1] = SRC_STRING;
char source[10+1] = SRC_STRING;
char
source[10+1] = SRC_STRING
source
[10+1]
10+1
10
1
= SRC_STRING
SRC_STRING
SRC_STRING
strcpy(data, source);
strcpy(data, source)
strcpy
strcpy
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(6,10,0)
(0,4,0)
(20,23,0)
(21,23,0)
(5,4,0)
(9,4,0)
(16,20,0)
(10,6,0)
(24,10,0)
(18,0,0)
(14,5,0)
(15,9,0)
(11,6,0)
(2,0,0)
(20,10,0)
(8,20,0)
(3,1,0)
(19,24,0)
(6,0,0)
(13,9,0)
(24,5,0)
(7,10,0)
(1,5,0)
(22,4,0)
(23,5,0)
(10,4,0)
(17,23,0)
(1,10,0)
(20,5,0)
(6,11,1)
(24,10,1)
(8,23,1)
(16,8,1)
(11,7,1)
(17,10,1)
(20,16,1)
(12,24,1)
(7,9,1)
(9,15,1)
(1,10,1)
(15,13,1)
(1,3,1)
(19,1,1)
(24,19,1)
(20,23,1)
(18,2,1)
(10,6,1)
(0,18,1)
(6,0,1)
(13,0,1)
(20,10,1)
(23,21,1)
(21,17,1)
(3,20,1)
(10,6,2)
(6,0,2)
(1,10,2)
(20,10,2)
(20,23,2)
(24,10,2)
-----------------------------------
(0,data = NULL)
(1,printLine(data)
(2,data)
(3,data)
(4,)
(5,)
(6,badSource(data)
(7,data)
(8,data)
(9,badStatic = 1)
(10,data = badSource(data)
(11,data)
(12,RET)
(13,badStatic)
(14,source)
(15,1)
(16,source)
(17,source)
(18,NULL)
(19,data)
(20,strcpy(data, source)
(21,SRC_STRING)
(22,data)
(23,source[10+1] = SRC_STRING)
(24,free(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^