-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_16_bad()
{
    char * data;
    data = NULL;
    while(1)
    {
        {
            char * dataBuffer = (char *)malloc(100*sizeof(char));
            if (dataBuffer == NULL) {exit(-1);}
            memset(dataBuffer, 'A', 100-1);
            dataBuffer[100-1] = '\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
        break;
    }
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        strcpy(data, source);
        printLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
20,21
20,22
21,22
21,23
21,24
21,25
21,26
22,23
23,24
23,25
25,26
25,27
25,28
28,29
29,30
29,31
30,31
30,32
32,33
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
43,44
43,45
44,45
44,46
45,46
47,48
49,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
57,60
57,61
58,59
60,61
63,64
63,65
66,67
67,68
67,69
68,69
68,70
69,70
71,72
71,73
75,76
76,77
76,78
77,78
79,80
79,81
80,81
84,85
84,86
84,87
84,88
84,89
85,86
86,87
86,88
88,89
88,90
90,91
92,93
93,94
93,95
93,96
93,97
94,95
96,97
99,100
99,101
102,103
103,104
103,105
104,105
104,106
105,106
107,108
107,109
111,112
112,113
112,114
112,115
113,114
115,116
117,118
119,120
120,121
120,122
121,122
123,124
-----nextToken-----
2,4,8,10,11,15,17,19,24,26,27,31,33,36,38,41,42,46,48,53,55,59,61,62,64,65,70,72,73,74,78,81,82,83,87,89,91,95,97,98,100,101,106,108,109,110,114,116,118,122,124
-----computeFrom-----
13,14
13,15
37,38
37,39
44,45
44,46
63,64
63,65
67,68
67,69
71,72
71,73
76,77
76,78
79,80
79,81
99,100
99,101
103,104
103,105
107,108
107,109
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_16_bad(){    char * data;    data = NULL;    while(1)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        break;    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_char_cpy_16_bad()
CWE124_Buffer_Underwrite__malloc_char_cpy_16_bad
{    char * data;    data = NULL;    while(1)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        break;    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
while(1)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        break;    }
1
{        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        break;    }
{            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
break;
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
strcpy(data, source);
strcpy(data, source)
strcpy
strcpy
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(22,68,0)
(57,54,0)
(30,49,0)
(8,63,0)
(7,54,0)
(1,15,0)
(67,50,0)
(0,54,0)
(63,25,0)
(41,62,0)
(42,32,0)
(68,22,0)
(67,40,0)
(42,50,0)
(37,46,0)
(52,40,0)
(42,40,0)
(40,62,0)
(49,30,0)
(45,56,0)
(27,26,0)
(31,32,0)
(20,42,0)
(7,15,0)
(21,57,0)
(56,45,0)
(45,6,0)
(5,7,0)
(30,54,0)
(66,57,0)
(22,32,0)
(26,46,0)
(54,48,0)
(70,59,0)
(50,33,0)
(50,70,0)
(12,62,0)
(29,22,0)
(17,25,0)
(28,15,0)
(35,7,0)
(48,23,0)
(33,54,0)
(69,33,0)
(30,34,0)
(2,26,0)
(18,68,0)
(16,34,0)
(25,63,0)
(71,56,0)
(39,68,0)
(13,3,0)
(64,67,0)
(32,62,0)
(36,42,0)
(34,70,0)
(7,70,0)
(60,40,0)
(9,50,0)
(55,49,0)
(11,33,0)
(46,3,0)
(67,32,0)
(23,48,0)
(4,48,0)
(15,7,0)
(43,22,0)
(54,70,0)
(23,25,0)
(48,4,0)
(46,26,0)
(3,32,0)
(44,30,0)
(48,54,0)
(25,23,0)
(61,49,0)
(53,70,0)
(24,70,0)
(14,59,0)
(33,50,0)
(42,40,1)
(21,66,1)
(5,35,1)
(16,30,1)
(15,1,1)
(54,48,1)
(33,54,1)
(50,33,1)
(29,14,1)
(7,54,1)
(35,57,1)
(66,54,1)
(57,54,1)
(22,68,1)
(67,50,1)
(35,45,1)
(49,55,1)
(30,49,1)
(57,21,1)
(19,67,1)
(20,36,1)
(36,3,1)
(69,11,1)
(55,61,1)
(64,42,1)
(1,28,1)
(71,57,1)
(45,56,1)
(42,50,1)
(48,4,1)
(3,13,1)
(25,63,1)
(42,20,1)
(29,10,1)
(28,5,1)
(33,69,1)
(17,0,1)
(46,26,1)
(44,7,1)
(11,9,1)
(37,22,1)
(2,37,1)
(43,29,1)
(34,16,1)
(68,18,1)
(61,44,1)
(18,39,1)
(48,23,1)
(67,64,1)
(14,50,1)
(7,15,1)
(9,34,1)
(67,40,1)
(27,2,1)
(10,40,1)
(13,46,1)
(40,60,1)
(63,8,1)
(0,10,1)
(30,54,1)
(39,43,1)
(8,17,1)
(23,25,1)
(26,27,1)
(60,52,1)
(56,71,1)
(48,4,2)
(34,10,2)
(33,10,2)
(5,10,2)
(57,54,2)
(22,68,2)
(50,33,2)
(49,10,2)
(57,10,2)
(55,10,2)
(63,10,2)
(67,40,2)
(35,10,2)
(46,26,2)
(17,10,2)
(7,10,2)
(67,50,2)
(30,49,2)
(7,54,2)
(25,63,2)
(42,40,2)
(8,10,2)
(0,10,2)
(66,10,2)
(54,10,2)
(61,10,2)
(50,10,2)
(69,10,2)
(54,48,2)
(30,10,2)
(7,15,2)
(44,10,2)
(23,10,2)
(14,10,2)
(23,25,2)
(45,56,2)
(11,10,2)
(42,50,2)
(1,10,2)
(16,10,2)
(9,10,2)
(45,57,2)
(30,54,2)
(71,57,2)
(33,54,2)
(25,10,2)
(15,10,2)
(48,23,2)
(56,57,2)
(28,10,2)
(48,10,2)
(21,10,2)
-----------------------------------
(0,dataBuffer)
(1,1)
(2,100)
(3,source[100-1] = '\\\\0')
(4,char *)
(5,\'A\')
(6,)
(7,memset(dataBuffer, \'A\', 100-1)
(8,char)
(9,data)
(10,1)
(11,dataBuffer)
(12,data)
(13,'\\\\0')
(14,break;)
(15,100-1)
(16,'\\\\0')
(17,100)
(18,1)
(19,RET)
(20,source)
(21,NULL)
(22,memset(source, 'C', 100-1)
(23,malloc(100*sizeof(char)
(24,dataBuffer)
(25,100*sizeof(char)
(26,100-1)
(27,1)
(28,100)
(29,source)
(30,dataBuffer[100-1])
(31,source)
(32,)
(33,dataBuffer - 8)
(34,dataBuffer[100-1] = \'\\\\0\')
(35,dataBuffer)
(36,data)
(37,source)
(38,'A')
(39,100)
(40,data = NULL)
(41,while(1)
(42,strcpy(data, source)
(43,'C')
(44,dataBuffer)
(45,exit(-1)
(46,source[100-1])
(47,memset(dataBuffer, 'A', 100-1)
(48,(char *)
(49,100-1)
(50,data = dataBuffer - 8)
(51,memset(source, \'C\', 100-1)
(52,data)
(53,if (dataBuffer == NULL)
(54,* dataBuffer = (char *)
(55,1)
(56,-1)
(57,dataBuffer == NULL)
(58,\'\\\\0\')
(59,)
(60,NULL)
(61,100)
(62,)
(63,sizeof(char)
(64,data)
(65,dataBuffer[100-1] = '\\\\0')
(66,dataBuffer)
(67,printLine(data)
(68,100-1)
(69,8)
(70,)
(71,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^