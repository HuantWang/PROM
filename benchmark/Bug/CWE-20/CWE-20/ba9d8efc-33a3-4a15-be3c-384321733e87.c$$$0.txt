-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_console_system_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    char * * dataPtr = (char * *)dataVoidPtr;
    /* dereference dataPtr into data */
    char * data = (*dataPtr);
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
14,18
18,19
19,20
19,21
20,21
20,22
22,23
22,24
25,26
27,28
28,29
28,30
30,31
30,32
30,33
33,34
34,35
35,36
36,37
38,39
38,40
39,40
39,41
40,41
40,42
41,42
43,44
46,47
46,48
47,48
48,49
48,50
49,50
52,53
53,54
53,55
54,55
-----nextToken-----
2,4,6,8,9,13,15,16,17,21,23,24,26,29,31,32,37,42,44,45,50,51,55,56
-----computeFrom-----
39,40
39,41
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_console_system_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    char * * dataPtr = (char * *)dataVoidPtr;    /* dereference dataPtr into data */    char * data = (*dataPtr);    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_console_system_64b_badSink(void * dataVoidPtr)
CWE78_OS_Command_Injection__char_console_system_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    char * * dataPtr = (char * *)dataVoidPtr;    /* dereference dataPtr into data */    char * data = (*dataPtr);    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * * dataPtr = (char * *)dataVoidPtr;
char * * dataPtr = (char * *)dataVoidPtr;
char
* * dataPtr = (char * *)dataVoidPtr
*
*
dataPtr
= (char * *)dataVoidPtr
(char * *)dataVoidPtr
char * *
char
* *
*
*
dataVoidPtr
dataVoidPtr
char * data = (*dataPtr);
char * data = (*dataPtr);
char
* data = (*dataPtr)
*
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(19,14,0)
(19,0,0)
(1,2,0)
(19,21,0)
(4,8,0)
(10,8,0)
(7,13,0)
(15,6,0)
(2,20,0)
(0,19,0)
(16,10,0)
(11,6,0)
(9,20,0)
(12,6,0)
(3,9,0)
(14,6,0)
(14,19,0)
(5,11,0)
(8,10,0)
(11,13,0)
(23,6,0)
(13,14,0)
(18,19,0)
(17,14,0)
(8,11,0)
(13,11,0)
(13,7,1)
(19,21,1)
(10,16,1)
(13,14,1)
(18,17,1)
(8,11,1)
(4,11,1)
(16,8,1)
(22,9,1)
(9,3,1)
(11,13,1)
(10,8,1)
(19,18,1)
(8,4,1)
(2,1,1)
(19,0,1)
(5,14,1)
(1,10,1)
(22,10,1)
(3,2,1)
(7,5,1)
(14,19,1)
(10,8,2)
(8,11,2)
(14,19,2)
(19,21,2)
(2,10,2)
(3,10,2)
(13,14,2)
(9,10,2)
(1,10,2)
(19,0,2)
(11,13,2)
-----------------------------------
(0,char * *)
(1,"command execution failed!")
(2,printLine("command execution failed!")
(3,1)
(4,data)
(5,data)
(6,)
(7,dataPtr)
(8,SYSTEM(data)
(9,exit(1)
(10,SYSTEM(data)
(11,* data = (*dataPtr)
(12,if (SYSTEM(data)
(13,*dataPtr)
(14,* * dataPtr = (char * *)
(15,dataPtr)
(16,0)
(17,dataPtr)
(18,dataVoidPtr)
(19,(char * *)
(20,)
(21,void * dataVoidPtr)
(22,RET)
(23,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^