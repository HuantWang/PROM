-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execl_04_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(STATIC_CONST_TRUE)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* execl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
82,83
82,84
82,85
82,86
82,87
82,88
83,84
85,86
87,88
89,90
91,92
93,94
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,88,90,92,94
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execl_04_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execl_04_bad()
CWE78_OS_Command_Injection__char_environment_execl_04_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(5,35,0)
(44,35,0)
(40,33,0)
(17,8,0)
(8,36,0)
(14,0,0)
(16,33,0)
(15,25,0)
(4,9,0)
(0,1,0)
(18,3,0)
(25,3,0)
(34,38,0)
(22,3,0)
(33,12,0)
(19,35,0)
(7,37,0)
(42,3,0)
(29,12,0)
(24,37,0)
(37,23,0)
(9,23,0)
(6,25,0)
(39,8,0)
(31,23,0)
(23,9,0)
(21,3,0)
(10,8,0)
(20,8,0)
(26,35,0)
(33,17,0)
(25,21,0)
(12,33,0)
(15,17,0)
(41,15,0)
(13,25,0)
(0,23,0)
(38,0,0)
(0,12,0)
(38,17,0)
(0,38,0)
(38,25,0)
(23,8,0)
(28,38,0)
(35,3,0)
(2,21,0)
(43,21,0)
(17,15,0)
(32,17,0)
(12,0,0)
(27,35,0)
(30,25,1)
(14,38,1)
(11,35,1)
(15,41,1)
(5,30,1)
(16,40,1)
(12,33,1)
(4,31,1)
(33,17,1)
(34,37,1)
(43,2,1)
(15,25,1)
(38,17,1)
(23,9,1)
(13,6,1)
(24,7,1)
(33,16,1)
(38,25,1)
(41,32,1)
(29,14,1)
(0,12,1)
(9,4,1)
(7,23,1)
(38,28,1)
(25,21,1)
(27,26,1)
(31,17,1)
(6,21,1)
(26,5,1)
(37,23,1)
(19,27,1)
(32,30,1)
(0,23,1)
(44,19,1)
(25,13,1)
(37,24,1)
(28,34,1)
(17,15,1)
(21,43,1)
(35,44,1)
(0,38,1)
(40,29,1)
(5,0,1)
(5,37,1)
(41,30,2)
(23,9,2)
(4,30,2)
(16,37,2)
(17,30,2)
(40,37,2)
(23,30,2)
(29,37,2)
(17,15,2)
(34,37,2)
(12,33,2)
(0,12,2)
(38,17,2)
(15,25,2)
(28,37,2)
(0,37,2)
(12,37,2)
(33,17,2)
(7,30,2)
(15,30,2)
(38,37,2)
(32,30,2)
(38,25,2)
(0,38,2)
(0,23,2)
(37,23,2)
(9,30,2)
(14,37,2)
(24,30,2)
(31,30,2)
(25,21,2)
(37,30,2)
(33,37,2)
-----------------------------------
(0,strncat(data+dataLen, environment, 100-dataLen-1)
(1,)
(2,dataBuffer)
(3,)
(4,ENV_VARIABLE)
(5,COMMAND_INT_PATH)
(6,data)
(7,environment)
(8,)
(9,GETENV(ENV_VARIABLE)
(10,if (environment != NULL)
(11,RET)
(12,100-dataLen-1)
(13,dataBuffer)
(14,environment)
(15,strlen(data)
(16,1)
(17,dataLen = strlen(data)
(18,data)
(19,COMMAND_ARG3)
(20,environment)
(21,dataBuffer[100] = COMMAND_ARG2)
(22,if(STATIC_CONST_TRUE)
(23,* environment = GETENV(ENV_VARIABLE)
(24,NULL)
(25,data = dataBuffer)
(26,COMMAND_INT_PATH)
(27,COMMAND_ARG1)
(28,dataLen)
(29,100)
(30,STATIC_CONST_TRUE)
(31,environment)
(32,dataLen)
(33,dataLen-1)
(34,data)
(35,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(36,)
(37,environment != NULL)
(38,data+dataLen)
(39,dataLen)
(40,dataLen)
(41,data)
(42,dataBuffer)
(43,COMMAND_ARG2)
(44,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^