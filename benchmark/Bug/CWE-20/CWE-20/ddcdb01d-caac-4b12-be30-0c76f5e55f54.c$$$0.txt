-----label-----
1
-----code-----
void CWE127_Buffer_Underread__malloc_wchar_t_cpy_32_bad()
{
    wchar_t * data;
    wchar_t * *dataPtr1 = &data;
    wchar_t * *dataPtr2 = &data;
    data = NULL;
    {
        wchar_t * data = *dataPtr1;
        {
            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (dataBuffer == NULL) {exit(-1);}
            wmemset(dataBuffer, L'A', 100-1);
            dataBuffer[100-1] = L'\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
        *dataPtr1 = data;
    }
    {
        wchar_t * data = *dataPtr2;
        {
            wchar_t dest[100*2];
            wmemset(dest, L'C', 100*2-1); /* fill with 'C's */
            dest[100*2-1] = L'\0'; /* null terminate */
            /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */
            wcscpy(dest, data);
            printWLine(dest);
            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
             * returned by malloc() so can't safely call free() on it */
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
15,19
19,20
20,21
21,22
23,24
24,25
24,26
26,27
26,28
26,29
26,30
30,31
31,32
32,33
34,35
35,36
35,37
36,37
38,39
40,41
40,42
40,43
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
49,50
51,52
51,53
51,54
51,55
51,56
52,53
53,54
53,55
55,56
55,57
55,58
58,59
59,60
59,61
60,61
60,62
62,63
64,65
64,66
65,66
67,68
67,69
69,70
70,71
70,72
73,74
73,75
74,75
74,76
75,76
77,78
79,80
80,81
81,82
81,83
82,83
84,85
86,87
87,88
87,89
87,90
87,91
88,89
90,91
93,94
93,95
96,97
97,98
97,99
98,99
98,100
99,100
101,102
101,103
105,106
106,107
106,108
107,108
109,110
109,111
110,111
113,114
114,115
114,116
115,116
116,117
118,119
120,121
120,122
121,122
122,123
122,124
124,125
124,126
124,127
127,128
128,129
129,130
131,132
131,133
131,134
131,135
131,136
132,133
133,134
133,135
135,136
135,137
137,138
138,139
138,140
141,142
142,143
142,144
142,145
142,146
143,144
145,146
148,149
148,150
149,150
149,151
153,154
154,155
154,156
155,156
155,157
156,157
158,159
158,160
159,160
159,161
164,165
165,166
165,167
165,168
166,167
168,169
170,171
172,173
173,174
173,175
174,175
176,177
-----nextToken-----
2,4,8,10,11,14,16,17,18,22,25,27,28,29,33,37,39,43,45,46,50,54,56,57,61,63,66,68,71,72,76,78,83,85,89,91,92,94,95,100,102,103,104,108,111,112,117,119,123,125,126,130,134,136,139,140,144,146,147,150,151,152,157,160,161,162,163,167,169,171,175,177
-----computeFrom-----
35,36
35,37
67,68
67,69
74,75
74,76
93,94
93,95
97,98
97,99
101,102
101,103
106,107
106,108
109,110
109,111
114,115
114,116
138,139
138,140
148,149
148,150
149,150
149,151
154,155
154,156
158,159
158,160
159,160
159,161
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE127_Buffer_Underread__malloc_wchar_t_cpy_32_bad(){    wchar_t * data;    wchar_t * *dataPtr1 = &data;    wchar_t * *dataPtr2 = &data;    data = NULL;    {        wchar_t * data = *dataPtr1;        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        *dataPtr1 = data;    }    {        wchar_t * data = *dataPtr2;        {            wchar_t dest[100*2];            wmemset(dest, L'C', 100*2-1); /* fill with 'C's */            dest[100*2-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */            wcscpy(dest, data);            printWLine(dest);            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location             * returned by malloc() so can't safely call free() on it */        }    }}
void
CWE127_Buffer_Underread__malloc_wchar_t_cpy_32_bad()
CWE127_Buffer_Underread__malloc_wchar_t_cpy_32_bad
{    wchar_t * data;    wchar_t * *dataPtr1 = &data;    wchar_t * *dataPtr2 = &data;    data = NULL;    {        wchar_t * data = *dataPtr1;        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        *dataPtr1 = data;    }    {        wchar_t * data = *dataPtr2;        {            wchar_t dest[100*2];            wmemset(dest, L'C', 100*2-1); /* fill with 'C's */            dest[100*2-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */            wcscpy(dest, data);            printWLine(dest);            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location             * returned by malloc() so can't safely call free() on it */        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t * *dataPtr1 = &data;
wchar_t * *dataPtr1 = &data;
wchar_t
* *dataPtr1 = &data
*
*
dataPtr1
= &data
&data
data
data
wchar_t * *dataPtr2 = &data;
wchar_t * *dataPtr2 = &data;
wchar_t
* *dataPtr2 = &data
*
*
dataPtr2
= &data
&data
data
data
data = NULL;
data = NULL
data
data
NULL
NULL
{        wchar_t * data = *dataPtr1;        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        *dataPtr1 = data;    }
wchar_t * data = *dataPtr1;
wchar_t * data = *dataPtr1;
wchar_t
* data = *dataPtr1
*
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
{            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBuffer, L'A', 100-1);
wmemset(dataBuffer, L'A', 100-1)
wmemset
wmemset
dataBuffer
dataBuffer
L'A'
100-1
100
1
dataBuffer[100-1] = L'\0';
dataBuffer[100-1] = L'\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
L'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        wchar_t * data = *dataPtr2;        {            wchar_t dest[100*2];            wmemset(dest, L'C', 100*2-1); /* fill with 'C's */            dest[100*2-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */            wcscpy(dest, data);            printWLine(dest);            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location             * returned by malloc() so can't safely call free() on it */        }    }
wchar_t * data = *dataPtr2;
wchar_t * data = *dataPtr2;
wchar_t
* data = *dataPtr2
*
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            wchar_t dest[100*2];            wmemset(dest, L'C', 100*2-1); /* fill with 'C's */            dest[100*2-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */            wcscpy(dest, data);            printWLine(dest);            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location             * returned by malloc() so can't safely call free() on it */        }
wchar_t dest[100*2];
wchar_t dest[100*2];
wchar_t
dest[100*2]
dest
[100*2]
100*2
100
2
wmemset(dest, L'C', 100*2-1);
wmemset(dest, L'C', 100*2-1)
wmemset
wmemset
dest
dest
L'C'
100*2-1
100*2
100
2
1
dest[100*2-1] = L'\0';
dest[100*2-1] = L'\0'
dest[100*2-1]
dest
dest
100*2-1
100*2
100
2
1
L'\0'
wcscpy(dest, data);
wcscpy(dest, data)
wcscpy
wcscpy
dest
dest
data
data
printWLine(dest);
printWLine(dest)
printWLine
printWLine
dest
dest
-----joern-----
(56,27,0)
(41,37,0)
(19,6,0)
(44,51,0)
(25,51,0)
(41,24,0)
(49,22,0)
(36,14,0)
(30,17,0)
(51,10,0)
(59,42,0)
(64,3,0)
(22,49,0)
(38,24,0)
(9,50,0)
(17,24,0)
(15,22,0)
(54,42,0)
(3,64,0)
(52,27,0)
(50,24,0)
(28,52,0)
(14,36,0)
(42,5,0)
(60,47,0)
(20,33,0)
(22,14,0)
(1,27,0)
(6,19,0)
(35,5,0)
(54,17,0)
(47,19,0)
(31,51,0)
(62,41,0)
(24,41,0)
(55,42,0)
(19,10,0)
(4,5,0)
(47,51,0)
(10,27,0)
(14,27,0)
(7,34,0)
(13,25,0)
(0,26,0)
(45,18,0)
(21,52,0)
(49,5,0)
(0,33,0)
(34,14,0)
(40,36,0)
(16,27,0)
(53,6,0)
(8,3,0)
(32,10,0)
(18,45,0)
(17,54,0)
(63,4,0)
(18,37,0)
(46,42,0)
(29,50,0)
(11,19,0)
(37,41,0)
(43,54,0)
(2,47,0)
(61,18,0)
(33,0,0)
(37,18,0)
(3,27,0)
(58,64,0)
(57,14,0)
(5,27,0)
(4,54,0)
(24,42,0)
(6,3,0)
(39,17,0)
(48,45,0)
(12,49,0)
(34,4,0)
(41,62,0)
(24,41,1)
(58,8,1)
(43,46,1)
(6,3,1)
(3,64,1)
(45,48,1)
(6,53,1)
(64,58,1)
(19,6,1)
(17,24,1)
(21,28,1)
(20,50,1)
(2,60,1)
(40,57,1)
(18,45,1)
(53,11,1)
(34,14,1)
(13,47,1)
(4,54,1)
(52,21,1)
(44,19,1)
(11,4,1)
(33,20,1)
(22,14,1)
(41,62,1)
(30,39,1)
(63,34,1)
(7,54,1)
(22,15,1)
(61,38,1)
(47,19,1)
(15,12,1)
(54,17,1)
(17,30,1)
(14,36,1)
(48,61,1)
(9,29,1)
(28,3,1)
(36,40,1)
(38,49,1)
(46,0,1)
(37,18,1)
(12,52,1)
(47,2,1)
(50,24,1)
(60,44,1)
(29,24,1)
(23,25,1)
(0,33,1)
(4,63,1)
(50,9,1)
(41,37,1)
(49,22,1)
(34,7,1)
(46,50,1)
(8,14,1)
(25,13,1)
(39,43,1)
(33,50,2)
(20,50,2)
(50,24,2)
(34,14,2)
(0,33,2)
(3,64,2)
(49,22,2)
(6,3,2)
(47,19,2)
(4,54,2)
(24,41,2)
(41,37,2)
(14,36,2)
(18,45,2)
(17,24,2)
(54,17,2)
(37,18,2)
(19,6,2)
(22,14,2)
(41,62,2)
(0,50,2)
-----------------------------------
(0,exit(-1)
(1,dataPtr1)
(2,data)
(3,* *dataPtr2 = &data)
(4,*dataPtr1 = data)
(5,)
(6,*dataPtr2)
(7,dataPtr1)
(8,dataPtr2)
(9,NULL)
(10,)
(11,data)
(12,data)
(13,dest)
(14,* *dataPtr1 = &data)
(15,dataPtr1)
(16,data)
(17,dataBuffer - 8)
(18,100*sizeof(wchar_t)
(19,* data = *dataPtr2)
(20,1)
(21,NULL)
(22,*dataPtr1)
(23,RET)
(24,* dataBuffer = (wchar_t *)
(25,printWLine(dest)
(26,)
(27,)
(28,data)
(29,dataBuffer)
(30,8)
(31,dest)
(32,data)
(33,-1)
(34,*dataPtr1)
(35,data)
(36,&data)
(37,malloc(100*sizeof(wchar_t)
(38,dataBuffer)
(39,dataBuffer)
(40,data)
(41,(wchar_t *)
(42,)
(43,data)
(44,'\\\\0')
(45,sizeof(wchar_t)
(46,'\\\\0')
(47,wcscpy(dest, data)
(48,wchar_t)
(49,* data = *dataPtr1)
(50,dataBuffer == NULL)
(51,)
(52,data = NULL)
(53,dataPtr2)
(54,data = dataBuffer - 8)
(55,if (dataBuffer == NULL)
(56,dataPtr2)
(57,dataPtr1)
(58,data)
(59,dataBuffer)
(60,dest)
(61,100)
(62,wchar_t *)
(63,data)
(64,&data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^