-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_17_bad()
{
    int i;
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    for(i = 0; i < 1; i++)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* wexecvp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECVP(COMMAND_INT, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
17,18
18,19
18,20
20,21
20,22
20,23
22,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
33,35
33,36
33,37
34,35
35,36
35,37
36,37
39,40
39,41
40,41
43,44
44,45
46,47
47,48
47,49
47,50
48,49
49,50
49,51
50,51
52,53
52,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
63,64
63,65
63,66
66,67
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
76,77
78,79
79,80
80,81
80,82
80,83
80,84
81,82
83,84
83,85
84,85
86,87
88,89
90,91
90,92
91,92
91,93
93,94
96,97
96,98
97,98
98,99
98,100
100,101
100,102
100,103
100,104
104,105
105,106
105,107
105,108
105,109
106,107
108,109
110,111
112,113
114,115
115,116
115,117
115,118
116,117
118,119
120,121
-----nextToken-----
2,4,8,10,13,15,16,19,21,23,26,30,32,37,38,41,42,45,51,53,57,59,62,64,65,69,71,75,77,82,85,87,89,92,94,95,99,101,102,103,107,109,111,113,117,119,121
-----computeFrom-----
28,29
28,30
35,36
35,37
39,40
39,41
73,74
73,75
83,84
83,85
90,91
90,92
91,92
91,93
-----guardedBy-----
75,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_17_bad(){    int i;    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_17_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_17_bad
{    int i;    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }}
int i;
int i;
int
i
i
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
EXECVP(COMMAND_INT, args);
EXECVP(COMMAND_INT, args)
EXECVP
EXECVP
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(48,40,0)
(7,18,0)
(35,40,0)
(17,49,0)
(14,50,0)
(38,9,0)
(42,13,0)
(49,18,0)
(0,2,0)
(13,42,0)
(7,49,0)
(39,53,0)
(16,31,0)
(2,0,0)
(28,26,0)
(19,9,0)
(36,50,0)
(31,16,0)
(8,7,0)
(51,39,0)
(26,52,0)
(9,15,0)
(42,19,0)
(47,15,0)
(37,39,0)
(2,12,0)
(40,2,0)
(34,42,0)
(13,39,0)
(1,0,0)
(19,15,0)
(6,19,0)
(4,18,0)
(33,2,0)
(18,15,0)
(46,15,0)
(31,39,0)
(24,13,0)
(45,16,0)
(21,9,0)
(43,15,0)
(40,48,0)
(48,13,0)
(22,48,0)
(25,15,0)
(20,29,0)
(2,31,0)
(3,39,0)
(32,29,0)
(44,52,0)
(0,19,0)
(30,7,0)
(23,52,0)
(0,13,0)
(50,52,0)
(41,0,0)
(27,19,0)
(2,40,0)
(11,48,0)
(29,31,0)
(10,31,0)
(2,31,1)
(45,10,1)
(2,40,1)
(2,0,1)
(28,29,1)
(40,48,1)
(48,13,1)
(50,52,1)
(9,21,1)
(42,19,1)
(52,23,1)
(14,26,1)
(27,9,1)
(50,36,1)
(19,6,1)
(48,22,1)
(8,49,1)
(7,30,1)
(34,24,1)
(10,13,1)
(24,50,1)
(0,1,1)
(16,45,1)
(26,28,1)
(0,13,1)
(1,41,1)
(36,14,1)
(14,52,1)
(41,29,1)
(6,27,1)
(49,17,1)
(22,11,1)
(17,50,1)
(42,34,1)
(11,35,1)
(35,33,1)
(19,9,1)
(21,38,1)
(30,8,1)
(20,31,1)
(7,49,1)
(32,20,1)
(33,0,1)
(13,42,1)
(26,52,1)
(31,16,1)
(5,7,1)
(29,32,1)
(44,19,1)
(0,19,1)
(29,31,1)
(28,2,1)
(23,44,1)
(40,29,2)
(16,50,2)
(0,29,2)
(13,42,2)
(41,29,2)
(50,52,2)
(13,50,2)
(14,50,2)
(29,31,2)
(22,29,2)
(11,29,2)
(48,29,2)
(42,19,2)
(0,13,2)
(35,29,2)
(31,50,2)
(36,50,2)
(24,50,2)
(32,50,2)
(1,29,2)
(34,50,2)
(2,31,2)
(50,50,2)
(2,0,2)
(10,50,2)
(29,50,2)
(28,50,2)
(48,13,2)
(26,52,2)
(20,50,2)
(45,50,2)
(2,40,2)
(33,29,2)
(31,16,2)
(0,19,2)
(42,50,2)
(40,48,2)
(26,50,2)
(7,49,2)
(19,9,2)
(2,29,2)
-----------------------------------
(0,data+dataLen)
(1,dataLen)
(2,wcsncat(data+dataLen, environment, 100-dataLen-1)
(3,if (environment != NULL)
(4,args)
(5,RET)
(6,dataBuffer)
(7,EXECVP(COMMAND_INT, args)
(8,COMMAND_INT)
(9,dataBuffer[100] = COMMAND_ARG2)
(10,environment)
(11,dataLen)
(12,)
(13,dataLen = wcslen(data)
(14,i)
(15,)
(16,GETENV(ENV_VARIABLE)
(17,args)
(18,)
(19,data = dataBuffer)
(20,environment)
(21,COMMAND_ARG2)
(22,1)
(23,0)
(24,dataLen)
(25,for(i = 0; i < 1; i++)
(26,i++)
(27,data)
(28,i)
(29,environment != NULL)
(30,args)
(31,* environment = GETENV(ENV_VARIABLE)
(32,NULL)
(33,environment)
(34,data)
(35,100)
(36,1)
(37,dataLen)
(38,dataBuffer)
(39,)
(40,100-dataLen-1)
(41,data)
(42,wcslen(data)
(43,i)
(44,i)
(45,ENV_VARIABLE)
(46,dataBuffer)
(47,data)
(48,dataLen-1)
(49,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(50,i < 1)
(51,environment)
(52,i = 0)
(53,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^