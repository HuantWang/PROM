-----label-----
1
-----code-----
void CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_01_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = wcslen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgetws() failed");
                    /* Restore NUL terminator if fgetws fails */
                    data[dataLen] = L'\0';
                }
                fclose(pFile);
            }
        }
    }
    {
        wchar_t dest[100] = L"";
        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */
        SNPRINTF(dest, 100-1, data);
        printWLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
28,29
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
38,39
40,41
41,42
41,43
42,43
44,45
44,46
47,48
47,49
48,49
48,50
49,50
49,51
51,52
54,55
54,56
55,56
56,57
56,58
57,58
59,60
59,61
59,62
60,61
62,63
65,66
65,67
66,67
66,68
67,68
69,70
71,72
71,73
72,73
72,74
73,74
73,75
74,75
74,76
74,77
74,78
75,76
77,78
77,79
78,79
80,81
82,83
82,84
83,84
83,85
86,87
87,88
87,89
89,90
91,92
93,94
95,96
95,97
96,97
97,98
97,99
98,99
101,102
102,103
102,104
103,104
103,105
104,105
106,107
109,110
110,111
110,112
111,112
113,114
115,116
115,117
115,118
116,117
117,118
117,119
119,120
119,121
119,122
121,122
123,124
125,126
126,127
126,128
126,129
126,130
127,128
129,130
131,132
131,133
134,135
136,137
137,138
137,139
138,139
140,141
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,31,33,37,39,43,45,46,50,52,53,58,61,63,64,68,70,76,79,81,84,85,88,90,92,94,99,100,105,107,108,112,114,118,120,122,124,128,130,132,133,135,139,141
-----computeFrom-----
22,23
22,24
48,49
48,50
49,50
49,51
56,57
56,58
66,67
66,68
73,74
73,75
77,78
77,79
87,88
87,89
102,103
102,104
131,132
131,133
-----guardedBy-----
52,107
70,94
68,114
79,105
90,107
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_01_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    {        wchar_t dest[100] = L"";        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        SNPRINTF(dest, 100-1, data);        printWLine(dest);    }}
void
CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_01_bad()
CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_01_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    {        wchar_t dest[100] = L"";        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        SNPRINTF(dest, 100-1, data);        printWLine(dest);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = L"";
wchar_t dataBuffer[100] = L"";
wchar_t
dataBuffer[100] = L""
dataBuffer
[100]
100
= L""
L""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(100-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
{        wchar_t dest[100] = L"";        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        SNPRINTF(dest, 100-1, data);        printWLine(dest);    }
wchar_t dest[100] = L"";
wchar_t dest[100] = L"";
wchar_t
dest[100] = L""
dest
[100]
100
= L""
L""
SNPRINTF(dest, 100-1, data);
SNPRINTF(dest, 100-1, data)
SNPRINTF
SNPRINTF
dest
dest
100-1
100
1
data
data
printWLine(dest);
printWLine(dest)
printWLine
printWLine
dest
dest
-----joern-----
(27,9,0)
(45,39,0)
(41,44,0)
(49,12,0)
(13,9,0)
(8,16,0)
(12,13,0)
(55,13,0)
(21,31,0)
(35,25,0)
(34,17,0)
(42,44,0)
(3,38,0)
(15,56,0)
(7,13,0)
(4,9,0)
(54,52,0)
(37,31,0)
(20,30,0)
(31,27,0)
(30,31,0)
(47,48,0)
(28,35,0)
(17,36,0)
(1,21,0)
(44,38,0)
(53,17,0)
(40,48,0)
(13,12,0)
(14,36,0)
(22,57,0)
(12,36,0)
(50,14,0)
(15,21,0)
(52,12,0)
(57,35,0)
(2,16,0)
(9,38,0)
(35,9,0)
(33,47,0)
(31,44,0)
(32,30,0)
(27,31,0)
(8,36,0)
(23,6,0)
(43,44,0)
(13,31,0)
(12,52,0)
(35,57,0)
(12,15,0)
(56,15,0)
(58,32,0)
(36,39,0)
(18,25,0)
(5,38,0)
(59,27,0)
(15,12,0)
(0,36,0)
(19,21,0)
(46,35,0)
(25,38,0)
(21,15,0)
(36,14,0)
(10,30,0)
(51,14,0)
(26,57,0)
(30,32,0)
(6,25,0)
(24,9,0)
(29,8,0)
(32,58,1)
(49,15,1)
(0,32,1)
(27,9,1)
(47,33,1)
(24,4,1)
(34,36,1)
(14,51,1)
(8,29,1)
(15,21,1)
(22,26,1)
(29,52,1)
(9,24,1)
(17,36,1)
(4,3,1)
(26,46,1)
(35,57,1)
(12,49,1)
(50,0,1)
(21,31,1)
(10,20,1)
(12,13,1)
(36,14,1)
(33,52,1)
(32,30,1)
(57,22,1)
(53,34,1)
(12,36,1)
(23,35,1)
(29,40,1)
(27,59,1)
(1,19,1)
(30,31,1)
(13,9,1)
(46,18,1)
(55,17,1)
(21,1,1)
(58,30,1)
(35,28,1)
(20,31,1)
(6,23,1)
(52,54,1)
(17,53,1)
(18,32,1)
(15,56,1)
(18,17,1)
(37,9,1)
(8,36,1)
(19,13,1)
(51,50,1)
(18,8,1)
(52,12,1)
(35,9,1)
(7,55,1)
(59,37,1)
(30,10,1)
(28,57,1)
(13,31,1)
(13,7,1)
(11,6,1)
(54,12,1)
(31,27,1)
(12,15,1)
(40,47,1)
(36,14,2)
(33,52,2)
(19,17,2)
(51,32,2)
(55,17,2)
(35,9,2)
(17,36,2)
(27,9,2)
(36,32,2)
(12,13,2)
(12,36,2)
(32,30,2)
(40,52,2)
(1,17,2)
(15,56,2)
(50,32,2)
(17,32,2)
(14,32,2)
(52,17,2)
(12,17,2)
(7,17,2)
(8,36,2)
(15,17,2)
(13,31,2)
(21,17,2)
(13,9,2)
(49,17,2)
(47,52,2)
(30,31,2)
(34,32,2)
(15,21,2)
(0,32,2)
(35,57,2)
(12,15,2)
(29,17,2)
(31,27,2)
(52,12,2)
(54,17,2)
(53,32,2)
(13,17,2)
(21,31,2)
(8,17,2)
-----------------------------------
(0,pFile)
(1,dataLen)
(2,if (fgetws(data+dataLen, (int)
(3,"")
(4,data)
(5,data)
(6,printWLine(dest)
(7,dataLen)
(8,fclose(pFile)
(9,data = dataBuffer)
(10,dataLen)
(11,RET)
(12,fgetws(data+dataLen, (int)
(13,data+dataLen)
(14,fopen(FILENAME, "r")
(15,(int)
(16,)
(17,pFile != NULL)
(18,"")
(19,100)
(20,100)
(21,100-dataLen)
(22,1)
(23,dest)
(24,dataBuffer)
(25,)
(26,100)
(27,wcslen(data)
(28,data)
(29,pFile)
(30,100-dataLen)
(31,dataLen = wcslen(data)
(32,100-dataLen > 1)
(33,"fgetws()
(34,pFile)
(35,SNPRINTF(dest, 100-1, data)
(36,pFile = fopen(FILENAME, "r")
(37,dataLen)
(38,)
(39,)
(40,\\\'\\\\0\\\')
(41,dataLen)
(42,pFile)
(43,if (100-dataLen > 1)
(44,)
(45,if (pFile != NULL)
(46,dest)
(47,printLine("fgetws()
(48,)
(49,pFile)
(50,FILENAME)
(51,"r")
(52,fgetws(data+dataLen, (int)
(53,NULL)
(54,NULL)
(55,data)
(56,int)
(57,100-1)
(58,1)
(59,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^