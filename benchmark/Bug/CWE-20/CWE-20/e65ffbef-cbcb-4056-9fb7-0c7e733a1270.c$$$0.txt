-----label-----
1
-----code-----
static wchar_t * badSource(wchar_t * data)
{
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
28,29
28,30
28,31
31,32
32,33
32,34
33,34
35,36
37,38
37,39
38,39
38,40
39,40
41,42
43,44
44,45
45,46
45,47
45,48
45,49
46,47
48,49
48,50
49,50
51,52
53,54
55,56
55,57
56,57
56,58
58,59
61,62
62,63
-----nextToken-----
2,4,5,7,9,10,16,18,22,24,27,29,30,34,36,40,42,47,50,52,54,57,59,60,63
-----computeFrom-----
38,39
38,40
48,49
48,50
55,56
55,57
56,57
56,58
-----guardedBy-----
40,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static wchar_t * badSource(wchar_t * data){    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    return data;}
static wchar_t
* badSource(wchar_t * data)
*
badSource
wchar_t * data
wchar_t
* data
*
data
{    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    return data;}
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
return data;
data
data
-----joern-----
(15,23,0)
(21,26,0)
(30,28,0)
(29,11,0)
(22,13,0)
(18,26,0)
(12,10,0)
(23,12,0)
(21,15,0)
(8,29,0)
(12,28,0)
(5,23,0)
(22,26,0)
(20,10,0)
(26,6,0)
(22,23,0)
(16,6,0)
(27,10,0)
(6,13,0)
(15,21,0)
(3,2,0)
(29,13,0)
(19,2,0)
(9,21,0)
(23,15,0)
(14,12,0)
(7,29,0)
(4,22,0)
(1,10,0)
(6,26,0)
(2,12,0)
(23,25,0)
(17,22,0)
(24,15,0)
(26,10,0)
(0,21,0)
(28,12,0)
(10,11,0)
(23,22,0)
(23,12,1)
(4,2,1)
(16,18,1)
(28,30,1)
(21,26,1)
(2,12,1)
(29,13,1)
(24,5,1)
(6,16,1)
(17,4,1)
(22,26,1)
(30,14,1)
(29,8,1)
(7,29,1)
(8,2,1)
(8,23,1)
(21,0,1)
(12,28,1)
(14,26,1)
(15,21,1)
(9,24,1)
(2,3,1)
(23,15,1)
(6,13,1)
(19,12,1)
(23,22,1)
(5,22,1)
(26,6,1)
(22,17,1)
(0,9,1)
(22,13,1)
(3,19,1)
(5,2,2)
(7,29,2)
(21,2,2)
(21,26,2)
(22,13,2)
(15,2,2)
(23,22,2)
(24,2,2)
(9,2,2)
(29,13,2)
(0,2,2)
(6,13,2)
(23,12,2)
(2,12,2)
(15,21,2)
(17,2,2)
(12,28,2)
(23,15,2)
(23,2,2)
(26,6,2)
(22,2,2)
(4,2,2)
(22,26,2)
-----------------------------------
(0,1)
(1,dataLen)
(2,environment != NULL)
(3,NULL)
(4,data)
(5,environment)
(6,wcslen(data)
(7,RET)
(8,data)
(9,dataLen)
(10,)
(11,)
(12,* environment = GETENV(ENV_VARIABLE)
(13,wchar_t * data)
(14,environment)
(15,100-dataLen-1)
(16,data)
(17,dataLen)
(18,dataLen)
(19,environment)
(20,environment)
(21,dataLen-1)
(22,data+dataLen)
(23,wcsncat(data+dataLen, environment, 100-dataLen-1)
(24,100)
(25,)
(26,dataLen = wcslen(data)
(27,if (environment != NULL)
(28,GETENV(ENV_VARIABLE)
(29,return data;)
(30,ENV_VARIABLE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^