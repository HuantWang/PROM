-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_01_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    /* spawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
61,64
61,65
62,63
64,65
64,66
65,66
67,68
69,70
71,72
71,73
72,73
72,74
74,75
77,78
78,79
78,80
78,81
78,82
78,83
78,84
78,85
79,80
81,82
83,84
85,86
87,88
89,90
91,92
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,43,45,46,50,52,56,58,63,66,68,70,73,75,76,80,82,84,86,88,90,92
-----computeFrom-----
23,24
23,25
54,55
54,56
64,65
64,66
71,72
71,73
72,73
72,74
-----guardedBy-----
56,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_01_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32spawnl_01_bad()
CWE78_OS_Command_Injection__char_environment_w32spawnl_01_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(20,16,0)
(21,35,0)
(16,40,0)
(0,21,0)
(17,5,0)
(42,14,0)
(4,21,0)
(29,10,0)
(0,16,0)
(39,35,0)
(14,3,0)
(14,42,0)
(9,37,0)
(41,21,0)
(16,14,0)
(26,37,0)
(23,10,0)
(8,14,0)
(37,20,0)
(28,42,0)
(25,10,0)
(27,3,0)
(5,3,0)
(35,36,0)
(22,36,0)
(32,14,0)
(16,20,0)
(16,0,0)
(38,0,0)
(12,10,0)
(15,0,0)
(11,32,0)
(10,36,0)
(13,5,0)
(37,5,0)
(24,13,0)
(18,3,0)
(30,35,0)
(34,32,0)
(7,36,0)
(0,5,0)
(19,10,0)
(2,16,0)
(13,21,0)
(5,13,0)
(20,37,0)
(1,10,0)
(33,20,0)
(3,36,0)
(21,36,0)
(31,3,0)
(32,14,1)
(28,8,1)
(32,34,1)
(37,26,1)
(9,33,1)
(20,37,1)
(13,24,1)
(37,5,1)
(1,25,1)
(16,14,1)
(4,35,1)
(16,0,1)
(2,0,1)
(15,32,1)
(11,14,1)
(5,13,1)
(19,16,1)
(19,32,1)
(21,41,1)
(39,30,1)
(24,17,1)
(0,38,1)
(12,19,1)
(23,29,1)
(35,39,1)
(0,21,1)
(34,11,1)
(8,5,1)
(38,15,1)
(14,42,1)
(10,1,1)
(17,21,1)
(26,9,1)
(25,23,1)
(21,35,1)
(16,20,1)
(41,4,1)
(29,12,1)
(0,5,1)
(13,21,1)
(33,2,1)
(42,28,1)
(6,10,1)
(15,32,2)
(33,32,2)
(13,21,2)
(14,42,2)
(37,32,2)
(26,32,2)
(38,32,2)
(16,0,2)
(9,32,2)
(37,5,2)
(16,14,2)
(21,35,2)
(20,32,2)
(32,14,2)
(5,13,2)
(2,32,2)
(16,20,2)
(0,32,2)
(16,32,2)
(0,5,2)
(20,37,2)
(0,21,2)
-----------------------------------
(0,data+dataLen)
(1,NULL)
(2,environment)
(3,)
(4,data)
(5,dataLen = strlen(data)
(6,RET)
(7,dataBuffer)
(8,environment)
(9,dataLen)
(10,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(11,environment)
(12,COMMAND_INT_PATH)
(13,strlen(data)
(14,* environment = GETENV(ENV_VARIABLE)
(15,data)
(16,strncat(data+dataLen, environment, 100-dataLen-1)
(17,dataLen)
(18,dataLen)
(19,_P_WAIT)
(20,100-dataLen-1)
(21,data = dataBuffer)
(22,data)
(23,COMMAND_ARG1)
(24,data)
(25,COMMAND_ARG3)
(26,1)
(27,environment)
(28,ENV_VARIABLE)
(29,COMMAND_INT_PATH)
(30,dataBuffer)
(31,if (environment != NULL)
(32,environment != NULL)
(33,100)
(34,NULL)
(35,dataBuffer[100] = COMMAND_ARG2)
(36,)
(37,dataLen-1)
(38,dataLen)
(39,COMMAND_ARG2)
(40,)
(41,dataBuffer)
(42,GETENV(ENV_VARIABLE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^