-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__wchar_t_type_overrun_memmove_10_bad()
{
    if(globalTrue)
    {
        {
            charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));
            if (structCharVoid == NULL) {exit(-1);}
            structCharVoid->voidSecond = (void *)SRC_STR;
            /* Print the initial block pointed to by structCharVoid->voidSecond */
            printWLine((wchar_t *)structCharVoid->voidSecond);
            /* FLAW: Use the sizeof(*structCharVoid) which will overwrite the pointer y */
            memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));
            structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'; /* null terminate the string */
            printWLine((wchar_t *)structCharVoid->charFirst);
            printWLine((wchar_t *)structCharVoid->voidSecond);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
10,17
10,18
11,12
12,13
12,14
13,14
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
21,22
23,24
25,26
25,27
26,27
28,29
29,30
29,31
30,31
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
48,50
49,50
52,53
52,54
53,54
53,55
55,56
57,58
59,60
60,61
60,62
61,62
63,64
63,65
64,65
64,66
66,67
68,69
68,70
69,70
72,73
73,74
73,75
73,76
73,77
74,75
76,77
76,78
77,78
80,81
82,83
83,84
84,85
85,86
87,88
88,89
88,90
89,90
89,91
90,91
90,92
91,92
94,95
94,96
95,96
96,97
96,98
97,98
98,99
99,100
99,101
100,101
103,104
104,105
104,106
109,110
110,111
110,112
111,112
113,114
113,115
114,115
114,116
116,117
118,119
118,120
119,120
122,123
123,124
123,125
124,125
126,127
126,128
127,128
127,129
129,130
131,132
131,133
132,133
-----nextToken-----
2,4,8,14,16,17,22,24,27,31,32,36,38,43,45,50,51,54,56,58,62,65,67,70,71,75,78,79,81,86,92,93,101,102,105,106,107,108,112,115,117,120,121,125,128,130,133,134
-----computeFrom-----
34,35
34,36
47,48
47,49
88,89
88,90
94,95
94,96
96,97
96,98
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;UnaryExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;UnaryExpression;BinaryExpression;UnaryExpression;UnaryExpression;FieldReference;IdExpression;Name;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__wchar_t_type_overrun_memmove_10_bad(){    if(globalTrue)    {        {            charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));            if (structCharVoid == NULL) {exit(-1);}            structCharVoid->voidSecond = (void *)SRC_STR;            /* Print the initial block pointed to by structCharVoid->voidSecond */            printWLine((wchar_t *)structCharVoid->voidSecond);            /* FLAW: Use the sizeof(*structCharVoid) which will overwrite the pointer y */            memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));            structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'; /* null terminate the string */            printWLine((wchar_t *)structCharVoid->charFirst);            printWLine((wchar_t *)structCharVoid->voidSecond);        }    }}
void
CWE122_Heap_Based_Buffer_Overflow__wchar_t_type_overrun_memmove_10_bad()
CWE122_Heap_Based_Buffer_Overflow__wchar_t_type_overrun_memmove_10_bad
{    if(globalTrue)    {        {            charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));            if (structCharVoid == NULL) {exit(-1);}            structCharVoid->voidSecond = (void *)SRC_STR;            /* Print the initial block pointed to by structCharVoid->voidSecond */            printWLine((wchar_t *)structCharVoid->voidSecond);            /* FLAW: Use the sizeof(*structCharVoid) which will overwrite the pointer y */            memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));            structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'; /* null terminate the string */            printWLine((wchar_t *)structCharVoid->charFirst);            printWLine((wchar_t *)structCharVoid->voidSecond);        }    }}
if(globalTrue)    {        {            charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));            if (structCharVoid == NULL) {exit(-1);}            structCharVoid->voidSecond = (void *)SRC_STR;            /* Print the initial block pointed to by structCharVoid->voidSecond */            printWLine((wchar_t *)structCharVoid->voidSecond);            /* FLAW: Use the sizeof(*structCharVoid) which will overwrite the pointer y */            memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));            structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'; /* null terminate the string */            printWLine((wchar_t *)structCharVoid->charFirst);            printWLine((wchar_t *)structCharVoid->voidSecond);        }    }
globalTrue
globalTrue
{        {            charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));            if (structCharVoid == NULL) {exit(-1);}            structCharVoid->voidSecond = (void *)SRC_STR;            /* Print the initial block pointed to by structCharVoid->voidSecond */            printWLine((wchar_t *)structCharVoid->voidSecond);            /* FLAW: Use the sizeof(*structCharVoid) which will overwrite the pointer y */            memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));            structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'; /* null terminate the string */            printWLine((wchar_t *)structCharVoid->charFirst);            printWLine((wchar_t *)structCharVoid->voidSecond);        }    }
{            charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));            if (structCharVoid == NULL) {exit(-1);}            structCharVoid->voidSecond = (void *)SRC_STR;            /* Print the initial block pointed to by structCharVoid->voidSecond */            printWLine((wchar_t *)structCharVoid->voidSecond);            /* FLAW: Use the sizeof(*structCharVoid) which will overwrite the pointer y */            memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));            structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'; /* null terminate the string */            printWLine((wchar_t *)structCharVoid->charFirst);            printWLine((wchar_t *)structCharVoid->voidSecond);        }
charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));
charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));
charVoid
charVoid
* structCharVoid = (charVoid *)malloc(sizeof(charVoid))
*
structCharVoid
= (charVoid *)malloc(sizeof(charVoid))
(charVoid *)malloc(sizeof(charVoid))
charVoid *
charVoid
charVoid
*
*
malloc(sizeof(charVoid))
malloc
malloc
sizeof(charVoid)
charVoid
charVoid
charVoid

if (structCharVoid == NULL) {exit(-1);}
structCharVoid == NULL
structCharVoid
structCharVoid
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
structCharVoid->voidSecond = (void *)SRC_STR;
structCharVoid->voidSecond = (void *)SRC_STR
structCharVoid->voidSecond
structCharVoid
structCharVoid
voidSecond
(void *)SRC_STR
void *
void
*
*
SRC_STR
SRC_STR
printWLine((wchar_t *)structCharVoid->voidSecond);
printWLine((wchar_t *)structCharVoid->voidSecond)
printWLine
printWLine
(wchar_t *)structCharVoid->voidSecond
wchar_t *
wchar_t
*
*
structCharVoid->voidSecond
structCharVoid
structCharVoid
voidSecond
memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid));
memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid))
memmove
memmove
structCharVoid->charFirst
structCharVoid
structCharVoid
charFirst
SRC_STR
SRC_STR
sizeof(*structCharVoid)
(*structCharVoid)
*structCharVoid
structCharVoid
structCharVoid
structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0';
structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1] = L'\0'
structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1]
structCharVoid->charFirst
structCharVoid
structCharVoid
charFirst
(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))-1
(sizeof(structCharVoid->charFirst)/sizeof(wchar_t))
sizeof(structCharVoid->charFirst)/sizeof(wchar_t)
sizeof(structCharVoid->charFirst)
(structCharVoid->charFirst)
structCharVoid->charFirst
structCharVoid
structCharVoid
charFirst
sizeof(wchar_t)
wchar_t
wchar_t

1
L'\0'
printWLine((wchar_t *)structCharVoid->charFirst);
printWLine((wchar_t *)structCharVoid->charFirst)
printWLine
printWLine
(wchar_t *)structCharVoid->charFirst
wchar_t *
wchar_t
*
*
structCharVoid->charFirst
structCharVoid
structCharVoid
charFirst
printWLine((wchar_t *)structCharVoid->voidSecond);
printWLine((wchar_t *)structCharVoid->voidSecond)
printWLine
printWLine
(wchar_t *)structCharVoid->voidSecond
wchar_t *
wchar_t
*
*
structCharVoid->voidSecond
structCharVoid
structCharVoid
voidSecond
-----joern-----
(46,25,0)
(53,20,0)
(22,42,0)
(50,31,0)
(31,49,0)
(2,14,0)
(41,49,0)
(32,49,0)
(8,27,0)
(24,14,0)
(39,31,0)
(20,23,0)
(44,23,0)
(26,56,0)
(52,41,0)
(32,44,0)
(6,29,0)
(48,54,0)
(45,5,0)
(47,3,0)
(18,29,0)
(25,44,0)
(25,49,0)
(40,53,0)
(49,23,0)
(14,24,0)
(18,3,0)
(54,22,0)
(11,3,0)
(28,5,0)
(0,27,0)
(22,54,0)
(15,23,0)
(3,11,0)
(56,32,0)
(31,4,0)
(11,49,0)
(23,10,0)
(13,21,0)
(30,11,0)
(24,41,0)
(21,49,0)
(56,38,0)
(53,25,0)
(20,53,0)
(43,34,0)
(29,18,0)
(38,56,0)
(35,4,0)
(36,4,0)
(56,26,0)
(53,40,0)
(17,25,0)
(21,44,0)
(4,36,0)
(4,35,0)
(9,32,0)
(3,18,0)
(5,44,0)
(38,23,0)
(29,49,0)
(33,11,0)
(25,53,0)
(32,56,0)
(41,24,0)
(12,23,0)
(7,49,0)
(44,5,0)
(41,52,0)
(55,21,0)
(49,41,0)
(4,31,0)
(36,23,0)
(3,23,0)
(27,49,0)
(1,32,0)
(5,28,0)
(16,23,0)
(17,46,1)
(2,7,1)
(36,4,1)
(27,8,1)
(14,2,1)
(13,55,1)
(29,6,1)
(47,11,1)
(25,17,1)
(32,44,1)
(20,53,1)
(30,20,1)
(27,49,1)
(24,14,1)
(51,37,1)
(33,30,1)
(41,52,1)
(6,47,1)
(53,25,1)
(29,49,1)
(11,33,1)
(50,12,1)
(4,31,1)
(5,28,1)
(55,22,1)
(45,21,1)
(0,49,1)
(8,0,1)
(3,18,1)
(46,44,1)
(18,29,1)
(1,36,1)
(56,32,1)
(39,50,1)
(4,35,1)
(9,1,1)
(5,45,1)
(3,11,1)
(48,27,1)
(56,26,1)
(53,40,1)
(41,24,1)
(12,3,1)
(11,49,1)
(25,49,1)
(44,5,1)
(31,39,1)
(32,49,1)
(49,41,1)
(38,56,1)
(55,27,1)
(54,48,1)
(51,38,1)
(25,44,1)
(31,49,1)
(22,54,1)
(7,37,1)
(21,13,1)
(21,49,1)
(32,9,1)
(30,37,2)
(41,52,2)
(18,29,2)
(49,41,2)
(11,37,2)
(53,40,2)
(31,37,2)
(5,37,2)
(3,11,2)
(29,37,2)
(29,49,2)
(53,25,2)
(46,37,2)
(3,18,2)
(7,37,2)
(56,26,2)
(41,24,2)
(32,37,2)
(20,53,2)
(31,49,2)
(44,37,2)
(53,37,2)
(38,56,2)
(55,37,2)
(21,37,2)
(4,37,2)
(25,49,2)
(32,44,2)
(50,37,2)
(56,37,2)
(24,37,2)
(4,35,2)
(12,37,2)
(36,37,2)
(18,37,2)
(25,44,2)
(44,5,2)
(9,37,2)
(25,37,2)
(54,27,2)
(22,54,2)
(49,37,2)
(20,37,2)
(56,32,2)
(3,37,2)
(5,28,2)
(1,37,2)
(47,37,2)
(4,31,2)
(13,37,2)
(33,37,2)
(41,37,2)
(27,49,2)
(2,37,2)
(21,49,2)
(38,37,2)
(45,37,2)
(27,37,2)
(24,14,2)
(14,37,2)
(0,37,2)
(17,37,2)
(6,37,2)
(11,49,2)
(32,49,2)
(39,37,2)
(8,37,2)
(48,27,2)
(36,4,2)
(22,27,2)
-----------------------------------
(0,structCharVoid)
(1,structCharVoid)
(2,charVoid)
(3,memmove(structCharVoid->charFirst, SRC_STR, sizeof(*structCharVoid)
(4,(wchar_t *)
(5,(void *)
(6,structCharVoid)
(7,structCharVoid)
(8,NULL)
(9,voidSecond)
(10,)
(11,structCharVoid->charFirst)
(12,'\\\\0')
(13,voidSecond)
(14,sizeof(charVoid)
(15,if (structCharVoid == NULL)
(16,structCharVoid)
(17,voidSecond)
(18,sizeof(*structCharVoid)
(19,\'\\\\0\')
(20,printWLine((wchar_t *)
(21,structCharVoid->voidSecond)
(22,exit(-1)
(23,)
(24,malloc(sizeof(charVoid)
(25,structCharVoid->voidSecond)
(26,wchar_t *)
(27,structCharVoid == NULL)
(28,void *)
(29,*structCharVoid)
(30,structCharVoid)
(31,structCharVoid->charFirst)
(32,structCharVoid->voidSecond)
(33,charFirst)
(34,)
(35,wchar_t *)
(36,printWLine((wchar_t *)
(37,globalTrue)
(38,printWLine((wchar_t *)
(39,charFirst)
(40,wchar_t *)
(41,(charVoid *)
(42,)
(43,if(globalTrue)
(44,structCharVoid->voidSecond = (void *)
(45,SRC_STR)
(46,structCharVoid)
(47,SRC_STR)
(48,1)
(49,* structCharVoid = (charVoid *)
(50,structCharVoid)
(51,RET)
(52,charVoid *)
(53,(wchar_t *)
(54,-1)
(55,structCharVoid)
(56,(wchar_t *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^