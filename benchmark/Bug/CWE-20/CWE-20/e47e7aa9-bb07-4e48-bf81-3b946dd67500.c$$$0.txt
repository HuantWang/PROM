-----label-----
1
-----code-----
char * CWE78_OS_Command_Injection__char_file_execl_61b_badSource(char * data)
{
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
32,33
32,34
33,34
33,35
34,35
34,36
36,37
39,40
39,41
40,41
41,42
41,43
42,43
44,45
44,46
44,47
45,46
47,48
50,51
50,52
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
58,60
59,60
59,61
59,62
59,63
60,61
62,63
62,64
63,64
65,66
67,68
67,69
68,69
68,70
71,72
72,73
72,74
74,75
76,77
78,79
80,81
80,82
81,82
82,83
82,84
83,84
86,87
87,88
87,89
88,89
88,90
89,90
91,92
94,95
95,96
95,97
96,97
98,99
100,101
101,102
-----nextToken-----
2,4,5,7,9,10,16,18,22,24,28,30,31,35,37,38,43,46,48,49,53,55,61,64,66,69,70,73,75,77,79,84,85,90,92,93,97,99,102
-----computeFrom-----
33,34
33,35
34,35
34,36
41,42
41,43
51,52
51,53
58,59
58,60
62,63
62,64
72,73
72,74
87,88
87,89
-----guardedBy-----
37,92
55,79
53,99
64,90
75,92
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE78_OS_Command_Injection__char_file_execl_61b_badSource(char * data){    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    return data;}
char
* CWE78_OS_Command_Injection__char_file_execl_61b_badSource(char * data)
*
CWE78_OS_Command_Injection__char_file_execl_61b_badSource
char * data
char
* data
*
data
{    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    return data;}
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
return data;
data
data
-----joern-----
(18,48,0)
(25,17,0)
(42,26,0)
(33,17,0)
(48,16,0)
(31,26,0)
(49,14,0)
(17,19,0)
(34,10,0)
(43,5,0)
(4,17,0)
(22,2,0)
(27,7,0)
(48,2,0)
(19,15,0)
(2,21,0)
(39,5,0)
(24,19,0)
(6,28,0)
(41,38,0)
(44,29,0)
(13,19,0)
(11,19,0)
(48,28,0)
(3,21,0)
(51,26,0)
(7,15,0)
(30,18,0)
(33,28,0)
(12,33,0)
(4,38,0)
(26,31,0)
(18,17,0)
(20,31,0)
(18,38,0)
(17,41,0)
(36,48,0)
(40,22,0)
(48,18,0)
(4,34,0)
(46,2,0)
(45,18,0)
(47,10,0)
(8,47,0)
(35,33,0)
(50,34,0)
(28,48,0)
(14,2,0)
(7,38,0)
(28,33,0)
(26,17,0)
(32,4,0)
(9,41,0)
(41,17,0)
(14,29,0)
(2,22,0)
(5,2,0)
(37,7,0)
(23,22,0)
(0,4,0)
(28,6,0)
(16,48,0)
(1,16,0)
(7,38,1)
(36,28,1)
(18,38,1)
(49,16,1)
(48,36,1)
(5,39,1)
(4,32,1)
(16,48,1)
(4,17,1)
(20,26,1)
(14,49,1)
(23,46,1)
(48,28,1)
(12,18,1)
(43,2,1)
(46,31,1)
(28,33,1)
(26,17,1)
(8,16,1)
(50,4,1)
(41,38,1)
(31,26,1)
(37,31,1)
(34,50,1)
(32,0,1)
(18,45,1)
(33,35,1)
(48,2,1)
(33,17,1)
(1,48,1)
(30,5,1)
(39,43,1)
(7,37,1)
(40,23,1)
(28,6,1)
(5,2,1)
(45,30,1)
(26,51,1)
(31,20,1)
(22,40,1)
(4,38,1)
(41,9,1)
(9,25,1)
(16,1,1)
(2,22,1)
(49,34,1)
(18,17,1)
(51,42,1)
(0,47,1)
(48,18,1)
(27,7,1)
(37,14,1)
(35,12,1)
(14,2,1)
(37,5,1)
(42,17,1)
(47,8,1)
(17,41,1)
(5,2,2)
(49,5,2)
(48,2,2)
(0,16,2)
(1,5,2)
(14,5,2)
(39,31,2)
(23,31,2)
(4,17,2)
(41,38,2)
(30,5,2)
(4,16,2)
(18,5,2)
(36,5,2)
(50,16,2)
(2,22,2)
(28,6,2)
(45,5,2)
(27,7,2)
(43,31,2)
(12,5,2)
(48,18,2)
(28,33,2)
(2,31,2)
(5,31,2)
(46,31,2)
(48,28,2)
(8,16,2)
(40,31,2)
(4,38,2)
(34,16,2)
(16,48,2)
(18,17,2)
(47,16,2)
(33,5,2)
(22,31,2)
(32,16,2)
(7,38,2)
(18,38,2)
(16,5,2)
(31,26,2)
(28,5,2)
(17,41,2)
(26,17,2)
(33,17,2)
(48,5,2)
(35,5,2)
(14,2,2)
-----------------------------------
(0,data)
(1,NULL)
(2,pFile = fopen(FILENAME, "r")
(3,if (pFile != NULL)
(4,data[dataLen])
(5,pFile != NULL)
(6,int)
(7,return data;)
(8,"fgets()
(9,data)
(10,)
(11,if (100-dataLen > 1)
(12,100)
(13,dataLen)
(14,fclose(pFile)
(15,)
(16,fgets(data+dataLen, (int)
(17,dataLen = strlen(data)
(18,data+dataLen)
(19,)
(20,1)
(21,)
(22,fopen(FILENAME, "r")
(23,FILENAME)
(24,pFile)
(25,dataLen)
(26,100-dataLen)
(27,RET)
(28,(int)
(29,)
(30,data)
(31,100-dataLen > 1)
(32,dataLen)
(33,100-dataLen)
(34,data[dataLen] = \\\'\\\\0\\\')
(35,dataLen)
(36,pFile)
(37,data)
(38,char * data)
(39,NULL)
(40,"r")
(41,strlen(data)
(42,100)
(43,pFile)
(44,if (fgets(data+dataLen, (int)
(45,dataLen)
(46,pFile)
(47,printLine("fgets()
(48,fgets(data+dataLen, (int)
(49,pFile)
(50,\\\'\\\\0\\\')
(51,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^