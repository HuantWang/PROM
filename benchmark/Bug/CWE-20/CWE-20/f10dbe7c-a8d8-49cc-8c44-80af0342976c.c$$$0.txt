-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_07_bad()
{
    char * data;
    data = (char *)malloc(100*sizeof(char));
    if (data == NULL) {exit(-1);}
    if(staticFive==5)
    {
        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
        memset(data, 'A', 100-1); /* fill with 'A's */
        data[100-1] = '\0'; /* null terminate */
    }
    {
        char dest[50] = "";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        strncpy(dest, data, strlen(data));
        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
44,45
44,46
45,46
48,49
48,50
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
68,70
68,71
68,72
68,73
69,70
70,71
70,72
72,73
72,74
72,75
74,75
76,77
78,79
79,80
79,81
79,82
79,83
80,81
82,83
84,85
86,87
86,88
87,88
89,90
91,92
92,93
92,94
93,94
93,95
94,95
96,97
96,98
100,101
101,102
101,103
102,103
104,105
106,107
107,108
107,109
108,109
110,111
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,46,47,52,54,55,57,58,63,65,66,67,71,73,75,77,81,83,85,88,90,95,97,98,99,103,105,109,111
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
56,57
56,58
60,61
60,62
64,65
64,66
92,93
92,94
96,97
96,98
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_07_bad(){    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    if(staticFive==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strncpy(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_07_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_07_bad
{    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    if(staticFive==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strncpy(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
char * data;
char * data;
char
* data
*
data
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
if(staticFive==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }
staticFive==5
staticFive
staticFive
5
{        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }
memset(data, 'A', 100-1);
memset(data, 'A', 100-1)
memset
memset
data
data
'A'
100-1
100
1
data[100-1] = '\0';
data[100-1] = '\0'
data[100-1]
data
data
100-1
100
1
'\0'
{        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strncpy(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }
char dest[50] = "";
char dest[50] = "";
char
dest[50] = ""
dest
[50]
50
= ""
""
strncpy(dest, data, strlen(data));
strncpy(dest, data, strlen(data))
strncpy
strncpy
dest
dest
data
data
strlen(data)
strlen
strlen
data
data
dest[50-1] = '\0';
dest[50-1] = '\0'
dest[50-1]
dest
dest
50-1
50
1
'\0'
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(45,28,0)
(53,12,0)
(38,8,0)
(51,12,0)
(31,8,0)
(35,18,0)
(26,25,0)
(32,56,0)
(15,10,0)
(12,51,0)
(3,36,0)
(26,10,0)
(22,56,0)
(54,18,0)
(40,56,0)
(38,6,0)
(58,15,0)
(25,12,0)
(48,22,0)
(17,3,0)
(9,29,0)
(4,28,0)
(15,31,0)
(25,26,0)
(21,10,0)
(0,38,0)
(3,17,0)
(14,17,0)
(44,21,0)
(12,25,0)
(35,27,0)
(36,22,0)
(19,31,0)
(33,22,0)
(28,10,0)
(1,33,0)
(47,36,0)
(55,33,0)
(13,10,0)
(3,20,0)
(11,13,0)
(50,30,0)
(16,51,0)
(20,22,0)
(21,22,0)
(18,35,0)
(33,10,0)
(33,20,0)
(43,6,0)
(33,13,0)
(30,15,0)
(13,33,0)
(26,42,0)
(5,20,0)
(15,30,0)
(38,10,0)
(49,3,0)
(39,29,0)
(34,10,0)
(24,56,0)
(42,26,0)
(52,17,0)
(6,38,0)
(41,48,0)
(37,38,0)
(2,6,0)
(48,10,0)
(10,56,0)
(7,22,0)
(57,30,0)
(46,20,0)
(10,26,0)
(31,19,1)
(33,13,1)
(58,38,1)
(3,20,1)
(18,54,1)
(46,31,1)
(9,39,1)
(10,26,1)
(26,42,1)
(57,58,1)
(50,57,1)
(28,45,1)
(44,36,1)
(20,5,1)
(16,53,1)
(39,35,1)
(19,15,1)
(48,41,1)
(39,28,1)
(13,10,1)
(43,37,1)
(2,43,1)
(54,28,1)
(45,4,1)
(26,25,1)
(35,18,1)
(51,16,1)
(29,9,1)
(1,55,1)
(28,10,1)
(33,20,1)
(48,10,1)
(21,44,1)
(15,30,1)
(5,46,1)
(38,6,1)
(23,48,1)
(6,2,1)
(14,49,1)
(46,29,1)
(30,50,1)
(3,17,1)
(21,10,1)
(38,10,1)
(49,33,1)
(11,1,1)
(33,10,1)
(52,14,1)
(12,51,1)
(53,34,1)
(17,52,1)
(36,47,1)
(13,11,1)
(37,0,1)
(25,12,1)
(4,10,1)
(55,20,1)
(0,29,1)
(41,21,1)
(15,10,1)
(47,3,1)
(50,29,2)
(31,29,2)
(26,42,2)
(0,29,2)
(35,18,2)
(35,28,2)
(33,20,2)
(21,10,2)
(15,30,2)
(43,29,2)
(54,28,2)
(18,28,2)
(6,29,2)
(10,26,2)
(30,29,2)
(57,29,2)
(38,6,2)
(3,20,2)
(37,29,2)
(19,29,2)
(33,10,2)
(12,51,2)
(38,10,2)
(28,10,2)
(13,10,2)
(48,10,2)
(26,25,2)
(3,17,2)
(38,29,2)
(15,10,2)
(2,29,2)
(58,29,2)
(33,13,2)
(25,12,2)
(15,29,2)
-----------------------------------
(0,data)
(1,data)
(2,1)
(3,dest[50-1])
(4,data)
(5,"")
(6,100-1)
(7,dest)
(8,)
(9,5)
(10,data = (char *)
(11,data)
(12,100*sizeof(char)
(13,strlen(data)
(14,50)
(15,data[100-1])
(16,char)
(17,50-1)
(18,-1)
(19,\\\'\\\\0\\\')
(20,dest[50] = "")
(21,printLine(data)
(22,)
(23,RET)
(24,data)
(25,malloc(100*sizeof(char)
(26,(char *)
(27,)
(28,data == NULL)
(29,staticFive==5)
(30,100-1)
(31,data[100-1] = \\\'\\\\0\\\')
(32,if(staticFive==5)
(33,strncpy(dest, data, strlen(data)
(34,data)
(35,exit(-1)
(36,dest[50-1] = \\\'\\\\0\\\')
(37,\\\'A\\\')
(38,memset(data, \\\'A\\\', 100-1)
(39,staticFive)
(40,if (data == NULL)
(41,data)
(42,char *)
(43,100)
(44,data)
(45,NULL)
(46,dest)
(47,\\\'\\\\0\\\')
(48,free(data)
(49,dest)
(50,1)
(51,sizeof(char)
(52,1)
(53,100)
(54,1)
(55,dest)
(56,)
(57,100)
(58,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^