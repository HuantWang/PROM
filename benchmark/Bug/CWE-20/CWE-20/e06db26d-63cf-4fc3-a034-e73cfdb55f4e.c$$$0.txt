-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_system_15_bad()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    switch(6)
    {
    case 6:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
30,33
30,34
30,35
30,36
31,32
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
84,85
85,86
85,87
86,87
90,91
90,92
91,92
91,93
92,93
92,94
93,94
95,96
98,99
98,100
99,100
100,101
100,102
101,102
104,105
105,106
105,107
106,107
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,32,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,82,83,87,88,89,94,96,97,102,103,107,108
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
91,92
91,93
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_system_15_bad(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_system_15_bad()
CWE78_OS_Command_Injection__wchar_t_environment_system_15_bad
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(51,49,0)
(20,39,0)
(17,48,0)
(31,13,0)
(40,19,0)
(29,19,0)
(50,36,0)
(30,3,0)
(33,46,0)
(2,26,0)
(47,24,0)
(37,52,0)
(19,6,0)
(50,39,0)
(26,19,0)
(42,49,0)
(16,18,0)
(46,49,0)
(1,51,0)
(35,49,0)
(43,48,0)
(18,25,0)
(13,41,0)
(18,50,0)
(27,28,0)
(26,3,0)
(28,50,0)
(19,52,0)
(25,24,0)
(50,18,0)
(3,26,0)
(14,51,0)
(25,18,0)
(7,52,0)
(21,54,0)
(8,6,0)
(4,6,0)
(6,52,0)
(10,49,0)
(45,25,0)
(54,39,0)
(24,29,0)
(23,28,0)
(39,54,0)
(38,29,0)
(39,51,0)
(11,32,0)
(44,25,0)
(34,52,0)
(5,51,0)
(12,52,0)
(28,24,0)
(32,41,0)
(48,39,0)
(15,19,0)
(28,19,0)
(50,28,0)
(24,51,0)
(29,24,0)
(22,50,0)
(0,49,0)
(26,19,1)
(48,43,1)
(38,47,1)
(27,23,1)
(30,26,1)
(48,39,1)
(3,26,1)
(53,3,1)
(45,44,1)
(54,21,1)
(50,18,1)
(39,54,1)
(43,17,1)
(2,42,1)
(6,4,1)
(25,45,1)
(31,32,1)
(3,30,1)
(28,19,1)
(13,31,1)
(50,28,1)
(29,38,1)
(22,28,1)
(29,19,1)
(46,33,1)
(53,13,1)
(4,8,1)
(42,48,1)
(21,20,1)
(33,9,1)
(44,16,1)
(16,22,1)
(24,29,1)
(47,9,1)
(11,3,1)
(28,24,1)
(9,19,1)
(17,39,1)
(0,46,1)
(19,6,1)
(20,24,1)
(2,0,1)
(23,48,1)
(26,2,1)
(32,11,1)
(42,50,1)
(18,25,1)
(40,15,1)
(19,40,1)
(50,39,1)
(28,27,1)
(15,6,1)
(25,24,1)
(20,9,2)
(17,9,2)
(38,9,2)
(11,3,2)
(48,9,2)
(27,48,2)
(16,48,2)
(3,26,2)
(47,9,2)
(22,48,2)
(46,9,2)
(50,39,2)
(28,48,2)
(18,25,2)
(39,9,2)
(18,48,2)
(50,18,2)
(24,29,2)
(29,19,2)
(32,3,2)
(31,3,2)
(19,6,2)
(24,9,2)
(25,48,2)
(43,9,2)
(28,19,2)
(48,39,2)
(42,9,2)
(0,9,2)
(28,24,2)
(50,48,2)
(54,9,2)
(21,9,2)
(45,48,2)
(33,9,2)
(25,24,2)
(44,48,2)
(13,3,2)
(29,9,2)
(26,19,2)
(23,48,2)
(50,28,2)
(39,54,2)
-----------------------------------
(0,break;)
(1,environment)
(2,data)
(3,SYSTEM(data)
(4,FULL_COMMAND)
(5,dataLen)
(6,data_buf[100] = FULL_COMMAND)
(7,data)
(8,data_buf)
(9,6)
(10,default:)
(11,"command execution failed!")
(12,if (SYSTEM(data)
(13,exit(1)
(14,if (environment != NULL)
(15,data)
(16,100)
(17,environment)
(18,100-dataLen-1)
(19,data = data_buf)
(20,environment)
(21,ENV_VARIABLE)
(22,environment)
(23,data)
(24,dataLen = wcslen(data)
(25,dataLen-1)
(26,SYSTEM(data)
(27,dataLen)
(28,data+dataLen)
(29,wcslen(data)
(30,0)
(31,1)
(32,printLine("command execution failed!")
(33,"Benign, fixed string")
(34,switch(6)
(35,case 6:)
(36,)
(37,data_buf)
(38,data)
(39,* environment = GETENV(ENV_VARIABLE)
(40,data_buf)
(41,)
(42,break;)
(43,NULL)
(44,dataLen)
(45,1)
(46,printLine("Benign, fixed string")
(47,dataLen)
(48,environment != NULL)
(49,)
(50,wcsncat(data+dataLen, environment, 100-dataLen-1)
(51,)
(52,)
(53,RET)
(54,GETENV(ENV_VARIABLE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^