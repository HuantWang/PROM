-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_preinc_03_bad()
{
    unsigned int data;
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
31,32
32,33
32,34
32,35
33,34
34,35
35,36
37,38
38,39
38,40
40,41
40,42
42,43
43,44
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,29,30,36,39,41,44,48,50
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
28,29
28,30
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_preinc_03_bad(){    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_preinc_03_bad()
CWE190_Integer_Overflow__unsigned_int_max_preinc_03_bad
{    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
5==5
5
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(18,5,0)
(9,0,0)
(0,4,0)
(11,8,0)
(22,27,0)
(16,27,0)
(17,13,0)
(4,14,0)
(20,26,0)
(23,22,0)
(19,8,0)
(6,5,0)
(18,22,0)
(26,5,0)
(26,22,0)
(21,4,0)
(0,26,0)
(7,22,0)
(26,4,0)
(18,4,0)
(5,25,0)
(12,27,0)
(24,5,0)
(10,27,0)
(3,18,0)
(1,26,0)
(2,13,0)
(22,7,1)
(19,13,1)
(18,3,1)
(26,5,1)
(8,11,1)
(18,5,1)
(6,24,1)
(3,8,1)
(20,1,1)
(26,22,1)
(0,9,1)
(15,0,1)
(2,17,1)
(1,18,1)
(11,19,1)
(5,6,1)
(18,22,1)
(17,22,1)
(24,13,1)
(13,2,1)
(9,26,1)
(15,8,1)
(0,26,1)
(19,5,1)
(7,23,1)
(26,20,1)
(18,5,2)
(3,8,2)
(20,8,2)
(5,13,2)
(0,8,2)
(18,8,2)
(1,8,2)
(18,22,2)
(26,5,2)
(6,13,2)
(9,8,2)
(26,8,2)
(24,13,2)
(0,26,2)
(26,22,2)
-----------------------------------
(0,printUnsignedLine(result)
(1,result)
(2,5)
(3,data)
(4,)
(5,data = UINT_MAX)
(6,UINT_MAX)
(7,0)
(8,5==5)
(9,result)
(10,if(5==5)
(11,5)
(12,if(5==5)
(13,5==5)
(14,)
(15,RET)
(16,data)
(17,5)
(18,++data)
(19,5)
(20,data)
(21,result)
(22,data = 0)
(23,data)
(24,data)
(25,)
(26,result = data)
(27,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^