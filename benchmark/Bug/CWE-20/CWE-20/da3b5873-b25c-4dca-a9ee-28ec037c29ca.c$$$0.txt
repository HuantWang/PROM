-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67_bad()
{
    wchar_t * data;
    CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67_structType myStruct;
    data = NULL;
    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */
    data = (wchar_t *)malloc(50*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    data[0] = L'\0'; /* null terminate */
    myStruct.structFirst = data;
    CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67b_badSink(myStruct);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
57,59
58,59
62,63
63,64
63,65
64,65
64,66
65,66
68,69
70,71
71,72
71,73
72,73
74,75
-----nextToken-----
2,4,8,10,11,15,17,21,23,27,30,32,35,37,40,41,45,47,52,54,59,60,61,66,67,69,73,75
-----computeFrom-----
19,20
19,21
25,26
25,27
36,37
36,38
43,44
43,45
56,57
56,58
63,64
63,65
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67_bad(){    wchar_t * data;    CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67_structType myStruct;    data = NULL;    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (wchar_t *)malloc(50*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    data[0] = L'\0'; /* null terminate */    myStruct.structFirst = data;    CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67b_badSink(myStruct);}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67_bad
{    wchar_t * data;    CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67_structType myStruct;    data = NULL;    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (wchar_t *)malloc(50*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    data[0] = L'\0'; /* null terminate */    myStruct.structFirst = data;    CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67b_badSink(myStruct);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67_structType myStruct;
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67_structType myStruct;
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67_structType
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67_structType
myStruct
myStruct
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)malloc(50*sizeof(wchar_t));
data = (wchar_t *)malloc(50*sizeof(wchar_t))
data
data
(wchar_t *)malloc(50*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(50*sizeof(wchar_t))
malloc
malloc
50*sizeof(wchar_t)
50
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
myStruct.structFirst = data;
myStruct.structFirst = data
myStruct.structFirst
myStruct
myStruct
structFirst
data
data
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67b_badSink(myStruct);
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67b_badSink(myStruct)
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67b_badSink
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67b_badSink
myStruct
myStruct
-----joern-----
(5,6,0)
(0,21,0)
(26,7,0)
(8,29,0)
(2,6,0)
(18,24,0)
(2,26,0)
(23,10,0)
(4,21,0)
(15,3,0)
(19,25,0)
(6,2,0)
(12,25,0)
(16,13,0)
(22,24,0)
(30,6,0)
(13,21,0)
(1,21,0)
(27,10,0)
(17,21,0)
(29,21,0)
(7,26,0)
(26,29,0)
(9,5,0)
(10,29,0)
(18,31,0)
(20,13,0)
(6,5,0)
(26,2,0)
(3,21,0)
(11,12,0)
(28,12,0)
(24,18,0)
(25,21,0)
(25,29,0)
(29,26,0)
(10,27,1)
(5,9,1)
(13,16,1)
(16,20,1)
(25,29,1)
(12,11,1)
(23,29,1)
(6,5,1)
(4,18,1)
(26,2,1)
(25,19,1)
(27,23,1)
(2,6,1)
(29,26,1)
(30,8,1)
(4,10,1)
(15,25,1)
(26,7,1)
(11,28,1)
(28,4,1)
(24,22,1)
(14,3,1)
(19,12,1)
(18,24,1)
(8,13,1)
(9,30,1)
(3,15,1)
(22,10,1)
(10,29,1)
(26,2,2)
(2,6,2)
(29,26,2)
(10,29,2)
(22,10,2)
(6,5,2)
(18,24,2)
(24,10,2)
(25,29,2)
(18,10,2)
(26,7,2)
-----------------------------------
(0,myStruct)
(1,data)
(2,malloc(50*sizeof(wchar_t)
(3,CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67b_badSink(myStruct)
(4,'\\\\0')
(5,sizeof(wchar_t)
(6,50*sizeof(wchar_t)
(7,wchar_t *)
(8,data)
(9,wchar_t)
(10,data == NULL)
(11,structFirst)
(12,myStruct.structFirst)
(13,data = NULL)
(14,RET)
(15,myStruct)
(16,NULL)
(17,if (data == NULL)
(18,exit(-1)
(19,data)
(20,data)
(21,)
(22,1)
(23,data)
(24,-1)
(25,myStruct.structFirst = data)
(26,(wchar_t *)
(27,NULL)
(28,myStruct)
(29,data = (wchar_t *)
(30,50)
(31,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^