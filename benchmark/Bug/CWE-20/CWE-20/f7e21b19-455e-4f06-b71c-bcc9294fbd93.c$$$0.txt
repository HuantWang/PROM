-----label-----
1
-----code-----
static void badSink()
{
    wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_45_badData;
    {
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */
        memcpy(data, source, 100*sizeof(wchar_t));
        data[100-1] = L'\0'; /* Ensure the destination buffer is null terminated */
        printWLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
9,12
12,13
13,14
15,16
15,17
15,18
15,19
15,20
15,21
15,22
16,17
17,18
17,19
19,20
19,21
21,22
23,24
24,25
24,26
24,27
24,28
25,26
27,28
30,31
30,32
33,34
34,35
34,36
35,36
35,37
36,37
38,39
38,40
42,43
43,44
43,45
43,46
43,47
44,45
46,47
48,49
50,51
50,52
52,53
53,54
53,55
56,57
57,58
57,59
58,59
58,60
59,60
61,62
61,63
65,66
66,67
66,68
67,68
69,70
71,72
72,73
72,74
73,74
75,76
-----nextToken-----
2,4,8,10,11,14,18,20,22,26,28,29,31,32,37,39,40,41,45,47,49,51,54,55,60,62,63,64,68,70,74,76
-----computeFrom-----
30,31
30,32
34,35
34,36
38,39
38,40
50,51
50,52
57,58
57,59
61,62
61,63
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_45_badData;    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        memcpy(data, source, 100*sizeof(wchar_t));        data[100-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
static void
badSink()
badSink
{    wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_45_badData;    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        memcpy(data, source, 100*sizeof(wchar_t));        data[100-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_45_badData;
wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_45_badData;
wchar_t
* data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_45_badData
*
data
= CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_45_badData
{        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        memcpy(data, source, 100*sizeof(wchar_t));        data[100-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
memcpy(data, source, 100*sizeof(wchar_t));
memcpy(data, source, 100*sizeof(wchar_t))
memcpy
memcpy
data
data
source
source
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(14,20,0)
(4,11,0)
(12,11,0)
(16,8,0)
(3,10,0)
(20,19,0)
(8,19,0)
(18,16,0)
(16,4,0)
(6,16,0)
(9,8,0)
(15,20,0)
(0,8,0)
(17,8,0)
(16,20,0)
(5,15,0)
(7,20,0)
(13,4,0)
(10,8,0)
(15,8,0)
(4,16,0)
(11,4,0)
(2,19,0)
(10,20,0)
(5,10,1)
(11,12,1)
(13,18,1)
(0,16,1)
(1,15,1)
(12,13,1)
(10,3,1)
(3,0,1)
(14,7,1)
(9,20,1)
(15,5,1)
(4,11,1)
(15,20,1)
(20,14,1)
(16,20,1)
(18,6,1)
(10,20,1)
(16,4,1)
(6,9,1)
(16,4,2)
(15,20,2)
(4,11,2)
(10,20,2)
(16,20,2)
-----------------------------------
(0,'\\\\0')
(1,RET)
(2,data)
(3,data)
(4,100*sizeof(wchar_t)
(5,data)
(6,data)
(7,data)
(8,)
(9,'\\\\0')
(10,printWLine(data)
(11,sizeof(wchar_t)
(12,wchar_t)
(13,100)
(14,CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_45_badData)
(15,free(data)
(16,memcpy(data, source, 100*sizeof(wchar_t)
(17,source)
(18,source)
(19,)
(20,* data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_45_badData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^