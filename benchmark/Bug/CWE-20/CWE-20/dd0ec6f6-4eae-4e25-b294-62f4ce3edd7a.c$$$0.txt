-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_03_bad()
{
    char * data;
    data = NULL;
    if(5==5)
    {
        {
            char * dataBuffer = (char *)malloc(100*sizeof(char));
            if (dataBuffer == NULL) {exit(-1);}
            memset(dataBuffer, 'A', 100-1);
            dataBuffer[100-1] = '\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        strcpy(data, source);
        printLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
22,23
23,24
23,25
23,26
23,27
23,28
24,25
25,26
25,27
27,28
27,29
27,30
30,31
31,32
31,33
32,33
32,34
34,35
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
59,62
59,63
60,61
62,63
65,66
65,67
68,69
69,70
69,71
70,71
70,72
71,72
73,74
73,75
77,78
78,79
78,80
79,80
81,82
81,83
82,83
85,86
85,87
85,88
85,89
85,90
86,87
87,88
87,89
89,90
89,91
91,92
93,94
94,95
94,96
94,97
94,98
95,96
97,98
100,101
100,102
103,104
104,105
104,106
105,106
105,107
106,107
108,109
108,110
112,113
113,114
113,115
113,116
114,115
116,117
118,119
120,121
121,122
121,123
122,123
124,125
-----nextToken-----
2,4,8,10,11,15,17,20,21,26,28,29,33,35,38,40,43,44,48,50,55,57,61,63,64,66,67,72,74,75,76,80,83,84,88,90,92,96,98,99,101,102,107,109,110,111,115,117,119,123,125
-----computeFrom-----
13,14
13,15
19,20
19,21
39,40
39,41
46,47
46,48
65,66
65,67
69,70
69,71
73,74
73,75
78,79
78,80
81,82
81,83
100,101
100,102
104,105
104,106
108,109
108,110
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_03_bad(){    char * data;    data = NULL;    if(5==5)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_char_cpy_03_bad()
CWE124_Buffer_Underwrite__malloc_char_cpy_03_bad
{    char * data;    data = NULL;    if(5==5)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(5==5)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
5==5
5
5
{        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
strcpy(data, source);
strcpy(data, source)
strcpy
strcpy
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(60,37,0)
(61,41,0)
(72,13,0)
(12,26,0)
(62,37,0)
(55,8,0)
(46,36,0)
(15,51,0)
(39,51,0)
(10,32,0)
(37,60,0)
(26,32,0)
(30,65,0)
(24,29,0)
(66,32,0)
(3,13,0)
(19,26,0)
(52,13,0)
(44,60,0)
(32,26,0)
(35,37,0)
(35,52,0)
(68,12,0)
(63,62,0)
(26,65,0)
(47,15,0)
(51,15,0)
(37,65,0)
(54,19,0)
(2,53,0)
(43,22,0)
(1,13,0)
(9,72,0)
(64,29,0)
(21,41,0)
(62,72,0)
(23,65,0)
(15,50,0)
(14,52,0)
(4,26,0)
(20,59,0)
(36,66,0)
(66,36,0)
(35,72,0)
(59,26,0)
(60,26,0)
(6,50,0)
(43,17,0)
(53,59,0)
(32,10,0)
(8,7,0)
(25,8,0)
(36,46,0)
(58,46,0)
(11,7,0)
(12,65,0)
(0,72,0)
(32,66,0)
(62,52,0)
(7,8,0)
(17,43,0)
(12,41,0)
(71,60,0)
(41,12,0)
(28,53,0)
(38,65,0)
(40,51,0)
(59,23,0)
(50,52,0)
(57,36,0)
(27,7,0)
(67,37,0)
(65,56,0)
(59,53,0)
(49,19,0)
(48,17,0)
(34,12,0)
(16,35,0)
(18,23,0)
(7,52,0)
(33,35,0)
(33,50,1)
(9,0,1)
(53,2,1)
(26,32,1)
(57,4,1)
(27,11,1)
(50,6,1)
(18,59,1)
(17,48,1)
(2,28,1)
(12,41,1)
(72,9,1)
(23,18,1)
(8,25,1)
(32,10,1)
(43,17,1)
(35,37,1)
(63,35,1)
(59,26,1)
(7,8,1)
(62,63,1)
(55,27,1)
(41,61,1)
(32,66,1)
(40,47,1)
(15,51,1)
(34,68,1)
(51,39,1)
(29,24,1)
(11,29,1)
(35,72,1)
(48,19,1)
(28,20,1)
(71,67,1)
(64,72,1)
(66,36,1)
(62,72,1)
(19,49,1)
(35,16,1)
(4,29,1)
(25,55,1)
(62,37,1)
(16,33,1)
(5,62,1)
(6,15,1)
(54,26,1)
(61,21,1)
(49,54,1)
(68,43,1)
(11,37,1)
(47,7,1)
(46,58,1)
(12,26,1)
(19,26,1)
(37,60,1)
(44,71,1)
(60,26,1)
(21,34,1)
(36,46,1)
(20,12,1)
(67,23,1)
(39,40,1)
(68,19,1)
(59,53,1)
(60,44,1)
(58,57,1)
(24,64,1)
(41,29,2)
(37,29,2)
(32,66,2)
(66,36,2)
(67,29,2)
(23,29,2)
(2,29,2)
(60,29,2)
(59,29,2)
(54,29,2)
(34,29,2)
(35,72,2)
(46,29,2)
(19,26,2)
(18,29,2)
(48,19,2)
(19,29,2)
(36,29,2)
(60,26,2)
(26,32,2)
(17,19,2)
(68,29,2)
(35,37,2)
(59,26,2)
(61,29,2)
(36,46,2)
(32,29,2)
(49,29,2)
(57,29,2)
(43,19,2)
(58,29,2)
(12,29,2)
(15,51,2)
(71,29,2)
(32,10,2)
(12,41,2)
(62,72,2)
(37,60,2)
(62,37,2)
(66,29,2)
(43,17,2)
(20,29,2)
(53,29,2)
(7,8,2)
(4,29,2)
(59,53,2)
(28,29,2)
(21,29,2)
(26,29,2)
(12,26,2)
(44,29,2)
-----------------------------------
(0,data)
(1,if(5==5)
(2,1)
(3,data)
(4,dataBuffer)
(5,RET)
(6,'\\\\0')
(7,memset(source, 'C', 100-1)
(8,100-1)
(9,NULL)
(10,char *)
(11,source)
(12,memset(dataBuffer, 'A', 100-1)
(13,)
(14,source)
(15,source[100-1])
(16,source)
(17,-1)
(18,'\\\\0')
(19,dataBuffer == NULL)
(20,dataBuffer)
(21,100)
(22,)
(23,dataBuffer[100-1] = '\\\\0')
(24,5)
(25,1)
(26,* dataBuffer = (char *)
(27,'C')
(28,100)
(29,5==5)
(30,dataBuffer)
(31,\'\\\\0\')
(32,(char *)
(33,data)
(34,\'A\')
(35,strcpy(data, source)
(36,100*sizeof(char)
(37,data = dataBuffer - 8)
(38,if (dataBuffer == NULL)
(39,1)
(40,100)
(41,100-1)
(42,memset(source, \'C\', 100-1)
(43,exit(-1)
(44,8)
(45,'A')
(46,sizeof(char)
(47,source)
(48,1)
(49,NULL)
(50,source[100-1] = '\\\\0')
(51,100-1)
(52,)
(53,100-1)
(54,dataBuffer)
(55,100)
(56,)
(57,100)
(58,char)
(59,dataBuffer[100-1])
(60,dataBuffer - 8)
(61,1)
(62,printLine(data)
(63,data)
(64,5)
(65,)
(66,malloc(100*sizeof(char)
(67,data)
(68,dataBuffer)
(69,memset(dataBuffer, \'A\', 100-1)
(70,dataBuffer[100-1] = \'\\\\0\')
(71,dataBuffer)
(72,data = NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^