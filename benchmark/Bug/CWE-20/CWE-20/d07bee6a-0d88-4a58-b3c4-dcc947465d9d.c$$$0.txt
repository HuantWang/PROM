-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_bad()
{
    int i,j;
    unsigned int data;
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
38,39
38,40
39,40
41,42
41,43
42,43
42,44
45,46
46,47
48,49
48,50
48,51
48,52
49,50
50,51
50,52
51,52
54,55
54,56
55,56
58,59
59,60
61,62
62,63
62,64
62,65
63,64
64,65
65,66
67,68
68,69
68,70
70,71
70,72
72,73
73,74
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,8,10,12,15,17,21,22,27,28,31,32,35,40,43,44,47,52,53,56,57,60,66,69,71,74,78,80
-----computeFrom-----
19,20
19,21
25,26
25,27
29,30
29,31
38,39
38,40
50,51
50,52
54,55
54,56
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_bad(){    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_bad()
CWE190_Integer_Overflow__unsigned_int_rand_preinc_17_bad
{    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(10,35,0)
(26,8,0)
(35,8,0)
(22,1,0)
(37,23,0)
(28,38,0)
(17,23,0)
(16,8,0)
(18,9,0)
(18,0,0)
(30,13,0)
(2,31,0)
(31,15,0)
(1,35,0)
(29,20,0)
(1,31,0)
(33,38,0)
(9,18,0)
(25,8,0)
(10,12,0)
(32,8,0)
(40,35,0)
(36,23,0)
(34,1,0)
(6,28,0)
(14,8,0)
(0,18,0)
(27,38,0)
(20,38,0)
(18,31,0)
(1,12,0)
(31,18,0)
(39,3,0)
(3,12,0)
(13,23,0)
(5,10,0)
(11,28,0)
(3,1,0)
(7,17,0)
(12,21,0)
(4,13,0)
(19,12,0)
(10,31,0)
(41,35,0)
(17,7,1)
(30,23,1)
(33,35,1)
(41,40,1)
(29,31,1)
(1,31,1)
(7,3,1)
(31,18,1)
(1,22,1)
(13,4,1)
(34,10,1)
(28,11,1)
(35,41,1)
(1,35,1)
(23,37,1)
(13,23,1)
(20,38,1)
(30,17,1)
(5,13,1)
(18,0,1)
(11,6,1)
(28,38,1)
(6,38,1)
(4,30,1)
(3,39,1)
(22,34,1)
(10,5,1)
(27,33,1)
(37,36,1)
(10,35,1)
(3,1,1)
(36,28,1)
(10,31,1)
(17,23,1)
(6,20,1)
(2,28,1)
(18,9,1)
(38,27,1)
(9,2,1)
(20,29,1)
(24,13,1)
(39,1,1)
(18,9,2)
(39,13,2)
(1,13,2)
(3,1,2)
(34,13,2)
(31,18,2)
(17,23,2)
(18,28,2)
(1,31,2)
(20,28,2)
(30,13,2)
(5,13,2)
(10,31,2)
(22,13,2)
(28,28,2)
(10,13,2)
(1,35,2)
(13,23,2)
(3,13,2)
(6,28,2)
(28,38,2)
(11,28,2)
(7,13,2)
(18,0,2)
(13,13,2)
(9,28,2)
(2,28,2)
(29,28,2)
(10,35,2)
(31,28,2)
(20,38,2)
(4,13,2)
(17,13,2)
-----------------------------------
(0,unsigned int)
(1,result = data)
(2,data)
(3,printUnsignedLine(result)
(4,1)
(5,data)
(6,i)
(7,j)
(8,)
(9,RAND32()
(10,++data)
(11,1)
(12,)
(13,j < 1)
(14,j)
(15,)
(16,data)
(17,j++)
(18,(unsigned int)
(19,result)
(20,i++)
(21,)
(22,data)
(23,j = 0)
(24,RET)
(25,i)
(26,for(i = 0; i < 1; i++)
(27,0)
(28,i < 1)
(29,i)
(30,j)
(31,data = (unsigned int)
(32,for(j = 0; j < 1; j++)
(33,i)
(34,result)
(35,data = 0)
(36,j)
(37,0)
(38,i = 0)
(39,result)
(40,data)
(41,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^