-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_postinc_08_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
36,39
37,38
38,39
39,40
41,42
42,43
42,44
44,45
44,46
46,47
47,48
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,40,43,45,48,52,54
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_postinc_08_bad(){    int data;    /* Initialize data */    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_postinc_08_bad()
CWE190_Integer_Overflow__int_fscanf_postinc_08_bad
{    int data;    /* Initialize data */    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(12,3,0)
(15,3,0)
(8,3,0)
(19,10,0)
(22,8,0)
(4,19,0)
(25,3,0)
(10,19,0)
(24,11,0)
(7,10,0)
(14,5,0)
(15,5,0)
(23,25,0)
(10,17,0)
(19,5,0)
(0,15,0)
(3,6,0)
(2,11,0)
(1,10,0)
(5,11,0)
(21,5,0)
(8,15,0)
(25,5,0)
(18,15,0)
(16,11,0)
(18,25,1)
(9,10,1)
(14,21,1)
(1,20,1)
(19,4,1)
(25,23,1)
(20,5,1)
(4,7,1)
(25,5,1)
(10,19,1)
(13,9,1)
(15,5,1)
(9,20,1)
(5,14,1)
(22,15,1)
(7,1,1)
(23,9,1)
(0,18,1)
(19,5,1)
(8,22,1)
(15,0,1)
(8,15,1)
(13,8,1)
(4,20,2)
(19,20,2)
(25,9,2)
(23,9,2)
(22,9,2)
(18,9,2)
(10,20,2)
(8,15,2)
(1,20,2)
(25,5,2)
(10,19,2)
(19,5,2)
(0,9,2)
(8,9,2)
(7,20,2)
(15,5,2)
(15,9,2)
-----------------------------------
(0,data)
(1,stdin)
(2,if(staticReturnsTrue()
(3,)
(4,data)
(5,data = 0)
(6,)
(7,"%d")
(8,printIntLine(result)
(9,staticReturnsTrue()
(10,fscanf(stdin, "%d", &data)
(11,)
(12,result)
(13,RET)
(14,0)
(15,result = data)
(16,if(staticReturnsTrue()
(17,)
(18,result)
(19,&data)
(20,staticReturnsTrue()
(21,data)
(22,result)
(23,data)
(24,data)
(25,data++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^