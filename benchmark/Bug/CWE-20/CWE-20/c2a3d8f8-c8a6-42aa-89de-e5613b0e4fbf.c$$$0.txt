-----label-----
1
-----code-----
void CWE416_Use_After_Free__malloc_free_int64_t_06_bad()
{
    int64_t * data;
    /* Initialize data */
    data = NULL;
    if(STATIC_CONST_FIVE==5)
    {
        data = (int64_t *)malloc(100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        {
            size_t i;
            for(i = 0; i < 100; i++)
            {
                data[i] = 5LL;
            }
        }
        /* POTENTIAL FLAW: Free data in the source - the bad sink attempts to use data */
        free(data);
    }
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use of data that may have been freed */
        printLongLongLine(data[0]);
        /* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
24,28
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
60,61
60,62
61,62
63,64
65,66
65,67
65,68
65,69
66,67
67,68
67,69
68,69
71,72
71,73
72,73
75,76
76,77
78,79
79,80
80,81
80,82
81,82
81,83
82,83
84,85
87,88
88,89
88,90
89,90
91,92
93,94
93,95
94,95
94,96
95,96
98,99
99,100
100,101
100,102
101,102
103,104
103,105
104,105
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,39,43,44,48,50,55,57,62,64,69,70,73,74,77,83,85,86,90,92,96,97,102,105,106
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
38,39
38,40
46,47
46,48
67,68
67,69
71,72
71,73
80,81
80,82
94,95
94,96
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE416_Use_After_Free__malloc_free_int64_t_06_bad(){    int64_t * data;    /* Initialize data */    data = NULL;    if(STATIC_CONST_FIVE==5)    {        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        {            size_t i;            for(i = 0; i < 100; i++)            {                data[i] = 5LL;            }        }        /* POTENTIAL FLAW: Free data in the source - the bad sink attempts to use data */        free(data);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use of data that may have been freed */        printLongLongLine(data[0]);        /* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */    }}
void
CWE416_Use_After_Free__malloc_free_int64_t_06_bad()
CWE416_Use_After_Free__malloc_free_int64_t_06_bad
{    int64_t * data;    /* Initialize data */    data = NULL;    if(STATIC_CONST_FIVE==5)    {        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        {            size_t i;            for(i = 0; i < 100; i++)            {                data[i] = 5LL;            }        }        /* POTENTIAL FLAW: Free data in the source - the bad sink attempts to use data */        free(data);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use of data that may have been freed */        printLongLongLine(data[0]);        /* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(STATIC_CONST_FIVE==5)    {        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        {            size_t i;            for(i = 0; i < 100; i++)            {                data[i] = 5LL;            }        }        /* POTENTIAL FLAW: Free data in the source - the bad sink attempts to use data */        free(data);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        {            size_t i;            for(i = 0; i < 100; i++)            {                data[i] = 5LL;            }        }        /* POTENTIAL FLAW: Free data in the source - the bad sink attempts to use data */        free(data);    }
data = (int64_t *)malloc(100*sizeof(int64_t));
data = (int64_t *)malloc(100*sizeof(int64_t))
data
data
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
{            size_t i;            for(i = 0; i < 100; i++)            {                data[i] = 5LL;            }        }
size_t i;
size_t i;
size_t
size_t
i
i
for(i = 0; i < 100; i++)            {                data[i] = 5LL;            }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{                data[i] = 5LL;            }
data[i] = 5LL;
data[i] = 5LL
data[i]
data
data
i
i
5LL
free(data);
free(data)
free
free
data
data
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use of data that may have been freed */        printLongLongLine(data[0]);        /* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use of data that may have been freed */        printLongLongLine(data[0]);        /* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */    }
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
-----joern-----
(17,27,0)
(15,38,0)
(30,14,0)
(28,23,0)
(4,32,0)
(1,9,0)
(7,5,0)
(46,36,0)
(32,5,0)
(20,44,0)
(24,9,0)
(37,49,0)
(48,32,0)
(27,17,0)
(19,16,0)
(33,39,0)
(17,5,0)
(12,5,0)
(41,2,0)
(23,9,0)
(18,26,0)
(22,9,0)
(44,20,0)
(5,8,0)
(26,2,0)
(16,8,0)
(44,45,0)
(42,2,0)
(3,23,0)
(46,26,0)
(46,5,0)
(49,27,0)
(17,11,0)
(29,8,0)
(27,49,0)
(36,13,0)
(36,46,0)
(34,14,0)
(25,31,0)
(40,12,0)
(12,8,0)
(6,20,0)
(47,2,0)
(38,49,0)
(49,38,0)
(51,22,0)
(21,39,0)
(10,46,0)
(5,17,0)
(35,46,0)
(50,16,0)
(0,26,0)
(11,17,0)
(14,30,1)
(32,5,1)
(15,37,1)
(46,5,1)
(5,17,1)
(30,34,1)
(38,15,1)
(1,24,1)
(23,3,1)
(46,10,1)
(40,23,1)
(25,23,1)
(51,25,1)
(49,38,1)
(28,9,1)
(6,32,1)
(10,35,1)
(24,32,1)
(22,9,1)
(34,39,1)
(35,14,1)
(0,18,1)
(43,14,1)
(22,51,1)
(21,26,1)
(23,9,1)
(17,11,1)
(48,4,1)
(24,44,1)
(32,48,1)
(9,1,1)
(17,27,1)
(44,20,1)
(12,5,1)
(43,36,1)
(27,49,1)
(3,28,1)
(12,40,1)
(39,33,1)
(26,0,1)
(20,6,1)
(28,22,1)
(33,21,1)
(37,7,1)
(4,5,1)
(34,12,1)
(46,26,1)
(7,39,1)
(36,46,1)
(17,39,2)
(20,32,2)
(25,23,2)
(40,39,2)
(23,9,2)
(3,23,2)
(37,39,2)
(46,5,2)
(28,39,2)
(15,39,2)
(44,20,2)
(5,39,2)
(32,5,2)
(4,39,2)
(49,38,2)
(49,39,2)
(44,32,2)
(38,39,2)
(48,39,2)
(22,9,2)
(27,49,2)
(10,14,2)
(28,23,2)
(5,17,2)
(6,32,2)
(27,39,2)
(23,23,2)
(36,14,2)
(46,14,2)
(9,39,2)
(35,14,2)
(12,39,2)
(22,23,2)
(32,39,2)
(1,39,2)
(3,39,2)
(12,5,2)
(46,26,2)
(17,11,2)
(17,27,2)
(36,46,2)
(23,39,2)
(24,39,2)
(7,39,2)
(51,23,2)
-----------------------------------
(0,NULL)
(1,0)
(2,)
(3,100)
(4,data)
(5,data = (int64_t *)
(6,1)
(7,data)
(8,)
(9,i = 0)
(10,0)
(11,int64_t *)
(12,free(data)
(13,)
(14,STATIC_CONST_FIVE==5)
(15,int64_t)
(16,)
(17,(int64_t *)
(18,data)
(19,i)
(20,-1)
(21,STATIC_CONST_FIVE)
(22,i++)
(23,i < 100)
(24,i)
(25,L)
(26,data = NULL)
(27,malloc(100*sizeof(int64_t)
(28,i)
(29,if (data == NULL)
(30,5)
(31,)
(32,data == NULL)
(33,5)
(34,STATIC_CONST_FIVE)
(35,data)
(36,printLongLongLine(data[0])
(37,100)
(38,sizeof(int64_t)
(39,STATIC_CONST_FIVE==5)
(40,data)
(41,data)
(42,if(STATIC_CONST_FIVE==5)
(43,RET)
(44,exit(-1)
(45,)
(46,data[0])
(47,if(STATIC_CONST_FIVE==5)
(48,NULL)
(49,100*sizeof(int64_t)
(50,for(i = 0; i < 100; i++)
(51,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^