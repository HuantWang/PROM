-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_square_31_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    /* POTENTIAL FLAW: Use the maximum value for this type */
    data = INT_MAX;
    {
        int dataCopy = data;
        int data = dataCopy;
        {
            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
            int result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
23,24
24,25
24,26
26,27
26,28
28,29
29,30
31,32
32,33
32,34
34,35
34,36
36,37
37,38
39,40
39,41
40,41
41,42
41,43
43,44
43,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,21,25,27,30,33,35,38,42,44,48,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_square_31_bad(){    int data;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Use the maximum value for this type */    data = INT_MAX;    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_square_31_bad()
CWE190_Integer_Overflow__int_max_square_31_bad
{    int data;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Use the maximum value for this type */    data = INT_MAX;    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
{        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
int dataCopy = data;
int dataCopy = data;
int
dataCopy = data
dataCopy
= data
data
data
int data = dataCopy;
int data = dataCopy;
int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(22,23,0)
(15,17,0)
(8,23,0)
(1,8,0)
(9,15,0)
(2,24,0)
(20,11,0)
(3,15,0)
(16,22,0)
(0,22,0)
(7,22,0)
(26,9,0)
(13,8,0)
(24,23,0)
(11,15,0)
(5,9,0)
(9,16,0)
(18,23,0)
(14,8,0)
(25,24,0)
(15,9,0)
(6,1,0)
(12,17,0)
(11,17,0)
(1,22,0)
(16,1,0)
(19,16,0)
(21,16,0)
(4,1,0)
(17,22,0)
(8,14,1)
(9,16,1)
(20,15,1)
(11,15,1)
(16,21,1)
(1,8,1)
(14,13,1)
(4,8,1)
(1,6,1)
(9,5,1)
(26,3,1)
(5,26,1)
(3,16,1)
(13,24,1)
(10,11,1)
(16,1,1)
(24,2,1)
(2,25,1)
(6,4,1)
(19,1,1)
(11,20,1)
(15,9,1)
(21,19,1)
(16,1,2)
(9,16,2)
(15,9,2)
(1,8,2)
(11,15,2)
-----------------------------------
(0,data)
(1,dataCopy = data)
(2,0)
(3,result)
(4,dataCopy)
(5,data)
(6,data)
(7,dataCopy)
(8,data = INT_MAX)
(9,data * data)
(10,RET)
(11,printIntLine(result)
(12,result)
(13,data)
(14,INT_MAX)
(15,result = data * data)
(16,data = dataCopy)
(17,)
(18,data)
(19,data)
(20,result)
(21,dataCopy)
(22,)
(23,)
(24,data = 0)
(25,data)
(26,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^