-----label-----
1
-----code-----
void CWE126_Buffer_Overread__malloc_wchar_t_memmove_34_bad()
{
    wchar_t * data;
    CWE126_Buffer_Overread__malloc_wchar_t_memmove_34_unionType myUnion;
    data = NULL;
    /* FLAW: Use a small buffer */
    data = (wchar_t *)malloc(50*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    wmemset(data, L'A', 50-1); /* fill with 'A's */
    data[50-1] = L'\0'; /* null terminate */
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        {
            wchar_t dest[100];
            wmemset(dest, L'C', 100-1);
            dest[100-1] = L'\0'; /* null terminate */
            /* POTENTIAL FLAW: using memmove with the length of the dest where data
             * could be smaller than dest causing buffer overread */
            memmove(dest, data, wcslen(dest)*sizeof(wchar_t));
            dest[100-1] = L'\0';
            printWLine(dest);
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
56,59
56,60
57,58
59,60
62,63
62,64
65,66
66,67
66,68
67,68
67,69
68,69
70,71
70,72
74,75
75,76
75,77
76,77
76,78
77,78
80,81
82,83
82,84
83,84
84,85
84,86
86,87
86,88
86,89
89,90
90,91
90,92
91,92
94,95
94,96
94,97
94,98
94,99
94,100
94,101
95,96
96,97
96,98
98,99
98,100
100,101
102,103
103,104
103,105
103,106
103,107
104,105
106,107
109,110
109,111
112,113
113,114
113,115
114,115
114,116
115,116
117,118
117,119
121,122
122,123
122,124
122,125
122,126
123,124
125,126
127,128
129,130
129,131
130,131
130,132
131,132
133,134
135,136
136,137
136,138
139,140
140,141
140,142
141,142
141,143
142,143
144,145
144,146
148,149
149,150
149,151
150,151
152,153
154,155
155,156
155,157
156,157
158,159
-----nextToken-----
2,4,8,10,11,15,17,21,23,27,30,32,35,37,40,41,45,47,52,54,58,60,61,63,64,69,71,72,73,78,79,81,85,87,88,92,93,97,99,101,105,107,108,110,111,116,118,119,120,124,126,128,132,134,137,138,143,145,146,147,151,153,157,159
-----computeFrom-----
19,20
19,21
25,26
25,27
36,37
36,38
43,44
43,45
62,63
62,64
66,67
66,68
70,71
70,72
75,76
75,77
109,110
109,111
113,114
113,115
117,118
117,119
129,130
129,131
140,141
140,142
144,145
144,146
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE126_Buffer_Overread__malloc_wchar_t_memmove_34_bad(){    wchar_t * data;    CWE126_Buffer_Overread__malloc_wchar_t_memmove_34_unionType myUnion;    data = NULL;    /* FLAW: Use a small buffer */    data = (wchar_t *)malloc(50*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    wmemset(data, L'A', 50-1); /* fill with 'A's */    data[50-1] = L'\0'; /* null terminate */    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t dest[100];            wmemset(dest, L'C', 100-1);            dest[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: using memmove with the length of the dest where data             * could be smaller than dest causing buffer overread */            memmove(dest, data, wcslen(dest)*sizeof(wchar_t));            dest[100-1] = L'\0';            printWLine(dest);            free(data);        }    }}
void
CWE126_Buffer_Overread__malloc_wchar_t_memmove_34_bad()
CWE126_Buffer_Overread__malloc_wchar_t_memmove_34_bad
{    wchar_t * data;    CWE126_Buffer_Overread__malloc_wchar_t_memmove_34_unionType myUnion;    data = NULL;    /* FLAW: Use a small buffer */    data = (wchar_t *)malloc(50*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    wmemset(data, L'A', 50-1); /* fill with 'A's */    data[50-1] = L'\0'; /* null terminate */    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t dest[100];            wmemset(dest, L'C', 100-1);            dest[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: using memmove with the length of the dest where data             * could be smaller than dest causing buffer overread */            memmove(dest, data, wcslen(dest)*sizeof(wchar_t));            dest[100-1] = L'\0';            printWLine(dest);            free(data);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE126_Buffer_Overread__malloc_wchar_t_memmove_34_unionType myUnion;
CWE126_Buffer_Overread__malloc_wchar_t_memmove_34_unionType myUnion;
CWE126_Buffer_Overread__malloc_wchar_t_memmove_34_unionType
CWE126_Buffer_Overread__malloc_wchar_t_memmove_34_unionType
myUnion
myUnion
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)malloc(50*sizeof(wchar_t));
data = (wchar_t *)malloc(50*sizeof(wchar_t))
data
data
(wchar_t *)malloc(50*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(50*sizeof(wchar_t))
malloc
malloc
50*sizeof(wchar_t)
50
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(data, L'A', 50-1);
wmemset(data, L'A', 50-1)
wmemset
wmemset
data
data
L'A'
50-1
50
1
data[50-1] = L'\0';
data[50-1] = L'\0'
data[50-1]
data
data
50-1
50
1
L'\0'
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        {            wchar_t dest[100];            wmemset(dest, L'C', 100-1);            dest[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: using memmove with the length of the dest where data             * could be smaller than dest causing buffer overread */            memmove(dest, data, wcslen(dest)*sizeof(wchar_t));            dest[100-1] = L'\0';            printWLine(dest);            free(data);        }    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            wchar_t dest[100];            wmemset(dest, L'C', 100-1);            dest[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: using memmove with the length of the dest where data             * could be smaller than dest causing buffer overread */            memmove(dest, data, wcslen(dest)*sizeof(wchar_t));            dest[100-1] = L'\0';            printWLine(dest);            free(data);        }
wchar_t dest[100];
wchar_t dest[100];
wchar_t
dest[100]
dest
[100]
100
wmemset(dest, L'C', 100-1);
wmemset(dest, L'C', 100-1)
wmemset
wmemset
dest
dest
L'C'
100-1
100
1
dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
memmove(dest, data, wcslen(dest)*sizeof(wchar_t));
memmove(dest, data, wcslen(dest)*sizeof(wchar_t))
memmove
memmove
dest
dest
data
data
wcslen(dest)*sizeof(wchar_t)
wcslen(dest)
wcslen
wcslen
dest
dest
sizeof(wchar_t)
wchar_t
wchar_t

dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
printWLine(dest);
printWLine(dest)
printWLine
printWLine
dest
dest
free(data);
free(data)
free
free
data
data
-----joern-----
(4,48,0)
(17,45,0)
(48,8,0)
(45,17,0)
(9,25,0)
(19,16,0)
(51,28,0)
(41,38,0)
(46,17,0)
(25,4,0)
(13,11,0)
(52,11,0)
(38,16,0)
(42,23,0)
(15,12,0)
(20,11,0)
(37,13,0)
(25,34,0)
(48,12,0)
(25,9,0)
(47,11,0)
(33,13,0)
(16,8,0)
(0,4,0)
(1,48,0)
(6,22,0)
(29,24,0)
(22,46,0)
(24,22,0)
(32,16,0)
(8,11,0)
(28,42,0)
(31,9,0)
(17,46,0)
(50,16,0)
(22,24,0)
(2,11,0)
(35,48,0)
(47,13,0)
(3,11,0)
(13,17,0)
(34,25,0)
(5,33,0)
(39,35,0)
(12,48,0)
(36,8,0)
(10,26,0)
(4,25,0)
(42,28,0)
(40,4,0)
(21,11,0)
(30,12,0)
(14,3,0)
(35,16,0)
(18,34,0)
(26,47,0)
(7,47,0)
(44,33,0)
(43,3,0)
(4,16,0)
(17,13,0)
(27,26,0)
(46,22,0)
(15,30,1)
(39,38,1)
(37,3,1)
(1,47,1)
(47,7,1)
(40,32,1)
(22,24,1)
(14,43,1)
(6,37,1)
(4,25,1)
(31,0,1)
(33,13,1)
(47,13,1)
(38,41,1)
(2,42,1)
(51,33,1)
(44,13,1)
(0,40,1)
(32,48,1)
(25,34,1)
(46,22,1)
(2,33,1)
(28,51,1)
(49,35,1)
(26,10,1)
(35,39,1)
(42,28,1)
(10,27,1)
(18,9,1)
(13,17,1)
(25,9,1)
(19,4,1)
(35,48,1)
(3,14,1)
(30,1,1)
(27,2,1)
(4,48,1)
(29,6,1)
(33,5,1)
(9,31,1)
(41,19,1)
(34,18,1)
(17,45,1)
(12,15,1)
(17,46,1)
(7,26,1)
(48,12,1)
(24,29,1)
(5,44,1)
(42,33,2)
(22,24,2)
(33,13,2)
(42,28,2)
(13,17,2)
(17,45,2)
(46,22,2)
(25,34,2)
(48,12,2)
(25,9,2)
(47,13,2)
(17,46,2)
(28,33,2)
(51,33,2)
(4,48,2)
(35,48,2)
(4,25,2)
-----------------------------------
(0,data)
(1,data)
(2,'\\\\0')
(3,data = NULL)
(4,memmove(dest, data, wcslen(dest)
(5,NULL)
(6,50)
(7,data)
(8,)
(9,wcslen(dest)
(10,unionFirst)
(11,)
(12,myUnion.unionSecond)
(13,data = (wchar_t *)
(14,NULL)
(15,unionSecond)
(16,)
(17,(wchar_t *)
(18,wchar_t)
(19,'\\\\0')
(20,if (data == NULL)
(21,myUnion)
(22,50*sizeof(wchar_t)
(23,)
(24,sizeof(wchar_t)
(25,wcslen(dest)
(26,myUnion.unionFirst)
(27,myUnion)
(28,-1)
(29,wchar_t)
(30,myUnion)
(31,dest)
(32,'\\\\0')
(33,data == NULL)
(34,sizeof(wchar_t)
(35,free(data)
(36,data)
(37,data)
(38,printWLine(dest)
(39,data)
(40,dest)
(41,dest)
(42,exit(-1)
(43,data)
(44,data)
(45,wchar_t *)
(46,malloc(50*sizeof(wchar_t)
(47,myUnion.unionFirst = data)
(48,* data = myUnion.unionSecond)
(49,RET)
(50,dest)
(51,1)
(52,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^