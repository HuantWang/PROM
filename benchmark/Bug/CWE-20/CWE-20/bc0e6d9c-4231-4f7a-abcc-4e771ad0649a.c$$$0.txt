-----label-----
1
-----code-----
void CWE127_Buffer_Underread__malloc_wchar_t_ncpy_34_bad()
{
    wchar_t * data;
    CWE127_Buffer_Underread__malloc_wchar_t_ncpy_34_unionType myUnion;
    data = NULL;
    {
        wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
        if (dataBuffer == NULL) {exit(-1);}
        wmemset(dataBuffer, L'A', 100-1);
        dataBuffer[100-1] = L'\0';
        /* FLAW: Set data pointer to before the allocated memory buffer */
        data = dataBuffer - 8;
    }
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        {
            wchar_t dest[100];
            wmemset(dest, L'C', 100-1); /* fill with 'C's */
            dest[100-1] = L'\0'; /* null terminate */
            /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */
            wcsncpy(dest, data, wcslen(dest));
            /* Ensure null termination */
            dest[100-1] = L'\0';
            printWLine(dest);
            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
             * returned by malloc() so can't safely call free() on it */
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
24,25
24,26
24,27
24,28
24,29
25,26
26,27
26,28
28,29
28,30
28,31
31,32
32,33
32,34
33,34
33,35
35,36
37,38
37,39
38,39
40,41
40,42
42,43
43,44
43,45
46,47
46,48
47,48
47,49
48,49
50,51
52,53
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
60,63
60,64
61,62
63,64
66,67
66,68
69,70
70,71
70,72
71,72
71,73
72,73
74,75
74,76
78,79
79,80
79,81
80,81
82,83
82,84
83,84
86,87
87,88
87,89
88,89
88,90
89,90
92,93
94,95
94,96
95,96
96,97
96,98
98,99
98,100
98,101
101,102
102,103
102,104
103,104
106,107
106,108
106,109
106,110
106,111
106,112
107,108
108,109
108,110
110,111
110,112
112,113
114,115
115,116
115,117
115,118
115,119
116,117
118,119
121,122
121,123
124,125
125,126
125,127
126,127
126,128
127,128
129,130
129,131
133,134
134,135
134,136
134,137
134,138
135,136
137,138
139,140
141,142
141,143
142,143
144,145
146,147
147,148
147,149
148,149
148,150
149,150
151,152
151,153
155,156
156,157
156,158
157,158
159,160
-----nextToken-----
2,4,8,10,11,15,17,21,23,27,29,30,34,36,39,41,44,45,49,51,56,58,62,64,65,67,68,73,75,76,77,81,84,85,90,91,93,97,99,100,104,105,109,111,113,117,119,120,122,123,128,130,131,132,136,138,140,143,145,150,152,153,154,158,160
-----computeFrom-----
19,20
19,21
40,41
40,42
47,48
47,49
66,67
66,68
70,71
70,72
74,75
74,76
79,80
79,81
82,83
82,84
87,88
87,89
121,122
121,123
125,126
125,127
129,130
129,131
147,148
147,149
151,152
151,153
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE127_Buffer_Underread__malloc_wchar_t_ncpy_34_bad(){    wchar_t * data;    CWE127_Buffer_Underread__malloc_wchar_t_ncpy_34_unionType myUnion;    data = NULL;    {        wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));        if (dataBuffer == NULL) {exit(-1);}        wmemset(dataBuffer, L'A', 100-1);        dataBuffer[100-1] = L'\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t dest[100];            wmemset(dest, L'C', 100-1); /* fill with 'C's */            dest[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */            wcsncpy(dest, data, wcslen(dest));            /* Ensure null termination */            dest[100-1] = L'\0';            printWLine(dest);            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location             * returned by malloc() so can't safely call free() on it */        }    }}
void
CWE127_Buffer_Underread__malloc_wchar_t_ncpy_34_bad()
CWE127_Buffer_Underread__malloc_wchar_t_ncpy_34_bad
{    wchar_t * data;    CWE127_Buffer_Underread__malloc_wchar_t_ncpy_34_unionType myUnion;    data = NULL;    {        wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));        if (dataBuffer == NULL) {exit(-1);}        wmemset(dataBuffer, L'A', 100-1);        dataBuffer[100-1] = L'\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t dest[100];            wmemset(dest, L'C', 100-1); /* fill with 'C's */            dest[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */            wcsncpy(dest, data, wcslen(dest));            /* Ensure null termination */            dest[100-1] = L'\0';            printWLine(dest);            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location             * returned by malloc() so can't safely call free() on it */        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE127_Buffer_Underread__malloc_wchar_t_ncpy_34_unionType myUnion;
CWE127_Buffer_Underread__malloc_wchar_t_ncpy_34_unionType myUnion;
CWE127_Buffer_Underread__malloc_wchar_t_ncpy_34_unionType
CWE127_Buffer_Underread__malloc_wchar_t_ncpy_34_unionType
myUnion
myUnion
data = NULL;
data = NULL
data
data
NULL
NULL
{        wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));        if (dataBuffer == NULL) {exit(-1);}        wmemset(dataBuffer, L'A', 100-1);        dataBuffer[100-1] = L'\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBuffer, L'A', 100-1);
wmemset(dataBuffer, L'A', 100-1)
wmemset
wmemset
dataBuffer
dataBuffer
L'A'
100-1
100
1
dataBuffer[100-1] = L'\0';
dataBuffer[100-1] = L'\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
L'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        {            wchar_t dest[100];            wmemset(dest, L'C', 100-1); /* fill with 'C's */            dest[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */            wcsncpy(dest, data, wcslen(dest));            /* Ensure null termination */            dest[100-1] = L'\0';            printWLine(dest);            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location             * returned by malloc() so can't safely call free() on it */        }    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            wchar_t dest[100];            wmemset(dest, L'C', 100-1); /* fill with 'C's */            dest[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */            wcsncpy(dest, data, wcslen(dest));            /* Ensure null termination */            dest[100-1] = L'\0';            printWLine(dest);            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location             * returned by malloc() so can't safely call free() on it */        }
wchar_t dest[100];
wchar_t dest[100];
wchar_t
dest[100]
dest
[100]
100
wmemset(dest, L'C', 100-1);
wmemset(dest, L'C', 100-1)
wmemset
wmemset
dest
dest
L'C'
100-1
100
1
dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
wcsncpy(dest, data, wcslen(dest));
wcsncpy(dest, data, wcslen(dest))
wcsncpy
wcsncpy
dest
dest
data
data
wcslen(dest)
wcslen
wcslen
dest
dest
dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
printWLine(dest);
printWLine(dest)
printWLine
printWLine
dest
dest
-----joern-----
(22,44,0)
(7,48,0)
(50,43,0)
(26,3,0)
(50,34,0)
(6,31,0)
(49,31,0)
(18,29,0)
(43,51,0)
(1,15,0)
(4,50,0)
(17,4,0)
(29,6,0)
(23,27,0)
(51,43,0)
(33,45,0)
(47,45,0)
(35,6,0)
(25,44,0)
(52,6,0)
(46,15,0)
(2,29,0)
(43,50,0)
(15,51,0)
(36,4,0)
(51,15,0)
(15,1,0)
(34,30,0)
(11,34,0)
(53,30,0)
(29,2,0)
(28,30,0)
(10,23,0)
(41,43,0)
(12,52,0)
(9,10,0)
(42,30,0)
(43,41,0)
(31,30,0)
(48,3,0)
(19,2,0)
(14,20,0)
(24,29,0)
(38,44,0)
(39,34,0)
(20,34,0)
(32,53,0)
(45,50,0)
(16,44,0)
(13,34,0)
(23,10,0)
(21,48,0)
(37,53,0)
(54,50,0)
(29,44,0)
(45,20,0)
(40,16,0)
(3,20,0)
(5,52,0)
(6,52,0)
(20,45,0)
(3,30,0)
(0,1,0)
(44,31,0)
(19,18,1)
(48,21,1)
(51,15,1)
(0,46,1)
(25,29,1)
(29,2,1)
(33,47,1)
(3,20,1)
(47,14,1)
(26,48,1)
(7,20,1)
(36,17,1)
(13,4,1)
(38,6,1)
(45,50,1)
(1,0,1)
(16,40,1)
(35,3,1)
(6,52,1)
(15,1,1)
(54,53,1)
(2,19,1)
(18,24,1)
(10,9,1)
(53,32,1)
(5,35,1)
(43,41,1)
(45,33,1)
(50,43,1)
(13,23,1)
(24,38,1)
(43,51,1)
(40,25,1)
(8,16,1)
(32,37,1)
(12,5,1)
(14,13,1)
(3,26,1)
(52,12,1)
(46,54,1)
(20,45,1)
(21,7,1)
(23,10,1)
(9,4,1)
(4,36,1)
(4,50,1)
(29,6,1)
(17,50,1)
(20,45,2)
(23,4,2)
(50,43,2)
(10,4,2)
(15,1,2)
(23,10,2)
(43,51,2)
(29,6,2)
(3,20,2)
(6,52,2)
(45,50,2)
(51,15,2)
(4,50,2)
(43,41,2)
(9,4,2)
(29,2,2)
-----------------------------------
(0,wchar_t)
(1,sizeof(wchar_t)
(2,wcslen(dest)
(3,myUnion.unionFirst = data)
(4,dataBuffer == NULL)
(5,myUnion)
(6,* data = myUnion.unionSecond)
(7,myUnion)
(8,RET)
(9,1)
(10,-1)
(11,dataBuffer)
(12,unionSecond)
(13,'\\\\0')
(14,data)
(15,100*sizeof(wchar_t)
(16,printWLine(dest)
(17,dataBuffer)
(18,data)
(19,dest)
(20,data = dataBuffer - 8)
(21,unionFirst)
(22,dest)
(23,exit(-1)
(24,dest)
(25,'\\\\0')
(26,data)
(27,)
(28,data)
(29,wcsncpy(dest, data, wcslen(dest)
(30,)
(31,)
(32,NULL)
(33,8)
(34,)
(35,data)
(36,NULL)
(37,data)
(38,'\\\\0')
(39,if (dataBuffer == NULL)
(40,dest)
(41,wchar_t *)
(42,myUnion)
(43,(wchar_t *)
(44,)
(45,dataBuffer - 8)
(46,100)
(47,dataBuffer)
(48,myUnion.unionFirst)
(49,data)
(50,* dataBuffer = (wchar_t *)
(51,malloc(100*sizeof(wchar_t)
(52,myUnion.unionSecond)
(53,data = NULL)
(54,dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^