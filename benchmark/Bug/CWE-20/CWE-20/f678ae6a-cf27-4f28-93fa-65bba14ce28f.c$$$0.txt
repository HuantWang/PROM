-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_41_badSink(int * data)
{
    {
        int source[100] = {0}; /* fill with 0's */
        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */
        memcpy(data, source, 100*sizeof(int));
        printIntLine(data[0]);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
11,14
11,15
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
23,26
23,27
24,25
26,27
28,29
30,31
30,32
32,33
33,34
33,35
36,37
37,38
37,39
38,39
40,41
40,42
41,42
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,6,8,9,14,16,18,21,25,27,29,31,34,35,39,42,43,47,49
-----computeFrom-----
30,31
30,32
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;InitializerList;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_41_badSink(int * data){    {        int source[100] = {0}; /* fill with 0's */        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */        memcpy(data, source, 100*sizeof(int));        printIntLine(data[0]);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_41_badSink(int * data)
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_41_badSink
int * data
int
* data
*
data
{    {        int source[100] = {0}; /* fill with 0's */        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */        memcpy(data, source, 100*sizeof(int));        printIntLine(data[0]);        free(data);    }}
{        int source[100] = {0}; /* fill with 0's */        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */        memcpy(data, source, 100*sizeof(int));        printIntLine(data[0]);        free(data);    }
int source[100] = {0};
int source[100] = {0};
int
source[100] = {0}
source
[100]
100
= {0}
{0}
0
memcpy(data, source, 100*sizeof(int));
memcpy(data, source, 100*sizeof(int))
memcpy
memcpy
data
data
source
source
100*sizeof(int)
100
sizeof(int)
int
int

printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(5,3,0)
(6,14,0)
(1,10,0)
(15,3,0)
(9,14,0)
(16,5,0)
(15,14,0)
(10,3,0)
(2,6,0)
(18,5,0)
(8,10,0)
(14,17,0)
(0,11,0)
(5,6,0)
(11,0,0)
(5,0,0)
(0,5,0)
(12,15,0)
(5,14,0)
(1,14,0)
(7,0,0)
(10,1,0)
(13,10,0)
(19,11,0)
(5,0,1)
(6,2,1)
(12,1,1)
(10,3,1)
(18,16,1)
(1,10,1)
(15,3,1)
(5,3,1)
(15,12,1)
(11,19,1)
(7,18,1)
(5,6,1)
(13,8,1)
(8,5,1)
(4,15,1)
(16,6,1)
(19,7,1)
(0,11,1)
(10,13,1)
(5,0,2)
(0,11,2)
(5,6,2)
(5,3,2)
(1,10,2)
(10,3,2)
(15,3,2)
-----------------------------------
(0,100*sizeof(int)
(1,printIntLine(data[0])
(2,source)
(3,int * data)
(4,RET)
(5,memcpy(data, source, 100*sizeof(int)
(6,source[100] = {0})
(7,100)
(8,data)
(9,source)
(10,data[0])
(11,sizeof(int)
(12,data)
(13,0)
(14,)
(15,free(data)
(16,data)
(17,)
(18,source)
(19,int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^