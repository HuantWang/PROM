-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_32_bad()
{
    unsigned int data;
    unsigned int *dataPtr1 = &data;
    unsigned int *dataPtr2 = &data;
    data = 0;
    {
        unsigned int data = *dataPtr1;
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
        *dataPtr1 = data;
    }
    {
        unsigned int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
50,52
51,52
51,53
54,55
55,56
57,58
58,59
58,60
59,60
60,61
62,63
64,65
64,66
65,66
66,67
66,68
68,69
68,70
70,71
71,72
72,73
74,75
74,76
74,77
75,76
76,77
77,78
79,80
80,81
80,82
82,83
82,84
84,85
85,86
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,52,53,56,61,63,67,69,73,78,81,83,86,90,92
-----computeFrom-----
32,33
32,34
47,48
47,49
58,59
58,60
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_32_bad(){    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_preinc_32_bad()
CWE190_Integer_Overflow__unsigned_int_rand_preinc_32_bad
{    unsigned int data;    unsigned int *dataPtr1 = &data;    unsigned int *dataPtr2 = &data;    data = 0;    {        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        *dataPtr1 = data;    }    {        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
unsigned int *dataPtr1 = &data;
unsigned int *dataPtr1 = &data;
unsigned int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
unsigned int *dataPtr2 = &data;
unsigned int *dataPtr2 = &data;
unsigned int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        unsigned int data = *dataPtr1;        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();        *dataPtr1 = data;    }
unsigned int data = *dataPtr1;
unsigned int data = *dataPtr1;
unsigned int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        unsigned int data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
unsigned int data = *dataPtr2;
unsigned int data = *dataPtr2;
unsigned int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(12,15,0)
(36,7,0)
(5,4,0)
(30,36,0)
(10,5,0)
(9,31,0)
(25,31,0)
(3,31,0)
(27,4,0)
(21,28,0)
(30,20,0)
(17,4,0)
(8,7,0)
(40,20,0)
(1,34,0)
(38,31,0)
(44,43,0)
(6,36,0)
(11,32,0)
(29,0,0)
(24,25,0)
(4,31,0)
(6,20,0)
(22,23,0)
(7,31,0)
(23,22,0)
(15,28,0)
(25,32,0)
(32,25,0)
(28,27,0)
(26,30,0)
(5,37,0)
(39,23,0)
(34,30,0)
(19,27,0)
(16,36,0)
(14,25,0)
(43,31,0)
(0,31,0)
(20,7,0)
(15,43,0)
(36,14,0)
(23,27,0)
(45,13,0)
(27,23,0)
(43,13,0)
(37,5,0)
(34,20,0)
(33,30,0)
(2,6,0)
(23,39,0)
(35,37,0)
(37,43,0)
(13,43,0)
(41,0,0)
(42,14,0)
(14,36,0)
(28,4,0)
(34,30,1)
(13,45,1)
(29,25,1)
(37,35,1)
(36,14,1)
(15,43,1)
(11,24,1)
(19,5,1)
(43,13,1)
(35,10,1)
(5,37,1)
(39,19,1)
(0,41,1)
(15,12,1)
(33,26,1)
(28,27,1)
(6,2,1)
(45,44,1)
(34,1,1)
(30,36,1)
(42,16,1)
(26,6,1)
(23,39,1)
(24,43,1)
(2,36,1)
(41,29,1)
(27,23,1)
(14,25,1)
(16,28,1)
(12,27,1)
(6,36,1)
(28,21,1)
(30,33,1)
(1,30,1)
(14,42,1)
(21,15,1)
(32,11,1)
(23,22,1)
(37,43,1)
(25,32,1)
(18,34,1)
(10,0,1)
(34,30,2)
(14,25,2)
(27,23,2)
(37,43,2)
(23,39,2)
(28,27,2)
(23,22,2)
(6,36,2)
(30,36,2)
(25,32,2)
(5,37,2)
(15,43,2)
(36,14,2)
(43,13,2)
-----------------------------------
(0,data = 0)
(1,result)
(2,data)
(3,dataPtr2)
(4,)
(5,data = *dataPtr1)
(6,++data)
(7,)
(8,data)
(9,data)
(10,data)
(11,data)
(12,dataPtr1)
(13,&data)
(14,*dataPtr2)
(15,*dataPtr1)
(16,data)
(17,data)
(18,RET)
(19,data)
(20,)
(21,data)
(22,unsigned int)
(23,(unsigned int)
(24,dataPtr2)
(25,*dataPtr2 = &data)
(26,result)
(27,data = (unsigned int)
(28,*dataPtr1 = data)
(29,data)
(30,result = data)
(31,)
(32,&data)
(33,data)
(34,printUnsignedLine(result)
(35,dataPtr1)
(36,data = *dataPtr2)
(37,*dataPtr1)
(38,dataPtr1)
(39,RAND32()
(40,result)
(41,0)
(42,dataPtr2)
(43,*dataPtr1 = &data)
(44,dataPtr1)
(45,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^