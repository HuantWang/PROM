-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_connect_socket_system_63b_badSink(char * * dataPtr)
{
    char * data = *dataPtr;
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
20,21
22,23
22,24
23,24
23,25
24,25
24,26
25,26
27,28
30,31
30,32
31,32
32,33
32,34
33,34
36,37
37,38
37,39
38,39
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,26,28,29,34,35,39,40
-----computeFrom-----
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_connect_socket_system_63b_badSink(char * * dataPtr){    char * data = *dataPtr;    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_connect_socket_system_63b_badSink(char * * dataPtr)
CWE78_OS_Command_Injection__char_connect_socket_system_63b_badSink
char * * dataPtr
char
* * dataPtr
*
*
dataPtr
{    char * data = *dataPtr;    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data = *dataPtr;
char * data = *dataPtr;
char
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(5,13,0)
(4,13,0)
(17,0,0)
(6,14,0)
(5,2,0)
(12,8,0)
(7,0,0)
(14,8,0)
(2,9,0)
(3,12,0)
(10,13,0)
(0,7,0)
(11,2,0)
(15,5,0)
(7,5,0)
(16,7,0)
(2,5,0)
(2,11,1)
(12,3,1)
(6,12,1)
(2,9,1)
(3,0,1)
(16,5,1)
(11,15,1)
(7,5,1)
(7,16,1)
(1,0,1)
(14,6,1)
(1,14,1)
(0,17,1)
(0,7,1)
(5,2,1)
(17,7,1)
(0,7,2)
(2,9,2)
(12,0,2)
(6,0,2)
(5,2,2)
(3,0,2)
(7,5,2)
(14,0,2)
-----------------------------------
(0,SYSTEM(data)
(1,RET)
(2,*dataPtr)
(3,"command execution failed!")
(4,if (SYSTEM(data)
(5,* data = *dataPtr)
(6,1)
(7,SYSTEM(data)
(8,)
(9,char * * dataPtr)
(10,data)
(11,dataPtr)
(12,printLine("command execution failed!")
(13,)
(14,exit(1)
(15,data)
(16,data)
(17,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^