-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE135_31_bad()
{
    void * data;
    data = NULL;
    /* POTENTIAL FLAW: Set data to point to a wide string */
    data = (void *)WIDE_STRING;
    {
        void * dataCopy = data;
        void * data = dataCopy;
        {
            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */
            size_t dataLen = strlen((char *)data);
            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
            (void)wcscpy(dest, data);
            printLine((char *)dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
29,30
29,31
29,32
30,31
31,32
31,33
33,34
33,35
33,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
45,46
46,47
48,49
48,50
48,51
48,52
49,50
50,51
50,52
51,52
53,54
53,55
55,56
56,57
56,58
57,58
59,60
59,61
60,61
60,62
62,63
64,65
66,67
67,68
67,69
69,70
69,71
69,72
72,73
73,74
73,75
74,75
74,76
76,77
78,79
78,80
79,80
81,82
81,83
82,83
83,84
83,85
84,85
87,88
88,89
88,90
91,92
92,93
92,94
93,94
93,95
96,97
96,98
96,99
97,98
99,100
101,102
103,104
104,105
104,106
105,106
107,108
107,109
108,109
108,110
110,111
112,113
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,28,32,34,35,38,41,43,44,47,52,54,58,61,63,65,68,70,71,75,77,80,85,86,89,90,94,95,98,100,102,106,109,111,113
-----computeFrom-----
13,14
13,15
19,20
19,21
81,82
81,83
83,84
83,85
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE135_31_bad(){    void * data;    data = NULL;    /* POTENTIAL FLAW: Set data to point to a wide string */    data = (void *)WIDE_STRING;    {        void * dataCopy = data;        void * data = dataCopy;        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE135_31_bad()
CWE121_Stack_Based_Buffer_Overflow__CWE135_31_bad
{    void * data;    data = NULL;    /* POTENTIAL FLAW: Set data to point to a wide string */    data = (void *)WIDE_STRING;    {        void * dataCopy = data;        void * data = dataCopy;        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }}
void * data;
void * data;
void
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (void *)WIDE_STRING;
data = (void *)WIDE_STRING
data
data
(void *)WIDE_STRING
void *
void
*
*
WIDE_STRING
WIDE_STRING
{        void * dataCopy = data;        void * data = dataCopy;        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }
void * dataCopy = data;
void * dataCopy = data;
void
* dataCopy = data
*
dataCopy
= data
data
data
void * data = dataCopy;
void * data = dataCopy;
void
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }
size_t dataLen = strlen((char *)data);
size_t dataLen = strlen((char *)data);
size_t
size_t
dataLen = strlen((char *)data)
dataLen
= strlen((char *)data)
strlen((char *)data)
strlen
strlen
(char *)data
char *
char
*
*
data
data
void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
void
* dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
*
dest
= (void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
(void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
void *
void
*
*
ALLOCA((dataLen+1) * sizeof(wchar_t))
ALLOCA
ALLOCA
(dataLen+1) * sizeof(wchar_t)
(dataLen+1)
dataLen+1
dataLen
dataLen
1
sizeof(wchar_t)
wchar_t
wchar_t

(void)wcscpy(dest, data);
(void)wcscpy(dest, data)
void
void

wcscpy(dest, data)
wcscpy
wcscpy
dest
dest
data
data
printLine((char *)dest);
printLine((char *)dest)
printLine
printLine
(char *)dest
char *
char
*
*
dest
dest
-----joern-----
(16,27,0)
(39,4,0)
(15,4,0)
(47,39,0)
(21,41,0)
(38,33,0)
(46,39,0)
(40,39,0)
(17,5,0)
(31,37,0)
(39,40,0)
(5,17,0)
(41,18,0)
(41,5,0)
(4,38,0)
(17,30,0)
(10,22,0)
(48,40,0)
(27,19,0)
(0,18,0)
(43,33,0)
(33,1,0)
(13,38,0)
(24,29,0)
(10,29,0)
(29,24,0)
(19,27,0)
(43,44,0)
(41,21,0)
(7,22,0)
(44,37,0)
(8,1,0)
(23,22,0)
(25,37,0)
(39,22,0)
(29,10,0)
(18,24,0)
(37,31,0)
(27,4,0)
(34,6,0)
(6,1,0)
(24,38,0)
(22,33,0)
(16,38,0)
(35,24,0)
(5,41,0)
(42,38,0)
(18,41,0)
(26,44,0)
(17,4,0)
(44,1,0)
(36,10,0)
(27,16,0)
(11,33,0)
(3,21,0)
(45,33,0)
(40,38,0)
(10,36,0)
(2,27,0)
(4,17,0)
(22,43,0)
(9,10,0)
(37,44,0)
(14,6,0)
(20,43,0)
(30,17,0)
(40,48,0)
(28,43,0)
(32,18,0)
(5,41,1)
(25,26,1)
(46,4,1)
(23,7,1)
(12,16,1)
(37,31,1)
(39,22,1)
(35,22,1)
(43,20,1)
(39,47,1)
(27,19,1)
(18,24,1)
(24,29,1)
(7,43,1)
(40,48,1)
(10,36,1)
(2,40,1)
(10,22,1)
(27,4,1)
(3,18,1)
(32,0,1)
(21,3,1)
(17,5,1)
(29,10,1)
(17,30,1)
(16,27,1)
(41,18,1)
(44,37,1)
(9,35,1)
(18,32,1)
(15,24,1)
(43,44,1)
(10,9,1)
(20,28,1)
(22,43,1)
(37,25,1)
(26,6,1)
(4,17,1)
(39,4,1)
(40,39,1)
(41,21,1)
(0,15,1)
(6,14,1)
(14,34,1)
(47,46,1)
(27,2,1)
(22,23,1)
(28,44,1)
(22,43,2)
(40,48,2)
(16,27,2)
(29,10,2)
(41,21,2)
(44,37,2)
(43,44,2)
(5,41,2)
(37,31,2)
(4,17,2)
(18,24,2)
(24,29,2)
(40,39,2)
(17,5,2)
(27,19,2)
(17,30,2)
(39,22,2)
(27,4,2)
(39,4,2)
(10,36,2)
(10,22,2)
(41,18,2)
-----------------------------------
(0,dataLen)
(1,)
(2,dest)
(3,wchar_t)
(4,* dest = (void *)
(5,ALLOCA((dataLen+1)
(6,data = NULL)
(7,data)
(8,data)
(9,data)
(10,(char *)
(11,dataCopy)
(12,RET)
(13,dataLen)
(14,NULL)
(15,dest)
(16,printLine((char *)
(17,(void *)
(18,dataLen+1)
(19,char *)
(20,data)
(21,sizeof(wchar_t)
(22,* data = dataCopy)
(23,dataCopy)
(24,dataLen = strlen((char *)
(25,WIDE_STRING)
(26,data)
(27,(char *)
(28,dataCopy)
(29,strlen((char *)
(30,void *)
(31,void *)
(32,1)
(33,)
(34,data)
(35,dataLen)
(36,char *)
(37,(void *)
(38,)
(39,wcscpy(dest, data)
(40,(void)
(41,(dataLen+1)
(42,dest)
(43,* dataCopy = data)
(44,data = (void *)
(45,data)
(46,dest)
(47,data)
(48,void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^