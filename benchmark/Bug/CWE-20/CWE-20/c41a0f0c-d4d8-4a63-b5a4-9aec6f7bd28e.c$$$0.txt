-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42_bad()
{
    char * data;
    data = (char *)malloc(100*sizeof(char));
    if (data == NULL) {exit(-1);}
    data = badSource(data);
    {
        char dest[50] = "";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        memcpy(dest, data, strlen(data)*sizeof(char));
        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
44,45
44,46
45,46
47,48
47,49
48,49
50,51
52,53
52,54
52,55
52,56
52,57
53,54
54,55
54,56
56,57
56,58
56,59
58,59
60,61
62,63
63,64
63,65
63,66
63,67
64,65
66,67
68,69
70,71
70,72
71,72
71,73
72,73
74,75
76,77
77,78
77,79
80,81
81,82
81,83
82,83
82,84
83,84
85,86
85,87
89,90
90,91
90,92
91,92
93,94
95,96
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,46,49,51,55,57,59,61,65,67,69,73,75,78,79,84,86,87,88,92,94,98,100
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
70,71
70,72
81,82
81,83
85,86
85,87
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42_bad(){    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    data = badSource(data);    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        memcpy(dest, data, strlen(data)*sizeof(char));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42_bad
{    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    data = badSource(data);    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        memcpy(dest, data, strlen(data)*sizeof(char));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
char * data;
char * data;
char
* data
*
data
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        memcpy(dest, data, strlen(data)*sizeof(char));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }
char dest[50] = "";
char dest[50] = "";
char
dest[50] = ""
dest
[50]
50
= ""
""
memcpy(dest, data, strlen(data)*sizeof(char));
memcpy(dest, data, strlen(data)*sizeof(char))
memcpy
memcpy
dest
dest
data
data
strlen(data)*sizeof(char)
strlen(data)
strlen
strlen
data
data
sizeof(char)
char
char

dest[50-1] = '\0';
dest[50-1] = '\0'
dest[50-1]
dest
dest
50-1
50
1
'\0'
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(25,44,0)
(3,26,0)
(0,21,0)
(45,38,0)
(38,30,0)
(44,30,0)
(16,31,0)
(47,23,0)
(8,16,0)
(27,8,0)
(30,23,0)
(32,40,0)
(38,47,0)
(2,31,0)
(10,4,0)
(33,29,0)
(39,18,0)
(20,5,0)
(42,30,0)
(41,29,0)
(16,29,0)
(18,32,0)
(4,10,0)
(15,35,0)
(13,15,0)
(19,23,0)
(29,47,0)
(1,7,0)
(36,17,0)
(24,23,0)
(7,29,0)
(5,14,0)
(19,15,0)
(43,8,0)
(22,23,0)
(26,19,0)
(7,47,0)
(28,47,0)
(7,30,0)
(35,15,0)
(34,16,0)
(32,18,0)
(15,19,0)
(31,47,0)
(17,30,0)
(7,14,0)
(10,35,0)
(14,5,0)
(35,10,0)
(14,7,0)
(12,4,0)
(17,47,0)
(15,13,0)
(21,14,0)
(5,30,0)
(9,26,0)
(30,44,0)
(44,19,0)
(11,7,0)
(37,10,0)
(46,19,0)
(16,8,0)
(14,21,0)
(15,13,1)
(16,8,1)
(35,10,1)
(1,11,1)
(20,1,1)
(26,19,1)
(5,20,1)
(45,31,1)
(29,41,1)
(3,9,1)
(27,43,1)
(34,7,1)
(42,32,1)
(5,30,1)
(10,4,1)
(33,30,1)
(2,16,1)
(31,2,1)
(17,30,1)
(15,35,1)
(42,26,1)
(32,18,1)
(38,45,1)
(0,5,1)
(43,34,1)
(44,25,1)
(36,38,1)
(16,29,1)
(44,19,1)
(8,27,1)
(11,29,1)
(6,17,1)
(4,12,1)
(38,30,1)
(12,37,1)
(41,33,1)
(18,39,1)
(25,42,1)
(7,14,1)
(7,29,1)
(9,19,1)
(26,3,1)
(7,30,1)
(14,21,1)
(21,0,1)
(14,5,1)
(17,36,1)
(19,15,1)
(39,26,1)
(37,46,1)
(30,44,1)
(15,35,2)
(10,4,2)
(16,29,2)
(30,44,2)
(18,26,2)
(17,30,2)
(14,5,2)
(32,26,2)
(26,19,2)
(32,18,2)
(16,8,2)
(7,30,2)
(38,30,2)
(7,14,2)
(5,30,2)
(44,19,2)
(15,13,2)
(14,21,2)
(7,29,2)
(39,26,2)
(19,15,2)
(35,10,2)
-----------------------------------
(0,char)
(1,data)
(2,\\\'\\\\0\\\')
(3,NULL)
(4,sizeof(char)
(5,strlen(data)
(6,RET)
(7,memcpy(dest, data, strlen(data)
(8,50-1)
(9,data)
(10,100*sizeof(char)
(11,dest)
(12,char)
(13,char *)
(14,strlen(data)
(15,(char *)
(16,dest[50-1])
(17,free(data)
(18,-1)
(19,data = (char *)
(20,data)
(21,sizeof(char)
(22,if (data == NULL)
(23,)
(24,data)
(25,data)
(26,data == NULL)
(27,1)
(28,dest)
(29,dest[50] = "")
(30,data = badSource(data)
(31,dest[50-1] = \\\'\\\\0\\\')
(32,exit(-1)
(33,dest)
(34,dest)
(35,malloc(100*sizeof(char)
(36,data)
(37,100)
(38,printLine(data)
(39,1)
(40,)
(41,"")
(42,data)
(43,50)
(44,badSource(data)
(45,data)
(46,data)
(47,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^