-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_preinc_34_bad()
{
    int data;
    CWE190_Integer_Overflow__int_rand_preinc_34_unionType myUnion;
    /* Initialize data */
    data = 0;
    /* POTENTIAL FLAW: Set data to a random value */
    data = RAND32();
    myUnion.unionFirst = data;
    {
        int data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
22,23
23,24
23,25
24,25
26,27
27,28
29,30
30,31
30,32
31,32
31,33
32,33
35,36
37,38
37,39
38,39
39,40
39,41
41,42
41,43
43,44
44,45
44,46
45,46
48,49
48,50
48,51
49,50
50,51
51,52
53,54
54,55
54,56
56,57
56,58
58,59
59,60
61,62
62,63
62,64
63,64
65,66
-----nextToken-----
2,4,8,10,14,16,20,21,25,28,33,34,36,40,42,46,47,52,55,57,60,64,66
-----computeFrom-----
18,19
18,20
23,24
23,25
30,31
30,32
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_preinc_34_bad(){    int data;    CWE190_Integer_Overflow__int_rand_preinc_34_unionType myUnion;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_rand_preinc_34_bad()
CWE190_Integer_Overflow__int_rand_preinc_34_bad
{    int data;    CWE190_Integer_Overflow__int_rand_preinc_34_unionType myUnion;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
CWE190_Integer_Overflow__int_rand_preinc_34_unionType myUnion;
CWE190_Integer_Overflow__int_rand_preinc_34_unionType myUnion;
CWE190_Integer_Overflow__int_rand_preinc_34_unionType
CWE190_Integer_Overflow__int_rand_preinc_34_unionType
myUnion
myUnion
data = 0;
data = 0
data
data
0
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
int data = myUnion.unionSecond;
int data = myUnion.unionSecond;
int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(23,1,0)
(5,6,0)
(7,17,0)
(26,14,0)
(6,13,0)
(27,28,0)
(22,27,0)
(2,19,0)
(21,23,0)
(29,22,0)
(11,20,0)
(9,28,0)
(12,17,0)
(20,19,0)
(8,1,0)
(16,23,0)
(30,27,0)
(4,27,0)
(10,8,0)
(13,6,0)
(28,1,0)
(30,19,0)
(19,28,0)
(14,19,0)
(18,1,0)
(20,14,0)
(27,22,0)
(6,1,0)
(8,6,0)
(25,30,0)
(24,22,0)
(17,8,0)
(15,14,0)
(3,1,0)
(14,27,0)
(29,4,1)
(23,16,1)
(22,24,1)
(0,20,1)
(6,13,1)
(14,15,1)
(30,27,1)
(24,29,1)
(14,27,1)
(5,23,1)
(20,11,1)
(26,30,1)
(20,14,1)
(25,27,1)
(11,14,1)
(7,6,1)
(4,8,1)
(16,21,1)
(30,25,1)
(13,5,1)
(12,7,1)
(17,12,1)
(8,6,1)
(10,17,1)
(8,10,1)
(15,26,1)
(27,22,1)
(30,27,2)
(20,14,2)
(27,22,2)
(14,27,2)
(8,6,2)
(6,13,2)
-----------------------------------
(0,RET)
(1,)
(2,result)
(3,data)
(4,data)
(5,data)
(6,data = RAND32()
(7,myUnion)
(8,myUnion.unionFirst = data)
(9,data)
(10,data)
(11,result)
(12,unionFirst)
(13,RAND32()
(14,result = data)
(15,data)
(16,0)
(17,myUnion.unionFirst)
(18,myUnion)
(19,)
(20,printIntLine(result)
(21,data)
(22,myUnion.unionSecond)
(23,data = 0)
(24,unionSecond)
(25,data)
(26,result)
(27,data = myUnion.unionSecond)
(28,)
(29,myUnion)
(30,++data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^