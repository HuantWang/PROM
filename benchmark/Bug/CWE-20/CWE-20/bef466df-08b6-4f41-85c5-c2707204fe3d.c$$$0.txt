-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE135_02_bad()
{
    void * data;
    data = NULL;
    if(1)
    {
        /* POTENTIAL FLAW: Set data to point to a wide string */
        data = (void *)WIDE_STRING;
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */
            size_t dataLen = strlen((char *)data);
            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
            (void)wcscpy(dest, data);
            printLine((char *)dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
28,29
30,31
32,33
32,34
34,35
35,36
35,37
35,38
35,39
36,37
37,38
37,39
38,39
40,41
40,42
42,43
43,44
43,45
44,45
46,47
46,48
47,48
47,49
49,50
51,52
53,54
54,55
54,56
56,57
56,58
56,59
59,60
60,61
60,62
61,62
61,63
63,64
65,66
65,67
66,67
68,69
68,70
69,70
70,71
70,72
71,72
74,75
75,76
75,77
78,79
79,80
79,81
80,81
80,82
83,84
83,85
83,86
84,85
86,87
88,89
90,91
91,92
91,93
92,93
94,95
94,96
95,96
95,97
97,98
99,100
-----nextToken-----
2,4,8,10,11,15,17,19,24,27,29,31,33,39,41,45,48,50,52,55,57,58,62,64,67,72,73,76,77,81,82,85,87,89,93,96,98,100
-----computeFrom-----
13,14
13,15
22,23
22,24
68,69
68,70
70,71
70,72
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE135_02_bad(){    void * data;    data = NULL;    if(1)    {        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)WIDE_STRING;    }    if(1)    {        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE135_02_bad()
CWE121_Stack_Based_Buffer_Overflow__CWE135_02_bad
{    void * data;    data = NULL;    if(1)    {        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)WIDE_STRING;    }    if(1)    {        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }}
void * data;
void * data;
void
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(1)    {        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)WIDE_STRING;    }
1
{        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)WIDE_STRING;    }
data = (void *)WIDE_STRING;
data = (void *)WIDE_STRING
data
data
(void *)WIDE_STRING
void *
void
*
*
WIDE_STRING
WIDE_STRING
if(1)    {        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }
1
{        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }
{            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }
size_t dataLen = strlen((char *)data);
size_t dataLen = strlen((char *)data);
size_t
size_t
dataLen = strlen((char *)data)
dataLen
= strlen((char *)data)
strlen((char *)data)
strlen
strlen
(char *)data
char *
char
*
*
data
data
void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
void
* dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
*
dest
= (void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
(void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
void *
void
*
*
ALLOCA((dataLen+1) * sizeof(wchar_t))
ALLOCA
ALLOCA
(dataLen+1) * sizeof(wchar_t)
(dataLen+1)
dataLen+1
dataLen
dataLen
1
sizeof(wchar_t)
wchar_t
wchar_t

(void)wcscpy(dest, data);
(void)wcscpy(dest, data)
void
void

wcscpy(dest, data)
wcscpy
wcscpy
dest
dest
data
data
printLine((char *)dest);
printLine((char *)dest)
printLine
printLine
(char *)dest
char *
char
*
*
dest
dest
-----joern-----
(7,35,0)
(43,39,0)
(25,39,0)
(2,31,0)
(17,35,0)
(8,1,0)
(36,1,0)
(20,23,0)
(15,5,0)
(24,19,0)
(32,45,0)
(14,32,0)
(1,8,0)
(23,11,0)
(19,18,0)
(42,39,0)
(34,31,0)
(41,2,0)
(2,35,0)
(35,26,0)
(31,18,0)
(19,8,0)
(5,1,0)
(12,21,0)
(37,31,0)
(4,25,0)
(0,15,0)
(29,23,0)
(15,0,0)
(39,43,0)
(9,5,0)
(3,32,0)
(39,25,0)
(19,27,0)
(45,32,0)
(40,21,0)
(23,29,0)
(16,18,0)
(27,19,0)
(32,11,0)
(1,35,0)
(19,25,0)
(11,35,0)
(2,41,0)
(29,15,0)
(13,21,0)
(18,21,0)
(10,11,0)
(25,22,0)
(31,25,0)
(8,19,0)
(23,20,0)
(32,14,0)
(15,29,0)
(38,0,0)
(31,2,0)
(5,15,0)
(30,18,0)
(28,5,0)
(31,11,0)
(11,23,0)
(14,35,0)
(31,25,1)
(31,34,1)
(33,14,1)
(3,2,1)
(25,39,1)
(23,20,1)
(39,43,1)
(14,32,1)
(28,9,1)
(36,44,1)
(34,37,1)
(32,11,1)
(42,4,1)
(15,0,1)
(33,44,1)
(39,42,1)
(4,6,1)
(8,19,1)
(15,5,1)
(16,30,1)
(10,1,1)
(23,29,1)
(5,1,1)
(0,38,1)
(31,11,1)
(2,31,1)
(19,27,1)
(9,10,1)
(18,16,1)
(19,25,1)
(5,28,1)
(37,11,1)
(19,18,1)
(44,6,1)
(32,3,1)
(24,36,1)
(31,18,1)
(2,41,1)
(19,24,1)
(1,8,1)
(29,15,1)
(44,25,1)
(6,18,1)
(32,45,1)
(38,5,1)
(11,23,1)
(1,8,2)
(23,44,2)
(11,23,2)
(9,44,2)
(34,44,2)
(5,1,2)
(25,39,2)
(15,0,2)
(8,19,2)
(1,44,2)
(3,44,2)
(32,45,2)
(36,44,2)
(19,27,2)
(28,44,2)
(29,44,2)
(39,6,2)
(15,5,2)
(4,6,2)
(32,11,2)
(10,44,2)
(39,43,2)
(19,25,2)
(38,44,2)
(2,31,2)
(31,18,2)
(31,25,2)
(14,44,2)
(5,44,2)
(19,44,2)
(25,6,2)
(2,44,2)
(8,44,2)
(32,44,2)
(31,44,2)
(15,44,2)
(0,44,2)
(23,20,2)
(14,32,2)
(24,44,2)
(2,41,2)
(19,18,2)
(11,44,2)
(29,15,2)
(42,6,2)
(23,29,2)
(31,11,2)
(37,44,2)
-----------------------------------
(0,sizeof(wchar_t)
(1,dataLen = strlen((char *)
(2,(void)
(3,dest)
(4,data)
(5,dataLen+1)
(6,1)
(7,dest)
(8,strlen((char *)
(9,dataLen)
(10,dest)
(11,* dest = (void *)
(12,if(1)
(13,if(1)
(14,printLine((char *)
(15,(dataLen+1)
(16,NULL)
(17,dataLen)
(18,data = NULL)
(19,(char *)
(20,void *)
(21,)
(22,)
(23,(void *)
(24,data)
(25,data = (void *)
(26,)
(27,char *)
(28,1)
(29,ALLOCA((dataLen+1)
(30,data)
(31,wcscpy(dest, data)
(32,(char *)
(33,RET)
(34,data)
(35,)
(36,dataLen)
(37,dest)
(38,wchar_t)
(39,(void *)
(40,data)
(41,void)
(42,WIDE_STRING)
(43,void *)
(44,1)
(45,char *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^