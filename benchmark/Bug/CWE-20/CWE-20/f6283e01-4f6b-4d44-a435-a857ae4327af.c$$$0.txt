-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_01_bad()
{
    char * data;
    data = NULL;
    {
        char * dataBuffer = (char *)malloc(100*sizeof(char));
        if (dataBuffer == NULL) {exit(-1);}
        memset(dataBuffer, 'A', 100-1);
        dataBuffer[100-1] = '\0';
        /* FLAW: Set data pointer to before the allocated memory buffer */
        data = dataBuffer - 8;
    }
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        strcpy(data, source);
        printLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
18,21
18,22
18,23
19,20
20,21
20,22
22,23
22,24
22,25
25,26
26,27
26,28
27,28
27,29
29,30
31,32
31,33
32,33
34,35
34,36
36,37
37,38
37,39
40,41
40,42
41,42
41,43
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
53,54
54,55
54,56
54,57
54,58
55,56
57,58
60,61
60,62
63,64
64,65
64,66
65,66
65,67
66,67
68,69
68,70
72,73
73,74
73,75
74,75
76,77
76,78
77,78
80,81
80,82
80,83
80,84
80,85
81,82
82,83
82,84
84,85
84,86
86,87
88,89
89,90
89,91
89,92
89,93
90,91
92,93
95,96
95,97
98,99
99,100
99,101
100,101
100,102
101,102
103,104
103,105
107,108
108,109
108,110
108,111
109,110
111,112
113,114
115,116
116,117
116,118
117,118
119,120
-----nextToken-----
2,4,8,10,11,15,17,21,23,24,28,30,33,35,38,39,43,45,50,52,56,58,59,61,62,67,69,70,71,75,78,79,83,85,87,91,93,94,96,97,102,104,105,106,110,112,114,118,120
-----computeFrom-----
13,14
13,15
34,35
34,36
41,42
41,43
60,61
60,62
64,65
64,66
68,69
68,70
73,74
73,75
76,77
76,78
95,96
95,97
99,100
99,101
103,104
103,105
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_01_bad(){    char * data;    data = NULL;    {        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_char_cpy_01_bad()
CWE124_Buffer_Underwrite__malloc_char_cpy_01_bad
{    char * data;    data = NULL;    {        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
{        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
strcpy(data, source);
strcpy(data, source)
strcpy
strcpy
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(7,22,0)
(20,39,0)
(37,19,0)
(27,4,0)
(51,64,0)
(51,18,0)
(58,7,0)
(22,7,0)
(61,15,0)
(24,6,0)
(43,25,0)
(23,39,0)
(59,20,0)
(60,6,0)
(64,51,0)
(1,54,0)
(0,14,0)
(25,17,0)
(53,15,0)
(42,50,0)
(19,5,0)
(18,54,0)
(39,20,0)
(14,56,0)
(3,56,0)
(15,53,0)
(54,56,0)
(26,13,0)
(50,17,0)
(55,54,0)
(46,45,0)
(27,17,0)
(49,17,0)
(5,19,0)
(32,4,0)
(62,28,0)
(13,17,0)
(57,20,0)
(28,62,0)
(22,34,0)
(5,13,0)
(47,5,0)
(25,6,0)
(8,18,0)
(39,18,0)
(38,28,0)
(34,22,0)
(11,60,0)
(6,54,0)
(41,50,0)
(16,35,0)
(2,27,0)
(51,34,0)
(45,18,0)
(35,54,0)
(31,39,0)
(6,60,0)
(50,6,0)
(60,18,0)
(33,4,0)
(36,60,0)
(34,51,0)
(12,62,0)
(39,54,0)
(29,14,0)
(17,56,0)
(9,22,0)
(62,18,0)
(53,21,0)
(30,19,0)
(62,35,0)
(48,45,0)
(10,27,0)
(18,51,0)
(40,28,0)
(4,27,0)
(11,36,1)
(60,11,1)
(51,34,1)
(47,27,1)
(4,33,1)
(51,64,1)
(40,38,1)
(25,6,1)
(41,13,1)
(15,61,1)
(0,29,1)
(18,51,1)
(61,45,1)
(23,53,1)
(5,19,1)
(45,18,1)
(13,26,1)
(39,20,1)
(20,57,1)
(58,9,1)
(62,28,1)
(22,7,1)
(2,6,1)
(52,25,1)
(19,30,1)
(9,8,1)
(60,18,1)
(50,42,1)
(32,10,1)
(12,39,1)
(30,37,1)
(6,60,1)
(35,16,1)
(45,46,1)
(50,6,1)
(27,4,1)
(48,18,1)
(16,62,1)
(14,0,1)
(10,2,1)
(26,5,1)
(33,32,1)
(46,48,1)
(34,22,1)
(25,43,1)
(8,14,1)
(59,31,1)
(53,15,1)
(28,40,1)
(36,24,1)
(7,58,1)
(31,23,1)
(62,18,1)
(43,50,1)
(42,41,1)
(37,47,1)
(57,59,1)
(23,45,1)
(39,18,1)
(38,12,1)
(24,35,1)
(15,45,2)
(51,64,2)
(51,34,2)
(45,18,2)
(25,6,2)
(34,22,2)
(6,60,2)
(62,28,2)
(5,19,2)
(53,45,2)
(27,4,2)
(53,15,2)
(61,45,2)
(18,51,2)
(39,20,2)
(39,18,2)
(62,18,2)
(22,7,2)
(60,18,2)
(50,6,2)
-----------------------------------
(0,NULL)
(1,if (dataBuffer == NULL)
(2,source)
(3,data)
(4,100-1)
(5,source[100-1])
(6,data = dataBuffer - 8)
(7,sizeof(char)
(8,dataBuffer)
(9,100)
(10,'C')
(11,8)
(12,dataBuffer)
(13,source[100-1] = '\\\\0')
(14,data = NULL)
(15,-1)
(16,'\\\\0')
(17,)
(18,* dataBuffer = (char *)
(19,100-1)
(20,100-1)
(21,)
(22,100*sizeof(char)
(23,dataBuffer)
(24,data)
(25,printLine(data)
(26,'\\\\0')
(27,memset(source, 'C', 100-1)
(28,100-1)
(29,data)
(30,1)
(31,'A')
(32,100)
(33,1)
(34,malloc(100*sizeof(char)
(35,dataBuffer[100-1] = '\\\\0')
(36,dataBuffer)
(37,100)
(38,100)
(39,memset(dataBuffer, 'A', 100-1)
(40,1)
(41,data)
(42,source)
(43,data)
(44,memset(source, \'C\', 100-1)
(45,dataBuffer == NULL)
(46,NULL)
(47,source)
(48,dataBuffer)
(49,source)
(50,strcpy(data, source)
(51,(char *)
(52,RET)
(53,exit(-1)
(54,)
(55,dataBuffer)
(56,)
(57,1)
(58,char)
(59,100)
(60,dataBuffer - 8)
(61,1)
(62,dataBuffer[100-1])
(63,memset(dataBuffer, \'A\', 100-1)
(64,char *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^