-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE135_01_bad()
{
    void * data;
    data = NULL;
    /* POTENTIAL FLAW: Set data to point to a wide string */
    data = (void *)WIDE_STRING;
    {
        /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */
        size_t dataLen = strlen((char *)data);
        void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
        (void)wcscpy(dest, data);
        printLine((char *)dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
29,30
29,31
29,32
29,33
30,31
31,32
31,33
32,33
34,35
34,36
36,37
37,38
37,39
38,39
40,41
40,42
41,42
41,43
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
55,57
57,58
59,60
59,61
60,61
62,63
62,64
63,64
64,65
64,66
65,66
68,69
69,70
69,71
72,73
73,74
73,75
74,75
74,76
77,78
77,79
77,80
78,79
80,81
82,83
84,85
85,86
85,87
86,87
88,89
88,90
89,90
89,91
91,92
93,94
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,28,33,35,39,42,44,46,49,51,52,56,58,61,66,67,70,71,75,76,79,81,83,87,90,92,94
-----computeFrom-----
13,14
13,15
19,20
19,21
62,63
62,64
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE135_01_bad(){    void * data;    data = NULL;    /* POTENTIAL FLAW: Set data to point to a wide string */    data = (void *)WIDE_STRING;    {        /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */        size_t dataLen = strlen((char *)data);        void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));        (void)wcscpy(dest, data);        printLine((char *)dest);    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE135_01_bad()
CWE121_Stack_Based_Buffer_Overflow__CWE135_01_bad
{    void * data;    data = NULL;    /* POTENTIAL FLAW: Set data to point to a wide string */    data = (void *)WIDE_STRING;    {        /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */        size_t dataLen = strlen((char *)data);        void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));        (void)wcscpy(dest, data);        printLine((char *)dest);    }}
void * data;
void * data;
void
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (void *)WIDE_STRING;
data = (void *)WIDE_STRING
data
data
(void *)WIDE_STRING
void *
void
*
*
WIDE_STRING
WIDE_STRING
{        /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */        size_t dataLen = strlen((char *)data);        void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));        (void)wcscpy(dest, data);        printLine((char *)dest);    }
size_t dataLen = strlen((char *)data);
size_t dataLen = strlen((char *)data);
size_t
size_t
dataLen = strlen((char *)data)
dataLen
= strlen((char *)data)
strlen((char *)data)
strlen
strlen
(char *)data
char *
char
*
*
data
data
void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
void
* dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
*
dest
= (void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
(void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
void *
void
*
*
ALLOCA((dataLen+1) * sizeof(wchar_t))
ALLOCA
ALLOCA
(dataLen+1) * sizeof(wchar_t)
(dataLen+1)
dataLen+1
dataLen
dataLen
1
sizeof(wchar_t)
wchar_t
wchar_t

(void)wcscpy(dest, data);
(void)wcscpy(dest, data)
void
void

wcscpy(dest, data)
wcscpy
wcscpy
dest
dest
data
data
printLine((char *)dest);
printLine((char *)dest)
printLine
printLine
(char *)dest
char *
char
*
*
dest
dest
-----joern-----
(39,36,0)
(14,31,0)
(0,13,0)
(17,11,0)
(32,9,0)
(11,14,0)
(28,14,0)
(13,11,0)
(29,17,0)
(33,12,0)
(27,11,0)
(12,24,0)
(2,17,0)
(21,31,0)
(9,39,0)
(15,12,0)
(4,9,0)
(1,7,0)
(24,31,0)
(17,23,0)
(9,32,0)
(25,37,0)
(5,21,0)
(10,14,0)
(38,16,0)
(7,11,0)
(24,25,0)
(16,14,0)
(11,13,0)
(32,34,0)
(12,36,0)
(32,0,0)
(25,24,0)
(18,25,0)
(23,14,0)
(23,17,0)
(37,25,0)
(35,7,0)
(26,13,0)
(20,9,0)
(17,29,0)
(7,24,0)
(34,32,0)
(6,39,0)
(16,38,0)
(16,7,0)
(12,33,0)
(19,34,0)
(30,24,0)
(22,21,0)
(13,26,0)
(39,14,0)
(36,12,0)
(7,16,0)
(13,0,0)
(3,31,0)
(36,39,0)
(0,32,0)
(15,6,1)
(17,2,1)
(17,29,1)
(34,19,1)
(20,4,1)
(7,11,1)
(13,26,1)
(12,33,1)
(5,22,1)
(36,12,1)
(27,39,1)
(32,34,1)
(16,7,1)
(24,25,1)
(9,39,1)
(0,32,1)
(1,35,1)
(13,0,1)
(32,9,1)
(4,27,1)
(39,36,1)
(35,11,1)
(2,16,1)
(21,5,1)
(8,23,1)
(18,30,1)
(19,9,1)
(25,37,1)
(17,11,1)
(9,20,1)
(7,1,1)
(12,24,1)
(12,15,1)
(25,18,1)
(11,13,1)
(23,17,1)
(16,38,1)
(6,24,1)
(30,21,1)
(7,24,1)
(11,13,2)
(23,17,2)
(13,26,2)
(13,0,2)
(7,24,2)
(17,11,2)
(24,25,2)
(32,9,2)
(7,11,2)
(36,12,2)
(16,7,2)
(12,33,2)
(25,37,2)
(9,39,2)
(17,29,2)
(12,24,2)
(39,36,2)
(32,34,2)
(0,32,2)
(16,38,2)
-----------------------------------
(0,ALLOCA((dataLen+1)
(1,data)
(2,dest)
(3,data)
(4,dataLen)
(5,NULL)
(6,dataLen)
(7,wcscpy(dest, data)
(8,RET)
(9,dataLen+1)
(10,dest)
(11,* dest = (void *)
(12,(char *)
(13,(void *)
(14,)
(15,data)
(16,(void)
(17,(char *)
(18,WIDE_STRING)
(19,wchar_t)
(20,1)
(21,data = NULL)
(22,data)
(23,printLine((char *)
(24,data = (void *)
(25,(void *)
(26,void *)
(27,dest)
(28,dataLen)
(29,char *)
(30,data)
(31,)
(32,(dataLen+1)
(33,char *)
(34,sizeof(wchar_t)
(35,dest)
(36,strlen((char *)
(37,void *)
(38,void)
(39,dataLen = strlen((char *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^