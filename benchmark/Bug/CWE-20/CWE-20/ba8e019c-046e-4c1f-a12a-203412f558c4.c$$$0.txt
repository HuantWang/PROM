-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncat_42_bad()
{
    wchar_t * data;
    data = (wchar_t *)malloc(100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    data = badSource(data);
    {
        wchar_t dest[50] = L"";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/
        wcsncat(dest, data, wcslen(data));
        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */
        printWLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
44,45
44,46
45,46
47,48
47,49
48,49
50,51
52,53
52,54
52,55
52,56
52,57
53,54
54,55
54,56
56,57
56,58
56,59
58,59
60,61
62,63
63,64
63,65
63,66
63,67
64,65
66,67
68,69
70,71
70,72
71,72
73,74
75,76
76,77
76,78
77,78
77,79
78,79
80,81
80,82
84,85
85,86
85,87
86,87
88,89
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,46,49,51,55,57,59,61,65,67,69,72,74,79,81,82,83,87,89,93,95
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
76,77
76,78
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncat_42_bad(){    wchar_t * data;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    data = badSource(data);    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/        wcsncat(dest, data, wcslen(data));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncat_42_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncat_42_bad
{    wchar_t * data;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    data = badSource(data);    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/        wcsncat(dest, data, wcslen(data));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = (wchar_t *)malloc(100*sizeof(wchar_t));
data = (wchar_t *)malloc(100*sizeof(wchar_t))
data
data
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/        wcsncat(dest, data, wcslen(data));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
wcsncat(dest, data, wcslen(data));
wcsncat(dest, data, wcslen(data))
wcsncat
wcsncat
dest
dest
data
data
wcslen(data)
wcslen
wcslen
data
data
dest[50-1] = L'\0';
dest[50-1] = L'\0'
dest[50-1]
dest
dest
50-1
50
1
L'\0'
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(8,29,0)
(7,30,0)
(30,31,0)
(26,9,0)
(9,26,0)
(17,4,0)
(2,25,0)
(11,24,0)
(5,10,0)
(20,7,0)
(16,34,0)
(33,35,0)
(9,31,0)
(32,29,0)
(24,34,0)
(9,25,0)
(15,24,0)
(29,2,0)
(0,35,0)
(31,9,0)
(4,29,0)
(25,9,0)
(35,25,0)
(21,30,0)
(6,2,0)
(12,22,0)
(31,30,0)
(10,14,0)
(25,22,0)
(14,10,0)
(14,13,0)
(34,24,0)
(27,25,0)
(19,22,0)
(4,3,0)
(2,29,0)
(30,7,0)
(1,3,0)
(24,3,0)
(3,22,0)
(28,32,0)
(24,29,0)
(32,3,0)
(34,29,0)
(29,22,0)
(23,3,0)
(8,14,1)
(24,29,1)
(11,15,1)
(2,6,1)
(5,35,1)
(30,7,1)
(20,21,1)
(21,27,1)
(10,5,1)
(28,4,1)
(24,34,1)
(34,16,1)
(16,11,1)
(23,29,1)
(9,31,1)
(35,33,1)
(9,26,1)
(0,25,1)
(1,24,1)
(29,2,1)
(15,23,1)
(32,29,1)
(31,30,1)
(6,8,1)
(17,1,1)
(7,20,1)
(14,10,1)
(18,32,1)
(35,25,1)
(34,29,1)
(25,9,1)
(8,35,1)
(2,25,1)
(4,29,1)
(33,0,1)
(4,17,1)
(32,28,1)
(14,10,2)
(25,9,2)
(24,29,2)
(34,29,2)
(9,26,2)
(2,25,2)
(29,2,2)
(30,7,2)
(35,25,2)
(4,29,2)
(5,35,2)
(9,31,2)
(24,34,2)
(14,35,2)
(32,29,2)
(31,30,2)
(10,35,2)
-----------------------------------
(0,data)
(1,\\\'\\\\0\\\')
(2,badSource(data)
(3,)
(4,printWLine(data)
(5,1)
(6,data)
(7,sizeof(wchar_t)
(8,data)
(9,(wchar_t *)
(10,-1)
(11,data)
(12,data)
(13,)
(14,exit(-1)
(15,dest)
(16,data)
(17,data)
(18,RET)
(19,if (data == NULL)
(20,wchar_t)
(21,100)
(22,)
(23,"")
(24,wcsncat(dest, data, wcslen(data)
(25,data = (wchar_t *)
(26,wchar_t *)
(27,data)
(28,data)
(29,data = badSource(data)
(30,100*sizeof(wchar_t)
(31,malloc(100*sizeof(wchar_t)
(32,free(data)
(33,NULL)
(34,wcslen(data)
(35,data == NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^