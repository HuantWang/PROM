-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_square_42_bad()
{
    int64_t data;
    data = 0LL;
    data = badSource(data);
    {
        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
        int64_t result = data * data;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
18,19
18,20
19,20
21,22
21,23
22,23
24,25
26,27
26,28
27,28
28,29
28,30
29,30
31,32
31,33
33,34
34,35
34,36
35,36
37,38
39,40
40,41
40,42
41,42
43,44
-----nextToken-----
2,4,9,11,15,16,20,23,25,30,32,36,38,42,44
-----computeFrom-----
13,14
13,15
18,19
18,20
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_square_42_bad(){    int64_t data;    data = 0LL;    data = badSource(data);    {        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_square_42_bad()
CWE190_Integer_Overflow__int64_t_fscanf_square_42_bad
{    int64_t data;    data = 0LL;    data = badSource(data);    {        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(3,9,0)
(5,16,0)
(10,3,0)
(3,8,0)
(8,16,0)
(11,2,0)
(6,16,0)
(14,5,0)
(15,8,0)
(7,16,0)
(8,2,0)
(12,14,0)
(2,8,0)
(14,9,0)
(9,3,0)
(0,3,0)
(9,5,0)
(13,9,0)
(1,5,0)
(15,6,1)
(11,15,1)
(10,13,1)
(13,8,1)
(2,11,1)
(9,3,1)
(3,0,1)
(8,2,1)
(0,10,1)
(14,9,1)
(4,14,1)
(14,12,1)
(12,9,1)
(3,8,1)
(9,3,2)
(14,9,2)
(3,8,2)
(8,2,2)
-----------------------------------
(0,data)
(1,result)
(2,badSource(data)
(3,data * data)
(4,RET)
(5,)
(6,L)
(7,data)
(8,data = badSource(data)
(9,result = data * data)
(10,data)
(11,data)
(12,result)
(13,result)
(14,printLongLongLine(result)
(15,data)
(16,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^