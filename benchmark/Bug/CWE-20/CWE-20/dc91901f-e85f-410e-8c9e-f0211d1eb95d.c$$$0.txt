-----label-----
1
-----code-----
static char * badSource(char * data)
{
    if(badStatic)
    {
        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
        memset(data, 'A', 100-1); /* fill with 'A's */
        data[100-1] = '\0'; /* null terminate */
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
13,14
15,16
15,17
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
23,25
26,27
27,28
27,29
28,29
28,30
29,30
31,32
31,33
35,36
36,37
-----nextToken-----
2,4,5,7,9,10,14,19,21,22,24,25,30,32,33,34,37
-----computeFrom-----
23,24
23,25
27,28
27,29
31,32
31,33
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static char * badSource(char * data){    if(badStatic)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }    return data;}
static char
* badSource(char * data)
*
badSource
char * data
char
* data
*
data
{    if(badStatic)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }    return data;}
if(badStatic)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }
badStatic
badStatic
{        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }
memset(data, 'A', 100-1);
memset(data, 'A', 100-1)
memset
memset
data
data
'A'
100-1
100
1
data[100-1] = '\0';
data[100-1] = '\0'
data[100-1]
data
data
100-1
100
1
'\0'
return data;
data
data
-----joern-----
(3,4,0)
(9,23,0)
(19,23,0)
(5,0,0)
(6,11,0)
(13,7,0)
(1,7,0)
(23,6,0)
(21,5,0)
(2,6,0)
(8,5,0)
(10,0,0)
(7,4,0)
(12,13,0)
(7,11,0)
(6,17,0)
(15,13,0)
(4,17,0)
(7,13,0)
(5,11,0)
(22,6,0)
(6,23,0)
(6,23,1)
(13,15,1)
(3,7,1)
(5,11,1)
(2,22,1)
(9,19,1)
(1,6,1)
(21,20,1)
(23,9,1)
(7,11,1)
(12,1,1)
(19,2,1)
(7,13,1)
(6,11,1)
(21,4,1)
(5,21,1)
(15,12,1)
(8,5,1)
(4,3,1)
(22,20,1)
(12,20,2)
(2,20,2)
(6,11,2)
(7,20,2)
(23,20,2)
(15,20,2)
(13,20,2)
(22,20,2)
(4,20,2)
(3,20,2)
(6,20,2)
(8,5,2)
(1,20,2)
(19,20,2)
(7,13,2)
(5,11,2)
(7,11,2)
(6,23,2)
(9,20,2)
-----------------------------------
(0,)
(1,data)
(2,'A')
(3,'\\\\0')
(4,data[100-1] = \'\\\\0\')
(5,return data;)
(6,memset(data, \'A\', 100-1)
(7,data[100-1])
(8,RET)
(9,1)
(10,if(badStatic)
(11,char * data)
(12,100)
(13,100-1)
(14,\'\\\\0\')
(15,1)
(16,\'A\')
(17,)
(18,data[100-1] = '\\\\0')
(19,100)
(20,badStatic)
(21,data)
(22,data)
(23,100-1)
(24,memset(data, 'A', 100-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^