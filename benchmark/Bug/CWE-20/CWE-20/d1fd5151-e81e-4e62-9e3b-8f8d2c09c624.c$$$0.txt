-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_bad()
{
    unsigned int data;
    CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_unionType myUnion;
    data = 0;
    /* POTENTIAL FLAW: Use a random value */
    data = (unsigned int)RAND32();
    myUnion.unionFirst = data;
    {
        unsigned int data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
34,35
34,36
35,36
35,37
36,37
39,40
41,42
41,43
42,43
43,44
43,45
45,46
45,47
47,48
48,49
48,50
49,50
52,53
52,54
52,55
53,54
54,55
55,56
57,58
58,59
58,60
60,61
60,62
62,63
63,64
65,66
66,67
66,68
67,68
69,70
-----nextToken-----
2,4,8,10,14,16,20,21,25,28,29,32,37,38,40,44,46,50,51,56,59,61,64,68,70
-----computeFrom-----
18,19
18,20
23,24
23,25
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_bad(){    unsigned int data;    CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_unionType myUnion;    data = 0;    /* POTENTIAL FLAW: Use a random value */    data = (unsigned int)RAND32();    myUnion.unionFirst = data;    {        unsigned int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_bad()
CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_bad
{    unsigned int data;    CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_unionType myUnion;    data = 0;    /* POTENTIAL FLAW: Use a random value */    data = (unsigned int)RAND32();    myUnion.unionFirst = data;    {        unsigned int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_unionType myUnion;
CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_unionType myUnion;
CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_unionType
CWE190_Integer_Overflow__unsigned_int_rand_preinc_34_unionType
myUnion
myUnion
data = 0;
data = 0
data
data
0
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        unsigned int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
unsigned int data = myUnion.unionSecond;
unsigned int data = myUnion.unionSecond;
unsigned int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(31,9,0)
(19,8,0)
(16,27,0)
(18,21,0)
(13,27,0)
(14,8,0)
(26,11,0)
(3,13,0)
(21,27,0)
(28,27,0)
(20,27,0)
(2,7,0)
(11,6,0)
(30,22,0)
(7,2,0)
(8,11,0)
(21,7,0)
(4,23,0)
(6,11,0)
(12,7,0)
(32,29,0)
(13,21,0)
(23,9,0)
(22,11,0)
(25,6,0)
(15,6,0)
(10,17,0)
(24,29,0)
(9,28,0)
(17,27,0)
(0,28,0)
(1,17,0)
(7,21,0)
(23,8,0)
(29,13,0)
(8,9,0)
(22,9,0)
(11,28,0)
(7,12,0)
(29,24,1)
(25,15,1)
(1,10,1)
(17,1,1)
(21,7,1)
(13,3,1)
(8,11,1)
(26,13,1)
(23,8,1)
(2,18,1)
(3,29,1)
(22,11,1)
(13,21,1)
(32,21,1)
(8,19,1)
(11,6,1)
(4,8,1)
(22,30,1)
(30,11,1)
(14,22,1)
(7,2,1)
(6,25,1)
(5,23,1)
(18,17,1)
(24,32,1)
(23,4,1)
(15,26,1)
(7,12,1)
(19,14,1)
(23,8,2)
(7,12,2)
(22,11,2)
(11,6,2)
(13,21,2)
(8,11,2)
(7,2,2)
(21,7,2)
-----------------------------------
(0,data)
(1,0)
(2,RAND32()
(3,data)
(4,result)
(5,RET)
(6,myUnion.unionSecond)
(7,(unsigned int)
(8,result = data)
(9,)
(10,data)
(11,data = myUnion.unionSecond)
(12,unsigned int)
(13,myUnion.unionFirst = data)
(14,result)
(15,myUnion)
(16,data)
(17,data = 0)
(18,data)
(19,data)
(20,myUnion)
(21,data = (unsigned int)
(22,++data)
(23,printUnsignedLine(result)
(24,unionFirst)
(25,unionSecond)
(26,data)
(27,)
(28,)
(29,myUnion.unionFirst)
(30,data)
(31,result)
(32,myUnion)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^