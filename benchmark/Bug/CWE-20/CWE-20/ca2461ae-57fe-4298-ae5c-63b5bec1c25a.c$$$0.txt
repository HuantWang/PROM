-----label-----
1
-----code-----
void CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_21_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = wcslen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgetws() failed");
                    /* Restore NUL terminator if fgetws fails */
                    data[dataLen] = L'\0';
                }
                fclose(pFile);
            }
        }
    }
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
28,29
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
38,39
40,41
41,42
41,43
42,43
44,45
44,46
47,48
47,49
48,49
48,50
49,50
49,51
51,52
54,55
54,56
55,56
56,57
56,58
57,58
59,60
59,61
59,62
60,61
62,63
65,66
65,67
66,67
66,68
67,68
69,70
71,72
71,73
72,73
72,74
73,74
73,75
74,75
74,76
74,77
74,78
75,76
77,78
77,79
78,79
80,81
82,83
82,84
83,84
83,85
86,87
87,88
87,89
89,90
91,92
93,94
95,96
95,97
96,97
97,98
97,99
98,99
101,102
102,103
102,104
103,104
103,105
104,105
106,107
109,110
110,111
110,112
111,112
113,114
115,116
116,117
116,118
117,118
120,121
121,122
121,123
122,123
124,125
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,31,33,37,39,43,45,46,50,52,53,58,61,63,64,68,70,76,79,81,84,85,88,90,92,94,99,100,105,107,108,112,114,118,119,123,125
-----computeFrom-----
22,23
22,24
48,49
48,50
49,50
49,51
56,57
56,58
66,67
66,68
73,74
73,75
77,78
77,79
87,88
87,89
102,103
102,104
116,117
116,118
-----guardedBy-----
52,107
70,94
68,114
79,105
90,107
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_21_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    badStatic = 1; /* true */    badSink(data);}
void
CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_21_bad()
CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_21_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    badStatic = 1; /* true */    badSink(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = L"";
wchar_t dataBuffer[100] = L"";
wchar_t
dataBuffer[100] = L""
dataBuffer
[100]
100
= L""
L""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(100-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(12,7,0)
(31,46,0)
(47,24,0)
(22,11,0)
(3,51,0)
(7,12,0)
(27,51,0)
(11,49,0)
(8,27,0)
(18,43,0)
(16,46,0)
(11,51,0)
(24,49,0)
(42,16,0)
(0,49,0)
(6,51,0)
(13,48,0)
(47,43,0)
(21,32,0)
(40,3,0)
(25,52,0)
(32,48,0)
(5,47,0)
(24,46,0)
(32,46,0)
(33,17,0)
(48,47,0)
(24,47,0)
(30,7,0)
(20,31,0)
(4,32,0)
(46,3,0)
(46,16,0)
(26,37,0)
(48,13,0)
(1,24,0)
(16,49,0)
(48,32,0)
(19,7,0)
(34,36,0)
(47,48,0)
(52,17,0)
(14,3,0)
(15,50,0)
(38,31,0)
(43,47,0)
(29,24,0)
(9,30,0)
(23,46,0)
(39,30,0)
(7,37,0)
(35,12,0)
(41,51,0)
(53,27,0)
(10,12,0)
(54,36,0)
(47,7,0)
(2,3,0)
(31,50,0)
(52,7,0)
(28,34,0)
(49,51,0)
(44,49,0)
(50,31,0)
(32,4,1)
(11,22,1)
(53,8,1)
(47,24,1)
(30,7,1)
(34,28,1)
(54,34,1)
(48,32,1)
(38,20,1)
(0,44,1)
(45,11,1)
(39,7,1)
(27,53,1)
(43,18,1)
(18,47,1)
(22,27,1)
(47,48,1)
(31,38,1)
(9,39,1)
(25,54,1)
(24,1,1)
(15,31,1)
(25,43,1)
(20,46,1)
(16,42,1)
(24,49,1)
(11,49,1)
(4,21,1)
(49,0,1)
(21,24,1)
(46,16,1)
(7,12,1)
(50,15,1)
(30,9,1)
(8,30,1)
(52,7,1)
(8,50,1)
(19,50,1)
(50,31,1)
(32,46,1)
(23,49,1)
(29,30,1)
(8,52,1)
(10,19,1)
(1,29,1)
(52,25,1)
(48,13,1)
(16,49,1)
(35,10,1)
(44,41,1)
(31,46,1)
(47,7,1)
(5,48,1)
(28,43,1)
(43,47,1)
(24,46,1)
(42,23,1)
(12,35,1)
(47,5,1)
(24,49,2)
(43,30,2)
(4,30,2)
(19,50,2)
(35,50,2)
(11,49,2)
(52,30,2)
(24,46,2)
(1,30,2)
(46,16,2)
(7,50,2)
(43,47,2)
(24,30,2)
(29,30,2)
(47,30,2)
(39,50,2)
(9,50,2)
(30,7,2)
(34,43,2)
(12,50,2)
(31,46,2)
(54,43,2)
(16,49,2)
(32,30,2)
(50,31,2)
(47,24,2)
(52,7,2)
(47,7,2)
(18,30,2)
(48,32,2)
(5,30,2)
(28,43,2)
(21,30,2)
(7,12,2)
(10,50,2)
(32,46,2)
(48,30,2)
(48,13,2)
(30,50,2)
(25,30,2)
(47,48,2)
-----------------------------------
(0,dataBuffer)
(1,dataLen)
(2,if (100-dataLen > 1)
(3,)
(4,dataLen)
(5,pFile)
(6,data)
(7,pFile = fopen(FILENAME, "r")
(8,badStatic)
(9,NULL)
(10,FILENAME)
(11,badSink(data)
(12,fopen(FILENAME, "r")
(13,int)
(14,pFile)
(15,1)
(16,wcslen(data)
(17,)
(18,NULL)
(19,pFile)
(20,100)
(21,100)
(22,data)
(23,dataLen)
(24,data+dataLen)
(25,pFile)
(26,if (pFile != NULL)
(27,badStatic = 1)
(28,"fgetws()
(29,data)
(30,pFile != NULL)
(31,100-dataLen)
(32,100-dataLen)
(33,if (fgetws(data+dataLen, (int)
(34,printLine("fgetws()
(35,"r")
(36,)
(37,)
(38,dataLen)
(39,pFile)
(40,dataLen)
(41,"")
(42,data)
(43,fgetws(data+dataLen, (int)
(44,data)
(45,RET)
(46,dataLen = wcslen(data)
(47,fgetws(data+dataLen, (int)
(48,(int)
(49,data = dataBuffer)
(50,100-dataLen > 1)
(51,)
(52,fclose(pFile)
(53,1)
(54,\\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^