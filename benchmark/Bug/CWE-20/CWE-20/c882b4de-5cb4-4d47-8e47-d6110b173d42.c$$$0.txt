-----label-----
1
-----code-----
void CWE415_Double_Free__malloc_free_long_18_bad()
{
    long * data;
    /* Initialize data */
    data = NULL;
    goto source;
source:
    data = (long *)malloc(100*sizeof(long));
    if (data == NULL) {exit(-1);}
    /* POTENTIAL FLAW: Free data in the source - the bad sink frees data as well */
    free(data);
    goto sink;
sink:
    /* POTENTIAL FLAW: Possibly freeing memory twice */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
20,21
20,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
29,30
31,32
31,33
32,33
34,35
34,36
36,37
37,38
37,39
40,41
40,42
41,42
41,43
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
53,54
54,55
54,56
55,56
57,58
59,60
61,62
61,63
63,64
64,65
64,66
65,66
67,68
-----nextToken-----
2,4,8,10,11,15,17,19,21,25,28,30,33,35,38,39,43,45,50,52,56,58,60,62,66,68
-----computeFrom-----
13,14
13,15
23,24
23,25
34,35
34,36
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE415_Double_Free__malloc_free_long_18_bad(){    long * data;    /* Initialize data */    data = NULL;    goto source;source:    data = (long *)malloc(100*sizeof(long));    if (data == NULL) {exit(-1);}    /* POTENTIAL FLAW: Free data in the source - the bad sink frees data as well */    free(data);    goto sink;sink:    /* POTENTIAL FLAW: Possibly freeing memory twice */    free(data);}
void
CWE415_Double_Free__malloc_free_long_18_bad()
CWE415_Double_Free__malloc_free_long_18_bad
{    long * data;    /* Initialize data */    data = NULL;    goto source;source:    data = (long *)malloc(100*sizeof(long));    if (data == NULL) {exit(-1);}    /* POTENTIAL FLAW: Free data in the source - the bad sink frees data as well */    free(data);    goto sink;sink:    /* POTENTIAL FLAW: Possibly freeing memory twice */    free(data);}
long * data;
long * data;
long
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    data = (long *)malloc(100*sizeof(long));
source
data = (long *)malloc(100*sizeof(long));
data = (long *)malloc(100*sizeof(long))
data
data
(long *)malloc(100*sizeof(long))
long *
long
*
*
malloc(100*sizeof(long))
malloc
malloc
100*sizeof(long)
100
sizeof(long)
long
long

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
free(data);
free(data)
free
free
data
data
goto sink;
sink
sink:    /* POTENTIAL FLAW: Possibly freeing memory twice */    free(data);
sink
free(data);
free(data)
free
free
data
data
-----joern-----
(12,2,0)
(20,12,0)
(11,6,0)
(18,22,0)
(3,12,0)
(10,22,0)
(24,25,0)
(9,30,0)
(19,27,0)
(7,15,0)
(0,25,0)
(17,22,0)
(9,25,0)
(27,22,0)
(4,27,0)
(2,12,0)
(28,22,0)
(16,29,0)
(28,25,0)
(25,9,0)
(0,22,0)
(13,28,0)
(26,0,0)
(25,22,0)
(15,16,0)
(5,22,0)
(16,15,0)
(2,9,0)
(3,14,0)
(9,2,0)
(14,3,0)
(6,25,0)
(12,3,0)
(8,22,0)
(23,6,0)
(21,22,0)
(30,9,0)
(10,28,1)
(23,11,1)
(11,25,1)
(3,20,1)
(0,25,1)
(28,25,1)
(13,6,1)
(3,14,1)
(16,15,1)
(6,23,1)
(12,3,1)
(17,27,1)
(4,19,1)
(6,25,1)
(9,2,1)
(27,4,1)
(28,13,1)
(20,24,1)
(1,0,1)
(15,7,1)
(13,16,1)
(7,6,1)
(9,30,1)
(26,10,1)
(24,17,1)
(0,26,1)
(2,12,1)
(25,9,1)
(2,12,2)
(3,14,2)
(15,6,2)
(25,9,2)
(9,30,2)
(9,2,2)
(0,25,2)
(16,6,2)
(12,3,2)
(16,15,2)
(6,25,2)
(7,6,2)
(28,25,2)
-----------------------------------
(0,free(data)
(1,RET)
(2,malloc(100*sizeof(long)
(3,sizeof(long)
(4,NULL)
(5,data)
(6,data == NULL)
(7,1)
(8,source:)
(9,(long *)
(10,goto sink;)
(11,data)
(12,100*sizeof(long)
(13,data)
(14,long)
(15,-1)
(16,exit(-1)
(17,goto source;)
(18,if (data == NULL)
(19,data)
(20,100)
(21,sink:)
(22,)
(23,NULL)
(24,data)
(25,data = (long *)
(26,data)
(27,data = NULL)
(28,free(data)
(29,)
(30,long *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^