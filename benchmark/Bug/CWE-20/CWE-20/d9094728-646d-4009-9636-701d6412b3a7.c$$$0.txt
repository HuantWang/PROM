-----label-----
1
-----code-----
static twoIntsStruct * badSource(twoIntsStruct * data)
{
    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */
    data = (twoIntsStruct *)malloc(50*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
31,32
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,28,32,33,37,39,44,46,49
-----computeFrom-----
15,16
15,17
27,28
27,29
35,36
35,37
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static twoIntsStruct * badSource(twoIntsStruct * data){    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (twoIntsStruct *)malloc(50*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    return data;}
static twoIntsStruct
twoIntsStruct
* badSource(twoIntsStruct * data)
*
badSource
twoIntsStruct * data
twoIntsStruct
twoIntsStruct
* data
*
data
{    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (twoIntsStruct *)malloc(50*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    return data;}
data = (twoIntsStruct *)malloc(50*sizeof(twoIntsStruct));
data = (twoIntsStruct *)malloc(50*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)malloc(50*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
malloc(50*sizeof(twoIntsStruct))
malloc
malloc
50*sizeof(twoIntsStruct)
50
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
return data;
data
data
-----joern-----
(15,10,0)
(19,11,0)
(15,3,0)
(1,20,0)
(3,15,0)
(6,19,0)
(17,5,0)
(5,2,0)
(10,15,0)
(20,10,0)
(21,18,0)
(10,18,0)
(10,12,0)
(5,17,0)
(16,15,0)
(9,17,0)
(3,11,0)
(21,12,0)
(11,3,0)
(11,19,0)
(20,18,0)
(21,10,0)
(15,16,0)
(4,21,0)
(7,10,0)
(8,12,0)
(14,11,0)
(0,20,0)
(13,21,0)
(1,10,1)
(4,20,1)
(6,14,1)
(4,5,1)
(10,18,1)
(14,7,1)
(5,17,1)
(20,10,1)
(10,15,1)
(3,11,1)
(9,20,1)
(15,3,1)
(0,1,1)
(20,18,1)
(21,10,1)
(21,18,1)
(17,9,1)
(15,16,1)
(19,6,1)
(21,4,1)
(11,19,1)
(13,21,1)
(20,0,1)
(21,10,2)
(3,11,2)
(13,21,2)
(20,18,2)
(10,15,2)
(10,18,2)
(11,19,2)
(17,20,2)
(15,16,2)
(9,20,2)
(21,18,2)
(15,3,2)
(5,20,2)
(5,17,2)
(20,10,2)
-----------------------------------
(0,NULL)
(1,data)
(2,)
(3,malloc(50*sizeof(twoIntsStruct)
(4,data)
(5,exit(-1)
(6,twoIntsStruct)
(7,data)
(8,if (data == NULL)
(9,1)
(10,data = (twoIntsStruct *)
(11,50*sizeof(twoIntsStruct)
(12,)
(13,RET)
(14,50)
(15,(twoIntsStruct *)
(16,twoIntsStruct *)
(17,-1)
(18,twoIntsStruct * data)
(19,sizeof(twoIntsStruct)
(20,data == NULL)
(21,return data;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^