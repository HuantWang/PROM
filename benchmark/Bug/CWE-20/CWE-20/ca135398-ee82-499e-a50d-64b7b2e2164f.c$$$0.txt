-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_alloca_snprintf_63b_badSink(wchar_t * * dataPtr)
{
    wchar_t * data = *dataPtr;
    {
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */
        SNPRINTF(data, 100, L"%s", source);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
20,21
22,23
22,24
22,25
22,26
22,27
23,24
24,25
24,26
26,27
26,28
28,29
30,31
31,32
31,33
31,34
31,35
32,33
34,35
37,38
37,39
40,41
41,42
41,43
42,43
42,44
43,44
45,46
45,47
49,50
50,51
50,52
50,53
50,54
50,55
51,52
53,54
57,58
59,60
60,61
60,62
61,62
63,64
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,25,27,29,33,35,36,38,39,44,46,47,48,52,54,55,56,58,62,64
-----computeFrom-----
37,38
37,39
41,42
41,43
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_alloca_snprintf_63b_badSink(wchar_t * * dataPtr){    wchar_t * data = *dataPtr;    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */        SNPRINTF(data, 100, L"%s", source);        printWLine(data);    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_alloca_snprintf_63b_badSink(wchar_t * * dataPtr)
CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_alloca_snprintf_63b_badSink
wchar_t * * dataPtr
wchar_t
* * dataPtr
*
*
dataPtr
{    wchar_t * data = *dataPtr;    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */        SNPRINTF(data, 100, L"%s", source);        printWLine(data);    }}
wchar_t * data = *dataPtr;
wchar_t * data = *dataPtr;
wchar_t
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */        SNPRINTF(data, 100, L"%s", source);        printWLine(data);    }
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
SNPRINTF(data, 100, L"%s", source);
SNPRINTF(data, 100, L"%s", source)
SNPRINTF
SNPRINTF
data
data
100
L"%s"
source
source
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(11,8,0)
(4,3,0)
(6,8,0)
(8,3,0)
(7,1,0)
(7,8,0)
(10,1,0)
(9,11,0)
(2,1,0)
(11,5,0)
(8,11,0)
(12,7,0)
(1,3,0)
(7,12,1)
(8,11,1)
(0,7,1)
(7,8,1)
(11,5,1)
(10,8,1)
(11,9,1)
(12,10,1)
(9,6,1)
(8,11,2)
(11,5,2)
(7,8,2)
-----------------------------------
(0,RET)
(1,)
(2,source)
(3,)
(4,data)
(5,wchar_t * * dataPtr)
(6,data)
(7,printWLine(data)
(8,* data = *dataPtr)
(9,dataPtr)
(10,'\\\\0')
(11,*dataPtr)
(12,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^