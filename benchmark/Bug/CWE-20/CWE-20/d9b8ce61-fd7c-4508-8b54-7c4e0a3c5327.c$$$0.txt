-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61_bad()
{
    int * data;
    data = NULL;
    data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61b_badSource(data);
    {
        int source[100] = {0}; /* fill with 0's */
        {
            size_t i;
            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */
            for (i = 0; i < 100; i++)
            {
                data[i] = source[i];
            }
            printIntLine(data[0]);
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
25,26
27,28
27,29
28,29
29,30
29,31
31,32
31,33
31,34
33,34
35,36
36,37
38,39
38,40
38,41
38,42
39,40
40,41
40,42
41,42
43,44
45,46
45,47
45,48
45,49
46,47
47,48
47,49
48,49
51,52
51,53
52,53
55,56
56,57
58,59
59,60
60,61
60,62
61,62
61,63
62,63
64,65
66,67
66,68
67,68
69,70
71,72
72,73
72,74
73,74
75,76
75,77
76,77
79,80
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,30,32,34,37,42,44,49,50,53,54,57,63,65,68,70,74,77,78,82,84
-----computeFrom-----
13,14
13,15
19,20
19,21
47,48
47,49
51,52
51,53
60,61
60,62
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;InitializerList;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61_bad(){    int * data;    data = NULL;    data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61b_badSource(data);    {        int source[100] = {0}; /* fill with 0's */        {            size_t i;            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */            for (i = 0; i < 100; i++)            {                data[i] = source[i];            }            printIntLine(data[0]);            free(data);        }    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61_bad
{    int * data;    data = NULL;    data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61b_badSource(data);    {        int source[100] = {0}; /* fill with 0's */        {            size_t i;            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */            for (i = 0; i < 100; i++)            {                data[i] = source[i];            }            printIntLine(data[0]);            free(data);        }    }}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61b_badSource(data);
data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61b_badSource(data)
data
data
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61b_badSource(data)
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61b_badSource
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61b_badSource
data
data
{        int source[100] = {0}; /* fill with 0's */        {            size_t i;            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */            for (i = 0; i < 100; i++)            {                data[i] = source[i];            }            printIntLine(data[0]);            free(data);        }    }
int source[100] = {0};
int source[100] = {0};
int
source[100] = {0}
source
[100]
100
= {0}
{0}
0
{            size_t i;            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */            for (i = 0; i < 100; i++)            {                data[i] = source[i];            }            printIntLine(data[0]);            free(data);        }
size_t i;
size_t i;
size_t
size_t
i
i
for (i = 0; i < 100; i++)            {                data[i] = source[i];            }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{                data[i] = source[i];            }
data[i] = source[i];
data[i] = source[i]
data[i]
data
data
i
i
source[i]
source
source
i
i
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(0,5,0)
(9,13,0)
(12,17,0)
(15,31,0)
(24,31,0)
(5,0,0)
(34,3,0)
(1,25,0)
(3,10,0)
(26,3,0)
(11,25,0)
(25,0,0)
(10,4,0)
(24,0,0)
(2,33,0)
(36,17,0)
(17,31,0)
(32,25,0)
(33,37,0)
(27,0,0)
(6,4,0)
(25,11,0)
(8,34,0)
(23,28,0)
(30,13,0)
(0,4,0)
(13,4,0)
(5,13,0)
(29,5,0)
(20,24,0)
(33,31,0)
(24,2,0)
(2,18,0)
(34,0,0)
(35,3,0)
(38,33,0)
(37,10,0)
(28,31,0)
(16,10,0)
(19,33,0)
(21,31,0)
(33,2,0)
(14,37,0)
(11,3,0)
(7,24,0)
(37,14,1)
(24,31,1)
(33,37,1)
(8,11,1)
(36,28,1)
(12,36,1)
(27,13,1)
(25,32,1)
(20,17,1)
(0,5,1)
(2,33,1)
(13,30,1)
(14,0,1)
(7,20,1)
(24,7,1)
(17,12,1)
(34,0,1)
(32,1,1)
(21,15,1)
(17,31,1)
(33,31,1)
(15,37,1)
(23,2,1)
(34,8,1)
(19,38,1)
(29,27,1)
(38,24,1)
(5,29,1)
(1,17,1)
(30,9,1)
(28,31,1)
(24,0,1)
(22,34,1)
(31,21,1)
(11,25,1)
(36,31,1)
(25,0,1)
(28,23,1)
(5,13,1)
(33,19,1)
(7,17,2)
(24,0,2)
(33,37,2)
(2,33,2)
(17,31,2)
(36,17,2)
(28,17,2)
(12,17,2)
(17,17,2)
(33,31,2)
(19,17,2)
(24,17,2)
(33,17,2)
(20,17,2)
(28,31,2)
(5,13,2)
(11,25,2)
(23,17,2)
(34,0,2)
(24,31,2)
(0,5,2)
(25,0,2)
(2,17,2)
(38,17,2)
-----------------------------------
(0,data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61b_badSource(data)
(1,data)
(2,data[i] = source[i])
(3,)
(4,)
(5,CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_61b_badSource(data)
(6,data)
(7,i)
(8,data)
(9,data)
(10,)
(11,printIntLine(data[0])
(12,100)
(13,data = NULL)
(14,source)
(15,i)
(16,source)
(17,i < 100)
(18,)
(19,i)
(20,data)
(21,0)
(22,RET)
(23,i)
(24,data[i])
(25,data[0])
(26,for (i = 0; i < 100; i++)
(27,data)
(28,i++)
(29,data)
(30,NULL)
(31,i = 0)
(32,0)
(33,source[i])
(34,free(data)
(35,i)
(36,i)
(37,source[100] = {0})
(38,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^