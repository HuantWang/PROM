-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_postinc_06_bad()
{
    short data;
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (short)RAND32();
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
47,48
47,49
49,50
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,43,46,48,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_postinc_06_bad(){    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_rand_postinc_06_bad()
CWE190_Integer_Overflow__short_rand_postinc_06_bad
{    short data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(18,26,0)
(17,26,0)
(4,2,0)
(6,25,0)
(2,4,0)
(1,19,0)
(9,29,0)
(22,20,0)
(16,6,0)
(29,15,0)
(0,21,0)
(21,6,0)
(2,6,0)
(8,21,0)
(12,27,0)
(5,14,0)
(11,15,0)
(27,21,0)
(6,2,0)
(24,19,0)
(2,23,0)
(13,14,0)
(15,19,0)
(29,6,0)
(29,22,0)
(7,15,0)
(23,2,0)
(10,19,0)
(28,22,0)
(21,22,0)
(21,15,0)
(27,22,0)
(27,21,1)
(3,27,1)
(17,18,1)
(16,14,1)
(8,0,1)
(3,26,1)
(27,12,1)
(29,9,1)
(12,21,1)
(15,11,1)
(29,15,1)
(6,2,1)
(9,26,1)
(18,6,1)
(0,29,1)
(23,16,1)
(5,15,1)
(13,5,1)
(2,4,1)
(18,14,1)
(26,17,1)
(29,6,1)
(21,8,1)
(2,23,1)
(21,15,1)
(21,6,1)
(14,13,1)
(11,7,1)
(29,15,2)
(16,14,2)
(12,26,2)
(0,26,2)
(9,26,2)
(6,2,2)
(8,26,2)
(21,26,2)
(27,21,2)
(21,15,2)
(27,26,2)
(2,14,2)
(2,4,2)
(23,14,2)
(2,23,2)
(6,14,2)
(29,26,2)
(29,6,2)
(21,6,2)
-----------------------------------
(0,result)
(1,if(STATIC_CONST_FIVE==5)
(2,(short)
(3,RET)
(4,short)
(5,STATIC_CONST_FIVE)
(6,data = (short)
(7,data)
(8,data)
(9,data)
(10,if(STATIC_CONST_FIVE==5)
(11,0)
(12,result)
(13,5)
(14,STATIC_CONST_FIVE==5)
(15,data = 0)
(16,data)
(17,5)
(18,STATIC_CONST_FIVE)
(19,)
(20,)
(21,result = data)
(22,)
(23,RAND32()
(24,data)
(25,)
(26,STATIC_CONST_FIVE==5)
(27,printIntLine(result)
(28,result)
(29,data++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^