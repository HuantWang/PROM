-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_char_loop_41_badSink(char * data)
{
    {
        size_t i;
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        for (i = 0; i < 100; i++)
        {
            data[i] = source[i];
        }
        /* Ensure the destination buffer is null terminated */
        data[100-1] = '\0';
        printLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
11,14
11,15
11,16
11,17
11,18
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
23,24
25,26
26,27
26,28
26,29
26,30
27,28
29,30
32,33
32,34
35,36
36,37
36,38
37,38
37,39
38,39
40,41
40,42
44,45
44,46
44,47
44,48
45,46
46,47
46,48
47,48
50,51
50,52
51,52
54,55
55,56
57,58
58,59
59,60
59,61
60,61
60,62
61,62
63,64
65,66
65,67
66,67
68,69
70,71
71,72
71,73
72,73
72,74
73,74
75,76
75,77
79,80
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,6,8,9,15,17,20,22,24,28,30,31,33,34,39,41,42,43,48,49,52,53,56,62,64,67,69,74,76,77,78,82,84
-----computeFrom-----
32,33
32,34
36,37
36,38
40,41
40,42
46,47
46,48
50,51
50,52
59,60
59,61
71,72
71,73
75,76
75,77
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_char_loop_41_badSink(char * data){    {        size_t i;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = '\0';        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_char_loop_41_badSink(char * data)
CWE124_Buffer_Underwrite__malloc_char_loop_41_badSink
char * data
char
* data
*
data
{    {        size_t i;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = '\0';        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
{        size_t i;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = '\0';        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
size_t i;
size_t i;
size_t
size_t
i
i
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
for (i = 0; i < 100; i++)        {            data[i] = source[i];        }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{            data[i] = source[i];        }
data[i] = source[i];
data[i] = source[i]
data[i]
data
data
i
i
source[i]
source
source
i
i
data[100-1] = '\0';
data[100-1] = '\0'
data[100-1]
data
data
100-1
100
1
'\0'
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(8,4,0)
(43,15,0)
(44,7,0)
(6,25,0)
(10,8,0)
(11,20,0)
(0,11,0)
(38,2,0)
(4,30,0)
(27,36,0)
(7,19,0)
(22,25,0)
(30,32,0)
(37,30,0)
(12,19,0)
(42,30,0)
(41,4,0)
(23,20,0)
(42,15,0)
(33,5,0)
(31,25,0)
(45,4,0)
(25,31,0)
(26,8,0)
(7,37,0)
(25,20,0)
(5,31,0)
(36,30,0)
(35,30,0)
(19,7,0)
(40,43,0)
(4,8,0)
(9,20,0)
(1,30,0)
(31,17,0)
(24,19,0)
(39,14,0)
(13,37,0)
(29,2,0)
(34,42,0)
(43,14,0)
(28,14,0)
(5,15,0)
(2,20,0)
(43,36,0)
(21,30,0)
(5,20,0)
(3,5,0)
(14,43,0)
(5,3,1)
(3,33,1)
(31,25,1)
(34,36,1)
(42,15,1)
(44,4,1)
(23,37,1)
(11,0,1)
(19,12,1)
(14,28,1)
(6,5,1)
(10,41,1)
(20,9,1)
(29,20,1)
(7,19,1)
(24,44,1)
(22,6,1)
(28,39,1)
(5,15,1)
(25,20,1)
(43,15,1)
(13,7,1)
(2,38,1)
(8,26,1)
(29,11,1)
(12,24,1)
(33,2,1)
(41,45,1)
(26,10,1)
(4,8,1)
(37,13,1)
(43,14,1)
(18,42,1)
(40,2,1)
(42,34,1)
(25,22,1)
(38,29,1)
(27,43,1)
(0,31,1)
(11,20,1)
(39,40,1)
(36,27,1)
(9,23,1)
(5,20,1)
(2,20,1)
(42,15,2)
(25,20,2)
(5,2,2)
(38,2,2)
(3,2,2)
(31,2,2)
(0,2,2)
(29,2,2)
(22,2,2)
(5,15,2)
(6,2,2)
(4,8,2)
(11,20,2)
(43,15,2)
(33,2,2)
(7,19,2)
(5,20,2)
(2,20,2)
(43,14,2)
(25,2,2)
(31,25,2)
(11,2,2)
(2,2,2)
-----------------------------------
(0,i)
(1,source)
(2,i < 100)
(3,i)
(4,memset(source, 'C', 100-1)
(5,data[i])
(6,source)
(7,source[100-1])
(8,100-1)
(9,0)
(10,100)
(11,i++)
(12,1)
(13,'\\\\0')
(14,100-1)
(15,char * data)
(16,memset(source, \'C\', 100-1)
(17,)
(18,RET)
(19,100-1)
(20,i = 0)
(21,for (i = 0; i < 100; i++)
(22,i)
(23,i)
(24,100)
(25,source[i])
(26,1)
(27,'\\\\0')
(28,1)
(29,i)
(30,)
(31,data[i] = source[i])
(32,)
(33,data)
(34,data)
(35,i)
(36,data[100-1] = '\\\\0')
(37,source[100-1] = '\\\\0')
(38,100)
(39,100)
(40,data)
(41,'C')
(42,printLine(data)
(43,data[100-1])
(44,source)
(45,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^