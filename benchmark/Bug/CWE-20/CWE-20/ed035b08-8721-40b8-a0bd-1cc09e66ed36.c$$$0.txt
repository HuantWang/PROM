-----label-----
1
-----code-----
static void badSink()
{
    wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cpy_45_badData;
    {
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */
        wcscpy(data, source);
        printWLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
9,12
12,13
13,14
15,16
15,17
15,18
15,19
15,20
15,21
16,17
17,18
17,19
19,20
19,21
21,22
23,24
24,25
24,26
24,27
24,28
25,26
27,28
30,31
30,32
33,34
34,35
34,36
35,36
35,37
36,37
38,39
38,40
42,43
43,44
43,45
43,46
44,45
46,47
48,49
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
58,59
60,61
-----nextToken-----
2,4,8,10,11,14,18,20,22,26,28,29,31,32,37,39,40,41,45,47,49,53,55,59,61
-----computeFrom-----
30,31
30,32
34,35
34,36
38,39
38,40
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cpy_45_badData;    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        wcscpy(data, source);        printWLine(data);        free(data);    }}
static void
badSink()
badSink
{    wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cpy_45_badData;    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        wcscpy(data, source);        printWLine(data);        free(data);    }}
wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cpy_45_badData;
wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cpy_45_badData;
wchar_t
* data = CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cpy_45_badData
*
data
= CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cpy_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cpy_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cpy_45_badData
{        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        wcscpy(data, source);        printWLine(data);        free(data);    }
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
wcscpy(data, source);
wcscpy(data, source)
wcscpy
wcscpy
data
data
source
source
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(14,10,0)
(3,10,0)
(3,5,0)
(11,5,0)
(10,9,0)
(5,9,0)
(14,5,0)
(6,11,0)
(12,10,0)
(11,10,0)
(1,3,0)
(4,10,0)
(0,5,0)
(8,11,0)
(2,9,0)
(15,14,0)
(13,5,0)
(10,12,1)
(14,15,1)
(14,10,1)
(12,4,1)
(11,10,1)
(7,14,1)
(1,11,1)
(15,3,1)
(8,6,1)
(3,1,1)
(11,8,1)
(0,10,1)
(3,10,1)
(6,0,1)
(3,10,2)
(11,10,2)
(14,10,2)
-----------------------------------
(0,'\\\\0')
(1,data)
(2,data)
(3,printWLine(data)
(4,data)
(5,)
(6,data)
(7,RET)
(8,source)
(9,)
(10,* data = CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cpy_45_badData)
(11,wcscpy(data, source)
(12,CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cpy_45_badData)
(13,source)
(14,free(data)
(15,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^