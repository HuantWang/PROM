-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_preinc_13_bad()
{
    short data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_preinc_13_bad(){    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_preinc_13_bad()
CWE190_Integer_Overflow__short_fscanf_preinc_13_bad
{    short data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(7,15,0)
(27,4,0)
(26,18,0)
(18,29,0)
(11,2,0)
(20,11,0)
(5,18,0)
(13,4,0)
(6,10,0)
(16,10,0)
(1,5,0)
(14,2,0)
(22,15,0)
(18,2,0)
(13,12,0)
(29,17,0)
(28,18,0)
(23,2,0)
(3,29,0)
(8,9,0)
(19,13,0)
(2,10,0)
(5,29,0)
(0,9,0)
(25,13,0)
(4,13,0)
(4,2,0)
(21,10,0)
(11,29,0)
(4,2,1)
(15,22,1)
(2,23,1)
(25,15,1)
(24,9,1)
(19,25,1)
(26,11,1)
(11,20,1)
(1,18,1)
(11,2,1)
(18,2,1)
(20,9,1)
(24,5,1)
(5,1,1)
(28,26,1)
(27,19,1)
(8,15,1)
(8,13,1)
(7,2,1)
(13,4,1)
(23,14,1)
(9,0,1)
(22,7,1)
(4,27,1)
(0,8,1)
(18,28,1)
(5,18,1)
(25,15,2)
(11,9,2)
(13,15,2)
(18,2,2)
(26,9,2)
(28,9,2)
(20,9,2)
(4,2,2)
(5,18,2)
(27,15,2)
(18,9,2)
(13,4,2)
(4,15,2)
(1,9,2)
(19,15,2)
(5,9,2)
(11,2,2)
-----------------------------------
(0,5)
(1,result)
(2,data = 0)
(3,result)
(4,&data)
(5,printIntLine(result)
(6,if(GLOBAL_CONST_FIVE==5)
(7,GLOBAL_CONST_FIVE)
(8,GLOBAL_CONST_FIVE)
(9,GLOBAL_CONST_FIVE==5)
(10,)
(11,++data)
(12,)
(13,fscanf (stdin, "%hd", &data)
(14,data)
(15,GLOBAL_CONST_FIVE==5)
(16,data)
(17,)
(18,result = data)
(19,"%hd")
(20,data)
(21,if(GLOBAL_CONST_FIVE==5)
(22,5)
(23,0)
(24,RET)
(25,stdin)
(26,result)
(27,data)
(28,data)
(29,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^