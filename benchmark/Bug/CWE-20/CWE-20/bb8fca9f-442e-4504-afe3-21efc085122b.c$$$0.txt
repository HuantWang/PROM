-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_01_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
61,64
61,65
62,63
64,65
64,66
65,66
67,68
69,70
71,72
71,73
72,73
72,74
74,75
77,78
77,79
78,79
79,80
79,81
81,82
81,83
81,84
81,85
85,86
86,87
86,88
86,89
86,90
87,88
89,90
91,92
93,94
95,96
96,97
96,98
96,99
96,100
97,98
99,100
101,102
103,104
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,43,45,46,50,52,56,58,63,66,68,70,73,75,76,80,82,83,84,88,90,92,94,98,100,102,104
-----computeFrom-----
23,24
23,25
54,55
54,56
64,65
64,66
71,72
71,73
72,73
72,74
-----guardedBy-----
56,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_01_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnv_01_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnv_01_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnv(_P_WAIT, COMMAND_INT_PATH, args);
_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
_spawnv
_spawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(35,13,0)
(33,40,0)
(29,30,0)
(19,16,0)
(13,0,0)
(31,12,0)
(37,40,0)
(24,32,0)
(16,29,0)
(34,5,0)
(30,29,0)
(12,31,0)
(29,16,0)
(16,1,0)
(30,31,0)
(38,4,0)
(21,30,0)
(40,13,0)
(1,25,0)
(3,12,0)
(12,24,0)
(9,24,0)
(7,24,0)
(31,25,0)
(7,16,0)
(16,7,0)
(16,41,0)
(42,32,0)
(8,32,0)
(23,29,0)
(28,31,0)
(4,1,0)
(36,40,0)
(26,25,0)
(43,25,0)
(24,0,0)
(1,5,0)
(2,25,0)
(5,1,0)
(10,1,0)
(32,0,0)
(20,30,0)
(22,24,0)
(7,31,0)
(15,0,0)
(14,4,0)
(6,35,0)
(17,7,0)
(39,13,0)
(18,7,0)
(27,0,0)
(25,0,0)
(40,35,0)
(16,1,1)
(30,20,1)
(7,24,1)
(30,31,1)
(34,10,1)
(6,16,1)
(7,17,1)
(38,14,1)
(29,30,1)
(12,3,1)
(28,24,1)
(9,32,1)
(20,21,1)
(36,35,1)
(35,6,1)
(7,31,1)
(19,7,1)
(17,18,1)
(14,1,1)
(40,37,1)
(24,32,1)
(23,19,1)
(21,23,1)
(22,9,1)
(37,33,1)
(24,22,1)
(40,35,1)
(6,4,1)
(3,28,1)
(42,8,1)
(11,40,1)
(5,34,1)
(32,42,1)
(16,29,1)
(1,5,1)
(4,1,1)
(33,36,1)
(4,38,1)
(18,4,1)
(31,12,1)
(16,7,1)
(12,24,1)
(10,31,1)
(29,4,2)
(18,4,2)
(7,4,2)
(21,4,2)
(4,1,2)
(29,30,2)
(31,12,2)
(16,7,2)
(7,24,2)
(19,4,2)
(16,29,2)
(23,4,2)
(30,4,2)
(1,5,2)
(30,31,2)
(20,4,2)
(16,1,2)
(7,31,2)
(12,24,2)
(24,32,2)
(40,35,2)
(16,4,2)
(17,4,2)
-----------------------------------
(0,)
(1,* environment = GETENV(ENV_VARIABLE)
(2,if (environment != NULL)
(3,data)
(4,environment != NULL)
(5,GETENV(ENV_VARIABLE)
(6,args)
(7,data+dataLen)
(8,dataBuffer)
(9,data)
(10,environment)
(11,RET)
(12,strlen(data)
(13,)
(14,environment)
(15,data)
(16,strncat(data+dataLen, environment, 100-dataLen-1)
(17,dataLen)
(18,data)
(19,environment)
(20,1)
(21,dataLen)
(22,dataBuffer)
(23,100)
(24,data = dataBuffer)
(25,)
(26,environment)
(27,dataBuffer)
(28,dataLen)
(29,100-dataLen-1)
(30,dataLen-1)
(31,dataLen = strlen(data)
(32,dataBuffer[100] = COMMAND_ARG2)
(33,COMMAND_INT_PATH)
(34,ENV_VARIABLE)
(35,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(36,_P_WAIT)
(37,args)
(38,NULL)
(39,args)
(40,_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
(41,)
(42,COMMAND_ARG2)
(43,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^