-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_square_07_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticFive==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
            int result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
22,24
23,24
24,25
24,26
26,27
26,28
26,29
28,29
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
35,37
35,38
35,39
36,37
38,39
40,41
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
51,53
52,53
54,55
56,57
57,58
58,59
58,60
59,60
62,63
62,64
63,64
63,65
64,65
67,68
68,69
68,70
69,70
70,71
70,72
72,73
72,74
74,75
75,76
75,77
76,77
78,79
80,81
81,82
81,83
82,83
84,85
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,30,32,37,39,41,43,45,50,53,55,60,61,65,66,71,73,77,79,83,85
-----computeFrom-----
12,13
12,14
17,18
17,19
34,35
34,36
48,49
48,50
63,64
63,65
75,76
75,77
-----guardedBy-----
39,55
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_square_07_bad(){    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_square_07_bad()
CWE190_Integer_Overflow__int_fgets_square_07_bad
{    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
staticFive==5
staticFive
staticFive
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(staticFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(28,36,0)
(43,1,0)
(39,43,0)
(8,15,0)
(25,23,0)
(42,26,0)
(23,38,0)
(15,4,0)
(37,36,0)
(8,36,0)
(22,29,0)
(28,32,0)
(7,29,0)
(26,23,0)
(26,42,0)
(32,6,0)
(2,1,0)
(35,8,0)
(20,33,0)
(24,44,0)
(0,1,0)
(44,23,0)
(13,28,0)
(32,44,0)
(9,33,0)
(28,43,0)
(41,43,0)
(18,23,0)
(44,32,0)
(27,26,0)
(5,15,0)
(40,26,0)
(36,15,0)
(19,38,0)
(34,28,0)
(17,26,0)
(16,32,0)
(36,28,0)
(21,42,0)
(3,11,0)
(12,3,0)
(38,31,0)
(10,1,0)
(14,38,0)
(27,40,1)
(24,16,1)
(22,7,1)
(32,44,1)
(25,18,1)
(36,28,1)
(34,13,1)
(16,42,1)
(20,29,1)
(42,21,1)
(18,29,1)
(33,9,1)
(8,36,1)
(3,12,1)
(44,24,1)
(29,22,1)
(12,42,1)
(28,34,1)
(42,26,1)
(26,23,1)
(7,43,1)
(28,43,1)
(37,33,1)
(35,36,1)
(23,25,1)
(17,23,1)
(13,37,1)
(8,35,1)
(9,20,1)
(39,41,1)
(21,26,1)
(20,32,1)
(43,39,1)
(40,17,1)
(20,3,1)
(30,8,1)
(44,23,1)
(28,32,1)
(26,27,1)
(30,33,1)
(3,42,2)
(13,33,2)
(34,33,2)
(27,29,2)
(23,29,2)
(32,44,2)
(35,33,2)
(36,28,2)
(26,23,2)
(42,26,2)
(36,33,2)
(8,33,2)
(25,29,2)
(28,33,2)
(28,43,2)
(40,29,2)
(37,33,2)
(42,29,2)
(18,29,2)
(26,29,2)
(24,42,2)
(16,42,2)
(17,29,2)
(44,42,2)
(8,36,2)
(12,42,2)
(44,23,2)
(32,42,2)
(21,29,2)
(28,32,2)
-----------------------------------
(0,data)
(1,)
(2,if(staticFive==5)
(3,printLine("fgets()
(4,)
(5,result)
(6,)
(7,staticFive)
(8,printIntLine(result)
(9,5)
(10,if(staticFive==5)
(11,)
(12,"fgets()
(13,data)
(14,inputBuffer)
(15,)
(16,data)
(17,inputBuffer)
(18,inputBuffer)
(19,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(20,staticFive)
(21,NULL)
(22,5)
(23,inputBuffer[CHAR_ARRAY_SIZE] = "")
(24,inputBuffer)
(25,"")
(26,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(27,stdin)
(28,data * data)
(29,staticFive==5)
(30,RET)
(31,)
(32,data = atoi(inputBuffer)
(33,staticFive==5)
(34,data)
(35,result)
(36,result = data * data)
(37,result)
(38,)
(39,0)
(40,CHAR_ARRAY_SIZE)
(41,data)
(42,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(43,data = 0)
(44,atoi(inputBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^