-----label-----
1
-----code-----
static void badSink(void * data)
{
    {
        /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */
        size_t dataLen = strlen((char *)data);
        void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
        (void)wcscpy(dest, data);
        printLine((char *)dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
11,14
11,15
12,13
13,14
13,15
14,15
16,17
16,18
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
29,30
30,31
30,32
32,33
32,34
32,35
35,36
36,37
36,38
37,38
37,39
39,40
41,42
41,43
42,43
44,45
44,46
45,46
46,47
46,48
47,48
50,51
51,52
51,53
54,55
55,56
55,57
56,57
56,58
59,60
59,61
59,62
60,61
62,63
64,65
66,67
67,68
67,69
68,69
70,71
70,72
71,72
71,73
73,74
75,76
-----nextToken-----
2,4,6,8,9,15,17,21,24,26,28,31,33,34,38,40,43,48,49,52,53,57,58,61,63,65,69,72,74,76
-----computeFrom-----
44,45
44,46
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
static void badSink(void * data){    {        /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */        size_t dataLen = strlen((char *)data);        void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));        (void)wcscpy(dest, data);        printLine((char *)dest);    }}
static void
badSink(void * data)
badSink
void * data
void
* data
*
data
{    {        /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */        size_t dataLen = strlen((char *)data);        void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));        (void)wcscpy(dest, data);        printLine((char *)dest);    }}
{        /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */        size_t dataLen = strlen((char *)data);        void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));        (void)wcscpy(dest, data);        printLine((char *)dest);    }
size_t dataLen = strlen((char *)data);
size_t dataLen = strlen((char *)data);
size_t
size_t
dataLen = strlen((char *)data)
dataLen
= strlen((char *)data)
strlen((char *)data)
strlen
strlen
(char *)data
char *
char
*
*
data
data
void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
void
* dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
*
dest
= (void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
(void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
void *
void
*
*
ALLOCA((dataLen+1) * sizeof(wchar_t))
ALLOCA
ALLOCA
(dataLen+1) * sizeof(wchar_t)
(dataLen+1)
dataLen+1
dataLen
dataLen
1
sizeof(wchar_t)
wchar_t
wchar_t

(void)wcscpy(dest, data);
(void)wcscpy(dest, data)
void
void

wcscpy(dest, data)
wcscpy
wcscpy
dest
dest
data
data
printLine((char *)dest);
printLine((char *)dest)
printLine
printLine
(char *)dest
char *
char
*
*
dest
dest
-----joern-----
(14,15,0)
(27,6,0)
(27,17,0)
(14,21,0)
(11,17,0)
(0,10,0)
(4,5,0)
(19,10,0)
(12,0,0)
(20,15,0)
(8,11,0)
(19,8,0)
(17,16,0)
(1,6,0)
(4,11,0)
(24,10,0)
(29,11,0)
(30,21,0)
(9,5,0)
(18,4,0)
(15,20,0)
(22,6,0)
(28,4,0)
(10,24,0)
(8,23,0)
(0,21,0)
(5,17,0)
(6,11,0)
(15,13,0)
(10,19,0)
(3,24,0)
(23,8,0)
(15,14,0)
(26,15,0)
(4,13,0)
(5,9,0)
(2,17,0)
(21,14,0)
(21,17,0)
(25,0,0)
(10,0,0)
(6,1,0)
(6,27,0)
(5,4,0)
(31,17,0)
(8,19,0)
(11,8,0)
(0,21,1)
(5,9,1)
(24,3,1)
(10,24,1)
(8,19,1)
(28,18,1)
(4,28,1)
(6,1,1)
(6,22,1)
(27,6,1)
(15,20,1)
(25,12,1)
(10,0,1)
(11,8,1)
(5,4,1)
(19,10,1)
(0,25,1)
(18,11,1)
(3,0,1)
(15,13,1)
(4,13,1)
(8,23,1)
(29,21,1)
(21,14,1)
(26,30,1)
(15,26,1)
(7,27,1)
(12,29,1)
(22,5,1)
(4,11,1)
(6,11,1)
(14,15,1)
(10,24,2)
(8,23,2)
(8,19,2)
(4,11,2)
(6,1,2)
(5,4,2)
(15,20,2)
(10,0,2)
(14,15,2)
(6,11,2)
(11,8,2)
(4,13,2)
(15,13,2)
(0,21,2)
(27,6,2)
(5,9,2)
(19,10,2)
(21,14,2)
-----------------------------------
(0,dataLen+1)
(1,char *)
(2,dataLen)
(3,wchar_t)
(4,wcscpy(dest, data)
(5,(void)
(6,(char *)
(7,RET)
(8,(void *)
(9,void)
(10,(dataLen+1)
(11,* dest = (void *)
(12,dataLen)
(13,void * data)
(14,strlen((char *)
(15,(char *)
(16,)
(17,)
(18,dest)
(19,ALLOCA((dataLen+1)
(20,char *)
(21,dataLen = strlen((char *)
(22,dest)
(23,void *)
(24,sizeof(wchar_t)
(25,1)
(26,data)
(27,printLine((char *)
(28,data)
(29,dest)
(30,dataLen)
(31,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^