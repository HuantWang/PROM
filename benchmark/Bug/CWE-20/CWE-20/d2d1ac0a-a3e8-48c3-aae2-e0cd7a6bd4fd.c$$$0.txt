-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_44_bad()
{
    char * data;
    /* define a function pointer */
    void (*funcPtr) (char *) = badSink;
    data = NULL;
    {
        char * dataBuffer = (char *)malloc(100*sizeof(char));
        if (dataBuffer == NULL) {exit(-1);}
        memset(dataBuffer, 'A', 100-1);
        dataBuffer[100-1] = '\0';
        /* FLAW: Set data pointer to before the allocated memory buffer */
        data = dataBuffer - 8;
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
33,35
33,36
33,37
33,38
34,35
35,36
35,37
37,38
37,39
37,40
40,41
41,42
41,43
42,43
42,44
44,45
46,47
46,48
47,48
49,50
49,51
51,52
52,53
52,54
55,56
55,57
56,57
56,58
57,58
59,60
61,62
62,63
63,64
63,65
64,65
66,67
68,69
69,70
69,71
69,72
69,73
70,71
72,73
75,76
75,77
78,79
79,80
79,81
80,81
80,82
81,82
83,84
83,85
87,88
88,89
88,90
89,90
91,92
91,93
92,93
95,96
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,30,32,36,38,39,43,45,48,50,53,54,58,60,65,67,71,73,74,76,77,82,84,85,86,90,93,94,98,100
-----computeFrom-----
28,29
28,30
49,50
49,51
56,57
56,58
75,76
75,77
79,80
79,81
83,84
83,85
88,89
88,90
91,92
91,93
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_44_bad(){    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = badSink;    data = NULL;    {        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    /* use the function pointer */    funcPtr(data);}
void
CWE124_Buffer_Underwrite__malloc_char_cpy_44_bad()
CWE124_Buffer_Underwrite__malloc_char_cpy_44_bad
{    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = badSink;    data = NULL;    {        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    /* use the function pointer */    funcPtr(data);}
char * data;
char * data;
char
* data
*
data
void (*funcPtr) (char *) = badSink;
void (*funcPtr) (char *) = badSink;
void
(*funcPtr) (char *) = badSink
*funcPtr
*
funcPtr
char *
char
*
*

= badSink
badSink
badSink
data = NULL;
data = NULL
data
data
NULL
NULL
{        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(42,37,0)
(6,44,0)
(24,4,0)
(11,19,0)
(28,46,0)
(13,2,0)
(6,49,0)
(23,29,0)
(12,29,0)
(15,25,0)
(41,28,0)
(44,36,0)
(7,46,0)
(20,37,0)
(5,13,0)
(39,8,0)
(46,28,0)
(35,29,0)
(2,13,0)
(47,24,0)
(18,28,0)
(14,36,0)
(21,4,0)
(30,35,0)
(44,25,0)
(4,24,0)
(28,44,0)
(49,25,0)
(24,25,0)
(25,29,0)
(9,25,0)
(42,17,0)
(3,29,0)
(22,40,0)
(36,31,0)
(24,44,0)
(32,2,0)
(48,19,0)
(16,35,0)
(27,40,0)
(36,44,0)
(10,8,0)
(36,14,0)
(40,6,0)
(1,49,0)
(0,12,0)
(26,24,0)
(38,6,0)
(13,31,0)
(31,13,0)
(6,40,0)
(37,42,0)
(45,44,0)
(31,36,0)
(8,44,0)
(12,46,0)
(33,4,0)
(19,29,0)
(46,25,0)
(36,31,1)
(37,20,1)
(8,44,1)
(41,7,1)
(21,33,1)
(13,2,1)
(22,27,1)
(26,42,1)
(24,4,1)
(32,5,1)
(26,8,1)
(11,48,1)
(42,37,1)
(2,32,1)
(16,19,1)
(36,14,1)
(43,12,1)
(40,22,1)
(33,47,1)
(27,38,1)
(28,44,1)
(38,24,1)
(5,45,1)
(31,13,1)
(49,1,1)
(44,36,1)
(24,44,1)
(18,41,1)
(12,46,1)
(12,0,1)
(19,11,1)
(35,30,1)
(47,26,1)
(1,6,1)
(10,39,1)
(20,8,1)
(30,16,1)
(6,40,1)
(28,18,1)
(7,49,1)
(0,46,1)
(39,44,1)
(46,28,1)
(4,21,1)
(45,35,1)
(6,44,1)
(8,10,1)
(24,44,2)
(6,44,2)
(36,31,2)
(8,44,2)
(13,2,2)
(37,8,2)
(6,40,2)
(24,4,2)
(36,14,2)
(20,8,2)
(31,13,2)
(28,44,2)
(42,8,2)
(44,36,2)
(42,37,2)
(46,28,2)
(12,46,2)
-----------------------------------
(0,data)
(1,'\\\\0')
(2,sizeof(char)
(3,data)
(4,100-1)
(5,100)
(6,dataBuffer[100-1])
(7,data)
(8,dataBuffer == NULL)
(9,if (dataBuffer == NULL)
(10,NULL)
(11,badSink)
(12,funcPtr(data)
(13,100*sizeof(char)
(14,char *)
(15,dataBuffer)
(16,data)
(17,)
(18,8)
(19,(*funcPtr)
(20,1)
(21,1)
(22,1)
(23,funcPtr)
(24,memset(dataBuffer, \'A\', 100-1)
(25,)
(26,dataBuffer)
(27,100)
(28,dataBuffer - 8)
(29,)
(30,NULL)
(31,malloc(100*sizeof(char)
(32,char)
(33,100)
(34,memset(dataBuffer, 'A', 100-1)
(35,data = NULL)
(36,(char *)
(37,-1)
(38,dataBuffer)
(39,dataBuffer)
(40,100-1)
(41,dataBuffer)
(42,exit(-1)
(43,RET)
(44,* dataBuffer = (char *)
(45,dataBuffer)
(46,data = dataBuffer - 8)
(47,'A')
(48,funcPtr)
(49,dataBuffer[100-1] = '\\\\0')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^