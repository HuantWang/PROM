-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_18_bad()
{
    goto sink;
sink:
    {
        charVoid structCharVoid;
        structCharVoid.voidSecond = (void *)SRC_STR;
        /* Print the initial block pointed to by structCharVoid.voidSecond */
        printLine((char *)structCharVoid.voidSecond);
        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */
        memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */
        printLine((char *)structCharVoid.charFirst);
        printLine((char *)structCharVoid.voidSecond);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
8,9
8,10
10,11
10,12
10,13
10,14
10,15
10,16
10,17
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
19,21
20,21
23,24
23,25
24,25
24,26
26,27
28,29
30,31
31,32
31,33
32,33
34,35
34,36
35,36
35,37
37,38
39,40
39,41
40,41
43,44
44,45
44,46
44,47
44,48
45,46
47,48
47,49
48,49
51,52
53,54
54,55
55,56
57,58
58,59
58,60
59,60
59,61
60,61
60,62
61,62
64,65
64,66
65,66
66,67
66,68
67,68
68,69
69,70
69,71
70,71
73,74
74,75
74,76
79,80
80,81
80,82
81,82
83,84
83,85
84,85
84,86
86,87
88,89
88,90
89,90
92,93
93,94
93,95
94,95
96,97
96,98
97,98
97,99
99,100
101,102
101,103
102,103
-----nextToken-----
2,4,7,9,14,16,21,22,25,27,29,33,36,38,41,42,46,49,50,52,56,62,63,71,72,75,76,77,78,82,85,87,90,91,95,98,100,103,104
-----computeFrom-----
18,19
18,20
58,59
58,60
64,65
64,66
66,67
66,68
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;UnaryExpression;BinaryExpression;UnaryExpression;UnaryExpression;FieldReference;IdExpression;Name;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_18_bad(){    goto sink;sink:    {        charVoid structCharVoid;        structCharVoid.voidSecond = (void *)SRC_STR;        /* Print the initial block pointed to by structCharVoid.voidSecond */        printLine((char *)structCharVoid.voidSecond);        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */        memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */        printLine((char *)structCharVoid.charFirst);        printLine((char *)structCharVoid.voidSecond);    }}
void
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_18_bad()
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_18_bad
{    goto sink;sink:    {        charVoid structCharVoid;        structCharVoid.voidSecond = (void *)SRC_STR;        /* Print the initial block pointed to by structCharVoid.voidSecond */        printLine((char *)structCharVoid.voidSecond);        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */        memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */        printLine((char *)structCharVoid.charFirst);        printLine((char *)structCharVoid.voidSecond);    }}
goto sink;
sink
sink:    {        charVoid structCharVoid;        structCharVoid.voidSecond = (void *)SRC_STR;        /* Print the initial block pointed to by structCharVoid.voidSecond */        printLine((char *)structCharVoid.voidSecond);        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */        memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */        printLine((char *)structCharVoid.charFirst);        printLine((char *)structCharVoid.voidSecond);    }
sink
{        charVoid structCharVoid;        structCharVoid.voidSecond = (void *)SRC_STR;        /* Print the initial block pointed to by structCharVoid.voidSecond */        printLine((char *)structCharVoid.voidSecond);        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */        memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */        printLine((char *)structCharVoid.charFirst);        printLine((char *)structCharVoid.voidSecond);    }
charVoid structCharVoid;
charVoid structCharVoid;
charVoid
charVoid
structCharVoid
structCharVoid
structCharVoid.voidSecond = (void *)SRC_STR;
structCharVoid.voidSecond = (void *)SRC_STR
structCharVoid.voidSecond
structCharVoid
structCharVoid
voidSecond
(void *)SRC_STR
void *
void
*
*
SRC_STR
SRC_STR
printLine((char *)structCharVoid.voidSecond);
printLine((char *)structCharVoid.voidSecond)
printLine
printLine
(char *)structCharVoid.voidSecond
char *
char
*
*
structCharVoid.voidSecond
structCharVoid
structCharVoid
voidSecond
memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid))
memmove
memmove
structCharVoid.charFirst
structCharVoid
structCharVoid
charFirst
SRC_STR
SRC_STR
sizeof(structCharVoid)
(structCharVoid)
structCharVoid
structCharVoid
structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0';
structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'
structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1]
structCharVoid.charFirst
structCharVoid
structCharVoid
charFirst
(sizeof(structCharVoid.charFirst)/sizeof(char))-1
(sizeof(structCharVoid.charFirst)/sizeof(char))
sizeof(structCharVoid.charFirst)/sizeof(char)
sizeof(structCharVoid.charFirst)
(structCharVoid.charFirst)
structCharVoid.charFirst
structCharVoid
structCharVoid
charFirst
sizeof(char)
char
char

1
'\0'
printLine((char *)structCharVoid.charFirst);
printLine((char *)structCharVoid.charFirst)
printLine
printLine
(char *)structCharVoid.charFirst
char *
char
*
*
structCharVoid.charFirst
structCharVoid
structCharVoid
charFirst
printLine((char *)structCharVoid.voidSecond);
printLine((char *)structCharVoid.voidSecond)
printLine
printLine
(char *)structCharVoid.voidSecond
char *
char
*
*
structCharVoid.voidSecond
structCharVoid
structCharVoid
voidSecond
-----joern-----
(12,5,0)
(21,34,0)
(43,23,0)
(51,35,0)
(19,15,0)
(45,5,0)
(4,52,0)
(44,34,0)
(6,28,0)
(27,37,0)
(0,48,0)
(19,14,0)
(49,15,0)
(51,0,0)
(28,49,0)
(7,42,0)
(36,51,0)
(14,5,0)
(35,29,0)
(8,20,0)
(0,51,0)
(10,44,0)
(25,46,0)
(34,44,0)
(25,9,0)
(48,0,0)
(23,28,0)
(31,24,0)
(27,35,0)
(20,15,0)
(49,28,0)
(2,14,0)
(39,52,0)
(46,25,0)
(35,27,0)
(28,23,0)
(29,35,0)
(35,51,0)
(40,26,0)
(30,26,0)
(3,10,0)
(34,21,0)
(1,42,0)
(5,44,0)
(14,2,0)
(38,39,0)
(14,19,0)
(18,37,0)
(50,15,0)
(44,15,0)
(9,25,0)
(25,42,0)
(33,37,0)
(28,6,0)
(37,27,0)
(22,29,0)
(5,14,0)
(0,20,0)
(47,10,0)
(32,34,0)
(15,24,0)
(52,26,0)
(52,15,0)
(13,48,0)
(42,44,0)
(46,15,0)
(42,25,0)
(52,39,0)
(17,48,0)
(16,23,0)
(26,52,0)
(41,24,0)
(40,30,1)
(33,48,1)
(29,22,1)
(14,2,1)
(42,1,1)
(16,20,1)
(25,9,1)
(36,35,1)
(45,12,1)
(4,26,1)
(34,32,1)
(23,43,1)
(28,23,1)
(1,7,1)
(35,29,1)
(52,26,1)
(18,33,1)
(28,6,1)
(48,17,1)
(19,14,1)
(26,40,1)
(34,21,1)
(0,48,1)
(30,46,1)
(43,16,1)
(38,4,1)
(3,47,1)
(22,27,1)
(5,44,1)
(11,19,1)
(5,45,1)
(20,8,1)
(12,49,1)
(39,38,1)
(13,52,1)
(47,31,1)
(8,0,1)
(10,3,1)
(7,44,1)
(46,25,1)
(44,34,1)
(0,51,1)
(17,13,1)
(27,37,1)
(49,28,1)
(25,42,1)
(32,10,1)
(42,44,1)
(52,39,1)
(51,36,1)
(37,18,1)
(14,5,1)
(35,27,1)
(51,35,1)
(35,27,2)
(52,26,2)
(35,29,2)
(25,42,2)
(19,14,2)
(51,35,2)
(0,48,2)
(14,2,2)
(34,21,2)
(5,44,2)
(27,37,2)
(44,34,2)
(49,28,2)
(28,23,2)
(0,51,2)
(25,9,2)
(42,44,2)
(46,25,2)
(28,6,2)
(14,5,2)
(52,39,2)
-----------------------------------
(0,structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)
(1,voidSecond)
(2,char *)
(3,voidSecond)
(4,SRC_STR)
(5,structCharVoid.voidSecond)
(6,char *)
(7,structCharVoid)
(8,'\\\\0')
(9,char *)
(10,structCharVoid.voidSecond)
(11,RET)
(12,structCharVoid)
(13,structCharVoid)
(14,(char *)
(15,)
(16,structCharVoid)
(17,charFirst)
(18,charFirst)
(19,printLine((char *)
(20,structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)
(21,void *)
(22,char)
(23,structCharVoid.charFirst)
(24,)
(25,(char *)
(26,structCharVoid.charFirst)
(27,sizeof(structCharVoid.charFirst)
(28,(char *)
(29,sizeof(char)
(30,structCharVoid)
(31,goto sink;)
(32,SRC_STR)
(33,structCharVoid)
(34,(void *)
(35,sizeof(structCharVoid.charFirst)
(36,1)
(37,structCharVoid.charFirst)
(38,structCharVoid)
(39,sizeof(structCharVoid)
(40,charFirst)
(41,sink:)
(42,structCharVoid.voidSecond)
(43,charFirst)
(44,structCharVoid.voidSecond = (void *)
(45,voidSecond)
(46,printLine((char *)
(47,structCharVoid)
(48,structCharVoid.charFirst)
(49,printLine((char *)
(50,structCharVoid)
(51,(sizeof(structCharVoid.charFirst)
(52,memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^