-----label-----
1
-----code-----
void CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65_bad()
{
    wchar_t * data;
    /* define a function pointer */
    void (*funcPtr) (wchar_t *) = CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65b_badSink;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = wcslen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgetws() failed");
                    /* Restore NUL terminator if fgetws fails */
                    data[dataLen] = L'\0';
                }
                fclose(pFile);
            }
        }
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
30,31
30,32
30,33
32,33
34,35
36,37
37,38
37,39
38,39
40,41
42,43
42,44
42,45
43,44
44,45
44,46
45,46
47,48
47,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
59,60
59,61
62,63
62,64
63,64
63,65
64,65
64,66
66,67
69,70
69,71
70,71
71,72
71,73
72,73
74,75
74,76
74,77
75,76
77,78
80,81
80,82
81,82
81,83
82,83
84,85
86,87
86,88
87,88
87,89
88,89
88,90
89,90
89,91
89,92
89,93
90,91
92,93
92,94
93,94
95,96
97,98
97,99
98,99
98,100
101,102
102,103
102,104
104,105
106,107
108,109
110,111
110,112
111,112
112,113
112,114
113,114
116,117
117,118
117,119
118,119
118,120
119,120
121,122
124,125
125,126
125,127
126,127
128,129
130,131
131,132
131,133
132,133
134,135
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,29,31,33,35,39,41,46,48,52,54,58,60,61,65,67,68,73,76,78,79,83,85,91,94,96,99,100,103,105,107,109,114,115,120,122,123,127,129,133,135
-----computeFrom-----
37,38
37,39
63,64
63,65
64,65
64,66
71,72
71,73
81,82
81,83
88,89
88,90
92,93
92,94
102,103
102,104
117,118
117,119
-----guardedBy-----
67,122
85,109
83,129
94,120
105,122
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65_bad(){    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65b_badSink;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* use the function pointer */    funcPtr(data);}
void
CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65_bad()
CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65_bad
{    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65b_badSink;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* use the function pointer */    funcPtr(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
void (*funcPtr) (wchar_t *) = CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65b_badSink;
void (*funcPtr) (wchar_t *) = CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65b_badSink;
void
(*funcPtr) (wchar_t *) = CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65b_badSink
*funcPtr
*
funcPtr
wchar_t *
wchar_t
*
*

= CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65b_badSink
CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65b_badSink
CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65b_badSink
wchar_t dataBuffer[100] = L"";
wchar_t dataBuffer[100] = L"";
wchar_t
dataBuffer[100] = L""
dataBuffer
[100]
100
= L""
L""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(100-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(52,5,0)
(46,44,0)
(15,23,0)
(5,55,0)
(17,48,0)
(32,12,0)
(54,39,0)
(51,50,0)
(43,39,0)
(25,35,0)
(29,49,0)
(13,23,0)
(33,12,0)
(45,21,0)
(26,48,0)
(6,12,0)
(1,21,0)
(8,22,0)
(9,49,0)
(3,40,0)
(45,20,0)
(12,23,0)
(36,20,0)
(49,37,0)
(28,37,0)
(41,21,0)
(30,27,0)
(14,31,0)
(24,45,0)
(0,5,0)
(33,23,0)
(27,49,0)
(7,17,0)
(35,12,0)
(17,55,0)
(44,22,0)
(31,23,0)
(47,55,0)
(55,31,0)
(20,45,0)
(49,27,0)
(19,45,0)
(24,5,0)
(10,31,0)
(53,24,0)
(21,45,0)
(5,24,0)
(16,31,0)
(45,49,0)
(40,50,0)
(42,27,0)
(39,23,0)
(21,55,0)
(45,24,0)
(21,12,0)
(55,35,0)
(24,53,0)
(2,29,0)
(4,23,0)
(40,49,0)
(35,55,0)
(34,33,0)
(18,17,0)
(48,17,0)
(11,29,0)
(40,49,1)
(7,18,1)
(35,12,1)
(27,42,1)
(12,32,1)
(21,41,1)
(18,55,1)
(45,24,1)
(5,55,1)
(48,26,1)
(55,35,1)
(48,17,1)
(17,55,1)
(34,40,1)
(1,29,1)
(6,15,1)
(38,33,1)
(20,36,1)
(52,21,1)
(21,12,1)
(45,21,1)
(29,11,1)
(30,9,1)
(34,48,1)
(15,39,1)
(11,2,1)
(42,30,1)
(9,48,1)
(24,5,1)
(46,20,1)
(21,55,1)
(41,1,1)
(47,12,1)
(44,46,1)
(35,25,1)
(3,20,1)
(36,45,1)
(8,44,1)
(25,47,1)
(3,8,1)
(34,29,1)
(19,24,1)
(49,27,1)
(32,6,1)
(33,34,1)
(29,49,1)
(39,54,1)
(45,19,1)
(2,49,1)
(40,3,1)
(20,45,1)
(54,43,1)
(17,7,1)
(33,12,1)
(0,52,1)
(26,17,1)
(24,53,1)
(5,0,1)
(45,49,1)
(11,48,2)
(20,29,2)
(41,29,2)
(3,29,2)
(21,29,2)
(48,17,2)
(5,29,2)
(49,27,2)
(46,20,2)
(30,48,2)
(2,48,2)
(20,45,2)
(19,29,2)
(21,55,2)
(9,48,2)
(35,12,2)
(42,48,2)
(49,48,2)
(45,24,2)
(45,21,2)
(24,5,2)
(44,20,2)
(45,49,2)
(8,20,2)
(36,29,2)
(55,35,2)
(0,29,2)
(24,29,2)
(5,55,2)
(27,48,2)
(40,49,2)
(1,29,2)
(21,12,2)
(17,55,2)
(33,12,2)
(45,29,2)
(40,29,2)
(29,48,2)
(29,49,2)
(24,53,2)
(52,29,2)
-----------------------------------
(0,dataLen)
(1,data)
(2,pFile)
(3,pFile)
(4,data)
(5,100-dataLen)
(6,data)
(7,dataLen)
(8,\\\'\\\\0\\\')
(9,pFile)
(10,pFile)
(11,NULL)
(12,data = dataBuffer)
(13,funcPtr)
(14,dataLen)
(15,"")
(16,if (100-dataLen > 1)
(17,100-dataLen)
(18,100)
(19,pFile)
(20,fgetws(data+dataLen, (int)
(21,data+dataLen)
(22,)
(23,)
(24,(int)
(25,data)
(26,1)
(27,fopen(FILENAME, "r")
(28,if (pFile != NULL)
(29,pFile != NULL)
(30,FILENAME)
(31,)
(32,dataBuffer)
(33,funcPtr(data)
(34,data)
(35,wcslen(data)
(36,NULL)
(37,)
(38,RET)
(39,(*funcPtr)
(40,fclose(pFile)
(41,dataLen)
(42,"r")
(43,funcPtr)
(44,printLine("fgetws()
(45,fgetws(data+dataLen, (int)
(46,"fgetws()
(47,dataLen)
(48,100-dataLen > 1)
(49,pFile = fopen(FILENAME, "r")
(50,)
(51,if (fgetws(data+dataLen, (int)
(52,100)
(53,int)
(54,CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_65b_badSink)
(55,dataLen = wcslen(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^