-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_postinc_06_bad()
{
    unsigned int data;
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_postinc_06_bad(){    unsigned int data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_postinc_06_bad()
CWE190_Integer_Overflow__unsigned_int_max_postinc_06_bad
{    unsigned int data;    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(STATIC_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(17,7,0)
(4,7,0)
(20,8,0)
(18,11,0)
(21,7,0)
(19,25,0)
(24,9,0)
(8,7,0)
(10,16,0)
(5,2,0)
(21,25,0)
(9,0,0)
(21,9,0)
(3,9,0)
(15,25,0)
(25,2,0)
(4,21,0)
(13,2,0)
(14,11,0)
(8,25,0)
(26,4,0)
(6,21,0)
(22,2,0)
(23,16,0)
(7,1,0)
(8,9,0)
(27,21,0)
(24,16,1)
(21,9,1)
(4,26,1)
(21,27,1)
(8,20,1)
(11,14,1)
(8,9,1)
(6,8,1)
(4,21,1)
(20,11,1)
(18,16,1)
(8,25,1)
(21,25,1)
(26,21,1)
(19,15,1)
(16,23,1)
(18,9,1)
(14,18,1)
(23,10,1)
(9,3,1)
(25,19,1)
(12,4,1)
(10,25,1)
(12,11,1)
(3,24,1)
(27,6,1)
(6,11,2)
(26,11,2)
(4,11,2)
(8,25,2)
(20,11,2)
(4,21,2)
(21,25,2)
(9,16,2)
(3,16,2)
(8,9,2)
(24,16,2)
(21,11,2)
(27,11,2)
(21,9,2)
(8,11,2)
-----------------------------------
(0,)
(1,)
(2,)
(3,UINT_MAX)
(4,printUnsignedLine(result)
(5,if(STATIC_CONST_FIVE==5)
(6,result)
(7,)
(8,data++)
(9,data = UINT_MAX)
(10,STATIC_CONST_FIVE)
(11,STATIC_CONST_FIVE==5)
(12,RET)
(13,data)
(14,5)
(15,data)
(16,STATIC_CONST_FIVE==5)
(17,result)
(18,STATIC_CONST_FIVE)
(19,0)
(20,data)
(21,result = data)
(22,if(STATIC_CONST_FIVE==5)
(23,5)
(24,data)
(25,data = 0)
(26,result)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^