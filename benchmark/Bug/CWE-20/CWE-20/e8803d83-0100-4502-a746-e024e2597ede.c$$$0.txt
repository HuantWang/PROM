-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_13_bad()
{
    int64_t * data;
    data = NULL;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */
        data = (int64_t *)malloc(50*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
    }
    {
        int64_t source[100] = {0}; /* fill with 0's */
        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */
        memmove(data, source, 100*sizeof(int64_t));
        printLongLongLine(data[0]);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
58,61
58,62
59,60
60,61
60,62
61,62
63,64
63,65
63,66
65,66
67,68
68,69
70,71
71,72
71,73
71,74
71,75
72,73
74,75
76,77
78,79
78,80
80,81
81,82
81,83
82,83
85,86
86,87
86,88
87,88
89,90
89,91
90,91
93,94
94,95
94,96
95,96
97,98
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,39,43,44,48,50,55,57,62,64,66,69,73,75,77,79,83,84,88,91,92,96,98
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
38,39
38,40
46,47
46,48
78,79
78,80
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;InitializerList;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_13_bad(){    int64_t * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */        data = (int64_t *)malloc(50*sizeof(int64_t));        if (data == NULL) {exit(-1);}    }    {        int64_t source[100] = {0}; /* fill with 0's */        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */        memmove(data, source, 100*sizeof(int64_t));        printLongLongLine(data[0]);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_13_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_13_bad
{    int64_t * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */        data = (int64_t *)malloc(50*sizeof(int64_t));        if (data == NULL) {exit(-1);}    }    {        int64_t source[100] = {0}; /* fill with 0's */        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */        memmove(data, source, 100*sizeof(int64_t));        printLongLongLine(data[0]);        free(data);    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */        data = (int64_t *)malloc(50*sizeof(int64_t));        if (data == NULL) {exit(-1);}    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */        data = (int64_t *)malloc(50*sizeof(int64_t));        if (data == NULL) {exit(-1);}    }
data = (int64_t *)malloc(50*sizeof(int64_t));
data = (int64_t *)malloc(50*sizeof(int64_t))
data
data
(int64_t *)malloc(50*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(50*sizeof(int64_t))
malloc
malloc
50*sizeof(int64_t)
50
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
{        int64_t source[100] = {0}; /* fill with 0's */        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */        memmove(data, source, 100*sizeof(int64_t));        printLongLongLine(data[0]);        free(data);    }
int64_t source[100] = {0};
int64_t source[100] = {0};
int64_t
int64_t
source[100] = {0}
source
[100]
100
= {0}
{0}
0
memmove(data, source, 100*sizeof(int64_t));
memmove(data, source, 100*sizeof(int64_t))
memmove
memmove
data
data
source
source
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(5,35,0)
(22,35,0)
(17,13,0)
(15,43,0)
(33,16,0)
(0,26,0)
(6,17,0)
(12,5,0)
(21,2,0)
(15,19,0)
(5,10,0)
(25,35,0)
(24,5,0)
(40,35,0)
(11,44,0)
(29,14,0)
(20,33,0)
(41,20,0)
(38,39,0)
(17,6,0)
(5,2,0)
(10,5,0)
(32,2,0)
(1,4,0)
(7,15,0)
(8,33,0)
(44,11,0)
(26,33,0)
(10,39,0)
(25,20,0)
(11,43,0)
(2,36,0)
(27,36,0)
(42,10,0)
(23,16,0)
(3,4,0)
(37,40,0)
(33,11,0)
(9,19,0)
(31,26,0)
(14,35,0)
(18,36,0)
(11,33,0)
(5,40,0)
(14,2,0)
(39,10,0)
(43,11,0)
(30,6,0)
(20,2,0)
(34,20,0)
(19,15,0)
(5,33,0)
(20,25,0)
(43,15,0)
(35,36,0)
(14,33,0)
(0,33,1)
(33,11,1)
(19,9,1)
(31,0,1)
(30,26,1)
(25,20,1)
(37,4,1)
(3,2,1)
(8,4,1)
(14,29,1)
(20,34,1)
(20,33,1)
(20,2,1)
(5,40,1)
(5,2,1)
(2,32,1)
(5,33,1)
(29,25,1)
(39,38,1)
(38,42,1)
(26,33,1)
(41,5,1)
(24,40,1)
(17,6,1)
(34,41,1)
(5,10,1)
(40,37,1)
(14,33,1)
(43,15,1)
(12,24,1)
(28,14,1)
(11,44,1)
(1,3,1)
(10,39,1)
(37,17,1)
(32,21,1)
(26,31,1)
(9,7,1)
(6,30,1)
(7,8,1)
(11,43,1)
(42,12,1)
(14,2,1)
(15,19,1)
(4,1,1)
(37,26,1)
(33,11,2)
(14,33,2)
(26,33,2)
(26,4,2)
(31,4,2)
(30,26,2)
(17,26,2)
(20,2,2)
(20,33,2)
(11,43,2)
(11,4,2)
(15,19,2)
(7,4,2)
(5,33,2)
(0,4,2)
(9,4,2)
(15,4,2)
(11,44,2)
(43,15,2)
(25,20,2)
(19,4,2)
(6,26,2)
(14,2,2)
(17,6,2)
(5,10,2)
(5,2,2)
(8,4,2)
(33,4,2)
(43,4,2)
(10,39,2)
(5,40,2)
-----------------------------------
(0,data)
(1,5)
(2,data = NULL)
(3,GLOBAL_CONST_FIVE)
(4,GLOBAL_CONST_FIVE==5)
(5,memmove(data, source, 100*sizeof(int64_t)
(6,-1)
(7,50)
(8,data)
(9,int64_t)
(10,100*sizeof(int64_t)
(11,(int64_t *)
(12,source)
(13,)
(14,free(data)
(15,50*sizeof(int64_t)
(16,)
(17,exit(-1)
(18,data)
(19,sizeof(int64_t)
(20,data[0])
(21,data)
(22,source)
(23,if (data == NULL)
(24,data)
(25,printLongLongLine(data[0])
(26,data == NULL)
(27,if(GLOBAL_CONST_FIVE==5)
(28,RET)
(29,data)
(30,1)
(31,NULL)
(32,NULL)
(33,data = (int64_t *)
(34,0)
(35,)
(36,)
(37,source)
(38,int64_t)
(39,sizeof(int64_t)
(40,source[100] = {0})
(41,data)
(42,100)
(43,malloc(50*sizeof(int64_t)
(44,int64_t *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^