-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_21_bad()
{
    wchar_t * data;
    data = NULL;
    badStatic = 1; /* true */
    data = badSource(data);
    {
        size_t i;
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */
        for (i = 0; i < 100; i++)
        {
            data[i] = source[i];
        }
        data[100-1] = L'\0'; /* Ensure the destination buffer is null terminated */
        printWLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
23,24
24,25
24,26
25,26
27,28
27,29
28,29
30,31
32,33
32,34
32,35
32,36
32,37
32,38
32,39
32,40
33,34
34,35
34,36
35,36
37,38
39,40
40,41
40,42
42,43
42,44
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
53,55
56,57
57,58
57,59
58,59
58,60
59,60
61,62
61,63
65,66
65,67
65,68
65,69
66,67
67,68
67,69
68,69
71,72
71,73
72,73
75,76
76,77
78,79
79,80
80,81
80,82
81,82
81,83
82,83
84,85
86,87
86,88
87,88
89,90
91,92
92,93
92,94
93,94
93,95
94,95
96,97
96,98
100,101
101,102
101,103
102,103
104,105
106,107
107,108
107,109
108,109
110,111
-----nextToken-----
2,4,8,10,11,15,17,21,22,26,29,31,36,38,41,43,45,49,51,52,54,55,60,62,63,64,69,70,73,74,77,83,85,88,90,95,97,98,99,103,105,109,111
-----computeFrom-----
13,14
13,15
19,20
19,21
24,25
24,26
53,54
53,55
57,58
57,59
61,62
61,63
67,68
67,69
71,72
71,73
80,81
80,82
92,93
92,94
96,97
96,98
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_21_bad(){    wchar_t * data;    data = NULL;    badStatic = 1; /* true */    data = badSource(data);    {        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        data[100-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_21_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_21_bad
{    wchar_t * data;    data = NULL;    badStatic = 1; /* true */    data = badSource(data);    {        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        data[100-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        data[100-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }
size_t i;
size_t i;
size_t
size_t
i
i
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
for (i = 0; i < 100; i++)        {            data[i] = source[i];        }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{            data[i] = source[i];        }
data[i] = source[i];
data[i] = source[i]
data[i]
data
data
i
i
source[i]
source
source
i
i
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(18,36,0)
(25,1,0)
(19,25,0)
(11,16,0)
(32,36,0)
(10,19,0)
(2,6,0)
(23,6,0)
(20,25,0)
(3,1,0)
(32,14,0)
(36,12,0)
(27,3,0)
(30,3,0)
(7,1,0)
(4,1,0)
(5,36,0)
(13,12,0)
(22,3,0)
(20,12,0)
(31,25,0)
(35,20,0)
(25,19,0)
(19,7,0)
(24,30,0)
(37,20,0)
(29,3,0)
(21,3,0)
(9,28,0)
(28,12,0)
(17,28,0)
(26,12,0)
(34,7,0)
(8,7,0)
(36,32,0)
(30,25,0)
(21,25,0)
(20,32,0)
(0,21,0)
(6,1,0)
(38,3,0)
(15,3,0)
(16,12,0)
(19,7,1)
(30,24,1)
(28,9,1)
(20,12,1)
(16,12,1)
(32,36,1)
(0,29,1)
(17,12,1)
(20,25,1)
(34,8,1)
(30,25,1)
(25,19,1)
(28,12,1)
(24,21,1)
(21,0,1)
(5,18,1)
(12,26,1)
(20,37,1)
(17,16,1)
(11,32,1)
(29,28,1)
(10,31,1)
(7,34,1)
(33,30,1)
(2,7,1)
(6,23,1)
(21,25,1)
(13,22,1)
(18,20,1)
(26,13,1)
(36,5,1)
(36,12,1)
(9,17,1)
(37,35,1)
(31,6,1)
(22,25,1)
(19,10,1)
(16,11,1)
(23,2,1)
(35,28,1)
(36,28,2)
(5,28,2)
(35,28,2)
(36,12,2)
(9,28,2)
(20,12,2)
(20,28,2)
(19,7,2)
(37,28,2)
(11,28,2)
(21,25,2)
(18,28,2)
(17,28,2)
(28,28,2)
(25,19,2)
(30,25,2)
(16,28,2)
(32,28,2)
(32,36,2)
(16,12,2)
(28,12,2)
(20,25,2)
-----------------------------------
(0,data)
(1,)
(2,badStatic)
(3,)
(4,data)
(5,i)
(6,badStatic = 1)
(7,data = NULL)
(8,data)
(9,100)
(10,data)
(11,i)
(12,i = 0)
(13,i)
(14,)
(15,source)
(16,i++)
(17,i)
(18,source)
(19,badSource(data)
(20,data[i])
(21,printWLine(data)
(22,'\\\\0')
(23,1)
(24,data)
(25,data = badSource(data)
(26,0)
(27,for (i = 0; i < 100; i++)
(28,i < 100)
(29,'\\\\0')
(30,free(data)
(31,data)
(32,data[i] = source[i])
(33,RET)
(34,NULL)
(35,data)
(36,source[i])
(37,i)
(38,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^