-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_02_bad()
{
    char * data;
    data = NULL;
    if(1)
    {
        {
            char * dataBuffer = (char *)malloc(100*sizeof(char));
            if (dataBuffer == NULL) {exit(-1);}
            memset(dataBuffer, 'A', 100-1);
            dataBuffer[100-1] = '\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        strcpy(data, source);
        printLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
20,21
21,22
21,23
21,24
21,25
21,26
22,23
23,24
23,25
25,26
25,27
25,28
28,29
29,30
29,31
30,31
30,32
32,33
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
43,44
43,45
44,45
44,46
45,46
47,48
49,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
57,60
57,61
58,59
60,61
63,64
63,65
66,67
67,68
67,69
68,69
68,70
69,70
71,72
71,73
75,76
76,77
76,78
77,78
79,80
79,81
80,81
83,84
83,85
83,86
83,87
83,88
84,85
85,86
85,87
87,88
87,89
89,90
91,92
92,93
92,94
92,95
92,96
93,94
95,96
98,99
98,100
101,102
102,103
102,104
103,104
103,105
104,105
106,107
106,108
110,111
111,112
111,113
111,114
112,113
114,115
116,117
118,119
119,120
119,121
120,121
122,123
-----nextToken-----
2,4,8,10,11,15,17,19,24,26,27,31,33,36,38,41,42,46,48,53,55,59,61,62,64,65,70,72,73,74,78,81,82,86,88,90,94,96,97,99,100,105,107,108,109,113,115,117,121,123
-----computeFrom-----
13,14
13,15
37,38
37,39
44,45
44,46
63,64
63,65
67,68
67,69
71,72
71,73
76,77
76,78
79,80
79,81
98,99
98,100
102,103
102,104
106,107
106,108
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_02_bad(){    char * data;    data = NULL;    if(1)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_char_cpy_02_bad()
CWE124_Buffer_Underwrite__malloc_char_cpy_02_bad
{    char * data;    data = NULL;    if(1)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(1)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
1
{        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
strcpy(data, source);
strcpy(data, source)
strcpy
strcpy
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(61,37,0)
(36,43,0)
(64,5,0)
(7,23,0)
(9,65,0)
(30,31,0)
(26,69,0)
(60,20,0)
(27,62,0)
(43,41,0)
(53,38,0)
(52,43,0)
(4,31,0)
(33,57,0)
(49,43,0)
(0,35,0)
(18,65,0)
(45,48,0)
(20,9,0)
(2,18,0)
(54,18,0)
(24,30,0)
(63,68,0)
(8,35,0)
(65,68,0)
(62,5,0)
(21,5,0)
(59,48,0)
(8,34,0)
(4,65,0)
(28,31,0)
(68,65,0)
(67,62,0)
(12,24,0)
(9,3,0)
(1,36,0)
(62,41,0)
(63,38,0)
(65,31,0)
(29,8,0)
(34,41,0)
(5,48,0)
(68,32,0)
(9,20,0)
(24,65,0)
(51,69,0)
(55,41,0)
(19,20,0)
(50,9,0)
(62,30,0)
(66,31,0)
(14,65,0)
(3,31,0)
(31,17,0)
(43,36,0)
(32,68,0)
(37,7,0)
(11,24,0)
(56,36,0)
(38,63,0)
(16,30,0)
(15,38,0)
(57,5,0)
(41,48,0)
(4,69,0)
(30,24,0)
(58,15,0)
(6,3,0)
(42,34,0)
(40,4,0)
(38,15,0)
(10,35,0)
(22,4,0)
(7,37,0)
(68,63,0)
(35,8,0)
(69,4,0)
(57,30,0)
(57,41,0)
(4,69,1)
(34,42,1)
(67,34,1)
(5,21,1)
(50,4,1)
(40,7,1)
(4,65,1)
(20,19,1)
(6,9,1)
(13,5,1)
(42,8,1)
(62,30,1)
(27,67,1)
(62,27,1)
(54,2,1)
(19,60,1)
(21,64,1)
(68,32,1)
(60,50,1)
(46,57,1)
(35,10,1)
(58,53,1)
(12,11,1)
(24,12,1)
(57,33,1)
(49,13,1)
(3,6,1)
(56,52,1)
(38,15,1)
(63,38,1)
(29,43,1)
(51,26,1)
(68,63,1)
(24,65,1)
(7,37,1)
(33,62,1)
(36,1,1)
(26,22,1)
(52,49,1)
(14,13,1)
(2,65,1)
(62,5,1)
(1,56,1)
(57,30,1)
(9,20,1)
(53,14,1)
(9,65,1)
(30,24,1)
(0,29,1)
(18,65,1)
(69,51,1)
(43,36,1)
(57,5,1)
(11,16,1)
(22,40,1)
(16,3,1)
(15,58,1)
(37,61,1)
(10,0,1)
(49,30,1)
(40,18,1)
(18,54,1)
(65,68,1)
(8,35,1)
(61,18,1)
(63,38,2)
(26,13,2)
(19,13,2)
(43,36,2)
(16,13,2)
(9,65,2)
(9,13,2)
(4,69,2)
(61,18,2)
(68,32,2)
(57,5,2)
(11,13,2)
(68,13,2)
(62,30,2)
(50,13,2)
(69,13,2)
(15,13,2)
(24,65,2)
(4,65,2)
(40,13,2)
(20,13,2)
(60,13,2)
(14,13,2)
(30,24,2)
(6,13,2)
(53,13,2)
(65,68,2)
(37,18,2)
(63,13,2)
(2,13,2)
(9,20,2)
(18,65,2)
(8,35,2)
(54,13,2)
(68,63,2)
(51,13,2)
(24,13,2)
(30,13,2)
(18,13,2)
(38,15,2)
(57,30,2)
(62,5,2)
(38,13,2)
(58,13,2)
(3,13,2)
(4,13,2)
(65,13,2)
(7,18,2)
(12,13,2)
(22,13,2)
(7,37,2)
-----------------------------------
(0,100)
(1,1)
(2,dataBuffer)
(3,dataBuffer[100-1] = '\\\\0')
(4,memset(dataBuffer, \'A\', 100-1)
(5,data = NULL)
(6,\'\\\\0\')
(7,exit(-1)
(8,source[100-1])
(9,dataBuffer[100-1])
(10,1)
(11,dataBuffer)
(12,8)
(13,1)
(14,dataBuffer)
(15,sizeof(char)
(16,data)
(17,)
(18,dataBuffer == NULL)
(19,1)
(20,100-1)
(21,NULL)
(22,'A')
(23,)
(24,dataBuffer - 8)
(25,dataBuffer[100-1] = \'\\\\0\')
(26,100)
(27,source)
(28,if (dataBuffer == NULL)
(29,source)
(30,data = dataBuffer - 8)
(31,)
(32,char *)
(33,data)
(34,source[100-1] = '\\\\0')
(35,100-1)
(36,100-1)
(37,-1)
(38,100*sizeof(char)
(39,\'A\')
(40,dataBuffer)
(41,)
(42,'\\\\0')
(43,memset(source, 'C', 100-1)
(44,memset(source, \'C\', 100-1)
(45,data)
(46,RET)
(47,'\\\\0')
(48,)
(49,source)
(50,dataBuffer)
(51,1)
(52,'C')
(53,100)
(54,NULL)
(55,source)
(56,100)
(57,printLine(data)
(58,char)
(59,if(1)
(60,100)
(61,1)
(62,strcpy(data, source)
(63,malloc(100*sizeof(char)
(64,data)
(65,* dataBuffer = (char *)
(66,dataBuffer)
(67,data)
(68,(char *)
(69,100-1)
(70,memset(dataBuffer, 'A', 100-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^