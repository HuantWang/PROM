-----label-----
1
-----code-----
static void badSink(wchar_t * data)
{
    {
        wchar_t source[10+1] = SRC_STRING;
        /* Copy length + 1 to include NUL terminator from source */
        /* POTENTIAL FLAW: data may not have enough space to hold source */
        wcsncpy(data, source, wcslen(source) + 1);
        printWLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
11,14
11,15
12,13
13,14
13,15
15,16
15,17
15,18
17,18
18,19
18,20
21,22
22,23
24,25
25,26
25,27
25,28
25,29
26,27
28,29
30,31
32,33
32,34
33,34
33,35
34,35
36,37
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,6,8,9,14,16,19,20,23,27,29,31,35,37,38,42,44,48,50
-----computeFrom-----
18,19
18,20
32,33
32,34
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;BinaryExpression;LiteralExpression;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(wchar_t * data){    {        wchar_t source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        wcsncpy(data, source, wcslen(source) + 1);        printWLine(data);        free(data);    }}
static void
badSink(wchar_t * data)
badSink
wchar_t * data
wchar_t
* data
*
data
{    {        wchar_t source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        wcsncpy(data, source, wcslen(source) + 1);        printWLine(data);        free(data);    }}
{        wchar_t source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        wcsncpy(data, source, wcslen(source) + 1);        printWLine(data);        free(data);    }
wchar_t source[10+1] = SRC_STRING;
wchar_t source[10+1] = SRC_STRING;
wchar_t
source[10+1] = SRC_STRING
source
[10+1]
10+1
10
1
= SRC_STRING
SRC_STRING
SRC_STRING
wcsncpy(data, source, wcslen(source) + 1);
wcsncpy(data, source, wcslen(source) + 1)
wcsncpy
wcsncpy
data
data
source
source
wcslen(source) + 1
wcslen(source)
wcslen
wcslen
source
source
1
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(15,12,0)
(10,15,0)
(4,8,0)
(16,18,0)
(8,18,0)
(17,18,0)
(14,17,0)
(11,15,0)
(3,17,0)
(0,11,0)
(13,3,0)
(17,15,0)
(7,11,0)
(17,3,0)
(2,17,0)
(16,15,0)
(17,11,0)
(8,15,0)
(9,13,0)
(1,16,0)
(5,3,0)
(3,13,0)
(13,11,0)
(17,3,1)
(6,16,1)
(16,1,1)
(2,11,1)
(13,11,1)
(0,7,1)
(11,0,1)
(17,11,1)
(14,2,1)
(3,5,1)
(4,17,1)
(17,18,1)
(8,18,1)
(9,14,1)
(1,8,1)
(3,13,1)
(8,4,1)
(13,9,1)
(16,18,1)
(5,13,1)
(3,13,2)
(17,11,2)
(17,18,2)
(16,18,2)
(13,11,2)
(17,3,2)
(8,18,2)
-----------------------------------
(0,SRC_STRING)
(1,data)
(2,data)
(3,wcslen(source)
(4,data)
(5,1)
(6,RET)
(7,source)
(8,printWLine(data)
(9,source)
(10,source)
(11,source[10+1] = SRC_STRING)
(12,)
(13,wcslen(source)
(14,source)
(15,)
(16,free(data)
(17,wcsncpy(data, source, wcslen(source)
(18,wchar_t * data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^