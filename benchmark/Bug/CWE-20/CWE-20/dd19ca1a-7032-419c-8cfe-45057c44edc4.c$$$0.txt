-----label-----
1
-----code-----
void CWE127_Buffer_Underread__malloc_char_cpy_05_bad()
{
    char * data;
    data = NULL;
    if(staticTrue)
    {
        {
            char * dataBuffer = (char *)malloc(100*sizeof(char));
            if (dataBuffer == NULL) {exit(-1);}
            memset(dataBuffer, 'A', 100-1);
            dataBuffer[100-1] = '\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        char dest[100*2];
        memset(dest, 'C', 100*2-1); /* fill with 'C's */
        dest[100*2-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */
        strcpy(dest, data);
        printLine(dest);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
21,22
22,23
22,24
22,25
22,26
22,27
23,24
24,25
24,26
26,27
26,28
26,29
29,30
30,31
30,32
31,32
31,33
33,34
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
44,45
44,46
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
58,61
58,62
59,60
61,62
64,65
64,66
67,68
68,69
68,70
69,70
69,71
70,71
72,73
72,74
76,77
77,78
77,79
78,79
80,81
80,82
81,82
84,85
84,86
84,87
84,88
84,89
85,86
86,87
86,88
88,89
88,90
90,91
91,92
91,93
94,95
95,96
95,97
95,98
95,99
96,97
98,99
101,102
101,103
102,103
102,104
106,107
107,108
107,109
108,109
108,110
109,110
111,112
111,113
112,113
112,114
117,118
118,119
118,120
118,121
119,120
121,122
123,124
125,126
126,127
126,128
127,128
129,130
-----nextToken-----
2,4,8,10,11,15,17,20,25,27,28,32,34,37,39,42,43,47,49,54,56,60,62,63,65,66,71,73,74,75,79,82,83,87,89,92,93,97,99,100,103,104,105,110,113,114,115,116,120,122,124,128,130
-----computeFrom-----
13,14
13,15
38,39
38,40
45,46
45,47
64,65
64,66
68,69
68,70
72,73
72,74
77,78
77,79
80,81
80,82
91,92
91,93
101,102
101,103
102,103
102,104
107,108
107,109
111,112
111,113
112,113
112,114
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE127_Buffer_Underread__malloc_char_cpy_05_bad(){    char * data;    data = NULL;    if(staticTrue)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char dest[100*2];        memset(dest, 'C', 100*2-1); /* fill with 'C's */        dest[100*2-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        strcpy(dest, data);        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE127_Buffer_Underread__malloc_char_cpy_05_bad()
CWE127_Buffer_Underread__malloc_char_cpy_05_bad
{    char * data;    data = NULL;    if(staticTrue)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char dest[100*2];        memset(dest, 'C', 100*2-1); /* fill with 'C's */        dest[100*2-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        strcpy(dest, data);        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(staticTrue)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
staticTrue
staticTrue
{        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        char dest[100*2];        memset(dest, 'C', 100*2-1); /* fill with 'C's */        dest[100*2-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        strcpy(dest, data);        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
char dest[100*2];
char dest[100*2];
char
dest[100*2]
dest
[100*2]
100*2
100
2
memset(dest, 'C', 100*2-1);
memset(dest, 'C', 100*2-1)
memset
memset
dest
dest
'C'
100*2-1
100*2
100
2
1
dest[100*2-1] = '\0';
dest[100*2-1] = '\0'
dest[100*2-1]
dest
dest
100*2-1
100*2
100
2
1
'\0'
strcpy(dest, data);
strcpy(dest, data)
strcpy
strcpy
dest
dest
data
data
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(44,18,0)
(8,15,0)
(25,51,0)
(51,9,0)
(24,45,0)
(4,20,0)
(10,37,0)
(37,49,0)
(11,51,0)
(9,51,0)
(72,14,0)
(7,11,0)
(21,69,0)
(29,65,0)
(24,18,0)
(59,9,0)
(50,22,0)
(1,58,0)
(3,15,0)
(12,70,0)
(51,11,0)
(70,24,0)
(28,9,0)
(41,45,0)
(60,56,0)
(68,57,0)
(35,22,0)
(72,69,0)
(41,20,0)
(73,57,0)
(58,35,0)
(74,14,0)
(54,22,0)
(29,39,0)
(14,72,0)
(16,70,0)
(34,35,0)
(47,22,0)
(69,45,0)
(18,13,0)
(42,50,0)
(15,3,0)
(32,3,0)
(43,3,0)
(58,50,0)
(41,57,0)
(64,50,0)
(19,45,0)
(56,45,0)
(57,41,0)
(11,35,0)
(20,18,0)
(17,18,0)
(69,72,0)
(2,24,0)
(45,69,0)
(0,52,0)
(3,32,0)
(27,14,0)
(49,45,0)
(58,37,0)
(37,18,0)
(23,56,0)
(15,33,0)
(39,29,0)
(38,32,0)
(33,35,0)
(48,32,0)
(24,70,0)
(46,11,0)
(52,35,0)
(45,18,0)
(61,27,0)
(6,24,0)
(5,41,0)
(69,21,0)
(53,49,0)
(40,58,0)
(62,33,0)
(36,49,0)
(49,37,0)
(14,27,0)
(26,39,0)
(25,9,1)
(68,5,1)
(4,41,1)
(45,69,1)
(55,50,1)
(58,40,1)
(24,70,1)
(66,52,1)
(19,55,1)
(5,24,1)
(43,32,1)
(29,39,1)
(12,2,1)
(9,59,1)
(11,51,1)
(1,33,1)
(23,45,1)
(6,29,1)
(58,37,1)
(61,74,1)
(49,45,1)
(40,1,1)
(16,12,1)
(41,57,1)
(36,53,1)
(7,37,1)
(2,6,1)
(24,45,1)
(7,55,1)
(33,62,1)
(10,20,1)
(73,68,1)
(28,46,1)
(15,3,1)
(51,9,1)
(72,14,1)
(6,56,1)
(41,45,1)
(50,64,1)
(51,25,1)
(48,38,1)
(57,73,1)
(20,4,1)
(60,23,1)
(74,19,1)
(49,36,1)
(8,11,1)
(3,32,1)
(53,10,1)
(27,61,1)
(37,49,1)
(46,7,1)
(3,43,1)
(52,0,1)
(32,48,1)
(38,8,1)
(39,26,1)
(69,21,1)
(62,15,1)
(56,45,1)
(14,27,1)
(69,72,1)
(26,56,1)
(70,16,1)
(56,60,1)
(59,28,1)
(58,50,1)
(0,58,1)
(64,42,1)
(69,55,2)
(4,55,2)
(49,45,2)
(72,14,2)
(70,55,2)
(29,39,2)
(41,57,2)
(41,55,2)
(10,55,2)
(24,55,2)
(45,55,2)
(58,50,2)
(3,32,2)
(23,55,2)
(5,55,2)
(53,55,2)
(11,51,2)
(74,55,2)
(49,55,2)
(15,3,2)
(24,45,2)
(26,56,2)
(60,55,2)
(14,27,2)
(73,55,2)
(68,55,2)
(39,56,2)
(12,55,2)
(61,55,2)
(56,55,2)
(72,55,2)
(27,55,2)
(36,55,2)
(57,55,2)
(20,55,2)
(29,56,2)
(16,55,2)
(19,55,2)
(51,9,2)
(41,45,2)
(2,55,2)
(6,55,2)
(69,21,2)
(45,69,2)
(58,37,2)
(24,70,2)
(14,55,2)
(37,55,2)
(37,49,2)
(56,45,2)
(69,72,2)
-----------------------------------
(0,dest)
(1,dest)
(2,\'A\')
(3,100*2-1)
(4,\'\\\\0\')
(5,dataBuffer)
(6,dataBuffer)
(7,dest)
(8,dest)
(9,100*2)
(10,data)
(11,memset(dest, 'C', 100*2-1)
(12,100)
(13,)
(14,100*sizeof(char)
(15,dest[100*2-1])
(16,1)
(17,if (dataBuffer == NULL)
(18,)
(19,dataBuffer)
(20,dataBuffer[100-1] = \'\\\\0\')
(21,char *)
(22,)
(23,dataBuffer)
(24,memset(dataBuffer, 'A', 100-1)
(25,1)
(26,1)
(27,sizeof(char)
(28,100)
(29,exit(-1)
(30,dataBuffer[100-1] = '\\\\0')
(31,memset(dest, \'C\', 100*2-1)
(32,100*2)
(33,dest[100*2-1] = '\\\\0')
(34,dest)
(35,)
(36,8)
(37,data = dataBuffer - 8)
(38,100)
(39,-1)
(40,data)
(41,dataBuffer[100-1])
(42,data)
(43,1)
(44,dataBuffer)
(45,* dataBuffer = (char *)
(46,'C')
(47,if(staticTrue)
(48,2)
(49,dataBuffer - 8)
(50,data = NULL)
(51,100*2-1)
(52,printLine(dest)
(53,dataBuffer)
(54,data)
(55,staticTrue)
(56,dataBuffer == NULL)
(57,100-1)
(58,strcpy(dest, data)
(59,2)
(60,NULL)
(61,char)
(62,'\\\\0')
(63,'\\\\0')
(64,NULL)
(65,)
(66,RET)
(67,memset(dataBuffer, \'A\', 100-1)
(68,100)
(69,(char *)
(70,100-1)
(71,'A')
(72,malloc(100*sizeof(char)
(73,1)
(74,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^