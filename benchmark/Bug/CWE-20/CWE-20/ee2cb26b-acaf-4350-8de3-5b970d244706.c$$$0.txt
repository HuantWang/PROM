-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_rand_preinc_16_bad()
{
    char data;
    data = ' ';
    while(1)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (char)RAND32();
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            char result = data;
            printHexCharLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
27,28
28,29
31,32
31,33
33,34
33,35
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,17,22,25,26,29,30,32,38,41,43,46,50,52,53
-----computeFrom-----
12,13
12,14
20,21
20,22
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__char_rand_preinc_16_bad(){    char data;    data = ' ';    while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (char)RAND32();        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__char_rand_preinc_16_bad()
CWE190_Integer_Overflow__char_rand_preinc_16_bad
{    char data;    data = ' ';    while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (char)RAND32();        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }        break;    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
while(1)    {        /* POTENTIAL FLAW: Use a random value */        data = (char)RAND32();        break;    }
1
{        /* POTENTIAL FLAW: Use a random value */        data = (char)RAND32();        break;    }
data = (char)RAND32();
data = (char)RAND32()
data
data
(char)RAND32()
char
char

RAND32()
RAND32
RAND32
break;
while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
break;
-----joern-----
(28,3,0)
(22,28,0)
(23,1,0)
(12,6,0)
(6,24,0)
(27,28,0)
(23,10,0)
(12,1,0)
(7,6,0)
(3,28,0)
(26,4,0)
(13,1,0)
(10,1,0)
(1,9,0)
(2,6,0)
(28,27,0)
(28,22,0)
(25,10,0)
(14,23,0)
(0,22,0)
(8,12,0)
(18,24,0)
(20,9,0)
(22,4,0)
(10,22,0)
(19,24,0)
(21,10,0)
(10,6,0)
(12,22,0)
(11,24,0)
(5,17,1)
(8,17,1)
(5,20,1)
(16,6,1)
(7,2,1)
(10,22,1)
(10,6,1)
(12,22,1)
(22,28,1)
(14,10,1)
(27,0,1)
(12,6,1)
(20,23,1)
(23,10,1)
(23,14,1)
(28,3,1)
(10,25,1)
(26,22,1)
(0,16,1)
(17,26,1)
(6,7,1)
(25,21,1)
(21,12,1)
(28,27,1)
(12,8,1)
(17,16,1)
(12,17,2)
(10,6,2)
(12,6,2)
(25,17,2)
(14,17,2)
(26,16,2)
(28,16,2)
(27,16,2)
(28,3,2)
(22,16,2)
(0,16,2)
(8,17,2)
(10,17,2)
(12,22,2)
(23,10,2)
(23,17,2)
(22,28,2)
(20,17,2)
(28,27,2)
(21,17,2)
(10,22,2)
-----------------------------------
(0,data)
(1,)
(2,data)
(3,char)
(4,)
(5,RET)
(6,data = \' \')
(7,' ')
(8,data)
(9,)
(10,result = data)
(11,while(1)
(12,++data)
(13,result)
(14,result)
(15,data = ' ')
(16,1)
(17,1)
(18,while(1)
(19,data)
(20,break;)
(21,result)
(22,data = (char)
(23,printHexCharLine(result)
(24,)
(25,data)
(26,break;)
(27,RAND32()
(28,(char)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^