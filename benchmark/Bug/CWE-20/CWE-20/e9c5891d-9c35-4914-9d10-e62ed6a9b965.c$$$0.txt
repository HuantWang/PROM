-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_square_05_bad()
{
    int64_t data;
    data = 0LL;
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%" SCNd64, &data);
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
            int64_t result = data * data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
26,27
26,28
27,28
28,29
28,30
29,30
31,32
31,33
33,34
34,35
34,36
35,36
37,38
39,40
40,41
40,42
41,42
43,44
-----nextToken-----
2,4,9,11,15,16,19,24,30,32,36,38,42,44
-----computeFrom-----
13,14
13,15
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ProblemStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_square_05_bad(){    int64_t data;    data = 0LL;    if(staticTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_square_05_bad()
CWE190_Integer_Overflow__int64_t_fscanf_square_05_bad
{    int64_t data;    data = 0LL;    if(staticTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(staticTrue)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
fscanf (stdin, "%" SCNd64, &data);
if(staticTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(3,15,0)
(15,10,0)
(13,12,0)
(11,12,0)
(7,6,0)
(14,10,0)
(7,10,0)
(6,0,0)
(2,12,0)
(5,12,0)
(1,6,0)
(10,6,0)
(17,7,0)
(10,15,0)
(4,15,0)
(9,8,1)
(8,2,1)
(4,3,1)
(14,9,1)
(7,17,1)
(15,4,1)
(10,15,1)
(3,14,1)
(16,7,1)
(16,9,1)
(7,10,1)
(17,10,1)
(15,9,2)
(7,9,2)
(3,9,2)
(7,10,2)
(4,9,2)
(14,9,2)
(10,9,2)
(17,9,2)
(10,15,2)
-----------------------------------
(0,)
(1,result)
(2,L)
(3,data)
(4,data)
(5,if(staticTrue)
(6,)
(7,printLongLongLine(result)
(8,staticTrue)
(9,staticTrue)
(10,result = data * data)
(11,if(staticTrue)
(12,)
(13,data)
(14,result)
(15,data * data)
(16,RET)
(17,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^