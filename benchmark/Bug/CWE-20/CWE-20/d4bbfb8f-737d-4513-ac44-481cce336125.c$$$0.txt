-----label-----
1
-----code-----
static void badSink(char * data)
{
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        strcpy(data, source);
        printLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
11,14
11,15
11,16
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
26,28
29,30
30,31
30,32
31,32
31,33
32,33
34,35
34,36
38,39
39,40
39,41
39,42
40,41
42,43
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,6,8,9,14,16,18,22,24,25,27,28,33,35,36,37,41,43,45,49,51
-----computeFrom-----
26,27
26,28
30,31
30,32
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(char * data){    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
static void
badSink(char * data)
badSink
char * data
char
* data
*
data
{    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
strcpy(data, source);
strcpy(data, source)
strcpy
strcpy
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(22,0,0)
(10,9,0)
(15,11,0)
(14,13,0)
(18,1,0)
(12,3,0)
(3,11,0)
(13,1,0)
(15,17,0)
(8,15,0)
(4,16,0)
(16,0,0)
(0,16,0)
(3,17,0)
(11,23,0)
(2,16,0)
(0,11,0)
(5,0,0)
(13,9,0)
(9,11,0)
(1,13,0)
(7,15,0)
(6,11,0)
(20,1,0)
(14,0,1)
(16,4,1)
(19,3,1)
(15,7,1)
(8,9,1)
(18,20,1)
(22,5,1)
(3,12,1)
(15,17,1)
(13,1,1)
(4,2,1)
(3,17,1)
(2,22,1)
(10,13,1)
(1,18,1)
(0,16,1)
(12,15,1)
(20,14,1)
(9,10,1)
(7,8,1)
(15,17,2)
(3,17,2)
(13,1,2)
(0,16,2)
-----------------------------------
(0,memset(source, 'C', 100-1)
(1,100-1)
(2,100)
(3,printLine(data)
(4,1)
(5,source)
(6,source)
(7,source)
(8,data)
(9,source[100-1] = '\\\\0')
(10,'\\\\0')
(11,)
(12,data)
(13,source[100-1])
(14,source)
(15,strcpy(data, source)
(16,100-1)
(17,char * data)
(18,1)
(19,RET)
(20,100)
(21,memset(source, \'C\', 100-1)
(22,'C')
(23,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^