-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_34_bad()
{
    wchar_t * data;
    CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_34_unionType myUnion;
    data = NULL;
    {
        wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
        if (dataBuffer == NULL) {exit(-1);}
        wmemset(dataBuffer, L'A', 100-1);
        dataBuffer[100-1] = L'\0';
        /* FLAW: Set data pointer to before the allocated memory buffer */
        data = dataBuffer - 8;
    }
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        {
            wchar_t source[100];
            wmemset(source, L'C', 100-1); /* fill with 'C's */
            source[100-1] = L'\0'; /* null terminate */
            /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
            wcscpy(data, source);
            printWLine(data);
            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
             * returned by malloc() so can't safely call free() on it */
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
24,25
24,26
24,27
24,28
24,29
25,26
26,27
26,28
28,29
28,30
28,31
31,32
32,33
32,34
33,34
33,35
35,36
37,38
37,39
38,39
40,41
40,42
42,43
43,44
43,45
46,47
46,48
47,48
47,49
48,49
50,51
52,53
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
60,63
60,64
61,62
63,64
66,67
66,68
69,70
70,71
70,72
71,72
71,73
72,73
74,75
74,76
78,79
79,80
79,81
80,81
82,83
82,84
83,84
86,87
87,88
87,89
88,89
88,90
89,90
92,93
94,95
94,96
95,96
96,97
96,98
98,99
98,100
98,101
101,102
102,103
102,104
103,104
106,107
106,108
106,109
106,110
106,111
107,108
108,109
108,110
110,111
110,112
112,113
114,115
115,116
115,117
115,118
115,119
116,117
118,119
121,122
121,123
124,125
125,126
125,127
126,127
126,128
127,128
129,130
129,131
133,134
134,135
134,136
134,137
135,136
137,138
139,140
141,142
142,143
142,144
143,144
145,146
-----nextToken-----
2,4,8,10,11,15,17,21,23,27,29,30,34,36,39,41,44,45,49,51,56,58,62,64,65,67,68,73,75,76,77,81,84,85,90,91,93,97,99,100,104,105,109,111,113,117,119,120,122,123,128,130,131,132,136,138,140,144,146
-----computeFrom-----
19,20
19,21
40,41
40,42
47,48
47,49
66,67
66,68
70,71
70,72
74,75
74,76
79,80
79,81
82,83
82,84
87,88
87,89
121,122
121,123
125,126
125,127
129,130
129,131
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_34_bad(){    wchar_t * data;    CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_34_unionType myUnion;    data = NULL;    {        wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));        if (dataBuffer == NULL) {exit(-1);}        wmemset(dataBuffer, L'A', 100-1);        dataBuffer[100-1] = L'\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t source[100];            wmemset(source, L'C', 100-1); /* fill with 'C's */            source[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */            wcscpy(data, source);            printWLine(data);            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location             * returned by malloc() so can't safely call free() on it */        }    }}
void
CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_34_bad()
CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_34_bad
{    wchar_t * data;    CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_34_unionType myUnion;    data = NULL;    {        wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));        if (dataBuffer == NULL) {exit(-1);}        wmemset(dataBuffer, L'A', 100-1);        dataBuffer[100-1] = L'\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t source[100];            wmemset(source, L'C', 100-1); /* fill with 'C's */            source[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */            wcscpy(data, source);            printWLine(data);            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location             * returned by malloc() so can't safely call free() on it */        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_34_unionType myUnion;
CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_34_unionType myUnion;
CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_34_unionType
CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_34_unionType
myUnion
myUnion
data = NULL;
data = NULL
data
data
NULL
NULL
{        wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));        if (dataBuffer == NULL) {exit(-1);}        wmemset(dataBuffer, L'A', 100-1);        dataBuffer[100-1] = L'\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBuffer, L'A', 100-1);
wmemset(dataBuffer, L'A', 100-1)
wmemset
wmemset
dataBuffer
dataBuffer
L'A'
100-1
100
1
dataBuffer[100-1] = L'\0';
dataBuffer[100-1] = L'\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
L'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        {            wchar_t source[100];            wmemset(source, L'C', 100-1); /* fill with 'C's */            source[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */            wcscpy(data, source);            printWLine(data);            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location             * returned by malloc() so can't safely call free() on it */        }    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            wchar_t source[100];            wmemset(source, L'C', 100-1); /* fill with 'C's */            source[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */            wcscpy(data, source);            printWLine(data);            /* INCIDENTAL CWE-401: Memory Leak - data may not point to location             * returned by malloc() so can't safely call free() on it */        }
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
wcscpy(data, source);
wcscpy(data, source)
wcscpy
wcscpy
data
data
source
source
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(37,26,0)
(31,0,0)
(38,14,0)
(0,14,0)
(1,3,0)
(14,2,0)
(40,33,0)
(47,12,0)
(15,49,0)
(12,49,0)
(50,2,0)
(6,29,0)
(7,26,0)
(18,12,0)
(29,6,0)
(42,47,0)
(43,14,0)
(24,19,0)
(10,30,0)
(12,47,0)
(21,1,0)
(47,1,0)
(3,39,0)
(19,29,0)
(46,43,0)
(20,0,0)
(25,4,0)
(41,22,0)
(2,33,0)
(23,2,0)
(44,29,0)
(39,3,0)
(10,16,0)
(29,19,0)
(30,10,0)
(27,17,0)
(3,1,0)
(1,49,0)
(0,23,0)
(17,33,0)
(32,49,0)
(43,23,0)
(48,12,0)
(6,3,0)
(8,33,0)
(49,33,0)
(22,1,0)
(36,22,0)
(18,33,0)
(9,23,0)
(35,14,0)
(23,4,0)
(51,30,0)
(28,17,0)
(13,18,0)
(5,4,0)
(45,49,0)
(4,23,0)
(34,47,0)
(26,18,0)
(3,6,0)
(25,5,1)
(32,22,1)
(26,7,1)
(20,31,1)
(4,25,1)
(35,23,1)
(21,17,1)
(6,29,1)
(7,37,1)
(31,35,1)
(48,32,1)
(0,20,1)
(3,6,1)
(37,12,1)
(36,41,1)
(43,46,1)
(12,47,1)
(46,0,1)
(18,12,1)
(32,10,1)
(9,18,1)
(22,36,1)
(43,23,1)
(17,28,1)
(30,51,1)
(47,42,1)
(13,26,1)
(19,24,1)
(5,9,1)
(10,30,1)
(0,23,1)
(44,21,1)
(22,1,1)
(28,27,1)
(3,39,1)
(41,1,1)
(23,4,1)
(18,13,1)
(29,19,1)
(42,34,1)
(24,44,1)
(11,43,1)
(1,3,1)
(47,1,1)
(34,48,1)
(51,22,1)
(29,19,2)
(0,23,2)
(18,12,2)
(10,30,2)
(3,39,2)
(3,6,2)
(6,29,2)
(30,22,2)
(43,23,2)
(23,4,2)
(12,47,2)
(51,22,2)
(1,3,2)
(10,22,2)
(47,1,2)
(22,1,2)
-----------------------------------
(0,wcscpy(data, source)
(1,* dataBuffer = (wchar_t *)
(2,)
(3,(wchar_t *)
(4,myUnion.unionSecond)
(5,myUnion)
(6,malloc(100*sizeof(wchar_t)
(7,unionFirst)
(8,data)
(9,data)
(10,exit(-1)
(11,RET)
(12,data = dataBuffer - 8)
(13,data)
(14,)
(15,dataBuffer)
(16,)
(17,data = NULL)
(18,myUnion.unionFirst = data)
(19,sizeof(wchar_t)
(20,source)
(21,dataBuffer)
(22,dataBuffer == NULL)
(23,* data = myUnion.unionSecond)
(24,wchar_t)
(25,unionSecond)
(26,myUnion.unionFirst)
(27,data)
(28,NULL)
(29,100*sizeof(wchar_t)
(30,-1)
(31,data)
(32,'\\\\0')
(33,)
(34,dataBuffer)
(35,'\\\\0')
(36,NULL)
(37,myUnion)
(38,source)
(39,wchar_t *)
(40,myUnion)
(41,dataBuffer)
(42,8)
(43,printWLine(data)
(44,100)
(45,if (dataBuffer == NULL)
(46,data)
(47,dataBuffer - 8)
(48,data)
(49,)
(50,data)
(51,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^