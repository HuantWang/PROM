-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_08_bad()
{
    unsigned int data;
    data = 0;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
33,34
34,35
36,37
37,38
37,39
37,40
38,39
39,40
40,41
42,43
43,44
43,45
45,46
45,47
47,48
48,49
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,8,10,14,15,19,24,27,28,31,35,41,44,46,49,53,55
-----computeFrom-----
12,13
12,14
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_08_bad(){    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_postinc_08_bad()
CWE190_Integer_Overflow__unsigned_int_rand_postinc_08_bad
{    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(1,10,0)
(9,3,0)
(25,14,0)
(3,9,0)
(16,3,0)
(21,14,0)
(10,25,0)
(2,25,0)
(24,5,0)
(4,14,0)
(24,25,0)
(20,19,0)
(8,0,0)
(13,5,0)
(23,20,0)
(0,24,0)
(6,24,0)
(24,20,0)
(5,3,0)
(7,14,0)
(3,16,0)
(0,20,0)
(18,24,0)
(10,5,0)
(10,20,0)
(3,5,0)
(12,25,0)
(5,17,0)
(24,25,1)
(6,18,1)
(0,8,1)
(18,10,1)
(25,12,1)
(0,24,1)
(24,5,1)
(3,16,1)
(12,2,1)
(1,22,1)
(15,22,1)
(13,11,1)
(22,11,1)
(8,24,1)
(10,1,1)
(15,0,1)
(10,5,1)
(24,6,1)
(16,13,1)
(11,25,1)
(5,3,1)
(10,25,1)
(3,9,1)
(22,5,1)
(0,22,2)
(3,16,2)
(10,5,2)
(24,22,2)
(0,24,2)
(8,22,2)
(3,9,2)
(5,11,2)
(1,22,2)
(24,25,2)
(16,11,2)
(6,22,2)
(5,3,2)
(10,22,2)
(18,22,2)
(10,25,2)
(3,11,2)
(24,5,2)
(13,11,2)
-----------------------------------
(0,printUnsignedLine(result)
(1,data)
(2,data)
(3,(unsigned int)
(4,if(staticReturnsTrue()
(5,data = (unsigned int)
(6,data)
(7,data)
(8,result)
(9,unsigned int)
(10,data++)
(11,staticReturnsTrue()
(12,0)
(13,data)
(14,)
(15,RET)
(16,RAND32()
(17,)
(18,result)
(19,)
(20,)
(21,if(staticReturnsTrue()
(22,staticReturnsTrue()
(23,result)
(24,result = data)
(25,data = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^