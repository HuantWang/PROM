-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncat_05_bad()
{
    wchar_t * data;
    data = (wchar_t *)malloc(100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    if(staticTrue)
    {
        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
        wmemset(data, L'A', 100-1); /* fill with L'A's */
        data[100-1] = L'\0'; /* null terminate */
    }
    {
        wchar_t dest[50] = L"";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/
        wcsncat(dest, data, wcslen(data));
        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */
        printWLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
44,45
46,47
46,48
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
66,68
66,69
66,70
66,71
67,68
68,69
68,70
70,71
70,72
70,73
72,73
74,75
76,77
77,78
77,79
77,80
77,81
78,79
80,81
82,83
84,85
84,86
85,86
87,88
89,90
90,91
90,92
91,92
91,93
92,93
94,95
94,96
98,99
99,100
99,101
100,101
102,103
104,105
105,106
105,107
106,107
108,109
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,45,50,52,53,55,56,61,63,64,65,69,71,73,75,79,81,83,86,88,93,95,96,97,101,103,107,109
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
54,55
54,56
58,59
58,60
62,63
62,64
90,91
90,92
94,95
94,96
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncat_05_bad(){    wchar_t * data;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    if(staticTrue)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/        wcsncat(dest, data, wcslen(data));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncat_05_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncat_05_bad
{    wchar_t * data;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    if(staticTrue)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/        wcsncat(dest, data, wcslen(data));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = (wchar_t *)malloc(100*sizeof(wchar_t));
data = (wchar_t *)malloc(100*sizeof(wchar_t))
data
data
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
if(staticTrue)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }
staticTrue
staticTrue
{        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }
wmemset(data, L'A', 100-1);
wmemset(data, L'A', 100-1)
wmemset
wmemset
data
data
L'A'
100-1
100
1
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
{        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/        wcsncat(dest, data, wcslen(data));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
wcsncat(dest, data, wcslen(data));
wcsncat(dest, data, wcslen(data))
wcsncat
wcsncat
dest
dest
data
data
wcslen(data)
wcslen
wcslen
data
data
dest[50-1] = L'\0';
dest[50-1] = L'\0'
dest[50-1]
dest
dest
50-1
50
1
L'\0'
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(7,35,0)
(15,36,0)
(18,17,0)
(25,17,0)
(21,8,0)
(20,19,0)
(14,12,0)
(1,16,0)
(35,17,0)
(5,30,0)
(34,8,0)
(35,16,0)
(26,16,0)
(36,10,0)
(28,6,0)
(32,35,0)
(0,19,0)
(36,35,0)
(4,36,0)
(36,19,0)
(19,16,0)
(17,18,0)
(22,7,0)
(29,12,0)
(10,35,0)
(11,19,0)
(34,9,0)
(8,34,0)
(17,25,0)
(12,29,0)
(10,36,0)
(20,35,0)
(18,12,0)
(23,6,0)
(27,16,0)
(3,20,0)
(6,35,0)
(2,10,0)
(17,35,0)
(7,19,0)
(31,29,0)
(12,18,0)
(24,34,1)
(23,28,1)
(35,17,1)
(3,7,1)
(10,35,1)
(4,0,1)
(20,3,1)
(0,24,1)
(33,20,1)
(20,35,1)
(0,5,1)
(7,22,1)
(6,23,1)
(36,35,1)
(15,4,1)
(21,6,1)
(24,6,1)
(14,32,1)
(34,8,1)
(17,25,1)
(10,2,1)
(22,11,1)
(29,31,1)
(8,21,1)
(6,35,1)
(11,36,1)
(12,29,1)
(2,15,1)
(18,12,1)
(36,10,1)
(7,35,1)
(5,24,1)
(31,14,1)
(17,18,1)
(28,35,1)
(8,6,2)
(35,17,2)
(21,6,2)
(34,6,2)
(17,18,2)
(18,12,2)
(34,8,2)
(5,24,2)
(36,10,2)
(20,35,2)
(7,35,2)
(12,29,2)
(10,35,2)
(6,35,2)
(36,35,2)
(17,25,2)
-----------------------------------
(0,"")
(1,if (data == NULL)
(2,data)
(3,data)
(4,dest)
(5,\\'\\\\0\\')
(6,data == NULL)
(7,printWLine(data)
(8,-1)
(9,)
(10,wcslen(data)
(11,\\\'\\\\0\\\')
(12,100*sizeof(wchar_t)
(13,\\\'\\\\0\\\')
(14,100)
(15,data)
(16,)
(17,(wchar_t *)
(18,malloc(100*sizeof(wchar_t)
(19,)
(20,free(data)
(21,1)
(22,data)
(23,NULL)
(24,staticTrue)
(25,wchar_t *)
(26,if(staticTrue)
(27,data)
(28,data)
(29,sizeof(wchar_t)
(30,)
(31,wchar_t)
(32,data)
(33,RET)
(34,exit(-1)
(35,data = (wchar_t *)
(36,wcsncat(dest, data, wcslen(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^