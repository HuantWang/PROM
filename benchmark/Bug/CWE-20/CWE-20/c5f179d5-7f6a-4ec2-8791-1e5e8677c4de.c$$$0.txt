-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_execvp_06_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* execvp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECVP(COMMAND_INT, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
83,85
84,85
85,86
85,87
87,88
87,89
87,90
87,91
91,92
92,93
92,94
92,95
92,96
93,94
95,96
97,98
99,100
101,102
102,103
102,104
102,105
103,104
105,106
107,108
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,86,88,89,90,94,96,98,100,104,106,108
-----computeFrom-----
23,24
23,25
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_execvp_06_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_execvp_06_bad()
CWE78_OS_Command_Injection__char_environment_w32_execvp_06_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(STATIC_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
EXECVP(COMMAND_INT, args);
EXECVP(COMMAND_INT, args)
EXECVP
EXECVP
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(35,44,0)
(27,29,0)
(12,22,0)
(32,44,0)
(16,22,0)
(14,27,0)
(19,27,0)
(31,7,0)
(23,8,0)
(16,37,0)
(2,8,0)
(22,18,0)
(9,16,0)
(3,45,0)
(39,5,0)
(28,27,0)
(7,46,0)
(30,11,0)
(37,4,0)
(13,5,0)
(7,22,0)
(41,44,0)
(5,13,0)
(6,11,0)
(37,5,0)
(47,10,0)
(26,46,0)
(8,45,0)
(34,17,0)
(37,16,0)
(46,7,0)
(45,10,0)
(24,16,0)
(22,27,0)
(20,11,0)
(5,27,0)
(37,46,0)
(44,11,0)
(40,7,0)
(38,18,0)
(18,22,0)
(0,17,0)
(18,41,0)
(15,39,0)
(25,13,0)
(1,41,0)
(16,41,0)
(8,10,0)
(43,41,0)
(36,5,0)
(46,37,0)
(21,39,0)
(33,37,0)
(10,11,0)
(41,11,0)
(9,24,1)
(12,17,1)
(37,16,1)
(0,41,1)
(16,9,1)
(37,46,1)
(7,31,1)
(46,7,1)
(15,5,1)
(18,41,1)
(41,44,1)
(8,45,1)
(44,35,1)
(33,16,1)
(13,25,1)
(42,8,1)
(41,43,1)
(22,18,1)
(3,37,1)
(37,5,1)
(8,23,1)
(26,33,1)
(38,12,1)
(34,0,1)
(23,2,1)
(39,21,1)
(17,34,1)
(40,26,1)
(2,45,1)
(31,40,1)
(24,39,1)
(25,36,1)
(5,13,1)
(39,5,1)
(16,41,1)
(16,22,1)
(18,38,1)
(21,15,1)
(1,44,1)
(35,32,1)
(36,22,1)
(45,3,1)
(43,1,1)
(3,39,1)
(3,17,1)
(7,22,1)
(12,17,2)
(46,39,2)
(38,17,2)
(9,39,2)
(37,46,2)
(8,45,2)
(41,44,2)
(5,13,2)
(22,18,2)
(21,17,2)
(13,17,2)
(31,39,2)
(18,17,2)
(37,16,2)
(16,41,2)
(36,17,2)
(33,39,2)
(46,7,2)
(7,39,2)
(22,17,2)
(39,5,2)
(37,5,2)
(5,17,2)
(24,39,2)
(15,17,2)
(16,39,2)
(37,39,2)
(26,39,2)
(39,17,2)
(18,41,2)
(40,39,2)
(7,22,2)
(16,22,2)
(25,17,2)
-----------------------------------
(0,STATIC_CONST_FIVE)
(1,data)
(2,COMMAND_INT)
(3,args)
(4,)
(5,* environment = GETENV(ENV_VARIABLE)
(6,dataBuffer)
(7,dataLen-1)
(8,EXECVP(COMMAND_INT, args)
(9,dataLen)
(10,)
(11,)
(12,dataLen)
(13,GETENV(ENV_VARIABLE)
(14,if (environment != NULL)
(15,environment)
(16,data+dataLen)
(17,STATIC_CONST_FIVE==5)
(18,strlen(data)
(19,environment)
(20,if(STATIC_CONST_FIVE==5)
(21,NULL)
(22,dataLen = strlen(data)
(23,args)
(24,data)
(25,ENV_VARIABLE)
(26,100)
(27,)
(28,dataLen)
(29,)
(30,data)
(31,1)
(32,dataBuffer)
(33,environment)
(34,5)
(35,COMMAND_ARG2)
(36,environment)
(37,strncat(data+dataLen, environment, 100-dataLen-1)
(38,data)
(39,environment != NULL)
(40,dataLen)
(41,data = dataBuffer)
(42,RET)
(43,dataBuffer)
(44,dataBuffer[100] = COMMAND_ARG2)
(45,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(46,100-dataLen-1)
(47,args)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^