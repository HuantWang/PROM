-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_16_bad()
{
    wchar_t * data;
    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
    data = dataBuffer;
    while(1)
    {
        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
        wmemset(data, L'A', 100-1); /* fill with L'A's */
        data[100-1] = L'\0'; /* null terminate */
        break;
    }
    {
        wchar_t dest[50] = L"";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        SNPRINTF(dest, wcslen(data), L"%s", data);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
33,34
34,35
34,36
35,36
37,38
39,40
39,41
41,42
41,43
41,44
42,43
43,44
43,45
43,46
43,47
44,45
46,47
49,50
49,51
52,53
53,54
53,55
54,55
54,56
55,56
57,58
57,59
62,63
62,64
62,65
63,64
64,65
64,66
66,67
66,68
66,69
68,69
70,71
72,73
73,74
73,75
73,76
73,77
73,78
74,75
76,77
78,79
78,80
79,80
81,82
84,85
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,11,14,16,17,21,23,26,28,31,32,36,38,40,45,47,48,50,51,56,58,59,60,61,65,67,69,71,75,77,80,82,83,85,89,91
-----computeFrom-----
27,28
27,29
34,35
34,36
49,50
49,51
53,54
53,55
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_16_bad(){    wchar_t * data;    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    data = dataBuffer;    while(1)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */        break;    }    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_16_bad()
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_16_bad
{    wchar_t * data;    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    data = dataBuffer;    while(1)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */        break;    }    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)ALLOCA(100*sizeof(wchar_t))
(wchar_t *)ALLOCA(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
ALLOCA(100*sizeof(wchar_t))
ALLOCA
ALLOCA
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
while(1)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */        break;    }
1
{        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */        break;    }
wmemset(data, L'A', 100-1);
wmemset(data, L'A', 100-1)
wmemset
wmemset
data
data
L'A'
100-1
100
1
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
break;
{        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
SNPRINTF(dest, wcslen(data), L"%s", data);
SNPRINTF(dest, wcslen(data), L"%s", data)
SNPRINTF
SNPRINTF
dest
dest
wcslen(data)
wcslen
wcslen
data
data
L"%s"
data
data
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(20,23,0)
(13,5,0)
(1,2,0)
(7,2,0)
(2,1,0)
(23,8,0)
(8,12,0)
(2,7,0)
(1,12,0)
(9,2,0)
(17,12,0)
(7,5,0)
(15,12,0)
(6,1,0)
(18,5,0)
(8,1,0)
(21,16,0)
(5,7,0)
(5,18,0)
(14,4,0)
(0,4,0)
(10,8,0)
(2,9,0)
(16,12,0)
(23,16,0)
(19,18,0)
(25,12,0)
(11,8,0)
(24,8,1)
(10,1,1)
(20,21,1)
(14,0,1)
(8,11,1)
(23,8,1)
(8,1,1)
(1,2,1)
(0,24,1)
(2,9,1)
(7,5,1)
(11,10,1)
(19,13,1)
(13,6,1)
(22,23,1)
(21,24,1)
(18,19,1)
(2,7,1)
(21,14,1)
(5,18,1)
(23,20,1)
(7,5,2)
(5,18,2)
(14,24,2)
(2,9,2)
(1,2,2)
(0,24,2)
(23,8,2)
(2,7,2)
(8,1,2)
-----------------------------------
(0,\\'\\\\0\\')
(1,* dataBuffer = (wchar_t *)
(2,(wchar_t *)
(3,\\\'\\\\0\\\')
(4,)
(5,100*sizeof(wchar_t)
(6,dataBuffer)
(7,ALLOCA(100*sizeof(wchar_t)
(8,data = dataBuffer)
(9,wchar_t *)
(10,data)
(11,dataBuffer)
(12,)
(13,100)
(14,break;)
(15,data)
(16,)
(17,dataBuffer)
(18,sizeof(wchar_t)
(19,wchar_t)
(20,data)
(21,"")
(22,RET)
(23,printWLine(data)
(24,1)
(25,while(1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^