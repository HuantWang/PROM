-----label-----
1
-----code-----
wchar_t * CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_22_badSource(wchar_t * data)
{
    if(CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_22_badGlobal)
    {
        /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */
        data = (wchar_t *)malloc(50*sizeof(wchar_t));
        if (data == NULL) {exit(-1);}
        data[0] = L'\0'; /* null terminate */
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
13,14
15,16
15,17
15,18
16,17
17,18
17,19
18,19
20,21
20,22
21,22
21,23
23,24
25,26
25,27
26,27
28,29
28,30
30,31
31,32
31,33
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
49,51
50,51
54,55
55,56
-----nextToken-----
2,4,5,7,9,10,14,19,22,24,27,29,32,33,37,39,44,46,51,52,53,56
-----computeFrom-----
17,18
17,19
28,29
28,30
35,36
35,37
48,49
48,50
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
wchar_t * CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_22_badSource(wchar_t * data){    if(CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_22_badGlobal)    {        /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */        data = (wchar_t *)malloc(50*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        data[0] = L'\0'; /* null terminate */    }    return data;}
wchar_t
* CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_22_badSource(wchar_t * data)
*
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_22_badSource
wchar_t * data
wchar_t
* data
*
data
{    if(CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_22_badGlobal)    {        /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */        data = (wchar_t *)malloc(50*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        data[0] = L'\0'; /* null terminate */    }    return data;}
if(CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_22_badGlobal)    {        /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */        data = (wchar_t *)malloc(50*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        data[0] = L'\0'; /* null terminate */    }
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_22_badGlobal
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_22_badGlobal
{        /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */        data = (wchar_t *)malloc(50*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        data[0] = L'\0'; /* null terminate */    }
data = (wchar_t *)malloc(50*sizeof(wchar_t));
data = (wchar_t *)malloc(50*sizeof(wchar_t))
data
data
(wchar_t *)malloc(50*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(50*sizeof(wchar_t))
malloc
malloc
50*sizeof(wchar_t)
50
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
return data;
data
data
-----joern-----
(16,8,0)
(5,23,0)
(13,4,0)
(16,12,0)
(10,0,0)
(12,16,0)
(19,24,0)
(19,14,0)
(17,6,0)
(2,22,0)
(24,19,0)
(7,10,0)
(22,0,0)
(8,15,0)
(0,8,0)
(22,25,0)
(8,0,0)
(9,10,0)
(8,16,0)
(12,23,0)
(11,22,0)
(18,12,0)
(0,6,0)
(0,25,0)
(10,4,0)
(1,6,0)
(15,8,0)
(21,0,0)
(23,12,0)
(10,25,0)
(20,24,0)
(0,25,1)
(20,22,1)
(23,5,1)
(10,25,1)
(7,3,1)
(21,3,1)
(18,21,1)
(22,2,1)
(8,15,1)
(1,19,1)
(0,8,1)
(8,16,1)
(9,10,1)
(1,22,1)
(2,11,1)
(12,23,1)
(16,12,1)
(10,7,1)
(22,0,1)
(19,24,1)
(5,18,1)
(10,0,1)
(11,0,1)
(22,25,1)
(7,1,1)
(24,20,1)
(23,3,2)
(0,25,2)
(0,8,2)
(2,3,2)
(22,0,2)
(16,3,2)
(12,23,2)
(0,3,2)
(1,3,2)
(8,15,2)
(11,3,2)
(22,25,2)
(12,3,2)
(24,22,2)
(20,22,2)
(10,0,2)
(8,16,2)
(16,12,2)
(19,24,2)
(10,25,2)
(5,3,2)
(18,3,2)
(8,3,2)
(21,3,2)
(19,22,2)
(22,3,2)
(9,10,2)
-----------------------------------
(0,data = (wchar_t *)
(1,'\\\\0')
(2,NULL)
(3,CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_22_badGlobal)
(4,)
(5,wchar_t)
(6,)
(7,data)
(8,(wchar_t *)
(9,RET)
(10,return data;)
(11,data)
(12,50*sizeof(wchar_t)
(13,if(CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_22_badGlobal)
(14,)
(15,wchar_t *)
(16,malloc(50*sizeof(wchar_t)
(17,if (data == NULL)
(18,50)
(19,exit(-1)
(20,1)
(21,data)
(22,data == NULL)
(23,sizeof(wchar_t)
(24,-1)
(25,wchar_t * data)
(26,\'\\\\0\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^