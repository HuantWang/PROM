-----label-----
1
-----code-----
twoIntsStruct * CWE415_Double_Free__malloc_free_struct_61b_badSource(twoIntsStruct * data)
{
    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* POTENTIAL FLAW: Free data in the source - the bad sink frees data as well */
    free(data);
    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
31,32
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
53,54
54,55
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,28,32,33,37,39,44,46,50,52,55
-----computeFrom-----
15,16
15,17
27,28
27,29
35,36
35,37
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
twoIntsStruct * CWE415_Double_Free__malloc_free_struct_61b_badSource(twoIntsStruct * data){    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* POTENTIAL FLAW: Free data in the source - the bad sink frees data as well */    free(data);    return data;}
twoIntsStruct
twoIntsStruct
* CWE415_Double_Free__malloc_free_struct_61b_badSource(twoIntsStruct * data)
*
CWE415_Double_Free__malloc_free_struct_61b_badSource
twoIntsStruct * data
twoIntsStruct
twoIntsStruct
* data
*
data
{    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* POTENTIAL FLAW: Free data in the source - the bad sink frees data as well */    free(data);    return data;}
data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)malloc(100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
malloc(100*sizeof(twoIntsStruct))
malloc
malloc
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
free(data);
free(data)
free
free
data
data
return data;
data
data
-----joern-----
(11,22,0)
(9,1,0)
(11,21,0)
(3,19,0)
(13,6,0)
(18,5,0)
(1,16,0)
(11,8,0)
(1,9,0)
(15,22,0)
(0,15,0)
(16,1,0)
(8,22,0)
(19,3,0)
(6,8,0)
(7,8,0)
(10,11,0)
(14,1,0)
(8,21,0)
(15,8,0)
(6,21,0)
(20,11,0)
(17,22,0)
(19,16,0)
(23,5,0)
(16,19,0)
(19,8,0)
(2,9,0)
(8,19,0)
(4,6,0)
(15,21,0)
(18,12,0)
(5,18,0)
(11,8,1)
(18,5,1)
(19,3,1)
(23,6,1)
(19,16,1)
(0,6,1)
(15,21,1)
(20,15,1)
(9,2,1)
(6,8,1)
(11,20,1)
(6,4,1)
(15,0,1)
(11,21,1)
(6,21,1)
(8,19,1)
(1,9,1)
(2,14,1)
(16,1,1)
(4,13,1)
(15,8,1)
(5,23,1)
(13,8,1)
(10,11,1)
(0,18,1)
(14,7,1)
(8,21,1)
(18,6,2)
(23,6,2)
(10,11,2)
(18,5,2)
(19,3,2)
(16,1,2)
(6,8,2)
(8,19,2)
(11,8,2)
(15,8,2)
(6,21,2)
(1,9,2)
(11,21,2)
(19,16,2)
(8,21,2)
(15,21,2)
(5,6,2)
-----------------------------------
(0,data)
(1,100*sizeof(twoIntsStruct)
(2,twoIntsStruct)
(3,twoIntsStruct *)
(4,NULL)
(5,-1)
(6,data == NULL)
(7,data)
(8,data = (twoIntsStruct *)
(9,sizeof(twoIntsStruct)
(10,RET)
(11,return data;)
(12,)
(13,data)
(14,100)
(15,free(data)
(16,malloc(100*sizeof(twoIntsStruct)
(17,if (data == NULL)
(18,exit(-1)
(19,(twoIntsStruct *)
(20,data)
(21,twoIntsStruct * data)
(22,)
(23,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^