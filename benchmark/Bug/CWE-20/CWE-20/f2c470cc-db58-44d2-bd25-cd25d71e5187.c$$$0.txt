-----label-----
1
-----code-----
void CWE127_Buffer_Underread__malloc_wchar_t_cpy_17_bad()
{
    int i;
    wchar_t * data;
    data = NULL;
    for(i = 0; i < 1; i++)
    {
        {
            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (dataBuffer == NULL) {exit(-1);}
            wmemset(dataBuffer, L'A', 100-1);
            dataBuffer[100-1] = L'\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        wchar_t dest[100*2];
        wmemset(dest, L'C', 100*2-1); /* fill with 'C's */
        dest[100*2-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */
        wcscpy(dest, data);
        printWLine(dest);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
17,18
18,19
18,20
19,20
21,22
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
37,39
37,40
37,41
37,42
38,39
39,40
39,41
41,42
41,43
41,44
44,45
45,46
45,47
46,47
46,48
48,49
50,51
50,52
51,52
53,54
53,55
55,56
56,57
56,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
68,69
70,71
72,73
73,74
73,75
73,76
73,77
74,75
76,77
79,80
79,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
87,89
91,92
92,93
92,94
93,94
95,96
95,97
96,97
99,100
99,101
99,102
99,103
99,104
100,101
101,102
101,103
103,104
103,105
105,106
106,107
106,108
109,110
110,111
110,112
110,113
110,114
111,112
113,114
116,117
116,118
117,118
117,119
121,122
122,123
122,124
123,124
123,125
124,125
126,127
126,128
127,128
127,129
132,133
133,134
133,135
133,136
134,135
136,137
138,139
140,141
141,142
141,143
142,143
144,145
-----nextToken-----
2,4,8,10,13,15,16,20,22,27,28,31,32,35,40,42,43,47,49,52,54,57,58,62,64,69,71,75,77,78,80,81,86,88,89,90,94,97,98,102,104,107,108,112,114,115,118,119,120,125,128,129,130,131,135,137,139,143,145
-----computeFrom-----
18,19
18,20
25,26
25,27
29,30
29,31
53,54
53,55
60,61
60,62
79,80
79,81
83,84
83,85
87,88
87,89
92,93
92,94
95,96
95,97
106,107
106,108
116,117
116,118
117,118
117,119
122,123
122,124
126,127
126,128
127,128
127,129
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE127_Buffer_Underread__malloc_wchar_t_cpy_17_bad(){    int i;    wchar_t * data;    data = NULL;    for(i = 0; i < 1; i++)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        wchar_t dest[100*2];        wmemset(dest, L'C', 100*2-1); /* fill with 'C's */        dest[100*2-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        wcscpy(dest, data);        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE127_Buffer_Underread__malloc_wchar_t_cpy_17_bad()
CWE127_Buffer_Underread__malloc_wchar_t_cpy_17_bad
{    int i;    wchar_t * data;    data = NULL;    for(i = 0; i < 1; i++)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        wchar_t dest[100*2];        wmemset(dest, L'C', 100*2-1); /* fill with 'C's */        dest[100*2-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        wcscpy(dest, data);        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
int i;
int i;
int
i
i
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
for(i = 0; i < 1; i++)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBuffer, L'A', 100-1);
wmemset(dataBuffer, L'A', 100-1)
wmemset
wmemset
dataBuffer
dataBuffer
L'A'
100-1
100
1
dataBuffer[100-1] = L'\0';
dataBuffer[100-1] = L'\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
L'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        wchar_t dest[100*2];        wmemset(dest, L'C', 100*2-1); /* fill with 'C's */        dest[100*2-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        wcscpy(dest, data);        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
wchar_t dest[100*2];
wchar_t dest[100*2];
wchar_t
dest[100*2]
dest
[100*2]
100*2
100
2
wmemset(dest, L'C', 100*2-1);
wmemset(dest, L'C', 100*2-1)
wmemset
wmemset
dest
dest
L'C'
100*2-1
100*2
100
2
1
dest[100*2-1] = L'\0';
dest[100*2-1] = L'\0'
dest[100*2-1]
dest
dest
100*2-1
100*2
100
2
1
L'\0'
wcscpy(dest, data);
wcscpy(dest, data)
wcscpy
wcscpy
dest
dest
data
data
printWLine(dest);
printWLine(dest)
printWLine
printWLine
dest
dest
-----joern-----
(2,45,0)
(36,35,0)
(6,14,0)
(23,2,0)
(45,1,0)
(16,27,0)
(10,50,0)
(29,20,0)
(46,20,0)
(0,27,0)
(21,26,0)
(37,19,0)
(9,46,0)
(15,46,0)
(34,0,0)
(35,2,0)
(14,27,0)
(35,46,0)
(49,46,0)
(28,39,0)
(38,45,0)
(30,2,0)
(28,50,0)
(22,20,0)
(48,18,0)
(31,19,0)
(2,23,0)
(19,8,0)
(25,18,0)
(47,23,0)
(35,26,0)
(25,33,0)
(11,48,0)
(18,45,0)
(23,18,0)
(26,20,0)
(19,37,0)
(43,45,0)
(5,48,0)
(12,35,0)
(25,8,0)
(17,18,0)
(41,0,0)
(33,25,0)
(50,28,0)
(4,27,0)
(24,45,0)
(8,25,0)
(8,19,0)
(18,25,0)
(7,37,0)
(13,49,0)
(32,26,0)
(3,20,0)
(42,23,0)
(23,47,1)
(30,24,1)
(0,27,1)
(26,32,1)
(48,18,1)
(35,2,1)
(11,18,1)
(6,2,1)
(4,26,1)
(24,48,1)
(14,27,1)
(37,7,1)
(19,37,1)
(42,30,1)
(44,49,1)
(31,17,1)
(17,0,1)
(2,23,1)
(36,12,1)
(12,9,1)
(34,27,1)
(50,10,1)
(48,5,1)
(16,4,1)
(35,26,1)
(34,14,1)
(5,11,1)
(47,42,1)
(13,35,1)
(25,8,1)
(0,41,1)
(8,19,1)
(10,48,1)
(32,21,1)
(49,13,1)
(18,25,1)
(14,6,1)
(28,50,1)
(24,28,1)
(27,16,1)
(35,36,1)
(41,34,1)
(25,33,1)
(23,18,1)
(7,31,1)
(9,0,1)
(34,0,2)
(28,48,2)
(23,0,2)
(25,0,2)
(8,0,2)
(14,27,2)
(11,0,2)
(2,0,2)
(18,25,2)
(10,48,2)
(24,0,2)
(47,0,2)
(7,0,2)
(0,0,2)
(37,0,2)
(19,0,2)
(8,19,2)
(23,18,2)
(35,26,2)
(28,50,2)
(50,48,2)
(5,0,2)
(18,0,2)
(35,2,2)
(31,0,2)
(0,27,2)
(6,0,2)
(41,0,2)
(14,0,2)
(17,0,2)
(25,33,2)
(30,0,2)
(25,8,2)
(42,0,2)
(48,18,2)
(2,23,2)
(48,0,2)
(19,37,2)
-----------------------------------
(0,i < 1)
(1,)
(2,data = dataBuffer - 8)
(3,for(i = 0; i < 1; i++)
(4,i)
(5,NULL)
(6,i)
(7,wchar_t)
(8,malloc(100*sizeof(wchar_t)
(9,'\\\\0')
(10,1)
(11,dataBuffer)
(12,dest)
(13,dest)
(14,i++)
(15,dest)
(16,0)
(17,dataBuffer)
(18,* dataBuffer = (wchar_t *)
(19,100*sizeof(wchar_t)
(20,)
(21,data)
(22,data)
(23,dataBuffer - 8)
(24,\'\\\\0\')
(25,(wchar_t *)
(26,data = NULL)
(27,i = 0)
(28,exit(-1)
(29,i)
(30,data)
(31,100)
(32,NULL)
(33,wchar_t *)
(34,i)
(35,wcscpy(dest, data)
(36,data)
(37,sizeof(wchar_t)
(38,dataBuffer)
(39,)
(40,'\\\\0')
(41,1)
(42,dataBuffer)
(43,if (dataBuffer == NULL)
(44,RET)
(45,)
(46,)
(47,8)
(48,dataBuffer == NULL)
(49,printWLine(dest)
(50,-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^