-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_ncpy_13_bad()
{
    wchar_t * data;
    data = NULL;
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (dataBuffer == NULL) {exit(-1);}
            wmemset(dataBuffer, L'A', 100-1);
            dataBuffer[100-1] = L'\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with 'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        wcsncpy(data, source, 100-1);
        /* Ensure the destination buffer is null terminated */
        data[100-1] = L'\0';
        printWLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
20,21
23,24
24,25
24,26
24,27
24,28
24,29
25,26
26,27
26,28
28,29
28,30
28,31
31,32
32,33
32,34
33,34
33,35
35,36
37,38
37,39
38,39
40,41
40,42
42,43
43,44
43,45
46,47
46,48
47,48
47,49
48,49
50,51
52,53
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
60,63
60,64
61,62
63,64
66,67
66,68
69,70
70,71
70,72
71,72
71,73
72,73
74,75
74,76
78,79
79,80
79,81
80,81
82,83
82,84
83,84
86,87
86,88
86,89
86,90
86,91
86,92
87,88
88,89
88,90
90,91
90,92
92,93
94,95
95,96
95,97
95,98
95,99
96,97
98,99
101,102
101,103
104,105
105,106
105,107
106,107
106,108
107,108
109,110
109,111
113,114
114,115
114,116
114,117
114,118
115,116
117,118
119,120
121,122
121,123
124,125
125,126
125,127
126,127
126,128
127,128
129,130
129,131
133,134
134,135
134,136
135,136
137,138
-----nextToken-----
2,4,8,10,11,15,17,21,22,27,29,30,34,36,39,41,44,45,49,51,56,58,62,64,65,67,68,73,75,76,77,81,84,85,89,91,93,97,99,100,102,103,108,110,111,112,116,118,120,122,123,128,130,131,132,136,138
-----computeFrom-----
13,14
13,15
19,20
19,21
40,41
40,42
47,48
47,49
66,67
66,68
70,71
70,72
74,75
74,76
79,80
79,81
82,83
82,84
101,102
101,103
105,106
105,107
109,110
109,111
121,122
121,123
125,126
125,127
129,130
129,131
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_ncpy_13_bad(){    wchar_t * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        wcsncpy(data, source, 100-1);        /* Ensure the destination buffer is null terminated */        data[100-1] = L'\0';        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_wchar_t_ncpy_13_bad()
CWE124_Buffer_Underwrite__malloc_wchar_t_ncpy_13_bad
{    wchar_t * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        wcsncpy(data, source, 100-1);        /* Ensure the destination buffer is null terminated */        data[100-1] = L'\0';        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(GLOBAL_CONST_FIVE==5)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBuffer, L'A', 100-1);
wmemset(dataBuffer, L'A', 100-1)
wmemset
wmemset
dataBuffer
dataBuffer
L'A'
100-1
100
1
dataBuffer[100-1] = L'\0';
dataBuffer[100-1] = L'\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
L'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        wcsncpy(data, source, 100-1);        /* Ensure the destination buffer is null terminated */        data[100-1] = L'\0';        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
wcsncpy(data, source, 100-1);
wcsncpy(data, source, 100-1)
wcsncpy
wcsncpy
data
data
source
source
100-1
100
1
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(18,6,0)
(41,45,0)
(32,36,0)
(48,29,0)
(37,1,0)
(46,21,0)
(11,45,0)
(36,29,0)
(21,28,0)
(1,6,0)
(1,40,0)
(3,41,0)
(8,41,0)
(12,14,0)
(41,29,0)
(29,6,0)
(27,29,0)
(33,6,0)
(45,4,0)
(2,45,0)
(16,5,0)
(20,35,0)
(25,6,0)
(40,23,0)
(40,1,0)
(15,9,0)
(13,5,0)
(6,39,0)
(35,12,0)
(28,21,0)
(23,28,0)
(34,36,0)
(42,9,0)
(44,45,0)
(38,1,0)
(31,3,0)
(19,41,0)
(17,4,0)
(23,40,0)
(36,1,0)
(12,35,0)
(43,48,0)
(9,4,0)
(10,4,0)
(29,36,0)
(48,9,0)
(48,45,0)
(41,3,0)
(0,40,0)
(28,23,0)
(40,0,0)
(41,9,0)
(22,38,0)
(26,38,0)
(47,3,0)
(7,28,0)
(40,0,1)
(48,43,1)
(9,42,1)
(47,31,1)
(30,48,1)
(36,34,1)
(32,27,1)
(42,15,1)
(44,29,1)
(8,44,1)
(43,2,1)
(18,38,1)
(23,28,1)
(38,1,1)
(21,46,1)
(22,26,1)
(34,32,1)
(5,13,1)
(41,3,1)
(41,9,1)
(29,36,1)
(35,20,1)
(41,29,1)
(3,47,1)
(19,8,1)
(44,5,1)
(1,40,1)
(48,9,1)
(48,29,1)
(27,18,1)
(13,16,1)
(31,19,1)
(37,5,1)
(7,37,1)
(18,12,1)
(2,41,1)
(16,9,1)
(36,1,1)
(40,23,1)
(28,21,1)
(12,35,1)
(20,38,1)
(46,7,1)
(38,22,1)
(26,1,1)
(40,0,2)
(28,5,2)
(46,5,2)
(21,5,2)
(38,5,2)
(41,29,2)
(28,21,2)
(29,5,2)
(23,28,2)
(1,40,2)
(34,5,2)
(36,1,2)
(41,3,2)
(35,38,2)
(26,5,2)
(40,5,2)
(27,5,2)
(1,5,2)
(7,5,2)
(12,35,2)
(36,5,2)
(20,38,2)
(18,5,2)
(48,29,2)
(38,1,2)
(48,9,2)
(37,5,2)
(32,5,2)
(22,5,2)
(12,38,2)
(41,9,2)
(23,5,2)
(40,23,2)
(29,36,2)
-----------------------------------
(0,wchar_t *)
(1,* dataBuffer = (wchar_t *)
(2,'\\\\0')
(3,100-1)
(4,)
(5,GLOBAL_CONST_FIVE==5)
(6,)
(7,100)
(8,data)
(9,data = NULL)
(10,if(GLOBAL_CONST_FIVE==5)
(11,source)
(12,exit(-1)
(13,5)
(14,)
(15,data)
(16,GLOBAL_CONST_FIVE)
(17,data)
(18,\'\\\\0\')
(19,source)
(20,1)
(21,sizeof(wchar_t)
(22,NULL)
(23,malloc(100*sizeof(wchar_t)
(24,'\\\\0')
(25,dataBuffer)
(26,dataBuffer)
(27,data)
(28,100*sizeof(wchar_t)
(29,data = dataBuffer - 8)
(30,RET)
(31,100)
(32,dataBuffer)
(33,if (dataBuffer == NULL)
(34,8)
(35,-1)
(36,dataBuffer - 8)
(37,dataBuffer)
(38,dataBuffer == NULL)
(39,)
(40,(wchar_t *)
(41,wcsncpy(data, source, 100-1)
(42,NULL)
(43,data)
(44,'\\\\0')
(45,)
(46,wchar_t)
(47,1)
(48,printWLine(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^