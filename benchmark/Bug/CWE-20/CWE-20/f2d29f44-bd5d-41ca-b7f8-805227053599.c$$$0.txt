-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_fscanf_preinc_11_bad()
{
    char data;
    data = ' ';
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%c", &data);
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            char result = data;
            printHexCharLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
36,39
37,38
38,39
39,40
41,42
42,43
42,44
44,45
44,46
46,47
47,48
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,40,43,45,48,52,54
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_fscanf_preinc_11_bad(){    char data;    data = ' ';    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
void
CWE190_Integer_Overflow__char_fscanf_preinc_11_bad()
CWE190_Integer_Overflow__char_fscanf_preinc_11_bad
{    char data;    data = ' ';    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%c", &data);    }
fscanf (stdin, "%c", &data);
fscanf (stdin, "%c", &data)
fscanf
fscanf
stdin
stdin
"%c"
&data
data
data
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            char result = data;            printHexCharLine(result);        }
++data;
++data
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(18,8,0)
(9,16,0)
(15,9,0)
(12,4,0)
(16,4,0)
(17,16,0)
(8,16,0)
(23,5,0)
(11,7,0)
(20,5,0)
(10,16,0)
(21,16,0)
(19,9,0)
(14,11,0)
(0,15,0)
(15,11,0)
(1,17,0)
(5,17,0)
(8,11,0)
(2,4,0)
(5,13,0)
(25,4,0)
(6,9,0)
(17,5,0)
(9,11,0)
(15,9,1)
(5,17,1)
(23,20,1)
(16,21,1)
(1,23,1)
(19,8,1)
(20,3,1)
(0,9,1)
(17,1,1)
(15,0,1)
(22,24,1)
(24,3,1)
(21,10,1)
(6,19,1)
(22,15,1)
(9,6,1)
(9,16,1)
(8,18,1)
(18,24,1)
(17,16,1)
(3,16,1)
(8,16,1)
(24,5,1)
(6,24,2)
(5,17,2)
(23,3,2)
(5,3,2)
(9,24,2)
(19,24,2)
(18,24,2)
(1,3,2)
(15,9,2)
(17,3,2)
(17,16,2)
(20,3,2)
(8,16,2)
(8,24,2)
(0,24,2)
(9,16,2)
(15,24,2)
-----------------------------------
(0,result)
(1,data)
(2,data)
(3,globalReturnsTrue()
(4,)
(5,fscanf (stdin, "%c", &data)
(6,data)
(7,)
(8,++data)
(9,result = data)
(10,data)
(11,)
(12,if(globalReturnsTrue()
(13,)
(14,result)
(15,printHexCharLine(result)
(16,data = \\\' \\\')
(17,&data)
(18,data)
(19,result)
(20,stdin)
(21,\\\' \\\')
(22,RET)
(23,"%c")
(24,globalReturnsTrue()
(25,if(globalReturnsTrue()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^