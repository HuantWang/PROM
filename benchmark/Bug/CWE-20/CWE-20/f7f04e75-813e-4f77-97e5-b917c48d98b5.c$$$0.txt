-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_18_bad()
{
    wchar_t * data;
    data = NULL;
    goto source;
source:
    /* FLAW: Did not leave space for a null terminator */
    data = (wchar_t *)malloc(10*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    {
        wchar_t source[10+1] = SRC_STRING;
        /* Copy length + 1 to include NUL terminator from source */
        /* POTENTIAL FLAW: data may not have enough space to hold source */
        wcsncpy(data, source, wcslen(source) + 1);
        printWLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
20,21
20,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
29,30
31,32
31,33
32,33
34,35
34,36
36,37
37,38
37,39
40,41
40,42
41,42
41,43
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
53,56
53,57
54,55
55,56
55,57
57,58
57,59
57,60
59,60
60,61
60,62
63,64
64,65
66,67
67,68
67,69
67,70
67,71
68,69
70,71
72,73
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,11,15,17,19,21,25,28,30,33,35,38,39,43,45,50,52,56,58,61,62,65,69,71,73,77,79,80,84,86,90,92
-----computeFrom-----
13,14
13,15
23,24
23,25
34,35
34,36
41,42
41,43
60,61
60,62
74,75
74,76
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;BinaryExpression;LiteralExpression;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_18_bad(){    wchar_t * data;    data = NULL;    goto source;source:    /* FLAW: Did not leave space for a null terminator */    data = (wchar_t *)malloc(10*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    {        wchar_t source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        wcsncpy(data, source, wcslen(source) + 1);        printWLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_18_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_18_bad
{    wchar_t * data;    data = NULL;    goto source;source:    /* FLAW: Did not leave space for a null terminator */    data = (wchar_t *)malloc(10*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    {        wchar_t source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        wcsncpy(data, source, wcslen(source) + 1);        printWLine(data);        free(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* FLAW: Did not leave space for a null terminator */    data = (wchar_t *)malloc(10*sizeof(wchar_t));
source
data = (wchar_t *)malloc(10*sizeof(wchar_t));
data = (wchar_t *)malloc(10*sizeof(wchar_t))
data
data
(wchar_t *)malloc(10*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(10*sizeof(wchar_t))
malloc
malloc
10*sizeof(wchar_t)
10
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
{        wchar_t source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        wcsncpy(data, source, wcslen(source) + 1);        printWLine(data);        free(data);    }
wchar_t source[10+1] = SRC_STRING;
wchar_t source[10+1] = SRC_STRING;
wchar_t
source[10+1] = SRC_STRING
source
[10+1]
10+1
10
1
= SRC_STRING
SRC_STRING
SRC_STRING
wcsncpy(data, source, wcslen(source) + 1);
wcsncpy(data, source, wcslen(source) + 1)
wcsncpy
wcsncpy
data
data
source
source
wcslen(source) + 1
wcslen(source)
wcslen
wcslen
source
source
1
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(25,3,0)
(21,30,0)
(23,0,0)
(20,37,0)
(12,37,0)
(15,28,0)
(36,4,0)
(12,7,0)
(0,3,0)
(26,30,0)
(29,7,0)
(14,9,0)
(4,19,0)
(35,30,0)
(6,3,0)
(32,2,0)
(22,32,0)
(10,24,0)
(34,12,0)
(2,32,0)
(32,37,0)
(25,37,0)
(22,19,0)
(3,25,0)
(10,38,0)
(19,22,0)
(27,9,0)
(28,7,0)
(24,10,0)
(25,7,0)
(33,19,0)
(18,30,0)
(19,4,0)
(32,22,0)
(37,32,0)
(0,28,0)
(13,7,0)
(17,28,0)
(1,35,0)
(16,35,0)
(8,25,0)
(25,28,0)
(7,30,0)
(5,25,0)
(3,0,0)
(9,37,0)
(31,30,0)
(13,37,0)
(37,30,0)
(39,24,0)
(11,13,0)
(0,28,1)
(37,32,1)
(40,12,1)
(3,6,1)
(8,5,1)
(1,16,1)
(10,24,1)
(3,0,1)
(9,27,1)
(5,28,1)
(27,14,1)
(14,37,1)
(32,22,1)
(24,39,1)
(25,3,1)
(12,37,1)
(33,20,1)
(12,34,1)
(13,37,1)
(17,15,1)
(15,9,1)
(0,23,1)
(4,36,1)
(35,1,1)
(25,37,1)
(32,2,1)
(18,35,1)
(22,19,1)
(20,18,1)
(6,0,1)
(9,37,1)
(25,28,1)
(23,8,1)
(28,17,1)
(11,25,1)
(39,9,1)
(34,13,1)
(19,4,1)
(15,10,1)
(36,33,1)
(13,11,1)
(24,9,2)
(37,32,2)
(25,28,2)
(22,19,2)
(13,37,2)
(32,2,2)
(32,22,2)
(19,4,2)
(9,37,2)
(25,37,2)
(25,3,2)
(10,24,2)
(0,28,2)
(10,9,2)
(39,9,2)
(12,37,2)
(3,0,2)
-----------------------------------
(0,wcslen(source)
(1,NULL)
(2,wchar_t *)
(3,wcslen(source)
(4,sizeof(wchar_t)
(5,data)
(6,1)
(7,)
(8,source)
(9,data == NULL)
(10,exit(-1)
(11,data)
(12,free(data)
(13,printWLine(data)
(14,data)
(15,source)
(16,data)
(17,SRC_STRING)
(18,goto source;)
(19,10*sizeof(wchar_t)
(20,data)
(21,if (data == NULL)
(22,malloc(10*sizeof(wchar_t)
(23,source)
(24,-1)
(25,wcsncpy(data, source, wcslen(source)
(26,data)
(27,NULL)
(28,source[10+1] = SRC_STRING)
(29,source)
(30,)
(31,source:)
(32,(wchar_t *)
(33,10)
(34,data)
(35,data = NULL)
(36,wchar_t)
(37,data = (wchar_t *)
(38,)
(39,1)
(40,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^