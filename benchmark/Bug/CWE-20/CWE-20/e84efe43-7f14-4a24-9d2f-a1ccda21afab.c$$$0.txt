-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_postinc_13_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
22,24
23,24
24,25
24,26
26,27
26,28
26,29
28,29
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
35,37
35,38
35,39
36,37
38,39
40,41
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
51,53
52,53
54,55
56,57
57,58
58,59
58,60
59,60
62,63
62,64
63,64
63,65
64,65
67,68
68,69
68,70
68,71
69,70
70,71
71,72
73,74
74,75
74,76
76,77
76,78
78,79
79,80
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,30,32,37,39,41,43,45,50,53,55,60,61,65,66,72,75,77,80,84,86
-----computeFrom-----
12,13
12,14
17,18
17,19
34,35
34,36
48,49
48,50
63,64
63,65
-----guardedBy-----
39,55
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_postinc_13_bad(){    int data;    /* Initialize data */    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_postinc_13_bad()
CWE190_Integer_Overflow__int_fgets_postinc_13_bad
{    int data;    /* Initialize data */    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(0,27,0)
(16,12,0)
(8,26,0)
(24,20,0)
(6,5,0)
(17,11,0)
(42,30,0)
(23,27,0)
(7,39,0)
(36,32,0)
(40,18,0)
(16,20,0)
(28,30,0)
(18,40,0)
(43,26,0)
(2,40,0)
(14,32,0)
(18,32,0)
(27,38,0)
(11,20,0)
(19,18,0)
(9,12,0)
(11,40,0)
(34,28,0)
(12,5,0)
(22,28,0)
(13,16,0)
(29,20,0)
(40,15,0)
(32,27,0)
(25,12,0)
(33,16,0)
(16,40,0)
(1,5,0)
(3,37,0)
(28,32,0)
(20,41,0)
(21,5,0)
(11,12,0)
(10,24,0)
(30,28,0)
(24,16,0)
(37,35,0)
(4,39,0)
(31,28,0)
(33,13,1)
(8,43,1)
(11,12,1)
(3,30,1)
(12,9,1)
(4,12,1)
(22,32,1)
(9,25,1)
(14,36,1)
(34,22,1)
(43,37,1)
(30,42,1)
(28,31,1)
(13,11,1)
(32,14,1)
(44,24,1)
(43,39,1)
(16,12,1)
(43,40,1)
(17,26,1)
(40,18,1)
(11,40,1)
(31,34,1)
(26,8,1)
(7,4,1)
(16,40,1)
(16,33,1)
(44,26,1)
(24,10,1)
(18,19,1)
(42,28,1)
(24,16,1)
(18,32,1)
(28,32,1)
(37,3,1)
(10,16,1)
(11,17,1)
(30,28,1)
(36,39,1)
(2,30,1)
(39,7,1)
(19,2,1)
(16,26,2)
(28,39,2)
(11,26,2)
(13,26,2)
(17,26,2)
(30,28,2)
(18,30,2)
(11,40,2)
(18,32,2)
(16,12,2)
(28,32,2)
(22,39,2)
(40,18,2)
(37,30,2)
(3,30,2)
(11,12,2)
(36,39,2)
(30,39,2)
(16,40,2)
(40,30,2)
(2,30,2)
(14,39,2)
(34,39,2)
(24,26,2)
(31,39,2)
(19,30,2)
(32,39,2)
(10,26,2)
(33,26,2)
(42,39,2)
(24,16,2)
-----------------------------------
(0,inputBuffer)
(1,data)
(2,data)
(3,"fgets()
(4,GLOBAL_CONST_FIVE)
(5,)
(6,if(GLOBAL_CONST_FIVE==5)
(7,5)
(8,5)
(9,0)
(10,result)
(11,data++)
(12,data = 0)
(13,result)
(14,"")
(15,)
(16,result = data)
(17,data)
(18,atoi(inputBuffer)
(19,inputBuffer)
(20,)
(21,if(GLOBAL_CONST_FIVE==5)
(22,inputBuffer)
(23,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(24,printIntLine(result)
(25,data)
(26,GLOBAL_CONST_FIVE==5)
(27,)
(28,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(29,result)
(30,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(31,stdin)
(32,inputBuffer[CHAR_ARRAY_SIZE] = "")
(33,data)
(34,CHAR_ARRAY_SIZE)
(35,)
(36,inputBuffer)
(37,printLine("fgets()
(38,)
(39,GLOBAL_CONST_FIVE==5)
(40,data = atoi(inputBuffer)
(41,)
(42,NULL)
(43,GLOBAL_CONST_FIVE)
(44,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^