-----label-----
1
-----code-----
void CWE126_Buffer_Overread__malloc_char_memcpy_01_bad()
{
    char * data;
    data = NULL;
    /* FLAW: Use a small buffer */
    data = (char *)malloc(50*sizeof(char));
    if (data == NULL) {exit(-1);}
    memset(data, 'A', 50-1); /* fill with 'A's */
    data[50-1] = '\0'; /* null terminate */
    {
        char dest[100];
        memset(dest, 'C', 100-1);
        dest[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: using memcpy with the length of the dest where data
         * could be smaller than dest causing buffer overread */
        memcpy(dest, data, strlen(dest)*sizeof(char));
        dest[100-1] = '\0';
        printLine(dest);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
68,70
68,71
68,72
68,73
68,74
68,75
69,70
70,71
70,72
72,73
72,74
74,75
76,77
77,78
77,79
77,80
77,81
78,79
80,81
83,84
83,85
86,87
87,88
87,89
88,89
88,90
89,90
91,92
91,93
95,96
96,97
96,98
96,99
96,100
97,98
99,100
101,102
103,104
103,105
104,105
104,106
105,106
107,108
109,110
110,111
110,112
113,114
114,115
114,116
115,116
115,117
116,117
118,119
118,120
122,123
123,124
123,125
124,125
126,127
128,129
129,130
129,131
130,131
132,133
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,39,41,46,48,52,54,55,57,58,63,65,66,67,71,73,75,79,81,82,84,85,90,92,93,94,98,100,102,106,108,111,112,117,119,120,121,125,127,131,133
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
37,38
37,39
56,57
56,58
60,61
60,62
64,65
64,66
83,84
83,85
87,88
87,89
91,92
91,93
103,104
103,105
114,115
114,116
118,119
118,120
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE126_Buffer_Overread__malloc_char_memcpy_01_bad(){    char * data;    data = NULL;    /* FLAW: Use a small buffer */    data = (char *)malloc(50*sizeof(char));    if (data == NULL) {exit(-1);}    memset(data, 'A', 50-1); /* fill with 'A's */    data[50-1] = '\0'; /* null terminate */    {        char dest[100];        memset(dest, 'C', 100-1);        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: using memcpy with the length of the dest where data         * could be smaller than dest causing buffer overread */        memcpy(dest, data, strlen(dest)*sizeof(char));        dest[100-1] = '\0';        printLine(dest);        free(data);    }}
void
CWE126_Buffer_Overread__malloc_char_memcpy_01_bad()
CWE126_Buffer_Overread__malloc_char_memcpy_01_bad
{    char * data;    data = NULL;    /* FLAW: Use a small buffer */    data = (char *)malloc(50*sizeof(char));    if (data == NULL) {exit(-1);}    memset(data, 'A', 50-1); /* fill with 'A's */    data[50-1] = '\0'; /* null terminate */    {        char dest[100];        memset(dest, 'C', 100-1);        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: using memcpy with the length of the dest where data         * could be smaller than dest causing buffer overread */        memcpy(dest, data, strlen(dest)*sizeof(char));        dest[100-1] = '\0';        printLine(dest);        free(data);    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (char *)malloc(50*sizeof(char));
data = (char *)malloc(50*sizeof(char))
data
data
(char *)malloc(50*sizeof(char))
char *
char
*
*
malloc(50*sizeof(char))
malloc
malloc
50*sizeof(char)
50
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(data, 'A', 50-1);
memset(data, 'A', 50-1)
memset
memset
data
data
'A'
50-1
50
1
data[50-1] = '\0';
data[50-1] = '\0'
data[50-1]
data
data
50-1
50
1
'\0'
{        char dest[100];        memset(dest, 'C', 100-1);        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: using memcpy with the length of the dest where data         * could be smaller than dest causing buffer overread */        memcpy(dest, data, strlen(dest)*sizeof(char));        dest[100-1] = '\0';        printLine(dest);        free(data);    }
char dest[100];
char dest[100];
char
dest[100]
dest
[100]
100
memset(dest, 'C', 100-1);
memset(dest, 'C', 100-1)
memset
memset
dest
dest
'C'
100-1
100
1
dest[100-1] = '\0';
dest[100-1] = '\0'
dest[100-1]
dest
dest
100-1
100
1
'\0'
memcpy(dest, data, strlen(dest)*sizeof(char));
memcpy(dest, data, strlen(dest)*sizeof(char))
memcpy
memcpy
dest
dest
data
data
strlen(dest)*sizeof(char)
strlen(dest)
strlen
strlen
dest
dest
sizeof(char)
char
char

dest[100-1] = '\0';
dest[100-1] = '\0'
dest[100-1]
dest
dest
100-1
100
1
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
free(data);
free(data)
free
free
data
data
-----joern-----
(35,49,0)
(68,57,0)
(22,37,0)
(67,21,0)
(9,10,0)
(34,1,0)
(24,36,0)
(50,15,0)
(20,69,0)
(41,39,0)
(4,45,0)
(26,41,0)
(16,12,0)
(64,10,0)
(66,36,0)
(53,15,0)
(12,17,0)
(28,69,0)
(70,6,0)
(63,22,0)
(26,64,0)
(48,14,0)
(17,12,0)
(15,50,0)
(67,46,0)
(22,69,0)
(6,0,0)
(52,57,0)
(18,49,0)
(61,57,0)
(62,1,0)
(45,36,0)
(42,49,0)
(32,0,0)
(41,49,0)
(40,50,0)
(49,14,0)
(3,42,0)
(23,50,0)
(67,1,0)
(38,46,0)
(37,14,0)
(50,57,0)
(42,14,0)
(42,13,0)
(33,13,0)
(11,21,0)
(69,22,0)
(0,6,0)
(17,60,0)
(45,52,0)
(54,15,0)
(64,26,0)
(2,37,0)
(1,57,0)
(55,42,0)
(47,6,0)
(44,19,0)
(13,42,0)
(59,19,0)
(8,35,0)
(57,14,0)
(22,49,0)
(46,67,0)
(1,67,0)
(25,30,0)
(29,49,0)
(49,41,0)
(18,57,0)
(27,52,0)
(41,26,0)
(21,67,0)
(0,30,0)
(30,57,0)
(1,49,0)
(31,14,0)
(51,61,0)
(71,13,0)
(56,64,0)
(39,41,0)
(10,64,0)
(36,45,0)
(19,14,0)
(5,35,0)
(43,18,0)
(50,15,1)
(19,59,1)
(38,21,1)
(56,29,1)
(23,37,1)
(18,49,1)
(6,70,1)
(51,52,1)
(16,35,1)
(2,22,1)
(18,43,1)
(11,62,1)
(13,71,1)
(43,61,1)
(33,55,1)
(61,51,1)
(27,45,1)
(8,49,1)
(71,33,1)
(29,19,1)
(10,9,1)
(0,6,1)
(42,49,1)
(1,67,1)
(59,44,1)
(21,11,1)
(45,36,1)
(28,20,1)
(41,39,1)
(63,42,1)
(4,1,1)
(42,13,1)
(41,26,1)
(35,5,1)
(12,16,1)
(66,4,1)
(64,10,1)
(35,49,1)
(24,66,1)
(53,54,1)
(46,38,1)
(9,56,1)
(30,25,1)
(62,34,1)
(20,63,1)
(49,41,1)
(32,50,1)
(15,53,1)
(40,23,1)
(7,18,1)
(3,17,1)
(22,69,1)
(55,3,1)
(54,40,1)
(47,32,1)
(5,8,1)
(22,49,1)
(25,0,1)
(37,2,1)
(70,47,1)
(34,30,1)
(3,35,1)
(67,21,1)
(26,64,1)
(17,12,1)
(36,24,1)
(67,46,1)
(69,28,1)
(52,27,1)
(1,49,1)
(1,49,2)
(0,6,2)
(12,35,2)
(22,69,2)
(16,35,2)
(42,49,2)
(35,49,2)
(64,10,2)
(50,15,2)
(67,21,2)
(1,67,2)
(18,49,2)
(17,12,2)
(17,35,2)
(49,41,2)
(22,49,2)
(42,13,2)
(45,36,2)
(67,46,2)
(41,26,2)
(41,39,2)
(26,64,2)
-----------------------------------
(0,dest[100-1])
(1,memcpy(dest, data, strlen(dest)
(2,'\\\\0')
(3,data)
(4,dest)
(5,NULL)
(6,100-1)
(7,RET)
(8,data)
(9,char)
(10,sizeof(char)
(11,dest)
(12,-1)
(13,50-1)
(14,)
(15,100-1)
(16,1)
(17,exit(-1)
(18,free(data)
(19,data = NULL)
(20,50)
(21,strlen(dest)
(22,data[50-1])
(23,dest)
(24,1)
(25,'\\\\0')
(26,malloc(50*sizeof(char)
(27,'\\\\0')
(28,1)
(29,data)
(30,dest[100-1] = '\\\\0')
(31,data)
(32,dest)
(33,50)
(34,dest)
(35,data == NULL)
(36,100-1)
(37,data[50-1] = '\\\\0')
(38,char)
(39,char *)
(40,'C')
(41,(char *)
(42,memset(data, \'A\', 50-1)
(43,data)
(44,data)
(45,dest[100-1])
(46,sizeof(char)
(47,100)
(48,if (data == NULL)
(49,data = (char *)
(50,memset(dest, 'C', 100-1)
(51,dest)
(52,dest[100-1] = '\\\\0')
(53,1)
(54,100)
(55,'A')
(56,50)
(57,)
(58,memset(dest, \'C\', 100-1)
(59,NULL)
(60,)
(61,printLine(dest)
(62,data)
(63,data)
(64,50*sizeof(char)
(65,memset(data, 'A', 50-1)
(66,100)
(67,strlen(dest)
(68,dest)
(69,50-1)
(70,1)
(71,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^