-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_02_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100];
    data = dataBuffer;
    if(1)
    {
        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
        wmemset(data, L'A', 100-1); /* fill with L'A's */
        data[100-1] = L'\0'; /* null terminate */
    }
    {
        wchar_t dest[50] = L"";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        SNPRINTF(dest, wcslen(data), L"%s", data);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
27,28
27,29
28,29
29,30
29,31
29,32
29,33
30,31
32,33
35,36
35,37
38,39
39,40
39,41
40,41
40,42
41,42
43,44
43,45
47,48
47,49
47,50
48,49
49,50
49,51
51,52
51,53
51,54
53,54
55,56
57,58
58,59
58,60
58,61
58,62
58,63
59,60
61,62
63,64
63,65
64,65
66,67
69,70
71,72
72,73
72,74
73,74
75,76
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,26,31,33,34,36,37,42,44,45,46,50,52,54,56,60,62,65,67,68,70,74,76
-----computeFrom-----
20,21
20,22
35,36
35,37
39,40
39,41
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_02_bad(){    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    if(1)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_02_bad()
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_02_bad
{    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    if(1)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100];
wchar_t dataBuffer[100];
wchar_t
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(1)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }
1
{        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }
wmemset(data, L'A', 100-1);
wmemset(data, L'A', 100-1)
wmemset
wmemset
data
data
L'A'
100-1
100
1
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
{        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
SNPRINTF(dest, wcslen(data), L"%s", data);
SNPRINTF(dest, wcslen(data), L"%s", data)
SNPRINTF
SNPRINTF
dest
dest
wcslen(data)
wcslen
wcslen
data
data
L"%s"
data
data
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(3,12,0)
(9,10,0)
(7,10,0)
(5,12,0)
(3,9,0)
(15,10,0)
(14,10,0)
(12,10,0)
(8,9,0)
(11,0,0)
(6,3,0)
(4,9,0)
(1,9,1)
(5,1,1)
(5,11,1)
(3,9,1)
(2,3,1)
(11,1,1)
(9,4,1)
(6,5,1)
(3,6,1)
(4,8,1)
(3,9,2)
(11,1,2)
-----------------------------------
(0,)
(1,1)
(2,RET)
(3,printWLine(data)
(4,dataBuffer)
(5,"")
(6,data)
(7,if(1)
(8,data)
(9,data = dataBuffer)
(10,)
(11,\\'\\\\0\\')
(12,)
(13,\\\'\\\\0\\\')
(14,data)
(15,dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^