-----label-----
1
-----code-----
void CWE127_Buffer_Underread__malloc_char_memcpy_21_bad()
{
    char * data;
    data = NULL;
    badStatic = 1; /* true */
    data = badSource(data);
    {
        char dest[100];
        memset(dest, 'C', 100-1); /* fill with 'C's */
        dest[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */
        memcpy(dest, data, 100*sizeof(char));
        /* Ensure null termination */
        dest[100-1] = '\0';
        printLine(dest);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
23,24
24,25
24,26
25,26
27,28
27,29
28,29
30,31
32,33
32,34
32,35
32,36
32,37
32,38
33,34
34,35
34,36
36,37
36,38
38,39
40,41
41,42
41,43
41,44
41,45
42,43
44,45
47,48
47,49
50,51
51,52
51,53
52,53
52,54
53,54
55,56
55,57
59,60
60,61
60,62
60,63
60,64
61,62
63,64
65,66
67,68
67,69
69,70
70,71
70,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
78,80
82,83
83,84
83,85
84,85
86,87
-----nextToken-----
2,4,8,10,11,15,17,21,22,26,29,31,35,37,39,43,45,46,48,49,54,56,57,58,62,64,66,68,71,72,77,79,80,81,85,87
-----computeFrom-----
13,14
13,15
19,20
19,21
24,25
24,26
47,48
47,49
51,52
51,53
55,56
55,57
67,68
67,69
74,75
74,76
78,79
78,80
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE127_Buffer_Underread__malloc_char_memcpy_21_bad(){    char * data;    data = NULL;    badStatic = 1; /* true */    data = badSource(data);    {        char dest[100];        memset(dest, 'C', 100-1); /* fill with 'C's */        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        memcpy(dest, data, 100*sizeof(char));        /* Ensure null termination */        dest[100-1] = '\0';        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE127_Buffer_Underread__malloc_char_memcpy_21_bad()
CWE127_Buffer_Underread__malloc_char_memcpy_21_bad
{    char * data;    data = NULL;    badStatic = 1; /* true */    data = badSource(data);    {        char dest[100];        memset(dest, 'C', 100-1); /* fill with 'C's */        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        memcpy(dest, data, 100*sizeof(char));        /* Ensure null termination */        dest[100-1] = '\0';        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char dest[100];        memset(dest, 'C', 100-1); /* fill with 'C's */        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        memcpy(dest, data, 100*sizeof(char));        /* Ensure null termination */        dest[100-1] = '\0';        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
char dest[100];
char dest[100];
char
dest[100]
dest
[100]
100
memset(dest, 'C', 100-1);
memset(dest, 'C', 100-1)
memset
memset
dest
dest
'C'
100-1
100
1
dest[100-1] = '\0';
dest[100-1] = '\0'
dest[100-1]
dest
dest
100-1
100
1
'\0'
memcpy(dest, data, 100*sizeof(char));
memcpy(dest, data, 100*sizeof(char))
memcpy
memcpy
dest
dest
data
data
100*sizeof(char)
100
sizeof(char)
char
char

dest[100-1] = '\0';
dest[100-1] = '\0'
dest[100-1]
dest
dest
100-1
100
1
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(14,10,0)
(28,42,0)
(4,42,0)
(16,22,0)
(29,37,0)
(11,7,0)
(30,19,0)
(42,10,0)
(8,38,0)
(0,21,0)
(5,10,0)
(17,19,0)
(18,0,0)
(41,32,0)
(15,13,0)
(25,15,0)
(31,7,0)
(22,2,0)
(3,41,0)
(19,32,0)
(10,42,0)
(0,1,0)
(40,15,0)
(19,2,0)
(1,38,0)
(9,38,0)
(32,19,0)
(6,13,0)
(19,0,0)
(2,21,0)
(7,31,0)
(32,41,0)
(12,1,0)
(39,7,0)
(37,2,0)
(10,2,0)
(1,0,0)
(31,22,0)
(13,37,0)
(34,21,0)
(33,32,0)
(38,21,0)
(24,2,0)
(44,2,0)
(26,21,0)
(13,15,0)
(43,24,0)
(27,34,0)
(20,34,0)
(36,31,0)
(36,10,1)
(37,29,1)
(43,37,1)
(16,31,1)
(19,0,1)
(40,6,1)
(15,25,1)
(41,3,1)
(38,8,1)
(10,42,1)
(17,22,1)
(32,41,1)
(4,28,1)
(22,16,1)
(31,7,1)
(8,9,1)
(24,43,1)
(34,27,1)
(19,32,1)
(30,17,1)
(33,30,1)
(1,12,1)
(42,4,1)
(29,13,1)
(0,1,1)
(11,39,1)
(1,38,1)
(3,33,1)
(7,11,1)
(25,40,1)
(12,18,1)
(6,19,1)
(28,14,1)
(35,24,1)
(20,38,1)
(14,5,1)
(13,15,1)
(5,0,1)
(39,36,1)
(18,34,1)
(27,20,1)
(10,42,2)
(31,7,2)
(13,15,2)
(32,41,2)
(19,0,2)
(0,1,2)
(19,32,2)
(1,38,2)
-----------------------------------
(0,data = badSource(data)
(1,badSource(data)
(2,)
(3,char)
(4,1)
(5,dest)
(6,dest)
(7,100-1)
(8,NULL)
(9,data)
(10,memset(dest, 'C', 100-1)
(11,1)
(12,data)
(13,dest[100-1])
(14,'C')
(15,100-1)
(16,'\\\\0')
(17,dest)
(18,data)
(19,memcpy(dest, data, 100*sizeof(char)
(20,badStatic)
(21,)
(22,dest[100-1] = '\\\\0')
(23,memset(dest, \'C\', 100-1)
(24,printLine(dest)
(25,1)
(26,data)
(27,1)
(28,100)
(29,'\\\\0')
(30,data)
(31,dest[100-1])
(32,100*sizeof(char)
(33,100)
(34,badStatic = 1)
(35,RET)
(36,dest)
(37,dest[100-1] = '\\\\0')
(38,data = NULL)
(39,100)
(40,100)
(41,sizeof(char)
(42,100-1)
(43,dest)
(44,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^