-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_loop_42_bad()
{
    wchar_t * data;
    data = NULL;
    data = badSource(data);
    {
        size_t i;
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with 'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        for (i = 0; i < 100; i++)
        {
            data[i] = source[i];
        }
        /* Ensure the destination buffer is null terminated */
        data[100-1] = L'\0';
        printWLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
27,32
27,33
27,34
28,29
29,30
29,31
30,31
32,33
34,35
35,36
35,37
37,38
37,39
39,40
41,42
42,43
42,44
42,45
42,46
43,44
45,46
48,49
48,50
51,52
52,53
52,54
53,54
53,55
54,55
56,57
56,58
60,61
60,62
60,63
60,64
61,62
62,63
62,64
63,64
66,67
66,68
67,68
70,71
71,72
73,74
74,75
75,76
75,77
76,77
76,78
77,78
79,80
81,82
81,83
82,83
84,85
86,87
87,88
87,89
88,89
88,90
89,90
91,92
91,93
95,96
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,31,33,36,38,40,44,46,47,49,50,55,57,58,59,64,65,68,69,72,78,80,83,85,90,92,93,94,98,100
-----computeFrom-----
13,14
13,15
19,20
19,21
48,49
48,50
52,53
52,54
56,57
56,58
62,63
62,64
66,67
66,68
75,76
75,77
87,88
87,89
91,92
91,93
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_loop_42_bad(){    wchar_t * data;    data = NULL;    data = badSource(data);    {        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = L'\0';        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_wchar_t_loop_42_bad()
CWE124_Buffer_Underwrite__malloc_wchar_t_loop_42_bad
{    wchar_t * data;    data = NULL;    data = badSource(data);    {        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = L'\0';        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = L'\0';        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
size_t i;
size_t i;
size_t
size_t
i
i
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
for (i = 0; i < 100; i++)        {            data[i] = source[i];        }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{            data[i] = source[i];        }
data[i] = source[i];
data[i] = source[i]
data[i]
data
data
i
i
source[i]
source
source
i
i
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(5,16,0)
(32,16,0)
(33,14,0)
(21,24,0)
(22,0,0)
(24,16,0)
(0,22,0)
(1,15,0)
(7,3,0)
(31,18,0)
(0,14,0)
(20,8,0)
(25,13,0)
(10,0,0)
(8,1,0)
(28,3,0)
(19,3,0)
(9,8,0)
(24,1,0)
(2,3,0)
(13,16,0)
(6,18,0)
(24,0,0)
(1,8,0)
(26,22,0)
(27,3,0)
(22,18,0)
(28,0,0)
(3,14,0)
(12,32,0)
(29,3,0)
(18,14,0)
(23,28,0)
(4,16,0)
(8,16,0)
(30,24,0)
(17,32,0)
(6,31,1)
(12,13,1)
(5,29,1)
(24,16,1)
(8,16,1)
(20,24,1)
(29,0,1)
(30,21,1)
(18,6,1)
(12,16,1)
(32,17,1)
(13,25,1)
(16,4,1)
(1,8,1)
(24,30,1)
(28,0,1)
(4,5,1)
(11,28,1)
(13,16,1)
(24,0,1)
(21,32,1)
(23,2,1)
(8,9,1)
(26,10,1)
(2,32,1)
(22,18,1)
(25,1,1)
(17,12,1)
(0,22,1)
(10,18,1)
(28,23,1)
(9,20,1)
(22,26,1)
(32,16,1)
(1,8,2)
(13,16,2)
(24,16,2)
(8,32,2)
(30,32,2)
(21,32,2)
(9,32,2)
(8,16,2)
(17,32,2)
(28,0,2)
(12,32,2)
(0,22,2)
(24,0,2)
(24,32,2)
(32,16,2)
(22,18,2)
(20,32,2)
(25,32,2)
(1,32,2)
(13,32,2)
(32,32,2)
-----------------------------------
(0,data = badSource(data)
(1,data[i] = source[i])
(2,'\\\\0')
(3,)
(4,0)
(5,i)
(6,NULL)
(7,i)
(8,source[i])
(9,i)
(10,data)
(11,RET)
(12,i)
(13,i++)
(14,)
(15,)
(16,i = 0)
(17,100)
(18,data = NULL)
(19,for (i = 0; i < 100; i++)
(20,source)
(21,data)
(22,badSource(data)
(23,data)
(24,data[i])
(25,i)
(26,data)
(27,source)
(28,printWLine(data)
(29,'\\\\0')
(30,i)
(31,data)
(32,i < 100)
(33,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^