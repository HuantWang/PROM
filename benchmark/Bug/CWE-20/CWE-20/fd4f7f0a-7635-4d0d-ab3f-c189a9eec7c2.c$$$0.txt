-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_18_bad()
{
    wchar_t * data;
    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
    data = dataBuffer;
    goto source;
source:
    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
    wmemset(data, L'A', 100-1); /* fill with L'A's */
    data[100-1] = L'\0'; /* null terminate */
    {
        wchar_t dest[50] = L"";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        SNPRINTF(dest, wcslen(data), L"%s", data);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
33,34
34,35
34,36
35,36
37,38
39,40
41,42
41,43
43,44
44,45
44,46
44,47
44,48
45,46
47,48
50,51
50,52
53,54
54,55
54,56
55,56
55,57
56,57
58,59
58,60
62,63
62,64
62,65
63,64
64,65
64,66
66,67
66,68
66,69
68,69
70,71
72,73
73,74
73,75
73,76
73,77
73,78
74,75
76,77
78,79
78,80
79,80
81,82
84,85
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,11,14,16,17,21,23,26,28,31,32,36,38,40,42,46,48,49,51,52,57,59,60,61,65,67,69,71,75,77,80,82,83,85,89,91
-----computeFrom-----
27,28
27,29
34,35
34,36
50,51
50,52
54,55
54,56
58,59
58,60
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_18_bad(){    wchar_t * data;    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    data = dataBuffer;    goto source;source:    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */    wmemset(data, L'A', 100-1); /* fill with L'A's */    data[100-1] = L'\0'; /* null terminate */    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_18_bad()
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_18_bad
{    wchar_t * data;    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    data = dataBuffer;    goto source;source:    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */    wmemset(data, L'A', 100-1); /* fill with L'A's */    data[100-1] = L'\0'; /* null terminate */    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)ALLOCA(100*sizeof(wchar_t))
(wchar_t *)ALLOCA(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
ALLOCA(100*sizeof(wchar_t))
ALLOCA
ALLOCA
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
goto source;
source
source:    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */    wmemset(data, L'A', 100-1);
source
wmemset(data, L'A', 100-1);
wmemset(data, L'A', 100-1)
wmemset
wmemset
data
data
L'A'
100-1
100
1
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
{        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
SNPRINTF(dest, wcslen(data), L"%s", data);
SNPRINTF(dest, wcslen(data), L"%s", data)
SNPRINTF
SNPRINTF
dest
dest
wcslen(data)
wcslen
wcslen
data
data
L"%s"
data
data
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(12,19,0)
(16,9,0)
(5,2,0)
(17,11,0)
(4,9,0)
(1,9,0)
(15,14,0)
(11,15,0)
(13,15,0)
(19,8,0)
(21,8,0)
(2,6,0)
(6,2,0)
(15,11,0)
(3,6,0)
(18,9,0)
(14,15,0)
(6,13,0)
(8,9,0)
(19,0,0)
(10,9,0)
(15,13,0)
(0,11,0)
(0,9,0)
(13,6,0)
(7,0,0)
(11,9,0)
(20,0,0)
(19,12,1)
(19,0,1)
(2,5,1)
(5,3,1)
(15,13,1)
(0,7,1)
(12,21,1)
(11,15,1)
(22,19,1)
(4,18,1)
(13,6,1)
(20,11,1)
(0,11,1)
(18,0,1)
(6,2,1)
(21,4,1)
(3,17,1)
(7,20,1)
(15,14,1)
(11,15,2)
(6,2,2)
(13,6,2)
(15,13,2)
(19,0,2)
(0,11,2)
(15,14,2)
-----------------------------------
(0,data = dataBuffer)
(1,data)
(2,sizeof(wchar_t)
(3,100)
(4,\\\'\\\\0\\\')
(5,wchar_t)
(6,100*sizeof(wchar_t)
(7,dataBuffer)
(8,)
(9,)
(10,dataBuffer)
(11,* dataBuffer = (wchar_t *)
(12,data)
(13,ALLOCA(100*sizeof(wchar_t)
(14,wchar_t *)
(15,(wchar_t *)
(16,source:)
(17,dataBuffer)
(18,goto source;)
(19,printWLine(data)
(20,data)
(21,"")
(22,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^