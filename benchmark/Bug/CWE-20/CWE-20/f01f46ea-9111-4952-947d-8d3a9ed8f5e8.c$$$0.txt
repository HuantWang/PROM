-----label-----
1
-----code-----
static void badSink()
{
    char * data = CWE124_Buffer_Underwrite__malloc_char_loop_45_badData;
    {
        size_t i;
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        for (i = 0; i < 100; i++)
        {
            data[i] = source[i];
        }
        /* Ensure the destination buffer is null terminated */
        data[100-1] = '\0';
        printLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
9,12
12,13
13,14
15,16
15,17
15,18
15,19
15,20
15,21
15,22
16,17
17,18
17,19
18,19
20,21
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
30,33
30,34
31,32
33,34
36,37
36,38
39,40
40,41
40,42
41,42
41,43
42,43
44,45
44,46
48,49
48,50
48,51
48,52
49,50
50,51
50,52
51,52
54,55
54,56
55,56
58,59
59,60
61,62
62,63
63,64
63,65
64,65
64,66
65,66
67,68
69,70
69,71
70,71
72,73
74,75
75,76
75,77
76,77
76,78
77,78
79,80
79,81
83,84
84,85
84,86
85,86
87,88
-----nextToken-----
2,4,8,10,11,14,19,21,24,26,28,32,34,35,37,38,43,45,46,47,52,53,56,57,60,66,68,71,73,78,80,81,82,86,88
-----computeFrom-----
36,37
36,38
40,41
40,42
44,45
44,46
50,51
50,52
54,55
54,56
63,64
63,65
75,76
75,77
79,80
79,81
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    char * data = CWE124_Buffer_Underwrite__malloc_char_loop_45_badData;    {        size_t i;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = '\0';        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
static void
badSink()
badSink
{    char * data = CWE124_Buffer_Underwrite__malloc_char_loop_45_badData;    {        size_t i;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = '\0';        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
char * data = CWE124_Buffer_Underwrite__malloc_char_loop_45_badData;
char * data = CWE124_Buffer_Underwrite__malloc_char_loop_45_badData;
char
* data = CWE124_Buffer_Underwrite__malloc_char_loop_45_badData
*
data
= CWE124_Buffer_Underwrite__malloc_char_loop_45_badData
CWE124_Buffer_Underwrite__malloc_char_loop_45_badData
CWE124_Buffer_Underwrite__malloc_char_loop_45_badData
{        size_t i;        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = '\0';        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
size_t i;
size_t i;
size_t
size_t
i
i
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
for (i = 0; i < 100; i++)        {            data[i] = source[i];        }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{            data[i] = source[i];        }
data[i] = source[i];
data[i] = source[i]
data[i]
data
data
i
i
source[i]
source
source
i
i
data[100-1] = '\0';
data[100-1] = '\0'
data[100-1]
data
data
100-1
100
1
'\0'
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(29,15,0)
(44,13,0)
(45,35,0)
(39,27,0)
(1,20,0)
(26,4,0)
(13,41,0)
(38,40,0)
(5,20,0)
(30,13,0)
(27,40,0)
(6,13,0)
(14,23,0)
(12,4,0)
(21,13,0)
(7,35,0)
(44,23,0)
(0,12,0)
(2,41,0)
(4,23,0)
(19,44,0)
(43,12,0)
(16,45,0)
(3,33,0)
(21,40,0)
(11,45,0)
(23,41,0)
(35,14,0)
(32,9,0)
(35,45,0)
(47,40,0)
(33,3,0)
(33,9,0)
(9,23,0)
(37,3,0)
(4,12,0)
(22,21,0)
(25,23,0)
(27,39,0)
(21,39,0)
(42,27,0)
(46,23,0)
(48,27,0)
(20,40,0)
(15,40,0)
(39,36,0)
(31,23,0)
(17,3,0)
(8,4,0)
(18,33,0)
(24,14,0)
(28,21,0)
(35,13,0)
(37,18,1)
(21,28,1)
(8,13,1)
(20,1,1)
(24,35,1)
(5,40,1)
(7,20,1)
(0,43,1)
(27,42,1)
(42,48,1)
(3,17,1)
(26,8,1)
(11,16,1)
(14,24,1)
(4,12,1)
(32,33,1)
(39,27,1)
(47,9,1)
(15,40,1)
(40,38,1)
(16,7,1)
(12,0,1)
(48,21,1)
(6,30,1)
(44,13,1)
(20,40,1)
(15,29,1)
(1,5,1)
(21,13,1)
(21,40,1)
(13,6,1)
(18,4,1)
(45,11,1)
(5,15,1)
(19,14,1)
(10,44,1)
(9,32,1)
(38,47,1)
(35,13,1)
(44,19,1)
(35,45,1)
(27,40,1)
(29,39,1)
(33,3,1)
(17,37,1)
(43,26,1)
(22,20,1)
(28,22,1)
(29,20,2)
(44,13,2)
(48,20,2)
(27,40,2)
(1,20,2)
(35,13,2)
(22,20,2)
(39,20,2)
(28,20,2)
(35,45,2)
(4,12,2)
(20,20,2)
(42,20,2)
(27,20,2)
(15,40,2)
(15,20,2)
(39,27,2)
(21,20,2)
(21,40,2)
(20,40,2)
(33,3,2)
(21,13,2)
(5,20,2)
-----------------------------------
(0,1)
(1,100)
(2,data)
(3,100-1)
(4,memset(source, \'C\', 100-1)
(5,i)
(6,CWE124_Buffer_Underwrite__malloc_char_loop_45_badData)
(7,data)
(8,source)
(9,source[100-1] = '\\\\0')
(10,RET)
(11,1)
(12,100-1)
(13,* data = CWE124_Buffer_Underwrite__malloc_char_loop_45_badData)
(14,data[100-1] = '\\\\0')
(15,i++)
(16,100)
(17,1)
(18,source)
(19,data)
(20,i < 100)
(21,data[i])
(22,data)
(23,)
(24,'\\\\0')
(25,source)
(26,'C')
(27,source[i])
(28,i)
(29,i)
(30,data)
(31,i)
(32,'\\\\0')
(33,source[100-1])
(34,memset(source, 'C', 100-1)
(35,data[100-1])
(36,)
(37,100)
(38,0)
(39,data[i] = source[i])
(40,i = 0)
(41,)
(42,i)
(43,100)
(44,printLine(data)
(45,100-1)
(46,for (i = 0; i < 100; i++)
(47,i)
(48,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^