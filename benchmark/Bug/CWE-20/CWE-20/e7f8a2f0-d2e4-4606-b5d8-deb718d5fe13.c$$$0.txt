-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_14_bad()
{
    char * data;
    data = (char *)malloc(100*sizeof(char));
    if (data == NULL) {exit(-1);}
    if(globalFive==5)
    {
        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
        memset(data, 'A', 100-1); /* fill with 'A's */
        data[100-1] = '\0'; /* null terminate */
    }
    {
        char dest[50] = "";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        strncpy(dest, data, strlen(data));
        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
44,45
44,46
45,46
48,49
48,50
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
68,70
68,71
68,72
68,73
69,70
70,71
70,72
72,73
72,74
72,75
74,75
76,77
78,79
79,80
79,81
79,82
79,83
80,81
82,83
84,85
86,87
86,88
87,88
89,90
91,92
92,93
92,94
93,94
93,95
94,95
96,97
96,98
100,101
101,102
101,103
102,103
104,105
106,107
107,108
107,109
108,109
110,111
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,46,47,52,54,55,57,58,63,65,66,67,71,73,75,77,81,83,85,88,90,95,97,98,99,103,105,109,111
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
56,57
56,58
60,61
60,62
64,65
64,66
92,93
92,94
96,97
96,98
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_14_bad(){    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    if(globalFive==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strncpy(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_14_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_14_bad
{    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    if(globalFive==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strncpy(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
char * data;
char * data;
char
* data
*
data
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
if(globalFive==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }
globalFive==5
globalFive
globalFive
5
{        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }
memset(data, 'A', 100-1);
memset(data, 'A', 100-1)
memset
memset
data
data
'A'
100-1
100
1
data[100-1] = '\0';
data[100-1] = '\0'
data[100-1]
data
data
100-1
100
1
'\0'
{        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strncpy(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }
char dest[50] = "";
char dest[50] = "";
char
dest[50] = ""
dest
[50]
50
= ""
""
strncpy(dest, data, strlen(data));
strncpy(dest, data, strlen(data))
strncpy
strncpy
dest
dest
data
data
strlen(data)
strlen
strlen
data
data
dest[50-1] = '\0';
dest[50-1] = '\0'
dest[50-1]
dest
dest
50-1
50
1
'\0'
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(24,40,0)
(39,40,0)
(25,30,0)
(10,2,0)
(37,21,0)
(0,29,0)
(55,26,0)
(43,36,0)
(31,21,0)
(30,25,0)
(13,18,0)
(40,18,0)
(28,41,0)
(41,18,0)
(15,24,0)
(5,29,0)
(25,4,0)
(46,34,0)
(21,31,0)
(3,36,0)
(6,4,0)
(25,22,0)
(45,46,0)
(9,12,0)
(20,25,0)
(52,31,0)
(47,30,0)
(50,26,0)
(56,41,0)
(31,18,0)
(58,35,0)
(7,42,0)
(2,23,0)
(57,4,0)
(29,0,0)
(29,18,0)
(44,37,0)
(38,22,0)
(12,50,0)
(19,7,0)
(40,34,0)
(32,37,0)
(0,18,0)
(22,50,0)
(42,46,0)
(27,0,0)
(42,7,0)
(49,24,0)
(54,40,0)
(12,18,0)
(11,50,0)
(23,2,0)
(16,26,0)
(29,50,0)
(4,50,0)
(53,26,0)
(23,48,0)
(8,30,0)
(42,18,0)
(31,52,0)
(29,4,0)
(21,37,0)
(1,44,0)
(18,26,0)
(17,29,0)
(14,7,0)
(35,50,0)
(40,24,0)
(33,42,0)
(35,18,0)
(37,44,0)
(18,31,0)
(10,41,1)
(44,1,1)
(33,40,1)
(30,47,1)
(56,18,1)
(1,32,1)
(6,57,1)
(51,12,1)
(54,39,1)
(41,18,1)
(31,52,1)
(39,36,1)
(43,3,1)
(31,21,1)
(29,0,1)
(3,23,1)
(32,13,1)
(8,20,1)
(42,18,1)
(28,56,1)
(57,46,1)
(0,27,1)
(22,38,1)
(29,4,1)
(23,2,1)
(57,36,1)
(20,29,1)
(19,14,1)
(24,49,1)
(42,7,1)
(27,17,1)
(47,8,1)
(0,18,1)
(25,4,1)
(36,43,1)
(35,58,1)
(29,18,1)
(18,31,1)
(12,18,1)
(40,24,1)
(21,37,1)
(38,25,1)
(58,22,1)
(2,10,1)
(17,5,1)
(4,6,1)
(35,18,1)
(12,9,1)
(46,45,1)
(41,28,1)
(15,54,1)
(3,41,1)
(37,44,1)
(25,30,1)
(7,19,1)
(9,35,1)
(40,18,1)
(45,42,1)
(49,15,1)
(5,4,1)
(14,33,1)
(14,36,2)
(2,41,2)
(45,36,2)
(25,30,2)
(21,37,2)
(46,36,2)
(25,4,2)
(29,4,2)
(7,36,2)
(42,7,2)
(31,21,2)
(23,2,2)
(35,18,2)
(42,36,2)
(10,41,2)
(19,36,2)
(40,24,2)
(0,18,2)
(39,36,2)
(33,36,2)
(40,18,2)
(24,36,2)
(54,36,2)
(37,44,2)
(29,0,2)
(12,18,2)
(41,18,2)
(18,31,2)
(31,52,2)
(40,36,2)
(49,36,2)
(29,18,2)
(42,18,2)
(23,41,2)
(15,36,2)
-----------------------------------
(0,strlen(data)
(1,char)
(2,-1)
(3,globalFive)
(4,dest[50] = "")
(5,dest)
(6,"")
(7,100-1)
(8,50)
(9,data)
(10,1)
(11,dest)
(12,free(data)
(13,data)
(14,100)
(15,100)
(16,if(globalFive==5)
(17,data)
(18,data = (char *)
(19,1)
(20,dest)
(21,malloc(100*sizeof(char)
(22,dest[50-1] = \\\'\\\\0\\\')
(23,exit(-1)
(24,100-1)
(25,dest[50-1])
(26,)
(27,data)
(28,NULL)
(29,strncpy(dest, data, strlen(data)
(30,50-1)
(31,(char *)
(32,100)
(33,data)
(34,)
(35,printLine(data)
(36,globalFive==5)
(37,100*sizeof(char)
(38,\\\'\\\\0\\\')
(39,data)
(40,memset(data, \\\'A\\\', 100-1)
(41,data == NULL)
(42,data[100-1])
(43,5)
(44,sizeof(char)
(45,\\\'\\\\0\\\')
(46,data[100-1] = \\\'\\\\0\\\')
(47,1)
(48,)
(49,1)
(50,)
(51,RET)
(52,char *)
(53,if (data == NULL)
(54,\\\'A\\\')
(55,data)
(56,data)
(57,dest)
(58,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^