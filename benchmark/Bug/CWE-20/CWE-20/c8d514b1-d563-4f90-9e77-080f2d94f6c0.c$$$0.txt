-----label-----
1
-----code-----
static void badSink(int64_t * data)
{
    {
        int64_t source[100] = {0}; /* fill with 0's */
        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */
        memcpy(data, source, 100*sizeof(int64_t));
        printLongLongLine(data[0]);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
12,13
12,14
12,15
12,16
13,14
14,15
14,16
15,16
17,18
17,19
17,20
19,20
21,22
22,23
24,25
25,26
25,27
25,28
25,29
26,27
28,29
30,31
32,33
32,34
34,35
35,36
35,37
36,37
39,40
40,41
40,42
41,42
43,44
43,45
44,45
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,7,9,10,16,18,20,23,27,29,31,33,37,38,42,45,46,50,52
-----computeFrom-----
32,33
32,34
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;InitializerList;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(int64_t * data){    {        int64_t source[100] = {0}; /* fill with 0's */        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */        memcpy(data, source, 100*sizeof(int64_t));        printLongLongLine(data[0]);        free(data);    }}
static void
badSink(int64_t * data)
badSink
int64_t * data
int64_t
int64_t
* data
*
data
{    {        int64_t source[100] = {0}; /* fill with 0's */        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */        memcpy(data, source, 100*sizeof(int64_t));        printLongLongLine(data[0]);        free(data);    }}
{        int64_t source[100] = {0}; /* fill with 0's */        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */        memcpy(data, source, 100*sizeof(int64_t));        printLongLongLine(data[0]);        free(data);    }
int64_t source[100] = {0};
int64_t source[100] = {0};
int64_t
int64_t
source[100] = {0}
source
[100]
100
= {0}
{0}
0
memcpy(data, source, 100*sizeof(int64_t));
memcpy(data, source, 100*sizeof(int64_t))
memcpy
memcpy
data
data
source
source
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(11,14,0)
(16,3,0)
(17,3,0)
(1,17,0)
(12,0,0)
(0,17,0)
(17,0,0)
(10,3,0)
(2,3,0)
(9,2,0)
(8,3,0)
(8,14,0)
(17,16,0)
(18,17,0)
(17,5,0)
(0,12,0)
(14,5,0)
(3,15,0)
(13,14,0)
(14,8,0)
(19,16,0)
(7,0,0)
(2,5,0)
(4,12,0)
(4,7,1)
(12,4,1)
(17,5,1)
(11,13,1)
(1,16,1)
(0,12,1)
(18,1,1)
(7,18,1)
(2,9,1)
(2,5,1)
(9,8,1)
(16,19,1)
(8,14,1)
(17,16,1)
(14,5,1)
(13,17,1)
(14,11,1)
(6,2,1)
(17,0,1)
(0,12,2)
(17,0,2)
(17,16,2)
(17,5,2)
(2,5,2)
(14,5,2)
(8,14,2)
-----------------------------------
(0,100*sizeof(int64_t)
(1,data)
(2,free(data)
(3,)
(4,int64_t)
(5,int64_t * data)
(6,RET)
(7,100)
(8,printLongLongLine(data[0])
(9,data)
(10,source)
(11,0)
(12,sizeof(int64_t)
(13,data)
(14,data[0])
(15,)
(16,source[100] = {0})
(17,memcpy(data, source, 100*sizeof(int64_t)
(18,source)
(19,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^