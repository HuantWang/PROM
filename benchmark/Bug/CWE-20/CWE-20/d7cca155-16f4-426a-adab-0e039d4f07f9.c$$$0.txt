-----label-----
1
-----code-----
void CWE190_Integer_Overflow__char_max_postinc_66b_badSink(char dataArray[])
{
    /* copy data out of dataArray */
    char data = dataArray[2];
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        char result = data;
        printHexCharLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
22,23
23,24
24,25
26,27
27,28
27,29
29,30
29,31
31,32
32,33
34,35
35,36
35,37
36,37
38,39
-----nextToken-----
2,4,6,8,9,13,15,19,20,25,28,30,33,37,39
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__char_max_postinc_66b_badSink(char dataArray[]){    /* copy data out of dataArray */    char data = dataArray[2];    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
void
CWE190_Integer_Overflow__char_max_postinc_66b_badSink(char dataArray[])
CWE190_Integer_Overflow__char_max_postinc_66b_badSink
char dataArray[]
char
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    char data = dataArray[2];    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }}
char data = dataArray[2];
char data = dataArray[2];
char
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        char result = data;        printHexCharLine(result);    }
data++;
data++
data
data
char result = data;
char result = data;
char
result = data
result
= data
data
data
printHexCharLine(result);
printHexCharLine(result)
printHexCharLine
printHexCharLine
result
result
-----joern-----
(9,8,0)
(14,3,0)
(2,9,0)
(14,6,0)
(15,1,0)
(13,12,0)
(0,17,0)
(5,14,0)
(6,14,0)
(12,8,0)
(10,6,0)
(17,8,0)
(6,1,0)
(8,1,0)
(7,14,0)
(17,12,0)
(4,12,0)
(11,8,0)
(9,6,0)
(12,6,0)
(5,7,1)
(17,0,1)
(7,10,1)
(12,4,1)
(16,17,1)
(0,12,1)
(9,2,1)
(14,3,1)
(4,13,1)
(9,6,1)
(14,5,1)
(12,6,1)
(13,9,1)
(2,6,1)
(17,12,1)
(6,14,1)
(14,3,2)
(6,14,2)
(9,6,2)
(17,12,2)
(12,6,2)
-----------------------------------
(0,result)
(1,)
(2,data)
(3,char dataArray[])
(4,data)
(5,2)
(6,data = dataArray[2])
(7,dataArray)
(8,)
(9,data++)
(10,data)
(11,result)
(12,result = data)
(13,result)
(14,dataArray[2])
(15,data)
(16,RET)
(17,printHexCharLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^