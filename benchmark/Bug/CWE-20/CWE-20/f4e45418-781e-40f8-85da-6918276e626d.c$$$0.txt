-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_preinc_03_bad()
{
    int64_t data;
    data = 0LL;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
18,20
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
28,29
31,32
32,33
34,35
34,36
35,36
35,37
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
46,47
48,49
48,50
50,51
51,52
53,54
54,55
54,56
55,56
57,58
-----nextToken-----
2,4,9,11,15,16,19,20,25,29,30,33,36,37,43,47,49,52,56,58
-----computeFrom-----
13,14
13,15
18,19
18,20
23,24
23,25
35,36
35,37
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_preinc_03_bad(){    int64_t data;    data = 0LL;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_preinc_03_bad()
CWE190_Integer_Overflow__int64_t_rand_preinc_03_bad
{    int64_t data;    data = 0LL;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
5==5
5
5
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int64_t result = data;            printLongLongLine(result);        }
++data;
++data
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(15,19,0)
(25,24,0)
(0,26,0)
(16,11,0)
(4,0,0)
(0,17,0)
(3,23,0)
(6,4,0)
(26,22,0)
(23,1,0)
(26,0,0)
(18,26,0)
(9,4,0)
(21,11,0)
(26,18,0)
(10,0,0)
(7,19,0)
(13,23,0)
(14,10,0)
(4,23,0)
(20,11,0)
(13,4,0)
(22,26,0)
(27,11,0)
(5,24,0)
(10,23,0)
(2,0,0)
(8,13,0)
(15,7,1)
(14,19,1)
(26,18,1)
(22,2,1)
(4,0,1)
(26,22,1)
(7,0,1)
(7,24,1)
(12,13,1)
(6,9,1)
(24,5,1)
(0,26,1)
(9,10,1)
(13,4,1)
(25,20,1)
(12,19,1)
(13,8,1)
(19,15,1)
(4,6,1)
(10,14,1)
(5,25,1)
(8,4,1)
(10,0,1)
(2,24,1)
(2,24,2)
(14,19,2)
(26,22,2)
(26,18,2)
(4,19,2)
(10,0,2)
(9,19,2)
(0,26,2)
(6,19,2)
(4,0,2)
(22,24,2)
(8,19,2)
(13,19,2)
(0,24,2)
(10,19,2)
(26,24,2)
(13,4,2)
-----------------------------------
(0,data = (int64_t)
(1,)
(2,data)
(3,result)
(4,result = data)
(5,5)
(6,data)
(7,5)
(8,result)
(9,result)
(10,++data)
(11,)
(12,RET)
(13,printLongLongLine(result)
(14,data)
(15,5)
(16,if(5==5)
(17,)
(18,int64_t)
(19,5==5)
(20,L)
(21,if(5==5)
(22,RAND64()
(23,)
(24,5==5)
(25,5)
(26,(int64_t)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^