-----label-----
1
-----code-----
static char * badSource(char * data)
{
    {
        char * dataBuffer = (char *)malloc(100*sizeof(char));
        if (dataBuffer == NULL) {exit(-1);}
        memset(dataBuffer, 'A', 100-1);
        dataBuffer[100-1] = '\0';
        /* FLAW: Set data pointer to before the allocated memory buffer */
        data = dataBuffer - 8;
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
12,15
12,16
12,17
13,14
14,15
14,16
16,17
16,18
16,19
19,20
20,21
20,22
21,22
21,23
23,24
25,26
25,27
26,27
28,29
28,30
30,31
31,32
31,33
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
67,68
67,69
68,69
70,71
70,72
71,72
74,75
75,76
-----nextToken-----
2,4,5,7,9,10,15,17,18,22,24,27,29,32,33,37,39,44,46,50,52,53,55,56,61,63,64,65,69,72,73,76
-----computeFrom-----
28,29
28,30
35,36
35,37
54,55
54,56
58,59
58,60
62,63
62,64
67,68
67,69
70,71
70,72
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static char * badSource(char * data){    {        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    return data;}
static char
* badSource(char * data)
*
badSource
char * data
char
* data
*
data
{    {        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    return data;}
{        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
return data;
data
data
-----joern-----
(28,14,0)
(31,30,0)
(19,26,0)
(42,0,0)
(25,8,0)
(16,14,0)
(24,33,0)
(7,8,0)
(32,22,0)
(39,33,0)
(11,22,0)
(8,7,0)
(31,0,0)
(33,14,0)
(8,14,0)
(35,26,0)
(10,8,0)
(6,23,0)
(27,39,0)
(17,6,0)
(2,24,0)
(38,35,0)
(15,31,0)
(20,42,0)
(5,19,0)
(23,12,0)
(42,20,0)
(35,22,0)
(21,24,0)
(37,7,0)
(36,7,0)
(39,26,0)
(23,6,0)
(40,19,0)
(42,26,0)
(14,4,0)
(34,30,0)
(26,42,0)
(22,35,0)
(29,3,0)
(0,31,0)
(1,39,0)
(33,13,0)
(26,14,0)
(24,4,0)
(0,42,0)
(33,39,0)
(18,26,0)
(30,31,0)
(41,33,0)
(24,13,0)
(35,3,0)
(8,26,0)
(3,14,0)
(34,15,1)
(24,13,1)
(25,23,1)
(30,34,1)
(35,26,1)
(1,27,1)
(22,11,1)
(25,19,1)
(19,26,1)
(11,32,1)
(8,26,1)
(36,37,1)
(39,26,1)
(10,25,1)
(38,8,1)
(32,38,1)
(5,26,1)
(23,6,1)
(27,41,1)
(8,7,1)
(41,3,1)
(6,17,1)
(3,29,1)
(33,13,1)
(15,18,1)
(24,33,1)
(33,39,1)
(7,36,1)
(35,22,1)
(31,30,1)
(2,33,1)
(0,31,1)
(42,0,1)
(21,24,1)
(26,42,1)
(37,10,1)
(42,20,1)
(17,19,1)
(19,40,1)
(29,35,1)
(40,5,1)
(24,2,1)
(39,1,1)
(35,22,2)
(21,24,2)
(24,33,2)
(42,0,2)
(19,26,2)
(26,42,2)
(0,31,2)
(17,19,2)
(24,13,2)
(6,19,2)
(42,20,2)
(23,19,2)
(35,26,2)
(8,7,2)
(8,26,2)
(23,6,2)
(31,30,2)
(39,26,2)
(33,13,2)
(33,39,2)
-----------------------------------
(0,malloc(100*sizeof(char)
(1,8)
(2,data)
(3,dataBuffer[100-1] = '\\\\0')
(4,)
(5,dataBuffer)
(6,-1)
(7,100-1)
(8,memset(dataBuffer, 'A', 100-1)
(9,memset(dataBuffer, \'A\', 100-1)
(10,'A')
(11,1)
(12,)
(13,char * data)
(14,)
(15,100)
(16,if (dataBuffer == NULL)
(17,1)
(18,dataBuffer)
(19,dataBuffer == NULL)
(20,char *)
(21,RET)
(22,100-1)
(23,exit(-1)
(24,return data;)
(25,dataBuffer)
(26,* dataBuffer = (char *)
(27,dataBuffer)
(28,dataBuffer)
(29,'\\\\0')
(30,sizeof(char)
(31,100*sizeof(char)
(32,100)
(33,data = dataBuffer - 8)
(34,char)
(35,dataBuffer[100-1])
(36,1)
(37,100)
(38,dataBuffer)
(39,dataBuffer - 8)
(40,NULL)
(41,data)
(42,(char *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^