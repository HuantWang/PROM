-----label-----
1
-----code-----
void CWE127_Buffer_Underread__malloc_wchar_t_loop_06_bad()
{
    wchar_t * data;
    data = NULL;
    if(STATIC_CONST_FIVE==5)
    {
        {
            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (dataBuffer == NULL) {exit(-1);}
            wmemset(dataBuffer, L'A', 100-1);
            dataBuffer[100-1] = L'\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        size_t i;
        wchar_t dest[100];
        wmemset(dest, L'C', 100-1); /* fill with 'C's */
        dest[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */
        for (i = 0; i < 100; i++)
        {
            dest[i] = data[i];
        }
        /* Ensure null termination */
        dest[100-1] = L'\0';
        printWLine(dest);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
20,21
23,24
24,25
24,26
24,27
24,28
24,29
25,26
26,27
26,28
28,29
28,30
28,31
31,32
32,33
32,34
33,34
33,35
35,36
37,38
37,39
38,39
40,41
40,42
42,43
43,44
43,45
46,47
46,48
47,48
47,49
48,49
50,51
52,53
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
60,63
60,64
61,62
63,64
66,67
66,68
69,70
70,71
70,72
71,72
71,73
72,73
74,75
74,76
78,79
79,80
79,81
80,81
82,83
82,84
83,84
86,87
86,88
86,89
86,90
86,91
86,92
86,93
87,88
88,89
88,90
89,90
91,92
93,94
94,95
94,96
96,97
96,98
98,99
100,101
101,102
101,103
101,104
101,105
102,103
104,105
107,108
107,109
110,111
111,112
111,113
112,113
112,114
113,114
115,116
115,117
119,120
119,121
119,122
119,123
120,121
121,122
121,123
122,123
125,126
125,127
126,127
129,130
130,131
132,133
133,134
134,135
134,136
135,136
135,137
136,137
138,139
140,141
140,142
141,142
143,144
145,146
146,147
146,148
147,148
147,149
148,149
150,151
150,152
154,155
155,156
155,157
156,157
158,159
-----nextToken-----
2,4,8,10,11,15,17,21,22,27,29,30,34,36,39,41,44,45,49,51,56,58,62,64,65,67,68,73,75,76,77,81,84,85,90,92,95,97,99,103,105,106,108,109,114,116,117,118,123,124,127,128,131,137,139,142,144,149,151,152,153,157,159
-----computeFrom-----
13,14
13,15
19,20
19,21
40,41
40,42
47,48
47,49
66,67
66,68
70,71
70,72
74,75
74,76
79,80
79,81
82,83
82,84
107,108
107,109
111,112
111,113
115,116
115,117
121,122
121,123
125,126
125,127
134,135
134,136
146,147
146,148
150,151
150,152
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE127_Buffer_Underread__malloc_wchar_t_loop_06_bad(){    wchar_t * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        size_t i;        wchar_t dest[100];        wmemset(dest, L'C', 100-1); /* fill with 'C's */        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        for (i = 0; i < 100; i++)        {            dest[i] = data[i];        }        /* Ensure null termination */        dest[100-1] = L'\0';        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE127_Buffer_Underread__malloc_wchar_t_loop_06_bad()
CWE127_Buffer_Underread__malloc_wchar_t_loop_06_bad
{    wchar_t * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        size_t i;        wchar_t dest[100];        wmemset(dest, L'C', 100-1); /* fill with 'C's */        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        for (i = 0; i < 100; i++)        {            dest[i] = data[i];        }        /* Ensure null termination */        dest[100-1] = L'\0';        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(STATIC_CONST_FIVE==5)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBuffer, L'A', 100-1);
wmemset(dataBuffer, L'A', 100-1)
wmemset
wmemset
dataBuffer
dataBuffer
L'A'
100-1
100
1
dataBuffer[100-1] = L'\0';
dataBuffer[100-1] = L'\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
L'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        size_t i;        wchar_t dest[100];        wmemset(dest, L'C', 100-1); /* fill with 'C's */        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        for (i = 0; i < 100; i++)        {            dest[i] = data[i];        }        /* Ensure null termination */        dest[100-1] = L'\0';        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
size_t i;
size_t i;
size_t
size_t
i
i
wchar_t dest[100];
wchar_t dest[100];
wchar_t
dest[100]
dest
[100]
100
wmemset(dest, L'C', 100-1);
wmemset(dest, L'C', 100-1)
wmemset
wmemset
dest
dest
L'C'
100-1
100
1
dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
for (i = 0; i < 100; i++)        {            dest[i] = data[i];        }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{            dest[i] = data[i];        }
dest[i] = data[i];
dest[i] = data[i]
dest[i]
dest
dest
i
i
data[i]
data
data
i
i
dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
printWLine(dest);
printWLine(dest)
printWLine
printWLine
dest
dest
-----joern-----
(26,21,0)
(41,35,0)
(42,27,0)
(60,34,0)
(19,50,0)
(20,58,0)
(12,3,0)
(35,22,0)
(15,10,0)
(14,46,0)
(37,34,0)
(59,7,0)
(32,3,0)
(8,33,0)
(14,59,0)
(24,14,0)
(16,15,0)
(59,14,0)
(11,50,0)
(10,15,0)
(55,21,0)
(26,53,0)
(26,43,0)
(58,20,0)
(25,21,0)
(49,0,0)
(5,34,0)
(18,0,0)
(1,58,0)
(9,35,0)
(2,35,0)
(0,40,0)
(44,55,0)
(17,52,0)
(33,34,0)
(46,3,0)
(50,40,0)
(54,40,0)
(48,46,0)
(31,20,0)
(43,26,0)
(52,0,0)
(36,37,0)
(27,34,0)
(10,29,0)
(38,0,0)
(21,35,0)
(14,34,0)
(53,20,0)
(3,21,0)
(56,30,0)
(3,46,0)
(14,50,0)
(21,26,0)
(39,0,0)
(33,59,0)
(57,0,0)
(53,26,0)
(6,55,0)
(13,40,0)
(47,14,0)
(51,27,0)
(45,30,0)
(46,35,0)
(20,53,0)
(23,33,0)
(21,26,1)
(14,47,1)
(31,25,1)
(59,14,1)
(37,34,1)
(46,3,1)
(20,58,1)
(34,5,1)
(42,37,1)
(45,56,1)
(60,57,1)
(58,1,1)
(57,46,1)
(42,34,1)
(8,23,1)
(26,43,1)
(6,44,1)
(56,50,1)
(47,24,1)
(48,2,1)
(23,27,1)
(5,60,1)
(14,50,1)
(57,30,1)
(36,59,1)
(14,34,1)
(3,21,1)
(52,17,1)
(16,55,1)
(33,8,1)
(26,53,1)
(51,42,1)
(37,36,1)
(12,48,1)
(27,34,1)
(3,32,1)
(28,52,1)
(2,10,1)
(24,33,1)
(18,27,1)
(11,19,1)
(1,31,1)
(44,21,1)
(10,15,1)
(55,6,1)
(14,46,1)
(50,11,1)
(25,30,1)
(32,12,1)
(15,16,1)
(27,51,1)
(53,20,1)
(55,21,1)
(2,55,1)
(17,18,1)
(30,45,1)
(33,34,1)
(37,27,2)
(14,50,2)
(1,30,2)
(59,27,2)
(26,53,2)
(37,34,2)
(25,30,2)
(26,43,2)
(21,26,2)
(23,27,2)
(58,30,2)
(3,30,2)
(33,34,2)
(10,15,2)
(42,27,2)
(47,27,2)
(48,30,2)
(31,30,2)
(10,55,2)
(27,27,2)
(36,27,2)
(55,21,2)
(26,30,2)
(53,20,2)
(44,30,2)
(8,27,2)
(46,3,2)
(33,27,2)
(46,30,2)
(20,58,2)
(21,30,2)
(24,27,2)
(32,30,2)
(59,14,2)
(12,30,2)
(14,34,2)
(6,30,2)
(55,30,2)
(16,55,2)
(3,21,2)
(53,30,2)
(14,27,2)
(51,27,2)
(20,30,2)
(2,30,2)
(27,34,2)
(15,55,2)
(14,46,2)
-----------------------------------
(0,)
(1,wchar_t)
(2,\'\\\\0\')
(3,dataBuffer - 8)
(4,'\\\\0')
(5,0)
(6,NULL)
(7,)
(8,i)
(9,if (dataBuffer == NULL)
(10,exit(-1)
(11,NULL)
(12,dataBuffer)
(13,if(STATIC_CONST_FIVE==5)
(14,data[i])
(15,-1)
(16,1)
(17,dest)
(18,'\\\\0')
(19,data)
(20,100*sizeof(wchar_t)
(21,* dataBuffer = (wchar_t *)
(22,)
(23,dest)
(24,data)
(25,dataBuffer)
(26,(wchar_t *)
(27,i < 100)
(28,RET)
(29,)
(30,STATIC_CONST_FIVE==5)
(31,100)
(32,8)
(33,dest[i])
(34,i = 0)
(35,)
(36,i)
(37,i++)
(38,for (i = 0; i < 100; i++)
(39,i)
(40,)
(41,dataBuffer)
(42,i)
(43,wchar_t *)
(44,dataBuffer)
(45,5)
(46,data = dataBuffer - 8)
(47,i)
(48,data)
(49,dest)
(50,data = NULL)
(51,100)
(52,printWLine(dest)
(53,malloc(100*sizeof(wchar_t)
(54,data)
(55,dataBuffer == NULL)
(56,STATIC_CONST_FIVE)
(57,'\\\\0')
(58,sizeof(wchar_t)
(59,dest[i] = data[i])
(60,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^