-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE135_13_bad()
{
    void * data;
    data = NULL;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Set data to point to a wide string */
        data = (void *)WIDE_STRING;
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */
            size_t dataLen = strlen((char *)data);
            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
            (void)wcscpy(dest, data);
            printLine((char *)dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
20,21
23,24
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
35,36
35,37
36,37
36,38
37,38
40,41
41,42
41,43
41,44
41,45
42,43
43,44
43,45
44,45
46,47
46,48
48,49
49,50
49,51
50,51
52,53
52,54
53,54
53,55
55,56
57,58
59,60
60,61
60,62
62,63
62,64
62,65
65,66
66,67
66,68
67,68
67,69
69,70
71,72
71,73
72,73
74,75
74,76
75,76
76,77
76,78
77,78
80,81
81,82
81,83
84,85
85,86
85,87
86,87
86,88
89,90
89,91
89,92
90,91
92,93
94,95
96,97
97,98
97,99
98,99
100,101
100,102
101,102
101,103
103,104
105,106
-----nextToken-----
2,4,8,10,11,15,17,21,22,27,30,32,34,38,39,45,47,51,54,56,58,61,63,64,68,70,73,78,79,82,83,87,88,91,93,95,99,102,104,106
-----computeFrom-----
13,14
13,15
19,20
19,21
25,26
25,27
36,37
36,38
74,75
74,76
76,77
76,78
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE135_13_bad(){    void * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)WIDE_STRING;    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE135_13_bad()
CWE121_Stack_Based_Buffer_Overflow__CWE135_13_bad
{    void * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)WIDE_STRING;    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }}
void * data;
void * data;
void
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)WIDE_STRING;    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)WIDE_STRING;    }
data = (void *)WIDE_STRING;
data = (void *)WIDE_STRING
data
data
(void *)WIDE_STRING
void *
void
*
*
WIDE_STRING
WIDE_STRING
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }
{            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }
size_t dataLen = strlen((char *)data);
size_t dataLen = strlen((char *)data);
size_t
size_t
dataLen = strlen((char *)data)
dataLen
= strlen((char *)data)
strlen((char *)data)
strlen
strlen
(char *)data
char *
char
*
*
data
data
void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
void
* dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
*
dest
= (void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
(void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
void *
void
*
*
ALLOCA((dataLen+1) * sizeof(wchar_t))
ALLOCA
ALLOCA
(dataLen+1) * sizeof(wchar_t)
(dataLen+1)
dataLen+1
dataLen
dataLen
1
sizeof(wchar_t)
wchar_t
wchar_t

(void)wcscpy(dest, data);
(void)wcscpy(dest, data)
void
void

wcscpy(dest, data)
wcscpy
wcscpy
dest
dest
data
data
printLine((char *)dest);
printLine((char *)dest)
printLine
printLine
(char *)dest
char *
char
*
*
dest
dest
-----joern-----
(36,17,0)
(44,21,0)
(10,16,0)
(33,30,0)
(13,18,0)
(38,7,0)
(14,30,0)
(8,30,0)
(32,6,0)
(9,40,0)
(21,44,0)
(49,38,0)
(34,14,0)
(19,40,0)
(29,17,0)
(21,24,0)
(5,40,0)
(6,31,0)
(9,23,0)
(35,30,0)
(40,15,0)
(34,20,0)
(42,45,0)
(24,21,0)
(9,16,0)
(7,21,0)
(23,9,0)
(2,9,0)
(9,46,0)
(1,19,0)
(3,16,0)
(14,34,0)
(4,49,0)
(20,34,0)
(26,45,0)
(28,16,0)
(40,19,0)
(31,30,0)
(7,38,0)
(25,10,0)
(33,10,0)
(21,7,0)
(46,9,0)
(10,44,0)
(48,33,0)
(0,44,0)
(44,30,0)
(6,38,0)
(33,48,0)
(11,10,0)
(30,47,0)
(34,44,0)
(37,31,0)
(38,49,0)
(39,6,0)
(27,34,0)
(10,33,0)
(16,45,0)
(12,45,0)
(38,6,0)
(46,31,0)
(19,1,0)
(41,19,0)
(10,40,0)
(22,18,0)
(31,46,0)
(0,31,1)
(18,13,1)
(43,17,1)
(39,0,1)
(25,11,1)
(6,31,1)
(44,21,1)
(21,7,1)
(9,23,1)
(10,40,1)
(11,44,1)
(19,1,1)
(4,6,1)
(27,33,1)
(19,41,1)
(2,37,1)
(3,28,1)
(7,38,1)
(41,5,1)
(31,46,1)
(46,9,1)
(9,16,1)
(33,10,1)
(33,48,1)
(29,40,1)
(38,6,1)
(43,14,1)
(32,39,1)
(36,29,1)
(49,4,1)
(9,40,1)
(22,16,1)
(34,27,1)
(38,49,1)
(13,22,1)
(21,24,1)
(5,18,1)
(37,17,1)
(10,44,1)
(34,20,1)
(17,36,1)
(29,18,1)
(9,2,1)
(10,16,1)
(16,3,1)
(6,32,1)
(14,34,1)
(34,44,1)
(10,25,1)
(40,19,1)
(10,17,2)
(33,17,2)
(38,6,2)
(41,18,2)
(38,17,2)
(9,40,2)
(46,9,2)
(34,20,2)
(34,17,2)
(34,44,2)
(5,18,2)
(7,17,2)
(9,17,2)
(10,44,2)
(38,49,2)
(31,17,2)
(33,10,2)
(0,17,2)
(19,1,2)
(6,31,2)
(27,17,2)
(21,24,2)
(32,17,2)
(49,17,2)
(25,17,2)
(9,23,2)
(11,17,2)
(21,17,2)
(37,17,2)
(10,40,2)
(46,17,2)
(44,21,2)
(39,17,2)
(33,48,2)
(44,17,2)
(4,17,2)
(19,18,2)
(10,16,2)
(14,17,2)
(40,19,2)
(7,38,2)
(14,34,2)
(9,16,2)
(40,18,2)
(31,46,2)
(6,17,2)
(2,17,2)
(21,7,2)
-----------------------------------
(0,dest)
(1,void *)
(2,data)
(3,NULL)
(4,wchar_t)
(5,data)
(6,dataLen+1)
(7,ALLOCA((dataLen+1)
(8,dataLen)
(9,(char *)
(10,wcscpy(dest, data)
(11,dest)
(12,if(GLOBAL_CONST_FIVE==5)
(13,5)
(14,printLine((char *)
(15,)
(16,data = NULL)
(17,GLOBAL_CONST_FIVE==5)
(18,GLOBAL_CONST_FIVE==5)
(19,(void *)
(20,char *)
(21,(void *)
(22,GLOBAL_CONST_FIVE)
(23,char *)
(24,void *)
(25,data)
(26,data)
(27,dest)
(28,data)
(29,GLOBAL_CONST_FIVE)
(30,)
(31,dataLen = strlen((char *)
(32,1)
(33,(void)
(34,(char *)
(35,dest)
(36,5)
(37,dataLen)
(38,(dataLen+1)
(39,dataLen)
(40,data = (void *)
(41,WIDE_STRING)
(42,if(GLOBAL_CONST_FIVE==5)
(43,RET)
(44,* dest = (void *)
(45,)
(46,strlen((char *)
(47,)
(48,void)
(49,sizeof(wchar_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^