-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_08_bad()
{
    char * data;
    data = (char *)malloc(100*sizeof(char));
    if (data == NULL) {exit(-1);}
    if(staticReturnsTrue())
    {
        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
        memset(data, 'A', 100-1); /* fill with 'A's */
        data[100-1] = '\0'; /* null terminate */
    }
    {
        char dest[50] = "";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        strncpy(dest, data, strlen(data));
        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
44,45
45,46
47,48
47,49
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
67,70
67,71
67,72
68,69
69,70
69,71
71,72
71,73
71,74
73,74
75,76
77,78
78,79
78,80
78,81
78,82
79,80
81,82
83,84
85,86
85,87
86,87
88,89
90,91
91,92
91,93
92,93
92,94
93,94
95,96
95,97
99,100
100,101
100,102
101,102
103,104
105,106
106,107
106,108
107,108
109,110
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,46,51,53,54,56,57,62,64,65,66,70,72,74,76,80,82,84,87,89,94,96,97,98,102,104,108,110
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
55,56
55,57
59,60
59,61
63,64
63,65
91,92
91,93
95,96
95,97
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_08_bad(){    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    if(staticReturnsTrue())    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strncpy(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_08_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_08_bad
{    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    if(staticReturnsTrue())    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strncpy(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
char * data;
char * data;
char
* data
*
data
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
if(staticReturnsTrue())    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }
memset(data, 'A', 100-1);
memset(data, 'A', 100-1)
memset
memset
data
data
'A'
100-1
100
1
data[100-1] = '\0';
data[100-1] = '\0'
data[100-1]
data
data
100-1
100
1
'\0'
{        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strncpy(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }
char dest[50] = "";
char dest[50] = "";
char
dest[50] = ""
dest
[50]
50
= ""
""
strncpy(dest, data, strlen(data));
strncpy(dest, data, strlen(data))
strncpy
strncpy
dest
dest
data
data
strlen(data)
strlen
strlen
data
data
dest[50-1] = '\0';
dest[50-1] = '\0'
dest[50-1]
dest
dest
50-1
50
1
'\0'
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(9,24,0)
(52,2,0)
(16,21,0)
(21,39,0)
(49,8,0)
(32,34,0)
(18,43,0)
(53,27,0)
(27,53,0)
(30,40,0)
(56,48,0)
(27,44,0)
(38,31,0)
(0,31,0)
(5,21,0)
(51,0,0)
(48,54,0)
(55,36,0)
(3,6,0)
(8,24,0)
(6,8,0)
(1,40,0)
(41,10,0)
(20,39,0)
(4,15,0)
(37,15,0)
(42,54,0)
(23,54,0)
(0,48,0)
(2,48,0)
(43,18,0)
(0,39,0)
(42,18,0)
(40,15,0)
(0,40,0)
(36,40,0)
(21,30,0)
(19,0,0)
(7,9,0)
(14,30,0)
(11,9,0)
(6,10,0)
(36,48,0)
(26,34,0)
(54,42,0)
(48,15,0)
(13,16,0)
(46,16,0)
(39,40,0)
(45,48,0)
(9,48,0)
(6,48,0)
(56,40,0)
(9,34,0)
(33,53,0)
(34,9,0)
(22,10,0)
(17,18,0)
(12,2,0)
(29,56,0)
(28,15,0)
(54,48,0)
(31,0,0)
(21,16,0)
(25,39,0)
(10,6,0)
(54,23,0)
(50,43,0)
(31,48,0)
(18,42,0)
(0,31,1)
(9,48,1)
(26,11,1)
(35,36,1)
(39,20,1)
(2,48,1)
(19,51,1)
(13,5,1)
(49,6,1)
(12,52,1)
(20,25,1)
(36,55,1)
(21,39,1)
(51,39,1)
(11,7,1)
(7,47,1)
(17,45,1)
(22,3,1)
(47,27,1)
(6,48,1)
(56,48,1)
(30,14,1)
(53,33,1)
(31,38,1)
(36,48,1)
(43,50,1)
(3,9,1)
(48,54,1)
(16,46,1)
(33,2,1)
(27,53,1)
(18,43,1)
(31,48,1)
(6,10,1)
(46,13,1)
(21,16,1)
(34,32,1)
(54,42,1)
(42,18,1)
(5,0,1)
(55,56,1)
(47,2,1)
(25,47,1)
(54,23,1)
(8,49,1)
(56,29,1)
(0,48,1)
(32,26,1)
(2,12,1)
(0,39,1)
(38,19,1)
(50,17,1)
(41,22,1)
(14,21,1)
(25,8,1)
(52,48,1)
(9,34,1)
(10,41,1)
(29,30,1)
(9,48,2)
(41,47,2)
(34,47,2)
(53,2,2)
(9,47,2)
(31,48,2)
(6,47,2)
(42,18,2)
(21,16,2)
(0,39,2)
(11,47,2)
(49,47,2)
(6,48,2)
(18,43,2)
(7,47,2)
(3,47,2)
(22,47,2)
(36,48,2)
(54,42,2)
(21,39,2)
(32,47,2)
(26,47,2)
(2,48,2)
(33,2,2)
(48,54,2)
(27,2,2)
(54,23,2)
(9,34,2)
(0,31,2)
(6,10,2)
(0,48,2)
(56,48,2)
(27,53,2)
(8,47,2)
(10,47,2)
-----------------------------------
(0,strncpy(dest, data, strlen(data)
(1,dest)
(2,data == NULL)
(3,data)
(4,data)
(5,dest)
(6,data[100-1])
(7,data)
(8,data[100-1] = \\\'\\\\0\\\')
(9,memset(data, \\\'A\\\', 100-1)
(10,100-1)
(11,\\\'A\\\')
(12,NULL)
(13,50)
(14,\\\'\\\\0\\\')
(15,)
(16,50-1)
(17,100)
(18,100*sizeof(char)
(19,data)
(20,"")
(21,dest[50-1])
(22,100)
(23,char *)
(24,)
(25,dest)
(26,100)
(27,exit(-1)
(28,if (data == NULL)
(29,data)
(30,dest[50-1] = \\\'\\\\0\\\')
(31,strlen(data)
(32,1)
(33,1)
(34,100-1)
(35,RET)
(36,free(data)
(37,if(staticReturnsTrue()
(38,data)
(39,dest[50] = "")
(40,)
(41,1)
(42,malloc(100*sizeof(char)
(43,sizeof(char)
(44,)
(45,data)
(46,1)
(47,staticReturnsTrue()
(48,data = (char *)
(49,\\\'\\\\0\\\')
(50,char)
(51,dest)
(52,data)
(53,-1)
(54,(char *)
(55,data)
(56,printLine(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^