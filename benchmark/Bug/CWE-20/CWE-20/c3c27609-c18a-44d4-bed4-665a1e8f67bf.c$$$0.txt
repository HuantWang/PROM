-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b_badSink()
{
    int data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_badData;
    {
        int i;
        int * buffer = (int *)malloc(10 * sizeof(int));
        if (buffer == NULL) {exit(-1);}
        /* initialize buffer */
        for (i = 0; i < 10; i++)
        {
            buffer[i] = 0;
        }
        /* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound
         * This code does check to see if the array index is negative */
        if (data >= 0)
        {
            buffer[data] = 1;
            /* Print the array values */
            for(i = 0; i < 10; i++)
            {
                printIntLine(buffer[i]);
            }
        }
        else
        {
            printLine("ERROR: Array index is negative.");
        }
        free(buffer);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
14,17
14,18
14,19
14,20
15,16
16,17
16,18
18,19
20,21
21,22
21,23
23,24
23,25
23,26
26,27
27,28
27,29
28,29
28,30
30,31
32,33
32,34
33,34
35,36
35,37
37,38
38,39
38,40
41,42
41,43
42,43
42,44
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
54,55
54,56
54,57
54,58
55,56
56,57
56,58
57,58
60,61
60,62
61,62
64,65
65,66
67,68
68,69
69,70
69,71
70,71
70,72
71,72
73,74
76,77
76,78
76,79
77,78
77,79
78,79
81,82
81,83
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
90,92
90,93
90,94
91,92
92,93
92,94
93,94
96,97
96,98
97,98
100,101
101,102
103,104
104,105
105,106
105,107
106,107
108,109
108,110
109,110
111,112
113,114
114,115
115,116
115,117
116,117
119,120
120,121
120,122
121,122
123,124
-----nextToken-----
2,4,8,10,13,17,19,22,24,25,29,31,34,36,39,40,44,46,51,53,58,59,62,63,66,72,74,75,79,80,86,88,89,94,95,98,99,102,107,110,112,117,118,122,124
-----computeFrom-----
35,36
35,37
42,43
42,44
56,57
56,58
60,61
60,62
69,70
69,71
77,78
77,79
83,84
83,85
92,93
92,94
96,97
96,98
-----guardedBy-----
79,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b_badSink(){    int data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_badData;    {        int i;        int * buffer = (int *)malloc(10 * sizeof(int));        if (buffer == NULL) {exit(-1);}        /* initialize buffer */        for (i = 0; i < 10; i++)        {            buffer[i] = 0;        }        /* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound         * This code does check to see if the array index is negative */        if (data >= 0)        {            buffer[data] = 1;            /* Print the array values */            for(i = 0; i < 10; i++)            {                printIntLine(buffer[i]);            }        }        else        {            printLine("ERROR: Array index is negative.");        }        free(buffer);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b_badSink()
CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b_badSink
{    int data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_badData;    {        int i;        int * buffer = (int *)malloc(10 * sizeof(int));        if (buffer == NULL) {exit(-1);}        /* initialize buffer */        for (i = 0; i < 10; i++)        {            buffer[i] = 0;        }        /* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound         * This code does check to see if the array index is negative */        if (data >= 0)        {            buffer[data] = 1;            /* Print the array values */            for(i = 0; i < 10; i++)            {                printIntLine(buffer[i]);            }        }        else        {            printLine("ERROR: Array index is negative.");        }        free(buffer);    }}
int data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_badData;
int data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_badData;
int
data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_badData
data
= CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_badData
CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_badData
CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_badData
{        int i;        int * buffer = (int *)malloc(10 * sizeof(int));        if (buffer == NULL) {exit(-1);}        /* initialize buffer */        for (i = 0; i < 10; i++)        {            buffer[i] = 0;        }        /* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound         * This code does check to see if the array index is negative */        if (data >= 0)        {            buffer[data] = 1;            /* Print the array values */            for(i = 0; i < 10; i++)            {                printIntLine(buffer[i]);            }        }        else        {            printLine("ERROR: Array index is negative.");        }        free(buffer);    }
int i;
int i;
int
i
i
int * buffer = (int *)malloc(10 * sizeof(int));
int * buffer = (int *)malloc(10 * sizeof(int));
int
* buffer = (int *)malloc(10 * sizeof(int))
*
buffer
= (int *)malloc(10 * sizeof(int))
(int *)malloc(10 * sizeof(int))
int *
int
*
*
malloc(10 * sizeof(int))
malloc
malloc
10 * sizeof(int)
10
sizeof(int)
int
int

if (buffer == NULL) {exit(-1);}
buffer == NULL
buffer
buffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
for (i = 0; i < 10; i++)        {            buffer[i] = 0;        }
i = 0;
i = 0
i
i
0
i < 10
i
i
10
i++
i
i
{            buffer[i] = 0;        }
buffer[i] = 0;
buffer[i] = 0
buffer[i]
buffer
buffer
i
i
0
if (data >= 0)        {            buffer[data] = 1;            /* Print the array values */            for(i = 0; i < 10; i++)            {                printIntLine(buffer[i]);            }        }        else        {            printLine("ERROR: Array index is negative.");        }
data >= 0
data
data
0
{            buffer[data] = 1;            /* Print the array values */            for(i = 0; i < 10; i++)            {                printIntLine(buffer[i]);            }        }
buffer[data] = 1;
buffer[data] = 1
buffer[data]
buffer
buffer
data
data
1
for(i = 0; i < 10; i++)            {                printIntLine(buffer[i]);            }
i = 0;
i = 0
i
i
0
i < 10
i
i
10
i++
i
i
{                printIntLine(buffer[i]);            }
printIntLine(buffer[i]);
printIntLine(buffer[i])
printIntLine
printIntLine
buffer[i]
buffer
buffer
i
i
{            printLine("ERROR: Array index is negative.");        }
printLine("ERROR: Array index is negative.");
printLine("ERROR: Array index is negative.")
printLine
printLine
"ERROR: Array index is negative."
free(buffer);
free(buffer)
free
free
buffer
buffer
-----joern-----
(40,42,0)
(66,64,0)
(17,16,0)
(43,48,0)
(48,50,0)
(13,21,0)
(6,54,0)
(20,57,0)
(16,17,0)
(68,32,0)
(42,12,0)
(43,27,0)
(42,56,0)
(39,27,0)
(41,0,0)
(52,23,0)
(67,50,0)
(56,42,0)
(36,43,0)
(9,0,0)
(14,24,0)
(52,61,0)
(29,54,0)
(22,48,0)
(24,27,0)
(12,42,0)
(15,59,0)
(18,27,0)
(69,63,0)
(34,48,0)
(60,3,0)
(19,58,0)
(27,48,0)
(10,67,0)
(44,48,0)
(11,3,0)
(38,39,0)
(21,67,0)
(28,0,0)
(54,5,0)
(53,48,0)
(7,21,0)
(49,24,0)
(1,56,0)
(62,57,0)
(16,12,0)
(26,39,0)
(2,69,0)
(3,67,0)
(51,32,0)
(21,27,0)
(57,0,0)
(65,29,0)
(30,67,0)
(29,27,0)
(12,16,0)
(8,50,0)
(16,27,0)
(33,48,0)
(25,28,0)
(29,19,0)
(45,55,0)
(4,63,0)
(27,16,0)
(21,69,0)
(19,29,0)
(46,55,0)
(55,32,0)
(31,66,0)
(59,32,0)
(39,32,0)
(29,0,0)
(39,54,0)
(35,29,0)
(61,52,0)
(47,61,0)
(29,0,1)
(21,13,1)
(20,28,1)
(36,57,1)
(43,36,1)
(68,51,1)
(57,62,1)
(55,46,1)
(27,16,1)
(36,66,1)
(39,27,1)
(12,42,1)
(37,43,1)
(35,57,1)
(55,32,1)
(18,67,1)
(9,69,1)
(56,1,1)
(26,38,1)
(47,24,1)
(49,27,1)
(15,54,1)
(3,60,1)
(21,67,1)
(32,68,1)
(39,26,1)
(65,35,1)
(38,55,1)
(54,6,1)
(57,0,1)
(10,30,1)
(29,27,1)
(43,27,1)
(0,41,1)
(16,12,1)
(51,24,1)
(51,52,1)
(2,21,1)
(1,40,1)
(28,25,1)
(7,3,1)
(67,10,1)
(25,19,1)
(39,32,1)
(20,0,1)
(29,65,1)
(31,3,1)
(61,47,1)
(59,32,1)
(6,39,1)
(45,32,1)
(40,18,1)
(59,15,1)
(69,2,1)
(60,11,1)
(42,56,1)
(24,14,1)
(29,54,1)
(11,55,1)
(66,31,1)
(3,67,1)
(28,0,1)
(52,61,1)
(21,27,1)
(16,17,1)
(62,20,1)
(13,7,1)
(45,59,1)
(46,45,1)
(19,29,1)
(24,27,1)
(14,49,1)
(41,9,1)
(57,57,2)
(57,3,2)
(59,55,2)
(47,24,2)
(7,3,2)
(29,54,2)
(55,32,2)
(42,56,2)
(15,55,2)
(57,0,2)
(25,57,2)
(12,42,2)
(39,32,2)
(19,57,2)
(29,57,2)
(46,55,2)
(26,55,2)
(59,32,2)
(39,55,2)
(21,27,2)
(20,3,2)
(62,57,2)
(38,55,2)
(19,29,2)
(52,61,2)
(41,3,2)
(35,57,2)
(28,57,2)
(54,55,2)
(21,3,2)
(2,3,2)
(69,3,2)
(29,27,2)
(6,55,2)
(28,0,2)
(3,67,2)
(45,55,2)
(65,57,2)
(20,57,2)
(16,17,2)
(61,24,2)
(62,3,2)
(21,67,2)
(52,24,2)
(0,3,2)
(66,3,2)
(13,3,2)
(9,3,2)
(24,27,2)
(31,3,2)
(43,27,2)
(29,0,2)
(55,55,2)
(39,27,2)
(27,16,2)
(16,12,2)
-----------------------------------
(0,i = 0)
(1,int)
(2,1)
(3,data >= 0)
(4,for(i = 0; i < 10; i++)
(5,)
(6,0)
(7,buffer)
(8,data)
(9,i)
(10,CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_badData)
(11,data)
(12,malloc(10 * sizeof(int)
(13,data)
(14,NULL)
(15,i)
(16,(int *)
(17,int *)
(18,buffer)
(19,printIntLine(buffer[i])
(20,i)
(21,buffer[data])
(22,i)
(23,)
(24,buffer == NULL)
(25,i)
(26,i)
(27,* buffer = (int *)
(28,i++)
(29,buffer[i])
(30,data)
(31,"ERROR: Array index is negative.")
(32,i = 0)
(33,for (i = 0; i < 10; i++)
(34,if (buffer == NULL)
(35,buffer)
(36,buffer)
(37,RET)
(38,buffer)
(39,buffer[i])
(40,10)
(41,0)
(42,10 * sizeof(int)
(43,free(buffer)
(44,buffer)
(45,i)
(46,10)
(47,1)
(48,)
(49,buffer)
(50,)
(51,i)
(52,exit(-1)
(53,if (data >= 0)
(54,buffer[i] = 0)
(55,i < 10)
(56,sizeof(int)
(57,i < 10)
(58,)
(59,i++)
(60,0)
(61,-1)
(62,10)
(63,)
(64,)
(65,i)
(66,printLine("ERROR: Array index is negative.")
(67,data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_badData)
(68,0)
(69,buffer[data] = 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^