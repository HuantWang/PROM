-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61_bad()
{
    int * data;
    data = NULL;
    data = CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_badSource(data);
    {
        int source[10] = {0};
        size_t i;
        /* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */
        for (i = 0; i < 10; i++)
        {
            data[i] = source[i];
        }
        printIntLine(data[0]);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
27,32
28,29
29,30
29,31
31,32
31,33
31,34
33,34
35,36
36,37
38,39
39,40
39,41
40,41
42,43
44,45
44,46
44,47
44,48
45,46
46,47
46,48
47,48
50,51
50,52
51,52
54,55
55,56
57,58
58,59
59,60
59,61
60,61
60,62
61,62
63,64
65,66
65,67
66,67
68,69
70,71
71,72
71,73
72,73
74,75
74,76
75,76
78,79
79,80
79,81
80,81
82,83
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,30,32,34,37,41,43,48,49,52,53,56,62,64,67,69,73,76,77,81,83
-----computeFrom-----
13,14
13,15
19,20
19,21
46,47
46,48
50,51
50,52
59,60
59,61
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;InitializerList;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61_bad(){    int * data;    data = NULL;    data = CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_badSource(data);    {        int source[10] = {0};        size_t i;        /* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */        for (i = 0; i < 10; i++)        {            data[i] = source[i];        }        printIntLine(data[0]);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61_bad()
CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61_bad
{    int * data;    data = NULL;    data = CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_badSource(data);    {        int source[10] = {0};        size_t i;        /* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */        for (i = 0; i < 10; i++)        {            data[i] = source[i];        }        printIntLine(data[0]);        free(data);    }}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_badSource(data);
data = CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_badSource(data)
data
data
CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_badSource(data)
CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_badSource
CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_badSource
data
data
{        int source[10] = {0};        size_t i;        /* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */        for (i = 0; i < 10; i++)        {            data[i] = source[i];        }        printIntLine(data[0]);        free(data);    }
int source[10] = {0};
int source[10] = {0};
int
source[10] = {0}
source
[10]
10
= {0}
{0}
0
size_t i;
size_t i;
size_t
size_t
i
i
for (i = 0; i < 10; i++)        {            data[i] = source[i];        }
i = 0;
i = 0
i
i
0
i < 10
i
i
10
i++
i
i
{            data[i] = source[i];        }
data[i] = source[i];
data[i] = source[i]
data[i]
data
data
i
i
source[i]
source
source
i
i
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(29,16,0)
(7,32,0)
(18,27,0)
(33,0,0)
(21,0,0)
(4,3,0)
(25,4,0)
(1,16,0)
(15,23,0)
(12,17,0)
(0,33,0)
(11,17,0)
(29,36,0)
(4,29,0)
(17,26,0)
(35,0,0)
(14,6,0)
(0,26,0)
(35,17,0)
(37,17,0)
(27,3,0)
(22,17,0)
(23,17,0)
(20,22,0)
(34,35,0)
(5,32,0)
(16,23,0)
(28,26,0)
(20,0,0)
(13,3,0)
(4,0,0)
(31,20,0)
(8,16,0)
(9,4,0)
(2,33,0)
(10,6,0)
(33,6,0)
(24,20,0)
(16,3,0)
(30,3,0)
(6,26,0)
(16,29,0)
(22,20,0)
(32,3,0)
(16,23,1)
(4,0,1)
(23,15,1)
(20,0,1)
(5,3,1)
(15,0,1)
(24,32,1)
(8,1,1)
(4,3,1)
(13,23,1)
(27,18,1)
(33,6,1)
(19,35,1)
(29,16,1)
(33,2,1)
(27,3,1)
(16,3,1)
(21,6,1)
(14,10,1)
(3,30,1)
(35,34,1)
(1,4,1)
(9,25,1)
(4,9,1)
(16,8,1)
(32,3,1)
(18,29,1)
(20,31,1)
(31,24,1)
(2,21,1)
(5,27,1)
(0,33,1)
(7,5,1)
(35,0,1)
(30,13,1)
(32,7,1)
(25,32,1)
(6,14,1)
(34,22,1)
(22,20,1)
(9,32,2)
(5,32,2)
(4,32,2)
(1,32,2)
(16,3,2)
(25,32,2)
(4,3,2)
(29,16,2)
(35,0,2)
(7,32,2)
(18,32,2)
(0,33,2)
(20,0,2)
(32,3,2)
(27,32,2)
(16,32,2)
(8,32,2)
(22,20,2)
(32,32,2)
(29,32,2)
(27,3,2)
(16,23,2)
(4,0,2)
(33,6,2)
-----------------------------------
(0,data = CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_badSource(data)
(1,source)
(2,data)
(3,i = 0)
(4,data[i])
(5,i)
(6,data = NULL)
(7,10)
(8,i)
(9,i)
(10,data)
(11,for (i = 0; i < 10; i++)
(12,source)
(13,i)
(14,NULL)
(15,source)
(16,source[i])
(17,)
(18,i)
(19,RET)
(20,data[0])
(21,data)
(22,printIntLine(data[0])
(23,source[10] = {0})
(24,data)
(25,data)
(26,)
(27,i++)
(28,data)
(29,data[i] = source[i])
(30,0)
(31,0)
(32,i < 10)
(33,CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_badSource(data)
(34,data)
(35,free(data)
(36,)
(37,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^