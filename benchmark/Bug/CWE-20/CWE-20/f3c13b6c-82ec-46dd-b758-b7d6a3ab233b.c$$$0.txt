-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_13_bad()
{
    char * data;
    data = (char *)malloc(100*sizeof(char));
    if (data == NULL) {exit(-1);}
    if(GLOBAL_CONST_FIVE==5)
    {
        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
        memset(data, 'A', 100-1); /* fill with 'A's */
        data[100-1] = '\0'; /* null terminate */
    }
    {
        char dest[50] = "";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        strncpy(dest, data, strlen(data));
        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
44,45
44,46
45,46
48,49
48,50
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
68,70
68,71
68,72
68,73
69,70
70,71
70,72
72,73
72,74
72,75
74,75
76,77
78,79
79,80
79,81
79,82
79,83
80,81
82,83
84,85
86,87
86,88
87,88
89,90
91,92
92,93
92,94
93,94
93,95
94,95
96,97
96,98
100,101
101,102
101,103
102,103
104,105
106,107
107,108
107,109
108,109
110,111
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,46,47,52,54,55,57,58,63,65,66,67,71,73,75,77,81,83,85,88,90,95,97,98,99,103,105,109,111
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
56,57
56,58
60,61
60,62
64,65
64,66
92,93
92,94
96,97
96,98
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_13_bad(){    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strncpy(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_13_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_13_bad
{    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strncpy(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
char * data;
char * data;
char
* data
*
data
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }
memset(data, 'A', 100-1);
memset(data, 'A', 100-1)
memset
memset
data
data
'A'
100-1
100
1
data[100-1] = '\0';
data[100-1] = '\0'
data[100-1]
data
data
100-1
100
1
'\0'
{        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strncpy(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }
char dest[50] = "";
char dest[50] = "";
char
dest[50] = ""
dest
[50]
50
= ""
""
strncpy(dest, data, strlen(data));
strncpy(dest, data, strlen(data))
strncpy
strncpy
dest
dest
data
data
strlen(data)
strlen
strlen
data
data
dest[50-1] = '\0';
dest[50-1] = '\0'
dest[50-1]
dest
dest
50-1
50
1
'\0'
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(17,24,0)
(52,33,0)
(4,41,0)
(37,30,0)
(5,55,0)
(55,0,0)
(14,32,0)
(34,44,0)
(39,18,0)
(50,25,0)
(41,35,0)
(22,41,0)
(15,32,0)
(33,28,0)
(16,39,0)
(40,1,0)
(44,30,0)
(6,18,0)
(13,1,0)
(46,15,0)
(18,56,0)
(21,31,0)
(31,36,0)
(51,44,0)
(32,15,0)
(30,44,0)
(20,30,0)
(31,21,0)
(35,54,0)
(0,32,0)
(47,56,0)
(9,1,0)
(1,55,0)
(42,54,0)
(0,55,0)
(53,28,0)
(58,10,0)
(44,1,0)
(3,29,0)
(29,33,0)
(12,22,0)
(18,1,0)
(41,22,0)
(48,25,0)
(19,39,0)
(22,1,0)
(56,38,0)
(11,35,0)
(54,25,0)
(7,35,0)
(55,5,0)
(44,38,0)
(18,39,0)
(41,54,0)
(45,29,0)
(28,54,0)
(2,21,0)
(24,1,0)
(1,25,0)
(26,10,0)
(41,1,0)
(8,40,0)
(33,35,0)
(33,29,0)
(32,0,0)
(55,1,0)
(49,25,0)
(27,9,0)
(23,24,0)
(9,54,0)
(40,54,0)
(43,41,0)
(40,1,1)
(17,23,1)
(52,41,1)
(8,9,1)
(41,1,1)
(20,51,1)
(9,27,1)
(28,53,1)
(16,6,1)
(33,29,1)
(3,52,1)
(39,19,1)
(44,1,1)
(44,30,1)
(56,47,1)
(53,33,1)
(51,34,1)
(4,35,1)
(47,18,1)
(55,5,1)
(29,45,1)
(9,1,1)
(22,1,1)
(19,16,1)
(2,24,1)
(15,46,1)
(30,37,1)
(7,56,1)
(57,40,1)
(41,35,1)
(37,20,1)
(31,21,1)
(12,43,1)
(23,1,1)
(41,22,1)
(33,35,1)
(0,32,1)
(26,58,1)
(58,24,1)
(35,11,1)
(22,12,1)
(1,55,1)
(27,28,1)
(55,0,1)
(43,4,1)
(18,39,1)
(11,7,1)
(6,44,1)
(14,13,1)
(58,31,1)
(46,14,1)
(40,8,1)
(7,10,1)
(10,26,1)
(24,1,1)
(32,15,1)
(18,1,1)
(24,17,1)
(34,10,1)
(45,3,1)
(21,2,1)
(21,24,2)
(51,10,2)
(31,24,2)
(44,30,2)
(18,39,2)
(34,10,2)
(33,29,2)
(0,32,2)
(41,22,2)
(18,1,2)
(41,1,2)
(37,10,2)
(30,10,2)
(33,35,2)
(47,10,2)
(31,21,2)
(22,1,2)
(16,10,2)
(56,10,2)
(6,10,2)
(18,10,2)
(2,24,2)
(44,1,2)
(39,10,2)
(1,55,2)
(44,10,2)
(19,10,2)
(55,5,2)
(24,1,2)
(41,35,2)
(20,10,2)
(40,1,2)
(9,1,2)
(32,15,2)
(55,0,2)
-----------------------------------
(0,malloc(100*sizeof(char)
(1,data = (char *)
(2,1)
(3,50)
(4,dest)
(5,char *)
(6,data)
(7,dest)
(8,data)
(9,printLine(data)
(10,GLOBAL_CONST_FIVE==5)
(11,"")
(12,data)
(13,data)
(14,100)
(15,sizeof(char)
(16,100)
(17,NULL)
(18,data[100-1])
(19,1)
(20,100)
(21,-1)
(22,strlen(data)
(23,data)
(24,data == NULL)
(25,)
(26,5)
(27,data)
(28,dest[50-1] = \\\'\\\\0\\\')
(29,50-1)
(30,100-1)
(31,exit(-1)
(32,100*sizeof(char)
(33,dest[50-1])
(34,data)
(35,dest[50] = "")
(36,)
(37,1)
(38,)
(39,100-1)
(40,free(data)
(41,strncpy(dest, data, strlen(data)
(42,dest)
(43,data)
(44,memset(data, \\\'A\\\', 100-1)
(45,1)
(46,char)
(47,\\\'\\\\0\\\')
(48,data)
(49,if(GLOBAL_CONST_FIVE==5)
(50,if (data == NULL)
(51,\\\'A\\\')
(52,dest)
(53,\\\'\\\\0\\\')
(54,)
(55,(char *)
(56,data[100-1] = \\\'\\\\0\\\')
(57,RET)
(58,GLOBAL_CONST_FIVE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^