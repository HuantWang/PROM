-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_52c_badSink(twoIntsStruct * data)
{
    {
        twoIntsStruct source[100];
        {
            size_t i;
            /* Initialize array */
            for (i = 0; i < 100; i++)
            {
                source[i].intOne = 0;
                source[i].intTwo = 0;
            }
        }
        {
            size_t i;
            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */
            for (i = 0; i < 100; i++)
            {
                data[i] = source[i];
            }
            printStructLine(&data[0]);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
19,20
21,22
21,23
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
28,32
29,30
30,31
30,32
31,32
34,35
34,36
35,36
38,39
39,40
41,42
41,43
42,43
43,44
43,45
44,45
44,46
45,46
45,47
46,47
48,49
52,53
53,54
53,55
54,55
54,56
55,56
55,57
56,57
58,59
62,63
62,64
62,65
63,64
64,65
64,66
65,66
67,68
69,70
69,71
69,72
69,73
70,71
71,72
71,73
72,73
75,76
75,77
76,77
79,80
80,81
82,83
83,84
84,85
84,86
85,86
85,87
86,87
88,89
90,91
90,92
91,92
93,94
95,96
96,97
96,98
97,98
99,100
100,101
100,102
101,102
-----nextToken-----
2,4,7,9,10,16,18,20,25,27,32,33,36,37,40,47,49,50,51,57,59,60,61,66,68,73,74,77,78,81,87,89,92,94,98,102,103
-----computeFrom-----
30,31
30,32
34,35
34,36
43,44
43,45
53,54
53,55
71,72
71,73
75,76
75,77
84,85
84,86
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_52c_badSink(twoIntsStruct * data){    {        twoIntsStruct source[100];        {            size_t i;            /* Initialize array */            for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }        }        {            size_t i;            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */            for (i = 0; i < 100; i++)            {                data[i] = source[i];            }            printStructLine(&data[0]);        }    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_52c_badSink(twoIntsStruct * data)
CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_52c_badSink
twoIntsStruct * data
twoIntsStruct
twoIntsStruct
* data
*
data
{    {        twoIntsStruct source[100];        {            size_t i;            /* Initialize array */            for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }        }        {            size_t i;            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */            for (i = 0; i < 100; i++)            {                data[i] = source[i];            }            printStructLine(&data[0]);        }    }}
{        twoIntsStruct source[100];        {            size_t i;            /* Initialize array */            for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }        }        {            size_t i;            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */            for (i = 0; i < 100; i++)            {                data[i] = source[i];            }            printStructLine(&data[0]);        }    }
twoIntsStruct source[100];
twoIntsStruct source[100];
twoIntsStruct
twoIntsStruct
source[100]
source
[100]
100
{            size_t i;            /* Initialize array */            for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }        }
size_t i;
size_t i;
size_t
size_t
i
i
for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{                source[i].intOne = 0;                source[i].intTwo = 0;            }
source[i].intOne = 0;
source[i].intOne = 0
source[i].intOne
source[i]
source
source
i
i
intOne
0
source[i].intTwo = 0;
source[i].intTwo = 0
source[i].intTwo
source[i]
source
source
i
i
intTwo
0
{            size_t i;            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */            for (i = 0; i < 100; i++)            {                data[i] = source[i];            }            printStructLine(&data[0]);        }
size_t i;
size_t i;
size_t
size_t
i
i
for (i = 0; i < 100; i++)            {                data[i] = source[i];            }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{                data[i] = source[i];            }
data[i] = source[i];
data[i] = source[i]
data[i]
data
data
i
i
source[i]
source
source
i
i
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
-----joern-----
(24,13,0)
(35,0,0)
(48,22,0)
(6,7,0)
(44,6,0)
(32,28,0)
(51,46,0)
(19,32,0)
(31,13,0)
(32,0,0)
(42,34,0)
(3,7,0)
(8,31,0)
(54,35,0)
(11,6,0)
(18,52,0)
(20,48,0)
(33,52,0)
(41,51,0)
(45,43,0)
(25,4,0)
(2,24,0)
(34,28,0)
(43,23,0)
(40,52,0)
(36,46,0)
(43,52,0)
(46,52,0)
(4,7,0)
(46,51,0)
(16,35,0)
(48,20,0)
(49,43,0)
(37,32,0)
(7,9,0)
(10,34,0)
(23,31,0)
(34,1,0)
(5,46,0)
(34,0,0)
(22,48,0)
(50,52,0)
(47,20,0)
(39,14,0)
(51,24,0)
(22,4,0)
(21,33,0)
(30,50,0)
(14,0,0)
(28,27,0)
(29,0,0)
(23,43,0)
(26,0,0)
(17,20,0)
(28,32,0)
(53,4,0)
(20,1,0)
(38,50,0)
(12,23,0)
(34,1,1)
(52,40,1)
(23,12,1)
(24,2,1)
(37,34,1)
(48,20,1)
(10,35,1)
(14,0,1)
(2,51,1)
(32,19,1)
(54,14,1)
(30,52,1)
(14,39,1)
(20,1,1)
(31,8,1)
(40,18,1)
(50,38,1)
(38,30,1)
(33,21,1)
(43,45,1)
(41,46,1)
(46,52,1)
(28,32,1)
(39,28,1)
(50,52,1)
(26,50,1)
(8,23,1)
(5,31,1)
(33,52,1)
(16,54,1)
(42,10,1)
(36,5,1)
(32,0,1)
(22,48,1)
(12,43,1)
(51,41,1)
(15,22,1)
(51,46,1)
(34,42,1)
(30,33,1)
(29,26,1)
(34,0,1)
(45,49,1)
(20,17,1)
(43,52,1)
(49,50,1)
(54,0,1)
(23,43,1)
(47,35,1)
(46,36,1)
(0,29,1)
(21,24,1)
(17,47,1)
(35,16,1)
(35,0,1)
(19,37,1)
(16,35,2)
(23,43,2)
(39,35,2)
(46,50,2)
(42,35,2)
(34,0,2)
(46,52,2)
(34,35,2)
(48,20,2)
(35,35,2)
(54,35,2)
(2,50,2)
(19,35,2)
(38,50,2)
(41,50,2)
(5,50,2)
(36,50,2)
(31,50,2)
(43,52,2)
(20,1,2)
(30,50,2)
(8,50,2)
(14,0,2)
(23,50,2)
(33,52,2)
(35,0,2)
(14,35,2)
(22,48,2)
(28,32,2)
(32,0,2)
(12,50,2)
(51,46,2)
(32,35,2)
(33,50,2)
(28,35,2)
(21,50,2)
(10,35,2)
(50,50,2)
(37,35,2)
(43,50,2)
(34,1,2)
(51,50,2)
(45,50,2)
(49,50,2)
(50,52,2)
(24,50,2)
-----------------------------------
(0,i = 0)
(1,twoIntsStruct * data)
(2,0)
(3,source)
(4,)
(5,source)
(6,)
(7,)
(8,0)
(9,)
(10,data)
(11,i)
(12,intOne)
(13,)
(14,i++)
(15,RET)
(16,100)
(17,0)
(18,i)
(19,i)
(20,data[0])
(21,i)
(22,printStructLine(&data[0])
(23,source[i].intOne)
(24,source[i].intTwo = 0)
(25,for (i = 0; i < 100; i++)
(26,i)
(27,)
(28,data[i] = source[i])
(29,0)
(30,i)
(31,source[i].intOne = 0)
(32,source[i])
(33,i++)
(34,data[i])
(35,i < 100)
(36,i)
(37,source)
(38,100)
(39,i)
(40,0)
(41,intTwo)
(42,i)
(43,source[i])
(44,for (i = 0; i < 100; i++)
(45,i)
(46,source[i])
(47,data)
(48,&data[0])
(49,source)
(50,i < 100)
(51,source[i].intTwo)
(52,i = 0)
(53,i)
(54,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^