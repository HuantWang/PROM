-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__CWE135_68_bad()
{
    void * data;
    data = NULL;
    {
        wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));
        if (dataBadBuffer == NULL) {exit(-1);}
        wmemset(dataBadBuffer, L'A', 50-1);
        dataBadBuffer[50-1] = L'\0';
        /* POTENTIAL FLAW: Set data to point to a wide string */
        data = (void *)dataBadBuffer;
    }
    CWE122_Heap_Based_Buffer_Overflow__CWE135_68_badData = data;
    CWE122_Heap_Based_Buffer_Overflow__CWE135_68b_badSink();
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
18,21
18,22
18,23
19,20
20,21
20,22
22,23
22,24
22,25
25,26
26,27
26,28
27,28
27,29
29,30
31,32
31,33
32,33
34,35
34,36
36,37
37,38
37,39
40,41
40,42
41,42
41,43
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
53,54
54,55
54,56
54,57
54,58
55,56
57,58
60,61
60,62
63,64
64,65
64,66
65,66
65,67
66,67
68,69
68,70
72,73
73,74
73,75
74,75
76,77
76,78
77,78
77,79
79,80
81,82
83,84
84,85
84,86
85,86
87,88
89,90
90,91
91,92
-----nextToken-----
2,4,8,10,11,15,17,21,23,24,28,30,33,35,38,39,43,45,50,52,56,58,59,61,62,67,69,70,71,75,78,80,82,86,88,92
-----computeFrom-----
13,14
13,15
34,35
34,36
41,42
41,43
60,61
60,62
64,65
64,66
68,69
68,70
73,74
73,75
84,85
84,86
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__CWE135_68_bad(){    void * data;    data = NULL;    {        wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));        if (dataBadBuffer == NULL) {exit(-1);}        wmemset(dataBadBuffer, L'A', 50-1);        dataBadBuffer[50-1] = L'\0';        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)dataBadBuffer;    }    CWE122_Heap_Based_Buffer_Overflow__CWE135_68_badData = data;    CWE122_Heap_Based_Buffer_Overflow__CWE135_68b_badSink();}
void
CWE122_Heap_Based_Buffer_Overflow__CWE135_68_bad()
CWE122_Heap_Based_Buffer_Overflow__CWE135_68_bad
{    void * data;    data = NULL;    {        wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));        if (dataBadBuffer == NULL) {exit(-1);}        wmemset(dataBadBuffer, L'A', 50-1);        dataBadBuffer[50-1] = L'\0';        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)dataBadBuffer;    }    CWE122_Heap_Based_Buffer_Overflow__CWE135_68_badData = data;    CWE122_Heap_Based_Buffer_Overflow__CWE135_68b_badSink();}
void * data;
void * data;
void
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
{        wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));        if (dataBadBuffer == NULL) {exit(-1);}        wmemset(dataBadBuffer, L'A', 50-1);        dataBadBuffer[50-1] = L'\0';        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)dataBadBuffer;    }
wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));
wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));
wchar_t
* dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t))
*
dataBadBuffer
= (wchar_t *)malloc(50*sizeof(wchar_t))
(wchar_t *)malloc(50*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(50*sizeof(wchar_t))
malloc
malloc
50*sizeof(wchar_t)
50
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBadBuffer == NULL) {exit(-1);}
dataBadBuffer == NULL
dataBadBuffer
dataBadBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBadBuffer, L'A', 50-1);
wmemset(dataBadBuffer, L'A', 50-1)
wmemset
wmemset
dataBadBuffer
dataBadBuffer
L'A'
50-1
50
1
dataBadBuffer[50-1] = L'\0';
dataBadBuffer[50-1] = L'\0'
dataBadBuffer[50-1]
dataBadBuffer
dataBadBuffer
50-1
50
1
L'\0'
data = (void *)dataBadBuffer;
data = (void *)dataBadBuffer
data
data
(void *)dataBadBuffer
void *
void
*
*
dataBadBuffer
dataBadBuffer
CWE122_Heap_Based_Buffer_Overflow__CWE135_68_badData = data;
CWE122_Heap_Based_Buffer_Overflow__CWE135_68_badData = data
CWE122_Heap_Based_Buffer_Overflow__CWE135_68_badData
CWE122_Heap_Based_Buffer_Overflow__CWE135_68_badData
data
data
CWE122_Heap_Based_Buffer_Overflow__CWE135_68b_badSink();
CWE122_Heap_Based_Buffer_Overflow__CWE135_68b_badSink()
CWE122_Heap_Based_Buffer_Overflow__CWE135_68b_badSink
CWE122_Heap_Based_Buffer_Overflow__CWE135_68b_badSink
-----joern-----
(14,21,0)
(24,32,0)
(22,19,0)
(4,6,0)
(34,7,0)
(4,23,0)
(23,21,0)
(8,21,0)
(34,10,0)
(32,4,0)
(15,8,0)
(32,26,0)
(3,4,0)
(16,14,0)
(6,26,0)
(20,17,0)
(19,26,0)
(12,14,0)
(17,15,0)
(33,7,0)
(8,11,0)
(31,19,0)
(29,23,0)
(17,20,0)
(5,26,0)
(28,21,0)
(13,32,0)
(11,8,0)
(15,17,0)
(2,26,0)
(1,17,0)
(21,6,0)
(9,23,0)
(23,9,0)
(8,15,0)
(7,34,0)
(25,6,0)
(18,6,0)
(27,20,0)
(0,6,0)
(23,4,0)
(21,8,0)
(1,28,1)
(20,27,1)
(28,19,1)
(24,13,1)
(14,16,1)
(32,24,1)
(33,14,1)
(8,15,1)
(19,22,1)
(7,33,1)
(14,21,1)
(30,5,1)
(32,4,1)
(3,25,1)
(17,20,1)
(21,8,1)
(13,4,1)
(27,1,1)
(16,12,1)
(22,31,1)
(25,14,1)
(4,23,1)
(5,32,1)
(23,21,1)
(8,11,1)
(25,34,1)
(23,29,1)
(15,17,1)
(29,3,1)
(12,21,1)
(34,7,1)
(23,9,1)
(32,4,2)
(4,23,2)
(7,14,2)
(34,7,2)
(14,21,2)
(15,17,2)
(21,8,2)
(8,15,2)
(34,14,2)
(33,14,2)
(8,11,2)
(17,20,2)
(23,9,2)
(23,21,2)
-----------------------------------
(0,if (dataBadBuffer == NULL)
(1,50)
(2,data)
(3,data)
(4,data = (void *)
(5,CWE122_Heap_Based_Buffer_Overflow__CWE135_68b_badSink()
(6,)
(7,-1)
(8,(wchar_t *)
(9,void *)
(10,)
(11,wchar_t *)
(12,dataBadBuffer)
(13,CWE122_Heap_Based_Buffer_Overflow__CWE135_68_badData)
(14,dataBadBuffer == NULL)
(15,malloc(50*sizeof(wchar_t)
(16,NULL)
(17,50*sizeof(wchar_t)
(18,dataBadBuffer)
(19,data = NULL)
(20,sizeof(wchar_t)
(21,* dataBadBuffer = (wchar_t *)
(22,NULL)
(23,(void *)
(24,data)
(25,'\\\\0')
(26,)
(27,wchar_t)
(28,dataBadBuffer)
(29,dataBadBuffer)
(30,RET)
(31,data)
(32,CWE122_Heap_Based_Buffer_Overflow__CWE135_68_badData = data)
(33,1)
(34,exit(-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^