-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_31_bad()
{
    wchar_t * data;
    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
    data = dataBuffer;
    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
    wmemset(data, L'A', 100-1); /* fill with L'A's */
    data[100-1] = L'\0'; /* null terminate */
    {
        wchar_t * dataCopy = data;
        wchar_t * data = dataCopy;
        {
            wchar_t dest[50] = L"";
            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
            SNPRINTF(dest, wcslen(data), L"%s", data);
            printWLine(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
33,34
34,35
34,36
35,36
37,38
39,40
40,41
40,42
40,43
40,44
41,42
43,44
46,47
46,48
49,50
50,51
50,52
51,52
51,53
52,53
54,55
54,56
58,59
58,60
58,61
59,60
60,61
60,62
62,63
62,64
62,65
65,66
66,67
68,69
69,70
69,71
71,72
71,73
71,74
74,75
75,76
77,78
77,79
77,80
78,79
79,80
79,81
81,82
81,83
81,84
83,84
85,86
87,88
88,89
88,90
88,91
88,92
88,93
89,90
91,92
93,94
93,95
94,95
96,97
99,100
101,102
102,103
102,104
103,104
105,106
-----nextToken-----
2,4,8,10,11,14,16,17,21,23,26,28,31,32,36,38,42,44,45,47,48,53,55,56,57,61,63,64,67,70,72,73,76,80,82,84,86,90,92,95,97,98,100,104,106
-----computeFrom-----
27,28
27,29
34,35
34,36
46,47
46,48
50,51
50,52
54,55
54,56
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_31_bad(){    wchar_t * data;    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    data = dataBuffer;    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */    wmemset(data, L'A', 100-1); /* fill with L'A's */    data[100-1] = L'\0'; /* null terminate */    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            wchar_t dest[50] = L"";            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */            SNPRINTF(dest, wcslen(data), L"%s", data);            printWLine(data);        }    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_31_bad()
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_31_bad
{    wchar_t * data;    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    data = dataBuffer;    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */    wmemset(data, L'A', 100-1); /* fill with L'A's */    data[100-1] = L'\0'; /* null terminate */    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            wchar_t dest[50] = L"";            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */            SNPRINTF(dest, wcslen(data), L"%s", data);            printWLine(data);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)ALLOCA(100*sizeof(wchar_t))
(wchar_t *)ALLOCA(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
ALLOCA(100*sizeof(wchar_t))
ALLOCA
ALLOCA
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
wmemset(data, L'A', 100-1);
wmemset(data, L'A', 100-1)
wmemset
wmemset
data
data
L'A'
100-1
100
1
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
{        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            wchar_t dest[50] = L"";            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */            SNPRINTF(dest, wcslen(data), L"%s", data);            printWLine(data);        }    }
wchar_t * dataCopy = data;
wchar_t * dataCopy = data;
wchar_t
* dataCopy = data
*
dataCopy
= data
data
data
wchar_t * data = dataCopy;
wchar_t * data = dataCopy;
wchar_t
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
{            wchar_t dest[50] = L"";            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */            SNPRINTF(dest, wcslen(data), L"%s", data);            printWLine(data);        }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
SNPRINTF(dest, wcslen(data), L"%s", data);
SNPRINTF(dest, wcslen(data), L"%s", data)
SNPRINTF
SNPRINTF
dest
dest
wcslen(data)
wcslen
wcslen
data
data
L"%s"
data
data
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(24,18,0)
(20,16,0)
(1,25,0)
(3,6,0)
(4,23,0)
(11,1,0)
(26,3,0)
(12,17,0)
(10,2,0)
(9,29,0)
(16,15,0)
(13,3,0)
(1,18,0)
(21,15,0)
(2,25,0)
(29,10,0)
(6,17,0)
(3,29,0)
(18,1,0)
(8,10,0)
(2,19,0)
(25,1,0)
(22,29,0)
(28,17,0)
(0,17,0)
(19,2,0)
(23,6,0)
(29,17,0)
(5,6,0)
(15,6,0)
(16,23,0)
(25,2,0)
(7,6,0)
(10,17,0)
(27,23,0)
(2,10,0)
(23,3,0)
(23,4,1)
(29,10,1)
(13,12,1)
(14,16,1)
(16,20,1)
(1,18,1)
(22,10,1)
(18,24,1)
(3,26,1)
(26,13,1)
(25,1,1)
(2,25,1)
(24,11,1)
(27,3,1)
(23,3,1)
(2,19,1)
(12,29,1)
(29,9,1)
(21,23,1)
(16,23,1)
(11,8,1)
(10,2,1)
(3,29,1)
(9,22,1)
(20,21,1)
(4,27,1)
(2,19,2)
(23,3,2)
(3,29,2)
(25,1,2)
(16,23,2)
(10,2,2)
(29,10,2)
(1,18,2)
(2,25,2)
-----------------------------------
(0,data)
(1,100*sizeof(wchar_t)
(2,(wchar_t *)
(3,* dataCopy = data)
(4,dataCopy)
(5,data)
(6,)
(7,dataCopy)
(8,dataBuffer)
(9,dataBuffer)
(10,* dataBuffer = (wchar_t *)
(11,100)
(12,\\\'\\\\0\\\')
(13,dataCopy)
(14,RET)
(15,)
(16,printWLine(data)
(17,)
(18,sizeof(wchar_t)
(19,wchar_t *)
(20,data)
(21,"")
(22,data)
(23,* data = dataCopy)
(24,wchar_t)
(25,ALLOCA(100*sizeof(wchar_t)
(26,data)
(27,data)
(28,dataBuffer)
(29,data = dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^