-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_bad()
{
    unsigned int data;
    data = 0;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(staticReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
36,39
37,38
38,39
39,40
41,42
42,43
42,44
44,45
44,46
46,47
47,48
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,40,43,45,48,52,54
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_bad(){    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_08_bad
{    unsigned int data;    data = 0;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(staticReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(2,16,0)
(5,4,0)
(25,4,0)
(3,16,0)
(19,16,0)
(16,6,0)
(14,11,0)
(5,18,0)
(15,25,0)
(20,4,0)
(8,5,0)
(18,22,0)
(10,1,0)
(11,5,0)
(11,18,0)
(9,5,0)
(12,3,0)
(21,18,0)
(17,4,0)
(4,1,0)
(7,1,0)
(16,3,0)
(24,1,0)
(3,4,0)
(25,18,0)
(25,15,1)
(4,20,1)
(25,4,1)
(8,25,1)
(12,19,1)
(15,23,1)
(14,5,1)
(23,16,1)
(23,0,1)
(5,9,1)
(20,17,1)
(13,11,1)
(2,0,1)
(11,14,1)
(13,23,1)
(11,5,1)
(0,4,1)
(5,4,1)
(3,4,1)
(9,8,1)
(19,2,1)
(3,12,1)
(16,3,1)
(12,0,2)
(14,23,2)
(8,23,2)
(5,23,2)
(11,23,2)
(25,23,2)
(16,0,2)
(9,23,2)
(25,4,2)
(16,3,2)
(3,0,2)
(15,23,2)
(3,4,2)
(11,5,2)
(5,4,2)
(2,0,2)
(19,0,2)
-----------------------------------
(0,staticReturnsTrue()
(1,)
(2,stdin)
(3,&data)
(4,data = 0)
(5,result = data)
(6,)
(7,data)
(8,result)
(9,data)
(10,if(staticReturnsTrue()
(11,printUnsignedLine(result)
(12,data)
(13,RET)
(14,result)
(15,data)
(16,fscanf (stdin, "%u", &data)
(17,data)
(18,)
(19,"%u")
(20,0)
(21,result)
(22,)
(23,staticReturnsTrue()
(24,if(staticReturnsTrue()
(25,data++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^