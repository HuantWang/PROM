-----label-----
1
-----code-----
void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_44_bad()
{
    size_t data;
    /* define a function pointer */
    void (*funcPtr) (size_t) = badSink;
    /* Initialize data */
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to unsigned int */
            data = strtoul(inputBuffer, NULL, 0);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
20,21
22,23
24,25
25,26
27,28
28,29
28,30
29,30
32,33
32,34
33,34
34,35
34,36
36,37
36,38
36,39
38,39
39,40
41,42
43,44
43,45
43,46
44,45
44,46
45,46
45,47
45,48
45,49
46,47
48,49
50,51
52,53
54,55
56,57
57,58
58,59
58,60
59,60
61,62
61,63
61,64
61,65
62,63
64,65
66,67
69,70
70,71
71,72
71,73
72,73
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,9,11,14,17,18,21,23,26,30,31,35,37,40,42,47,49,51,53,55,60,63,65,67,68,73,74,78,80
-----computeFrom-----
28,29
28,30
44,45
44,46
58,59
58,60
-----guardedBy-----
49,65
55,67
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_44_bad(){    size_t data;    /* define a function pointer */    void (*funcPtr) (size_t) = badSink;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }    }    /* use the function pointer */    funcPtr(data);}
void
CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_44_bad()
CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_fgets_44_bad
{    size_t data;    /* define a function pointer */    void (*funcPtr) (size_t) = badSink;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }    }    /* use the function pointer */    funcPtr(data);}
size_t data;
size_t data;
size_t
size_t
data
data
void (*funcPtr) (size_t) = badSink;
void (*funcPtr) (size_t) = badSink;
void
(*funcPtr) (size_t) = badSink
*funcPtr
*
funcPtr
size_t
size_t
size_t


= badSink
badSink
badSink
data = 0;
data = 0
data
data
0
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }
data = strtoul(inputBuffer, NULL, 0);
data = strtoul(inputBuffer, NULL, 0)
data
data
strtoul(inputBuffer, NULL, 0)
strtoul
strtoul
inputBuffer
inputBuffer
NULL
NULL
0
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(32,21,0)
(2,11,0)
(3,21,0)
(24,23,0)
(28,22,0)
(7,23,0)
(10,24,0)
(20,25,0)
(27,21,0)
(23,9,0)
(25,9,0)
(26,9,0)
(17,13,0)
(1,29,0)
(22,21,0)
(18,25,0)
(33,17,0)
(15,29,0)
(2,24,0)
(0,2,0)
(16,15,0)
(21,24,0)
(30,9,0)
(31,11,0)
(29,9,0)
(11,2,0)
(21,22,0)
(19,2,0)
(6,29,0)
(15,22,0)
(4,23,0)
(15,9,0)
(5,24,0)
(8,2,0)
(22,14,0)
(31,2,1)
(11,2,1)
(12,15,1)
(24,5,1)
(27,28,1)
(3,27,1)
(16,17,1)
(21,32,1)
(2,8,1)
(15,29,1)
(22,21,1)
(32,3,1)
(25,20,1)
(20,18,1)
(33,11,1)
(17,33,1)
(1,6,1)
(2,24,1)
(0,19,1)
(29,1,1)
(6,25,1)
(5,10,1)
(10,29,1)
(11,31,1)
(21,24,1)
(15,22,1)
(19,24,1)
(15,16,1)
(16,22,1)
(28,11,1)
(8,0,1)
(32,11,2)
(2,24,2)
(27,11,2)
(15,29,2)
(22,21,2)
(15,22,2)
(17,11,2)
(21,11,2)
(11,2,2)
(21,24,2)
(33,11,2)
(28,11,2)
(3,11,2)
(22,11,2)
-----------------------------------
(0,CHAR_ARRAY_SIZE)
(1,0)
(2,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(3,NULL)
(4,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(5,"")
(6,data)
(7,inputBuffer)
(8,stdin)
(9,)
(10,inputBuffer)
(11,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(12,RET)
(13,)
(14,)
(15,funcPtr(data)
(16,data)
(17,printLine("fgets()
(18,funcPtr)
(19,inputBuffer)
(20,badSink)
(21,strtoul(inputBuffer, NULL, 0)
(22,data = strtoul(inputBuffer, NULL, 0)
(23,)
(24,inputBuffer[CHAR_ARRAY_SIZE] = "")
(25,(*funcPtr)
(26,data)
(27,inputBuffer)
(28,data)
(29,data = 0)
(30,funcPtr)
(31,NULL)
(32,0)
(33,"fgets()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^