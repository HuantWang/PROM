-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_04_bad()
{
    unsigned int data;
    data = 0;
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(STATIC_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_04_bad(){    unsigned int data;    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_04_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_04_bad
{    unsigned int data;    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(11,10,0)
(25,19,0)
(4,12,0)
(21,9,0)
(3,5,0)
(5,2,0)
(8,19,0)
(2,17,0)
(9,16,0)
(15,11,0)
(7,11,0)
(11,12,0)
(6,2,0)
(1,2,0)
(23,17,0)
(0,17,0)
(12,11,0)
(16,13,0)
(22,16,0)
(12,17,0)
(18,19,0)
(9,17,0)
(2,16,0)
(17,19,0)
(5,16,0)
(5,3,1)
(1,6,1)
(12,17,1)
(23,0,1)
(7,14,1)
(15,7,1)
(9,17,1)
(5,2,1)
(4,15,1)
(14,17,1)
(6,9,1)
(12,4,1)
(20,24,1)
(20,5,1)
(2,17,1)
(21,24,1)
(11,12,1)
(3,2,1)
(17,23,1)
(24,14,1)
(9,21,1)
(2,1,1)
(24,11,1)
(2,17,2)
(21,24,2)
(9,24,2)
(15,14,2)
(12,17,2)
(6,24,2)
(4,14,2)
(7,14,2)
(5,2,2)
(12,14,2)
(11,12,2)
(5,24,2)
(9,17,2)
(3,24,2)
(2,24,2)
(1,24,2)
(11,14,2)
-----------------------------------
(0,data)
(1,data)
(2,result = data)
(3,result)
(4,data)
(5,printUnsignedLine(result)
(6,result)
(7,stdin)
(8,if(STATIC_CONST_TRUE)
(9,data++)
(10,)
(11,fscanf (stdin, "%u", &data)
(12,&data)
(13,)
(14,STATIC_CONST_TRUE)
(15,"%u")
(16,)
(17,data = 0)
(18,data)
(19,)
(20,RET)
(21,data)
(22,result)
(23,0)
(24,STATIC_CONST_TRUE)
(25,if(STATIC_CONST_TRUE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^