-----label-----
1
-----code-----
void CWE127_Buffer_Underread__malloc_wchar_t_ncpy_16_bad()
{
    wchar_t * data;
    data = NULL;
    while(1)
    {
        {
            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (dataBuffer == NULL) {exit(-1);}
            wmemset(dataBuffer, L'A', 100-1);
            dataBuffer[100-1] = L'\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
        break;
    }
    {
        wchar_t dest[100];
        wmemset(dest, L'C', 100-1); /* fill with 'C's */
        dest[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */
        wcsncpy(dest, data, wcslen(dest));
        /* Ensure null termination */
        dest[100-1] = L'\0';
        printWLine(dest);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
20,21
20,22
21,22
21,23
21,24
21,25
21,26
22,23
23,24
23,25
25,26
25,27
25,28
28,29
29,30
29,31
30,31
30,32
32,33
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
43,44
43,45
44,45
44,46
45,46
47,48
49,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
57,60
57,61
58,59
60,61
63,64
63,65
66,67
67,68
67,69
68,69
68,70
69,70
71,72
71,73
75,76
76,77
76,78
77,78
79,80
79,81
80,81
84,85
84,86
84,87
84,88
84,89
84,90
85,86
86,87
86,88
88,89
88,90
90,91
92,93
93,94
93,95
93,96
93,97
94,95
96,97
99,100
99,101
102,103
103,104
103,105
104,105
104,106
105,106
107,108
107,109
111,112
112,113
112,114
112,115
112,116
113,114
115,116
117,118
119,120
119,121
120,121
122,123
124,125
125,126
125,127
126,127
126,128
127,128
129,130
129,131
133,134
134,135
134,136
135,136
137,138
-----nextToken-----
2,4,8,10,11,15,17,19,24,26,27,31,33,36,38,41,42,46,48,53,55,59,61,62,64,65,70,72,73,74,78,81,82,83,87,89,91,95,97,98,100,101,106,108,109,110,114,116,118,121,123,128,130,131,132,136,138
-----computeFrom-----
13,14
13,15
37,38
37,39
44,45
44,46
63,64
63,65
67,68
67,69
71,72
71,73
76,77
76,78
79,80
79,81
99,100
99,101
103,104
103,105
107,108
107,109
125,126
125,127
129,130
129,131
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE127_Buffer_Underread__malloc_wchar_t_ncpy_16_bad(){    wchar_t * data;    data = NULL;    while(1)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        break;    }    {        wchar_t dest[100];        wmemset(dest, L'C', 100-1); /* fill with 'C's */        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        wcsncpy(dest, data, wcslen(dest));        /* Ensure null termination */        dest[100-1] = L'\0';        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE127_Buffer_Underread__malloc_wchar_t_ncpy_16_bad()
CWE127_Buffer_Underread__malloc_wchar_t_ncpy_16_bad
{    wchar_t * data;    data = NULL;    while(1)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        break;    }    {        wchar_t dest[100];        wmemset(dest, L'C', 100-1); /* fill with 'C's */        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        wcsncpy(dest, data, wcslen(dest));        /* Ensure null termination */        dest[100-1] = L'\0';        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
while(1)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        break;    }
1
{        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        break;    }
{            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBuffer, L'A', 100-1);
wmemset(dataBuffer, L'A', 100-1)
wmemset
wmemset
dataBuffer
dataBuffer
L'A'
100-1
100
1
dataBuffer[100-1] = L'\0';
dataBuffer[100-1] = L'\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
L'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
break;
{        wchar_t dest[100];        wmemset(dest, L'C', 100-1); /* fill with 'C's */        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        wcsncpy(dest, data, wcslen(dest));        /* Ensure null termination */        dest[100-1] = L'\0';        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
wchar_t dest[100];
wchar_t dest[100];
wchar_t
dest[100]
dest
[100]
100
wmemset(dest, L'C', 100-1);
wmemset(dest, L'C', 100-1)
wmemset
wmemset
dest
dest
L'C'
100-1
100
1
dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
wcsncpy(dest, data, wcslen(dest));
wcsncpy(dest, data, wcslen(dest))
wcsncpy
wcsncpy
dest
dest
data
data
wcslen(dest)
wcslen
wcslen
dest
dest
dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
printWLine(dest);
printWLine(dest)
printWLine
printWLine
dest
dest
-----joern-----
(6,5,0)
(10,22,0)
(17,23,0)
(32,38,0)
(40,29,0)
(29,45,0)
(14,38,0)
(19,29,0)
(27,37,0)
(29,1,0)
(26,28,0)
(31,5,0)
(4,1,0)
(36,28,0)
(3,40,0)
(33,28,0)
(21,2,0)
(23,22,0)
(5,28,0)
(45,44,0)
(5,4,0)
(22,23,0)
(43,31,0)
(13,1,0)
(8,40,0)
(5,31,0)
(46,22,0)
(16,7,0)
(7,12,0)
(5,37,0)
(19,4,0)
(12,35,0)
(18,1,0)
(45,10,0)
(4,19,0)
(2,28,0)
(24,4,0)
(30,1,0)
(1,39,0)
(15,39,0)
(10,45,0)
(44,45,0)
(22,10,0)
(25,5,0)
(41,19,0)
(42,37,0)
(45,29,0)
(12,7,0)
(37,38,0)
(11,19,0)
(28,38,0)
(0,29,0)
(41,24,1)
(31,43,1)
(40,8,1)
(18,12,1)
(29,45,1)
(37,27,1)
(45,10,1)
(8,3,1)
(4,19,1)
(6,25,1)
(9,2,1)
(21,36,1)
(5,31,1)
(40,29,1)
(7,16,1)
(18,40,1)
(10,22,1)
(5,37,1)
(26,20,1)
(16,40,1)
(25,26,1)
(11,41,1)
(22,23,1)
(19,29,1)
(15,4,1)
(36,5,1)
(27,42,1)
(17,46,1)
(19,11,1)
(20,37,1)
(46,0,1)
(0,20,1)
(45,44,1)
(12,7,1)
(5,4,1)
(24,18,1)
(26,15,1)
(43,6,1)
(23,17,1)
(3,29,1)
(2,21,1)
(8,20,2)
(4,20,2)
(29,20,2)
(41,20,2)
(45,20,2)
(5,37,2)
(3,20,2)
(0,20,2)
(10,20,2)
(5,4,2)
(17,20,2)
(15,20,2)
(18,20,2)
(40,29,2)
(29,45,2)
(45,44,2)
(7,40,2)
(19,20,2)
(40,20,2)
(24,20,2)
(46,20,2)
(22,20,2)
(22,23,2)
(23,20,2)
(5,31,2)
(10,22,2)
(16,40,2)
(19,29,2)
(12,40,2)
(4,19,2)
(12,7,2)
(45,10,2)
(11,20,2)
-----------------------------------
(0,dataBuffer)
(1,)
(2,printWLine(dest)
(3,dataBuffer)
(4,data = dataBuffer - 8)
(5,wcsncpy(dest, data, wcslen(dest)
(6,data)
(7,-1)
(8,NULL)
(9,RET)
(10,malloc(100*sizeof(wchar_t)
(11,8)
(12,exit(-1)
(13,if (dataBuffer == NULL)
(14,while(1)
(15,break;)
(16,1)
(17,wchar_t)
(18,\'\\\\0\')
(19,dataBuffer - 8)
(20,1)
(21,dest)
(22,100*sizeof(wchar_t)
(23,sizeof(wchar_t)
(24,data)
(25,dest)
(26,'\\\\0')
(27,NULL)
(28,)
(29,* dataBuffer = (wchar_t *)
(30,dataBuffer)
(31,wcslen(dest)
(32,data)
(33,dest)
(34,'\\\\0')
(35,)
(36,'\\\\0')
(37,data = NULL)
(38,)
(39,)
(40,dataBuffer == NULL)
(41,dataBuffer)
(42,data)
(43,dest)
(44,wchar_t *)
(45,(wchar_t *)
(46,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^