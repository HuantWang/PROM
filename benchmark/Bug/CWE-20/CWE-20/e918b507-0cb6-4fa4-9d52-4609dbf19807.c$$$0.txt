-----label-----
1
-----code-----
static void badSink()
{
    char * data = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData;
    {
        char dest[50] = "";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/
        strcat(dest, data);
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
9,12
12,13
13,14
15,16
15,17
15,18
15,19
16,17
17,18
17,19
19,20
19,21
19,22
21,22
23,24
25,26
26,27
26,28
26,29
27,28
29,30
31,32
33,34
34,35
34,36
35,36
37,38
39,40
40,41
40,42
41,42
43,44
-----nextToken-----
2,4,8,10,11,14,18,20,22,24,28,30,32,36,38,42,44
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    char * data = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData;    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/        strcat(dest, data);        printLine(data);        free(data);    }}
static void
badSink()
badSink
{    char * data = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData;    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/        strcat(dest, data);        printLine(data);        free(data);    }}
char * data = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData;
char * data = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData;
char
* data = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData
*
data
= CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData
{        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/        strcat(dest, data);        printLine(data);        free(data);    }
char dest[50] = "";
char dest[50] = "";
char
dest[50] = ""
dest
[50]
50
= ""
""
strcat(dest, data);
strcat(dest, data)
strcat
strcat
dest
dest
data
data
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(1,4,0)
(9,13,0)
(4,17,0)
(15,2,0)
(5,17,0)
(0,4,0)
(16,0,0)
(12,5,0)
(3,5,0)
(2,4,0)
(7,12,0)
(8,2,0)
(11,17,0)
(2,12,0)
(2,5,0)
(13,4,0)
(10,4,0)
(13,5,0)
(14,12,0)
(0,5,0)
(13,9,1)
(2,12,1)
(15,8,1)
(2,15,1)
(0,4,1)
(2,4,1)
(12,14,1)
(9,0,1)
(0,16,1)
(8,12,1)
(14,7,1)
(4,10,1)
(16,2,1)
(13,4,1)
(10,1,1)
(7,4,1)
(6,13,1)
(0,4,2)
(13,4,2)
(2,12,2)
(2,4,2)
-----------------------------------
(0,printLine(data)
(1,data)
(2,strcat(dest, data)
(3,dest)
(4,* data = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData)
(5,)
(6,RET)
(7,dest)
(8,dest)
(9,data)
(10,CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData)
(11,data)
(12,dest[50] = "")
(13,free(data)
(14,"")
(15,data)
(16,data)
(17,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^