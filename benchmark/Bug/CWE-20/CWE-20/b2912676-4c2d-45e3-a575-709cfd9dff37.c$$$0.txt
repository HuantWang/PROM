-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_bad()
{
    unsigned int data;
    data = 0;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
35,36
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,39,41,45,47,51,53
-----computeFrom-----
12,13
12,14
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_bad(){    unsigned int data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_square_11_bad
{    unsigned int data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(25,16,0)
(18,21,0)
(7,10,0)
(16,8,0)
(23,19,0)
(8,16,0)
(8,4,0)
(16,6,0)
(4,10,0)
(19,21,0)
(14,18,0)
(9,4,0)
(15,11,0)
(19,4,0)
(0,10,0)
(21,19,0)
(20,4,0)
(2,16,0)
(17,10,0)
(11,12,0)
(18,11,0)
(22,19,0)
(13,8,0)
(1,21,0)
(21,11,0)
(18,14,1)
(13,2,1)
(1,24,1)
(19,4,1)
(8,4,1)
(5,24,1)
(2,25,1)
(21,19,1)
(16,8,1)
(22,23,1)
(24,3,1)
(5,18,1)
(9,20,1)
(14,21,1)
(3,4,1)
(25,3,1)
(8,13,1)
(19,22,1)
(24,16,1)
(18,21,1)
(4,9,1)
(23,1,1)
(8,3,2)
(19,4,2)
(1,24,2)
(18,24,2)
(19,24,2)
(25,3,2)
(14,24,2)
(21,24,2)
(2,3,2)
(16,8,2)
(8,4,2)
(18,21,2)
(13,3,2)
(22,24,2)
(23,24,2)
(21,19,2)
(16,3,2)
-----------------------------------
(0,data)
(1,result)
(2,"%u")
(3,globalReturnsTrue()
(4,data = 0)
(5,RET)
(6,)
(7,if(globalReturnsTrue()
(8,&data)
(9,0)
(10,)
(11,)
(12,)
(13,data)
(14,result)
(15,result)
(16,fscanf (stdin, "%u", &data)
(17,if(globalReturnsTrue()
(18,printUnsignedLine(result)
(19,data * data)
(20,data)
(21,result = data * data)
(22,data)
(23,data)
(24,globalReturnsTrue()
(25,stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^