-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_rand_square_18_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    goto source;
source:
    /* POTENTIAL FLAW: Set data to a random value */
    data = RAND32();
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
        int result = data * data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
22,23
24,25
25,26
27,28
29,30
29,31
31,32
31,33
32,33
33,34
33,35
35,36
35,37
37,38
38,39
38,40
39,40
41,42
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,15,17,19,23,26,28,30,34,36,40,42,46,48
-----computeFrom-----
12,13
12,14
21,22
21,23
38,39
38,40
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_rand_square_18_bad(){    int data;    /* Initialize data */    data = 0;    goto source;source:    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__int_rand_square_18_bad()
CWE190_Integer_Overflow__int_rand_square_18_bad
{    int data;    /* Initialize data */    data = 0;    goto source;source:    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();
source
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }
sink
{        /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */        int result = data * data;        printIntLine(result);    }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(1,5,0)
(6,5,0)
(9,2,0)
(20,5,0)
(5,6,0)
(5,3,0)
(0,18,0)
(21,16,0)
(17,21,0)
(3,10,0)
(13,16,0)
(8,2,0)
(14,6,0)
(3,2,0)
(18,2,0)
(19,2,0)
(10,3,0)
(4,2,0)
(7,2,0)
(6,16,0)
(11,18,0)
(12,3,0)
(21,6,0)
(16,2,0)
(21,6,1)
(3,10,1)
(5,3,1)
(6,5,1)
(17,6,1)
(14,8,1)
(20,14,1)
(5,1,1)
(9,18,1)
(1,20,1)
(12,9,1)
(18,0,1)
(10,12,1)
(0,11,1)
(21,17,1)
(8,3,1)
(15,21,1)
(5,3,2)
(3,10,2)
(21,6,2)
(6,5,2)
-----------------------------------
(0,0)
(1,data)
(2,)
(3,data = RAND32()
(4,data)
(5,data * data)
(6,result = data * data)
(7,sink:)
(8,goto sink;)
(9,goto source;)
(10,RAND32()
(11,data)
(12,data)
(13,result)
(14,result)
(15,RET)
(16,)
(17,result)
(18,data = 0)
(19,source:)
(20,data)
(21,printIntLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^