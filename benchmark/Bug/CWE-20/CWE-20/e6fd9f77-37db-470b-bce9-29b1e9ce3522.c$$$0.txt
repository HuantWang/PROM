-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_postinc_05_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticTrue)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
20,22
21,22
22,23
22,24
24,25
24,26
24,27
26,27
27,28
29,30
31,32
31,33
31,34
32,33
32,34
33,34
33,35
33,36
33,37
34,35
36,37
38,39
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
60,61
60,62
61,62
63,64
64,65
64,66
64,67
65,66
66,67
67,68
69,70
70,71
70,72
72,73
72,74
74,75
75,76
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,30,35,37,39,41,43,48,51,53,58,59,62,68,71,73,76,80,82
-----computeFrom-----
12,13
12,14
32,33
32,34
46,47
46,48
-----guardedBy-----
37,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_postinc_05_bad(){    int data;    /* Initialize data */    data = 0;    if(staticTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_postinc_05_bad()
CWE190_Integer_Overflow__int_fgets_postinc_05_bad
{    int data;    /* Initialize data */    data = 0;    if(staticTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
staticTrue
staticTrue
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(staticTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int result = data;            printIntLine(result);        }
data++;
data++
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(40,5,0)
(3,14,0)
(3,12,0)
(14,16,0)
(10,27,0)
(5,35,0)
(21,12,0)
(15,39,0)
(25,12,0)
(31,16,0)
(7,14,0)
(21,14,0)
(8,21,0)
(27,15,0)
(3,35,0)
(19,33,0)
(0,16,0)
(12,23,0)
(5,21,0)
(36,19,0)
(35,17,0)
(37,26,0)
(26,9,0)
(21,35,0)
(12,20,0)
(33,19,0)
(4,35,0)
(20,27,0)
(29,3,0)
(6,21,0)
(24,15,0)
(11,33,0)
(28,19,0)
(22,16,0)
(2,20,0)
(20,12,0)
(19,27,0)
(30,27,0)
(38,19,0)
(32,15,0)
(1,14,0)
(36,28,1)
(29,18,1)
(6,8,1)
(11,19,1)
(19,36,1)
(33,19,1)
(3,29,1)
(21,6,1)
(10,30,1)
(14,7,1)
(19,27,1)
(18,13,1)
(26,37,1)
(30,13,1)
(33,11,1)
(27,10,1)
(34,18,1)
(13,14,1)
(3,14,1)
(21,14,1)
(20,2,1)
(20,27,1)
(7,1,1)
(37,33,1)
(3,12,1)
(21,12,1)
(18,26,1)
(8,3,1)
(34,5,1)
(12,20,1)
(5,40,1)
(5,21,1)
(2,25,1)
(40,21,1)
(25,33,1)
(38,27,1)
(28,38,1)
(18,12,1)
(21,12,2)
(5,18,2)
(5,21,2)
(33,13,2)
(3,14,2)
(30,13,2)
(8,18,2)
(20,27,2)
(27,13,2)
(10,13,2)
(26,33,2)
(19,27,2)
(38,13,2)
(36,13,2)
(21,18,2)
(20,33,2)
(12,33,2)
(6,18,2)
(29,18,2)
(37,33,2)
(2,33,2)
(3,18,2)
(21,14,2)
(19,13,2)
(33,19,2)
(28,13,2)
(12,20,2)
(25,33,2)
(40,18,2)
(11,13,2)
(3,12,2)
-----------------------------------
(0,if(staticTrue)
(1,data)
(2,inputBuffer)
(3,data++)
(4,result)
(5,printIntLine(result)
(6,data)
(7,0)
(8,result)
(9,)
(10,"")
(11,NULL)
(12,data = atoi(inputBuffer)
(13,staticTrue)
(14,data = 0)
(15,)
(16,)
(17,)
(18,staticTrue)
(19,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(20,atoi(inputBuffer)
(21,result = data)
(22,data)
(23,)
(24,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(25,data)
(26,printLine("fgets()
(27,inputBuffer[CHAR_ARRAY_SIZE] = "")
(28,CHAR_ARRAY_SIZE)
(29,data)
(30,inputBuffer)
(31,if(staticTrue)
(32,inputBuffer)
(33,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(34,RET)
(35,)
(36,stdin)
(37,"fgets()
(38,inputBuffer)
(39,)
(40,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^