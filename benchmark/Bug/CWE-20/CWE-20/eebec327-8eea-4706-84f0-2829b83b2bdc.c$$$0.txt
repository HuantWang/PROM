-----label-----
1
-----code-----
void CWE416_Use_After_Free__malloc_free_long_13_bad()
{
    long * data;
    /* Initialize data */
    data = NULL;
    if(GLOBAL_CONST_FIVE==5)
    {
        data = (long *)malloc(100*sizeof(long));
        if (data == NULL) {exit(-1);}
        {
            size_t i;
            for(i = 0; i < 100; i++)
            {
                data[i] = 5L;
            }
        }
        /* POTENTIAL FLAW: Free data in the source - the bad sink attempts to use data */
        free(data);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use of data that may have been freed */
        printLongLine(data[0]);
        /* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
55,57
56,57
57,58
57,59
58,59
60,61
62,63
62,64
62,65
62,66
63,64
64,65
64,66
65,66
68,69
68,70
69,70
72,73
73,74
75,76
76,77
77,78
77,79
78,79
78,80
79,80
81,82
84,85
85,86
85,87
86,87
88,89
90,91
90,92
91,92
91,93
92,93
95,96
96,97
97,98
97,99
98,99
100,101
100,102
101,102
-----nextToken-----
2,4,8,10,11,15,17,21,22,27,30,32,35,37,40,41,45,47,52,54,59,61,66,67,70,71,74,80,82,83,87,89,93,94,99,102,103
-----computeFrom-----
13,14
13,15
19,20
19,21
25,26
25,27
36,37
36,38
43,44
43,45
64,65
64,66
68,69
68,70
77,78
77,79
91,92
91,93
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE416_Use_After_Free__malloc_free_long_13_bad(){    long * data;    /* Initialize data */    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        data = (long *)malloc(100*sizeof(long));        if (data == NULL) {exit(-1);}        {            size_t i;            for(i = 0; i < 100; i++)            {                data[i] = 5L;            }        }        /* POTENTIAL FLAW: Free data in the source - the bad sink attempts to use data */        free(data);    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use of data that may have been freed */        printLongLine(data[0]);        /* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */    }}
void
CWE416_Use_After_Free__malloc_free_long_13_bad()
CWE416_Use_After_Free__malloc_free_long_13_bad
{    long * data;    /* Initialize data */    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        data = (long *)malloc(100*sizeof(long));        if (data == NULL) {exit(-1);}        {            size_t i;            for(i = 0; i < 100; i++)            {                data[i] = 5L;            }        }        /* POTENTIAL FLAW: Free data in the source - the bad sink attempts to use data */        free(data);    }    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use of data that may have been freed */        printLongLine(data[0]);        /* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */    }}
long * data;
long * data;
long
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(GLOBAL_CONST_FIVE==5)    {        data = (long *)malloc(100*sizeof(long));        if (data == NULL) {exit(-1);}        {            size_t i;            for(i = 0; i < 100; i++)            {                data[i] = 5L;            }        }        /* POTENTIAL FLAW: Free data in the source - the bad sink attempts to use data */        free(data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        data = (long *)malloc(100*sizeof(long));        if (data == NULL) {exit(-1);}        {            size_t i;            for(i = 0; i < 100; i++)            {                data[i] = 5L;            }        }        /* POTENTIAL FLAW: Free data in the source - the bad sink attempts to use data */        free(data);    }
data = (long *)malloc(100*sizeof(long));
data = (long *)malloc(100*sizeof(long))
data
data
(long *)malloc(100*sizeof(long))
long *
long
*
*
malloc(100*sizeof(long))
malloc
malloc
100*sizeof(long)
100
sizeof(long)
long
long

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
{            size_t i;            for(i = 0; i < 100; i++)            {                data[i] = 5L;            }        }
size_t i;
size_t i;
size_t
size_t
i
i
for(i = 0; i < 100; i++)            {                data[i] = 5L;            }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{                data[i] = 5L;            }
data[i] = 5L;
data[i] = 5L
data[i]
data
data
i
i
5L
free(data);
free(data)
free
free
data
data
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use of data that may have been freed */        printLongLine(data[0]);        /* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use of data that may have been freed */        printLongLine(data[0]);        /* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */    }
printLongLine(data[0]);
printLongLine(data[0])
printLongLine
printLongLine
data[0]
data
data
0
-----joern-----
(37,46,0)
(26,22,0)
(37,38,0)
(30,42,0)
(43,47,0)
(8,19,0)
(21,46,0)
(8,24,0)
(28,33,0)
(19,22,0)
(49,16,0)
(17,38,0)
(29,1,0)
(24,8,0)
(22,49,0)
(55,37,0)
(45,35,0)
(33,46,0)
(7,38,0)
(12,40,0)
(36,14,0)
(15,27,0)
(45,11,0)
(46,8,0)
(25,6,0)
(47,20,0)
(29,33,0)
(2,37,0)
(49,22,0)
(53,33,0)
(54,7,0)
(39,50,0)
(9,23,0)
(32,42,0)
(16,49,0)
(48,27,0)
(22,19,0)
(13,35,0)
(4,50,0)
(40,31,0)
(46,31,0)
(37,47,0)
(6,46,0)
(33,23,0)
(44,38,0)
(35,45,0)
(10,17,0)
(19,8,0)
(34,14,0)
(33,29,0)
(18,23,0)
(6,31,0)
(41,42,0)
(3,17,0)
(23,42,0)
(8,46,0)
(0,40,0)
(14,46,0)
(5,31,0)
(52,38,0)
(14,46,1)
(15,48,1)
(4,6,1)
(51,50,1)
(44,52,1)
(9,18,1)
(4,27,1)
(47,43,1)
(23,9,1)
(35,13,1)
(3,38,1)
(49,26,1)
(7,38,1)
(33,46,1)
(8,19,1)
(46,8,1)
(14,34,1)
(29,33,1)
(55,17,1)
(37,46,1)
(39,4,1)
(7,54,1)
(13,14,1)
(54,47,1)
(51,29,1)
(48,23,1)
(27,15,1)
(6,25,1)
(52,45,1)
(33,23,1)
(22,49,1)
(45,35,1)
(33,28,1)
(28,53,1)
(53,50,1)
(6,46,1)
(34,36,1)
(10,3,1)
(8,24,1)
(2,55,1)
(37,2,1)
(37,38,1)
(17,38,1)
(50,39,1)
(19,22,1)
(26,21,1)
(3,7,1)
(17,10,1)
(36,46,1)
(25,17,1)
(38,44,1)
(21,27,1)
(49,16,1)
(52,14,1)
(43,37,1)
(29,50,2)
(10,27,2)
(22,27,2)
(2,17,2)
(8,24,2)
(43,17,2)
(44,27,2)
(45,35,2)
(53,50,2)
(17,17,2)
(49,16,2)
(37,46,2)
(35,14,2)
(7,38,2)
(19,22,2)
(37,17,2)
(46,27,2)
(3,17,2)
(10,17,2)
(36,27,2)
(6,46,2)
(8,19,2)
(33,23,2)
(54,17,2)
(45,14,2)
(22,49,2)
(26,27,2)
(13,14,2)
(3,27,2)
(21,27,2)
(28,50,2)
(14,27,2)
(52,27,2)
(6,27,2)
(17,27,2)
(34,27,2)
(49,27,2)
(25,27,2)
(37,38,2)
(17,38,2)
(47,17,2)
(55,17,2)
(38,27,2)
(46,8,2)
(29,33,2)
(8,27,2)
(33,46,2)
(33,50,2)
(7,17,2)
(19,27,2)
(14,46,2)
-----------------------------------
(0,i)
(1,)
(2,i)
(3,i)
(4,GLOBAL_CONST_FIVE)
(5,if (data == NULL)
(6,free(data)
(7,i++)
(8,(long *)
(9,NULL)
(10,100)
(11,)
(12,for(i = 0; i < 100; i++)
(13,1)
(14,data == NULL)
(15,5)
(16,long)
(17,i < 100)
(18,data)
(19,malloc(100*sizeof(long)
(20,)
(21,data)
(22,100*sizeof(long)
(23,data = NULL)
(24,long *)
(25,data)
(26,100)
(27,GLOBAL_CONST_FIVE==5)
(28,0)
(29,printLongLine(data[0])
(30,if(GLOBAL_CONST_FIVE==5)
(31,)
(32,if(GLOBAL_CONST_FIVE==5)
(33,data[0])
(34,NULL)
(35,-1)
(36,data)
(37,data[i])
(38,i = 0)
(39,5)
(40,)
(41,data)
(42,)
(43,5L)
(44,0)
(45,exit(-1)
(46,data = (long *)
(47,data[i] = 5L)
(48,GLOBAL_CONST_FIVE)
(49,sizeof(long)
(50,GLOBAL_CONST_FIVE==5)
(51,RET)
(52,i)
(53,data)
(54,i)
(55,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^