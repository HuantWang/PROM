-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_square_02_bad()
{
    unsigned int data;
    data = 0;
    if(1)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
21,22
23,24
25,26
25,27
27,28
28,29
28,30
29,30
30,31
30,32
32,33
32,34
34,35
35,36
35,37
36,37
38,39
40,41
41,42
41,43
42,43
44,45
-----nextToken-----
2,4,8,10,14,15,17,22,24,26,31,33,37,39,43,45
-----computeFrom-----
12,13
12,14
20,21
20,22
35,36
35,37
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_square_02_bad(){    unsigned int data;    data = 0;    if(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_square_02_bad()
CWE190_Integer_Overflow__unsigned_int_max_square_02_bad
{    unsigned int data;    data = 0;    if(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(1)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
1
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(1)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(2,12,0)
(18,1,0)
(21,5,0)
(8,16,0)
(13,5,0)
(13,2,0)
(4,2,0)
(14,1,0)
(5,16,0)
(1,9,0)
(7,9,0)
(20,16,0)
(15,2,0)
(11,5,0)
(0,13,0)
(18,9,0)
(13,1,0)
(23,16,0)
(19,13,0)
(1,13,0)
(9,22,0)
(10,18,0)
(1,13,1)
(18,1,1)
(6,5,1)
(5,11,1)
(0,14,1)
(18,10,1)
(3,2,1)
(19,0,1)
(13,2,1)
(3,6,1)
(11,21,1)
(17,18,1)
(17,3,1)
(2,4,1)
(10,1,1)
(13,5,1)
(4,15,1)
(15,6,1)
(14,3,1)
(13,19,1)
(4,6,2)
(18,1,2)
(0,3,2)
(14,3,2)
(18,3,2)
(13,2,2)
(1,3,2)
(13,3,2)
(19,3,2)
(1,13,2)
(13,5,2)
(15,6,2)
(2,6,2)
(10,3,2)
-----------------------------------
(0,data)
(1,result = data * data)
(2,data = UINT_MAX)
(3,1)
(4,UINT_MAX)
(5,data = 0)
(6,1)
(7,result)
(8,if(1)
(9,)
(10,result)
(11,0)
(12,)
(13,data * data)
(14,result)
(15,data)
(16,)
(17,RET)
(18,printUnsignedLine(result)
(19,data)
(20,data)
(21,data)
(22,)
(23,if(1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^