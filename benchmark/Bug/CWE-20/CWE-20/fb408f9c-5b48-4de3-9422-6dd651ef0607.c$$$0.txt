-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_21_bad()
{
    char * data;
    data = (char *)malloc(100*sizeof(char));
    if (data == NULL) {exit(-1);}
    badStatic = 1; /* true */
    data = badSource(data);
    {
        char dest[50] = "";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/
        strncat(dest, data, strlen(data));
        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
44,45
44,46
45,46
48,49
49,50
49,51
50,51
52,53
52,54
53,54
55,56
57,58
57,59
57,60
57,61
57,62
58,59
59,60
59,61
61,62
61,63
61,64
63,64
65,66
67,68
68,69
68,70
68,71
68,72
69,70
71,72
73,74
75,76
75,77
76,77
78,79
80,81
81,82
81,83
82,83
82,84
83,84
85,86
85,87
89,90
90,91
90,92
91,92
93,94
95,96
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,46,47,51,54,56,60,62,64,66,70,72,74,77,79,84,86,87,88,92,94,98,100
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
49,50
49,51
81,82
81,83
85,86
85,87
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_21_bad(){    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    badStatic = 1; /* true */    data = badSource(data);    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/        strncat(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_21_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_21_bad
{    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    badStatic = 1; /* true */    data = badSource(data);    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/        strncat(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
char * data;
char * data;
char
* data
*
data
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/        strncat(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }
char dest[50] = "";
char dest[50] = "";
char
dest[50] = ""
dest
[50]
50
= ""
""
strncat(dest, data, strlen(data));
strncat(dest, data, strlen(data))
strncat
strncat
dest
dest
data
data
strlen(data)
strlen
strlen
data
data
dest[50-1] = '\0';
dest[50-1] = '\0'
dest[50-1]
dest
dest
50-1
50
1
'\0'
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(35,22,0)
(46,17,0)
(21,9,0)
(38,20,0)
(45,41,0)
(5,18,0)
(5,47,0)
(0,23,0)
(11,33,0)
(20,11,0)
(25,19,0)
(32,3,0)
(11,19,0)
(41,23,0)
(22,19,0)
(13,12,0)
(34,0,0)
(12,17,0)
(44,0,0)
(39,24,0)
(31,9,0)
(26,5,0)
(2,10,0)
(18,5,0)
(3,35,0)
(17,30,0)
(24,39,0)
(23,19,0)
(41,45,0)
(40,23,0)
(43,3,0)
(3,22,0)
(15,30,0)
(16,33,0)
(29,11,0)
(28,19,0)
(3,10,0)
(30,22,0)
(1,39,0)
(17,35,0)
(10,3,0)
(23,41,0)
(47,5,0)
(42,47,0)
(24,7,0)
(3,11,0)
(41,18,0)
(8,29,0)
(27,11,0)
(17,12,0)
(33,23,0)
(36,35,0)
(4,35,0)
(6,22,0)
(20,22,0)
(10,11,0)
(14,12,0)
(29,22,0)
(18,41,0)
(33,11,0)
(9,19,0)
(9,21,1)
(10,2,1)
(17,35,1)
(3,35,1)
(23,41,1)
(21,31,1)
(12,14,1)
(30,15,1)
(4,36,1)
(8,20,1)
(2,43,1)
(16,27,1)
(35,4,1)
(36,11,1)
(41,45,1)
(1,0,1)
(13,46,1)
(42,26,1)
(38,30,1)
(27,9,1)
(47,42,1)
(17,12,1)
(11,33,1)
(20,11,1)
(46,3,1)
(3,11,1)
(3,10,1)
(20,38,1)
(44,34,1)
(33,16,1)
(43,32,1)
(31,24,1)
(39,1,1)
(15,17,1)
(31,0,1)
(32,35,1)
(34,23,1)
(5,47,1)
(41,18,1)
(14,13,1)
(0,44,1)
(10,11,1)
(29,11,1)
(29,8,1)
(24,39,1)
(37,29,1)
(18,5,1)
(33,23,1)
(26,40,1)
(0,23,1)
(17,35,2)
(29,11,2)
(24,0,2)
(3,11,2)
(33,23,2)
(3,35,2)
(17,12,2)
(10,11,2)
(5,47,2)
(41,18,2)
(20,11,2)
(0,23,2)
(24,39,2)
(3,10,2)
(18,5,2)
(39,0,2)
(1,0,2)
(23,41,2)
(41,45,2)
(11,33,2)
-----------------------------------
(0,data == NULL)
(1,1)
(2,data)
(3,strncat(dest, data, strlen(data)
(4,"")
(5,100*sizeof(char)
(6,dest)
(7,)
(8,data)
(9,badStatic = 1)
(10,strlen(data)
(11,data = badSource(data)
(12,50-1)
(13,50)
(14,1)
(15,\\\'\\\\0\\\')
(16,data)
(17,dest[50-1])
(18,malloc(100*sizeof(char)
(19,)
(20,printLine(data)
(21,1)
(22,)
(23,data = (char *)
(24,exit(-1)
(25,data)
(26,100)
(27,data)
(28,if (data == NULL)
(29,free(data)
(30,dest[50-1] = \\\'\\\\0\\\')
(31,badStatic)
(32,dest)
(33,badSource(data)
(34,data)
(35,dest[50] = "")
(36,dest)
(37,RET)
(38,data)
(39,-1)
(40,data)
(41,(char *)
(42,char)
(43,data)
(44,NULL)
(45,char *)
(46,dest)
(47,sizeof(char)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^