-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_09_bad()
{
    unsigned int data;
    data = 0;
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_09_bad(){    unsigned int data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_09_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_09_bad
{    unsigned int data;    data = 0;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(GLOBAL_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(2,12,0)
(25,17,0)
(0,1,0)
(1,4,0)
(23,12,0)
(21,18,0)
(6,18,0)
(14,21,0)
(14,1,0)
(13,17,0)
(16,14,0)
(11,17,0)
(9,12,0)
(10,21,0)
(8,21,0)
(12,21,0)
(15,18,0)
(3,13,0)
(7,18,0)
(17,22,0)
(12,1,0)
(17,13,0)
(23,1,0)
(24,23,0)
(13,21,0)
(14,21,1)
(2,9,1)
(23,12,1)
(14,16,1)
(16,5,1)
(17,13,1)
(12,21,1)
(19,5,1)
(8,10,1)
(13,21,1)
(20,21,1)
(5,17,1)
(25,20,1)
(19,23,1)
(9,14,1)
(3,11,1)
(21,8,1)
(13,3,1)
(12,2,1)
(11,25,1)
(23,24,1)
(24,12,1)
(5,20,1)
(12,5,2)
(16,5,2)
(23,12,2)
(3,20,2)
(13,20,2)
(2,5,2)
(14,5,2)
(13,21,2)
(23,5,2)
(24,5,2)
(9,5,2)
(12,21,2)
(17,13,2)
(14,21,2)
(11,20,2)
(17,20,2)
(25,20,2)
-----------------------------------
(0,result)
(1,)
(2,data)
(3,data)
(4,)
(5,GLOBAL_CONST_TRUE)
(6,if(GLOBAL_CONST_TRUE)
(7,data)
(8,0)
(9,result)
(10,data)
(11,"%u")
(12,result = data)
(13,&data)
(14,data++)
(15,if(GLOBAL_CONST_TRUE)
(16,data)
(17,fscanf (stdin, "%u", &data)
(18,)
(19,RET)
(20,GLOBAL_CONST_TRUE)
(21,data = 0)
(22,)
(23,printUnsignedLine(result)
(24,result)
(25,stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^