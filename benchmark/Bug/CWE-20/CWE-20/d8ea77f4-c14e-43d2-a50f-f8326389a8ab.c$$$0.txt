-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_badSink(char * data)
{
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than sizeof(data)-strlen(data) */
        strcat(data, source);
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
11,14
11,15
11,16
11,17
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
26,28
29,30
30,31
30,32
31,32
31,33
32,33
34,35
34,36
38,39
39,40
39,41
39,42
40,41
42,43
44,45
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,6,8,9,14,16,18,22,24,25,27,28,33,35,36,37,41,43,45,49,51,55,57
-----computeFrom-----
26,27
26,28
30,31
30,32
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_badSink(char * data){    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than sizeof(data)-strlen(data) */        strcat(data, source);        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_badSink(char * data)
CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_badSink
char * data
char
* data
*
data
{    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than sizeof(data)-strlen(data) */        strcat(data, source);        printLine(data);        free(data);    }}
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than sizeof(data)-strlen(data) */        strcat(data, source);        printLine(data);        free(data);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
strcat(data, source);
strcat(data, source)
strcat
strcat
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(10,11,0)
(25,3,0)
(23,11,0)
(2,14,0)
(9,3,0)
(13,9,0)
(18,2,0)
(17,14,0)
(10,14,0)
(5,21,0)
(19,6,0)
(15,19,0)
(2,6,0)
(8,17,0)
(14,4,0)
(20,2,0)
(11,10,0)
(16,14,0)
(19,14,0)
(17,6,0)
(7,10,0)
(3,9,0)
(1,10,0)
(12,11,0)
(9,21,0)
(21,14,0)
(24,3,0)
(7,1,1)
(8,2,1)
(19,15,1)
(20,21,1)
(17,8,1)
(24,25,1)
(3,24,1)
(12,23,1)
(13,10,1)
(0,19,1)
(21,5,1)
(17,6,1)
(19,6,1)
(10,11,1)
(2,6,1)
(15,17,1)
(11,12,1)
(25,13,1)
(5,9,1)
(2,18,1)
(23,7,1)
(18,20,1)
(9,3,1)
(10,11,2)
(17,6,2)
(19,6,2)
(9,3,2)
(2,6,2)
-----------------------------------
(0,RET)
(1,source)
(2,strcat(data, source)
(3,100-1)
(4,)
(5,'\\\\0')
(6,char * data)
(7,'C')
(8,data)
(9,source[100-1])
(10,memset(source, \'C\', 100-1)
(11,100-1)
(12,1)
(13,source)
(14,)
(15,data)
(16,source)
(17,printLine(data)
(18,source)
(19,free(data)
(20,data)
(21,source[100-1] = '\\\\0')
(22,memset(source, 'C', 100-1)
(23,100)
(24,1)
(25,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^