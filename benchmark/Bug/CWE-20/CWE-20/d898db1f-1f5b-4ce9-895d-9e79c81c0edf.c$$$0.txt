-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execl_11_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* execl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
83,85
83,86
83,87
83,88
83,89
84,85
86,87
88,89
90,91
92,93
94,95
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,85,87,89,91,93,95
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execl_11_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execl_11_bad()
CWE78_OS_Command_Injection__char_environment_execl_11_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(11,9,0)
(41,11,0)
(6,16,0)
(3,24,0)
(42,20,0)
(36,6,0)
(39,12,0)
(32,14,0)
(25,11,0)
(12,20,0)
(17,21,0)
(41,14,0)
(16,6,0)
(14,19,0)
(19,5,0)
(8,23,0)
(34,19,0)
(7,12,0)
(35,6,0)
(9,24,0)
(29,32,0)
(14,32,0)
(6,21,0)
(30,11,0)
(1,12,0)
(11,41,0)
(41,16,0)
(15,21,0)
(33,9,0)
(43,19,0)
(21,17,0)
(16,41,0)
(17,9,0)
(21,19,0)
(24,20,0)
(40,41,0)
(4,20,0)
(37,14,0)
(44,24,0)
(9,20,0)
(38,23,0)
(0,9,0)
(11,21,0)
(18,17,0)
(26,20,0)
(27,19,0)
(31,12,0)
(28,16,0)
(41,10,0)
(22,12,0)
(23,14,0)
(31,1,1)
(37,21,1)
(23,14,1)
(0,33,1)
(7,23,1)
(38,14,1)
(28,40,1)
(9,24,1)
(41,11,1)
(11,9,1)
(1,39,1)
(40,11,1)
(2,9,1)
(18,15,1)
(25,23,1)
(3,44,1)
(41,14,1)
(8,38,1)
(11,21,1)
(30,25,1)
(29,37,1)
(24,3,1)
(17,18,1)
(14,32,1)
(35,36,1)
(15,2,1)
(16,6,1)
(22,31,1)
(13,12,1)
(33,24,1)
(23,8,1)
(11,30,1)
(32,29,1)
(41,16,1)
(12,22,1)
(36,28,1)
(21,17,1)
(6,21,1)
(7,2,1)
(9,0,1)
(7,41,1)
(39,7,1)
(6,35,1)
(17,9,1)
(11,9,2)
(40,23,2)
(15,2,2)
(23,2,2)
(18,2,2)
(17,2,2)
(9,24,2)
(14,2,2)
(8,2,2)
(11,21,2)
(16,23,2)
(41,23,2)
(14,32,2)
(35,23,2)
(6,23,2)
(21,17,2)
(32,2,2)
(17,9,2)
(28,23,2)
(23,14,2)
(41,14,2)
(29,2,2)
(37,2,2)
(25,23,2)
(41,16,2)
(30,23,2)
(41,11,2)
(36,23,2)
(11,23,2)
(6,21,2)
(21,2,2)
(38,2,2)
(16,6,2)
-----------------------------------
(0,dataBuffer)
(1,COMMAND_ARG1)
(2,globalReturnsTrue()
(3,COMMAND_ARG2)
(4,dataBuffer)
(5,)
(6,dataLen-1)
(7,COMMAND_INT_PATH)
(8,NULL)
(9,data = dataBuffer)
(10,)
(11,data+dataLen)
(12,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(13,RET)
(14,* environment = GETENV(ENV_VARIABLE)
(15,dataLen)
(16,100-dataLen-1)
(17,strlen(data)
(18,data)
(19,)
(20,)
(21,dataLen = strlen(data)
(22,NULL)
(23,environment != NULL)
(24,dataBuffer[100] = COMMAND_ARG2)
(25,data)
(26,if(globalReturnsTrue()
(27,environment)
(28,100)
(29,ENV_VARIABLE)
(30,dataLen)
(31,COMMAND_ARG3)
(32,GETENV(ENV_VARIABLE)
(33,data)
(34,if (environment != NULL)
(35,1)
(36,dataLen)
(37,environment)
(38,environment)
(39,COMMAND_INT_PATH)
(40,environment)
(41,strncat(data+dataLen, environment, 100-dataLen-1)
(42,data)
(43,dataLen)
(44,dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^