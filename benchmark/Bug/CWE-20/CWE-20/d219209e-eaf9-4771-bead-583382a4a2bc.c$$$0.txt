-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_04_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(STATIC_CONST_TRUE)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* spawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
82,83
82,84
82,85
82,86
82,87
82,88
82,89
83,84
85,86
87,88
89,90
91,92
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,88,90,92,94,96
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_04_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32spawnl_04_bad()
CWE78_OS_Command_Injection__char_environment_w32spawnl_04_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(27,28,0)
(7,13,0)
(32,34,0)
(37,1,0)
(42,30,0)
(21,30,0)
(7,15,0)
(4,33,0)
(23,15,0)
(29,21,0)
(15,7,0)
(5,10,0)
(15,28,0)
(36,5,0)
(28,36,0)
(41,36,0)
(25,33,0)
(35,34,0)
(44,1,0)
(7,35,0)
(12,3,0)
(18,5,0)
(16,33,0)
(35,5,0)
(22,5,0)
(24,28,0)
(40,9,0)
(7,3,0)
(19,33,0)
(28,15,0)
(26,30,0)
(1,30,0)
(17,3,0)
(2,5,0)
(20,41,0)
(0,7,0)
(3,7,0)
(11,33,0)
(33,30,0)
(38,9,0)
(21,1,0)
(31,36,0)
(45,30,0)
(34,35,0)
(3,36,0)
(9,35,0)
(43,21,0)
(14,33,0)
(41,21,0)
(6,35,0)
(36,41,0)
(3,21,0)
(12,17,1)
(14,8,1)
(3,12,1)
(1,44,1)
(21,43,1)
(33,16,1)
(24,27,1)
(11,25,1)
(14,7,1)
(25,19,1)
(27,23,1)
(9,35,1)
(31,8,1)
(4,11,1)
(29,1,1)
(9,38,1)
(43,29,1)
(39,33,1)
(32,6,1)
(41,20,1)
(28,24,1)
(34,32,1)
(36,41,1)
(23,0,1)
(15,28,1)
(38,40,1)
(44,37,1)
(8,21,1)
(6,36,1)
(40,35,1)
(0,3,1)
(21,1,1)
(35,34,1)
(41,21,1)
(20,31,1)
(19,14,1)
(7,3,1)
(28,36,1)
(7,35,1)
(16,4,1)
(3,21,1)
(14,9,1)
(7,15,1)
(3,36,1)
(17,9,1)
(36,8,2)
(3,36,2)
(15,9,2)
(20,8,2)
(28,9,2)
(38,8,2)
(3,9,2)
(9,35,2)
(9,8,2)
(3,21,2)
(0,9,2)
(7,15,2)
(24,9,2)
(36,41,2)
(41,8,2)
(40,8,2)
(7,3,2)
(41,21,2)
(32,8,2)
(7,35,2)
(35,34,2)
(7,9,2)
(28,36,2)
(23,9,2)
(27,9,2)
(34,8,2)
(21,1,2)
(35,8,2)
(6,8,2)
(31,8,2)
(17,9,2)
(12,9,2)
(15,28,2)
-----------------------------------
(0,environment)
(1,dataBuffer[100] = COMMAND_ARG2)
(2,dataLen)
(3,data+dataLen)
(4,COMMAND_ARG3)
(5,)
(6,environment)
(7,strncat(data+dataLen, environment, 100-dataLen-1)
(8,STATIC_CONST_TRUE)
(9,environment != NULL)
(10,)
(11,COMMAND_ARG1)
(12,dataLen)
(13,)
(14,_P_WAIT)
(15,100-dataLen-1)
(16,NULL)
(17,data)
(18,if (environment != NULL)
(19,COMMAND_INT_PATH)
(20,data)
(21,data = dataBuffer)
(22,environment)
(23,100)
(24,1)
(25,COMMAND_INT_PATH)
(26,data)
(27,dataLen)
(28,dataLen-1)
(29,data)
(30,)
(31,dataLen)
(32,ENV_VARIABLE)
(33,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(34,GETENV(ENV_VARIABLE)
(35,* environment = GETENV(ENV_VARIABLE)
(36,dataLen = strlen(data)
(37,dataBuffer)
(38,NULL)
(39,RET)
(40,environment)
(41,strlen(data)
(42,if(STATIC_CONST_TRUE)
(43,dataBuffer)
(44,COMMAND_ARG2)
(45,dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^