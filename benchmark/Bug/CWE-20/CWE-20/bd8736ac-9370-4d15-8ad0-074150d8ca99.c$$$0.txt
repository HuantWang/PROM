-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44_bad()
{
    twoIntsStruct * data;
    /* define a function pointer */
    void (*funcPtr) (twoIntsStruct *) = badSink;
    data = NULL;
    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */
    data = (twoIntsStruct *)malloc(50*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
16,17
16,18
16,19
17,18
17,19
20,21
20,22
21,22
23,24
23,25
26,27
27,28
29,30
30,31
30,32
31,32
33,34
35,36
36,37
36,38
37,38
39,40
39,41
40,41
40,42
41,42
43,44
45,46
45,47
46,47
48,49
48,50
50,51
51,52
51,53
52,53
55,56
55,57
56,57
56,58
57,58
59,60
61,62
62,63
63,64
63,65
64,65
66,67
68,69
69,70
69,71
70,71
72,73
-----nextToken-----
2,4,9,11,12,15,18,19,22,24,25,28,32,34,38,42,44,47,49,53,54,58,60,65,67,71,73
-----computeFrom-----
30,31
30,32
36,37
36,38
48,49
48,50
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44_bad(){    twoIntsStruct * data;    /* define a function pointer */    void (*funcPtr) (twoIntsStruct *) = badSink;    data = NULL;    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (twoIntsStruct *)malloc(50*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* use the function pointer */    funcPtr(data);}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44_bad
{    twoIntsStruct * data;    /* define a function pointer */    void (*funcPtr) (twoIntsStruct *) = badSink;    data = NULL;    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (twoIntsStruct *)malloc(50*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* use the function pointer */    funcPtr(data);}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
void (*funcPtr) (twoIntsStruct *) = badSink;
void (*funcPtr) (twoIntsStruct *) = badSink;
void
(*funcPtr) (twoIntsStruct *) = badSink
*funcPtr
*
funcPtr
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*

= badSink
badSink
badSink
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)malloc(50*sizeof(twoIntsStruct));
data = (twoIntsStruct *)malloc(50*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)malloc(50*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
malloc(50*sizeof(twoIntsStruct))
malloc
malloc
50*sizeof(twoIntsStruct)
50
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(6,0,0)
(18,0,0)
(27,12,0)
(14,6,0)
(24,11,0)
(23,0,0)
(9,16,0)
(3,9,0)
(26,0,0)
(5,9,0)
(4,12,0)
(28,3,0)
(17,0,0)
(9,5,0)
(16,9,0)
(13,20,0)
(23,5,0)
(12,27,0)
(5,0,0)
(28,11,0)
(2,18,0)
(8,23,0)
(19,5,0)
(22,20,0)
(20,5,0)
(15,28,0)
(3,28,0)
(27,21,0)
(9,3,0)
(25,0,0)
(1,18,0)
(7,6,0)
(11,28,0)
(11,24,1)
(18,1,1)
(5,9,1)
(19,18,1)
(10,23,1)
(1,2,1)
(20,13,1)
(14,7,1)
(3,28,1)
(12,4,1)
(22,5,1)
(24,15,1)
(13,22,1)
(23,5,1)
(28,11,1)
(23,8,1)
(8,27,1)
(8,20,1)
(27,12,1)
(20,5,1)
(15,19,1)
(6,14,1)
(2,6,1)
(9,3,1)
(9,16,1)
(4,20,1)
(5,9,2)
(12,20,2)
(23,5,2)
(3,28,2)
(27,20,2)
(28,11,2)
(9,16,2)
(9,3,2)
(27,12,2)
(4,20,2)
(20,5,2)
-----------------------------------
(0,)
(1,NULL)
(2,data)
(3,malloc(50*sizeof(twoIntsStruct)
(4,1)
(5,data = (twoIntsStruct *)
(6,(*funcPtr)
(7,funcPtr)
(8,data)
(9,(twoIntsStruct *)
(10,RET)
(11,sizeof(twoIntsStruct)
(12,-1)
(13,NULL)
(14,badSink)
(15,50)
(16,twoIntsStruct *)
(17,data)
(18,data = NULL)
(19,data)
(20,data == NULL)
(21,)
(22,data)
(23,funcPtr(data)
(24,twoIntsStruct)
(25,if (data == NULL)
(26,funcPtr)
(27,exit(-1)
(28,50*sizeof(twoIntsStruct)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^