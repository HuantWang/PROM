-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01_bad()
{
    {
        charVoid structCharVoid;
        structCharVoid.voidSecond = (void *)SRC_STR;
        /* Print the initial block pointed to by structCharVoid.voidSecond */
        printLine((char *)structCharVoid.voidSecond);
        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */
        memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */
        printLine((char *)structCharVoid.charFirst);
        printLine((char *)structCharVoid.voidSecond);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
6,9
6,10
6,11
6,12
6,13
7,8
8,9
8,10
9,10
11,12
13,14
14,15
14,16
15,16
15,17
16,17
19,20
19,21
20,21
20,22
22,23
24,25
26,27
27,28
27,29
28,29
30,31
30,32
31,32
31,33
33,34
35,36
35,37
36,37
39,40
40,41
40,42
40,43
40,44
41,42
43,44
43,45
44,45
47,48
49,50
50,51
51,52
53,54
54,55
54,56
55,56
55,57
56,57
56,58
57,58
60,61
60,62
61,62
62,63
62,64
63,64
64,65
65,66
65,67
66,67
69,70
70,71
70,72
75,76
76,77
76,78
77,78
79,80
79,81
80,81
80,82
82,83
84,85
84,86
85,86
88,89
89,90
89,91
90,91
92,93
92,94
93,94
93,95
95,96
97,98
97,99
98,99
-----nextToken-----
2,4,10,12,17,18,21,23,25,29,32,34,37,38,42,45,46,48,52,58,59,67,68,71,72,73,74,78,81,83,86,87,91,94,96,99,100
-----computeFrom-----
14,15
14,16
54,55
54,56
60,61
60,62
62,63
62,64
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;UnaryExpression;BinaryExpression;UnaryExpression;UnaryExpression;FieldReference;IdExpression;Name;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01_bad(){    {        charVoid structCharVoid;        structCharVoid.voidSecond = (void *)SRC_STR;        /* Print the initial block pointed to by structCharVoid.voidSecond */        printLine((char *)structCharVoid.voidSecond);        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */        memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */        printLine((char *)structCharVoid.charFirst);        printLine((char *)structCharVoid.voidSecond);    }}
void
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01_bad()
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01_bad
{    {        charVoid structCharVoid;        structCharVoid.voidSecond = (void *)SRC_STR;        /* Print the initial block pointed to by structCharVoid.voidSecond */        printLine((char *)structCharVoid.voidSecond);        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */        memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */        printLine((char *)structCharVoid.charFirst);        printLine((char *)structCharVoid.voidSecond);    }}
{        charVoid structCharVoid;        structCharVoid.voidSecond = (void *)SRC_STR;        /* Print the initial block pointed to by structCharVoid.voidSecond */        printLine((char *)structCharVoid.voidSecond);        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */        memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */        printLine((char *)structCharVoid.charFirst);        printLine((char *)structCharVoid.voidSecond);    }
charVoid structCharVoid;
charVoid structCharVoid;
charVoid
charVoid
structCharVoid
structCharVoid
structCharVoid.voidSecond = (void *)SRC_STR;
structCharVoid.voidSecond = (void *)SRC_STR
structCharVoid.voidSecond
structCharVoid
structCharVoid
voidSecond
(void *)SRC_STR
void *
void
*
*
SRC_STR
SRC_STR
printLine((char *)structCharVoid.voidSecond);
printLine((char *)structCharVoid.voidSecond)
printLine
printLine
(char *)structCharVoid.voidSecond
char *
char
*
*
structCharVoid.voidSecond
structCharVoid
structCharVoid
voidSecond
memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid))
memmove
memmove
structCharVoid.charFirst
structCharVoid
structCharVoid
charFirst
SRC_STR
SRC_STR
sizeof(structCharVoid)
(structCharVoid)
structCharVoid
structCharVoid
structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0';
structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'
structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1]
structCharVoid.charFirst
structCharVoid
structCharVoid
charFirst
(sizeof(structCharVoid.charFirst)/sizeof(char))-1
(sizeof(structCharVoid.charFirst)/sizeof(char))
sizeof(structCharVoid.charFirst)/sizeof(char)
sizeof(structCharVoid.charFirst)
(structCharVoid.charFirst)
structCharVoid.charFirst
structCharVoid
structCharVoid
charFirst
sizeof(char)
char
char

1
'\0'
printLine((char *)structCharVoid.charFirst);
printLine((char *)structCharVoid.charFirst)
printLine
printLine
(char *)structCharVoid.charFirst
char *
char
*
*
structCharVoid.charFirst
structCharVoid
structCharVoid
charFirst
printLine((char *)structCharVoid.voidSecond);
printLine((char *)structCharVoid.voidSecond)
printLine
printLine
(char *)structCharVoid.voidSecond
char *
char
*
*
structCharVoid.voidSecond
structCharVoid
structCharVoid
voidSecond
-----joern-----
(32,19,0)
(16,40,0)
(22,42,0)
(28,33,0)
(15,44,0)
(1,35,0)
(7,11,0)
(49,36,0)
(13,38,0)
(45,46,0)
(31,36,0)
(29,4,0)
(37,21,0)
(17,35,0)
(25,6,0)
(8,44,0)
(22,13,0)
(11,43,0)
(42,35,0)
(36,31,0)
(40,46,0)
(3,40,0)
(34,43,0)
(21,31,0)
(40,35,0)
(40,16,0)
(11,7,0)
(26,21,0)
(24,33,0)
(13,22,0)
(14,6,0)
(10,30,0)
(4,27,0)
(9,44,0)
(12,13,0)
(27,4,0)
(36,7,0)
(8,1,0)
(35,39,0)
(6,42,0)
(44,42,0)
(13,12,0)
(41,22,0)
(48,49,0)
(11,30,0)
(38,35,0)
(33,4,0)
(43,11,0)
(5,16,0)
(42,32,0)
(38,13,0)
(36,49,0)
(7,36,0)
(30,35,0)
(0,16,0)
(31,21,0)
(4,29,0)
(19,32,0)
(1,8,0)
(4,33,0)
(29,35,0)
(50,32,0)
(2,8,0)
(23,43,0)
(47,22,0)
(44,8,0)
(46,40,0)
(8,2,0)
(20,7,0)
(32,42,0)
(40,46,1)
(37,26,1)
(29,4,1)
(6,25,1)
(13,22,1)
(36,31,1)
(48,31,1)
(44,9,1)
(32,50,1)
(33,24,1)
(25,14,1)
(38,13,1)
(11,7,1)
(10,11,1)
(7,36,1)
(50,6,1)
(4,27,1)
(34,40,1)
(11,43,1)
(4,33,1)
(47,42,1)
(8,2,1)
(16,0,1)
(42,32,1)
(5,38,1)
(24,28,1)
(44,42,1)
(43,23,1)
(20,36,1)
(21,37,1)
(49,48,1)
(28,30,1)
(13,12,1)
(31,21,1)
(8,44,1)
(45,3,1)
(36,49,1)
(26,43,1)
(18,1,1)
(22,41,1)
(15,29,1)
(1,8,1)
(41,47,1)
(40,16,1)
(9,15,1)
(3,16,1)
(30,10,1)
(23,34,1)
(46,45,1)
(0,5,1)
(32,19,1)
(22,42,1)
(7,20,1)
(44,42,2)
(4,27,2)
(13,22,2)
(42,32,2)
(7,36,2)
(29,4,2)
(22,42,2)
(31,21,2)
(13,12,2)
(40,46,2)
(38,13,2)
(32,19,2)
(8,44,2)
(1,8,2)
(40,16,2)
(11,7,2)
(4,33,2)
(11,43,2)
(36,49,2)
(36,31,2)
(8,2,2)
-----------------------------------
(0,charFirst)
(1,printLine((char *)
(2,char *)
(3,SRC_STR)
(4,(char *)
(5,structCharVoid)
(6,structCharVoid.voidSecond)
(7,(sizeof(structCharVoid.charFirst)
(8,(char *)
(9,voidSecond)
(10,'\\\\0')
(11,structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)
(12,char *)
(13,(char *)
(14,structCharVoid)
(15,structCharVoid)
(16,structCharVoid.charFirst)
(17,structCharVoid)
(18,RET)
(19,void *)
(20,1)
(21,structCharVoid.charFirst)
(22,structCharVoid.voidSecond)
(23,charFirst)
(24,charFirst)
(25,voidSecond)
(26,structCharVoid)
(27,char *)
(28,structCharVoid)
(29,printLine((char *)
(30,structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)
(31,sizeof(structCharVoid.charFirst)
(32,(void *)
(33,structCharVoid.charFirst)
(34,structCharVoid)
(35,)
(36,sizeof(structCharVoid.charFirst)
(37,charFirst)
(38,printLine((char *)
(39,)
(40,memmove(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid)
(41,voidSecond)
(42,structCharVoid.voidSecond = (void *)
(43,structCharVoid.charFirst)
(44,structCharVoid.voidSecond)
(45,structCharVoid)
(46,sizeof(structCharVoid)
(47,structCharVoid)
(48,char)
(49,sizeof(char)
(50,SRC_STR)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^