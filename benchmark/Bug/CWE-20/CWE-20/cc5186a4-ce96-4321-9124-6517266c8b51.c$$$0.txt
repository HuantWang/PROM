-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_13_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100];
    data = dataBuffer;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
        wmemset(data, L'A', 100-1); /* fill with L'A's */
        data[100-1] = L'\0'; /* null terminate */
    }
    {
        wchar_t dest[50] = L"";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        SNPRINTF(dest, wcslen(data), L"%s", data);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
26,27
26,28
27,28
30,31
30,32
31,32
32,33
32,34
32,35
32,36
33,34
35,36
38,39
38,40
41,42
42,43
42,44
43,44
43,45
44,45
46,47
46,48
50,51
50,52
50,53
51,52
52,53
52,54
54,55
54,56
54,57
56,57
58,59
60,61
61,62
61,63
61,64
61,65
61,66
62,63
64,65
66,67
66,68
67,68
69,70
72,73
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,8,10,11,14,16,18,22,24,28,29,34,36,37,39,40,45,47,48,49,53,55,57,59,63,65,68,70,71,73,77,79
-----computeFrom-----
20,21
20,22
26,27
26,28
38,39
38,40
42,43
42,44
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_13_bad(){    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_13_bad()
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_13_bad
{    wchar_t * data;    wchar_t dataBuffer[100];    data = dataBuffer;    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100];
wchar_t dataBuffer[100];
wchar_t
dataBuffer[100]
dataBuffer
[100]
100
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }
wmemset(data, L'A', 100-1);
wmemset(data, L'A', 100-1)
wmemset
wmemset
data
data
L'A'
100-1
100
1
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
{        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
SNPRINTF(dest, wcslen(data), L"%s", data);
SNPRINTF(dest, wcslen(data), L"%s", data)
SNPRINTF
SNPRINTF
dest
dest
wcslen(data)
wcslen
wcslen
data
data
L"%s"
data
data
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(6,9,0)
(15,9,0)
(8,16,0)
(10,3,0)
(0,9,0)
(16,9,0)
(13,11,0)
(2,9,0)
(11,15,0)
(5,17,0)
(7,17,0)
(11,16,0)
(1,16,0)
(4,15,0)
(7,16,1)
(11,13,1)
(1,8,1)
(5,7,1)
(16,1,1)
(4,10,1)
(10,17,1)
(4,17,1)
(14,11,1)
(13,4,1)
(11,16,1)
(17,5,1)
(11,16,2)
(10,17,2)
-----------------------------------
(0,if(GLOBAL_CONST_FIVE==5)
(1,dataBuffer)
(2,data)
(3,)
(4,"")
(5,5)
(6,dataBuffer)
(7,GLOBAL_CONST_FIVE)
(8,data)
(9,)
(10,\\'\\\\0\\')
(11,printWLine(data)
(12,\\\'\\\\0\\\')
(13,data)
(14,RET)
(15,)
(16,data = dataBuffer)
(17,GLOBAL_CONST_FIVE==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^