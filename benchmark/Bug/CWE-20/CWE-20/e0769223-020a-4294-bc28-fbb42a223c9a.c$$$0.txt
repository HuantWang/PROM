-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncat_21_bad()
{
    wchar_t * data;
    data = (wchar_t *)malloc(100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    badStatic = 1; /* true */
    data = badSource(data);
    {
        wchar_t dest[50] = L"";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/
        wcsncat(dest, data, wcslen(data));
        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */
        printWLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
44,45
44,46
45,46
48,49
49,50
49,51
50,51
52,53
52,54
53,54
55,56
57,58
57,59
57,60
57,61
57,62
58,59
59,60
59,61
61,62
61,63
61,64
63,64
65,66
67,68
68,69
68,70
68,71
68,72
69,70
71,72
73,74
75,76
75,77
76,77
78,79
80,81
81,82
81,83
82,83
82,84
83,84
85,86
85,87
89,90
90,91
90,92
91,92
93,94
95,96
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,46,47,51,54,56,60,62,64,66,70,72,74,77,79,84,86,87,88,92,94,98,100
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
49,50
49,51
81,82
81,83
85,86
85,87
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncat_21_bad(){    wchar_t * data;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    badStatic = 1; /* true */    data = badSource(data);    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/        wcsncat(dest, data, wcslen(data));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncat_21_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncat_21_bad
{    wchar_t * data;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    badStatic = 1; /* true */    data = badSource(data);    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/        wcsncat(dest, data, wcslen(data));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = (wchar_t *)malloc(100*sizeof(wchar_t));
data = (wchar_t *)malloc(100*sizeof(wchar_t))
data
data
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/        wcsncat(dest, data, wcslen(data));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
wcsncat(dest, data, wcslen(data));
wcsncat(dest, data, wcslen(data))
wcsncat
wcsncat
dest
dest
data
data
wcslen(data)
wcslen
wcslen
data
data
dest[50-1] = L'\0';
dest[50-1] = L'\0'
dest[50-1]
dest
dest
50-1
50
1
L'\0'
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(35,15,0)
(36,6,0)
(30,3,0)
(31,34,0)
(23,1,0)
(20,2,0)
(28,10,0)
(38,7,0)
(16,26,0)
(27,20,0)
(17,28,0)
(14,34,0)
(29,7,0)
(6,9,0)
(29,10,0)
(11,25,0)
(1,9,0)
(7,3,0)
(10,28,0)
(4,10,0)
(3,7,0)
(36,15,0)
(32,9,0)
(22,30,0)
(10,29,0)
(3,9,0)
(8,9,0)
(20,27,0)
(26,3,0)
(24,1,0)
(18,6,0)
(5,6,0)
(15,6,0)
(36,34,0)
(34,9,0)
(13,3,0)
(5,34,0)
(12,36,0)
(25,34,0)
(21,27,0)
(15,36,0)
(30,6,0)
(33,36,0)
(25,6,0)
(7,38,0)
(6,30,0)
(19,26,0)
(0,5,0)
(7,29,0)
(15,6,1)
(29,10,1)
(19,16,1)
(33,12,1)
(30,22,1)
(23,24,1)
(10,28,1)
(36,6,1)
(18,1,1)
(5,6,1)
(12,31,1)
(7,29,1)
(7,38,1)
(11,5,1)
(17,4,1)
(3,7,1)
(24,20,1)
(26,19,1)
(6,30,1)
(30,3,1)
(24,26,1)
(21,26,1)
(16,3,1)
(35,33,1)
(4,13,1)
(27,21,1)
(26,3,1)
(1,23,1)
(14,36,1)
(20,27,1)
(25,11,1)
(15,35,1)
(25,6,1)
(22,18,1)
(37,25,1)
(28,17,1)
(36,15,1)
(5,0,1)
(0,14,1)
(31,6,1)
(26,3,2)
(25,6,2)
(20,26,2)
(27,26,2)
(10,28,2)
(3,7,2)
(6,30,2)
(20,27,2)
(5,6,2)
(36,6,2)
(30,3,2)
(21,26,2)
(15,6,2)
(7,29,2)
(7,38,2)
(29,10,2)
(36,15,2)
-----------------------------------
(0,data)
(1,badStatic = 1)
(2,)
(3,data = (wchar_t *)
(4,100)
(5,printWLine(data)
(6,data = badSource(data)
(7,(wchar_t *)
(8,data)
(9,)
(10,100*sizeof(wchar_t)
(11,data)
(12,dest)
(13,data)
(14,\\\'\\\\0\\\')
(15,wcslen(data)
(16,data)
(17,wchar_t)
(18,data)
(19,NULL)
(20,exit(-1)
(21,1)
(22,data)
(23,1)
(24,badStatic)
(25,free(data)
(26,data == NULL)
(27,-1)
(28,sizeof(wchar_t)
(29,malloc(100*sizeof(wchar_t)
(30,badSource(data)
(31,"")
(32,if (data == NULL)
(33,data)
(34,)
(35,data)
(36,wcsncat(dest, data, wcslen(data)
(37,RET)
(38,wchar_t *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^