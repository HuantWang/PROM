-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_src_wchar_t_cat_34_bad()
{
    wchar_t * data;
    CWE122_Heap_Based_Buffer_Overflow__c_src_wchar_t_cat_34_unionType myUnion;
    data = (wchar_t *)malloc(100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
    wmemset(data, L'A', 100-1); /* fill with L'A's */
    data[100-1] = L'\0'; /* null terminate */
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        {
            wchar_t dest[50] = L"";
            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/
            wcscat(dest, data);
            printWLine(data);
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
69,70
69,71
70,71
70,72
71,72
74,75
76,77
76,78
77,78
78,79
78,80
80,81
80,82
80,83
83,84
84,85
84,86
85,86
88,89
88,90
88,91
88,92
89,90
90,91
90,92
92,93
92,94
92,95
94,95
96,97
98,99
99,100
99,101
99,102
100,101
102,103
104,105
106,107
107,108
107,109
108,109
110,111
112,113
113,114
113,115
114,115
116,117
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,39,41,46,48,52,54,55,57,58,63,65,66,67,72,73,75,79,81,82,86,87,91,93,95,97,101,103,105,109,111,115,117
-----computeFrom-----
19,20
19,21
30,31
30,32
37,38
37,39
56,57
56,58
60,61
60,62
64,65
64,66
69,70
69,71
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_src_wchar_t_cat_34_bad(){    wchar_t * data;    CWE122_Heap_Based_Buffer_Overflow__c_src_wchar_t_cat_34_unionType myUnion;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */    wmemset(data, L'A', 100-1); /* fill with L'A's */    data[100-1] = L'\0'; /* null terminate */    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t dest[50] = L"";            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/            wcscat(dest, data);            printWLine(data);            free(data);        }    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_src_wchar_t_cat_34_bad()
CWE122_Heap_Based_Buffer_Overflow__c_src_wchar_t_cat_34_bad
{    wchar_t * data;    CWE122_Heap_Based_Buffer_Overflow__c_src_wchar_t_cat_34_unionType myUnion;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */    wmemset(data, L'A', 100-1); /* fill with L'A's */    data[100-1] = L'\0'; /* null terminate */    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t dest[50] = L"";            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/            wcscat(dest, data);            printWLine(data);            free(data);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE122_Heap_Based_Buffer_Overflow__c_src_wchar_t_cat_34_unionType myUnion;
CWE122_Heap_Based_Buffer_Overflow__c_src_wchar_t_cat_34_unionType myUnion;
CWE122_Heap_Based_Buffer_Overflow__c_src_wchar_t_cat_34_unionType
CWE122_Heap_Based_Buffer_Overflow__c_src_wchar_t_cat_34_unionType
myUnion
myUnion
data = (wchar_t *)malloc(100*sizeof(wchar_t));
data = (wchar_t *)malloc(100*sizeof(wchar_t))
data
data
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(data, L'A', 100-1);
wmemset(data, L'A', 100-1)
wmemset
wmemset
data
data
L'A'
100-1
100
1
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        {            wchar_t dest[50] = L"";            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/            wcscat(dest, data);            printWLine(data);            free(data);        }    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            wchar_t dest[50] = L"";            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-wcslen(dest)*/            wcscat(dest, data);            printWLine(data);            free(data);        }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
wcscat(dest, data);
wcscat(dest, data)
wcscat
wcscat
dest
dest
data
data
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(36,21,0)
(34,19,0)
(42,19,0)
(10,21,0)
(27,25,0)
(37,21,0)
(20,16,0)
(2,25,0)
(17,32,0)
(26,16,0)
(29,27,0)
(26,37,0)
(29,34,0)
(33,7,0)
(39,25,0)
(0,26,0)
(6,26,0)
(32,25,0)
(4,27,0)
(5,24,0)
(12,34,0)
(23,2,0)
(34,29,0)
(19,34,0)
(8,11,0)
(27,29,0)
(3,17,0)
(7,30,0)
(0,30,0)
(25,21,0)
(11,8,0)
(7,26,0)
(16,26,0)
(31,17,0)
(40,32,0)
(25,27,0)
(9,2,0)
(27,4,0)
(18,0,0)
(1,8,0)
(41,37,0)
(11,22,0)
(15,16,0)
(32,21,0)
(28,21,0)
(24,30,0)
(14,30,0)
(13,21,0)
(38,0,0)
(30,37,0)
(24,26,0)
(9,25,1)
(23,9,1)
(2,23,1)
(38,14,1)
(27,29,1)
(5,7,1)
(6,32,1)
(24,26,1)
(25,27,1)
(35,24,1)
(16,20,1)
(32,25,1)
(28,2,1)
(29,34,1)
(20,15,1)
(28,11,1)
(33,0,1)
(12,39,1)
(11,8,1)
(26,16,1)
(14,26,1)
(1,2,1)
(31,28,1)
(7,33,1)
(0,18,1)
(2,25,1)
(32,40,1)
(0,26,1)
(24,5,1)
(15,6,1)
(7,26,1)
(27,4,1)
(18,38,1)
(19,42,1)
(42,12,1)
(17,3,1)
(40,17,1)
(3,31,1)
(8,1,1)
(34,19,1)
(27,29,2)
(1,2,2)
(11,2,2)
(27,4,2)
(29,34,2)
(34,19,2)
(11,8,2)
(2,25,2)
(32,25,2)
(25,27,2)
(26,16,2)
(8,2,2)
(0,26,2)
(24,26,2)
(7,26,2)
-----------------------------------
(0,wcscat(dest, data)
(1,1)
(2,data == NULL)
(3,unionFirst)
(4,wchar_t *)
(5,data)
(6,data)
(7,printWLine(data)
(8,-1)
(9,data)
(10,data)
(11,exit(-1)
(12,100)
(13,myUnion)
(14,"")
(15,myUnion)
(16,myUnion.unionSecond)
(17,myUnion.unionFirst)
(18,data)
(19,sizeof(wchar_t)
(20,unionSecond)
(21,)
(22,)
(23,NULL)
(24,free(data)
(25,data = (wchar_t *)
(26,* data = myUnion.unionSecond)
(27,(wchar_t *)
(28,\\\'\\\\0\\\')
(29,malloc(100*sizeof(wchar_t)
(30,)
(31,myUnion)
(32,myUnion.unionFirst = data)
(33,data)
(34,100*sizeof(wchar_t)
(35,RET)
(36,if (data == NULL)
(37,)
(38,dest)
(39,data)
(40,data)
(41,data)
(42,wchar_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^