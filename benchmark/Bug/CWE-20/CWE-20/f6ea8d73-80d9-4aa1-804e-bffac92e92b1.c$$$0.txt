-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE135_03_bad()
{
    void * data;
    data = NULL;
    if(5==5)
    {
        /* POTENTIAL FLAW: Set data to point to a wide string */
        data = (void *)WIDE_STRING;
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */
            size_t dataLen = strlen((char *)data);
            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
            (void)wcscpy(dest, data);
            printLine((char *)dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
22,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
30,31
32,33
34,35
34,36
35,36
35,37
38,39
39,40
39,41
39,42
39,43
40,41
41,42
41,43
42,43
44,45
44,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
51,53
53,54
55,56
57,58
58,59
58,60
60,61
60,62
60,63
63,64
64,65
64,66
65,66
65,67
67,68
69,70
69,71
70,71
72,73
72,74
73,74
74,75
74,76
75,76
78,79
79,80
79,81
82,83
83,84
83,85
84,85
84,86
87,88
87,89
87,90
88,89
90,91
92,93
94,95
95,96
95,97
96,97
98,99
98,100
99,100
99,101
101,102
103,104
-----nextToken-----
2,4,8,10,11,15,17,20,21,26,29,31,33,36,37,43,45,49,52,54,56,59,61,62,66,68,71,76,77,80,81,85,86,89,91,93,97,100,102,104
-----computeFrom-----
13,14
13,15
19,20
19,21
24,25
24,26
35,36
35,37
72,73
72,74
74,75
74,76
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE135_03_bad(){    void * data;    data = NULL;    if(5==5)    {        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)WIDE_STRING;    }    if(5==5)    {        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE135_03_bad()
CWE121_Stack_Based_Buffer_Overflow__CWE135_03_bad
{    void * data;    data = NULL;    if(5==5)    {        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)WIDE_STRING;    }    if(5==5)    {        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }}
void * data;
void * data;
void
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(5==5)    {        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)WIDE_STRING;    }
5==5
5
5
{        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)WIDE_STRING;    }
data = (void *)WIDE_STRING;
data = (void *)WIDE_STRING
data
data
(void *)WIDE_STRING
void *
void
*
*
WIDE_STRING
WIDE_STRING
if(5==5)    {        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }    }
{            /* POTENTIAL FLAW: treating pointer as a char* when it may point to a wide string */            size_t dataLen = strlen((char *)data);            void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));            (void)wcscpy(dest, data);            printLine((char *)dest);        }
size_t dataLen = strlen((char *)data);
size_t dataLen = strlen((char *)data);
size_t
size_t
dataLen = strlen((char *)data)
dataLen
= strlen((char *)data)
strlen((char *)data)
strlen
strlen
(char *)data
char *
char
*
*
data
data
void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
void * dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t));
void
* dest = (void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
*
dest
= (void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
(void *)ALLOCA((dataLen+1) * sizeof(wchar_t))
void *
void
*
*
ALLOCA((dataLen+1) * sizeof(wchar_t))
ALLOCA
ALLOCA
(dataLen+1) * sizeof(wchar_t)
(dataLen+1)
dataLen+1
dataLen
dataLen
1
sizeof(wchar_t)
wchar_t
wchar_t

(void)wcscpy(dest, data);
(void)wcscpy(dest, data)
void
void

wcscpy(dest, data)
wcscpy
wcscpy
dest
dest
data
data
printLine((char *)dest);
printLine((char *)dest)
printLine
printLine
(char *)dest
char *
char
*
*
dest
dest
-----joern-----
(9,12,0)
(32,2,0)
(8,1,0)
(41,36,0)
(29,43,0)
(30,32,0)
(1,12,0)
(47,5,0)
(27,35,0)
(20,29,0)
(39,5,0)
(48,2,0)
(29,34,0)
(24,43,0)
(49,33,0)
(1,44,0)
(36,41,0)
(23,26,0)
(25,49,0)
(29,2,0)
(3,44,0)
(32,13,0)
(13,12,0)
(6,41,0)
(11,37,0)
(12,13,0)
(16,37,0)
(32,30,0)
(14,3,0)
(49,43,0)
(35,22,0)
(6,44,0)
(41,43,0)
(13,32,0)
(26,45,0)
(33,49,0)
(44,6,0)
(12,5,0)
(32,26,0)
(46,37,0)
(49,39,0)
(43,5,0)
(19,5,0)
(15,32,0)
(5,17,0)
(29,26,0)
(21,1,0)
(38,18,0)
(34,40,0)
(34,29,0)
(34,5,0)
(35,26,0)
(41,6,0)
(39,49,0)
(44,3,0)
(0,18,0)
(2,37,0)
(22,35,0)
(31,29,0)
(7,42,0)
(44,1,0)
(4,2,0)
(40,34,0)
(26,35,0)
(10,42,0)
(43,41,0)
(49,33,1)
(27,23,1)
(21,8,1)
(32,30,1)
(6,44,1)
(35,27,1)
(44,3,1)
(32,26,1)
(13,32,1)
(49,25,1)
(38,2,1)
(20,31,1)
(28,39,1)
(39,49,1)
(44,1,1)
(9,42,1)
(10,7,1)
(41,6,1)
(15,9,1)
(29,2,1)
(24,12,1)
(32,2,1)
(1,12,1)
(7,18,1)
(4,48,1)
(26,35,1)
(32,15,1)
(29,26,1)
(28,42,1)
(41,36,1)
(2,4,1)
(34,40,1)
(49,43,1)
(29,20,1)
(29,43,1)
(25,34,1)
(18,0,1)
(31,43,1)
(3,14,1)
(35,22,1)
(23,18,1)
(43,41,1)
(14,1,1)
(7,26,1)
(8,24,1)
(34,29,1)
(12,13,1)
(1,21,1)
(0,38,1)
(42,10,1)
(3,42,2)
(34,29,2)
(1,12,2)
(44,3,2)
(29,2,2)
(13,32,2)
(27,18,2)
(35,22,2)
(49,33,2)
(34,40,2)
(29,26,2)
(13,42,2)
(9,42,2)
(26,18,2)
(32,42,2)
(1,42,2)
(39,49,2)
(20,42,2)
(43,41,2)
(15,42,2)
(32,30,2)
(44,1,2)
(14,42,2)
(43,42,2)
(41,36,2)
(21,42,2)
(31,42,2)
(49,43,2)
(6,42,2)
(29,42,2)
(39,42,2)
(32,2,2)
(25,42,2)
(12,42,2)
(6,44,2)
(35,18,2)
(29,43,2)
(12,13,2)
(32,26,2)
(26,35,2)
(34,42,2)
(49,42,2)
(23,18,2)
(44,42,2)
(41,42,2)
(24,42,2)
(41,6,2)
(8,42,2)
-----------------------------------
(0,5)
(1,dataLen+1)
(2,data = NULL)
(3,sizeof(wchar_t)
(4,NULL)
(5,)
(6,ALLOCA((dataLen+1)
(7,5)
(8,dataLen)
(9,dataLen)
(10,5)
(11,if(5==5)
(12,dataLen = strlen((char *)
(13,strlen((char *)
(14,wchar_t)
(15,data)
(16,if(5==5)
(17,)
(18,5==5)
(19,dataLen)
(20,data)
(21,1)
(22,void *)
(23,data)
(24,dest)
(25,dest)
(26,data = (void *)
(27,WIDE_STRING)
(28,RET)
(29,wcscpy(dest, data)
(30,char *)
(31,dest)
(32,(char *)
(33,char *)
(34,(void)
(35,(void *)
(36,void *)
(37,)
(38,5)
(39,printLine((char *)
(40,void)
(41,(void *)
(42,5==5)
(43,* dest = (void *)
(44,(dataLen+1)
(45,)
(46,data)
(47,dest)
(48,data)
(49,(char *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^