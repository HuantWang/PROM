-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_preinc_11_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalReturnsTrue())
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
21,23
22,23
23,24
23,25
25,26
25,27
25,28
27,28
28,29
30,31
32,33
32,34
32,35
33,34
33,35
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
53,54
55,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
63,64
65,66
66,67
66,68
66,69
67,68
68,69
69,70
71,72
72,73
72,74
74,75
74,76
76,77
77,78
79,80
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,8,10,14,15,19,24,26,29,31,36,38,40,42,44,49,52,54,59,60,64,70,73,75,78,82,84
-----computeFrom-----
12,13
12,14
33,34
33,35
47,48
47,49
-----guardedBy-----
38,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_preinc_11_bad(){    int data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_preinc_11_bad()
CWE190_Integer_Overflow__int_fgets_preinc_11_bad
{    int data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(31,34,0)
(2,16,0)
(19,33,0)
(33,11,0)
(4,14,0)
(1,24,0)
(16,40,0)
(32,25,0)
(13,3,0)
(37,24,0)
(21,32,0)
(26,23,0)
(7,4,0)
(34,23,0)
(3,16,0)
(4,3,0)
(28,3,0)
(27,20,0)
(29,24,0)
(23,33,0)
(35,38,0)
(27,33,0)
(20,39,0)
(30,20,0)
(10,14,0)
(14,4,0)
(15,4,0)
(5,4,0)
(38,24,0)
(13,20,0)
(23,38,0)
(23,20,0)
(20,13,0)
(18,16,0)
(27,38,0)
(22,27,0)
(6,13,0)
(17,3,0)
(0,38,0)
(36,23,0)
(34,33,0)
(13,6,1)
(17,28,1)
(4,3,1)
(21,14,1)
(23,38,1)
(5,15,1)
(23,20,1)
(38,0,1)
(12,34,1)
(10,4,1)
(14,10,1)
(8,32,1)
(0,35,1)
(27,20,1)
(7,5,1)
(30,14,1)
(15,3,1)
(23,36,1)
(14,4,1)
(27,22,1)
(27,38,1)
(4,7,1)
(34,31,1)
(28,9,1)
(34,23,1)
(20,13,1)
(36,26,1)
(32,21,1)
(6,30,1)
(13,3,1)
(3,17,1)
(12,8,1)
(8,9,1)
(8,20,1)
(9,38,1)
(26,27,1)
(22,8,1)
(31,23,1)
(20,14,2)
(5,9,2)
(22,8,2)
(3,9,2)
(14,4,2)
(17,9,2)
(30,14,2)
(27,8,2)
(34,23,2)
(27,20,2)
(28,9,2)
(10,9,2)
(36,8,2)
(13,14,2)
(34,8,2)
(32,14,2)
(4,9,2)
(31,8,2)
(6,14,2)
(26,8,2)
(7,9,2)
(23,20,2)
(23,38,2)
(15,9,2)
(23,8,2)
(4,3,2)
(14,9,2)
(21,14,2)
(20,13,2)
(13,3,2)
(27,38,2)
-----------------------------------
(0,0)
(1,data)
(2,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(3,inputBuffer[CHAR_ARRAY_SIZE] = "")
(4,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(5,CHAR_ARRAY_SIZE)
(6,inputBuffer)
(7,stdin)
(8,globalReturnsTrue()
(9,globalReturnsTrue()
(10,NULL)
(11,)
(12,RET)
(13,atoi(inputBuffer)
(14,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(15,inputBuffer)
(16,)
(17,"")
(18,inputBuffer)
(19,result)
(20,data = atoi(inputBuffer)
(21,"fgets()
(22,data)
(23,result = data)
(24,)
(25,)
(26,result)
(27,++data)
(28,inputBuffer)
(29,if(globalReturnsTrue()
(30,data)
(31,result)
(32,printLine("fgets()
(33,)
(34,printIntLine(result)
(35,data)
(36,data)
(37,if(globalReturnsTrue()
(38,data = 0)
(39,)
(40,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^