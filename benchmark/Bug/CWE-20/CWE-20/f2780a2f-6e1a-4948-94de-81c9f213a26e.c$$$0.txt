-----label-----
1
-----code-----
void CWE134_Uncontrolled_Format_String__wchar_t_environment_snprintf_44_bad()
{
    wchar_t * data;
    /* define a function pointer */
    void (*funcPtr) (wchar_t *) = badSink;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
30,31
30,32
30,33
32,33
34,35
36,37
37,38
37,39
38,39
40,41
42,43
42,44
42,45
43,44
44,45
44,46
45,46
47,48
47,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
58,59
58,60
58,61
61,62
62,63
62,64
63,64
65,66
67,68
67,69
68,69
68,70
69,70
71,72
73,74
74,75
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
85,86
85,87
86,87
86,88
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,29,31,33,35,39,41,46,48,52,54,57,59,60,64,66,70,72,77,80,82,84,87,89,90,94,96
-----computeFrom-----
37,38
37,39
68,69
68,70
78,79
78,80
85,86
85,87
86,87
86,88
-----guardedBy-----
70,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE134_Uncontrolled_Format_String__wchar_t_environment_snprintf_44_bad(){    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = badSink;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    /* use the function pointer */    funcPtr(data);}
void
CWE134_Uncontrolled_Format_String__wchar_t_environment_snprintf_44_bad()
CWE134_Uncontrolled_Format_String__wchar_t_environment_snprintf_44_bad
{    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = badSink;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    /* use the function pointer */    funcPtr(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
void (*funcPtr) (wchar_t *) = badSink;
void (*funcPtr) (wchar_t *) = badSink;
void
(*funcPtr) (wchar_t *) = badSink
*funcPtr
*
funcPtr
wchar_t *
wchar_t
*
*

= badSink
badSink
badSink
wchar_t dataBuffer[100] = L"";
wchar_t dataBuffer[100] = L"";
wchar_t
dataBuffer[100] = L""
dataBuffer
[100]
100
= L""
L""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(5,8,0)
(12,26,0)
(27,35,0)
(10,26,0)
(35,37,0)
(4,27,0)
(0,3,0)
(23,26,0)
(20,19,0)
(35,29,0)
(32,20,0)
(11,8,0)
(33,23,0)
(27,32,0)
(6,27,0)
(15,35,0)
(21,19,0)
(21,8,0)
(35,23,0)
(18,32,0)
(32,26,0)
(22,19,0)
(38,21,0)
(23,30,0)
(3,32,0)
(34,24,0)
(17,8,0)
(20,32,0)
(30,23,0)
(19,8,0)
(35,27,0)
(7,19,0)
(16,3,0)
(14,33,0)
(2,33,0)
(29,35,0)
(1,24,0)
(31,29,0)
(27,19,0)
(36,20,0)
(29,3,0)
(3,29,0)
(24,8,0)
(13,30,0)
(26,8,0)
(25,23,0)
(28,26,0)
(16,31,1)
(24,1,1)
(27,19,1)
(9,21,1)
(22,5,1)
(13,25,1)
(14,23,1)
(25,32,1)
(6,33,1)
(20,36,1)
(27,32,1)
(4,6,1)
(19,7,1)
(20,19,1)
(35,29,1)
(35,27,1)
(29,3,1)
(38,35,1)
(18,19,1)
(15,27,1)
(21,38,1)
(21,19,1)
(33,2,1)
(0,16,1)
(31,15,1)
(30,13,1)
(23,30,1)
(36,18,1)
(32,20,1)
(3,32,1)
(35,23,1)
(1,34,1)
(7,22,1)
(27,4,1)
(3,0,1)
(2,14,1)
(38,33,1)
(5,24,1)
(33,23,1)
(29,3,2)
(3,33,2)
(3,32,2)
(6,33,2)
(21,19,2)
(0,33,2)
(35,27,2)
(31,33,2)
(27,19,2)
(29,33,2)
(33,23,2)
(27,33,2)
(23,30,2)
(20,19,2)
(4,33,2)
(32,20,2)
(15,33,2)
(35,23,2)
(35,33,2)
(27,32,2)
(16,33,2)
(35,29,2)
-----------------------------------
(0,1)
(1,badSink)
(2,NULL)
(3,dataLen-1)
(4,dataLen)
(5,"")
(6,data)
(7,dataBuffer)
(8,)
(9,RET)
(10,dataLen)
(11,funcPtr)
(12,if (environment != NULL)
(13,ENV_VARIABLE)
(14,environment)
(15,environment)
(16,dataLen)
(17,data)
(18,dataLen)
(19,data = dataBuffer)
(20,wcslen(data)
(21,funcPtr(data)
(22,data)
(23,* environment = GETENV(ENV_VARIABLE)
(24,(*funcPtr)
(25,environment)
(26,)
(27,data+dataLen)
(28,environment)
(29,100-dataLen-1)
(30,GETENV(ENV_VARIABLE)
(31,100)
(32,dataLen = wcslen(data)
(33,environment != NULL)
(34,funcPtr)
(35,wcsncat(data+dataLen, environment, 100-dataLen-1)
(36,data)
(37,)
(38,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^