-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_16_bad()
{
    wchar_t * data;
    data = NULL;
    while(1)
    {
        {
            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (dataBuffer == NULL) {exit(-1);}
            wmemset(dataBuffer, L'A', 100-1);
            dataBuffer[100-1] = L'\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
        break;
    }
    {
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with 'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        wcscpy(data, source);
        printWLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
20,21
20,22
21,22
21,23
21,24
21,25
21,26
22,23
23,24
23,25
25,26
25,27
25,28
28,29
29,30
29,31
30,31
30,32
32,33
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
43,44
43,45
44,45
44,46
45,46
47,48
49,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
57,60
57,61
58,59
60,61
63,64
63,65
66,67
67,68
67,69
68,69
68,70
69,70
71,72
71,73
75,76
76,77
76,78
77,78
79,80
79,81
80,81
84,85
84,86
84,87
84,88
84,89
85,86
86,87
86,88
88,89
88,90
90,91
92,93
93,94
93,95
93,96
93,97
94,95
96,97
99,100
99,101
102,103
103,104
103,105
104,105
104,106
105,106
107,108
107,109
111,112
112,113
112,114
112,115
113,114
115,116
117,118
119,120
120,121
120,122
121,122
123,124
-----nextToken-----
2,4,8,10,11,15,17,19,24,26,27,31,33,36,38,41,42,46,48,53,55,59,61,62,64,65,70,72,73,74,78,81,82,83,87,89,91,95,97,98,100,101,106,108,109,110,114,116,118,122,124
-----computeFrom-----
13,14
13,15
37,38
37,39
44,45
44,46
63,64
63,65
67,68
67,69
71,72
71,73
76,77
76,78
79,80
79,81
99,100
99,101
103,104
103,105
107,108
107,109
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_16_bad(){    wchar_t * data;    data = NULL;    while(1)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        break;    }    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        wcscpy(data, source);        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_16_bad()
CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_16_bad
{    wchar_t * data;    data = NULL;    while(1)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        break;    }    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        wcscpy(data, source);        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
while(1)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        break;    }
1
{        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }        break;    }
{            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBuffer, L'A', 100-1);
wmemset(dataBuffer, L'A', 100-1)
wmemset
wmemset
dataBuffer
dataBuffer
L'A'
100-1
100
1
dataBuffer[100-1] = L'\0';
dataBuffer[100-1] = L'\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
L'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
break;
{        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        wcscpy(data, source);        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
wcscpy(data, source);
wcscpy(data, source)
wcscpy
wcscpy
data
data
source
source
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(11,15,0)
(24,9,0)
(37,5,0)
(43,36,0)
(30,33,0)
(23,3,0)
(19,36,0)
(38,25,0)
(10,1,0)
(6,9,0)
(16,12,0)
(26,10,0)
(25,30,0)
(8,1,0)
(30,20,0)
(4,16,0)
(21,19,0)
(5,3,0)
(15,10,0)
(1,13,0)
(17,0,0)
(10,15,0)
(2,15,0)
(18,1,0)
(24,10,0)
(25,1,0)
(41,9,0)
(15,25,0)
(12,40,0)
(5,20,0)
(20,30,0)
(33,30,0)
(36,0,0)
(20,5,0)
(42,36,0)
(27,25,0)
(12,16,0)
(39,24,0)
(19,10,0)
(9,0,0)
(30,25,0)
(7,13,0)
(29,24,0)
(3,5,0)
(32,1,0)
(24,36,0)
(28,38,0)
(14,38,0)
(19,9,0)
(22,0,0)
(19,9,1)
(32,38,1)
(42,35,1)
(7,10,1)
(29,42,1)
(26,32,1)
(21,24,1)
(2,11,1)
(15,2,1)
(20,5,1)
(30,20,1)
(6,41,1)
(27,35,1)
(4,38,1)
(10,15,1)
(37,27,1)
(24,10,1)
(14,28,1)
(23,37,1)
(30,33,1)
(32,12,1)
(42,7,1)
(12,16,1)
(11,26,1)
(9,6,1)
(39,29,1)
(15,25,1)
(24,39,1)
(16,4,1)
(25,30,1)
(24,9,1)
(5,3,1)
(19,10,1)
(28,25,1)
(35,9,1)
(31,19,1)
(38,14,1)
(38,25,1)
(3,23,1)
(19,21,1)
(12,16,2)
(20,5,2)
(24,10,2)
(11,35,2)
(38,35,2)
(23,35,2)
(24,9,2)
(25,30,2)
(30,35,2)
(15,25,2)
(32,35,2)
(12,38,2)
(10,35,2)
(19,9,2)
(4,38,2)
(30,20,2)
(3,35,2)
(38,25,2)
(25,35,2)
(16,38,2)
(15,35,2)
(14,35,2)
(27,35,2)
(30,33,2)
(20,35,2)
(28,35,2)
(2,35,2)
(5,3,2)
(26,35,2)
(5,35,2)
(37,35,2)
(19,10,2)
(7,35,2)
(10,15,2)
-----------------------------------
(0,)
(1,)
(2,8)
(3,sizeof(wchar_t)
(4,1)
(5,100*sizeof(wchar_t)
(6,NULL)
(7,break;)
(8,dataBuffer)
(9,data = NULL)
(10,data = dataBuffer - 8)
(11,dataBuffer)
(12,exit(-1)
(13,)
(14,NULL)
(15,dataBuffer - 8)
(16,-1)
(17,data)
(18,if (dataBuffer == NULL)
(19,printWLine(data)
(20,malloc(100*sizeof(wchar_t)
(21,data)
(22,while(1)
(23,wchar_t)
(24,wcscpy(data, source)
(25,* dataBuffer = (wchar_t *)
(26,data)
(27,dataBuffer)
(28,dataBuffer)
(29,data)
(30,(wchar_t *)
(31,RET)
(32,'\\\\0')
(33,wchar_t *)
(34,\'\\\\0\')
(35,1)
(36,)
(37,100)
(38,dataBuffer == NULL)
(39,source)
(40,)
(41,data)
(42,'\\\\0')
(43,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^