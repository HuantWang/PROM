-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_system_08_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(staticReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
82,84
83,84
83,85
84,85
84,86
85,86
87,88
90,91
90,92
91,92
92,93
92,94
93,94
96,97
97,98
97,99
98,99
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,94,95,99,100
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
83,84
83,85
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_system_08_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_environment_system_08_bad()
CWE78_OS_Command_Injection__char_environment_system_08_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(23,16,0)
(2,4,0)
(42,44,0)
(38,42,0)
(36,45,0)
(9,0,0)
(0,5,0)
(37,33,0)
(25,38,0)
(1,36,0)
(26,5,0)
(43,33,0)
(42,35,0)
(33,45,0)
(10,4,0)
(32,48,0)
(44,3,0)
(19,16,0)
(5,31,0)
(40,38,0)
(44,42,0)
(19,18,0)
(0,24,0)
(45,5,0)
(17,3,0)
(28,10,0)
(20,2,0)
(34,19,0)
(14,16,0)
(8,48,0)
(3,0,0)
(47,42,0)
(16,32,0)
(11,3,0)
(22,5,0)
(7,18,0)
(42,45,0)
(38,16,0)
(42,38,0)
(18,19,0)
(30,48,0)
(13,48,0)
(3,44,0)
(16,48,0)
(6,32,0)
(24,0,0)
(45,36,0)
(24,16,0)
(46,44,0)
(29,24,0)
(27,5,0)
(21,45,0)
(38,0,0)
(15,32,0)
(39,48,0)
(24,16,1)
(25,40,1)
(44,3,1)
(42,44,1)
(37,43,1)
(34,33,1)
(23,32,1)
(45,36,1)
(14,23,1)
(20,18,1)
(38,16,1)
(11,17,1)
(34,41,1)
(12,18,1)
(18,7,1)
(7,19,1)
(2,20,1)
(38,25,1)
(16,32,1)
(29,9,1)
(19,34,1)
(28,2,1)
(46,47,1)
(33,37,1)
(38,0,1)
(3,11,1)
(32,15,1)
(42,45,1)
(12,10,1)
(41,16,1)
(21,0,1)
(3,0,1)
(1,21,1)
(17,46,1)
(18,19,1)
(0,24,1)
(24,29,1)
(47,38,1)
(34,42,1)
(9,41,1)
(15,6,1)
(43,45,1)
(33,45,1)
(42,38,1)
(36,1,1)
(10,28,1)
(16,14,1)
(40,33,1)
(19,16,1)
(47,33,2)
(33,41,2)
(42,33,2)
(42,38,2)
(21,41,2)
(0,24,2)
(42,44,2)
(44,33,2)
(33,45,2)
(46,33,2)
(11,33,2)
(44,3,2)
(24,41,2)
(38,16,2)
(19,16,2)
(0,41,2)
(9,41,2)
(10,18,2)
(28,18,2)
(40,33,2)
(24,16,2)
(20,18,2)
(45,41,2)
(36,41,2)
(25,33,2)
(16,32,2)
(42,45,2)
(37,41,2)
(38,33,2)
(3,33,2)
(1,41,2)
(17,33,2)
(29,41,2)
(43,41,2)
(38,0,2)
(18,19,2)
(45,36,2)
(3,0,2)
(2,18,2)
-----------------------------------
(0,dataLen = strlen(data)
(1,ENV_VARIABLE)
(2,printLine("command execution failed!")
(3,dataLen-1)
(4,)
(5,)
(6,data_buf)
(7,0)
(8,data_buf)
(9,dataLen)
(10,exit(1)
(11,1)
(12,RET)
(13,data)
(14,data_buf)
(15,FULL_COMMAND)
(16,data = data_buf)
(17,dataLen)
(18,SYSTEM(data)
(19,SYSTEM(data)
(20,"command execution failed!")
(21,environment)
(22,if (environment != NULL)
(23,data)
(24,strlen(data)
(25,dataLen)
(26,environment)
(27,dataLen)
(28,1)
(29,data)
(30,if(staticReturnsTrue()
(31,)
(32,data_buf[100] = FULL_COMMAND)
(33,environment != NULL)
(34,data)
(35,)
(36,GETENV(ENV_VARIABLE)
(37,NULL)
(38,data+dataLen)
(39,if (SYSTEM(data)
(40,data)
(41,staticReturnsTrue()
(42,strncat(data+dataLen, environment, 100-dataLen-1)
(43,environment)
(44,100-dataLen-1)
(45,* environment = GETENV(ENV_VARIABLE)
(46,100)
(47,environment)
(48,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^