-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61_bad()
{
    char * data;
    data = NULL;
    data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61b_badSource(data);
    {
        char source[10+1] = SRC_STRING;
        /* Copy length + 1 to include NUL terminator from source */
        /* POTENTIAL FLAW: data may not have enough space to hold source */
        memmove(data, source, (strlen(source) + 1) * sizeof(char));
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
28,29
29,30
29,31
31,32
31,33
31,34
33,34
34,35
34,36
37,38
38,39
40,41
41,42
41,43
41,44
41,45
42,43
44,45
46,47
48,49
48,50
49,50
50,51
50,52
51,52
51,53
52,53
54,55
57,58
58,59
58,60
61,62
62,63
62,64
63,64
65,66
67,68
68,69
68,70
69,70
71,72
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,30,32,35,36,39,43,45,47,53,55,56,59,60,64,66,70,72
-----computeFrom-----
13,14
13,15
19,20
19,21
34,35
34,36
48,49
48,50
50,51
50,52
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;BinaryExpression;LiteralExpression;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61_bad(){    char * data;    data = NULL;    data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61b_badSource(data);    {        char source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        memmove(data, source, (strlen(source) + 1) * sizeof(char));        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61_bad
{    char * data;    data = NULL;    data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61b_badSource(data);    {        char source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        memmove(data, source, (strlen(source) + 1) * sizeof(char));        printLine(data);        free(data);    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61b_badSource(data);
data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61b_badSource(data)
data
data
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61b_badSource(data)
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61b_badSource
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61b_badSource
data
data
{        char source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        memmove(data, source, (strlen(source) + 1) * sizeof(char));        printLine(data);        free(data);    }
char source[10+1] = SRC_STRING;
char source[10+1] = SRC_STRING;
char
source[10+1] = SRC_STRING
source
[10+1]
10+1
10
1
= SRC_STRING
SRC_STRING
SRC_STRING
memmove(data, source, (strlen(source) + 1) * sizeof(char));
memmove(data, source, (strlen(source) + 1) * sizeof(char))
memmove
memmove
data
data
source
source
(strlen(source) + 1) * sizeof(char)
(strlen(source) + 1)
strlen(source) + 1
strlen(source)
strlen
strlen
source
source
1
sizeof(char)
char
char

printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(5,11,0)
(22,8,0)
(18,16,0)
(21,6,0)
(27,23,0)
(26,10,0)
(11,21,0)
(1,12,0)
(7,12,0)
(20,17,0)
(28,17,0)
(4,28,0)
(23,28,0)
(23,6,0)
(0,4,0)
(6,16,0)
(8,28,0)
(5,23,0)
(16,17,0)
(13,21,0)
(21,11,0)
(8,16,0)
(2,15,0)
(5,10,0)
(3,6,0)
(23,5,0)
(4,12,0)
(24,6,0)
(23,16,0)
(19,28,0)
(11,5,0)
(28,4,0)
(10,5,0)
(25,23,0)
(15,28,0)
(15,16,0)
(9,11,0)
(12,17,0)
(1,7,1)
(23,5,1)
(26,11,1)
(23,28,1)
(24,28,1)
(5,11,1)
(21,6,1)
(4,0,1)
(14,15,1)
(23,6,1)
(25,27,1)
(13,25,1)
(6,3,1)
(0,19,1)
(19,12,1)
(11,21,1)
(27,6,1)
(2,8,1)
(22,23,1)
(5,10,1)
(10,26,1)
(4,12,1)
(28,4,1)
(8,22,1)
(9,21,1)
(11,9,1)
(12,1,1)
(15,28,1)
(21,13,1)
(8,28,1)
(15,2,1)
(3,24,1)
(8,28,2)
(4,12,2)
(23,6,2)
(28,4,2)
(15,28,2)
(23,28,2)
(23,5,2)
(11,21,2)
(5,11,2)
(5,10,2)
(21,6,2)
-----------------------------------
(0,data)
(1,NULL)
(2,data)
(3,SRC_STRING)
(4,CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61b_badSource(data)
(5,(strlen(source)
(6,source[10+1] = SRC_STRING)
(7,data)
(8,printLine(data)
(9,1)
(10,sizeof(char)
(11,strlen(source)
(12,data = NULL)
(13,source)
(14,RET)
(15,free(data)
(16,)
(17,)
(18,source)
(19,data)
(20,data)
(21,strlen(source)
(22,data)
(23,memmove(data, source, (strlen(source)
(24,source)
(25,source)
(26,char)
(27,data)
(28,data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_61b_badSource(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^