-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_44_bad()
{
    char * data;
    /* define a function pointer */
    void (*funcPtr) (char *) = badSink;
    data = (char *)malloc(100*sizeof(char));
    if (data == NULL) {exit(-1);}
    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
    memset(data, 'A', 100-1); /* fill with 'A's */
    data[100-1] = '\0'; /* null terminate */
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
31,33
32,33
32,34
34,35
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
59,62
59,63
60,61
62,63
65,66
65,67
68,69
69,70
69,71
70,71
70,72
71,72
73,74
73,75
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,30,33,35,38,40,43,44,48,50,55,57,61,63,64,66,67,72,74,75,76,80,82
-----computeFrom-----
28,29
28,30
39,40
39,41
46,47
46,48
65,66
65,67
69,70
69,71
73,74
73,75
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_44_bad(){    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = badSink;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */    memset(data, 'A', 100-1); /* fill with 'A's */    data[100-1] = '\0'; /* null terminate */    /* use the function pointer */    funcPtr(data);}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_44_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_44_bad
{    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = badSink;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */    memset(data, 'A', 100-1); /* fill with 'A's */    data[100-1] = '\0'; /* null terminate */    /* use the function pointer */    funcPtr(data);}
char * data;
char * data;
char
* data
*
data
void (*funcPtr) (char *) = badSink;
void (*funcPtr) (char *) = badSink;
void
(*funcPtr) (char *) = badSink
*funcPtr
*
funcPtr
char *
char
*
*

= badSink
badSink
badSink
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(data, 'A', 100-1);
memset(data, 'A', 100-1)
memset
memset
data
data
'A'
100-1
100
1
data[100-1] = '\0';
data[100-1] = '\0'
data[100-1]
data
data
100-1
100
1
'\0'
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(17,11,0)
(1,13,0)
(5,4,0)
(36,12,0)
(18,17,0)
(15,3,0)
(22,4,0)
(31,10,0)
(23,15,0)
(17,0,0)
(4,5,0)
(21,2,0)
(29,11,0)
(28,10,0)
(14,16,0)
(5,27,0)
(19,2,0)
(8,10,0)
(21,13,0)
(6,36,0)
(7,4,0)
(21,4,0)
(36,6,0)
(4,3,0)
(28,4,0)
(13,3,0)
(28,3,0)
(11,17,0)
(24,7,0)
(35,28,0)
(5,0,0)
(27,5,0)
(38,6,0)
(20,28,0)
(30,3,0)
(37,7,0)
(0,17,0)
(16,4,0)
(33,2,0)
(2,21,0)
(10,28,0)
(25,21,0)
(0,5,0)
(9,3,0)
(26,15,0)
(16,3,0)
(39,3,0)
(7,37,1)
(11,29,1)
(2,19,1)
(0,17,1)
(6,38,1)
(29,18,1)
(36,6,1)
(16,4,1)
(18,22,1)
(10,8,1)
(7,4,1)
(5,0,1)
(34,16,1)
(33,25,1)
(37,24,1)
(8,31,1)
(17,11,1)
(21,4,1)
(38,7,1)
(23,26,1)
(21,2,1)
(19,33,1)
(35,7,1)
(28,10,1)
(13,1,1)
(25,28,1)
(4,5,1)
(14,13,1)
(16,14,1)
(22,15,1)
(15,23,1)
(1,21,1)
(28,4,1)
(31,20,1)
(35,36,1)
(5,27,1)
(24,4,1)
(20,35,1)
(38,7,2)
(5,27,2)
(36,7,2)
(16,4,2)
(36,6,2)
(28,4,2)
(6,7,2)
(28,10,2)
(21,4,2)
(0,17,2)
(21,2,2)
(5,0,2)
(17,11,2)
(7,4,2)
(4,5,2)
-----------------------------------
(0,malloc(100*sizeof(char)
(1,'\\\\0')
(2,100-1)
(3,)
(4,data = (char *)
(5,(char *)
(6,-1)
(7,data == NULL)
(8,1)
(9,funcPtr)
(10,100-1)
(11,sizeof(char)
(12,)
(13,data[100-1] = '\\\\0')
(14,data)
(15,(*funcPtr)
(16,funcPtr(data)
(17,100*sizeof(char)
(18,100)
(19,1)
(20,'A')
(21,data[100-1])
(22,data)
(23,badSink)
(24,data)
(25,data)
(26,funcPtr)
(27,char *)
(28,memset(data, \'A\', 100-1)
(29,char)
(30,data)
(31,100)
(32,memset(data, 'A', 100-1)
(33,100)
(34,RET)
(35,data)
(36,exit(-1)
(37,NULL)
(38,1)
(39,if (data == NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^