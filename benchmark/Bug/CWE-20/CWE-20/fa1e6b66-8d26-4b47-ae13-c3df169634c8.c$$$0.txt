-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_execlp_53_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE78_OS_Command_Injection__char_file_execlp_53b_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,121
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_execlp_53_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_execlp_53b_badSink(data);}
void
CWE78_OS_Command_Injection__char_file_execlp_53_bad()
CWE78_OS_Command_Injection__char_file_execlp_53_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_execlp_53b_badSink(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE78_OS_Command_Injection__char_file_execlp_53b_badSink(data);
CWE78_OS_Command_Injection__char_file_execlp_53b_badSink(data)
CWE78_OS_Command_Injection__char_file_execlp_53b_badSink
CWE78_OS_Command_Injection__char_file_execlp_53b_badSink
data
data
-----joern-----
(3,33,0)
(19,40,0)
(56,20,0)
(23,4,0)
(18,27,0)
(33,0,0)
(7,0,0)
(9,0,0)
(39,2,0)
(35,2,0)
(28,2,0)
(49,8,0)
(40,1,0)
(2,27,0)
(6,24,0)
(14,28,0)
(51,28,0)
(2,0,0)
(20,40,0)
(38,8,0)
(30,21,0)
(16,27,0)
(52,43,0)
(48,45,0)
(25,50,0)
(41,1,0)
(50,28,0)
(26,33,0)
(42,22,0)
(8,40,0)
(55,22,0)
(7,15,0)
(37,20,0)
(11,15,0)
(9,27,0)
(28,40,0)
(50,25,0)
(31,9,0)
(54,40,0)
(7,27,0)
(32,54,0)
(54,21,0)
(28,14,0)
(43,27,0)
(53,22,0)
(0,22,0)
(40,8,0)
(27,24,0)
(22,46,0)
(5,24,0)
(15,4,0)
(28,50,0)
(27,46,0)
(33,3,0)
(47,7,0)
(10,3,0)
(2,28,0)
(50,45,0)
(0,9,0)
(43,46,0)
(29,33,0)
(24,46,0)
(45,50,0)
(17,46,0)
(57,46,0)
(45,0,0)
(34,14,0)
(12,7,0)
(44,23,0)
(13,45,0)
(36,0,0)
(2,27,1)
(45,0,1)
(56,40,1)
(2,35,1)
(28,40,1)
(52,54,1)
(14,34,1)
(39,20,1)
(13,2,1)
(50,45,1)
(52,20,1)
(38,19,1)
(50,25,1)
(49,38,1)
(45,48,1)
(15,11,1)
(0,9,1)
(54,32,1)
(10,33,1)
(43,52,1)
(40,8,1)
(54,40,1)
(48,13,1)
(6,5,1)
(47,12,1)
(24,6,1)
(12,23,1)
(28,2,1)
(52,3,1)
(18,24,1)
(35,39,1)
(28,50,1)
(9,27,1)
(9,31,1)
(26,0,1)
(7,47,1)
(23,44,1)
(43,27,1)
(58,43,1)
(37,56,1)
(32,14,1)
(44,14,1)
(7,0,1)
(20,40,1)
(19,3,1)
(8,49,1)
(3,33,1)
(16,18,1)
(33,29,1)
(29,26,1)
(7,27,1)
(51,50,1)
(34,28,1)
(11,7,1)
(28,51,1)
(2,0,1)
(33,0,1)
(31,36,1)
(36,27,1)
(27,16,1)
(14,28,1)
(32,15,1)
(3,10,1)
(20,37,1)
(27,24,1)
(54,20,2)
(2,0,2)
(56,3,2)
(50,45,2)
(51,20,2)
(15,14,2)
(50,25,2)
(9,27,2)
(47,14,2)
(35,20,2)
(43,27,2)
(13,20,2)
(28,2,2)
(32,20,2)
(8,3,2)
(54,40,2)
(45,20,2)
(28,40,2)
(45,0,2)
(2,27,2)
(28,20,2)
(37,3,2)
(3,33,2)
(33,0,2)
(19,3,2)
(0,9,2)
(20,40,2)
(12,14,2)
(28,50,2)
(7,0,2)
(11,14,2)
(23,14,2)
(2,20,2)
(27,24,2)
(38,3,2)
(48,20,2)
(7,14,2)
(7,27,2)
(14,28,2)
(39,20,2)
(20,3,2)
(44,14,2)
(49,3,2)
(40,8,2)
(40,3,2)
(34,20,2)
(14,20,2)
(50,20,2)
-----------------------------------
(0,dataLen = strlen(data)
(1,)
(2,data+dataLen)
(3,100-dataLen > 1)
(4,)
(5,dataBuffer)
(6,COMMAND_ARG2)
(7,data[dataLen])
(8,fopen(FILENAME, "r")
(9,strlen(data)
(10,1)
(11,\\\'\\\\0\\\')
(12,data)
(13,100)
(14,fgets(data+dataLen, (int)
(15,data[dataLen] = \\\'\\\\0\\\')
(16,dataBuffer)
(17,dataBuffer)
(18,data)
(19,pFile)
(20,pFile != NULL)
(21,)
(22,)
(23,printLine("fgets()
(24,dataBuffer[100] = COMMAND_ARG2)
(25,int)
(26,100)
(27,data = dataBuffer)
(28,fgets(data+dataLen, (int)
(29,dataLen)
(30,if (fgets(data+dataLen, (int)
(31,data)
(32,pFile)
(33,100-dataLen)
(34,NULL)
(35,dataLen)
(36,dataLen)
(37,NULL)
(38,FILENAME)
(39,data)
(40,pFile = fopen(FILENAME, "r")
(41,if (pFile != NULL)
(42,if (100-dataLen > 1)
(43,CWE78_OS_Command_Injection__char_file_execlp_53b_badSink(data)
(44,"fgets()
(45,100-dataLen)
(46,)
(47,dataLen)
(48,dataLen)
(49,"r")
(50,(int)
(51,pFile)
(52,data)
(53,pFile)
(54,fclose(pFile)
(55,dataLen)
(56,pFile)
(57,data)
(58,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^