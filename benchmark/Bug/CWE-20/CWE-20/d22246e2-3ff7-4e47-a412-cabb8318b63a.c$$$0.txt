-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_max_preinc_32_bad()
{
    short data;
    short *dataPtr1 = &data;
    short *dataPtr2 = &data;
    data = 0;
    {
        short data = *dataPtr1;
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = SHRT_MAX;
        *dataPtr1 = data;
    }
    {
        short data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
36,37
36,38
36,39
37,38
38,39
38,40
40,41
40,42
42,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
55,56
57,58
59,60
59,61
60,61
61,62
61,63
63,64
63,65
65,66
66,67
67,68
69,70
69,71
69,72
70,71
71,72
72,73
74,75
75,76
75,77
77,78
77,79
79,80
80,81
82,83
83,84
83,85
84,85
86,87
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,35,39,41,45,49,51,56,58,62,64,68,73,76,78,81,85,87
-----computeFrom-----
32,33
32,34
47,48
47,49
53,54
53,55
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_max_preinc_32_bad(){    short data;    short *dataPtr1 = &data;    short *dataPtr2 = &data;    data = 0;    {        short data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;        *dataPtr1 = data;    }    {        short data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_max_preinc_32_bad()
CWE190_Integer_Overflow__short_max_preinc_32_bad
{    short data;    short *dataPtr1 = &data;    short *dataPtr2 = &data;    data = 0;    {        short data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;        *dataPtr1 = data;    }    {        short data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
short *dataPtr1 = &data;
short *dataPtr1 = &data;
short
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
short *dataPtr2 = &data;
short *dataPtr2 = &data;
short
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = 0;
data = 0
data
data
0
{        short data = *dataPtr1;        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = SHRT_MAX;        *dataPtr1 = data;    }
short data = *dataPtr1;
short data = *dataPtr1;
short
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = SHRT_MAX;
data = SHRT_MAX
data
data
SHRT_MAX
SHRT_MAX
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        short data = *dataPtr2;        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }    }
short data = *dataPtr2;
short data = *dataPtr2;
short
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            short result = data;            printIntLine(result);        }
++data;
++data
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(38,22,0)
(36,10,0)
(41,16,0)
(22,38,0)
(8,38,0)
(26,9,0)
(25,28,0)
(39,32,0)
(4,16,0)
(31,24,0)
(9,16,0)
(34,25,0)
(32,9,0)
(42,16,0)
(7,40,0)
(21,26,0)
(23,10,0)
(2,40,0)
(3,42,0)
(5,16,0)
(6,42,0)
(27,36,0)
(0,41,0)
(12,22,0)
(7,32,0)
(28,25,0)
(38,24,0)
(42,6,0)
(30,28,0)
(13,41,0)
(37,26,0)
(37,42,0)
(15,40,0)
(24,16,0)
(17,30,0)
(14,28,0)
(40,32,0)
(26,37,0)
(10,24,0)
(30,36,0)
(43,10,0)
(19,26,0)
(40,26,0)
(35,16,0)
(21,32,0)
(11,7,0)
(1,21,0)
(22,28,0)
(20,37,0)
(18,9,0)
(36,24,0)
(28,16,0)
(29,6,0)
(2,21,1)
(20,19,1)
(43,23,1)
(17,10,1)
(34,14,1)
(33,7,1)
(36,27,1)
(19,36,1)
(22,12,1)
(13,42,1)
(10,43,1)
(36,10,1)
(6,29,1)
(37,42,1)
(26,37,1)
(27,30,1)
(41,0,1)
(25,34,1)
(40,15,1)
(38,22,1)
(21,1,1)
(15,2,1)
(42,6,1)
(30,17,1)
(11,40,1)
(12,8,1)
(28,25,1)
(40,26,1)
(8,41,1)
(37,20,1)
(22,28,1)
(3,28,1)
(1,26,1)
(29,3,1)
(30,28,1)
(0,13,1)
(7,11,1)
(23,38,1)
(7,40,1)
(21,26,1)
(21,26,2)
(26,37,2)
(38,22,2)
(36,10,2)
(40,26,2)
(28,25,2)
(42,6,2)
(37,42,2)
(7,40,2)
(22,28,2)
(30,28,2)
-----------------------------------
(0,0)
(1,data)
(2,result)
(3,dataPtr2)
(4,dataPtr2)
(5,data)
(6,&data)
(7,printIntLine(result)
(8,data)
(9,)
(10,data = SHRT_MAX)
(11,result)
(12,dataPtr1)
(13,data)
(14,dataPtr1)
(15,data)
(16,)
(17,dataPtr1)
(18,data)
(19,data)
(20,dataPtr2)
(21,++data)
(22,*dataPtr1)
(23,data)
(24,)
(25,&data)
(26,data = *dataPtr2)
(27,data)
(28,*dataPtr1 = &data)
(29,data)
(30,*dataPtr1)
(31,data)
(32,)
(33,RET)
(34,data)
(35,dataPtr1)
(36,*dataPtr1 = data)
(37,*dataPtr2)
(38,data = *dataPtr1)
(39,result)
(40,result = data)
(41,data = 0)
(42,*dataPtr2 = &data)
(43,SHRT_MAX)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^