-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_loop_11_bad()
{
    wchar_t * data;
    data = NULL;
    if(globalReturnsTrue())
    {
        {
            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (dataBuffer == NULL) {exit(-1);}
            wmemset(dataBuffer, L'A', 100-1);
            dataBuffer[100-1] = L'\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        size_t i;
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with 'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        for (i = 0; i < 100; i++)
        {
            data[i] = source[i];
        }
        /* Ensure the destination buffer is null terminated */
        data[100-1] = L'\0';
        printWLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
20,21
22,23
23,24
23,25
23,26
23,27
23,28
24,25
25,26
25,27
27,28
27,29
27,30
30,31
31,32
31,33
32,33
32,34
34,35
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
59,62
59,63
60,61
62,63
65,66
65,67
68,69
69,70
69,71
70,71
70,72
71,72
73,74
73,75
77,78
78,79
78,80
79,80
81,82
81,83
82,83
85,86
85,87
85,88
85,89
85,90
85,91
85,92
86,87
87,88
87,89
88,89
90,91
92,93
93,94
93,95
95,96
95,97
97,98
99,100
100,101
100,102
100,103
100,104
101,102
103,104
106,107
106,108
109,110
110,111
110,112
111,112
111,113
112,113
114,115
114,116
118,119
118,120
118,121
118,122
119,120
120,121
120,122
121,122
124,125
124,126
125,126
128,129
129,130
131,132
132,133
133,134
133,135
134,135
134,136
135,136
137,138
139,140
139,141
140,141
142,143
144,145
145,146
145,147
146,147
146,148
147,148
149,150
149,151
153,154
154,155
154,156
155,156
157,158
-----nextToken-----
2,4,8,10,11,15,17,21,26,28,29,33,35,38,40,43,44,48,50,55,57,61,63,64,66,67,72,74,75,76,80,83,84,89,91,94,96,98,102,104,105,107,108,113,115,116,117,122,123,126,127,130,136,138,141,143,148,150,151,152,156,158
-----computeFrom-----
13,14
13,15
39,40
39,41
46,47
46,48
65,66
65,67
69,70
69,71
73,74
73,75
78,79
78,80
81,82
81,83
106,107
106,108
110,111
110,112
114,115
114,116
120,121
120,122
124,125
124,126
133,134
133,135
145,146
145,147
149,150
149,151
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_loop_11_bad(){    wchar_t * data;    data = NULL;    if(globalReturnsTrue())    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = L'\0';        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_wchar_t_loop_11_bad()
CWE124_Buffer_Underwrite__malloc_wchar_t_loop_11_bad
{    wchar_t * data;    data = NULL;    if(globalReturnsTrue())    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = L'\0';        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(globalReturnsTrue())    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBuffer, L'A', 100-1);
wmemset(dataBuffer, L'A', 100-1)
wmemset
wmemset
dataBuffer
dataBuffer
L'A'
100-1
100
1
dataBuffer[100-1] = L'\0';
dataBuffer[100-1] = L'\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
L'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = L'\0';        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
size_t i;
size_t i;
size_t
size_t
i
i
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
for (i = 0; i < 100; i++)        {            data[i] = source[i];        }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{            data[i] = source[i];        }
data[i] = source[i];
data[i] = source[i]
data[i]
data
data
i
i
source[i]
source
source
i
i
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(29,11,0)
(34,2,0)
(36,49,0)
(24,9,0)
(43,22,0)
(22,43,0)
(36,13,0)
(54,21,0)
(10,37,0)
(14,9,0)
(39,46,0)
(13,21,0)
(2,50,0)
(58,9,0)
(42,55,0)
(55,39,0)
(2,34,0)
(36,39,0)
(38,9,0)
(20,36,0)
(3,22,0)
(39,55,0)
(16,49,0)
(55,49,0)
(50,17,0)
(9,21,0)
(27,13,0)
(15,36,0)
(5,11,0)
(56,28,0)
(28,56,0)
(51,37,0)
(4,21,0)
(22,2,0)
(47,51,0)
(40,56,0)
(0,55,0)
(10,34,0)
(34,33,0)
(35,50,0)
(24,13,0)
(44,50,0)
(41,7,0)
(30,9,0)
(37,10,0)
(48,7,0)
(45,49,0)
(52,24,0)
(7,2,0)
(34,10,0)
(37,51,0)
(24,43,0)
(25,49,0)
(33,34,0)
(36,43,0)
(43,50,0)
(11,49,0)
(8,9,0)
(6,2,0)
(23,13,0)
(32,50,0)
(1,22,0)
(19,43,0)
(28,57,0)
(18,37,0)
(12,16,0)
(37,51,1)
(26,24,1)
(5,29,1)
(56,40,1)
(36,20,1)
(34,10,1)
(52,14,1)
(36,49,1)
(25,45,1)
(32,28,1)
(30,43,1)
(48,41,1)
(49,25,1)
(24,13,1)
(3,1,1)
(43,22,1)
(45,30,1)
(32,7,1)
(36,13,1)
(7,2,1)
(14,11,1)
(22,3,1)
(36,43,1)
(31,13,1)
(28,56,1)
(51,47,1)
(11,5,1)
(30,31,1)
(55,49,1)
(18,6,1)
(39,55,1)
(29,49,1)
(1,19,1)
(23,27,1)
(13,23,1)
(42,0,1)
(6,31,1)
(40,7,1)
(2,34,1)
(16,49,1)
(47,18,1)
(11,49,1)
(22,2,1)
(29,16,1)
(55,42,1)
(20,15,1)
(34,33,1)
(10,37,1)
(15,11,1)
(7,48,1)
(24,43,1)
(41,2,1)
(0,36,1)
(16,12,1)
(12,39,1)
(19,32,1)
(24,52,1)
(47,31,2)
(36,11,2)
(2,34,2)
(12,11,2)
(28,7,2)
(6,31,2)
(2,31,2)
(16,11,2)
(19,31,2)
(41,31,2)
(37,51,2)
(34,33,2)
(24,13,2)
(55,11,2)
(28,56,2)
(1,31,2)
(39,55,2)
(39,11,2)
(37,31,2)
(10,31,2)
(34,31,2)
(22,31,2)
(32,31,2)
(0,11,2)
(3,31,2)
(43,31,2)
(11,49,2)
(22,2,2)
(5,11,2)
(20,11,2)
(43,22,2)
(10,37,2)
(11,11,2)
(18,31,2)
(29,11,2)
(36,13,2)
(34,10,2)
(40,7,2)
(7,31,2)
(42,11,2)
(48,31,2)
(36,43,2)
(51,31,2)
(7,2,2)
(16,49,2)
(55,49,2)
(15,11,2)
(36,49,2)
(56,7,2)
(24,43,2)
-----------------------------------
(0,source)
(1,dataBuffer)
(2,* dataBuffer = (wchar_t *)
(3,8)
(4,data)
(5,100)
(6,dataBuffer)
(7,dataBuffer == NULL)
(8,for (i = 0; i < 100; i++)
(9,)
(10,malloc(100*sizeof(wchar_t)
(11,i < 100)
(12,i)
(13,data = NULL)
(14,'\\\\0')
(15,data)
(16,i++)
(17,)
(18,100)
(19,data)
(20,i)
(21,)
(22,dataBuffer - 8)
(23,NULL)
(24,printWLine(data)
(25,0)
(26,RET)
(27,data)
(28,exit(-1)
(29,i)
(30,'\\\\0')
(31,globalReturnsTrue()
(32,'\\\\0')
(33,wchar_t *)
(34,(wchar_t *)
(35,if (dataBuffer == NULL)
(36,data[i])
(37,100*sizeof(wchar_t)
(38,i)
(39,data[i] = source[i])
(40,1)
(41,dataBuffer)
(42,i)
(43,data = dataBuffer - 8)
(44,dataBuffer)
(45,i)
(46,)
(47,wchar_t)
(48,NULL)
(49,i = 0)
(50,)
(51,sizeof(wchar_t)
(52,data)
(53,\'\\\\0\')
(54,if(globalReturnsTrue()
(55,source[i])
(56,-1)
(57,)
(58,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^