-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_14_bad()
{
    unsigned int data;
    data = 0;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(globalFive==5)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
39,40
40,41
40,42
42,43
42,44
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,41,43,47,49,53,55
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_square_14_bad(){    unsigned int data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_square_14_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_square_14_bad
{    unsigned int data;    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(globalFive==5)    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(24,18,0)
(21,5,0)
(2,23,0)
(19,22,0)
(25,13,0)
(11,28,0)
(14,13,0)
(13,23,0)
(27,4,0)
(22,3,0)
(12,18,0)
(17,23,0)
(29,4,0)
(29,16,0)
(4,13,0)
(3,5,0)
(6,29,0)
(9,3,0)
(7,9,0)
(20,23,0)
(1,29,0)
(15,3,0)
(5,10,0)
(9,5,0)
(4,29,0)
(22,13,0)
(3,22,0)
(0,28,0)
(26,22,0)
(6,28,1)
(24,28,1)
(22,26,1)
(7,3,1)
(25,14,1)
(8,18,1)
(11,13,1)
(12,24,1)
(24,29,1)
(4,13,1)
(0,11,1)
(4,27,1)
(1,6,1)
(19,15,1)
(15,18,1)
(22,13,1)
(27,1,1)
(3,22,1)
(29,4,1)
(18,12,1)
(28,0,1)
(26,19,1)
(9,7,1)
(13,25,1)
(9,3,1)
(8,9,1)
(15,18,2)
(27,28,2)
(7,18,2)
(3,18,2)
(9,18,2)
(22,18,2)
(19,18,2)
(6,28,2)
(29,28,2)
(9,3,2)
(22,13,2)
(29,4,2)
(3,22,2)
(26,18,2)
(4,13,2)
(1,28,2)
(4,28,2)
-----------------------------------
(0,5)
(1,"%u")
(2,data)
(3,result = data * data)
(4,&data)
(5,)
(6,stdin)
(7,result)
(8,RET)
(9,printUnsignedLine(result)
(10,)
(11,globalFive)
(12,5)
(13,data = 0)
(14,data)
(15,result)
(16,)
(17,if(globalFive==5)
(18,globalFive==5)
(19,data)
(20,if(globalFive==5)
(21,result)
(22,data * data)
(23,)
(24,globalFive)
(25,0)
(26,data)
(27,data)
(28,globalFive==5)
(29,fscanf (stdin, "%u", &data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^