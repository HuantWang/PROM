-----label-----
1
-----code-----
static void badSink(char * data)
{
    {
        char dest[50] = "";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        strcpy(dest, data);
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
11,14
11,15
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
22,25
23,24
25,26
27,28
29,30
30,31
30,32
31,32
33,34
35,36
36,37
36,38
37,38
39,40
-----nextToken-----
2,4,6,8,9,14,16,18,20,24,26,28,32,34,38,40
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(char * data){    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strcpy(dest, data);        printLine(data);        free(data);    }}
static void
badSink(char * data)
badSink
char * data
char
* data
*
data
{    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strcpy(dest, data);        printLine(data);        free(data);    }}
{        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        strcpy(dest, data);        printLine(data);        free(data);    }
char dest[50] = "";
char dest[50] = "";
char
dest[50] = ""
dest
[50]
50
= ""
""
strcpy(dest, data);
strcpy(dest, data)
strcpy
strcpy
dest
dest
data
data
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(7,6,0)
(12,0,0)
(11,5,0)
(9,0,0)
(9,6,0)
(14,11,0)
(6,11,0)
(10,11,0)
(10,0,0)
(13,9,0)
(3,6,0)
(2,9,0)
(8,12,0)
(4,10,0)
(9,11,0)
(12,11,0)
(2,6,1)
(10,4,1)
(12,8,1)
(9,6,1)
(9,13,1)
(3,7,1)
(12,0,1)
(13,2,1)
(4,12,1)
(8,9,1)
(1,10,1)
(10,0,1)
(9,0,1)
(6,3,1)
(9,6,2)
(9,0,2)
(12,0,2)
(10,0,2)
-----------------------------------
(0,char * data)
(1,RET)
(2,dest)
(3,"")
(4,data)
(5,)
(6,dest[50] = "")
(7,dest)
(8,data)
(9,strcpy(dest, data)
(10,free(data)
(11,)
(12,printLine(data)
(13,data)
(14,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^