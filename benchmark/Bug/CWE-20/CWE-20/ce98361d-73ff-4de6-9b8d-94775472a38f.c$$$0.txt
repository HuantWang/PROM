-----label-----
1
-----code-----
void CWE127_Buffer_Underread__malloc_char_cpy_02_bad()
{
    char * data;
    data = NULL;
    if(1)
    {
        {
            char * dataBuffer = (char *)malloc(100*sizeof(char));
            if (dataBuffer == NULL) {exit(-1);}
            memset(dataBuffer, 'A', 100-1);
            dataBuffer[100-1] = '\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        char dest[100*2];
        memset(dest, 'C', 100*2-1); /* fill with 'C's */
        dest[100*2-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */
        strcpy(dest, data);
        printLine(dest);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
20,21
21,22
21,23
21,24
21,25
21,26
22,23
23,24
23,25
25,26
25,27
25,28
28,29
29,30
29,31
30,31
30,32
32,33
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
43,44
43,45
44,45
44,46
45,46
47,48
49,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
57,60
57,61
58,59
60,61
63,64
63,65
66,67
67,68
67,69
68,69
68,70
69,70
71,72
71,73
75,76
76,77
76,78
77,78
79,80
79,81
80,81
83,84
83,85
83,86
83,87
83,88
84,85
85,86
85,87
87,88
87,89
89,90
90,91
90,92
93,94
94,95
94,96
94,97
94,98
95,96
97,98
100,101
100,102
101,102
101,103
105,106
106,107
106,108
107,108
107,109
108,109
110,111
110,112
111,112
111,113
116,117
117,118
117,119
117,120
118,119
120,121
122,123
124,125
125,126
125,127
126,127
128,129
-----nextToken-----
2,4,8,10,11,15,17,19,24,26,27,31,33,36,38,41,42,46,48,53,55,59,61,62,64,65,70,72,73,74,78,81,82,86,88,91,92,96,98,99,102,103,104,109,112,113,114,115,119,121,123,127,129
-----computeFrom-----
13,14
13,15
37,38
37,39
44,45
44,46
63,64
63,65
67,68
67,69
71,72
71,73
76,77
76,78
79,80
79,81
90,91
90,92
100,101
100,102
101,102
101,103
106,107
106,108
110,111
110,112
111,112
111,113
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE127_Buffer_Underread__malloc_char_cpy_02_bad(){    char * data;    data = NULL;    if(1)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char dest[100*2];        memset(dest, 'C', 100*2-1); /* fill with 'C's */        dest[100*2-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        strcpy(dest, data);        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE127_Buffer_Underread__malloc_char_cpy_02_bad()
CWE127_Buffer_Underread__malloc_char_cpy_02_bad
{    char * data;    data = NULL;    if(1)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char dest[100*2];        memset(dest, 'C', 100*2-1); /* fill with 'C's */        dest[100*2-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        strcpy(dest, data);        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(1)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
1
{        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        char dest[100*2];        memset(dest, 'C', 100*2-1); /* fill with 'C's */        dest[100*2-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        strcpy(dest, data);        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
char dest[100*2];
char dest[100*2];
char
dest[100*2]
dest
[100*2]
100*2
100
2
memset(dest, 'C', 100*2-1);
memset(dest, 'C', 100*2-1)
memset
memset
dest
dest
'C'
100*2-1
100*2
100
2
1
dest[100*2-1] = '\0';
dest[100*2-1] = '\0'
dest[100*2-1]
dest
dest
100*2-1
100*2
100
2
1
'\0'
strcpy(dest, data);
strcpy(dest, data)
strcpy
strcpy
dest
dest
data
data
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(12,43,0)
(60,48,0)
(54,22,0)
(58,2,0)
(19,7,0)
(68,52,0)
(32,52,0)
(68,48,0)
(48,64,0)
(25,19,0)
(8,57,0)
(65,18,0)
(73,67,0)
(70,39,0)
(28,7,0)
(36,2,0)
(54,1,0)
(56,67,0)
(53,39,0)
(4,35,0)
(64,42,0)
(6,23,0)
(71,58,0)
(54,52,0)
(46,68,0)
(13,64,0)
(8,52,0)
(21,31,0)
(2,41,0)
(38,23,0)
(34,33,0)
(27,33,0)
(52,64,0)
(57,8,0)
(10,6,0)
(11,64,0)
(17,65,0)
(48,68,0)
(14,57,0)
(23,6,0)
(37,30,0)
(52,54,0)
(39,52,0)
(33,2,0)
(55,68,0)
(1,54,0)
(72,6,0)
(69,66,0)
(0,23,0)
(12,30,0)
(31,64,0)
(6,52,0)
(73,48,0)
(30,12,0)
(20,3,0)
(15,2,0)
(24,66,0)
(7,33,0)
(8,31,0)
(26,73,0)
(29,67,0)
(61,73,0)
(49,57,0)
(51,18,0)
(73,2,0)
(7,19,0)
(35,3,0)
(22,54,0)
(3,36,0)
(74,19,0)
(66,35,0)
(3,35,0)
(35,66,0)
(63,41,0)
(18,65,0)
(6,64,0)
(50,41,0)
(65,1,0)
(44,8,0)
(33,7,0)
(5,36,0)
(67,41,0)
(1,65,0)
(25,27,1)
(12,30,1)
(46,55,1)
(73,48,1)
(74,25,1)
(49,14,1)
(30,37,1)
(48,68,1)
(54,22,1)
(14,44,1)
(17,32,1)
(71,73,1)
(39,53,1)
(9,67,1)
(68,52,1)
(73,26,1)
(1,65,1)
(20,33,1)
(54,1,1)
(3,35,1)
(19,74,1)
(0,38,1)
(5,3,1)
(73,67,1)
(61,36,1)
(23,0,1)
(51,17,1)
(52,54,1)
(34,9,1)
(36,5,1)
(24,20,1)
(55,60,1)
(38,10,1)
(7,28,1)
(8,52,1)
(72,12,1)
(7,19,1)
(10,72,1)
(35,4,1)
(32,9,1)
(60,31,1)
(26,61,1)
(65,18,1)
(72,39,1)
(69,24,1)
(28,19,1)
(39,52,1)
(8,57,1)
(66,69,1)
(29,56,1)
(35,66,1)
(70,52,1)
(31,21,1)
(67,29,1)
(37,39,1)
(4,66,1)
(18,51,1)
(57,49,1)
(53,70,1)
(27,34,1)
(21,8,1)
(6,23,1)
(44,6,1)
(33,7,1)
(58,71,1)
(6,52,1)
(34,48,1)
(47,58,1)
(68,46,1)
(37,39,2)
(17,9,2)
(12,30,2)
(65,18,2)
(1,65,2)
(3,35,2)
(33,7,2)
(46,9,2)
(44,9,2)
(12,39,2)
(54,1,2)
(21,9,2)
(6,9,2)
(38,9,2)
(57,9,2)
(68,9,2)
(48,68,2)
(8,57,2)
(52,9,2)
(8,52,2)
(52,54,2)
(30,39,2)
(54,22,2)
(14,9,2)
(51,9,2)
(39,52,2)
(72,9,2)
(49,9,2)
(1,9,2)
(6,52,2)
(70,9,2)
(32,9,2)
(54,9,2)
(8,9,2)
(6,23,2)
(55,9,2)
(39,9,2)
(68,52,2)
(73,67,2)
(60,9,2)
(10,9,2)
(31,9,2)
(18,9,2)
(65,9,2)
(73,48,2)
(23,9,2)
(48,9,2)
(7,19,2)
(35,66,2)
(0,9,2)
(53,9,2)
-----------------------------------
(0,1)
(1,malloc(100*sizeof(char)
(2,)
(3,dest[100*2-1])
(4,1)
(5,'\\\\0')
(6,memset(dataBuffer, 'A', 100-1)
(7,100*2-1)
(8,dataBuffer[100-1])
(9,1)
(10,'A')
(11,if (dataBuffer == NULL)
(12,exit(-1)
(13,dataBuffer)
(14,100)
(15,dest)
(16,memset(dataBuffer, \'A\', 100-1)
(17,100)
(18,sizeof(char)
(19,100*2)
(20,dest)
(21,'\\\\0')
(22,char *)
(23,100-1)
(24,100)
(25,100)
(26,data)
(27,'C')
(28,1)
(29,NULL)
(30,-1)
(31,dataBuffer[100-1] = '\\\\0')
(32,dataBuffer)
(33,memset(dest, \'C\', 100*2-1)
(34,dest)
(35,100*2-1)
(36,dest[100*2-1] = '\\\\0')
(37,1)
(38,100)
(39,dataBuffer == NULL)
(40,\'A\')
(41,)
(42,)
(43,)
(44,dataBuffer)
(45,\'\\\\0\')
(46,8)
(47,RET)
(48,data = dataBuffer - 8)
(49,1)
(50,if(1)
(51,char)
(52,* dataBuffer = (char *)
(53,NULL)
(54,(char *)
(55,dataBuffer)
(56,data)
(57,100-1)
(58,printLine(dest)
(59,dataBuffer[100-1] = \'\\\\0\')
(60,data)
(61,dest)
(62,memset(dest, 'C', 100*2-1)
(63,data)
(64,)
(65,100*sizeof(char)
(66,100*2)
(67,data = NULL)
(68,dataBuffer - 8)
(69,2)
(70,dataBuffer)
(71,dest)
(72,dataBuffer)
(73,strcpy(dest, data)
(74,2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^