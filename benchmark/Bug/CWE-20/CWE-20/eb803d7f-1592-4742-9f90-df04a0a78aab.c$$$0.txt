-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_square_16_bad()
{
    int64_t data;
    data = 0LL;
    while(1)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%" SCNd64, &data);
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
            int64_t result = data * data;
            printLongLongLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
19,20
19,21
20,21
22,23
22,24
24,25
24,26
25,26
25,27
26,27
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
34,35
36,37
38,39
39,40
39,41
40,41
42,43
-----nextToken-----
2,4,9,11,15,16,18,21,23,29,31,35,37,41,43,44
-----computeFrom-----
13,14
13,15
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ProblemStatement;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_square_16_bad(){    int64_t data;    data = 0LL;    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_square_16_bad()
CWE190_Integer_Overflow__int64_t_fscanf_square_16_bad
{    int64_t data;    data = 0LL;    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }        break;    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);        break;    }
1
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);        break;    }
fscanf (stdin, "%" SCNd64, &data);
break;
while(1)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }        break;    }
{            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
break;
-----joern-----
(18,16,0)
(13,10,0)
(2,20,0)
(14,11,0)
(0,20,0)
(7,11,0)
(1,11,0)
(5,9,0)
(15,20,0)
(12,11,0)
(8,2,0)
(0,2,0)
(2,10,0)
(4,0,0)
(17,10,0)
(20,16,0)
(10,2,0)
(13,8,1)
(0,4,1)
(3,12,1)
(10,17,1)
(0,2,1)
(8,19,1)
(19,3,1)
(17,13,1)
(5,3,1)
(6,19,1)
(6,18,1)
(19,5,1)
(2,10,1)
(18,0,1)
(4,2,1)
(18,19,2)
(8,19,2)
(0,19,2)
(2,10,2)
(10,19,2)
(4,19,2)
(2,19,2)
(5,3,2)
(13,19,2)
(17,19,2)
(0,2,2)
-----------------------------------
(0,printLongLongLine(result)
(1,while(1)
(2,result = data * data)
(3,1)
(4,result)
(5,break;)
(6,RET)
(7,data)
(8,result)
(9,)
(10,data * data)
(11,)
(12,L)
(13,data)
(14,while(1)
(15,result)
(16,)
(17,data)
(18,break;)
(19,1)
(20,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^