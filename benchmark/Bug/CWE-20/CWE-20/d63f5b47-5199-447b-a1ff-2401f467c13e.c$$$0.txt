-----label-----
1
-----code-----
static void badSink()
{
    char * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_45_badData;
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */
        memmove(data, source, 100*sizeof(char));
        data[100-1] = '\0'; /* Ensure the destination buffer is null terminated */
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
9,12
12,13
13,14
15,16
15,17
15,18
15,19
15,20
15,21
15,22
16,17
17,18
17,19
19,20
19,21
21,22
23,24
24,25
24,26
24,27
24,28
25,26
27,28
30,31
30,32
33,34
34,35
34,36
35,36
35,37
36,37
38,39
38,40
42,43
43,44
43,45
43,46
43,47
44,45
46,47
48,49
50,51
50,52
52,53
53,54
53,55
56,57
57,58
57,59
58,59
58,60
59,60
61,62
61,63
65,66
66,67
66,68
67,68
69,70
71,72
72,73
72,74
73,74
75,76
-----nextToken-----
2,4,8,10,11,14,18,20,22,26,28,29,31,32,37,39,40,41,45,47,49,51,54,55,60,62,63,64,68,70,74,76
-----computeFrom-----
30,31
30,32
34,35
34,36
38,39
38,40
50,51
50,52
57,58
57,59
61,62
61,63
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    char * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_45_badData;    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        memmove(data, source, 100*sizeof(char));        data[100-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
static void
badSink()
badSink
{    char * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_45_badData;    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        memmove(data, source, 100*sizeof(char));        data[100-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
char * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_45_badData;
char * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_45_badData;
char
* data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_45_badData
*
data
= CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_45_badData
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        memmove(data, source, 100*sizeof(char));        data[100-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
memmove(data, source, 100*sizeof(char));
memmove(data, source, 100*sizeof(char))
memmove
memmove
data
data
source
source
100*sizeof(char)
100
sizeof(char)
char
char

data[100-1] = '\0';
data[100-1] = '\0'
data[100-1]
data
data
100-1
100
1
'\0'
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(32,21,0)
(32,28,0)
(33,8,0)
(37,3,0)
(20,21,0)
(15,6,0)
(24,37,0)
(16,20,0)
(10,28,0)
(13,26,0)
(29,10,0)
(3,37,0)
(2,21,0)
(39,26,0)
(3,19,0)
(17,11,0)
(22,11,0)
(19,28,0)
(36,19,0)
(23,20,0)
(8,20,0)
(26,0,0)
(30,37,0)
(26,39,0)
(28,31,0)
(27,28,0)
(1,39,0)
(11,22,0)
(14,31,0)
(9,3,0)
(6,8,0)
(20,28,0)
(21,31,0)
(20,8,0)
(26,21,0)
(11,28,0)
(4,11,0)
(7,39,0)
(35,21,0)
(38,0,0)
(5,22,0)
(25,32,0)
(0,28,0)
(8,6,0)
(18,22,0)
(10,21,0)
(18,5,1)
(36,3,1)
(0,38,1)
(32,21,1)
(4,21,1)
(32,25,1)
(6,15,1)
(29,32,1)
(22,18,1)
(8,6,1)
(25,0,1)
(20,8,1)
(3,37,1)
(13,20,1)
(26,21,1)
(26,39,1)
(38,26,1)
(5,17,1)
(33,23,1)
(17,4,1)
(10,29,1)
(10,21,1)
(39,1,1)
(1,7,1)
(30,24,1)
(11,22,1)
(20,21,1)
(15,33,1)
(23,16,1)
(9,11,1)
(16,19,1)
(19,36,1)
(7,13,1)
(12,10,1)
(35,2,1)
(24,9,1)
(37,30,1)
(21,35,1)
(26,21,2)
(32,21,2)
(20,8,2)
(8,6,2)
(3,37,2)
(26,39,2)
(10,21,2)
(11,22,2)
(20,21,2)
-----------------------------------
(0,data[100-1] = '\\\\0')
(1,1)
(2,data)
(3,source[100-1])
(4,source)
(5,100)
(6,sizeof(char)
(7,100)
(8,100*sizeof(char)
(9,source)
(10,free(data)
(11,memset(source, 'C', 100-1)
(12,RET)
(13,data)
(14,data)
(15,char)
(16,data)
(17,'C')
(18,1)
(19,source[100-1] = '\\\\0')
(20,memmove(data, source, 100*sizeof(char)
(21,* data = CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_45_badData)
(22,100-1)
(23,source)
(24,100)
(25,data)
(26,data[100-1])
(27,source)
(28,)
(29,data)
(30,1)
(31,)
(32,printLine(data)
(33,100)
(34,memset(source, \'C\', 100-1)
(35,CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_45_badData)
(36,'\\\\0')
(37,100-1)
(38,'\\\\0')
(39,100-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^