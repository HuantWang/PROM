-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_02_bad()
{
    wchar_t * data;
    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
    data = dataBuffer;
    if(1)
    {
        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
        wmemset(data, L'A', 100-1); /* fill with L'A's */
        data[100-1] = L'\0'; /* null terminate */
    }
    {
        wchar_t dest[50] = L"";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        SNPRINTF(dest, wcslen(data), L"%s", data);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
33,34
34,35
34,36
35,36
37,38
39,40
39,41
41,42
41,43
42,43
43,44
43,45
43,46
43,47
44,45
46,47
49,50
49,51
52,53
53,54
53,55
54,55
54,56
55,56
57,58
57,59
61,62
61,63
61,64
62,63
63,64
63,65
65,66
65,67
65,68
67,68
69,70
71,72
72,73
72,74
72,75
72,76
72,77
73,74
75,76
77,78
77,79
78,79
80,81
83,84
85,86
86,87
86,88
87,88
89,90
-----nextToken-----
2,4,8,10,11,14,16,17,21,23,26,28,31,32,36,38,40,45,47,48,50,51,56,58,59,60,64,66,68,70,74,76,79,81,82,84,88,90
-----computeFrom-----
27,28
27,29
34,35
34,36
49,50
49,51
53,54
53,55
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_02_bad(){    wchar_t * data;    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    data = dataBuffer;    if(1)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_02_bad()
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_02_bad
{    wchar_t * data;    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    data = dataBuffer;    if(1)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)ALLOCA(100*sizeof(wchar_t))
(wchar_t *)ALLOCA(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
ALLOCA(100*sizeof(wchar_t))
ALLOCA
ALLOCA
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(1)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }
1
{        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }
wmemset(data, L'A', 100-1);
wmemset(data, L'A', 100-1)
wmemset
wmemset
data
data
L'A'
100-1
100
1
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
{        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
SNPRINTF(dest, wcslen(data), L"%s", data);
SNPRINTF(dest, wcslen(data), L"%s", data)
SNPRINTF
SNPRINTF
dest
dest
wcslen(data)
wcslen
wcslen
data
data
L"%s"
data
data
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(8,20,0)
(23,2,0)
(11,0,0)
(11,15,0)
(15,17,0)
(20,12,0)
(17,15,0)
(2,9,0)
(22,7,0)
(13,11,0)
(7,11,0)
(4,12,0)
(15,3,0)
(3,15,0)
(7,0,0)
(3,9,0)
(16,5,0)
(14,0,0)
(15,11,0)
(21,7,0)
(20,7,0)
(19,0,0)
(6,0,0)
(9,3,0)
(12,0,0)
(9,2,0)
(24,9,0)
(8,4,1)
(20,7,1)
(15,17,1)
(4,1,1)
(24,13,1)
(11,15,1)
(7,11,1)
(20,8,1)
(15,3,1)
(4,16,1)
(2,23,1)
(22,11,1)
(3,9,1)
(7,21,1)
(10,20,1)
(1,7,1)
(21,22,1)
(16,1,1)
(23,24,1)
(9,2,1)
(7,11,2)
(15,17,2)
(9,2,2)
(3,9,2)
(16,1,2)
(20,7,2)
(15,3,2)
(11,15,2)
-----------------------------------
(0,)
(1,1)
(2,sizeof(wchar_t)
(3,ALLOCA(100*sizeof(wchar_t)
(4,"")
(5,)
(6,if(1)
(7,data = dataBuffer)
(8,data)
(9,100*sizeof(wchar_t)
(10,RET)
(11,* dataBuffer = (wchar_t *)
(12,)
(13,dataBuffer)
(14,data)
(15,(wchar_t *)
(16,\\'\\\\0\\')
(17,wchar_t *)
(18,\\\'\\\\0\\\')
(19,dataBuffer)
(20,printWLine(data)
(21,dataBuffer)
(22,data)
(23,wchar_t)
(24,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^