-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_preinc_14_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(globalFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_preinc_14_bad(){    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_preinc_14_bad()
CWE190_Integer_Overflow__int_max_preinc_14_bad
{    int data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(globalFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(5,6,0)
(0,14,0)
(9,16,0)
(3,1,0)
(14,4,0)
(2,12,0)
(17,26,0)
(8,13,0)
(13,4,0)
(19,1,0)
(10,25,0)
(13,10,0)
(14,6,0)
(7,14,0)
(23,4,0)
(27,10,0)
(13,6,0)
(12,10,0)
(12,14,0)
(11,4,0)
(22,16,0)
(4,21,0)
(18,6,0)
(6,1,0)
(15,1,0)
(14,10,0)
(20,26,0)
(17,20,1)
(14,0,1)
(11,23,1)
(12,14,1)
(24,12,1)
(18,5,1)
(14,4,1)
(9,22,1)
(6,18,1)
(23,16,1)
(14,6,1)
(7,13,1)
(8,26,1)
(12,2,1)
(26,17,1)
(2,14,1)
(13,4,1)
(16,9,1)
(20,4,1)
(24,26,1)
(13,6,1)
(0,7,1)
(13,8,1)
(4,11,1)
(22,6,1)
(20,16,1)
(14,4,2)
(14,6,2)
(11,16,2)
(23,16,2)
(14,26,2)
(7,26,2)
(13,6,2)
(12,26,2)
(8,26,2)
(12,14,2)
(0,26,2)
(4,16,2)
(13,26,2)
(2,26,2)
(13,4,2)
-----------------------------------
(0,data)
(1,)
(2,result)
(3,data)
(4,data = INT_MAX)
(5,data)
(6,data = 0)
(7,result)
(8,data)
(9,5)
(10,)
(11,INT_MAX)
(12,printIntLine(result)
(13,++data)
(14,result = data)
(15,if(globalFive==5)
(16,globalFive==5)
(17,5)
(18,0)
(19,if(globalFive==5)
(20,globalFive)
(21,)
(22,globalFive)
(23,data)
(24,RET)
(25,)
(26,globalFive==5)
(27,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^