-----label-----
1
-----code-----
void CWE415_Double_Free__malloc_free_struct_41_bad()
{
    twoIntsStruct * data;
    /* Initialize data */
    data = NULL;
    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* POTENTIAL FLAW: Free data in the source - the bad sink frees data as well */
    free(data);
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
39,40
39,41
40,41
40,42
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
60,61
62,63
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,37,38,42,44,49,51,55,57,61,63
-----computeFrom-----
14,15
14,16
20,21
20,22
32,33
32,34
40,41
40,42
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE415_Double_Free__malloc_free_struct_41_bad(){    twoIntsStruct * data;    /* Initialize data */    data = NULL;    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* POTENTIAL FLAW: Free data in the source - the bad sink frees data as well */    free(data);    badSink(data);}
void
CWE415_Double_Free__malloc_free_struct_41_bad()
CWE415_Double_Free__malloc_free_struct_41_bad
{    twoIntsStruct * data;    /* Initialize data */    data = NULL;    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* POTENTIAL FLAW: Free data in the source - the bad sink frees data as well */    free(data);    badSink(data);}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)malloc(100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
malloc(100*sizeof(twoIntsStruct))
malloc
malloc
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
free(data);
free(data)
free
free
data
data
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(5,21,0)
(13,2,0)
(20,19,0)
(1,15,0)
(25,6,0)
(12,7,0)
(17,26,0)
(26,14,0)
(19,7,0)
(3,4,0)
(6,21,0)
(16,17,0)
(22,24,0)
(4,1,0)
(26,17,0)
(8,5,0)
(1,4,0)
(14,5,0)
(2,7,0)
(24,7,0)
(19,21,0)
(5,14,0)
(21,7,0)
(23,21,0)
(18,24,0)
(9,7,0)
(0,6,0)
(11,26,0)
(5,8,0)
(2,21,0)
(14,26,0)
(21,5,0)
(10,2,1)
(6,21,1)
(2,13,1)
(19,21,1)
(14,26,1)
(6,0,1)
(2,21,1)
(24,18,1)
(3,6,1)
(11,23,1)
(0,25,1)
(17,16,1)
(20,1,1)
(25,21,1)
(18,22,1)
(5,8,1)
(16,11,1)
(20,6,1)
(5,14,1)
(21,5,1)
(13,19,1)
(23,24,1)
(19,20,1)
(26,17,1)
(1,4,1)
(4,3,1)
(26,17,2)
(6,21,2)
(19,21,2)
(5,14,2)
(21,5,2)
(3,6,2)
(5,8,2)
(4,6,2)
(2,21,2)
(14,26,2)
(1,6,2)
(1,4,2)
-----------------------------------
(0,NULL)
(1,exit(-1)
(2,badSink(data)
(3,1)
(4,-1)
(5,(twoIntsStruct *)
(6,data == NULL)
(7,)
(8,twoIntsStruct *)
(9,data)
(10,RET)
(11,100)
(12,if (data == NULL)
(13,data)
(14,malloc(100*sizeof(twoIntsStruct)
(15,)
(16,twoIntsStruct)
(17,sizeof(twoIntsStruct)
(18,NULL)
(19,free(data)
(20,data)
(21,data = (twoIntsStruct *)
(22,data)
(23,data)
(24,data = NULL)
(25,data)
(26,100*sizeof(twoIntsStruct)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^