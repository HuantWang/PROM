-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_square_11_bad()
{
    unsigned int data;
    data = 0;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(globalReturnsTrue())
    {
        {
            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */
            unsigned int result = data * data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
29,30
31,32
32,33
32,34
33,34
34,35
34,36
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,8,10,14,15,19,24,26,30,35,37,41,43,47,49
-----computeFrom-----
12,13
12,14
22,23
22,24
39,40
39,41
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_square_11_bad(){    unsigned int data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_square_11_bad()
CWE190_Integer_Overflow__unsigned_int_max_square_11_bad
{    unsigned int data;    data = 0;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(globalReturnsTrue())    {        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > UINT_MAX, this will overflow */            unsigned int result = data * data;            printUnsignedLine(result);        }
unsigned int result = data * data;
unsigned int result = data * data;
unsigned int
result = data * data
result
= data * data
data * data
data
data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(2,9,0)
(2,5,0)
(5,1,0)
(12,6,0)
(9,4,0)
(15,17,0)
(13,1,0)
(2,17,0)
(17,7,0)
(6,1,0)
(18,5,0)
(23,2,0)
(1,16,0)
(5,2,0)
(14,17,0)
(3,9,0)
(20,9,0)
(11,7,0)
(8,7,0)
(6,5,0)
(19,2,0)
(10,7,0)
(22,9,1)
(6,12,1)
(0,22,1)
(19,18,1)
(23,19,1)
(14,15,1)
(5,2,1)
(22,21,1)
(6,5,1)
(21,17,1)
(2,17,1)
(2,9,1)
(20,3,1)
(18,22,1)
(3,21,1)
(9,20,1)
(12,5,1)
(0,6,1)
(2,23,1)
(17,14,1)
(12,22,2)
(9,21,2)
(5,2,2)
(5,22,2)
(6,5,2)
(3,21,2)
(2,22,2)
(6,22,2)
(2,9,2)
(18,22,2)
(20,21,2)
(19,22,2)
(23,22,2)
(2,17,2)
-----------------------------------
(0,RET)
(1,)
(2,data * data)
(3,data)
(4,)
(5,result = data * data)
(6,printUnsignedLine(result)
(7,)
(8,if(globalReturnsTrue()
(9,data = UINT_MAX)
(10,data)
(11,if(globalReturnsTrue()
(12,result)
(13,result)
(14,0)
(15,data)
(16,)
(17,data = 0)
(18,result)
(19,data)
(20,UINT_MAX)
(21,globalReturnsTrue()
(22,globalReturnsTrue()
(23,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^