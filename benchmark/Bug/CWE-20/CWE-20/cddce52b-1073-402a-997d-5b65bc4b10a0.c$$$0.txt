-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_postinc_04_bad()
{
    short data;
    data = 0;
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(STATIC_CONST_TRUE)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_postinc_04_bad(){    short data;    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_postinc_04_bad()
CWE190_Integer_Overflow__short_fscanf_postinc_04_bad
{    short data;    data = 0;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(STATIC_CONST_TRUE)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(7,24,0)
(5,12,0)
(4,25,0)
(23,24,0)
(2,24,0)
(8,1,0)
(12,11,0)
(21,18,0)
(23,18,0)
(16,24,0)
(12,22,0)
(24,1,0)
(22,24,0)
(10,7,0)
(20,1,0)
(15,1,0)
(25,18,0)
(14,12,0)
(6,22,0)
(22,12,0)
(0,23,0)
(9,23,0)
(18,3,0)
(25,23,0)
(7,18,0)
(5,14,1)
(17,13,1)
(13,19,1)
(23,0,1)
(24,2,1)
(13,12,1)
(2,16,1)
(6,5,1)
(7,24,1)
(0,9,1)
(9,7,1)
(12,22,1)
(25,23,1)
(14,19,1)
(23,24,1)
(19,24,1)
(7,10,1)
(17,25,1)
(22,24,1)
(4,23,1)
(10,13,1)
(25,4,1)
(22,6,1)
(22,19,2)
(4,13,2)
(22,24,2)
(7,24,2)
(7,13,2)
(25,13,2)
(0,13,2)
(25,23,2)
(10,13,2)
(5,19,2)
(23,13,2)
(12,22,2)
(23,24,2)
(6,19,2)
(9,13,2)
(14,19,2)
(12,19,2)
-----------------------------------
(0,data)
(1,)
(2,0)
(3,)
(4,result)
(5,"%hd")
(6,data)
(7,data++)
(8,if(STATIC_CONST_TRUE)
(9,result)
(10,data)
(11,)
(12,fscanf (stdin, "%hd", &data)
(13,STATIC_CONST_TRUE)
(14,stdin)
(15,data)
(16,data)
(17,RET)
(18,)
(19,STATIC_CONST_TRUE)
(20,if(STATIC_CONST_TRUE)
(21,result)
(22,&data)
(23,result = data)
(24,data = 0)
(25,printIntLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^