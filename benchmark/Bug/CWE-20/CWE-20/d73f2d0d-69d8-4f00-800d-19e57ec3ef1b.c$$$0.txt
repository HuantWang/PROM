-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_declare_snprintf_67b_badSink(CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_declare_snprintf_67_structType myStruct)
{
    wchar_t * data = myStruct.structFirst;
    {
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with L'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */
        SNPRINTF(data, 100, L"%s", source);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
22,23
22,24
22,25
22,26
22,27
23,24
24,25
24,26
26,27
26,28
28,29
30,31
31,32
31,33
31,34
31,35
32,33
34,35
37,38
37,39
40,41
41,42
41,43
42,43
42,44
43,44
45,46
45,47
49,50
50,51
50,52
50,53
50,54
50,55
51,52
53,54
57,58
59,60
60,61
60,62
61,62
63,64
-----nextToken-----
2,4,7,9,13,15,16,20,21,25,27,29,33,35,36,38,39,44,46,47,48,52,54,55,56,58,62,64
-----computeFrom-----
37,38
37,39
41,42
41,43
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_declare_snprintf_67b_badSink(CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_declare_snprintf_67_structType myStruct){    wchar_t * data = myStruct.structFirst;    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */        SNPRINTF(data, 100, L"%s", source);        printWLine(data);    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_declare_snprintf_67b_badSink(CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_declare_snprintf_67_structType myStruct)
CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_declare_snprintf_67b_badSink
CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_declare_snprintf_67_structType myStruct
CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_declare_snprintf_67_structType
CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_declare_snprintf_67_structType
myStruct
myStruct
{    wchar_t * data = myStruct.structFirst;    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */        SNPRINTF(data, 100, L"%s", source);        printWLine(data);    }}
wchar_t * data = myStruct.structFirst;
wchar_t * data = myStruct.structFirst;
wchar_t
* data = myStruct.structFirst
*
data
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
{        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with L'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */        SNPRINTF(data, 100, L"%s", source);        printWLine(data);    }
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
SNPRINTF(data, 100, L"%s", source);
SNPRINTF(data, 100, L"%s", source)
SNPRINTF
SNPRINTF
data
data
100
L"%s"
source
source
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(3,7,0)
(6,11,0)
(0,3,0)
(1,0,0)
(11,7,0)
(5,3,0)
(5,11,0)
(4,0,0)
(8,5,0)
(12,3,0)
(2,11,0)
(0,10,0)
(3,0,0)
(13,7,0)
(2,3,1)
(0,1,1)
(1,4,1)
(9,5,1)
(4,12,1)
(0,10,1)
(5,3,1)
(5,8,1)
(8,2,1)
(3,0,1)
(0,10,2)
(5,3,2)
(3,0,2)
-----------------------------------
(0,myStruct.structFirst)
(1,structFirst)
(2,'\\\\0')
(3,* data = myStruct.structFirst)
(4,myStruct)
(5,printWLine(data)
(6,source)
(7,)
(8,data)
(9,RET)
(10,CWE121_Stack_Based_Buffer_Overflow__CWE805_wchar_t_declare_snprintf_67_structType myStruct)
(11,)
(12,data)
(13,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^