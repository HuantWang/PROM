-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61_bad()
{
    wchar_t * data;
    data = NULL;
    data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61b_badSource(data);
    {
        wchar_t source[10+1] = SRC_STRING;
        /* Copy length + 1 to include NUL terminator from source */
        /* POTENTIAL FLAW: data may not have enough space to hold source */
        memcpy(data, source, (wcslen(source) + 1) * sizeof(wchar_t));
        printWLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
28,29
29,30
29,31
31,32
31,33
31,34
33,34
34,35
34,36
37,38
38,39
40,41
41,42
41,43
41,44
41,45
42,43
44,45
46,47
48,49
48,50
49,50
50,51
50,52
51,52
51,53
52,53
54,55
57,58
58,59
58,60
61,62
62,63
62,64
63,64
65,66
67,68
68,69
68,70
69,70
71,72
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,30,32,35,36,39,43,45,47,53,55,56,59,60,64,66,70,72
-----computeFrom-----
13,14
13,15
19,20
19,21
34,35
34,36
48,49
48,50
50,51
50,52
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;BinaryExpression;LiteralExpression;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61_bad(){    wchar_t * data;    data = NULL;    data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61b_badSource(data);    {        wchar_t source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        memcpy(data, source, (wcslen(source) + 1) * sizeof(wchar_t));        printWLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61_bad
{    wchar_t * data;    data = NULL;    data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61b_badSource(data);    {        wchar_t source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        memcpy(data, source, (wcslen(source) + 1) * sizeof(wchar_t));        printWLine(data);        free(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61b_badSource(data);
data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61b_badSource(data)
data
data
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61b_badSource(data)
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61b_badSource
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61b_badSource
data
data
{        wchar_t source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        memcpy(data, source, (wcslen(source) + 1) * sizeof(wchar_t));        printWLine(data);        free(data);    }
wchar_t source[10+1] = SRC_STRING;
wchar_t source[10+1] = SRC_STRING;
wchar_t
source[10+1] = SRC_STRING
source
[10+1]
10+1
10
1
= SRC_STRING
SRC_STRING
SRC_STRING
memcpy(data, source, (wcslen(source) + 1) * sizeof(wchar_t));
memcpy(data, source, (wcslen(source) + 1) * sizeof(wchar_t))
memcpy
memcpy
data
data
source
source
(wcslen(source) + 1) * sizeof(wchar_t)
(wcslen(source) + 1)
wcslen(source) + 1
wcslen(source)
wcslen
wcslen
source
source
1
sizeof(wchar_t)
wchar_t
wchar_t

printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(10,1,0)
(3,23,0)
(10,4,0)
(10,20,0)
(28,1,0)
(22,18,0)
(0,1,0)
(27,1,0)
(20,4,0)
(1,23,0)
(13,4,0)
(7,18,0)
(28,4,0)
(5,10,0)
(18,20,0)
(12,25,0)
(18,22,0)
(15,22,0)
(27,3,0)
(1,27,0)
(10,15,0)
(22,15,0)
(25,15,0)
(16,20,0)
(24,10,0)
(6,23,0)
(2,3,0)
(9,1,0)
(15,25,0)
(17,22,0)
(15,10,0)
(11,3,0)
(19,20,0)
(21,28,0)
(4,23,0)
(26,27,0)
(9,4,0)
(14,9,0)
(10,1,1)
(28,1,1)
(10,20,1)
(17,18,1)
(18,7,1)
(22,18,1)
(9,1,1)
(24,20,1)
(25,12,1)
(20,16,1)
(19,1,1)
(28,21,1)
(0,3,1)
(5,24,1)
(11,2,1)
(26,0,1)
(21,10,1)
(8,9,1)
(18,20,1)
(1,27,1)
(9,14,1)
(14,28,1)
(15,22,1)
(3,11,1)
(16,19,1)
(12,22,1)
(7,5,1)
(27,3,1)
(22,17,1)
(15,25,1)
(27,26,1)
(10,15,1)
(27,3,2)
(18,20,2)
(10,20,2)
(15,25,2)
(10,15,2)
(22,18,2)
(15,22,2)
(28,1,2)
(10,1,2)
(9,1,2)
(1,27,2)
-----------------------------------
(0,data)
(1,data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61b_badSource(data)
(2,data)
(3,data = NULL)
(4,)
(5,source)
(6,data)
(7,source)
(8,RET)
(9,free(data)
(10,memcpy(data, source, (wcslen(source)
(11,NULL)
(12,wchar_t)
(13,source)
(14,data)
(15,(wcslen(source)
(16,SRC_STRING)
(17,1)
(18,wcslen(source)
(19,source)
(20,source[10+1] = SRC_STRING)
(21,data)
(22,wcslen(source)
(23,)
(24,data)
(25,sizeof(wchar_t)
(26,data)
(27,CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_61b_badSource(data)
(28,printWLine(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^