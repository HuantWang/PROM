-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncpy_34_bad()
{
    wchar_t * data;
    CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncpy_34_unionType myUnion;
    data = (wchar_t *)malloc(100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
    wmemset(data, L'A', 100-1); /* fill with L'A's */
    data[100-1] = L'\0'; /* null terminate */
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        {
            wchar_t dest[50] = L"";
            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
            wcsncpy(dest, data, wcslen(data));
            dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */
            printWLine(data);
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
69,70
69,71
70,71
70,72
71,72
74,75
76,77
76,78
77,78
78,79
78,80
80,81
80,82
80,83
83,84
84,85
84,86
85,86
88,89
88,90
88,91
88,92
88,93
89,90
90,91
90,92
92,93
92,94
92,95
94,95
96,97
98,99
99,100
99,101
99,102
99,103
100,101
102,103
104,105
106,107
106,108
107,108
109,110
111,112
112,113
112,114
113,114
113,115
114,115
116,117
116,118
120,121
121,122
121,123
122,123
124,125
126,127
127,128
127,129
128,129
130,131
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,39,41,46,48,52,54,55,57,58,63,65,66,67,72,73,75,79,81,82,86,87,91,93,95,97,101,103,105,108,110,115,117,118,119,123,125,129,131
-----computeFrom-----
19,20
19,21
30,31
30,32
37,38
37,39
56,57
56,58
60,61
60,62
64,65
64,66
69,70
69,71
112,113
112,114
116,117
116,118
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncpy_34_bad(){    wchar_t * data;    CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncpy_34_unionType myUnion;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */    wmemset(data, L'A', 100-1); /* fill with L'A's */    data[100-1] = L'\0'; /* null terminate */    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t dest[50] = L"";            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */            wcsncpy(dest, data, wcslen(data));            dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */            printWLine(data);            free(data);        }    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncpy_34_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncpy_34_bad
{    wchar_t * data;    CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncpy_34_unionType myUnion;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */    wmemset(data, L'A', 100-1); /* fill with L'A's */    data[100-1] = L'\0'; /* null terminate */    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t dest[50] = L"";            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */            wcsncpy(dest, data, wcslen(data));            dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */            printWLine(data);            free(data);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncpy_34_unionType myUnion;
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncpy_34_unionType myUnion;
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncpy_34_unionType
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncpy_34_unionType
myUnion
myUnion
data = (wchar_t *)malloc(100*sizeof(wchar_t));
data = (wchar_t *)malloc(100*sizeof(wchar_t))
data
data
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(data, L'A', 100-1);
wmemset(data, L'A', 100-1)
wmemset
wmemset
data
data
L'A'
100-1
100
1
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        {            wchar_t dest[50] = L"";            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */            wcsncpy(dest, data, wcslen(data));            dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */            printWLine(data);            free(data);        }    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            wchar_t dest[50] = L"";            /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */            wcsncpy(dest, data, wcslen(data));            dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */            printWLine(data);            free(data);        }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
wcsncpy(dest, data, wcslen(data));
wcsncpy(dest, data, wcslen(data))
wcsncpy
wcsncpy
dest
dest
data
data
wcslen(data)
wcslen
wcslen
data
data
dest[50-1] = L'\0';
dest[50-1] = L'\0'
dest[50-1]
dest
dest
50-1
50
1
L'\0'
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(43,35,0)
(25,28,0)
(45,35,0)
(7,33,0)
(20,33,0)
(38,33,0)
(17,21,0)
(34,3,0)
(27,14,0)
(35,43,0)
(26,28,0)
(44,0,0)
(28,14,0)
(43,29,0)
(9,3,0)
(31,39,0)
(44,40,0)
(3,33,0)
(27,0,0)
(32,0,0)
(6,40,0)
(19,29,0)
(40,14,0)
(1,0,0)
(2,33,0)
(36,1,0)
(4,45,0)
(21,29,0)
(42,45,0)
(29,21,0)
(8,27,0)
(0,20,0)
(15,42,0)
(30,0,0)
(1,14,0)
(16,23,0)
(41,34,0)
(44,14,0)
(35,37,0)
(12,33,0)
(45,33,0)
(3,45,0)
(18,42,0)
(31,23,0)
(5,14,0)
(37,35,0)
(35,45,0)
(23,31,0)
(10,20,0)
(24,34,0)
(14,20,0)
(40,44,0)
(13,44,0)
(22,44,0)
(29,43,0)
(14,28,0)
(40,14,1)
(1,36,1)
(43,29,1)
(3,45,1)
(22,13,1)
(34,24,1)
(38,31,1)
(35,37,1)
(38,42,1)
(40,6,1)
(21,17,1)
(42,45,1)
(18,45,1)
(36,27,1)
(29,21,1)
(15,18,1)
(27,14,1)
(1,14,1)
(28,25,1)
(9,34,1)
(44,40,1)
(24,41,1)
(6,22,1)
(30,44,1)
(44,14,1)
(11,1,1)
(32,14,1)
(3,9,1)
(23,16,1)
(42,15,1)
(27,8,1)
(13,32,1)
(19,4,1)
(31,23,1)
(16,42,1)
(41,38,1)
(45,35,1)
(17,19,1)
(26,5,1)
(5,3,1)
(25,26,1)
(8,30,1)
(35,43,1)
(14,28,1)
(40,14,2)
(23,42,2)
(3,45,2)
(44,40,2)
(42,45,2)
(14,28,2)
(44,14,2)
(16,42,2)
(31,23,2)
(43,29,2)
(35,43,2)
(29,21,2)
(1,14,2)
(35,37,2)
(45,35,2)
(31,42,2)
(27,14,2)
-----------------------------------
(0,)
(1,free(data)
(2,myUnion)
(3,myUnion.unionFirst = data)
(4,data)
(5,data)
(6,data)
(7,if (data == NULL)
(8,data)
(9,data)
(10,data)
(11,RET)
(12,data)
(13,dest)
(14,* data = myUnion.unionSecond)
(15,NULL)
(16,1)
(17,wchar_t)
(18,data)
(19,100)
(20,)
(21,sizeof(wchar_t)
(22,data)
(23,-1)
(24,unionFirst)
(25,unionSecond)
(26,myUnion)
(27,printWLine(data)
(28,myUnion.unionSecond)
(29,100*sizeof(wchar_t)
(30,\\\'\\\\0\\\')
(31,exit(-1)
(32,"")
(33,)
(34,myUnion.unionFirst)
(35,(wchar_t *)
(36,data)
(37,wchar_t *)
(38,\\\'\\\\0\\\')
(39,)
(40,wcslen(data)
(41,myUnion)
(42,data == NULL)
(43,malloc(100*sizeof(wchar_t)
(44,wcsncpy(dest, data, wcslen(data)
(45,data = (wchar_t *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^