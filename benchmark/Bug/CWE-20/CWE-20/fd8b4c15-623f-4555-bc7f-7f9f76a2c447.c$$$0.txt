-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fscanf_preinc_10_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    if(globalTrue)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
31,32
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fscanf_preinc_10_bad(){    int data;    /* Initialize data */    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fscanf_preinc_10_bad()
CWE190_Integer_Overflow__int_fscanf_preinc_10_bad
{    int data;    /* Initialize data */    data = 0;    if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
if(globalTrue)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
globalTrue
globalTrue
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(21,4,0)
(25,2,0)
(20,1,0)
(1,11,0)
(19,5,0)
(7,8,0)
(9,11,0)
(8,7,0)
(4,13,0)
(23,11,0)
(6,13,0)
(24,13,0)
(8,16,0)
(0,7,0)
(7,13,0)
(12,5,0)
(13,5,0)
(1,2,0)
(3,5,0)
(4,2,0)
(2,15,0)
(18,8,0)
(11,13,0)
(11,2,0)
(22,8,0)
(23,9,1)
(10,1,1)
(7,13,1)
(18,22,1)
(17,14,1)
(17,8,1)
(1,20,1)
(24,6,1)
(10,17,1)
(11,23,1)
(20,11,1)
(11,13,1)
(22,14,1)
(14,13,1)
(1,11,1)
(0,18,1)
(21,17,1)
(13,24,1)
(9,4,1)
(8,7,1)
(4,13,1)
(7,0,1)
(4,21,1)
(4,17,2)
(7,14,2)
(11,17,2)
(8,7,2)
(0,14,2)
(21,17,2)
(8,14,2)
(23,17,2)
(9,17,2)
(22,14,2)
(20,17,2)
(1,11,2)
(11,13,2)
(1,17,2)
(4,13,2)
(7,13,2)
(18,14,2)
-----------------------------------
(0,data)
(1,printIntLine(result)
(2,)
(3,if(globalTrue)
(4,++data)
(5,)
(6,data)
(7,&data)
(8,fscanf(stdin, "%d", &data)
(9,result)
(10,RET)
(11,result = data)
(12,if(globalTrue)
(13,data = 0)
(14,globalTrue)
(15,)
(16,)
(17,globalTrue)
(18,"%d")
(19,data)
(20,result)
(21,data)
(22,stdin)
(23,data)
(24,0)
(25,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^