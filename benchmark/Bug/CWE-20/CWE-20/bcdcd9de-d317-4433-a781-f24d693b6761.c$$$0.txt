-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execlp_31_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    {
        char * dataCopy = data;
        char * data = dataCopy;
        /* execlp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
61,64
61,65
62,63
64,65
64,66
65,66
67,68
69,70
71,72
71,73
72,73
72,74
74,75
77,78
77,79
77,80
78,79
79,80
79,81
81,82
81,83
81,84
84,85
85,86
87,88
88,89
88,90
90,91
90,92
90,93
93,94
94,95
96,97
97,98
97,99
97,100
97,101
97,102
97,103
98,99
100,101
102,103
104,105
106,107
108,109
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,43,45,46,50,52,56,58,63,66,68,70,73,75,76,80,82,83,86,89,91,92,95,99,101,103,105,107,109
-----computeFrom-----
23,24
23,25
54,55
54,56
64,65
64,66
71,72
71,73
72,73
72,74
-----guardedBy-----
56,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execlp_31_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char * dataCopy = data;        char * data = dataCopy;        /* execlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
void
CWE78_OS_Command_Injection__char_environment_execlp_31_bad()
CWE78_OS_Command_Injection__char_environment_execlp_31_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char * dataCopy = data;        char * data = dataCopy;        /* execlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char * dataCopy = data;        char * data = dataCopy;        /* execlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }
char * dataCopy = data;
char * dataCopy = data;
char
* dataCopy = data
*
dataCopy
= data
data
data
char * data = dataCopy;
char * data = dataCopy;
char
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(19,13,0)
(10,13,0)
(40,27,0)
(8,15,0)
(50,47,0)
(6,8,0)
(30,18,0)
(24,14,0)
(47,31,0)
(0,46,0)
(16,10,0)
(4,40,0)
(43,19,0)
(8,28,0)
(44,9,0)
(49,27,0)
(20,19,0)
(47,26,0)
(42,28,0)
(14,13,0)
(47,15,0)
(25,27,0)
(5,9,0)
(28,1,0)
(9,10,0)
(36,13,0)
(41,46,0)
(33,10,0)
(15,8,0)
(26,18,0)
(28,14,0)
(21,8,0)
(29,46,0)
(40,10,0)
(38,46,0)
(47,9,0)
(1,28,0)
(39,25,0)
(10,19,0)
(27,13,0)
(12,1,0)
(34,45,0)
(7,14,0)
(25,40,0)
(26,14,0)
(48,45,0)
(46,27,0)
(15,47,0)
(11,15,0)
(2,26,0)
(35,14,0)
(9,28,0)
(17,25,0)
(3,46,0)
(37,13,0)
(45,26,0)
(9,47,0)
(22,27,0)
(1,10,0)
(32,40,0)
(18,26,0)
(47,26,1)
(19,20,1)
(15,8,1)
(4,45,1)
(10,19,1)
(45,26,1)
(48,26,1)
(21,6,1)
(8,28,1)
(9,28,1)
(25,39,1)
(17,40,1)
(40,32,1)
(41,25,1)
(0,3,1)
(34,48,1)
(5,44,1)
(28,1,1)
(2,28,1)
(26,18,1)
(47,9,1)
(38,41,1)
(3,38,1)
(9,10,1)
(30,2,1)
(39,17,1)
(29,0,1)
(12,42,1)
(1,12,1)
(47,15,1)
(46,29,1)
(32,4,1)
(6,11,1)
(20,43,1)
(45,34,1)
(33,16,1)
(8,21,1)
(25,40,1)
(23,46,1)
(44,45,1)
(50,9,1)
(11,50,1)
(1,10,1)
(16,19,1)
(42,10,1)
(10,33,1)
(40,10,1)
(18,30,1)
(9,5,1)
(4,47,1)
(10,19,2)
(15,8,2)
(26,18,2)
(11,45,2)
(40,10,2)
(45,26,2)
(9,45,2)
(1,10,2)
(47,9,2)
(8,28,2)
(44,45,2)
(47,45,2)
(6,45,2)
(15,45,2)
(5,45,2)
(47,15,2)
(8,45,2)
(21,45,2)
(47,26,2)
(9,10,2)
(25,40,2)
(50,45,2)
(28,1,2)
(9,28,2)
-----------------------------------
(0,COMMAND_ARG3)
(1,strlen(data)
(2,environment)
(3,COMMAND_ARG1)
(4,dataCopy)
(5,dataLen)
(6,dataLen)
(7,dataLen)
(8,dataLen-1)
(9,data+dataLen)
(10,data = dataBuffer)
(11,100)
(12,data)
(13,)
(14,)
(15,100-dataLen-1)
(16,data)
(17,data)
(18,GETENV(ENV_VARIABLE)
(19,dataBuffer[100] = COMMAND_ARG2)
(20,COMMAND_ARG2)
(21,1)
(22,dataCopy)
(23,RET)
(24,environment)
(25,* data = dataCopy)
(26,* environment = GETENV(ENV_VARIABLE)
(27,)
(28,dataLen = strlen(data)
(29,NULL)
(30,ENV_VARIABLE)
(31,)
(32,data)
(33,dataBuffer)
(34,NULL)
(35,if (environment != NULL)
(36,data)
(37,dataBuffer)
(38,COMMAND_INT)
(39,dataCopy)
(40,* dataCopy = data)
(41,COMMAND_INT)
(42,dataLen)
(43,dataBuffer)
(44,data)
(45,environment != NULL)
(46,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(47,strncat(data+dataLen, environment, 100-dataLen-1)
(48,environment)
(49,data)
(50,environment)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^