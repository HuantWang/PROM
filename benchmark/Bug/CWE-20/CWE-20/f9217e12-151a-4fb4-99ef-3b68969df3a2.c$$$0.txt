-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_42_bad()
{
    char * data;
    data = NULL;
    data = badSource(data);
    {
        char source[10+1] = SRC_STRING;
        /* Copy length + 1 to include NUL terminator from source */
        /* POTENTIAL FLAW: data may not have enough space to hold source */
        strncpy(data, source, strlen(source) + 1);
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
28,29
29,30
29,31
31,32
31,33
31,34
33,34
34,35
34,36
37,38
38,39
40,41
41,42
41,43
41,44
41,45
42,43
44,45
46,47
48,49
48,50
49,50
49,51
50,51
52,53
55,56
56,57
56,58
57,58
59,60
61,62
62,63
62,64
63,64
65,66
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,30,32,35,36,39,43,45,47,51,53,54,58,60,64,66
-----computeFrom-----
13,14
13,15
19,20
19,21
34,35
34,36
48,49
48,50
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;BinaryExpression;LiteralExpression;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_42_bad(){    char * data;    data = NULL;    data = badSource(data);    {        char source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        strncpy(data, source, strlen(source) + 1);        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_42_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_42_bad
{    char * data;    data = NULL;    data = badSource(data);    {        char source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        strncpy(data, source, strlen(source) + 1);        printLine(data);        free(data);    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        strncpy(data, source, strlen(source) + 1);        printLine(data);        free(data);    }
char source[10+1] = SRC_STRING;
char source[10+1] = SRC_STRING;
char
source[10+1] = SRC_STRING
source
[10+1]
10+1
10
1
= SRC_STRING
SRC_STRING
SRC_STRING
strncpy(data, source, strlen(source) + 1);
strncpy(data, source, strlen(source) + 1)
strncpy
strncpy
data
data
source
source
strlen(source) + 1
strlen(source)
strlen
strlen
source
source
1
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(13,5,0)
(5,20,0)
(3,16,0)
(17,24,0)
(10,12,0)
(4,22,0)
(9,12,0)
(8,13,0)
(22,20,0)
(19,8,0)
(24,1,0)
(0,22,0)
(18,12,0)
(25,5,0)
(18,8,0)
(6,22,0)
(1,20,0)
(4,5,0)
(13,1,0)
(15,1,0)
(11,20,0)
(12,1,0)
(23,13,0)
(13,12,0)
(16,1,0)
(21,18,0)
(7,4,0)
(24,5,0)
(16,5,0)
(8,18,0)
(5,4,0)
(13,8,0)
(2,13,0)
(16,3,1)
(18,12,1)
(8,19,1)
(12,9,1)
(21,23,1)
(3,13,1)
(5,4,1)
(4,22,1)
(18,21,1)
(13,8,1)
(10,5,1)
(16,5,1)
(8,18,1)
(24,17,1)
(25,22,1)
(6,0,1)
(19,18,1)
(13,12,1)
(4,7,1)
(22,6,1)
(13,5,1)
(24,5,1)
(23,2,1)
(17,16,1)
(14,24,1)
(7,25,1)
(2,12,1)
(9,10,1)
(16,5,2)
(4,22,2)
(5,4,2)
(13,8,2)
(24,5,2)
(13,12,2)
(13,5,2)
(8,18,2)
(18,12,2)
-----------------------------------
(0,data)
(1,)
(2,data)
(3,data)
(4,badSource(data)
(5,data = badSource(data)
(6,NULL)
(7,data)
(8,strlen(source)
(9,SRC_STRING)
(10,source)
(11,data)
(12,source[10+1] = SRC_STRING)
(13,strncpy(data, source, strlen(source)
(14,RET)
(15,source)
(16,printLine(data)
(17,data)
(18,strlen(source)
(19,1)
(20,)
(21,source)
(22,data = NULL)
(23,source)
(24,free(data)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^