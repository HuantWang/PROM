-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_loop_02_bad()
{
    wchar_t * data;
    data = NULL;
    if(1)
    {
        {
            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (dataBuffer == NULL) {exit(-1);}
            wmemset(dataBuffer, L'A', 100-1);
            dataBuffer[100-1] = L'\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        size_t i;
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with 'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        for (i = 0; i < 100; i++)
        {
            data[i] = source[i];
        }
        /* Ensure the destination buffer is null terminated */
        data[100-1] = L'\0';
        printWLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
20,21
21,22
21,23
21,24
21,25
21,26
22,23
23,24
23,25
25,26
25,27
25,28
28,29
29,30
29,31
30,31
30,32
32,33
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
43,44
43,45
44,45
44,46
45,46
47,48
49,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
57,60
57,61
58,59
60,61
63,64
63,65
66,67
67,68
67,69
68,69
68,70
69,70
71,72
71,73
75,76
76,77
76,78
77,78
79,80
79,81
80,81
83,84
83,85
83,86
83,87
83,88
83,89
83,90
84,85
85,86
85,87
86,87
88,89
90,91
91,92
91,93
93,94
93,95
95,96
97,98
98,99
98,100
98,101
98,102
99,100
101,102
104,105
104,106
107,108
108,109
108,110
109,110
109,111
110,111
112,113
112,114
116,117
116,118
116,119
116,120
117,118
118,119
118,120
119,120
122,123
122,124
123,124
126,127
127,128
129,130
130,131
131,132
131,133
132,133
132,134
133,134
135,136
137,138
137,139
138,139
140,141
142,143
143,144
143,145
144,145
144,146
145,146
147,148
147,149
151,152
152,153
152,154
153,154
155,156
-----nextToken-----
2,4,8,10,11,15,17,19,24,26,27,31,33,36,38,41,42,46,48,53,55,59,61,62,64,65,70,72,73,74,78,81,82,87,89,92,94,96,100,102,103,105,106,111,113,114,115,120,121,124,125,128,134,136,139,141,146,148,149,150,154,156
-----computeFrom-----
13,14
13,15
37,38
37,39
44,45
44,46
63,64
63,65
67,68
67,69
71,72
71,73
76,77
76,78
79,80
79,81
104,105
104,106
108,109
108,110
112,113
112,114
118,119
118,120
122,123
122,124
131,132
131,133
143,144
143,145
147,148
147,149
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_loop_02_bad(){    wchar_t * data;    data = NULL;    if(1)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = L'\0';        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_wchar_t_loop_02_bad()
CWE124_Buffer_Underwrite__malloc_wchar_t_loop_02_bad
{    wchar_t * data;    data = NULL;    if(1)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = L'\0';        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(1)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
1
{        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBuffer, L'A', 100-1);
wmemset(dataBuffer, L'A', 100-1)
wmemset
wmemset
dataBuffer
dataBuffer
L'A'
100-1
100
1
dataBuffer[100-1] = L'\0';
dataBuffer[100-1] = L'\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
L'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        size_t i;        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        for (i = 0; i < 100; i++)        {            data[i] = source[i];        }        /* Ensure the destination buffer is null terminated */        data[100-1] = L'\0';        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
size_t i;
size_t i;
size_t
size_t
i
i
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
for (i = 0; i < 100; i++)        {            data[i] = source[i];        }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{            data[i] = source[i];        }
data[i] = source[i];
data[i] = source[i]
data[i]
data
data
i
i
source[i]
source
source
i
i
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(4,43,0)
(57,11,0)
(37,44,0)
(31,33,0)
(53,6,0)
(32,57,0)
(30,11,0)
(33,5,0)
(23,57,0)
(58,3,0)
(27,57,0)
(36,28,0)
(52,29,0)
(51,53,0)
(19,8,0)
(20,16,0)
(29,11,0)
(8,2,0)
(34,49,0)
(41,5,0)
(2,8,0)
(41,7,0)
(15,44,0)
(26,43,0)
(24,37,0)
(49,31,0)
(39,57,0)
(28,29,0)
(48,31,0)
(43,5,0)
(12,17,0)
(10,8,0)
(8,10,0)
(1,33,0)
(16,44,0)
(33,31,0)
(31,17,0)
(22,44,0)
(47,5,0)
(45,3,0)
(7,41,0)
(49,29,0)
(3,54,0)
(10,41,0)
(0,17,0)
(54,3,0)
(42,28,0)
(9,29,0)
(17,21,0)
(55,16,0)
(53,51,0)
(3,44,0)
(46,51,0)
(5,41,0)
(35,57,0)
(25,33,0)
(18,11,0)
(5,17,0)
(41,10,0)
(49,57,0)
(28,54,0)
(54,50,0)
(28,31,0)
(28,44,0)
(14,17,0)
(38,2,0)
(0,53,1)
(22,15,1)
(46,43,1)
(48,0,1)
(0,43,1)
(25,48,1)
(35,16,1)
(20,44,1)
(31,33,1)
(10,8,1)
(36,42,1)
(41,7,1)
(47,13,1)
(34,35,1)
(27,13,1)
(38,19,1)
(29,52,1)
(45,58,1)
(33,5,1)
(49,34,1)
(44,22,1)
(33,1,1)
(52,9,1)
(24,54,1)
(3,44,1)
(40,49,1)
(43,5,1)
(58,28,1)
(51,46,1)
(16,44,1)
(55,20,1)
(4,5,1)
(20,37,1)
(49,31,1)
(16,55,1)
(37,44,1)
(1,25,1)
(5,41,1)
(49,29,1)
(28,36,1)
(41,10,1)
(37,24,1)
(8,2,1)
(2,38,1)
(28,44,1)
(19,47,1)
(27,31,1)
(53,51,1)
(54,3,1)
(28,31,1)
(3,45,1)
(26,4,1)
(28,29,1)
(15,27,1)
(43,26,1)
(13,29,1)
(42,16,1)
(10,13,2)
(20,16,2)
(38,13,2)
(26,13,2)
(24,16,2)
(49,31,2)
(28,29,2)
(2,13,2)
(53,51,2)
(4,13,2)
(45,16,2)
(16,16,2)
(28,44,2)
(10,8,2)
(54,16,2)
(43,5,2)
(41,10,2)
(51,43,2)
(1,13,2)
(28,31,2)
(54,3,2)
(37,16,2)
(42,16,2)
(31,13,2)
(8,2,2)
(0,13,2)
(33,5,2)
(58,16,2)
(3,16,2)
(8,13,2)
(41,7,2)
(41,13,2)
(43,13,2)
(48,13,2)
(47,13,2)
(25,13,2)
(16,44,2)
(3,44,2)
(31,33,2)
(5,13,2)
(55,16,2)
(28,16,2)
(46,43,2)
(33,13,2)
(37,44,2)
(19,13,2)
(5,41,2)
(49,29,2)
(36,16,2)
(53,43,2)
-----------------------------------
(0,'\\\\0')
(1,8)
(2,sizeof(wchar_t)
(3,source[i])
(4,dataBuffer)
(5,* dataBuffer = (wchar_t *)
(6,)
(7,wchar_t *)
(8,100*sizeof(wchar_t)
(9,data)
(10,malloc(100*sizeof(wchar_t)
(11,)
(12,if (dataBuffer == NULL)
(13,1)
(14,dataBuffer)
(15,i)
(16,i < 100)
(17,)
(18,if(1)
(19,100)
(20,i)
(21,)
(22,0)
(23,i)
(24,i)
(25,dataBuffer)
(26,NULL)
(27,'\\\\0')
(28,data[i])
(29,data = NULL)
(30,data)
(31,data = dataBuffer - 8)
(32,for (i = 0; i < 100; i++)
(33,dataBuffer - 8)
(34,data)
(35,'\\\\0')
(36,i)
(37,i++)
(38,wchar_t)
(39,source)
(40,RET)
(41,(wchar_t *)
(42,data)
(43,dataBuffer == NULL)
(44,i = 0)
(45,i)
(46,1)
(47,dataBuffer)
(48,data)
(49,printWLine(data)
(50,)
(51,-1)
(52,NULL)
(53,exit(-1)
(54,data[i] = source[i])
(55,100)
(56,\'\\\\0\')
(57,)
(58,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^