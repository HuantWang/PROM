-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_postinc_02_bad()
{
    short data;
    data = 0;
    if(1)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
    }
    if(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
29,30
29,31
31,32
32,33
32,34
32,35
33,34
34,35
35,36
37,38
38,39
38,40
40,41
40,42
42,43
43,44
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,30,36,39,41,44,48,50
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_postinc_02_bad(){    short data;    data = 0;    if(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__short_fscanf_postinc_02_bad()
CWE190_Integer_Overflow__short_fscanf_postinc_02_bad
{    short data;    data = 0;    if(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }    if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
1
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
if(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(22,16,0)
(16,12,0)
(13,7,0)
(8,16,0)
(7,11,0)
(18,0,0)
(6,0,0)
(0,25,0)
(11,4,0)
(1,6,0)
(20,8,0)
(5,18,0)
(6,11,0)
(9,7,0)
(10,11,0)
(23,4,0)
(18,7,0)
(15,11,0)
(7,0,0)
(8,11,0)
(19,0,0)
(17,16,0)
(16,8,0)
(2,4,0)
(14,4,0)
(18,7,1)
(6,1,1)
(8,20,1)
(21,16,1)
(8,11,1)
(5,7,1)
(16,8,1)
(18,5,1)
(7,11,1)
(22,3,1)
(1,21,1)
(17,22,1)
(7,9,1)
(20,17,1)
(21,3,1)
(24,21,1)
(6,11,1)
(13,6,1)
(10,15,1)
(24,18,1)
(11,10,1)
(9,13,1)
(3,11,1)
(22,3,2)
(7,11,2)
(16,3,2)
(8,11,2)
(9,21,2)
(16,8,2)
(5,21,2)
(13,21,2)
(6,21,2)
(6,11,2)
(20,3,2)
(8,3,2)
(18,21,2)
(18,7,2)
(1,21,2)
(17,3,2)
(7,21,2)
-----------------------------------
(0,)
(1,data)
(2,if(1)
(3,1)
(4,)
(5,result)
(6,data++)
(7,result = data)
(8,&data)
(9,data)
(10,0)
(11,data = 0)
(12,)
(13,result)
(14,if(1)
(15,data)
(16,fscanf (stdin, "%hd", &data)
(17,"%hd")
(18,printIntLine(result)
(19,result)
(20,data)
(21,1)
(22,stdin)
(23,data)
(24,RET)
(25,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^