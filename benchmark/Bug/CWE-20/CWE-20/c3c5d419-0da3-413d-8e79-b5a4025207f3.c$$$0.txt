-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_42_bad()
{
    char * data;
    data = NULL;
    data = badSource(data);
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */
        memmove(data, source, 100*sizeof(char));
        data[100-1] = '\0'; /* Ensure the destination buffer is null terminated */
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
27,32
27,33
27,34
28,29
29,30
29,31
31,32
31,33
33,34
35,36
36,37
36,38
36,39
36,40
37,38
39,40
42,43
42,44
45,46
46,47
46,48
47,48
47,49
48,49
50,51
50,52
54,55
55,56
55,57
55,58
55,59
56,57
58,59
60,61
62,63
62,64
64,65
65,66
65,67
68,69
69,70
69,71
70,71
70,72
71,72
73,74
73,75
77,78
78,79
78,80
79,80
81,82
83,84
84,85
84,86
85,86
87,88
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,30,32,34,38,40,41,43,44,49,51,52,53,57,59,61,63,66,67,72,74,75,76,80,82,86,88
-----computeFrom-----
13,14
13,15
19,20
19,21
42,43
42,44
46,47
46,48
50,51
50,52
62,63
62,64
69,70
69,71
73,74
73,75
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_42_bad(){    char * data;    data = NULL;    data = badSource(data);    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        memmove(data, source, 100*sizeof(char));        data[100-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_42_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_42_bad
{    char * data;    data = NULL;    data = badSource(data);    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        memmove(data, source, 100*sizeof(char));        data[100-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        memmove(data, source, 100*sizeof(char));        data[100-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
memmove(data, source, 100*sizeof(char));
memmove(data, source, 100*sizeof(char))
memmove
memmove
data
data
source
source
100*sizeof(char)
100
sizeof(char)
char
char

data[100-1] = '\0';
data[100-1] = '\0'
data[100-1]
data
data
100-1
100
1
'\0'
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(36,24,0)
(21,1,0)
(12,30,0)
(34,19,0)
(26,22,0)
(30,40,0)
(1,24,0)
(35,19,0)
(15,12,0)
(35,30,0)
(42,16,0)
(42,8,0)
(20,9,0)
(26,9,0)
(31,22,0)
(23,16,0)
(33,30,0)
(10,30,0)
(28,35,0)
(32,8,0)
(5,10,0)
(43,30,0)
(4,42,0)
(38,1,0)
(35,9,0)
(22,40,0)
(17,26,0)
(19,35,0)
(0,19,0)
(39,10,0)
(10,5,0)
(37,35,0)
(18,10,0)
(16,30,0)
(8,42,0)
(6,33,0)
(11,34,0)
(24,1,0)
(19,34,0)
(41,43,0)
(3,30,0)
(24,9,0)
(12,9,0)
(9,40,0)
(33,9,0)
(9,26,0)
(25,22,0)
(27,5,0)
(2,8,0)
(24,43,0)
(14,5,0)
(13,40,0)
(26,22,1)
(6,43,1)
(33,9,1)
(11,0,1)
(37,28,1)
(5,27,1)
(39,9,1)
(28,16,1)
(23,42,1)
(1,38,1)
(19,34,1)
(9,26,1)
(43,41,1)
(38,21,1)
(41,24,1)
(2,32,1)
(36,35,1)
(14,18,1)
(31,25,1)
(24,9,1)
(15,33,1)
(42,8,1)
(35,19,1)
(34,11,1)
(33,6,1)
(7,12,1)
(17,20,1)
(26,17,1)
(4,10,1)
(32,4,1)
(8,2,1)
(12,9,1)
(21,36,1)
(18,39,1)
(16,23,1)
(10,5,1)
(20,22,1)
(35,9,1)
(12,15,1)
(24,1,1)
(0,37,1)
(27,14,1)
(22,31,1)
(42,8,2)
(35,9,2)
(26,22,2)
(10,5,2)
(9,26,2)
(24,1,2)
(33,9,2)
(24,9,2)
(19,34,2)
(35,19,2)
(12,9,2)
-----------------------------------
(0,100)
(1,100-1)
(2,1)
(3,source)
(4,source)
(5,100-1)
(6,data)
(7,RET)
(8,100-1)
(9,data = badSource(data)
(10,memset(source, 'C', 100-1)
(11,char)
(12,free(data)
(13,data)
(14,100)
(15,data)
(16,source[100-1] = '\\\\0')
(17,data)
(18,'C')
(19,100*sizeof(char)
(20,data)
(21,100)
(22,data = NULL)
(23,'\\\\0')
(24,data[100-1])
(25,data)
(26,badSource(data)
(27,1)
(28,data)
(29,memset(source, \'C\', 100-1)
(30,)
(31,NULL)
(32,100)
(33,printLine(data)
(34,sizeof(char)
(35,memmove(data, source, 100*sizeof(char)
(36,data)
(37,source)
(38,1)
(39,source)
(40,)
(41,'\\\\0')
(42,source[100-1])
(43,data[100-1] = '\\\\0')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^