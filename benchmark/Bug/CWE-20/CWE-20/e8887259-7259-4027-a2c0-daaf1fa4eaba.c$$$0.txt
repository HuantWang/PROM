-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_03_bad()
{
    unsigned int data;
    data = 0;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
33,34
33,35
36,37
37,38
37,39
37,40
38,39
39,40
40,41
42,43
43,44
43,45
45,46
45,47
47,48
48,49
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,8,10,14,15,18,19,24,27,28,31,34,35,41,44,46,49,53,55
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_03_bad(){    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_preinc_03_bad()
CWE190_Integer_Overflow__unsigned_int_rand_preinc_03_bad
{    unsigned int data;    data = 0;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
5==5
5
5
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(18,5,0)
(25,11,0)
(20,8,0)
(7,16,0)
(10,7,0)
(16,12,0)
(24,0,0)
(1,11,0)
(26,12,0)
(19,16,0)
(17,12,0)
(2,12,0)
(5,18,0)
(23,5,0)
(18,15,0)
(1,7,0)
(15,18,0)
(8,5,0)
(9,1,0)
(8,16,0)
(28,18,0)
(8,11,0)
(22,0,0)
(29,7,0)
(21,16,0)
(13,3,0)
(6,3,0)
(5,14,0)
(18,28,0)
(7,11,0)
(7,5,0)
(11,4,0)
(18,15,1)
(7,10,1)
(8,5,1)
(29,8,1)
(1,7,1)
(5,18,1)
(9,7,1)
(3,13,1)
(16,19,1)
(6,5,1)
(10,29,1)
(8,20,1)
(23,0,1)
(19,21,1)
(0,22,1)
(20,3,1)
(22,24,1)
(27,3,1)
(18,28,1)
(24,16,1)
(13,6,1)
(15,23,1)
(8,16,1)
(1,9,1)
(7,5,1)
(7,16,1)
(6,0,1)
(27,1,1)
(7,3,2)
(15,0,2)
(10,3,2)
(18,0,2)
(8,5,2)
(1,3,2)
(8,16,2)
(7,5,2)
(9,3,2)
(5,18,2)
(23,0,2)
(29,3,2)
(18,28,2)
(8,3,2)
(20,3,2)
(1,7,2)
(18,15,2)
(5,0,2)
(7,16,2)
-----------------------------------
(0,5==5)
(1,printUnsignedLine(result)
(2,data)
(3,5==5)
(4,)
(5,data = (unsigned int)
(6,5)
(7,result = data)
(8,++data)
(9,result)
(10,data)
(11,)
(12,)
(13,5)
(14,)
(15,RAND32()
(16,data = 0)
(17,if(5==5)
(18,(unsigned int)
(19,0)
(20,data)
(21,data)
(22,5)
(23,data)
(24,5)
(25,result)
(26,if(5==5)
(27,RET)
(28,unsigned int)
(29,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^