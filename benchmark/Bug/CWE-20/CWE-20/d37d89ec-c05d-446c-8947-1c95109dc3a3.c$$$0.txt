-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_34_bad()
{
    wchar_t * data;
    CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_34_unionType myUnion;
    data = NULL;
    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */
    data = (wchar_t *)malloc(50*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    data[0] = L'\0'; /* null terminate */
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        {
            wchar_t source[100];
            wmemset(source, L'C', 100-1); /* fill with L'C's */
            source[100-1] = L'\0'; /* null terminate */
            /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */
            SNPRINTF(data, 100, L"%s", source);
            printWLine(data);
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
57,59
58,59
62,63
63,64
63,65
64,65
64,66
65,66
68,69
70,71
70,72
71,72
72,73
72,74
74,75
74,76
74,77
77,78
78,79
78,80
79,80
82,83
82,84
82,85
82,86
82,87
82,88
83,84
84,85
84,86
86,87
86,88
88,89
90,91
91,92
91,93
91,94
91,95
92,93
94,95
97,98
97,99
100,101
101,102
101,103
102,103
102,104
103,104
105,106
105,107
109,110
110,111
110,112
110,113
110,114
110,115
111,112
113,114
117,118
119,120
120,121
120,122
121,122
123,124
125,126
126,127
126,128
127,128
129,130
-----nextToken-----
2,4,8,10,11,15,17,21,23,27,30,32,35,37,40,41,45,47,52,54,59,60,61,66,67,69,73,75,76,80,81,85,87,89,93,95,96,98,99,104,106,107,108,112,114,115,116,118,122,124,128,130
-----computeFrom-----
19,20
19,21
25,26
25,27
36,37
36,38
43,44
43,45
56,57
56,58
63,64
63,65
97,98
97,99
101,102
101,103
105,106
105,107
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_34_bad(){    wchar_t * data;    CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_34_unionType myUnion;    data = NULL;    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (wchar_t *)malloc(50*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    data[0] = L'\0'; /* null terminate */    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t source[100];            wmemset(source, L'C', 100-1); /* fill with L'C's */            source[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */            SNPRINTF(data, 100, L"%s", source);            printWLine(data);            free(data);        }    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_34_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_34_bad
{    wchar_t * data;    CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_34_unionType myUnion;    data = NULL;    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (wchar_t *)malloc(50*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    data[0] = L'\0'; /* null terminate */    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t source[100];            wmemset(source, L'C', 100-1); /* fill with L'C's */            source[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */            SNPRINTF(data, 100, L"%s", source);            printWLine(data);            free(data);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_34_unionType myUnion;
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_34_unionType myUnion;
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_34_unionType
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_34_unionType
myUnion
myUnion
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)malloc(50*sizeof(wchar_t));
data = (wchar_t *)malloc(50*sizeof(wchar_t))
data
data
(wchar_t *)malloc(50*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(50*sizeof(wchar_t))
malloc
malloc
50*sizeof(wchar_t)
50
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        {            wchar_t source[100];            wmemset(source, L'C', 100-1); /* fill with L'C's */            source[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */            SNPRINTF(data, 100, L"%s", source);            printWLine(data);            free(data);        }    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            wchar_t source[100];            wmemset(source, L'C', 100-1); /* fill with L'C's */            source[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */            SNPRINTF(data, 100, L"%s", source);            printWLine(data);            free(data);        }
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
SNPRINTF(data, 100, L"%s", source);
SNPRINTF(data, 100, L"%s", source)
SNPRINTF
SNPRINTF
data
data
100
L"%s"
source
source
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(24,21,0)
(13,34,0)
(0,9,0)
(31,13,0)
(16,27,0)
(30,38,0)
(22,34,0)
(10,38,0)
(13,4,0)
(5,9,0)
(37,1,0)
(34,6,0)
(14,18,0)
(27,2,0)
(19,4,0)
(9,2,0)
(1,35,0)
(25,37,0)
(27,37,0)
(29,4,0)
(8,2,0)
(43,2,0)
(6,2,0)
(12,2,0)
(38,30,0)
(15,32,0)
(28,25,0)
(34,22,0)
(23,2,0)
(18,27,0)
(20,33,0)
(17,22,0)
(11,1,0)
(33,4,0)
(24,32,0)
(36,6,0)
(39,34,0)
(37,2,0)
(40,25,0)
(38,35,0)
(35,1,0)
(41,18,0)
(4,6,0)
(26,30,0)
(33,34,0)
(7,22,0)
(35,38,0)
(42,37,0)
(1,11,0)
(1,37,0)
(32,24,0)
(13,34,1)
(30,26,1)
(17,39,1)
(3,13,1)
(33,34,1)
(20,29,1)
(10,42,1)
(40,28,1)
(27,37,1)
(37,1,1)
(15,25,1)
(18,41,1)
(7,17,1)
(22,7,1)
(29,34,1)
(34,22,1)
(41,14,1)
(43,25,1)
(27,16,1)
(26,10,1)
(13,31,1)
(16,18,1)
(31,33,1)
(9,5,1)
(25,40,1)
(35,38,1)
(39,27,1)
(43,24,1)
(33,20,1)
(14,43,1)
(24,32,1)
(38,30,1)
(32,15,1)
(25,37,1)
(1,11,1)
(42,9,1)
(28,37,1)
(5,0,1)
(1,35,1)
(24,32,2)
(24,25,2)
(1,11,2)
(38,30,2)
(33,34,2)
(1,35,2)
(32,25,2)
(37,1,2)
(25,37,2)
(35,38,2)
(15,25,2)
(34,22,2)
(13,34,2)
(27,37,2)
-----------------------------------
(0,data)
(1,(wchar_t *)
(2,)
(3,RET)
(4,)
(5,NULL)
(6,)
(7,unionSecond)
(8,myUnion)
(9,data = NULL)
(10,50)
(11,wchar_t *)
(12,data)
(13,free(data)
(14,myUnion)
(15,1)
(16,data)
(17,myUnion)
(18,myUnion.unionFirst)
(19,source)
(20,data)
(21,)
(22,myUnion.unionSecond)
(23,if (data == NULL)
(24,exit(-1)
(25,data == NULL)
(26,wchar_t)
(27,myUnion.unionFirst = data)
(28,data)
(29,'\\\\0')
(30,sizeof(wchar_t)
(31,data)
(32,-1)
(33,printWLine(data)
(34,* data = myUnion.unionSecond)
(35,malloc(50*sizeof(wchar_t)
(36,data)
(37,data = (wchar_t *)
(38,50*sizeof(wchar_t)
(39,data)
(40,NULL)
(41,unionFirst)
(42,data)
(43,'\\\\0')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^