-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_rand_postinc_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    short * dataPtr = (short *)dataVoidPtr;
    /* dereference dataPtr into data */
    short data = (*dataPtr);
    {
        /* POTENTIAL FLAW: Incrementing data could cause an overflow */
        data++;
        short result = data;
        printIntLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
35,37
35,38
36,37
37,38
38,39
40,41
41,42
41,43
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,39,42,44,47,51,53
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__short_rand_postinc_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    short * dataPtr = (short *)dataVoidPtr;    /* dereference dataPtr into data */    short data = (*dataPtr);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        short result = data;        printIntLine(result);    }}
void
CWE190_Integer_Overflow__short_rand_postinc_64b_badSink(void * dataVoidPtr)
CWE190_Integer_Overflow__short_rand_postinc_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    short * dataPtr = (short *)dataVoidPtr;    /* dereference dataPtr into data */    short data = (*dataPtr);    {        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        short result = data;        printIntLine(result);    }}
short * dataPtr = (short *)dataVoidPtr;
short * dataPtr = (short *)dataVoidPtr;
short
* dataPtr = (short *)dataVoidPtr
*
dataPtr
= (short *)dataVoidPtr
(short *)dataVoidPtr
short *
short
*
*
dataVoidPtr
dataVoidPtr
short data = (*dataPtr);
short data = (*dataPtr);
short
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Incrementing data could cause an overflow */        data++;        short result = data;        printIntLine(result);    }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(16,13,0)
(13,3,0)
(15,4,0)
(5,18,0)
(12,5,0)
(14,9,0)
(18,9,0)
(2,5,0)
(11,2,0)
(20,18,0)
(20,4,0)
(10,18,0)
(9,18,0)
(4,6,0)
(22,6,0)
(19,5,0)
(2,4,0)
(18,6,0)
(0,20,0)
(16,6,0)
(9,16,0)
(17,16,0)
(21,13,0)
(3,13,0)
(13,1,0)
(8,6,0)
(13,16,0)
(5,4,0)
(10,16,1)
(18,9,1)
(16,13,1)
(5,19,1)
(14,10,1)
(9,16,1)
(9,14,1)
(12,20,1)
(19,12,1)
(20,18,1)
(13,21,1)
(2,11,1)
(13,1,1)
(7,2,1)
(0,18,1)
(20,0,1)
(5,18,1)
(2,5,1)
(11,5,1)
(13,3,1)
(21,17,1)
(5,18,2)
(13,1,2)
(16,13,2)
(9,16,2)
(18,9,2)
(13,3,2)
(20,18,2)
(2,5,2)
-----------------------------------
(0,data)
(1,void * dataVoidPtr)
(2,printIntLine(result)
(3,short *)
(4,)
(5,result = data)
(6,)
(7,RET)
(8,dataPtr)
(9,*dataPtr)
(10,data)
(11,result)
(12,result)
(13,(short *)
(14,dataPtr)
(15,result)
(16,* dataPtr = (short *)
(17,dataPtr)
(18,data = (*dataPtr)
(19,data)
(20,data++)
(21,dataVoidPtr)
(22,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^