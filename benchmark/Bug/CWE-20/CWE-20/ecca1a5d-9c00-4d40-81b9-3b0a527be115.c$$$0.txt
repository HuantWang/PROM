-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_bad()
{
    unsigned int data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
33,35
34,35
37,38
38,39
38,40
38,41
39,40
40,41
41,42
43,44
44,45
44,46
46,47
46,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,36,42,45,47,50,54,56
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_bad(){    unsigned int data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_13_bad
{    unsigned int data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(17,16,0)
(20,14,0)
(28,3,0)
(22,16,0)
(16,29,0)
(2,11,0)
(0,28,0)
(21,1,0)
(5,0,0)
(11,14,0)
(23,0,0)
(1,11,0)
(27,14,0)
(1,28,0)
(4,28,0)
(10,4,0)
(7,11,0)
(16,22,0)
(26,14,0)
(19,22,0)
(9,16,0)
(4,0,0)
(15,18,0)
(8,18,0)
(0,11,0)
(6,13,0)
(12,13,0)
(22,11,0)
(25,28,0)
(17,18,1)
(0,11,1)
(24,4,1)
(16,22,1)
(6,12,1)
(8,15,1)
(13,6,1)
(18,8,1)
(21,13,1)
(1,21,1)
(4,10,1)
(15,11,1)
(10,0,1)
(22,19,1)
(12,16,1)
(4,0,1)
(22,11,1)
(2,7,1)
(11,2,1)
(1,11,1)
(19,9,1)
(9,17,1)
(0,5,1)
(24,13,1)
(5,23,1)
(12,18,1)
(23,1,1)
(16,22,2)
(17,18,2)
(22,18,2)
(21,13,2)
(10,13,2)
(0,13,2)
(1,13,2)
(0,11,2)
(4,0,2)
(23,13,2)
(4,13,2)
(9,18,2)
(5,13,2)
(22,11,2)
(16,18,2)
(1,11,2)
(19,18,2)
-----------------------------------
(0,result = data)
(1,++data)
(2,0)
(3,)
(4,printUnsignedLine(result)
(5,data)
(6,5)
(7,data)
(8,5)
(9,"%u")
(10,result)
(11,data = 0)
(12,GLOBAL_CONST_FIVE)
(13,GLOBAL_CONST_FIVE==5)
(14,)
(15,GLOBAL_CONST_FIVE)
(16,fscanf (stdin, "%u", &data)
(17,stdin)
(18,GLOBAL_CONST_FIVE==5)
(19,data)
(20,data)
(21,data)
(22,&data)
(23,result)
(24,RET)
(25,result)
(26,if(GLOBAL_CONST_FIVE==5)
(27,if(GLOBAL_CONST_FIVE==5)
(28,)
(29,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^