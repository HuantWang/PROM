-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__CWE135_66_bad()
{
    void * data;
    void * dataArray[5];
    data = NULL;
    {
        wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));
        if (dataBadBuffer == NULL) {exit(-1);}
        wmemset(dataBadBuffer, L'A', 50-1);
        dataBadBuffer[50-1] = L'\0';
        /* POTENTIAL FLAW: Set data to point to a wide string */
        data = (void *)dataBadBuffer;
    }
    /* put data in array */
    dataArray[2] = data;
    CWE122_Heap_Based_Buffer_Overflow__CWE135_66b_badSink(dataArray);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
18,19
20,21
21,22
21,23
22,23
24,25
26,27
26,28
26,29
26,30
26,31
27,28
28,29
28,30
30,31
30,32
30,33
33,34
34,35
34,36
35,36
35,37
37,38
39,40
39,41
40,41
42,43
42,44
44,45
45,46
45,47
48,49
48,50
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
59,60
61,62
62,63
62,64
62,65
62,66
63,64
65,66
68,69
68,70
71,72
72,73
72,74
73,74
73,75
74,75
76,77
76,78
80,81
81,82
81,83
82,83
84,85
84,86
85,86
85,87
87,88
89,90
91,92
92,93
92,94
93,94
93,95
94,95
97,98
99,100
100,101
100,102
101,102
103,104
-----nextToken-----
2,4,8,10,11,14,16,17,19,23,25,29,31,32,36,38,41,43,46,47,51,53,58,60,64,66,67,69,70,75,77,78,79,83,86,88,90,95,96,98,102,104
-----computeFrom-----
21,22
21,23
42,43
42,44
49,50
49,51
68,69
68,70
72,73
72,74
76,77
76,78
81,82
81,83
92,93
92,94
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__CWE135_66_bad(){    void * data;    void * dataArray[5];    data = NULL;    {        wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));        if (dataBadBuffer == NULL) {exit(-1);}        wmemset(dataBadBuffer, L'A', 50-1);        dataBadBuffer[50-1] = L'\0';        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)dataBadBuffer;    }    /* put data in array */    dataArray[2] = data;    CWE122_Heap_Based_Buffer_Overflow__CWE135_66b_badSink(dataArray);}
void
CWE122_Heap_Based_Buffer_Overflow__CWE135_66_bad()
CWE122_Heap_Based_Buffer_Overflow__CWE135_66_bad
{    void * data;    void * dataArray[5];    data = NULL;    {        wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));        if (dataBadBuffer == NULL) {exit(-1);}        wmemset(dataBadBuffer, L'A', 50-1);        dataBadBuffer[50-1] = L'\0';        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)dataBadBuffer;    }    /* put data in array */    dataArray[2] = data;    CWE122_Heap_Based_Buffer_Overflow__CWE135_66b_badSink(dataArray);}
void * data;
void * data;
void
* data
*
data
void * dataArray[5];
void * dataArray[5];
void
* dataArray[5]
*
dataArray
[5]
5
data = NULL;
data = NULL
data
data
NULL
NULL
{        wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));        if (dataBadBuffer == NULL) {exit(-1);}        wmemset(dataBadBuffer, L'A', 50-1);        dataBadBuffer[50-1] = L'\0';        /* POTENTIAL FLAW: Set data to point to a wide string */        data = (void *)dataBadBuffer;    }
wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));
wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));
wchar_t
* dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t))
*
dataBadBuffer
= (wchar_t *)malloc(50*sizeof(wchar_t))
(wchar_t *)malloc(50*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(50*sizeof(wchar_t))
malloc
malloc
50*sizeof(wchar_t)
50
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBadBuffer == NULL) {exit(-1);}
dataBadBuffer == NULL
dataBadBuffer
dataBadBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBadBuffer, L'A', 50-1);
wmemset(dataBadBuffer, L'A', 50-1)
wmemset
wmemset
dataBadBuffer
dataBadBuffer
L'A'
50-1
50
1
dataBadBuffer[50-1] = L'\0';
dataBadBuffer[50-1] = L'\0'
dataBadBuffer[50-1]
dataBadBuffer
dataBadBuffer
50-1
50
1
L'\0'
data = (void *)dataBadBuffer;
data = (void *)dataBadBuffer
data
data
(void *)dataBadBuffer
void *
void
*
*
dataBadBuffer
dataBadBuffer
dataArray[2] = data;
dataArray[2] = data
dataArray[2]
dataArray
dataArray
2
data
data
CWE122_Heap_Based_Buffer_Overflow__CWE135_66b_badSink(dataArray);
CWE122_Heap_Based_Buffer_Overflow__CWE135_66b_badSink(dataArray)
CWE122_Heap_Based_Buffer_Overflow__CWE135_66b_badSink
CWE122_Heap_Based_Buffer_Overflow__CWE135_66b_badSink
dataArray
dataArray
-----joern-----
(2,9,0)
(18,6,0)
(30,31,0)
(14,21,0)
(33,14,0)
(29,33,0)
(34,38,0)
(31,21,0)
(8,14,0)
(19,38,0)
(15,9,0)
(4,37,0)
(6,1,0)
(10,14,0)
(38,34,0)
(6,33,0)
(8,6,0)
(28,3,0)
(26,5,0)
(22,28,0)
(28,22,0)
(1,6,0)
(34,36,0)
(37,8,0)
(20,21,0)
(9,21,0)
(33,36,0)
(5,33,0)
(12,37,0)
(35,17,0)
(32,4,0)
(24,36,0)
(11,21,0)
(37,21,0)
(23,4,0)
(38,17,0)
(0,14,0)
(25,5,0)
(36,24,0)
(16,8,0)
(7,22,0)
(36,33,0)
(6,8,0)
(36,34,0)
(13,14,0)
(17,38,0)
(23,32,1)
(13,28,1)
(29,9,1)
(12,4,1)
(26,33,1)
(31,30,1)
(36,24,1)
(27,31,1)
(37,12,1)
(5,33,1)
(25,26,1)
(32,8,1)
(6,18,1)
(37,8,1)
(13,5,1)
(9,2,1)
(19,29,1)
(36,34,1)
(30,37,1)
(22,7,1)
(7,5,1)
(28,22,1)
(6,1,1)
(16,13,1)
(33,36,1)
(4,23,1)
(18,16,1)
(35,19,1)
(38,17,1)
(2,15,1)
(6,33,1)
(17,35,1)
(34,38,1)
(8,6,1)
(5,25,1)
(28,22,2)
(6,1,2)
(34,38,2)
(6,33,2)
(37,8,2)
(36,34,2)
(7,5,2)
(22,5,2)
(33,36,2)
(8,6,2)
(5,33,2)
(38,17,2)
(28,5,2)
(36,24,2)
-----------------------------------
(0,dataBadBuffer)
(1,void *)
(2,NULL)
(3,)
(4,dataArray[2])
(5,dataBadBuffer == NULL)
(6,(void *)
(7,1)
(8,data = (void *)
(9,data = NULL)
(10,if (dataBadBuffer == NULL)
(11,data)
(12,data)
(13,'\\\\0')
(14,)
(15,data)
(16,data)
(17,sizeof(wchar_t)
(18,dataBadBuffer)
(19,50)
(20,dataArray)
(21,)
(22,-1)
(23,2)
(24,wchar_t *)
(25,NULL)
(26,dataBadBuffer)
(27,RET)
(28,exit(-1)
(29,dataBadBuffer)
(30,dataArray)
(31,CWE122_Heap_Based_Buffer_Overflow__CWE135_66b_badSink(dataArray)
(32,dataArray)
(33,* dataBadBuffer = (wchar_t *)
(34,malloc(50*sizeof(wchar_t)
(35,wchar_t)
(36,(wchar_t *)
(37,dataArray[2] = data)
(38,50*sizeof(wchar_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^