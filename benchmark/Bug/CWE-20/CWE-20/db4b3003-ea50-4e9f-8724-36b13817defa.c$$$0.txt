-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_memcpy_42_bad()
{
    wchar_t * data;
    data = (wchar_t *)malloc(100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    data = badSource(data);
    {
        wchar_t dest[50] = L"";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        memcpy(dest, data, wcslen(data)*sizeof(wchar_t));
        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */
        printWLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
44,45
44,46
45,46
47,48
47,49
48,49
50,51
52,53
52,54
52,55
52,56
52,57
53,54
54,55
54,56
56,57
56,58
56,59
58,59
60,61
62,63
63,64
63,65
63,66
63,67
64,65
66,67
68,69
70,71
70,72
71,72
71,73
72,73
74,75
76,77
77,78
77,79
80,81
81,82
81,83
82,83
82,84
83,84
85,86
85,87
89,90
90,91
90,92
91,92
93,94
95,96
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,46,49,51,55,57,59,61,65,67,69,73,75,78,79,84,86,87,88,92,94,98,100
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
70,71
70,72
81,82
81,83
85,86
85,87
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_memcpy_42_bad(){    wchar_t * data;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    data = badSource(data);    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        memcpy(dest, data, wcslen(data)*sizeof(wchar_t));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_memcpy_42_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_memcpy_42_bad
{    wchar_t * data;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    data = badSource(data);    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        memcpy(dest, data, wcslen(data)*sizeof(wchar_t));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = (wchar_t *)malloc(100*sizeof(wchar_t));
data = (wchar_t *)malloc(100*sizeof(wchar_t))
data
data
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        memcpy(dest, data, wcslen(data)*sizeof(wchar_t));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
memcpy(dest, data, wcslen(data)*sizeof(wchar_t));
memcpy(dest, data, wcslen(data)*sizeof(wchar_t))
memcpy
memcpy
dest
dest
data
data
wcslen(data)*sizeof(wchar_t)
wcslen(data)
wcslen
wcslen
data
data
sizeof(wchar_t)
wchar_t
wchar_t

dest[50-1] = L'\0';
dest[50-1] = L'\0'
dest[50-1]
dest
dest
50-1
50
1
L'\0'
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(5,33,0)
(4,13,0)
(28,2,0)
(8,9,0)
(31,10,0)
(24,30,0)
(36,21,0)
(29,13,0)
(17,7,0)
(13,3,0)
(33,3,0)
(16,27,0)
(34,3,0)
(2,3,0)
(32,37,0)
(33,31,0)
(1,33,0)
(19,3,0)
(37,2,0)
(21,20,0)
(10,31,0)
(7,2,0)
(2,5,0)
(4,2,0)
(37,17,0)
(17,9,0)
(18,37,0)
(12,27,0)
(7,17,0)
(22,33,0)
(27,16,0)
(23,16,0)
(17,37,0)
(30,2,0)
(20,38,0)
(35,4,0)
(30,13,0)
(5,2,0)
(11,1,0)
(6,13,0)
(31,23,0)
(14,1,0)
(16,23,0)
(9,17,0)
(15,7,0)
(25,5,0)
(20,21,0)
(0,16,0)
(23,31,0)
(37,13,0)
(31,33,0)
(0,22,1)
(31,23,1)
(36,1,1)
(18,6,1)
(4,2,1)
(23,16,1)
(28,20,1)
(30,2,1)
(1,14,1)
(5,33,1)
(4,35,1)
(26,30,1)
(27,12,1)
(25,28,1)
(31,10,1)
(9,8,1)
(37,2,1)
(37,17,1)
(33,31,1)
(28,1,1)
(24,4,1)
(16,27,1)
(1,33,1)
(21,36,1)
(8,7,1)
(12,0,1)
(7,15,1)
(5,25,1)
(32,18,1)
(29,37,1)
(20,21,1)
(30,24,1)
(17,7,1)
(35,29,1)
(14,11,1)
(17,9,1)
(6,2,1)
(11,33,1)
(7,2,1)
(15,32,1)
(2,5,1)
(31,23,2)
(33,31,2)
(23,16,2)
(2,5,2)
(37,2,2)
(17,7,2)
(20,21,2)
(37,17,2)
(1,33,2)
(7,2,2)
(17,9,2)
(5,33,2)
(16,27,2)
(4,2,2)
(21,1,2)
(30,2,2)
(36,1,2)
(31,10,2)
(20,1,2)
-----------------------------------
(0,100)
(1,data == NULL)
(2,data = badSource(data)
(3,)
(4,printWLine(data)
(5,badSource(data)
(6,"")
(7,wcslen(data)
(8,wchar_t)
(9,sizeof(wchar_t)
(10,wchar_t *)
(11,data)
(12,wchar_t)
(13,)
(14,NULL)
(15,data)
(16,100*sizeof(wchar_t)
(17,wcslen(data)
(18,dest)
(19,if (data == NULL)
(20,exit(-1)
(21,-1)
(22,data)
(23,malloc(100*sizeof(wchar_t)
(24,data)
(25,data)
(26,RET)
(27,sizeof(wchar_t)
(28,data)
(29,\\\'\\\\0\\\')
(30,free(data)
(31,(wchar_t *)
(32,data)
(33,data = (wchar_t *)
(34,data)
(35,data)
(36,1)
(37,memcpy(dest, data, wcslen(data)
(38,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^