-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_41_badSink(char * data)
{
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */
        memcpy(data, source, 100*sizeof(char));
        data[100-1] = '\0'; /* Ensure the destination buffer is null terminated */
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
11,14
11,15
11,16
11,17
11,18
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
26,28
29,30
30,31
30,32
31,32
31,33
32,33
34,35
34,36
38,39
39,40
39,41
39,42
39,43
40,41
42,43
44,45
46,47
46,48
48,49
49,50
49,51
52,53
53,54
53,55
54,55
54,56
55,56
57,58
57,59
61,62
62,63
62,64
63,64
65,66
67,68
68,69
68,70
69,70
71,72
-----nextToken-----
2,4,6,8,9,14,16,18,22,24,25,27,28,33,35,36,37,41,43,45,47,50,51,56,58,59,60,64,66,70,72
-----computeFrom-----
26,27
26,28
30,31
30,32
34,35
34,36
46,47
46,48
53,54
53,55
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_41_badSink(char * data){    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        memcpy(data, source, 100*sizeof(char));        data[100-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_41_badSink(char * data)
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_41_badSink
char * data
char
* data
*
data
{    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        memcpy(data, source, 100*sizeof(char));        data[100-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */        memcpy(data, source, 100*sizeof(char));        data[100-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
memcpy(data, source, 100*sizeof(char));
memcpy(data, source, 100*sizeof(char))
memcpy
memcpy
data
data
source
source
100*sizeof(char)
100
sizeof(char)
char
char

data[100-1] = '\0';
data[100-1] = '\0'
data[100-1]
data
data
100-1
100
1
'\0'
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(3,11,0)
(18,3,0)
(19,25,0)
(25,8,0)
(28,0,0)
(16,5,0)
(4,28,0)
(11,25,0)
(21,31,0)
(8,7,0)
(9,32,0)
(25,0,0)
(9,20,0)
(6,0,0)
(20,9,0)
(24,6,0)
(35,8,0)
(30,8,0)
(15,20,0)
(26,0,0)
(17,26,0)
(27,5,0)
(5,31,0)
(10,1,0)
(22,9,0)
(25,11,0)
(28,8,0)
(29,20,0)
(32,8,0)
(14,32,0)
(34,30,0)
(31,5,0)
(26,8,0)
(6,30,0)
(11,3,0)
(5,8,0)
(2,11,0)
(13,31,0)
(6,1,0)
(1,6,0)
(36,1,0)
(33,25,0)
(1,36,1)
(2,33,1)
(21,13,1)
(33,19,1)
(30,34,1)
(26,0,1)
(13,16,1)
(19,32,1)
(17,30,1)
(28,0,1)
(34,6,1)
(28,4,1)
(10,24,1)
(36,10,1)
(26,17,1)
(6,0,1)
(31,21,1)
(18,2,1)
(25,0,1)
(6,1,1)
(25,11,1)
(16,27,1)
(11,3,1)
(12,28,1)
(3,18,1)
(4,26,1)
(32,14,1)
(15,29,1)
(20,15,1)
(22,5,1)
(14,9,1)
(9,20,1)
(29,22,1)
(24,25,1)
(5,31,1)
(25,0,2)
(28,0,2)
(26,0,2)
(25,11,2)
(6,0,2)
(5,31,2)
(9,20,2)
(6,1,2)
(11,3,2)
-----------------------------------
(0,char * data)
(1,100-1)
(2,100)
(3,sizeof(char)
(4,data)
(5,memset(source, 'C', 100-1)
(6,data[100-1])
(7,)
(8,)
(9,source[100-1])
(10,100)
(11,100*sizeof(char)
(12,RET)
(13,100)
(14,'\\\\0')
(15,1)
(16,'C')
(17,data)
(18,char)
(19,data)
(20,100-1)
(21,1)
(22,source)
(23,memset(source, \'C\', 100-1)
(24,data)
(25,memcpy(data, source, 100*sizeof(char)
(26,printLine(data)
(27,source)
(28,free(data)
(29,100)
(30,data[100-1] = '\\\\0')
(31,100-1)
(32,source[100-1] = '\\\\0')
(33,source)
(34,'\\\\0')
(35,source)
(36,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^