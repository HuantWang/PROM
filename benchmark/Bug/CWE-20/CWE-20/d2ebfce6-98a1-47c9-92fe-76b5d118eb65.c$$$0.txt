-----label-----
1
-----code-----
void CWE127_Buffer_Underread__malloc_wchar_t_memcpy_07_bad()
{
    wchar_t * data;
    data = NULL;
    if(staticFive==5)
    {
        {
            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (dataBuffer == NULL) {exit(-1);}
            wmemset(dataBuffer, L'A', 100-1);
            dataBuffer[100-1] = L'\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        wchar_t dest[100];
        wmemset(dest, L'C', 100-1); /* fill with 'C's */
        dest[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */
        memcpy(dest, data, 100*sizeof(wchar_t));
        /* Ensure null termination */
        dest[100-1] = L'\0';
        printWLine(dest);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
20,21
23,24
24,25
24,26
24,27
24,28
24,29
25,26
26,27
26,28
28,29
28,30
28,31
31,32
32,33
32,34
33,34
33,35
35,36
37,38
37,39
38,39
40,41
40,42
42,43
43,44
43,45
46,47
46,48
47,48
47,49
48,49
50,51
52,53
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
60,63
60,64
61,62
63,64
66,67
66,68
69,70
70,71
70,72
71,72
71,73
72,73
74,75
74,76
78,79
79,80
79,81
80,81
82,83
82,84
83,84
86,87
86,88
86,89
86,90
86,91
86,92
87,88
88,89
88,90
90,91
90,92
92,93
94,95
95,96
95,97
95,98
95,99
96,97
98,99
101,102
101,103
104,105
105,106
105,107
106,107
106,108
107,108
109,110
109,111
113,114
114,115
114,116
114,117
114,118
115,116
117,118
119,120
121,122
121,123
123,124
124,125
124,126
127,128
128,129
128,130
129,130
129,131
130,131
132,133
132,134
136,137
137,138
137,139
138,139
140,141
-----nextToken-----
2,4,8,10,11,15,17,21,22,27,29,30,34,36,39,41,44,45,49,51,56,58,62,64,65,67,68,73,75,76,77,81,84,85,89,91,93,97,99,100,102,103,108,110,111,112,116,118,120,122,125,126,131,133,134,135,139,141
-----computeFrom-----
13,14
13,15
19,20
19,21
40,41
40,42
47,48
47,49
66,67
66,68
70,71
70,72
74,75
74,76
79,80
79,81
82,83
82,84
101,102
101,103
105,106
105,107
109,110
109,111
121,122
121,123
128,129
128,130
132,133
132,134
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE127_Buffer_Underread__malloc_wchar_t_memcpy_07_bad(){    wchar_t * data;    data = NULL;    if(staticFive==5)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        wchar_t dest[100];        wmemset(dest, L'C', 100-1); /* fill with 'C's */        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        memcpy(dest, data, 100*sizeof(wchar_t));        /* Ensure null termination */        dest[100-1] = L'\0';        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE127_Buffer_Underread__malloc_wchar_t_memcpy_07_bad()
CWE127_Buffer_Underread__malloc_wchar_t_memcpy_07_bad
{    wchar_t * data;    data = NULL;    if(staticFive==5)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        wchar_t dest[100];        wmemset(dest, L'C', 100-1); /* fill with 'C's */        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        memcpy(dest, data, 100*sizeof(wchar_t));        /* Ensure null termination */        dest[100-1] = L'\0';        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(staticFive==5)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
staticFive==5
staticFive
staticFive
5
{        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBuffer, L'A', 100-1);
wmemset(dataBuffer, L'A', 100-1)
wmemset
wmemset
dataBuffer
dataBuffer
L'A'
100-1
100
1
dataBuffer[100-1] = L'\0';
dataBuffer[100-1] = L'\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
L'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        wchar_t dest[100];        wmemset(dest, L'C', 100-1); /* fill with 'C's */        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        memcpy(dest, data, 100*sizeof(wchar_t));        /* Ensure null termination */        dest[100-1] = L'\0';        printWLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
wchar_t dest[100];
wchar_t dest[100];
wchar_t
dest[100]
dest
[100]
100
wmemset(dest, L'C', 100-1);
wmemset(dest, L'C', 100-1)
wmemset
wmemset
dest
dest
L'C'
100-1
100
1
dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
memcpy(dest, data, 100*sizeof(wchar_t));
memcpy(dest, data, 100*sizeof(wchar_t))
memcpy
memcpy
dest
dest
data
data
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
printWLine(dest);
printWLine(dest)
printWLine
printWLine
dest
dest
-----joern-----
(5,18,0)
(42,6,0)
(16,27,0)
(5,17,0)
(18,10,0)
(35,17,0)
(12,2,0)
(46,33,0)
(19,40,0)
(2,0,0)
(26,5,0)
(0,24,0)
(40,19,0)
(5,19,0)
(20,35,0)
(19,5,0)
(36,18,0)
(44,40,0)
(45,6,0)
(49,5,0)
(47,4,0)
(35,12,0)
(0,2,0)
(2,12,0)
(25,2,0)
(3,46,0)
(23,18,0)
(28,17,0)
(6,10,0)
(17,46,0)
(15,32,0)
(22,6,0)
(2,25,0)
(17,35,0)
(1,10,0)
(38,12,0)
(12,46,0)
(24,41,0)
(32,12,0)
(14,41,0)
(11,19,0)
(8,47,0)
(34,24,0)
(5,6,0)
(7,42,0)
(31,8,0)
(29,46,0)
(39,35,0)
(37,46,0)
(47,8,0)
(48,27,0)
(30,32,0)
(43,10,0)
(24,0,0)
(9,6,0)
(41,24,0)
(18,36,1)
(44,11,1)
(8,31,1)
(12,2,1)
(49,26,1)
(35,12,1)
(5,19,1)
(38,27,1)
(31,32,1)
(5,18,1)
(40,44,1)
(3,32,1)
(0,24,1)
(26,22,1)
(17,35,1)
(42,7,1)
(34,38,1)
(45,5,1)
(30,15,1)
(14,34,1)
(2,25,1)
(22,27,1)
(3,47,1)
(20,39,1)
(22,17,1)
(7,45,1)
(28,3,1)
(5,17,1)
(24,41,1)
(13,42,1)
(39,28,1)
(16,18,1)
(15,12,1)
(11,49,1)
(32,12,1)
(36,23,1)
(48,16,1)
(19,40,1)
(32,30,1)
(35,20,1)
(27,48,1)
(47,8,1)
(41,14,1)
(2,0,1)
(0,24,2)
(14,27,2)
(5,19,2)
(31,32,2)
(39,27,2)
(28,27,2)
(15,27,2)
(5,17,2)
(12,2,2)
(5,18,2)
(30,27,2)
(2,27,2)
(24,27,2)
(41,27,2)
(35,27,2)
(32,12,2)
(35,12,2)
(20,27,2)
(32,27,2)
(12,27,2)
(3,27,2)
(47,32,2)
(2,0,2)
(17,35,2)
(34,27,2)
(24,41,2)
(0,27,2)
(2,25,2)
(17,27,2)
(47,8,2)
(8,32,2)
(38,27,2)
(19,40,2)
-----------------------------------
(0,malloc(100*sizeof(wchar_t)
(1,if(staticFive==5)
(2,(wchar_t *)
(3,\'\\\\0\')
(4,)
(5,memcpy(dest, data, 100*sizeof(wchar_t)
(6,)
(7,dest)
(8,-1)
(9,dest)
(10,)
(11,100)
(12,* dataBuffer = (wchar_t *)
(13,RET)
(14,wchar_t)
(15,dataBuffer)
(16,staticFive)
(17,data = dataBuffer - 8)
(18,data = NULL)
(19,100*sizeof(wchar_t)
(20,8)
(21,'\\\\0')
(22,'\\\\0')
(23,data)
(24,100*sizeof(wchar_t)
(25,wchar_t *)
(26,dest)
(27,staticFive==5)
(28,data)
(29,if (dataBuffer == NULL)
(30,NULL)
(31,1)
(32,dataBuffer == NULL)
(33,)
(34,100)
(35,dataBuffer - 8)
(36,NULL)
(37,dataBuffer)
(38,dataBuffer)
(39,dataBuffer)
(40,sizeof(wchar_t)
(41,sizeof(wchar_t)
(42,printWLine(dest)
(43,data)
(44,wchar_t)
(45,'\\\\0')
(46,)
(47,exit(-1)
(48,5)
(49,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^