-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_18_bad()
{
    char * data;
    data = NULL;
    goto source;
source:
    {
        char * dataBuffer = (char *)malloc(100*sizeof(char));
        if (dataBuffer == NULL) {exit(-1);}
        memset(dataBuffer, 'A', 100-1);
        dataBuffer[100-1] = '\0';
        /* FLAW: Set data pointer to before the allocated memory buffer */
        data = dataBuffer - 8;
    }
    {
        char source[100];
        memset(source, 'C', 100-1); /* fill with 'C's */
        source[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        strcpy(data, source);
        printLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
20,21
20,22
22,23
22,24
22,25
22,26
22,27
23,24
24,25
24,26
26,27
26,28
26,29
29,30
30,31
30,32
31,32
31,33
33,34
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
44,45
44,46
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
58,61
58,62
59,60
61,62
64,65
64,66
67,68
68,69
68,70
69,70
69,71
70,71
72,73
72,74
76,77
77,78
77,79
78,79
80,81
80,82
81,82
84,85
84,86
84,87
84,88
84,89
85,86
86,87
86,88
88,89
88,90
90,91
92,93
93,94
93,95
93,96
93,97
94,95
96,97
99,100
99,101
102,103
103,104
103,105
104,105
104,106
105,106
107,108
107,109
111,112
112,113
112,114
112,115
113,114
115,116
117,118
119,120
120,121
120,122
121,122
123,124
-----nextToken-----
2,4,8,10,11,15,17,19,21,25,27,28,32,34,37,39,42,43,47,49,54,56,60,62,63,65,66,71,73,74,75,79,82,83,87,89,91,95,97,98,100,101,106,108,109,110,114,116,118,122,124
-----computeFrom-----
13,14
13,15
38,39
38,40
45,46
45,47
64,65
64,66
68,69
68,70
72,73
72,74
77,78
77,79
80,81
80,82
99,100
99,101
103,104
103,105
107,108
107,109
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_char_cpy_18_bad(){    char * data;    data = NULL;    goto source;source:    {        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_char_cpy_18_bad()
CWE124_Buffer_Underwrite__malloc_char_cpy_18_bad
{    char * data;    data = NULL;    goto source;source:    {        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    {        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    {        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }
source
{        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        char source[100];        memset(source, 'C', 100-1); /* fill with 'C's */        source[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        strcpy(data, source);        printLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
memset(source, 'C', 100-1);
memset(source, 'C', 100-1)
memset
memset
source
source
'C'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
strcpy(data, source);
strcpy(data, source)
strcpy
strcpy
data
data
source
source
printLine(data);
printLine(data)
printLine
printLine
data
data
-----joern-----
(45,21,0)
(30,22,0)
(19,51,0)
(23,22,0)
(55,4,0)
(8,51,0)
(26,55,0)
(44,13,0)
(24,31,0)
(48,61,0)
(59,56,0)
(63,24,0)
(52,4,0)
(30,32,0)
(63,54,0)
(1,54,0)
(13,24,0)
(27,3,0)
(54,63,0)
(0,6,0)
(20,32,0)
(53,4,0)
(5,9,0)
(25,13,0)
(38,60,0)
(3,54,0)
(64,10,0)
(18,32,0)
(50,57,0)
(24,63,0)
(40,60,0)
(51,8,0)
(11,32,0)
(14,55,0)
(39,17,0)
(41,25,0)
(13,32,0)
(17,10,0)
(17,9,0)
(21,35,0)
(9,35,0)
(16,22,0)
(6,51,0)
(22,30,0)
(61,11,0)
(33,8,0)
(62,45,0)
(29,8,0)
(7,21,0)
(54,3,0)
(46,11,0)
(61,42,0)
(15,30,0)
(50,56,0)
(49,35,0)
(6,35,0)
(56,50,0)
(43,42,0)
(36,45,0)
(35,4,0)
(51,32,0)
(60,35,0)
(30,13,0)
(12,10,0)
(65,25,0)
(31,24,0)
(21,45,0)
(10,17,0)
(8,13,0)
(28,21,0)
(24,13,0)
(66,42,0)
(60,51,0)
(2,30,0)
(42,61,0)
(58,4,0)
(32,4,0)
(61,13,0)
(58,55,1)
(27,1,1)
(36,7,1)
(28,51,1)
(44,58,1)
(40,9,1)
(8,29,1)
(46,61,1)
(66,43,1)
(39,21,1)
(60,38,1)
(65,41,1)
(41,13,1)
(48,30,1)
(24,31,1)
(9,5,1)
(6,0,1)
(12,39,1)
(17,10,1)
(63,54,1)
(59,25,1)
(30,13,1)
(51,8,1)
(50,56,1)
(5,17,1)
(56,59,1)
(30,22,1)
(1,44,1)
(34,6,1)
(29,33,1)
(2,25,1)
(19,11,1)
(2,50,1)
(45,62,1)
(33,19,1)
(43,48,1)
(15,2,1)
(26,14,1)
(24,63,1)
(6,51,1)
(3,27,1)
(61,42,1)
(8,13,1)
(38,40,1)
(21,45,1)
(22,23,1)
(64,12,1)
(0,60,1)
(10,64,1)
(54,3,1)
(11,46,1)
(25,13,1)
(42,66,1)
(13,24,1)
(62,36,1)
(55,26,1)
(23,16,1)
(16,15,1)
(60,51,1)
(7,28,1)
(61,13,1)
(25,65,1)
(51,8,2)
(21,45,2)
(13,24,2)
(61,42,2)
(30,22,2)
(25,13,2)
(54,3,2)
(24,31,2)
(59,25,2)
(17,10,2)
(50,25,2)
(63,54,2)
(24,63,2)
(61,13,2)
(30,13,2)
(8,13,2)
(50,56,2)
(60,51,2)
(56,25,2)
(6,51,2)
-----------------------------------
(0,data)
(1,100)
(2,dataBuffer)
(3,sizeof(char)
(4,)
(5,'\\\\0')
(6,printLine(data)
(7,'C')
(8,dataBuffer - 8)
(9,source[100-1] = '\\\\0')
(10,100-1)
(11,dataBuffer[100-1] = '\\\\0')
(12,100)
(13,* dataBuffer = (char *)
(14,data)
(15,'A')
(16,100)
(17,source[100-1])
(18,if (dataBuffer == NULL)
(19,data)
(20,dataBuffer)
(21,memset(source, 'C', 100-1)
(22,100-1)
(23,1)
(24,(char *)
(25,dataBuffer == NULL)
(26,NULL)
(27,char)
(28,source)
(29,8)
(30,memset(dataBuffer, \'A\', 100-1)
(31,char *)
(32,)
(33,dataBuffer)
(34,RET)
(35,)
(36,100)
(37,memset(dataBuffer, 'A', 100-1)
(38,source)
(39,source)
(40,data)
(41,dataBuffer)
(42,100-1)
(43,100)
(44,dataBuffer)
(45,100-1)
(46,'\\\\0')
(47,memset(source, \'C\', 100-1)
(48,dataBuffer)
(49,source)
(50,exit(-1)
(51,data = dataBuffer - 8)
(52,data)
(53,source:)
(54,100*sizeof(char)
(55,data = NULL)
(56,-1)
(57,)
(58,goto source;)
(59,1)
(60,strcpy(data, source)
(61,dataBuffer[100-1])
(62,1)
(63,malloc(100*sizeof(char)
(64,1)
(65,NULL)
(66,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^