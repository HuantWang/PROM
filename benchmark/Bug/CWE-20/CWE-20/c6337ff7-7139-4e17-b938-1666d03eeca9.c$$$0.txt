-----label-----
1
-----code-----
void CWE126_Buffer_Overread__malloc_wchar_t_memcpy_32_bad()
{
    wchar_t * data;
    wchar_t * *dataPtr1 = &data;
    wchar_t * *dataPtr2 = &data;
    data = NULL;
    {
        wchar_t * data = *dataPtr1;
        /* FLAW: Use a small buffer */
        data = (wchar_t *)malloc(50*sizeof(wchar_t));
        if (data == NULL) {exit(-1);}
        wmemset(data, L'A', 50-1); /* fill with 'A's */
        data[50-1] = L'\0'; /* null terminate */
        *dataPtr1 = data;
    }
    {
        wchar_t * data = *dataPtr2;
        {
            wchar_t dest[100];
            wmemset(dest, L'C', 100-1);
            dest[100-1] = L'\0'; /* null terminate */
            /* POTENTIAL FLAW: using memcpy with the length of the dest where data
             * could be smaller than dest causing buffer overread */
            memcpy(dest, data, wcslen(dest)*sizeof(wchar_t));
            dest[100-1] = L'\0';
            printWLine(dest);
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
15,19
19,20
20,21
21,22
23,24
24,25
24,26
26,27
26,28
26,29
26,30
30,31
31,32
32,33
34,35
35,36
35,37
36,37
38,39
40,41
40,42
40,43
40,44
40,45
40,46
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
49,50
51,52
52,53
52,54
53,54
55,56
55,57
56,57
56,58
58,59
60,61
60,62
61,62
63,64
63,65
65,66
66,67
66,68
69,70
69,71
70,71
70,72
71,72
73,74
75,76
76,77
77,78
77,79
78,79
80,81
82,83
83,84
83,85
83,86
83,87
84,85
86,87
89,90
89,91
92,93
93,94
93,95
94,95
94,96
95,96
97,98
97,99
101,102
102,103
102,104
103,104
104,105
106,107
108,109
108,110
109,110
110,111
110,112
112,113
112,114
112,115
115,116
116,117
117,118
119,120
119,121
119,122
119,123
119,124
119,125
119,126
120,121
121,122
121,123
123,124
123,125
125,126
127,128
128,129
128,130
128,131
128,132
129,130
131,132
134,135
134,136
137,138
138,139
138,140
139,140
139,141
140,141
142,143
142,144
146,147
147,148
147,149
147,150
147,151
148,149
150,151
152,153
154,155
154,156
155,156
155,157
156,157
158,159
160,161
161,162
161,163
164,165
165,166
165,167
166,167
166,168
167,168
169,170
169,171
173,174
174,175
174,176
175,176
177,178
179,180
180,181
180,182
181,182
183,184
-----nextToken-----
2,4,8,10,11,14,16,17,18,22,25,27,28,29,33,37,39,43,45,46,50,54,57,59,62,64,67,68,72,74,79,81,85,87,88,90,91,96,98,99,100,105,107,111,113,114,118,122,124,126,130,132,133,135,136,141,143,144,145,149,151,153,157,159,162,163,168,170,171,172,176,178,182,184
-----computeFrom-----
35,36
35,37
52,53
52,54
63,64
63,65
70,71
70,72
89,90
89,91
93,94
93,95
97,98
97,99
102,103
102,104
134,135
134,136
138,139
138,140
142,143
142,144
154,155
154,156
165,166
165,167
169,170
169,171
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE126_Buffer_Overread__malloc_wchar_t_memcpy_32_bad(){    wchar_t * data;    wchar_t * *dataPtr1 = &data;    wchar_t * *dataPtr2 = &data;    data = NULL;    {        wchar_t * data = *dataPtr1;        /* FLAW: Use a small buffer */        data = (wchar_t *)malloc(50*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        wmemset(data, L'A', 50-1); /* fill with 'A's */        data[50-1] = L'\0'; /* null terminate */        *dataPtr1 = data;    }    {        wchar_t * data = *dataPtr2;        {            wchar_t dest[100];            wmemset(dest, L'C', 100-1);            dest[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: using memcpy with the length of the dest where data             * could be smaller than dest causing buffer overread */            memcpy(dest, data, wcslen(dest)*sizeof(wchar_t));            dest[100-1] = L'\0';            printWLine(dest);            free(data);        }    }}
void
CWE126_Buffer_Overread__malloc_wchar_t_memcpy_32_bad()
CWE126_Buffer_Overread__malloc_wchar_t_memcpy_32_bad
{    wchar_t * data;    wchar_t * *dataPtr1 = &data;    wchar_t * *dataPtr2 = &data;    data = NULL;    {        wchar_t * data = *dataPtr1;        /* FLAW: Use a small buffer */        data = (wchar_t *)malloc(50*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        wmemset(data, L'A', 50-1); /* fill with 'A's */        data[50-1] = L'\0'; /* null terminate */        *dataPtr1 = data;    }    {        wchar_t * data = *dataPtr2;        {            wchar_t dest[100];            wmemset(dest, L'C', 100-1);            dest[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: using memcpy with the length of the dest where data             * could be smaller than dest causing buffer overread */            memcpy(dest, data, wcslen(dest)*sizeof(wchar_t));            dest[100-1] = L'\0';            printWLine(dest);            free(data);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t * *dataPtr1 = &data;
wchar_t * *dataPtr1 = &data;
wchar_t
* *dataPtr1 = &data
*
*
dataPtr1
= &data
&data
data
data
wchar_t * *dataPtr2 = &data;
wchar_t * *dataPtr2 = &data;
wchar_t
* *dataPtr2 = &data
*
*
dataPtr2
= &data
&data
data
data
data = NULL;
data = NULL
data
data
NULL
NULL
{        wchar_t * data = *dataPtr1;        /* FLAW: Use a small buffer */        data = (wchar_t *)malloc(50*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        wmemset(data, L'A', 50-1); /* fill with 'A's */        data[50-1] = L'\0'; /* null terminate */        *dataPtr1 = data;    }
wchar_t * data = *dataPtr1;
wchar_t * data = *dataPtr1;
wchar_t
* data = *dataPtr1
*
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = (wchar_t *)malloc(50*sizeof(wchar_t));
data = (wchar_t *)malloc(50*sizeof(wchar_t))
data
data
(wchar_t *)malloc(50*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(50*sizeof(wchar_t))
malloc
malloc
50*sizeof(wchar_t)
50
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(data, L'A', 50-1);
wmemset(data, L'A', 50-1)
wmemset
wmemset
data
data
L'A'
50-1
50
1
data[50-1] = L'\0';
data[50-1] = L'\0'
data[50-1]
data
data
50-1
50
1
L'\0'
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        wchar_t * data = *dataPtr2;        {            wchar_t dest[100];            wmemset(dest, L'C', 100-1);            dest[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: using memcpy with the length of the dest where data             * could be smaller than dest causing buffer overread */            memcpy(dest, data, wcslen(dest)*sizeof(wchar_t));            dest[100-1] = L'\0';            printWLine(dest);            free(data);        }    }
wchar_t * data = *dataPtr2;
wchar_t * data = *dataPtr2;
wchar_t
* data = *dataPtr2
*
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            wchar_t dest[100];            wmemset(dest, L'C', 100-1);            dest[100-1] = L'\0'; /* null terminate */            /* POTENTIAL FLAW: using memcpy with the length of the dest where data             * could be smaller than dest causing buffer overread */            memcpy(dest, data, wcslen(dest)*sizeof(wchar_t));            dest[100-1] = L'\0';            printWLine(dest);            free(data);        }
wchar_t dest[100];
wchar_t dest[100];
wchar_t
dest[100]
dest
[100]
100
wmemset(dest, L'C', 100-1);
wmemset(dest, L'C', 100-1)
wmemset
wmemset
dest
dest
L'C'
100-1
100
1
dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
memcpy(dest, data, wcslen(dest)*sizeof(wchar_t));
memcpy(dest, data, wcslen(dest)*sizeof(wchar_t))
memcpy
memcpy
dest
dest
data
data
wcslen(dest)*sizeof(wchar_t)
wcslen(dest)
wcslen
wcslen
dest
dest
sizeof(wchar_t)
wchar_t
wchar_t

dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
printWLine(dest);
printWLine(dest)
printWLine
printWLine
dest
dest
free(data);
free(data)
free
free
data
data
-----joern-----
(53,43,0)
(10,1,0)
(20,49,0)
(36,24,0)
(28,21,0)
(21,43,0)
(14,0,0)
(19,34,0)
(45,29,0)
(46,18,0)
(34,48,0)
(49,48,0)
(37,17,0)
(36,3,0)
(36,64,0)
(1,48,0)
(12,25,0)
(29,58,0)
(33,25,0)
(58,29,0)
(2,49,0)
(60,37,0)
(15,7,0)
(64,50,0)
(52,48,0)
(31,58,0)
(16,1,0)
(7,27,0)
(62,43,0)
(30,49,0)
(42,34,0)
(22,37,0)
(58,43,0)
(63,64,0)
(7,15,0)
(34,19,0)
(21,58,0)
(4,37,0)
(3,36,0)
(50,20,0)
(18,34,0)
(29,45,0)
(40,43,0)
(26,15,0)
(44,17,0)
(8,41,0)
(17,48,0)
(41,53,0)
(6,48,0)
(29,65,0)
(0,58,0)
(49,30,0)
(53,41,0)
(64,37,0)
(9,0,0)
(47,12,0)
(39,50,0)
(61,39,0)
(65,29,0)
(20,50,0)
(18,21,0)
(38,43,0)
(50,17,0)
(64,36,0)
(41,34,0)
(32,37,0)
(51,64,0)
(5,24,0)
(39,37,0)
(35,53,0)
(23,20,0)
(59,19,0)
(25,45,0)
(54,32,0)
(55,50,0)
(13,48,0)
(11,30,0)
(24,36,0)
(43,48,0)
(25,12,0)
(45,25,0)
(56,3,0)
(64,36,1)
(49,30,1)
(21,58,1)
(15,26,1)
(9,58,1)
(20,49,1)
(10,16,1)
(24,5,1)
(31,53,1)
(39,61,1)
(21,28,1)
(38,0,1)
(59,42,1)
(56,24,1)
(7,15,1)
(39,50,1)
(32,54,1)
(30,11,1)
(50,20,1)
(18,46,1)
(53,41,1)
(63,22,1)
(12,47,1)
(41,34,1)
(26,0,1)
(51,63,1)
(19,59,1)
(36,24,1)
(36,3,1)
(34,19,1)
(8,35,1)
(11,2,1)
(0,58,1)
(5,51,1)
(1,10,1)
(29,65,1)
(61,32,1)
(33,31,1)
(22,50,1)
(58,29,1)
(46,38,1)
(57,39,1)
(35,1,1)
(55,21,1)
(25,12,1)
(45,25,1)
(16,49,1)
(38,7,1)
(54,60,1)
(3,56,1)
(28,18,1)
(47,33,1)
(18,34,1)
(29,45,1)
(20,23,1)
(60,64,1)
(23,55,1)
(64,50,1)
(2,34,1)
(41,8,1)
(14,9,1)
(0,14,1)
(18,34,2)
(26,0,2)
(21,58,2)
(20,49,2)
(29,65,2)
(45,25,2)
(58,29,2)
(53,41,2)
(36,24,2)
(34,19,2)
(36,3,2)
(64,50,2)
(39,50,2)
(41,34,2)
(49,30,2)
(50,20,2)
(7,0,2)
(15,0,2)
(0,58,2)
(64,36,2)
(29,45,2)
(7,15,2)
(25,12,2)
-----------------------------------
(0,data == NULL)
(1,data = NULL)
(2,dataPtr2)
(3,sizeof(wchar_t)
(4,dest)
(5,dest)
(6,dataPtr1)
(7,exit(-1)
(8,dataPtr1)
(9,data)
(10,NULL)
(11,data)
(12,sizeof(wchar_t)
(13,data)
(14,NULL)
(15,-1)
(16,data)
(17,)
(18,*dataPtr1)
(19,&data)
(20,*dataPtr2)
(21,*dataPtr1 = data)
(22,'\\\\0')
(23,dataPtr2)
(24,wcslen(dest)
(25,50*sizeof(wchar_t)
(26,1)
(27,)
(28,data)
(29,(wchar_t *)
(30,&data)
(31,data)
(32,printWLine(dest)
(33,50)
(34,* *dataPtr1 = &data)
(35,data)
(36,wcslen(dest)
(37,)
(38,'\\\\0')
(39,free(data)
(40,if (data == NULL)
(41,*dataPtr1)
(42,dataPtr1)
(43,)
(44,data)
(45,malloc(50*sizeof(wchar_t)
(46,dataPtr1)
(47,wchar_t)
(48,)
(49,* *dataPtr2 = &data)
(50,* data = *dataPtr2)
(51,data)
(52,dataPtr2)
(53,* data = *dataPtr1)
(54,dest)
(55,data)
(56,wchar_t)
(57,RET)
(58,data = (wchar_t *)
(59,data)
(60,'\\\\0')
(61,data)
(62,data)
(63,dest)
(64,memcpy(dest, data, wcslen(dest)
(65,wchar_t *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^