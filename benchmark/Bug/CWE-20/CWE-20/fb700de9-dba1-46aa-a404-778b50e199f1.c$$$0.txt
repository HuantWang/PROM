-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_42_bad()
{
    int * data;
    data = NULL;
    data = badSource(data);
    {
        int source[10] = {0};
        /* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */
        memmove(data, source, 10*sizeof(int));
        printIntLine(data[0]);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
28,29
29,30
29,31
31,32
31,33
31,34
33,34
35,36
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
44,45
46,47
46,48
48,49
49,50
49,51
52,53
53,54
53,55
54,55
56,57
56,58
57,58
60,61
61,62
61,63
62,63
64,65
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,30,32,34,37,41,43,45,47,50,51,55,58,59,63,65
-----computeFrom-----
13,14
13,15
19,20
19,21
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;InitializerList;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_42_bad(){    int * data;    data = NULL;    data = badSource(data);    {        int source[10] = {0};        /* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */        memmove(data, source, 10*sizeof(int));        printIntLine(data[0]);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_42_bad()
CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_42_bad
{    int * data;    data = NULL;    data = badSource(data);    {        int source[10] = {0};        /* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */        memmove(data, source, 10*sizeof(int));        printIntLine(data[0]);        free(data);    }}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        int source[10] = {0};        /* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */        memmove(data, source, 10*sizeof(int));        printIntLine(data[0]);        free(data);    }
int source[10] = {0};
int source[10] = {0};
int
source[10] = {0}
source
[10]
10
= {0}
{0}
0
memmove(data, source, 10*sizeof(int));
memmove(data, source, 10*sizeof(int))
memmove
memmove
data
data
source
source
10*sizeof(int)
10
sizeof(int)
int
int

printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(1,22,0)
(3,17,0)
(17,3,0)
(4,15,0)
(1,24,0)
(26,22,0)
(18,25,0)
(6,20,0)
(11,19,0)
(24,22,0)
(3,12,0)
(14,12,0)
(16,19,0)
(7,15,0)
(21,20,0)
(22,12,0)
(15,26,0)
(20,12,0)
(8,16,0)
(19,1,0)
(13,1,0)
(9,22,0)
(23,1,0)
(17,20,0)
(1,3,0)
(2,3,0)
(26,15,0)
(25,22,0)
(25,3,0)
(0,17,0)
(1,19,0)
(19,16,0)
(15,3,0)
(5,24,0)
(10,25,1)
(16,8,1)
(7,4,1)
(25,18,1)
(26,15,1)
(20,21,1)
(2,20,1)
(1,19,1)
(0,2,1)
(23,24,1)
(17,0,1)
(18,26,1)
(13,23,1)
(15,3,1)
(8,11,1)
(19,16,1)
(21,6,1)
(15,7,1)
(25,3,1)
(17,20,1)
(1,24,1)
(3,17,1)
(24,5,1)
(5,3,1)
(11,13,1)
(4,1,1)
(1,3,1)
(25,3,2)
(3,17,2)
(1,19,2)
(1,24,2)
(15,3,2)
(19,16,2)
(1,3,2)
(17,20,2)
(26,15,2)
-----------------------------------
(0,data)
(1,memmove(data, source, 10*sizeof(int)
(2,data)
(3,data = badSource(data)
(4,data)
(5,source)
(6,data)
(7,0)
(8,int)
(9,source)
(10,RET)
(11,10)
(12,)
(13,source)
(14,data)
(15,data[0])
(16,sizeof(int)
(17,badSource(data)
(18,data)
(19,10*sizeof(int)
(20,data = NULL)
(21,NULL)
(22,)
(23,data)
(24,source[10] = {0})
(25,free(data)
(26,printIntLine(data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^