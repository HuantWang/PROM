-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_square_63b_badSink(int64_t * dataPtr)
{
    int64_t data = *dataPtr;
    {
        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
        int64_t result = data * data;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
13,14
13,15
14,15
16,17
16,18
18,19
19,20
20,21
22,23
22,24
23,24
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
31,32
33,34
35,36
36,37
36,38
37,38
39,40
-----nextToken-----
2,4,7,9,10,15,17,21,26,28,32,34,38,40
-----computeFrom-----
30,31
30,32
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_square_63b_badSink(int64_t * dataPtr){    int64_t data = *dataPtr;    {        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }}
void
CWE190_Integer_Overflow__int64_t_rand_square_63b_badSink(int64_t * dataPtr)
CWE190_Integer_Overflow__int64_t_rand_square_63b_badSink
int64_t * dataPtr
int64_t
int64_t
* dataPtr
*
dataPtr
{    int64_t data = *dataPtr;    {        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }}
int64_t data = *dataPtr;
int64_t data = *dataPtr;
int64_t
int64_t
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(4,15,0)
(3,1,0)
(9,1,0)
(2,13,0)
(16,6,0)
(6,3,0)
(13,15,0)
(6,14,0)
(3,14,0)
(13,2,0)
(11,2,0)
(1,13,0)
(2,12,0)
(8,14,0)
(10,1,0)
(14,15,0)
(7,3,0)
(1,3,0)
(5,13,0)
(2,12,1)
(6,16,1)
(1,10,1)
(13,2,1)
(10,9,1)
(7,13,1)
(2,11,1)
(16,3,1)
(11,5,1)
(0,6,1)
(1,13,1)
(9,7,1)
(6,3,1)
(3,1,1)
(2,12,2)
(13,2,2)
(1,13,2)
(6,3,2)
(3,1,2)
-----------------------------------
(0,RET)
(1,data * data)
(2,*dataPtr)
(3,result = data * data)
(4,data)
(5,data)
(6,printLongLongLine(result)
(7,result)
(8,result)
(9,data)
(10,data)
(11,dataPtr)
(12,int64_t * dataPtr)
(13,data = *dataPtr)
(14,)
(15,)
(16,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^