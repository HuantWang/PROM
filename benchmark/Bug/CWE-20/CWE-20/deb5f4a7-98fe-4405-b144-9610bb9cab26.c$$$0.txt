-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_system_16_bad()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    while(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
        break;
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
81,82
81,83
82,83
82,84
83,84
83,85
84,85
86,87
89,90
89,91
90,91
91,92
91,93
92,93
95,96
96,97
96,98
97,98
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,80,85,87,88,93,94,98,99
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
82,83
82,84
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_system_16_bad(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_system_16_bad()
CWE78_OS_Command_Injection__wchar_t_environment_system_16_bad
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(48,12,0)
(12,48,0)
(11,14,0)
(36,13,0)
(1,4,0)
(15,12,0)
(25,12,0)
(40,30,0)
(21,43,0)
(5,48,0)
(43,6,0)
(47,22,0)
(7,36,0)
(48,35,0)
(17,45,0)
(34,22,0)
(39,10,0)
(37,1,0)
(41,3,0)
(27,14,0)
(24,14,0)
(19,25,0)
(32,22,0)
(8,35,0)
(43,32,0)
(35,48,0)
(20,25,0)
(36,6,0)
(22,14,0)
(25,43,0)
(10,47,0)
(42,3,0)
(32,43,0)
(35,22,0)
(48,28,0)
(47,10,0)
(29,14,0)
(22,3,0)
(26,22,0)
(49,47,0)
(9,13,0)
(2,7,0)
(13,36,0)
(31,6,0)
(6,45,0)
(16,6,0)
(12,25,0)
(38,6,0)
(35,43,0)
(46,35,0)
(3,14,0)
(0,36,0)
(30,4,0)
(33,7,0)
(44,32,0)
(48,36,0)
(41,42,1)
(46,8,1)
(33,2,1)
(20,19,1)
(1,37,1)
(7,36,1)
(43,32,1)
(2,36,1)
(17,7,1)
(30,40,1)
(25,20,1)
(5,35,1)
(44,21,1)
(22,3,1)
(19,15,1)
(37,30,1)
(8,7,1)
(49,23,1)
(39,47,1)
(25,43,1)
(12,25,1)
(0,43,1)
(48,36,1)
(26,34,1)
(35,46,1)
(21,23,1)
(48,12,1)
(49,17,1)
(23,22,1)
(22,26,1)
(48,35,1)
(47,49,1)
(3,41,1)
(18,10,1)
(40,10,1)
(15,5,1)
(47,22,1)
(13,9,1)
(17,48,1)
(10,39,1)
(7,33,1)
(32,22,1)
(18,1,1)
(35,22,1)
(35,43,1)
(10,47,1)
(36,13,1)
(9,0,1)
(34,3,1)
(32,44,1)
(40,10,2)
(43,32,2)
(48,12,2)
(36,13,2)
(7,36,2)
(5,7,2)
(13,23,2)
(35,43,2)
(30,10,2)
(7,23,2)
(48,35,2)
(47,22,2)
(22,3,2)
(17,23,2)
(2,23,2)
(37,10,2)
(43,23,2)
(8,7,2)
(48,36,2)
(35,22,2)
(1,10,2)
(25,43,2)
(19,7,2)
(35,7,2)
(15,7,2)
(9,23,2)
(33,23,2)
(46,7,2)
(0,23,2)
(48,7,2)
(36,23,2)
(25,7,2)
(12,25,2)
(44,23,2)
(10,47,2)
(20,7,2)
(21,23,2)
(32,22,2)
(12,7,2)
(32,23,2)
-----------------------------------
(0,environment)
(1,exit(1)
(2,environment)
(3,data_buf[100] = FULL_COMMAND)
(4,)
(5,environment)
(6,)
(7,environment != NULL)
(8,data)
(9,ENV_VARIABLE)
(10,SYSTEM(data)
(11,while(1)
(12,100-dataLen-1)
(13,GETENV(ENV_VARIABLE)
(14,)
(15,100)
(16,dataLen)
(17,break;)
(18,RET)
(19,dataLen)
(20,1)
(21,dataLen)
(22,data = data_buf)
(23,1)
(24,data_buf)
(25,dataLen-1)
(26,data_buf)
(27,data)
(28,)
(29,if (SYSTEM(data)
(30,printLine("command execution failed!")
(31,environment)
(32,wcslen(data)
(33,NULL)
(34,data)
(35,data+dataLen)
(36,* environment = GETENV(ENV_VARIABLE)
(37,1)
(38,if (environment != NULL)
(39,0)
(40,"command execution failed!")
(41,FULL_COMMAND)
(42,data_buf)
(43,dataLen = wcslen(data)
(44,data)
(45,)
(46,dataLen)
(47,SYSTEM(data)
(48,wcsncat(data+dataLen, environment, 100-dataLen-1)
(49,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^