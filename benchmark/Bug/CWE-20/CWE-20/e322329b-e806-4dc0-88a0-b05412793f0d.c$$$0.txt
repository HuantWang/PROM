-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_67b_badSink(CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_67_structType myStruct)
{
    twoIntsStruct * data = myStruct.structFirst;
    {
        twoIntsStruct source[100];
        {
            size_t i;
            /* Initialize array */
            for (i = 0; i < 100; i++)
            {
                source[i].intOne = 0;
                source[i].intTwo = 0;
            }
        }
        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */
        memcpy(data, source, 100*sizeof(twoIntsStruct));
        printStructLine(&data[0]);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
11,12
12,13
12,14
13,14
15,16
15,17
15,18
18,19
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
28,29
28,30
30,31
32,33
32,34
33,34
34,35
34,36
35,36
37,38
39,40
39,41
39,42
39,43
40,41
41,42
41,43
42,43
45,46
45,47
46,47
49,50
50,51
52,53
52,54
53,54
54,55
54,56
55,56
55,57
56,57
56,58
57,58
59,60
63,64
64,65
64,66
65,66
65,67
66,67
66,68
67,68
69,70
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
81,83
83,84
84,85
84,86
85,86
88,89
89,90
89,91
90,91
92,93
93,94
93,95
94,95
-----nextToken-----
2,4,7,9,14,16,17,21,22,27,29,31,36,38,43,44,47,48,51,58,60,61,62,68,70,71,72,76,78,80,82,86,87,91,95,96
-----computeFrom-----
41,42
41,43
45,46
45,47
54,55
54,56
64,65
64,66
81,82
81,83
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_67b_badSink(CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_67_structType myStruct){    twoIntsStruct * data = myStruct.structFirst;    {        twoIntsStruct source[100];        {            size_t i;            /* Initialize array */            for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }        }        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */        memcpy(data, source, 100*sizeof(twoIntsStruct));        printStructLine(&data[0]);    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_67b_badSink(CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_67_structType myStruct)
CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_67b_badSink
CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_67_structType myStruct
CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_67_structType
CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_67_structType
myStruct
myStruct
{    twoIntsStruct * data = myStruct.structFirst;    {        twoIntsStruct source[100];        {            size_t i;            /* Initialize array */            for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }        }        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */        memcpy(data, source, 100*sizeof(twoIntsStruct));        printStructLine(&data[0]);    }}
twoIntsStruct * data = myStruct.structFirst;
twoIntsStruct * data = myStruct.structFirst;
twoIntsStruct
twoIntsStruct
* data = myStruct.structFirst
*
data
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
{        twoIntsStruct source[100];        {            size_t i;            /* Initialize array */            for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }        }        /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */        memcpy(data, source, 100*sizeof(twoIntsStruct));        printStructLine(&data[0]);    }
twoIntsStruct source[100];
twoIntsStruct source[100];
twoIntsStruct
twoIntsStruct
source[100]
source
[100]
100
{            size_t i;            /* Initialize array */            for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }        }
size_t i;
size_t i;
size_t
size_t
i
i
for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{                source[i].intOne = 0;                source[i].intTwo = 0;            }
source[i].intOne = 0;
source[i].intOne = 0
source[i].intOne
source[i]
source
source
i
i
intOne
0
source[i].intTwo = 0;
source[i].intTwo = 0
source[i].intTwo
source[i]
source
source
i
i
intTwo
0
memcpy(data, source, 100*sizeof(twoIntsStruct));
memcpy(data, source, 100*sizeof(twoIntsStruct))
memcpy
memcpy
data
data
source
source
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
-----joern-----
(12,17,0)
(24,16,0)
(46,39,0)
(16,15,0)
(15,16,0)
(40,32,0)
(27,41,0)
(48,41,0)
(33,40,0)
(36,24,0)
(25,26,0)
(26,40,0)
(20,39,0)
(42,13,0)
(24,34,0)
(9,8,0)
(34,32,0)
(19,34,0)
(41,39,0)
(29,39,0)
(34,3,0)
(3,43,0)
(10,48,0)
(4,41,0)
(45,24,0)
(0,3,0)
(8,34,0)
(17,39,0)
(21,32,0)
(37,22,0)
(30,17,0)
(31,44,0)
(5,6,0)
(44,28,0)
(23,8,0)
(15,40,0)
(41,48,0)
(8,40,0)
(17,44,0)
(47,46,0)
(35,3,0)
(8,6,0)
(48,13,0)
(44,17,0)
(7,39,0)
(16,24,0)
(11,29,0)
(13,14,0)
(6,22,0)
(1,26,0)
(6,8,0)
(3,34,0)
(18,46,0)
(22,6,0)
(2,28,0)
(28,14,0)
(46,47,1)
(16,24,1)
(24,34,1)
(8,34,1)
(42,48,1)
(38,15,1)
(4,46,1)
(11,28,1)
(28,2,1)
(27,4,1)
(31,17,1)
(13,42,1)
(35,0,1)
(48,10,1)
(9,23,1)
(7,34,1)
(44,31,1)
(18,39,1)
(18,29,1)
(29,11,1)
(17,39,1)
(3,43,1)
(22,37,1)
(48,41,1)
(47,18,1)
(2,44,1)
(44,17,1)
(24,36,1)
(23,46,1)
(20,7,1)
(10,41,1)
(6,22,1)
(45,8,1)
(29,39,1)
(46,39,1)
(5,9,1)
(3,35,1)
(34,3,1)
(30,12,1)
(41,27,1)
(41,39,1)
(12,13,1)
(39,20,1)
(8,6,1)
(17,30,1)
(36,45,1)
(15,16,1)
(0,19,1)
(37,5,1)
(2,46,2)
(48,46,2)
(3,43,2)
(6,22,2)
(16,24,2)
(4,46,2)
(17,46,2)
(24,34,2)
(15,16,2)
(46,46,2)
(29,39,2)
(44,46,2)
(29,46,2)
(10,46,2)
(28,46,2)
(30,46,2)
(11,46,2)
(8,34,2)
(41,39,2)
(8,6,2)
(41,46,2)
(17,39,2)
(44,17,2)
(31,46,2)
(47,46,2)
(46,39,2)
(42,46,2)
(12,46,2)
(13,46,2)
(34,3,2)
(48,41,2)
(18,46,2)
(27,46,2)
-----------------------------------
(0,myStruct)
(1,i)
(2,0)
(3,myStruct.structFirst)
(4,source)
(5,100)
(6,100*sizeof(twoIntsStruct)
(7,i)
(8,memcpy(data, source, 100*sizeof(twoIntsStruct)
(9,source)
(10,intOne)
(11,i)
(12,source)
(13,source[i].intOne = 0)
(14,)
(15,printStructLine(&data[0])
(16,&data[0])
(17,source[i])
(18,i)
(19,data)
(20,0)
(21,data)
(22,sizeof(twoIntsStruct)
(23,data)
(24,data[0])
(25,for (i = 0; i < 100; i++)
(26,)
(27,i)
(28,source[i].intTwo = 0)
(29,i++)
(30,i)
(31,intTwo)
(32,)
(33,source)
(34,* data = myStruct.structFirst)
(35,structFirst)
(36,0)
(37,twoIntsStruct)
(38,RET)
(39,i = 0)
(40,)
(41,source[i])
(42,0)
(43,CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_67_structType myStruct)
(44,source[i].intTwo)
(45,data)
(46,i < 100)
(47,100)
(48,source[i].intOne)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^