-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_44_bad()
{
    int64_t * data;
    /* define a function pointer */
    void (*funcPtr) (int64_t *) = badSink;
    data = NULL;
    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */
    data = (int64_t *)malloc(50*sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
16,17
16,18
16,19
17,18
17,19
20,21
20,22
21,22
23,24
23,25
26,27
27,28
29,30
30,31
30,32
31,32
33,34
35,36
36,37
36,38
37,38
39,40
39,41
40,41
40,42
41,42
43,44
45,46
45,47
46,47
48,49
48,50
50,51
51,52
51,53
52,53
55,56
55,57
56,57
56,58
57,58
59,60
61,62
62,63
63,64
63,65
64,65
66,67
68,69
69,70
69,71
70,71
72,73
-----nextToken-----
2,4,9,11,12,15,18,19,22,24,25,28,32,34,38,42,44,47,49,53,54,58,60,65,67,71,73
-----computeFrom-----
30,31
30,32
36,37
36,38
48,49
48,50
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_44_bad(){    int64_t * data;    /* define a function pointer */    void (*funcPtr) (int64_t *) = badSink;    data = NULL;    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (int64_t *)malloc(50*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* use the function pointer */    funcPtr(data);}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_44_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_44_bad
{    int64_t * data;    /* define a function pointer */    void (*funcPtr) (int64_t *) = badSink;    data = NULL;    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (int64_t *)malloc(50*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* use the function pointer */    funcPtr(data);}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
void (*funcPtr) (int64_t *) = badSink;
void (*funcPtr) (int64_t *) = badSink;
void
(*funcPtr) (int64_t *) = badSink
*funcPtr
*
funcPtr
int64_t *
int64_t
int64_t
*
*

= badSink
badSink
badSink
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)malloc(50*sizeof(int64_t));
data = (int64_t *)malloc(50*sizeof(int64_t))
data
data
(int64_t *)malloc(50*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(50*sizeof(int64_t))
malloc
malloc
50*sizeof(int64_t)
50
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(17,21,0)
(23,1,0)
(2,26,0)
(22,15,0)
(25,10,0)
(22,1,0)
(23,8,0)
(10,26,0)
(24,10,0)
(5,19,0)
(8,23,0)
(27,16,0)
(12,26,0)
(19,26,0)
(18,19,0)
(0,21,0)
(1,22,0)
(7,23,0)
(13,4,0)
(4,26,0)
(9,8,0)
(17,3,0)
(21,17,0)
(20,26,0)
(11,16,0)
(1,23,0)
(16,2,0)
(14,2,0)
(2,22,0)
(22,2,0)
(4,2,0)
(15,22,0)
(28,26,0)
(4,13,1)
(11,2,1)
(23,8,1)
(25,19,1)
(16,27,1)
(13,16,1)
(0,16,1)
(10,24,1)
(6,4,1)
(24,25,1)
(22,15,1)
(27,11,1)
(14,10,1)
(9,7,1)
(13,17,1)
(7,14,1)
(2,22,1)
(16,2,1)
(8,9,1)
(1,23,1)
(19,18,1)
(17,21,1)
(22,1,1)
(21,0,1)
(4,2,1)
(18,5,1)
(2,22,2)
(17,21,2)
(16,2,2)
(22,15,2)
(1,23,2)
(21,16,2)
(22,1,2)
(4,2,2)
(23,8,2)
(17,16,2)
(0,16,2)
-----------------------------------
(0,1)
(1,malloc(50*sizeof(int64_t)
(2,data = (int64_t *)
(3,)
(4,funcPtr(data)
(5,funcPtr)
(6,RET)
(7,50)
(8,sizeof(int64_t)
(9,int64_t)
(10,data = NULL)
(11,data)
(12,data)
(13,data)
(14,data)
(15,int64_t *)
(16,data == NULL)
(17,exit(-1)
(18,badSink)
(19,(*funcPtr)
(20,funcPtr)
(21,-1)
(22,(int64_t *)
(23,50*sizeof(int64_t)
(24,NULL)
(25,data)
(26,)
(27,NULL)
(28,if (data == NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^