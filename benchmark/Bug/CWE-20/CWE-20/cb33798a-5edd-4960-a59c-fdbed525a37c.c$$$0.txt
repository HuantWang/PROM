-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_16_bad()
{
    unsigned int data;
    data = 0;
    while(1)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%u", &data);
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
30,31
30,32
32,33
32,34
33,34
33,35
33,36
34,35
35,36
36,37
38,39
39,40
39,41
41,42
41,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,29,31,37,40,42,45,49,51,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_16_bad(){    unsigned int data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_16_bad()
CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_16_bad
{    unsigned int data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }        break;    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        break;    }
1
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%u", &data);        break;    }
fscanf (stdin, "%u", &data);
fscanf (stdin, "%u", &data)
fscanf
fscanf
stdin
stdin
"%u"
&data
data
data
break;
while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
break;
-----joern-----
(19,7,0)
(2,18,0)
(18,21,0)
(23,19,0)
(13,26,0)
(22,21,0)
(7,3,0)
(19,0,0)
(1,0,0)
(9,26,0)
(10,18,0)
(7,19,0)
(8,3,0)
(5,10,0)
(10,0,0)
(14,0,0)
(16,2,0)
(4,7,0)
(27,18,0)
(0,26,0)
(6,2,0)
(2,0,0)
(11,7,0)
(12,18,0)
(27,2,0)
(15,27,0)
(24,26,0)
(11,4,1)
(19,0,1)
(16,6,1)
(27,2,1)
(17,0,1)
(27,15,1)
(8,7,1)
(25,8,1)
(20,22,1)
(6,10,1)
(4,17,1)
(10,0,1)
(20,25,1)
(19,23,1)
(14,1,1)
(0,14,1)
(22,27,1)
(10,5,1)
(25,17,1)
(23,11,1)
(2,16,1)
(5,25,1)
(15,2,1)
(2,0,1)
(7,19,1)
(8,17,2)
(6,25,2)
(27,25,2)
(4,17,2)
(7,17,2)
(7,19,2)
(19,17,2)
(22,25,2)
(2,25,2)
(11,17,2)
(2,0,2)
(23,17,2)
(27,2,2)
(10,25,2)
(16,25,2)
(10,0,2)
(19,0,2)
(5,25,2)
(15,25,2)
-----------------------------------
(0,data = 0)
(1,data)
(2,result = data)
(3,)
(4,stdin)
(5,data)
(6,result)
(7,fscanf (stdin, "%u", &data)
(8,break;)
(9,while(1)
(10,data++)
(11,"%u")
(12,result)
(13,data)
(14,0)
(15,result)
(16,data)
(17,1)
(18,)
(19,&data)
(20,RET)
(21,)
(22,break;)
(23,data)
(24,while(1)
(25,1)
(26,)
(27,printUnsignedLine(result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^