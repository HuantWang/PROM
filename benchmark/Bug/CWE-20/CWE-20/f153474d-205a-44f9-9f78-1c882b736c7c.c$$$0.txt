-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_bad()
{
    int i,j;
    unsigned int data;
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    for(j = 0; j < 1; j++)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
38,39
38,40
39,40
41,42
41,43
42,43
42,44
45,46
46,47
48,49
48,50
48,51
48,52
49,50
50,51
50,52
51,52
54,55
54,56
55,56
58,59
59,60
61,62
62,63
62,64
62,65
63,64
64,65
65,66
67,68
68,69
68,70
70,71
70,72
72,73
73,74
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,8,10,12,15,17,21,22,27,28,31,32,35,40,43,44,47,52,53,56,57,60,66,69,71,74,78,80
-----computeFrom-----
19,20
19,21
25,26
25,27
29,30
29,31
38,39
38,40
50,51
50,52
54,55
54,56
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_bad(){    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_bad()
CWE190_Integer_Overflow__unsigned_int_rand_postinc_17_bad
{    int i,j;    unsigned int data;    data = 0;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }}
int i,j;
int i,j;
int
i
i
j
j
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
for(j = 0; j < 1; j++)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            unsigned int result = data;            printUnsignedLine(result);        }
data++;
data++
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(6,35,0)
(35,9,0)
(25,29,0)
(1,37,0)
(40,19,0)
(22,40,0)
(4,19,0)
(28,36,0)
(11,33,0)
(16,0,0)
(17,19,0)
(41,19,0)
(32,33,0)
(27,39,0)
(30,12,0)
(12,36,0)
(34,32,0)
(31,29,0)
(9,35,0)
(27,36,0)
(23,12,0)
(37,0,0)
(39,24,0)
(36,10,0)
(3,19,0)
(38,12,0)
(35,36,0)
(38,39,0)
(12,40,0)
(15,19,0)
(35,6,0)
(5,39,0)
(21,11,0)
(26,32,0)
(27,40,0)
(20,0,0)
(8,33,0)
(13,38,0)
(7,27,0)
(36,35,0)
(29,0,0)
(14,33,0)
(12,39,0)
(18,40,0)
(37,0,1)
(35,6,1)
(12,36,1)
(12,30,1)
(38,13,1)
(29,0,1)
(21,38,1)
(37,1,1)
(13,12,1)
(36,35,1)
(35,9,1)
(32,26,1)
(32,33,1)
(18,22,1)
(1,36,1)
(16,40,1)
(33,8,1)
(27,40,1)
(11,21,1)
(34,33,1)
(20,16,1)
(14,29,1)
(28,29,1)
(7,32,1)
(23,27,1)
(29,31,1)
(34,11,1)
(40,18,1)
(0,20,1)
(38,12,1)
(25,37,1)
(12,40,1)
(26,34,1)
(27,36,1)
(2,32,1)
(27,7,1)
(11,33,1)
(30,23,1)
(31,25,1)
(25,0,1)
(6,28,1)
(8,14,1)
(32,32,2)
(12,32,2)
(29,0,2)
(12,36,2)
(36,35,2)
(35,9,2)
(34,32,2)
(1,29,2)
(31,29,2)
(11,32,2)
(6,29,2)
(38,12,2)
(25,29,2)
(12,40,2)
(27,36,2)
(37,29,2)
(13,32,2)
(29,29,2)
(37,0,2)
(30,32,2)
(35,29,2)
(32,33,2)
(27,32,2)
(7,32,2)
(35,6,2)
(23,32,2)
(11,33,2)
(38,32,2)
(28,29,2)
(26,32,2)
(36,29,2)
(27,40,2)
(21,32,2)
-----------------------------------
(0,i = 0)
(1,i)
(2,RET)
(3,for(i = 0; i < 1; i++)
(4,data)
(5,result)
(6,RAND32()
(7,data)
(8,0)
(9,unsigned int)
(10,)
(11,j++)
(12,result = data)
(13,result)
(14,j)
(15,j)
(16,i)
(17,i)
(18,0)
(19,)
(20,0)
(21,j)
(22,data)
(23,result)
(24,)
(25,i)
(26,1)
(27,data++)
(28,data)
(29,i < 1)
(30,data)
(31,1)
(32,j < 1)
(33,j = 0)
(34,j)
(35,(unsigned int)
(36,data = (unsigned int)
(37,i++)
(38,printUnsignedLine(result)
(39,)
(40,data = 0)
(41,for(j = 0; j < 1; j++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^