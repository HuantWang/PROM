-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_45_bad()
{
    char * data;
    data = NULL;
    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */
    data = (char *)malloc(50*sizeof(char));
    if (data == NULL) {exit(-1);}
    data[0] = '\0'; /* null terminate */
    CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_45_badData = data;
    badSink();
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
51,53
52,53
56,57
57,58
57,59
58,59
60,61
62,63
63,64
64,65
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,39,41,46,48,53,54,55,59,61,65
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
37,38
37,39
50,51
50,52
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_45_bad(){    char * data;    data = NULL;    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (char *)malloc(50*sizeof(char));    if (data == NULL) {exit(-1);}    data[0] = '\0'; /* null terminate */    CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_45_badData = data;    badSink();}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_45_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_45_bad
{    char * data;    data = NULL;    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (char *)malloc(50*sizeof(char));    if (data == NULL) {exit(-1);}    data[0] = '\0'; /* null terminate */    CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_45_badData = data;    badSink();}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (char *)malloc(50*sizeof(char));
data = (char *)malloc(50*sizeof(char))
data
data
(char *)malloc(50*sizeof(char))
char *
char
*
*
malloc(50*sizeof(char))
malloc
malloc
50*sizeof(char)
50
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = '\0';
data[0] = '\0'
data[0]
data
data
0
'\0'
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_45_badData = data;
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_45_badData = data
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_45_badData
data
data
badSink();
badSink()
badSink
badSink
-----joern-----
(27,19,0)
(23,22,0)
(8,12,0)
(11,21,0)
(3,17,0)
(10,28,0)
(23,18,0)
(18,27,0)
(13,21,0)
(25,17,0)
(27,15,0)
(19,27,0)
(12,8,0)
(16,28,0)
(5,22,0)
(1,12,0)
(15,27,0)
(13,19,0)
(26,30,0)
(30,22,0)
(26,18,0)
(2,22,0)
(8,31,0)
(17,22,0)
(19,13,0)
(21,13,0)
(28,18,0)
(9,13,0)
(14,30,0)
(24,26,0)
(18,22,0)
(6,22,0)
(4,26,0)
(29,23,0)
(7,18,0)
(27,18,0)
(20,23,0)
(29,30,1)
(28,10,1)
(9,7,1)
(17,3,1)
(16,18,1)
(20,29,1)
(10,16,1)
(4,28,1)
(23,20,1)
(2,23,1)
(21,11,1)
(28,18,1)
(26,18,1)
(12,1,1)
(8,12,1)
(7,17,1)
(1,28,1)
(19,13,1)
(3,25,1)
(4,8,1)
(24,4,1)
(27,19,1)
(30,14,1)
(26,24,1)
(23,18,1)
(11,9,1)
(18,27,1)
(14,26,1)
(27,15,1)
(13,21,1)
(0,2,1)
(8,12,2)
(27,19,2)
(18,27,2)
(27,15,2)
(8,28,2)
(13,21,2)
(28,18,2)
(19,13,2)
(26,18,2)
(1,28,2)
(23,18,2)
(12,28,2)
-----------------------------------
(0,RET)
(1,1)
(2,badSink()
(3,NULL)
(4,data)
(5,if (data == NULL)
(6,data)
(7,data)
(8,exit(-1)
(9,50)
(10,NULL)
(11,char)
(12,-1)
(13,50*sizeof(char)
(14,'\\\\0')
(15,char *)
(16,data)
(17,data = NULL)
(18,data = (char *)
(19,malloc(50*sizeof(char)
(20,data)
(21,sizeof(char)
(22,)
(23,CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_45_badData = data)
(24,0)
(25,data)
(26,data[0])
(27,(char *)
(28,data == NULL)
(29,CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_45_badData)
(30,data[0] = '\\\\0')
(31,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^