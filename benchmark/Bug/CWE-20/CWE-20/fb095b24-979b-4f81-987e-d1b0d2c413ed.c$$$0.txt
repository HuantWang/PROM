-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_44_bad()
{
    char * data;
    /* define a function pointer */
    void (*funcPtr) (char *) = badSink;
    data = (char *)malloc(100*sizeof(char));
    if (data == NULL) {exit(-1);}
    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
    memset(data, 'A', 100-1); /* fill with 'A's */
    data[100-1] = '\0'; /* null terminate */
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
31,33
32,33
32,34
34,35
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
59,62
59,63
60,61
62,63
65,66
65,67
68,69
69,70
69,71
70,71
70,72
71,72
73,74
73,75
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,30,33,35,38,40,43,44,48,50,55,57,61,63,64,66,67,72,74,75,76,80,82
-----computeFrom-----
28,29
28,30
39,40
39,41
46,47
46,48
65,66
65,67
69,70
69,71
73,74
73,75
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_44_bad(){    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = badSink;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */    memset(data, 'A', 100-1); /* fill with 'A's */    data[100-1] = '\0'; /* null terminate */    /* use the function pointer */    funcPtr(data);}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_44_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_44_bad
{    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = badSink;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */    memset(data, 'A', 100-1); /* fill with 'A's */    data[100-1] = '\0'; /* null terminate */    /* use the function pointer */    funcPtr(data);}
char * data;
char * data;
char
* data
*
data
void (*funcPtr) (char *) = badSink;
void (*funcPtr) (char *) = badSink;
void
(*funcPtr) (char *) = badSink
*funcPtr
*
funcPtr
char *
char
*
*

= badSink
badSink
badSink
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(data, 'A', 100-1);
memset(data, 'A', 100-1)
memset
memset
data
data
'A'
100-1
100
1
data[100-1] = '\0';
data[100-1] = '\0'
data[100-1]
data
data
100-1
100
1
'\0'
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(21,28,0)
(16,22,0)
(21,31,0)
(11,4,0)
(18,9,0)
(37,4,0)
(32,15,0)
(28,21,0)
(31,39,0)
(38,31,0)
(1,39,0)
(28,15,0)
(4,34,0)
(5,23,0)
(20,1,0)
(8,39,0)
(27,39,0)
(6,38,0)
(0,31,0)
(23,18,0)
(12,3,0)
(14,9,0)
(10,32,0)
(35,25,0)
(38,39,0)
(4,31,0)
(29,1,0)
(31,21,0)
(18,23,0)
(4,39,0)
(17,15,0)
(18,31,0)
(26,3,0)
(35,22,0)
(34,4,0)
(7,34,0)
(2,39,0)
(3,31,0)
(19,23,0)
(15,28,0)
(22,35,0)
(30,21,0)
(21,30,0)
(15,32,0)
(9,39,0)
(36,34,0)
(13,18,0)
(18,31,1)
(15,32,1)
(19,13,1)
(11,35,1)
(31,21,1)
(11,3,1)
(21,28,1)
(4,31,1)
(16,3,1)
(14,18,1)
(28,15,1)
(37,11,1)
(12,31,1)
(7,36,1)
(22,16,1)
(36,37,1)
(20,29,1)
(9,14,1)
(4,34,1)
(0,1,1)
(32,10,1)
(26,12,1)
(21,30,1)
(18,23,1)
(34,7,1)
(6,9,1)
(38,31,1)
(3,31,1)
(13,4,1)
(10,17,1)
(5,19,1)
(3,26,1)
(1,20,1)
(35,22,1)
(17,0,1)
(24,38,1)
(23,5,1)
(38,6,1)
(35,22,2)
(31,21,2)
(18,23,2)
(16,3,2)
(15,32,2)
(3,31,2)
(4,31,2)
(28,15,2)
(35,3,2)
(21,30,2)
(4,34,2)
(21,28,2)
(38,31,2)
(22,3,2)
(18,31,2)
-----------------------------------
(0,data)
(1,(*funcPtr)
(2,funcPtr)
(3,data == NULL)
(4,memset(data, 'A', 100-1)
(5,1)
(6,data)
(7,1)
(8,if (data == NULL)
(9,data[100-1] = '\\\\0')
(10,char)
(11,data)
(12,data)
(13,data)
(14,'\\\\0')
(15,100*sizeof(char)
(16,1)
(17,100)
(18,data[100-1])
(19,100)
(20,badSink)
(21,(char *)
(22,-1)
(23,100-1)
(24,RET)
(25,)
(26,NULL)
(27,data)
(28,malloc(100*sizeof(char)
(29,funcPtr)
(30,char *)
(31,data = (char *)
(32,sizeof(char)
(33,memset(data, \'A\', 100-1)
(34,100-1)
(35,exit(-1)
(36,100)
(37,'A')
(38,funcPtr(data)
(39,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^