-----label-----
1
-----code-----
void CWE126_Buffer_Overread__malloc_wchar_t_memcpy_02_bad()
{
    wchar_t * data;
    data = NULL;
    if(1)
    {
        /* FLAW: Use a small buffer */
        data = (wchar_t *)malloc(50*sizeof(wchar_t));
        if (data == NULL) {exit(-1);}
        wmemset(data, L'A', 50-1); /* fill with 'A's */
        data[50-1] = L'\0'; /* null terminate */
    }
    {
        wchar_t dest[100];
        wmemset(dest, L'C', 100-1);
        dest[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: using memcpy with the length of the dest where data
         * could be smaller than dest causing buffer overread */
        memcpy(dest, data, wcslen(dest)*sizeof(wchar_t));
        dest[100-1] = L'\0';
        printWLine(dest);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
20,21
20,22
20,23
20,24
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
28,29
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
39,40
39,41
40,41
40,42
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
53,56
53,57
54,55
56,57
59,60
59,61
62,63
63,64
63,65
64,65
64,66
65,66
67,68
67,69
71,72
71,73
71,74
71,75
71,76
71,77
71,78
72,73
73,74
73,75
75,76
75,77
77,78
79,80
80,81
80,82
80,83
80,84
81,82
83,84
86,87
86,88
89,90
90,91
90,92
91,92
91,93
92,93
94,95
94,96
98,99
99,100
99,101
99,102
99,103
100,101
102,103
104,105
106,107
106,108
107,108
107,109
108,109
110,111
112,113
113,114
113,115
116,117
117,118
117,119
118,119
118,120
119,120
121,122
121,123
125,126
126,127
126,128
127,128
129,130
131,132
132,133
132,134
133,134
135,136
-----nextToken-----
2,4,8,10,11,15,17,19,24,27,29,32,34,37,38,42,44,49,51,55,57,58,60,61,66,68,69,70,74,76,78,82,84,85,87,88,93,95,96,97,101,103,105,109,111,114,115,120,122,123,124,128,130,134,136
-----computeFrom-----
13,14
13,15
22,23
22,24
33,34
33,35
40,41
40,42
59,60
59,61
63,64
63,65
67,68
67,69
86,87
86,88
90,91
90,92
94,95
94,96
106,107
106,108
117,118
117,119
121,122
121,123
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE126_Buffer_Overread__malloc_wchar_t_memcpy_02_bad(){    wchar_t * data;    data = NULL;    if(1)    {        /* FLAW: Use a small buffer */        data = (wchar_t *)malloc(50*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        wmemset(data, L'A', 50-1); /* fill with 'A's */        data[50-1] = L'\0'; /* null terminate */    }    {        wchar_t dest[100];        wmemset(dest, L'C', 100-1);        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: using memcpy with the length of the dest where data         * could be smaller than dest causing buffer overread */        memcpy(dest, data, wcslen(dest)*sizeof(wchar_t));        dest[100-1] = L'\0';        printWLine(dest);        free(data);    }}
void
CWE126_Buffer_Overread__malloc_wchar_t_memcpy_02_bad()
CWE126_Buffer_Overread__malloc_wchar_t_memcpy_02_bad
{    wchar_t * data;    data = NULL;    if(1)    {        /* FLAW: Use a small buffer */        data = (wchar_t *)malloc(50*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        wmemset(data, L'A', 50-1); /* fill with 'A's */        data[50-1] = L'\0'; /* null terminate */    }    {        wchar_t dest[100];        wmemset(dest, L'C', 100-1);        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: using memcpy with the length of the dest where data         * could be smaller than dest causing buffer overread */        memcpy(dest, data, wcslen(dest)*sizeof(wchar_t));        dest[100-1] = L'\0';        printWLine(dest);        free(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(1)    {        /* FLAW: Use a small buffer */        data = (wchar_t *)malloc(50*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        wmemset(data, L'A', 50-1); /* fill with 'A's */        data[50-1] = L'\0'; /* null terminate */    }
1
{        /* FLAW: Use a small buffer */        data = (wchar_t *)malloc(50*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        wmemset(data, L'A', 50-1); /* fill with 'A's */        data[50-1] = L'\0'; /* null terminate */    }
data = (wchar_t *)malloc(50*sizeof(wchar_t));
data = (wchar_t *)malloc(50*sizeof(wchar_t))
data
data
(wchar_t *)malloc(50*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(50*sizeof(wchar_t))
malloc
malloc
50*sizeof(wchar_t)
50
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(data, L'A', 50-1);
wmemset(data, L'A', 50-1)
wmemset
wmemset
data
data
L'A'
50-1
50
1
data[50-1] = L'\0';
data[50-1] = L'\0'
data[50-1]
data
data
50-1
50
1
L'\0'
{        wchar_t dest[100];        wmemset(dest, L'C', 100-1);        dest[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: using memcpy with the length of the dest where data         * could be smaller than dest causing buffer overread */        memcpy(dest, data, wcslen(dest)*sizeof(wchar_t));        dest[100-1] = L'\0';        printWLine(dest);        free(data);    }
wchar_t dest[100];
wchar_t dest[100];
wchar_t
dest[100]
dest
[100]
100
wmemset(dest, L'C', 100-1);
wmemset(dest, L'C', 100-1)
wmemset
wmemset
dest
dest
L'C'
100-1
100
1
dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
memcpy(dest, data, wcslen(dest)*sizeof(wchar_t));
memcpy(dest, data, wcslen(dest)*sizeof(wchar_t))
memcpy
memcpy
dest
dest
data
data
wcslen(dest)*sizeof(wchar_t)
wcslen(dest)
wcslen
wcslen
dest
dest
sizeof(wchar_t)
wchar_t
wchar_t

dest[100-1] = L'\0';
dest[100-1] = L'\0'
dest[100-1]
dest
dest
100-1
100
1
L'\0'
printWLine(dest);
printWLine(dest)
printWLine
printWLine
dest
dest
free(data);
free(data)
free
free
data
data
-----joern-----
(38,5,0)
(19,2,0)
(6,26,0)
(19,18,0)
(21,4,0)
(14,39,0)
(2,9,0)
(11,41,0)
(5,34,0)
(35,19,0)
(28,16,0)
(8,2,0)
(37,18,0)
(20,39,0)
(39,20,0)
(32,41,0)
(34,18,0)
(5,12,0)
(16,28,0)
(16,11,0)
(26,3,0)
(42,2,0)
(10,12,0)
(11,16,0)
(39,28,0)
(34,11,0)
(34,5,0)
(27,2,0)
(18,9,0)
(5,38,0)
(19,11,0)
(4,11,0)
(43,34,0)
(7,9,0)
(29,34,0)
(33,9,0)
(3,13,0)
(36,20,0)
(25,38,0)
(34,2,0)
(28,39,0)
(40,11,0)
(17,8,0)
(1,41,0)
(16,15,0)
(3,26,0)
(0,2,0)
(12,5,0)
(30,4,0)
(15,16,0)
(24,18,0)
(4,11,1)
(39,20,1)
(35,8,1)
(25,12,1)
(14,40,1)
(28,39,1)
(23,18,1)
(36,14,1)
(19,35,1)
(34,5,1)
(26,6,1)
(16,28,1)
(27,1,1)
(19,11,1)
(10,29,1)
(30,21,1)
(29,43,1)
(12,10,1)
(5,38,1)
(11,16,1)
(17,42,1)
(19,18,1)
(21,11,1)
(42,34,1)
(5,12,1)
(38,25,1)
(6,4,1)
(1,4,1)
(34,11,1)
(24,37,1)
(22,19,1)
(34,18,1)
(16,15,1)
(40,23,1)
(27,23,1)
(43,27,1)
(8,17,1)
(3,26,1)
(18,24,1)
(1,3,1)
(20,36,1)
(4,30,1)
(28,23,2)
(11,16,2)
(39,23,2)
(3,4,2)
(26,4,2)
(4,11,2)
(20,23,2)
(3,26,2)
(16,23,2)
(16,28,2)
(36,23,2)
(1,23,2)
(30,23,2)
(5,12,2)
(40,23,2)
(34,5,2)
(6,4,2)
(21,23,2)
(4,23,2)
(16,15,2)
(34,11,2)
(11,23,2)
(34,18,2)
(19,18,2)
(14,23,2)
(39,20,2)
(28,39,2)
(5,38,2)
(19,11,2)
-----------------------------------
(0,dest)
(1,'\\\\0')
(2,)
(3,exit(-1)
(4,data == NULL)
(5,wcslen(dest)
(6,1)
(7,data)
(8,printWLine(dest)
(9,)
(10,dest)
(11,data = (wchar_t *)
(12,wcslen(dest)
(13,)
(14,50)
(15,wchar_t *)
(16,(wchar_t *)
(17,dest)
(18,data = NULL)
(19,free(data)
(20,sizeof(wchar_t)
(21,data)
(22,RET)
(23,1)
(24,NULL)
(25,wchar_t)
(26,-1)
(27,'\\\\0')
(28,malloc(50*sizeof(wchar_t)
(29,data)
(30,NULL)
(31,\'\\\\0\')
(32,if (data == NULL)
(33,if(1)
(34,memcpy(dest, data, wcslen(dest)
(35,data)
(36,wchar_t)
(37,data)
(38,sizeof(wchar_t)
(39,50*sizeof(wchar_t)
(40,data)
(41,)
(42,'\\\\0')
(43,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^