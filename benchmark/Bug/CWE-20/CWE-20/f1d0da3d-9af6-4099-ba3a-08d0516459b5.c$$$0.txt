-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_system_17_bad()
{
    int i;
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    for(i = 0; i < 1; i++)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
17,18
18,19
18,20
20,21
20,22
20,23
22,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
33,35
33,36
33,37
34,35
35,36
35,37
36,37
39,40
39,41
40,41
43,44
44,45
46,47
47,48
47,49
47,50
48,49
49,50
49,51
50,51
52,53
52,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
63,64
63,65
63,66
66,67
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
76,77
78,79
79,80
80,81
80,82
80,83
80,84
81,82
83,84
83,85
84,85
86,87
88,89
90,91
90,92
91,92
91,93
93,94
96,97
96,98
97,98
97,99
98,99
98,100
99,100
101,102
104,105
104,106
105,106
106,107
106,108
107,108
110,111
111,112
111,113
112,113
-----nextToken-----
2,4,8,10,13,15,16,19,21,23,26,30,32,37,38,41,42,45,51,53,57,59,62,64,65,69,71,75,77,82,85,87,89,92,94,95,100,102,103,108,109,113,114
-----computeFrom-----
28,29
28,30
35,36
35,37
39,40
39,41
73,74
73,75
83,84
83,85
90,91
90,92
91,92
91,93
97,98
97,99
-----guardedBy-----
75,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_system_17_bad(){    int i;    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_environment_system_17_bad()
CWE78_OS_Command_Injection__char_environment_system_17_bad
{    int i;    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
int i;
int i;
int
i
i
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(7,32,0)
(21,34,0)
(26,20,0)
(46,32,0)
(47,52,0)
(37,38,0)
(50,2,0)
(2,6,0)
(9,1,0)
(6,2,0)
(20,32,0)
(10,52,0)
(45,37,0)
(5,16,0)
(20,19,0)
(41,6,0)
(54,19,0)
(29,19,0)
(38,52,0)
(47,20,0)
(44,32,0)
(25,16,0)
(14,3,0)
(30,20,0)
(16,36,0)
(22,31,0)
(51,39,0)
(2,34,0)
(34,16,0)
(6,20,0)
(52,47,0)
(33,26,0)
(42,6,0)
(24,1,0)
(18,3,0)
(6,52,0)
(2,12,0)
(19,32,0)
(55,20,0)
(43,56,0)
(53,21,0)
(34,21,0)
(26,56,0)
(11,32,0)
(35,14,0)
(40,18,0)
(15,39,0)
(38,37,0)
(31,34,0)
(27,39,0)
(52,16,0)
(37,2,0)
(1,39,0)
(49,15,0)
(28,47,0)
(2,37,0)
(13,34,0)
(56,26,0)
(8,38,0)
(0,38,0)
(17,31,0)
(4,16,0)
(23,32,0)
(50,6,1)
(43,26,1)
(31,17,1)
(53,13,1)
(13,52,1)
(48,56,1)
(6,20,1)
(9,24,1)
(37,38,1)
(38,0,1)
(29,54,1)
(49,2,1)
(52,47,1)
(10,1,1)
(41,31,1)
(42,41,1)
(49,31,1)
(47,28,1)
(45,50,1)
(55,30,1)
(2,37,1)
(38,52,1)
(2,34,1)
(19,29,1)
(2,6,1)
(1,9,1)
(20,19,1)
(40,56,1)
(6,42,1)
(27,20,1)
(14,35,1)
(51,27,1)
(1,39,1)
(21,53,1)
(56,43,1)
(48,14,1)
(31,34,1)
(34,21,1)
(56,26,1)
(18,40,1)
(22,34,1)
(20,55,1)
(47,20,1)
(15,49,1)
(15,39,1)
(17,22,1)
(30,19,1)
(24,39,1)
(6,52,1)
(8,45,1)
(39,51,1)
(35,18,1)
(28,10,1)
(24,15,1)
(33,1,1)
(0,8,1)
(26,20,1)
(26,33,1)
(15,1,2)
(21,1,2)
(40,56,2)
(10,1,2)
(6,31,2)
(15,39,2)
(17,1,2)
(37,38,2)
(14,56,2)
(31,1,2)
(24,1,2)
(22,1,2)
(8,31,2)
(20,19,2)
(28,1,2)
(6,20,2)
(41,31,2)
(6,52,2)
(53,1,2)
(38,52,2)
(45,31,2)
(38,31,2)
(37,31,2)
(31,34,2)
(26,20,2)
(52,47,2)
(2,37,2)
(34,21,2)
(2,34,2)
(49,1,2)
(34,1,2)
(56,26,2)
(35,56,2)
(18,56,2)
(52,1,2)
(47,1,2)
(1,1,2)
(9,1,2)
(0,31,2)
(1,39,2)
(2,6,2)
(50,31,2)
(47,20,2)
(2,31,2)
(13,1,2)
(42,31,2)
-----------------------------------
(0,1)
(1,i < 1)
(2,strncat(data+dataLen, environment, 100-dataLen-1)
(3,)
(4,dataLen)
(5,environment)
(6,data+dataLen)
(7,data)
(8,dataLen)
(9,1)
(10,dataLen)
(11,for(i = 0; i < 1; i++)
(12,)
(13,environment)
(14,exit(1)
(15,i++)
(16,)
(17,NULL)
(18,printLine("command execution failed!")
(19,data_buf[100] = FULL_COMMAND)
(20,data = data_buf)
(21,GETENV(ENV_VARIABLE)
(22,environment)
(23,i)
(24,i)
(25,if (environment != NULL)
(26,SYSTEM(data)
(27,i)
(28,data)
(29,FULL_COMMAND)
(30,data)
(31,environment != NULL)
(32,)
(33,data)
(34,* environment = GETENV(ENV_VARIABLE)
(35,1)
(36,)
(37,100-dataLen-1)
(38,dataLen-1)
(39,i = 0)
(40,"command execution failed!")
(41,data)
(42,dataLen)
(43,0)
(44,data_buf)
(45,100)
(46,if (SYSTEM(data)
(47,strlen(data)
(48,RET)
(49,i)
(50,environment)
(51,0)
(52,dataLen = strlen(data)
(53,ENV_VARIABLE)
(54,data_buf)
(55,data_buf)
(56,SYSTEM(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^