-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_square_03_bad()
{
    int64_t data;
    data = 0LL;
    if(5==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (int64_t)RAND64();
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
            int64_t result = data * data;
            printLongLongLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
18,20
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
28,29
31,32
32,33
34,35
34,36
35,36
35,37
38,39
39,40
39,41
40,41
41,42
41,43
42,43
44,45
44,46
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,9,11,15,16,19,20,25,29,30,33,36,37,43,45,49,51,55,57
-----computeFrom-----
13,14
13,15
18,19
18,20
23,24
23,25
35,36
35,37
47,48
47,49
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_square_03_bad(){    int64_t data;    data = 0LL;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(5==5)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
void
CWE190_Integer_Overflow__int64_t_rand_square_03_bad()
CWE190_Integer_Overflow__int64_t_rand_square_03_bad
{    int64_t data;    data = 0LL;    if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }    if(5==5)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(5==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
5==5
5
5
{        /* POTENTIAL FLAW: Use a random value */        data = (int64_t)RAND64();    }
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
if(5==5)    {        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */            int64_t result = data * data;            printLongLongLine(result);        }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(26,18,0)
(27,8,0)
(20,25,0)
(4,12,0)
(10,12,0)
(21,8,0)
(5,3,0)
(0,18,0)
(24,22,0)
(23,8,0)
(3,23,0)
(0,5,0)
(14,12,0)
(8,27,0)
(7,3,0)
(5,18,0)
(8,21,0)
(2,25,0)
(19,3,0)
(8,23,0)
(3,5,0)
(11,0,0)
(17,12,0)
(13,23,0)
(1,5,0)
(6,22,0)
(18,9,0)
(23,15,0)
(13,22,1)
(16,0,1)
(22,6,1)
(2,23,1)
(8,21,1)
(8,27,1)
(21,13,1)
(5,3,1)
(20,2,1)
(1,25,1)
(16,25,1)
(3,23,1)
(6,24,1)
(25,20,1)
(3,19,1)
(11,5,1)
(2,22,1)
(0,11,1)
(0,5,1)
(23,8,1)
(7,1,1)
(24,10,1)
(19,7,1)
(23,22,2)
(7,25,2)
(13,22,2)
(8,21,2)
(3,23,2)
(0,5,2)
(0,25,2)
(8,22,2)
(5,25,2)
(1,25,2)
(23,8,2)
(8,27,2)
(3,25,2)
(19,25,2)
(11,25,2)
(21,22,2)
(5,3,2)
-----------------------------------
(0,printLongLongLine(result)
(1,result)
(2,5)
(3,data * data)
(4,if(5==5)
(5,result = data * data)
(6,5)
(7,data)
(8,(int64_t)
(9,)
(10,L)
(11,result)
(12,)
(13,data)
(14,if(5==5)
(15,)
(16,RET)
(17,data)
(18,)
(19,data)
(20,5)
(21,RAND64()
(22,5==5)
(23,data = (int64_t)
(24,5)
(25,5==5)
(26,result)
(27,int64_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^