-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_execlp_11_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* wexeclp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
83,85
83,86
83,87
83,88
83,89
84,85
86,87
88,89
90,91
92,93
94,95
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,85,87,89,91,93,95
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_execlp_11_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* wexeclp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__wchar_t_environment_execlp_11_bad()
CWE78_OS_Command_Injection__wchar_t_environment_execlp_11_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* wexeclp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(17,9,0)
(38,39,0)
(5,29,0)
(24,33,0)
(7,11,0)
(0,9,0)
(10,28,0)
(22,29,0)
(9,29,0)
(7,12,0)
(37,39,0)
(27,35,0)
(23,33,0)
(19,14,0)
(12,33,0)
(28,44,0)
(16,12,0)
(34,29,0)
(33,13,0)
(7,9,0)
(16,9,0)
(40,39,0)
(11,30,0)
(4,16,0)
(42,14,0)
(26,34,0)
(31,11,0)
(28,11,0)
(35,23,0)
(12,16,0)
(6,44,0)
(14,23,0)
(8,33,0)
(23,35,0)
(1,7,0)
(11,7,0)
(11,28,0)
(11,23,0)
(18,44,0)
(39,29,0)
(44,28,0)
(9,34,0)
(43,34,0)
(20,12,0)
(44,12,0)
(15,39,0)
(41,39,0)
(36,33,0)
(2,29,0)
(32,23,0)
(25,7,0)
(16,9,1)
(37,38,1)
(38,14,1)
(12,16,1)
(17,34,1)
(27,32,1)
(11,7,1)
(7,12,1)
(39,40,1)
(11,23,1)
(23,35,1)
(21,9,1)
(7,25,1)
(4,20,1)
(16,4,1)
(40,15,1)
(18,6,1)
(14,42,1)
(6,10,1)
(42,19,1)
(9,34,1)
(9,0,1)
(38,21,1)
(15,41,1)
(10,31,1)
(28,44,1)
(44,12,1)
(7,9,1)
(14,23,1)
(38,11,1)
(20,21,1)
(31,7,1)
(44,18,1)
(0,17,1)
(3,39,1)
(25,1,1)
(1,14,1)
(11,28,1)
(32,12,1)
(26,43,1)
(41,37,1)
(35,27,1)
(34,26,1)
(19,23,1)
(35,21,2)
(12,21,2)
(9,34,2)
(1,14,2)
(44,12,2)
(6,14,2)
(23,35,2)
(7,9,2)
(11,7,2)
(7,12,2)
(20,21,2)
(11,28,2)
(14,23,2)
(18,14,2)
(19,21,2)
(23,21,2)
(31,14,2)
(28,14,2)
(25,14,2)
(14,21,2)
(42,21,2)
(12,16,2)
(27,21,2)
(4,21,2)
(7,14,2)
(11,23,2)
(32,21,2)
(28,44,2)
(16,9,2)
(16,21,2)
(44,14,2)
(10,14,2)
(11,14,2)
-----------------------------------
(0,dataBuffer)
(1,data)
(2,if(globalReturnsTrue()
(3,RET)
(4,data)
(5,dataBuffer)
(6,dataLen)
(7,data+dataLen)
(8,if (environment != NULL)
(9,data = dataBuffer)
(10,100)
(11,wcsncat(data+dataLen, environment, 100-dataLen-1)
(12,dataLen = wcslen(data)
(13,)
(14,environment != NULL)
(15,COMMAND_ARG3)
(16,wcslen(data)
(17,data)
(18,1)
(19,environment)
(20,dataLen)
(21,globalReturnsTrue()
(22,data)
(23,* environment = GETENV(ENV_VARIABLE)
(24,environment)
(25,dataLen)
(26,COMMAND_ARG2)
(27,ENV_VARIABLE)
(28,100-dataLen-1)
(29,)
(30,)
(31,environment)
(32,environment)
(33,)
(34,dataBuffer[100] = COMMAND_ARG2)
(35,GETENV(ENV_VARIABLE)
(36,dataLen)
(37,COMMAND_INT)
(38,COMMAND_INT)
(39,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(40,NULL)
(41,COMMAND_ARG1)
(42,NULL)
(43,dataBuffer)
(44,dataLen-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^