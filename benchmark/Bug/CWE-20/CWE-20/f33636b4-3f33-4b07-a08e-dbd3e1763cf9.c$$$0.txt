-----label-----
1
-----code-----
static void badSink()
{
    wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_45_badData;
    {
        wchar_t source[10+1] = SRC_STRING;
        /* Copy length + 1 to include NUL terminator from source */
        /* POTENTIAL FLAW: data may not have enough space to hold source */
        wcsncpy(data, source, wcslen(source) + 1);
        printWLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
9,12
12,13
13,14
15,16
15,17
15,18
15,19
16,17
17,18
17,19
19,20
19,21
19,22
21,22
22,23
22,24
25,26
26,27
28,29
29,30
29,31
29,32
29,33
30,31
32,33
34,35
36,37
36,38
37,38
37,39
38,39
40,41
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,11,14,18,20,23,24,27,31,33,35,39,41,42,46,48,52,54
-----computeFrom-----
22,23
22,24
36,37
36,38
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;BinaryExpression;LiteralExpression;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_45_badData;    {        wchar_t source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        wcsncpy(data, source, wcslen(source) + 1);        printWLine(data);        free(data);    }}
static void
badSink()
badSink
{    wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_45_badData;    {        wchar_t source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        wcsncpy(data, source, wcslen(source) + 1);        printWLine(data);        free(data);    }}
wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_45_badData;
wchar_t * data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_45_badData;
wchar_t
* data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_45_badData
*
data
= CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_45_badData
{        wchar_t source[10+1] = SRC_STRING;        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        wcsncpy(data, source, wcslen(source) + 1);        printWLine(data);        free(data);    }
wchar_t source[10+1] = SRC_STRING;
wchar_t source[10+1] = SRC_STRING;
wchar_t
source[10+1] = SRC_STRING
source
[10+1]
10+1
10
1
= SRC_STRING
SRC_STRING
SRC_STRING
wcsncpy(data, source, wcslen(source) + 1);
wcsncpy(data, source, wcslen(source) + 1)
wcsncpy
wcsncpy
data
data
source
source
wcslen(source) + 1
wcslen(source)
wcslen
wcslen
source
source
1
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(5,6,0)
(4,19,0)
(2,5,0)
(12,4,0)
(4,18,0)
(4,5,0)
(0,10,0)
(2,10,0)
(8,18,0)
(20,4,0)
(14,19,0)
(15,10,0)
(19,4,0)
(21,8,0)
(13,5,0)
(9,5,0)
(7,18,0)
(4,10,0)
(8,19,0)
(17,15,0)
(10,6,0)
(11,2,0)
(18,10,0)
(15,5,0)
(19,8,0)
(1,18,0)
(3,6,0)
(11,15,1)
(13,9,1)
(4,18,1)
(19,8,1)
(18,7,1)
(20,18,1)
(4,5,1)
(7,1,1)
(16,2,1)
(8,18,1)
(15,5,1)
(21,12,1)
(15,17,1)
(2,5,1)
(17,4,1)
(4,19,1)
(5,13,1)
(2,11,1)
(19,14,1)
(1,5,1)
(14,8,1)
(12,20,1)
(8,21,1)
(8,18,2)
(4,19,2)
(19,8,2)
(4,5,2)
(15,5,2)
(4,18,2)
(2,5,2)
-----------------------------------
(0,source)
(1,source)
(2,free(data)
(3,data)
(4,wcsncpy(data, source, wcslen(source)
(5,* data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_45_badData)
(6,)
(7,SRC_STRING)
(8,wcslen(source)
(9,data)
(10,)
(11,data)
(12,source)
(13,CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_45_badData)
(14,1)
(15,printWLine(data)
(16,RET)
(17,data)
(18,source[10+1] = SRC_STRING)
(19,wcslen(source)
(20,data)
(21,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^