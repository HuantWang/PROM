-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_fgets_preinc_03_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(5==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    if(5==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
21,23
22,23
23,24
23,25
25,26
25,27
25,28
27,28
28,29
30,31
32,33
32,34
32,35
33,34
33,35
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
53,54
55,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
62,64
65,66
66,67
66,68
66,69
67,68
68,69
69,70
71,72
72,73
72,74
74,75
74,76
76,77
77,78
79,80
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,29,31,36,38,40,42,44,49,52,54,59,60,63,64,70,73,75,78,82,84
-----computeFrom-----
12,13
12,14
17,18
17,19
33,34
33,35
47,48
47,49
62,63
62,64
-----guardedBy-----
38,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_fgets_preinc_03_bad(){    int data;    /* Initialize data */    data = 0;    if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_fgets_preinc_03_bad()
CWE190_Integer_Overflow__int_fgets_preinc_03_bad
{    int data;    /* Initialize data */    data = 0;    if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
5==5
5
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
if(5==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
5==5
5
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(44,11,0)
(41,32,0)
(22,4,0)
(8,18,0)
(7,18,0)
(43,32,0)
(10,32,0)
(1,7,0)
(13,15,0)
(30,40,0)
(18,39,0)
(29,28,0)
(4,24,0)
(26,1,0)
(23,7,0)
(17,24,0)
(21,12,0)
(17,1,0)
(33,15,0)
(27,40,0)
(19,31,0)
(40,39,0)
(40,31,0)
(5,17,0)
(39,15,0)
(7,36,0)
(28,32,0)
(15,42,0)
(34,1,0)
(1,28,0)
(6,39,0)
(31,40,0)
(4,7,0)
(3,40,0)
(2,12,0)
(35,16,0)
(38,11,0)
(9,35,0)
(0,28,0)
(25,39,0)
(24,14,0)
(37,24,0)
(4,28,0)
(1,24,0)
(18,7,0)
(31,40,1)
(0,29,1)
(18,39,1)
(4,7,1)
(34,26,1)
(22,12,1)
(20,12,1)
(18,8,1)
(31,19,1)
(25,11,1)
(8,23,1)
(11,44,1)
(5,1,1)
(4,22,1)
(23,31,1)
(2,7,1)
(26,4,1)
(19,40,1)
(17,5,1)
(3,39,1)
(20,17,1)
(1,28,1)
(27,30,1)
(1,34,1)
(4,28,1)
(2,35,1)
(6,25,1)
(1,7,1)
(44,38,1)
(40,27,1)
(28,0,1)
(9,31,1)
(7,18,1)
(12,21,1)
(21,2,1)
(2,11,1)
(30,3,1)
(35,9,1)
(38,28,1)
(17,1,1)
(39,6,1)
(40,39,1)
(1,7,2)
(9,31,2)
(18,39,2)
(22,12,2)
(1,12,2)
(25,11,2)
(30,11,2)
(4,7,2)
(40,39,2)
(26,12,2)
(40,11,2)
(17,1,2)
(39,11,2)
(5,12,2)
(17,12,2)
(19,11,2)
(7,31,2)
(31,11,2)
(35,31,2)
(34,12,2)
(27,11,2)
(4,28,2)
(23,31,2)
(8,31,2)
(3,11,2)
(4,12,2)
(7,18,2)
(18,31,2)
(6,11,2)
(31,40,2)
(1,28,2)
-----------------------------------
(0,0)
(1,result = data)
(2,5)
(3,inputBuffer)
(4,++data)
(5,result)
(6,"")
(7,data = atoi(inputBuffer)
(8,inputBuffer)
(9,"fgets()
(10,if(5==5)
(11,5==5)
(12,5==5)
(13,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(14,)
(15,)
(16,)
(17,printIntLine(result)
(18,atoi(inputBuffer)
(19,NULL)
(20,RET)
(21,5)
(22,data)
(23,data)
(24,)
(25,inputBuffer)
(26,result)
(27,stdin)
(28,data = 0)
(29,data)
(30,CHAR_ARRAY_SIZE)
(31,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(32,)
(33,inputBuffer)
(34,data)
(35,printLine("fgets()
(36,)
(37,result)
(38,5)
(39,inputBuffer[CHAR_ARRAY_SIZE] = "")
(40,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(41,data)
(42,)
(43,if(5==5)
(44,5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^