-----label-----
1
-----code-----
static void badSink()
{
    int data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_45_badData;
    {
        int i;
        int * buffer = (int *)malloc(10 * sizeof(int));
        if (buffer == NULL) {exit(-1);}
        /* initialize buffer */
        for (i = 0; i < 10; i++)
        {
            buffer[i] = 0;
        }
        /* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound
         * This code does check to see if the array index is negative */
        if (data >= 0)
        {
            buffer[data] = 1;
            /* Print the array values */
            for(i = 0; i < 10; i++)
            {
                printIntLine(buffer[i]);
            }
        }
        else
        {
            printLine("ERROR: Array index is negative.");
        }
        free(buffer);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
14,17
14,18
14,19
14,20
15,16
16,17
16,18
18,19
20,21
21,22
21,23
23,24
23,25
23,26
26,27
27,28
27,29
28,29
28,30
30,31
32,33
32,34
33,34
35,36
35,37
37,38
38,39
38,40
41,42
41,43
42,43
42,44
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
54,55
54,56
54,57
54,58
55,56
56,57
56,58
57,58
60,61
60,62
61,62
64,65
65,66
67,68
68,69
69,70
69,71
70,71
70,72
71,72
73,74
76,77
76,78
76,79
77,78
77,79
78,79
81,82
81,83
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
90,92
90,93
90,94
91,92
92,93
92,94
93,94
96,97
96,98
97,98
100,101
101,102
103,104
104,105
105,106
105,107
106,107
108,109
108,110
109,110
111,112
113,114
114,115
115,116
115,117
116,117
119,120
120,121
120,122
121,122
123,124
-----nextToken-----
2,4,8,10,13,17,19,22,24,25,29,31,34,36,39,40,44,46,51,53,58,59,62,63,66,72,74,75,79,80,86,88,89,94,95,98,99,102,107,110,112,117,118,122,124
-----computeFrom-----
35,36
35,37
42,43
42,44
56,57
56,58
60,61
60,62
69,70
69,71
77,78
77,79
83,84
83,85
92,93
92,94
96,97
96,98
-----guardedBy-----
79,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    int data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_45_badData;    {        int i;        int * buffer = (int *)malloc(10 * sizeof(int));        if (buffer == NULL) {exit(-1);}        /* initialize buffer */        for (i = 0; i < 10; i++)        {            buffer[i] = 0;        }        /* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound         * This code does check to see if the array index is negative */        if (data >= 0)        {            buffer[data] = 1;            /* Print the array values */            for(i = 0; i < 10; i++)            {                printIntLine(buffer[i]);            }        }        else        {            printLine("ERROR: Array index is negative.");        }        free(buffer);    }}
static void
badSink()
badSink
{    int data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_45_badData;    {        int i;        int * buffer = (int *)malloc(10 * sizeof(int));        if (buffer == NULL) {exit(-1);}        /* initialize buffer */        for (i = 0; i < 10; i++)        {            buffer[i] = 0;        }        /* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound         * This code does check to see if the array index is negative */        if (data >= 0)        {            buffer[data] = 1;            /* Print the array values */            for(i = 0; i < 10; i++)            {                printIntLine(buffer[i]);            }        }        else        {            printLine("ERROR: Array index is negative.");        }        free(buffer);    }}
int data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_45_badData;
int data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_45_badData;
int
data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_45_badData
data
= CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_45_badData
CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_45_badData
{        int i;        int * buffer = (int *)malloc(10 * sizeof(int));        if (buffer == NULL) {exit(-1);}        /* initialize buffer */        for (i = 0; i < 10; i++)        {            buffer[i] = 0;        }        /* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound         * This code does check to see if the array index is negative */        if (data >= 0)        {            buffer[data] = 1;            /* Print the array values */            for(i = 0; i < 10; i++)            {                printIntLine(buffer[i]);            }        }        else        {            printLine("ERROR: Array index is negative.");        }        free(buffer);    }
int i;
int i;
int
i
i
int * buffer = (int *)malloc(10 * sizeof(int));
int * buffer = (int *)malloc(10 * sizeof(int));
int
* buffer = (int *)malloc(10 * sizeof(int))
*
buffer
= (int *)malloc(10 * sizeof(int))
(int *)malloc(10 * sizeof(int))
int *
int
*
*
malloc(10 * sizeof(int))
malloc
malloc
10 * sizeof(int)
10
sizeof(int)
int
int

if (buffer == NULL) {exit(-1);}
buffer == NULL
buffer
buffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
for (i = 0; i < 10; i++)        {            buffer[i] = 0;        }
i = 0;
i = 0
i
i
0
i < 10
i
i
10
i++
i
i
{            buffer[i] = 0;        }
buffer[i] = 0;
buffer[i] = 0
buffer[i]
buffer
buffer
i
i
0
if (data >= 0)        {            buffer[data] = 1;            /* Print the array values */            for(i = 0; i < 10; i++)            {                printIntLine(buffer[i]);            }        }        else        {            printLine("ERROR: Array index is negative.");        }
data >= 0
data
data
0
{            buffer[data] = 1;            /* Print the array values */            for(i = 0; i < 10; i++)            {                printIntLine(buffer[i]);            }        }
buffer[data] = 1;
buffer[data] = 1
buffer[data]
buffer
buffer
data
data
1
for(i = 0; i < 10; i++)            {                printIntLine(buffer[i]);            }
i = 0;
i = 0
i
i
0
i < 10
i
i
10
i++
i
i
{                printIntLine(buffer[i]);            }
printIntLine(buffer[i]);
printIntLine(buffer[i])
printIntLine
printIntLine
buffer[i]
buffer
buffer
i
i
{            printLine("ERROR: Array index is negative.");        }
printLine("ERROR: Array index is negative.");
printLine("ERROR: Array index is negative.")
printLine
printLine
"ERROR: Array index is negative."
free(buffer);
free(buffer)
free
free
buffer
buffer
-----joern-----
(49,5,0)
(1,14,0)
(13,10,0)
(54,65,0)
(14,30,0)
(41,20,0)
(27,56,0)
(41,10,0)
(13,28,0)
(63,28,0)
(44,47,0)
(59,0,0)
(10,64,0)
(39,64,0)
(51,31,0)
(11,28,0)
(53,0,0)
(26,41,0)
(66,64,0)
(51,10,0)
(32,10,0)
(42,64,0)
(13,44,0)
(12,50,0)
(50,57,0)
(21,6,0)
(41,44,0)
(62,40,0)
(4,55,0)
(50,10,0)
(56,55,0)
(38,66,0)
(51,56,0)
(2,64,0)
(40,28,0)
(23,60,0)
(0,46,0)
(15,5,0)
(43,46,0)
(18,28,0)
(5,10,0)
(14,1,0)
(17,44,0)
(48,13,0)
(66,10,0)
(64,55,0)
(67,34,0)
(24,18,0)
(58,64,0)
(10,50,0)
(25,35,0)
(45,31,0)
(29,25,0)
(35,25,0)
(8,35,0)
(69,6,0)
(52,56,0)
(34,68,0)
(57,50,0)
(65,46,0)
(3,46,0)
(9,51,0)
(7,64,0)
(35,12,0)
(6,56,0)
(61,1,0)
(50,12,0)
(22,41,0)
(41,46,0)
(16,40,0)
(36,51,0)
(20,33,0)
(20,41,0)
(12,35,0)
(37,13,0)
(31,60,0)
(65,54,1)
(46,43,1)
(25,29,1)
(41,26,1)
(13,28,1)
(22,0,1)
(6,21,1)
(50,57,1)
(27,52,1)
(48,37,1)
(0,46,1)
(38,0,1)
(41,46,1)
(61,5,1)
(49,10,1)
(53,59,1)
(14,1,1)
(24,44,1)
(11,14,1)
(41,44,1)
(18,24,1)
(21,69,1)
(66,10,1)
(15,49,1)
(10,50,1)
(11,5,1)
(44,17,1)
(40,28,1)
(36,9,1)
(51,10,1)
(63,11,1)
(17,13,1)
(65,46,1)
(29,8,1)
(26,22,1)
(20,41,1)
(6,56,1)
(8,32,1)
(56,27,1)
(51,36,1)
(19,66,1)
(9,6,1)
(38,34,1)
(41,10,1)
(5,15,1)
(59,65,1)
(5,10,1)
(34,67,1)
(59,46,1)
(62,28,1)
(40,16,1)
(0,53,1)
(13,48,1)
(66,38,1)
(43,3,1)
(16,62,1)
(31,45,1)
(51,56,1)
(32,56,1)
(28,63,1)
(45,51,1)
(13,10,1)
(3,31,1)
(1,61,1)
(35,25,1)
(18,28,1)
(62,18,1)
(69,40,1)
(37,40,1)
(12,35,1)
(50,12,1)
(67,6,1)
(54,20,1)
(53,0,2)
(40,40,2)
(48,40,2)
(53,6,2)
(6,56,2)
(13,40,2)
(12,35,2)
(41,46,2)
(45,6,2)
(61,5,2)
(59,0,2)
(0,0,2)
(34,6,2)
(50,57,2)
(66,10,2)
(17,40,2)
(62,40,2)
(20,0,2)
(31,6,2)
(1,5,2)
(16,40,2)
(20,41,2)
(13,28,2)
(22,0,2)
(54,0,2)
(3,6,2)
(41,0,2)
(36,6,2)
(51,56,2)
(51,6,2)
(65,46,2)
(41,44,2)
(0,46,2)
(18,28,2)
(18,40,2)
(10,50,2)
(14,5,2)
(67,6,2)
(9,6,2)
(41,10,2)
(5,10,2)
(26,0,2)
(40,28,2)
(51,10,2)
(14,1,2)
(35,25,2)
(59,6,2)
(0,6,2)
(37,40,2)
(43,6,2)
(65,0,2)
(46,6,2)
(50,12,2)
(13,10,2)
(44,40,2)
(24,40,2)
-----------------------------------
(0,i < 10)
(1,-1)
(2,if (buffer == NULL)
(3,i)
(4,data)
(5,buffer == NULL)
(6,data >= 0)
(7,buffer)
(8,10)
(9,buffer)
(10,* buffer = (int *)
(11,i)
(12,malloc(10 * sizeof(int)
(13,buffer[i])
(14,exit(-1)
(15,NULL)
(16,10)
(17,0)
(18,i++)
(19,RET)
(20,printIntLine(buffer[i])
(21,0)
(22,buffer)
(23,for(i = 0; i < 10; i++)
(24,i)
(25,sizeof(int)
(26,i)
(27,CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_45_badData)
(28,i = 0)
(29,int)
(30,)
(31,buffer[data] = 1)
(32,buffer)
(33,)
(34,printLine("ERROR: Array index is negative.")
(35,10 * sizeof(int)
(36,data)
(37,buffer)
(38,buffer)
(39,for (i = 0; i < 10; i++)
(40,i < 10)
(41,buffer[i])
(42,i)
(43,0)
(44,buffer[i] = 0)
(45,1)
(46,i = 0)
(47,)
(48,i)
(49,buffer)
(50,(int *)
(51,buffer[data])
(52,data)
(53,10)
(54,i)
(55,)
(56,data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_45_badData)
(57,int *)
(58,if (data >= 0)
(59,i)
(60,)
(61,1)
(62,i)
(63,0)
(64,)
(65,i++)
(66,free(buffer)
(67,"ERROR: Array index is negative.")
(68,)
(69,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^