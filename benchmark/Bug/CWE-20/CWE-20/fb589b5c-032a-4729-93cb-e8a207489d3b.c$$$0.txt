-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_square_05_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(staticTrue)
    {
        {
            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */
            int result = data * data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,15,18,23,25,28,33,35,39,41,45,47
-----computeFrom-----
12,13
12,14
21,22
21,23
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_square_05_bad(){    int data;    /* Initialize data */    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_square_05_bad()
CWE190_Integer_Overflow__int_max_square_05_bad
{    int data;    /* Initialize data */    data = 0;    if(staticTrue)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(staticTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticTrue)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(staticTrue)    {        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
staticTrue
staticTrue
{        {            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: if (data*data) > INT_MAX, this will overflow */            int result = data * data;            printIntLine(result);        }
int result = data * data;
int result = data * data;
int
result = data * data
result
= data * data
data * data
data
data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(5,12,0)
(11,16,0)
(20,5,0)
(2,7,0)
(16,20,0)
(20,17,0)
(17,18,0)
(19,5,0)
(22,7,0)
(6,2,0)
(0,18,0)
(2,16,0)
(16,7,0)
(8,20,0)
(9,5,0)
(23,17,0)
(10,18,0)
(14,20,0)
(20,16,0)
(15,17,0)
(4,18,0)
(7,13,0)
(1,17,1)
(20,5,1)
(14,11,1)
(6,16,1)
(3,5,1)
(11,3,1)
(20,8,1)
(23,15,1)
(3,1,1)
(16,20,1)
(21,2,1)
(17,23,1)
(9,1,1)
(21,3,1)
(8,14,1)
(2,6,1)
(19,9,1)
(20,17,1)
(2,16,1)
(5,19,1)
(14,3,2)
(8,3,2)
(2,3,2)
(20,17,2)
(9,1,2)
(6,3,2)
(11,3,2)
(16,3,2)
(16,20,2)
(5,1,2)
(20,3,2)
(20,5,2)
(2,16,2)
(19,1,2)
-----------------------------------
(0,data)
(1,staticTrue)
(2,printIntLine(result)
(3,staticTrue)
(4,if(staticTrue)
(5,data = INT_MAX)
(6,result)
(7,)
(8,data)
(9,data)
(10,if(staticTrue)
(11,result)
(12,)
(13,)
(14,data)
(15,data)
(16,result = data * data)
(17,data = 0)
(18,)
(19,INT_MAX)
(20,data * data)
(21,RET)
(22,result)
(23,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^