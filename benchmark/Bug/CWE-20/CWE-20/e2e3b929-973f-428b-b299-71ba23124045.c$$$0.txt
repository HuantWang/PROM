-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_bad()
{
    char * data;
    data = NULL;
    CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badGlobal = 1; /* true */
    data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badSource(data);
    {
        char source[10+1] = SRC_STRING;
        size_t i, sourceLen;
        sourceLen = strlen(source);
        /* Copy length + 1 to include NUL terminator from source */
        /* POTENTIAL FLAW: data may not have enough space to hold source */
        for (i = 0; i < sourceLen + 1; i++)
        {
            data[i] = source[i];
        }
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
23,24
24,25
24,26
25,26
27,28
27,29
28,29
30,31
32,33
32,34
32,35
32,36
32,37
32,38
33,34
34,35
34,36
36,37
36,38
36,39
38,39
39,40
39,41
42,43
43,44
45,46
46,47
46,48
46,49
47,48
49,50
51,52
53,54
54,55
54,56
55,56
57,58
57,59
58,59
60,61
62,63
62,64
62,65
62,66
63,64
64,65
64,66
65,66
68,69
68,70
69,70
71,72
71,73
72,73
75,76
76,77
78,79
79,80
80,81
80,82
81,82
81,83
82,83
84,85
86,87
86,88
87,88
89,90
91,92
92,93
92,94
93,94
95,96
97,98
98,99
98,100
99,100
101,102
-----nextToken-----
2,4,8,10,11,15,17,21,22,26,29,31,35,37,40,41,44,48,50,52,56,59,61,66,67,70,73,74,77,83,85,88,90,94,96,100,102
-----computeFrom-----
13,14
13,15
19,20
19,21
24,25
24,26
39,40
39,41
54,55
54,56
64,65
64,66
68,69
68,70
71,72
71,73
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;BinaryExpression;LiteralExpression;LiteralExpression;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_bad(){    char * data;    data = NULL;    CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badGlobal = 1; /* true */    data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badSource(data);    {        char source[10+1] = SRC_STRING;        size_t i, sourceLen;        sourceLen = strlen(source);        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        for (i = 0; i < sourceLen + 1; i++)        {            data[i] = source[i];        }        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_bad
{    char * data;    data = NULL;    CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badGlobal = 1; /* true */    data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badSource(data);    {        char source[10+1] = SRC_STRING;        size_t i, sourceLen;        sourceLen = strlen(source);        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        for (i = 0; i < sourceLen + 1; i++)        {            data[i] = source[i];        }        printLine(data);        free(data);    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badGlobal = 1;
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badGlobal = 1
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badGlobal
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badGlobal
1
data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badSource(data);
data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badSource(data)
data
data
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badSource(data)
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badSource
CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badSource
data
data
{        char source[10+1] = SRC_STRING;        size_t i, sourceLen;        sourceLen = strlen(source);        /* Copy length + 1 to include NUL terminator from source */        /* POTENTIAL FLAW: data may not have enough space to hold source */        for (i = 0; i < sourceLen + 1; i++)        {            data[i] = source[i];        }        printLine(data);        free(data);    }
char source[10+1] = SRC_STRING;
char source[10+1] = SRC_STRING;
char
source[10+1] = SRC_STRING
source
[10+1]
10+1
10
1
= SRC_STRING
SRC_STRING
SRC_STRING
size_t i, sourceLen;
size_t i, sourceLen;
size_t
size_t
i
i
sourceLen
sourceLen
sourceLen = strlen(source);
sourceLen = strlen(source)
sourceLen
sourceLen
strlen(source)
strlen
strlen
source
source
for (i = 0; i < sourceLen + 1; i++)        {            data[i] = source[i];        }
i = 0;
i = 0
i
i
0
i < sourceLen + 1
i
i
sourceLen + 1
sourceLen
sourceLen
1
i++
i
i
{            data[i] = source[i];        }
data[i] = source[i];
data[i] = source[i]
data[i]
data
data
i
i
source[i]
source
source
i
i
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(4,8,0)
(26,24,0)
(1,22,0)
(28,24,0)
(34,4,0)
(30,6,0)
(12,39,0)
(23,39,0)
(42,38,0)
(43,2,0)
(42,2,0)
(35,24,0)
(23,31,0)
(32,31,0)
(21,27,0)
(2,27,0)
(45,32,0)
(32,39,0)
(15,39,0)
(8,24,0)
(22,27,0)
(9,24,0)
(41,12,0)
(20,8,0)
(18,2,0)
(32,2,0)
(37,26,0)
(38,27,0)
(16,38,0)
(2,42,0)
(24,27,0)
(40,32,0)
(29,38,0)
(44,24,0)
(6,12,0)
(31,36,0)
(13,39,0)
(31,23,0)
(0,24,0)
(12,6,0)
(17,23,0)
(26,4,0)
(19,8,0)
(5,35,0)
(4,26,0)
(10,23,0)
(33,11,0)
(7,22,0)
(11,39,0)
(43,24,0)
(25,42,0)
(6,26,0)
(46,43,0)
(35,2,0)
(23,8,0)
(14,6,0)
(45,40,1)
(26,4,1)
(37,8,1)
(1,7,1)
(46,35,1)
(17,10,1)
(32,45,1)
(5,12,1)
(29,16,1)
(31,23,1)
(43,2,1)
(12,6,1)
(35,2,1)
(12,39,1)
(11,33,1)
(4,8,1)
(4,34,1)
(6,14,1)
(32,39,1)
(23,8,1)
(38,29,1)
(20,2,1)
(19,20,1)
(43,46,1)
(18,22,1)
(41,11,1)
(22,1,1)
(13,15,1)
(39,13,1)
(42,25,1)
(32,2,1)
(7,38,1)
(41,39,1)
(10,32,1)
(42,38,1)
(35,5,1)
(40,12,1)
(6,26,1)
(23,17,1)
(15,26,1)
(34,37,1)
(11,39,1)
(2,42,1)
(8,19,1)
(23,39,1)
(30,41,1)
(14,30,1)
(3,43,1)
(25,18,1)
(33,31,1)
(12,6,2)
(35,2,2)
(32,39,2)
(2,42,2)
(11,39,2)
(31,23,2)
(6,12,2)
(26,4,2)
(12,12,2)
(42,38,2)
(14,12,2)
(23,8,2)
(33,12,2)
(23,39,2)
(6,26,2)
(32,2,2)
(31,12,2)
(11,12,2)
(30,12,2)
(17,12,2)
(4,8,2)
(41,12,2)
(40,12,2)
(32,12,2)
(45,12,2)
(12,39,2)
(23,12,2)
(10,12,2)
(43,2,2)
-----------------------------------
(0,source)
(1,1)
(2,data = CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badSource(data)
(3,RET)
(4,strlen(source)
(5,data)
(6,sourceLen + 1)
(7,CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badGlobal)
(8,source[10+1] = SRC_STRING)
(9,for (i = 0; i < sourceLen + 1; i++)
(10,source)
(11,i++)
(12,i < sourceLen + 1)
(13,0)
(14,1)
(15,i)
(16,data)
(17,i)
(18,data)
(19,SRC_STRING)
(20,source)
(21,data)
(22,CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badGlobal = 1)
(23,source[i])
(24,)
(25,data)
(26,sourceLen = strlen(source)
(27,)
(28,i)
(29,NULL)
(30,sourceLen)
(31,data[i] = source[i])
(32,data[i])
(33,i)
(34,source)
(35,printLine(data)
(36,)
(37,sourceLen)
(38,data = NULL)
(39,i = 0)
(40,data)
(41,i)
(42,CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badSource(data)
(43,free(data)
(44,sourceLen)
(45,i)
(46,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^