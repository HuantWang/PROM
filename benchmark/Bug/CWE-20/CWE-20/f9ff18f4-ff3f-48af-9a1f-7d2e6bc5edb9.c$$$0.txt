-----label-----
1
-----code-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_09_bad()
{
    wchar_t * data;
    data = NULL;
    if(GLOBAL_CONST_TRUE)
    {
        {
            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (dataBuffer == NULL) {exit(-1);}
            wmemset(dataBuffer, L'A', 100-1);
            dataBuffer[100-1] = L'\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        wchar_t source[100];
        wmemset(source, L'C', 100-1); /* fill with 'C's */
        source[100-1] = L'\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */
        wcscpy(data, source);
        printWLine(data);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
21,22
22,23
22,24
22,25
22,26
22,27
23,24
24,25
24,26
26,27
26,28
26,29
29,30
30,31
30,32
31,32
31,33
33,34
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
44,45
44,46
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
58,61
58,62
59,60
61,62
64,65
64,66
67,68
68,69
68,70
69,70
69,71
70,71
72,73
72,74
76,77
77,78
77,79
78,79
80,81
80,82
81,82
84,85
84,86
84,87
84,88
84,89
85,86
86,87
86,88
88,89
88,90
90,91
92,93
93,94
93,95
93,96
93,97
94,95
96,97
99,100
99,101
102,103
103,104
103,105
104,105
104,106
105,106
107,108
107,109
111,112
112,113
112,114
112,115
113,114
115,116
117,118
119,120
120,121
120,122
121,122
123,124
-----nextToken-----
2,4,8,10,11,15,17,20,25,27,28,32,34,37,39,42,43,47,49,54,56,60,62,63,65,66,71,73,74,75,79,82,83,87,89,91,95,97,98,100,101,106,108,109,110,114,116,118,122,124
-----computeFrom-----
13,14
13,15
38,39
38,40
45,46
45,47
64,65
64,66
68,69
68,70
72,73
72,74
77,78
77,79
80,81
80,82
99,100
99,101
103,104
103,105
107,108
107,109
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_09_bad(){    wchar_t * data;    data = NULL;    if(GLOBAL_CONST_TRUE)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        wcscpy(data, source);        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_09_bad()
CWE124_Buffer_Underwrite__malloc_wchar_t_cpy_09_bad
{    wchar_t * data;    data = NULL;    if(GLOBAL_CONST_TRUE)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        wcscpy(data, source);        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(GLOBAL_CONST_TRUE)    {        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));            if (dataBuffer == NULL) {exit(-1);}            wmemset(dataBuffer, L'A', 100-1);            dataBuffer[100-1] = L'\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)malloc(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wmemset(dataBuffer, L'A', 100-1);
wmemset(dataBuffer, L'A', 100-1)
wmemset
wmemset
dataBuffer
dataBuffer
L'A'
100-1
100
1
dataBuffer[100-1] = L'\0';
dataBuffer[100-1] = L'\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
L'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        wchar_t source[100];        wmemset(source, L'C', 100-1); /* fill with 'C's */        source[100-1] = L'\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copying data to memory before the destination buffer */        wcscpy(data, source);        printWLine(data);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
wchar_t source[100];
wchar_t source[100];
wchar_t
source[100]
source
[100]
100
wmemset(source, L'C', 100-1);
wmemset(source, L'C', 100-1)
wmemset
wmemset
source
source
L'C'
100-1
100
1
source[100-1] = L'\0';
source[100-1] = L'\0'
source[100-1]
source
source
100-1
100
1
L'\0'
wcscpy(data, source);
wcscpy(data, source)
wcscpy
wcscpy
data
data
source
source
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(40,20,0)
(11,23,0)
(15,27,0)
(40,1,0)
(42,23,0)
(22,18,0)
(0,16,0)
(27,1,0)
(7,33,0)
(1,23,0)
(5,23,0)
(19,10,0)
(20,23,0)
(19,21,0)
(19,1,0)
(28,40,0)
(8,1,0)
(9,27,0)
(14,21,0)
(21,4,0)
(32,10,0)
(39,21,0)
(0,36,0)
(25,40,0)
(26,16,0)
(23,29,0)
(36,37,0)
(18,30,0)
(17,26,0)
(27,21,0)
(36,20,0)
(18,22,0)
(35,20,0)
(33,20,0)
(41,16,0)
(1,40,0)
(12,19,0)
(3,4,0)
(37,36,0)
(16,26,0)
(31,33,0)
(27,10,0)
(16,0,0)
(10,4,0)
(36,0,0)
(20,36,0)
(13,22,0)
(2,10,0)
(6,4,0)
(35,38,1)
(27,15,1)
(14,38,1)
(20,36,1)
(17,41,1)
(25,8,1)
(33,7,1)
(22,13,1)
(31,20,1)
(9,14,1)
(1,40,1)
(13,33,1)
(36,0,1)
(26,17,1)
(19,1,1)
(18,22,1)
(2,32,1)
(0,16,1)
(5,33,1)
(28,25,1)
(36,37,1)
(40,20,1)
(10,2,1)
(8,5,1)
(19,10,1)
(27,10,1)
(5,18,1)
(41,35,1)
(27,1,1)
(19,12,1)
(12,27,1)
(38,10,1)
(7,31,1)
(15,9,1)
(14,1,1)
(40,28,1)
(24,19,1)
(16,26,1)
(33,20,1)
(17,38,2)
(35,38,2)
(27,1,2)
(40,20,2)
(33,20,2)
(0,38,2)
(19,10,2)
(41,38,2)
(5,38,2)
(18,22,2)
(1,38,2)
(13,33,2)
(26,38,2)
(1,40,2)
(7,38,2)
(40,38,2)
(19,1,2)
(16,26,2)
(22,33,2)
(31,38,2)
(8,38,2)
(16,38,2)
(25,38,2)
(36,37,2)
(36,0,2)
(33,38,2)
(0,16,2)
(28,38,2)
(20,36,2)
(20,38,2)
(27,10,2)
(18,33,2)
(36,38,2)
-----------------------------------
(0,malloc(100*sizeof(wchar_t)
(1,data = dataBuffer - 8)
(2,NULL)
(3,if(GLOBAL_CONST_TRUE)
(4,)
(5,'\\\\0')
(6,data)
(7,NULL)
(8,data)
(9,data)
(10,data = NULL)
(11,if (dataBuffer == NULL)
(12,data)
(13,1)
(14,'\\\\0')
(15,source)
(16,100*sizeof(wchar_t)
(17,wchar_t)
(18,exit(-1)
(19,printWLine(data)
(20,* dataBuffer = (wchar_t *)
(21,)
(22,-1)
(23,)
(24,RET)
(25,dataBuffer)
(26,sizeof(wchar_t)
(27,wcscpy(data, source)
(28,8)
(29,)
(30,)
(31,dataBuffer)
(32,data)
(33,dataBuffer == NULL)
(34,\'\\\\0\')
(35,dataBuffer)
(36,(wchar_t *)
(37,wchar_t *)
(38,GLOBAL_CONST_TRUE)
(39,source)
(40,dataBuffer - 8)
(41,100)
(42,dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^