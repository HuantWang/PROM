-----label-----
1
-----code-----
void CWE127_Buffer_Underread__malloc_char_memcpy_01_bad()
{
    char * data;
    data = NULL;
    {
        char * dataBuffer = (char *)malloc(100*sizeof(char));
        if (dataBuffer == NULL) {exit(-1);}
        memset(dataBuffer, 'A', 100-1);
        dataBuffer[100-1] = '\0';
        /* FLAW: Set data pointer to before the allocated memory buffer */
        data = dataBuffer - 8;
    }
    {
        char dest[100];
        memset(dest, 'C', 100-1); /* fill with 'C's */
        dest[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */
        memcpy(dest, data, 100*sizeof(char));
        /* Ensure null termination */
        dest[100-1] = '\0';
        printLine(dest);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
18,21
18,22
18,23
19,20
20,21
20,22
22,23
22,24
22,25
25,26
26,27
26,28
27,28
27,29
29,30
31,32
31,33
32,33
34,35
34,36
36,37
37,38
37,39
40,41
40,42
41,42
41,43
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
53,54
54,55
54,56
54,57
54,58
55,56
57,58
60,61
60,62
63,64
64,65
64,66
65,66
65,67
66,67
68,69
68,70
72,73
73,74
73,75
74,75
76,77
76,78
77,78
80,81
80,82
80,83
80,84
80,85
80,86
81,82
82,83
82,84
84,85
84,86
86,87
88,89
89,90
89,91
89,92
89,93
90,91
92,93
95,96
95,97
98,99
99,100
99,101
100,101
100,102
101,102
103,104
103,105
107,108
108,109
108,110
108,111
108,112
109,110
111,112
113,114
115,116
115,117
117,118
118,119
118,120
121,122
122,123
122,124
123,124
123,125
124,125
126,127
126,128
130,131
131,132
131,133
132,133
134,135
-----nextToken-----
2,4,8,10,11,15,17,21,23,24,28,30,33,35,38,39,43,45,50,52,56,58,59,61,62,67,69,70,71,75,78,79,83,85,87,91,93,94,96,97,102,104,105,106,110,112,114,116,119,120,125,127,128,129,133,135
-----computeFrom-----
13,14
13,15
34,35
34,36
41,42
41,43
60,61
60,62
64,65
64,66
68,69
68,70
73,74
73,75
76,77
76,78
95,96
95,97
99,100
99,101
103,104
103,105
115,116
115,117
122,123
122,124
126,127
126,128
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE127_Buffer_Underread__malloc_char_memcpy_01_bad(){    char * data;    data = NULL;    {        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    {        char dest[100];        memset(dest, 'C', 100-1); /* fill with 'C's */        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        memcpy(dest, data, 100*sizeof(char));        /* Ensure null termination */        dest[100-1] = '\0';        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE127_Buffer_Underread__malloc_char_memcpy_01_bad()
CWE127_Buffer_Underread__malloc_char_memcpy_01_bad
{    char * data;    data = NULL;    {        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }    {        char dest[100];        memset(dest, 'C', 100-1); /* fill with 'C's */        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        memcpy(dest, data, 100*sizeof(char));        /* Ensure null termination */        dest[100-1] = '\0';        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
{        char * dataBuffer = (char *)malloc(100*sizeof(char));        if (dataBuffer == NULL) {exit(-1);}        memset(dataBuffer, 'A', 100-1);        dataBuffer[100-1] = '\0';        /* FLAW: Set data pointer to before the allocated memory buffer */        data = dataBuffer - 8;    }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        char dest[100];        memset(dest, 'C', 100-1); /* fill with 'C's */        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        memcpy(dest, data, 100*sizeof(char));        /* Ensure null termination */        dest[100-1] = '\0';        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
char dest[100];
char dest[100];
char
dest[100]
dest
[100]
100
memset(dest, 'C', 100-1);
memset(dest, 'C', 100-1)
memset
memset
dest
dest
'C'
100-1
100
1
dest[100-1] = '\0';
dest[100-1] = '\0'
dest[100-1]
dest
dest
100-1
100
1
'\0'
memcpy(dest, data, 100*sizeof(char));
memcpy(dest, data, 100*sizeof(char))
memcpy
memcpy
dest
dest
data
data
100*sizeof(char)
100
sizeof(char)
char
char

dest[100-1] = '\0';
dest[100-1] = '\0'
dest[100-1]
dest
dest
100-1
100
1
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(25,55,0)
(30,15,0)
(17,69,0)
(69,29,0)
(10,30,0)
(18,41,0)
(12,38,0)
(66,71,0)
(45,2,0)
(26,68,0)
(67,45,0)
(70,41,0)
(71,66,0)
(52,1,0)
(9,29,0)
(64,1,0)
(16,40,0)
(0,29,0)
(28,58,0)
(27,17,0)
(36,71,0)
(74,68,0)
(60,6,0)
(63,2,0)
(6,21,0)
(49,29,0)
(74,54,0)
(42,35,0)
(10,43,0)
(1,21,0)
(15,30,0)
(66,21,0)
(24,47,0)
(62,58,0)
(41,67,0)
(29,51,0)
(21,43,0)
(58,40,0)
(46,30,0)
(14,2,0)
(48,66,0)
(20,18,0)
(50,53,0)
(21,53,0)
(68,74,0)
(40,9,0)
(30,10,0)
(35,51,0)
(13,69,0)
(55,17,0)
(73,47,0)
(2,45,0)
(39,9,0)
(37,47,0)
(33,71,0)
(22,75,0)
(57,67,0)
(3,24,0)
(43,10,0)
(8,67,0)
(41,18,0)
(53,51,0)
(1,53,0)
(59,21,0)
(40,58,0)
(45,53,0)
(66,75,0)
(7,24,0)
(2,21,0)
(23,49,0)
(19,38,0)
(67,29,0)
(65,45,0)
(5,6,0)
(47,29,0)
(44,35,0)
(1,38,0)
(43,34,0)
(17,55,0)
(75,53,0)
(67,41,0)
(72,55,0)
(38,1,0)
(47,24,0)
(34,43,0)
(32,51,0)
(31,53,0)
(4,15,0)
(43,21,0)
(12,52,1)
(23,9,1)
(1,38,1)
(20,70,1)
(67,45,1)
(72,25,1)
(65,75,1)
(64,6,1)
(66,71,1)
(35,42,1)
(15,4,1)
(55,72,1)
(75,22,1)
(37,45,1)
(2,14,1)
(33,36,1)
(25,27,1)
(71,33,1)
(28,16,1)
(56,49,1)
(64,74,1)
(43,10,1)
(69,13,1)
(1,21,1)
(14,63,1)
(48,1,1)
(17,55,1)
(30,15,1)
(45,2,1)
(68,26,1)
(46,59,1)
(39,40,1)
(22,66,1)
(4,46,1)
(9,39,1)
(67,41,1)
(73,37,1)
(2,21,1)
(36,48,1)
(19,12,1)
(57,69,1)
(63,65,1)
(6,60,1)
(27,47,1)
(6,21,1)
(18,20,1)
(41,18,1)
(59,35,1)
(5,21,1)
(7,3,1)
(58,62,1)
(8,57,1)
(74,68,1)
(16,67,1)
(49,23,1)
(52,64,1)
(13,17,1)
(10,30,1)
(43,34,1)
(62,28,1)
(38,19,1)
(21,43,1)
(60,5,1)
(3,73,1)
(47,24,1)
(40,58,1)
(24,7,1)
(70,8,1)
(66,21,1)
(26,6,1)
(42,44,1)
(1,38,2)
(43,34,2)
(2,21,2)
(47,24,2)
(43,10,2)
(74,6,2)
(45,2,2)
(30,15,2)
(26,6,2)
(40,58,2)
(17,55,2)
(68,6,2)
(6,21,2)
(21,43,2)
(66,71,2)
(1,21,2)
(41,18,2)
(67,45,2)
(74,68,2)
(66,21,2)
(10,30,2)
(67,41,2)
-----------------------------------
(0,dest)
(1,memset(dataBuffer, 'A', 100-1)
(2,dataBuffer - 8)
(3,100)
(4,char)
(5,dataBuffer)
(6,dataBuffer == NULL)
(7,1)
(8,data)
(9,dest[100-1] = '\\\\0')
(10,malloc(100*sizeof(char)
(11,memset(dataBuffer, \'A\', 100-1)
(12,100)
(13,'\\\\0')
(14,8)
(15,sizeof(char)
(16,dest)
(17,dest[100-1])
(18,sizeof(char)
(19,1)
(20,char)
(21,* dataBuffer = (char *)
(22,'\\\\0')
(23,dest)
(24,100-1)
(25,100)
(26,1)
(27,dest)
(28,100)
(29,)
(30,100*sizeof(char)
(31,if (dataBuffer == NULL)
(32,data)
(33,1)
(34,char *)
(35,data = NULL)
(36,100)
(37,dest)
(38,100-1)
(39,'\\\\0')
(40,dest[100-1])
(41,100*sizeof(char)
(42,NULL)
(43,(char *)
(44,data)
(45,data = dataBuffer - 8)
(46,100)
(47,memset(dest, \'C\', 100-1)
(48,dataBuffer)
(49,printLine(dest)
(50,dataBuffer)
(51,)
(52,'A')
(53,)
(54,)
(55,100-1)
(56,RET)
(57,dest)
(58,100-1)
(59,dataBuffer)
(60,NULL)
(61,memset(dest, 'C', 100-1)
(62,1)
(63,dataBuffer)
(64,dataBuffer)
(65,data)
(66,dataBuffer[100-1])
(67,memcpy(dest, data, 100*sizeof(char)
(68,-1)
(69,dest[100-1] = '\\\\0')
(70,100)
(71,100-1)
(72,1)
(73,'C')
(74,exit(-1)
(75,dataBuffer[100-1] = '\\\\0')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^