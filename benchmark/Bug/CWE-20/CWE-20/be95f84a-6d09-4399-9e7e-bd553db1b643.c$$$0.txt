-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_12_bad()
{
    wchar_t * data;
    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
    data = dataBuffer;
    if(globalReturnsTrueOrFalse())
    {
        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
        wmemset(data, L'A', 100-1); /* fill with L'A's */
        data[100-1] = L'\0'; /* null terminate */
    }
    else
    {
        /* FIX: Initialize data as a small buffer that as small or smaller than the small buffer used in the sink */
        wmemset(data, L'A', 50-1); /* fill with L'A's */
        data[50-1] = L'\0'; /* null terminate */
    }
    {
        wchar_t dest[50] = L"";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        SNPRINTF(dest, wcslen(data), L"%s", data);
        printWLine(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
33,34
34,35
34,36
35,36
37,38
39,40
39,41
39,42
40,41
41,42
43,44
43,45
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
63,65
64,65
65,66
65,67
65,68
65,69
66,67
68,69
71,72
71,73
74,75
75,76
75,77
76,77
76,78
77,78
79,80
79,81
83,84
83,85
83,86
84,85
85,86
85,87
87,88
87,89
87,90
89,90
91,92
93,94
94,95
94,96
94,97
94,98
94,99
95,96
97,98
99,100
99,101
100,101
102,103
105,106
107,108
108,109
108,110
109,110
111,112
-----nextToken-----
2,4,8,10,11,14,16,17,21,23,26,28,31,32,36,38,42,47,49,50,52,53,58,60,61,62,67,69,70,72,73,78,80,81,82,86,88,90,92,96,98,101,103,104,106,110,112
-----computeFrom-----
27,28
27,29
34,35
34,36
51,52
51,53
55,56
55,57
59,60
59,61
71,72
71,73
75,76
75,77
79,80
79,81
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_12_bad(){    wchar_t * data;    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    data = dataBuffer;    if(globalReturnsTrueOrFalse())    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }    else    {        /* FIX: Initialize data as a small buffer that as small or smaller than the small buffer used in the sink */        wmemset(data, L'A', 50-1); /* fill with L'A's */        data[50-1] = L'\0'; /* null terminate */    }    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_12_bad()
CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_alloca_snprintf_12_bad
{    wchar_t * data;    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    data = dataBuffer;    if(globalReturnsTrueOrFalse())    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }    else    {        /* FIX: Initialize data as a small buffer that as small or smaller than the small buffer used in the sink */        wmemset(data, L'A', 50-1); /* fill with L'A's */        data[50-1] = L'\0'; /* null terminate */    }    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
wchar_t
* dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t))
*
dataBuffer
= (wchar_t *)ALLOCA(100*sizeof(wchar_t))
(wchar_t *)ALLOCA(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
ALLOCA(100*sizeof(wchar_t))
ALLOCA
ALLOCA
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalReturnsTrueOrFalse())    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }    else    {        /* FIX: Initialize data as a small buffer that as small or smaller than the small buffer used in the sink */        wmemset(data, L'A', 50-1); /* fill with L'A's */        data[50-1] = L'\0'; /* null terminate */    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        wmemset(data, L'A', 100-1); /* fill with L'A's */        data[100-1] = L'\0'; /* null terminate */    }
wmemset(data, L'A', 100-1);
wmemset(data, L'A', 100-1)
wmemset
wmemset
data
data
L'A'
100-1
100
1
data[100-1] = L'\0';
data[100-1] = L'\0'
data[100-1]
data
data
100-1
100
1
L'\0'
{        /* FIX: Initialize data as a small buffer that as small or smaller than the small buffer used in the sink */        wmemset(data, L'A', 50-1); /* fill with L'A's */        data[50-1] = L'\0'; /* null terminate */    }
wmemset(data, L'A', 50-1);
wmemset(data, L'A', 50-1)
wmemset
wmemset
data
data
L'A'
50-1
50
1
data[50-1] = L'\0';
data[50-1] = L'\0'
data[50-1]
data
data
50-1
50
1
L'\0'
{        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        SNPRINTF(dest, wcslen(data), L"%s", data);        printWLine(data);    }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
SNPRINTF(dest, wcslen(data), L"%s", data);
SNPRINTF(dest, wcslen(data), L"%s", data)
SNPRINTF
SNPRINTF
dest
dest
wcslen(data)
wcslen
wcslen
data
data
L"%s"
data
data
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
-----joern-----
(27,1,0)
(20,0,0)
(4,15,0)
(5,11,0)
(1,19,0)
(21,24,0)
(6,17,0)
(19,12,0)
(19,1,0)
(18,21,0)
(8,6,0)
(24,11,0)
(6,21,0)
(2,23,0)
(9,21,0)
(24,20,0)
(21,11,0)
(12,20,0)
(20,12,0)
(22,17,0)
(17,11,0)
(14,11,0)
(20,24,0)
(0,20,0)
(7,11,0)
(3,24,0)
(25,19,0)
(12,19,0)
(22,2,1)
(20,0,1)
(25,3,1)
(16,6,1)
(22,4,1)
(2,10,1)
(21,24,1)
(19,1,1)
(8,22,1)
(21,18,1)
(9,24,1)
(27,25,1)
(18,9,1)
(12,19,1)
(6,8,1)
(6,21,1)
(10,21,1)
(4,10,1)
(24,20,1)
(1,27,1)
(20,12,1)
(21,24,2)
(24,20,2)
(20,0,2)
(19,1,2)
(2,10,2)
(12,19,2)
(20,12,2)
(4,10,2)
(6,21,2)
-----------------------------------
(0,wchar_t *)
(1,sizeof(wchar_t)
(2,\\'\\\\0\\')
(3,dataBuffer)
(4,\\\'\\\\0\\\')
(5,data)
(6,printWLine(data)
(7,dataBuffer)
(8,data)
(9,data)
(10,globalReturnsTrueOrFalse()
(11,)
(12,ALLOCA(100*sizeof(wchar_t)
(13,\\\'\\\\0\\\')
(14,if(globalReturnsTrueOrFalse()
(15,)
(16,RET)
(17,)
(18,dataBuffer)
(19,100*sizeof(wchar_t)
(20,(wchar_t *)
(21,data = dataBuffer)
(22,"")
(23,)
(24,* dataBuffer = (wchar_t *)
(25,100)
(26,\\'\\\\0\\')
(27,wchar_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^