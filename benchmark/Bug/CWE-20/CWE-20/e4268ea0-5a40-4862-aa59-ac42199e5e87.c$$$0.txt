-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_rand_square_18_bad()
{
    int64_t data;
    data = 0LL;
    goto source;
source:
    /* POTENTIAL FLAW: Use a random value */
    data = (int64_t)RAND64();
    goto sink;
sink:
    {
        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */
        int64_t result = data * data;
        printLongLongLine(result);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
19,20
19,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
27,28
30,31
31,32
33,34
35,36
35,37
37,38
37,39
38,39
39,40
39,41
40,41
42,43
42,44
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,9,11,15,16,18,20,24,28,29,32,34,36,41,43,47,49,53,55
-----computeFrom-----
13,14
13,15
22,23
22,24
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_rand_square_18_bad(){    int64_t data;    data = 0LL;    goto source;source:    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }}
void
CWE190_Integer_Overflow__int64_t_rand_square_18_bad()
CWE190_Integer_Overflow__int64_t_rand_square_18_bad
{    int64_t data;    data = 0LL;    goto source;source:    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();    goto sink;sink:    {        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
goto source;
source
source:    /* POTENTIAL FLAW: Use a random value */    data = (int64_t)RAND64();
source
data = (int64_t)RAND64();
data = (int64_t)RAND64()
data
data
(int64_t)RAND64()
int64_t
int64_t
int64_t

RAND64()
RAND64
RAND64
goto sink;
sink
sink:    {        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }
sink
{        /* POTENTIAL FLAW: if (data*data) > LLONG_MAX, this will overflow */        int64_t result = data * data;        printLongLongLine(result);    }
int64_t result = data * data;
int64_t result = data * data;
int64_t
int64_t
result = data * data
result
= data * data
data * data
data
data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
-----joern-----
(14,13,0)
(17,9,0)
(6,3,0)
(4,13,0)
(9,14,0)
(6,9,0)
(12,2,0)
(2,3,0)
(2,6,0)
(13,4,0)
(13,14,0)
(11,21,0)
(1,6,0)
(7,14,0)
(18,9,0)
(14,21,0)
(15,21,0)
(5,3,0)
(13,19,0)
(20,21,0)
(3,21,0)
(9,6,0)
(19,13,0)
(0,21,0)
(8,21,0)
(16,21,0)
(14,13,1)
(12,6,1)
(1,15,1)
(13,4,1)
(9,17,1)
(2,6,1)
(15,14,1)
(2,12,1)
(10,2,1)
(6,9,1)
(13,19,1)
(18,1,1)
(4,7,1)
(9,14,1)
(17,18,1)
(20,0,1)
(7,20,1)
(13,19,2)
(14,13,2)
(9,14,2)
(2,6,2)
(6,9,2)
(13,4,2)
-----------------------------------
(0,L)
(1,result)
(2,printLongLongLine(result)
(3,)
(4,RAND64()
(5,result)
(6,result = data * data)
(7,data)
(8,sink:)
(9,data * data)
(10,RET)
(11,source:)
(12,result)
(13,(int64_t)
(14,data = (int64_t)
(15,goto sink;)
(16,data)
(17,data)
(18,data)
(19,int64_t)
(20,goto source;)
(21,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^