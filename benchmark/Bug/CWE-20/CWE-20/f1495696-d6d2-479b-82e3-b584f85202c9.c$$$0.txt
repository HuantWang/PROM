-----label-----
1
-----code-----
wchar_t * CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_61b_badSource(wchar_t * data)
{
    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */
    data = (wchar_t *)malloc(50*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    data[0] = L'\0'; /* null terminate */
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
11,14
11,15
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
44,45
44,46
45,46
45,47
46,47
50,51
51,52
-----nextToken-----
2,4,5,7,9,10,15,18,20,23,25,28,29,33,35,40,42,47,48,49,52
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
wchar_t * CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_61b_badSource(wchar_t * data){    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (wchar_t *)malloc(50*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    data[0] = L'\0'; /* null terminate */    return data;}
wchar_t
* CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_61b_badSource(wchar_t * data)
*
CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_61b_badSource
wchar_t * data
wchar_t
* data
*
data
{    /* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */    data = (wchar_t *)malloc(50*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    data[0] = L'\0'; /* null terminate */    return data;}
data = (wchar_t *)malloc(50*sizeof(wchar_t));
data = (wchar_t *)malloc(50*sizeof(wchar_t))
data
data
(wchar_t *)malloc(50*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(50*sizeof(wchar_t))
malloc
malloc
50*sizeof(wchar_t)
50
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
return data;
data
data
-----joern-----
(15,21,0)
(5,19,0)
(2,8,0)
(22,13,0)
(2,19,0)
(11,13,0)
(9,8,0)
(12,11,0)
(13,17,0)
(8,2,0)
(0,7,0)
(13,21,0)
(20,21,0)
(6,1,0)
(3,1,0)
(8,9,0)
(11,21,0)
(10,9,0)
(1,17,0)
(4,7,0)
(9,10,0)
(1,13,0)
(18,11,0)
(11,17,0)
(19,2,0)
(7,0,0)
(16,2,0)
(9,13,0)
(0,14,0)
(13,9,0)
(2,19,1)
(18,11,1)
(4,1,1)
(9,10,1)
(16,22,1)
(19,5,1)
(5,16,1)
(3,6,1)
(8,2,1)
(12,15,1)
(6,13,1)
(0,7,1)
(7,4,1)
(11,12,1)
(9,8,1)
(1,17,1)
(15,0,1)
(1,3,1)
(1,13,1)
(13,17,1)
(13,9,1)
(11,13,1)
(11,17,1)
(15,1,1)
(13,17,2)
(1,13,2)
(2,19,2)
(9,8,2)
(9,10,2)
(4,1,2)
(8,2,2)
(11,13,2)
(13,9,2)
(18,11,2)
(11,17,2)
(7,1,2)
(0,7,2)
(0,1,2)
(1,17,2)
-----------------------------------
(0,exit(-1)
(1,data == NULL)
(2,50*sizeof(wchar_t)
(3,NULL)
(4,1)
(5,wchar_t)
(6,data)
(7,-1)
(8,malloc(50*sizeof(wchar_t)
(9,(wchar_t *)
(10,wchar_t *)
(11,return data;)
(12,data)
(13,data = (wchar_t *)
(14,)
(15,'\\\\0')
(16,50)
(17,wchar_t * data)
(18,RET)
(19,sizeof(wchar_t)
(20,if (data == NULL)
(21,)
(22,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^