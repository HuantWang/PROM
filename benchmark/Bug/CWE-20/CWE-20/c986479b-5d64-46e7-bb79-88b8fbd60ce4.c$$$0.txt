-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d_badSink(twoIntsStruct * data)
{
    {
        twoIntsStruct source[100];
        {
            size_t i;
            /* Initialize array */
            for (i = 0; i < 100; i++)
            {
                source[i].intOne = 0;
                source[i].intTwo = 0;
            }
        }
        {
            size_t i;
            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */
            for (i = 0; i < 100; i++)
            {
                data[i] = source[i];
            }
            printStructLine(&data[0]);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
19,20
21,22
21,23
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
28,32
29,30
30,31
30,32
31,32
34,35
34,36
35,36
38,39
39,40
41,42
41,43
42,43
43,44
43,45
44,45
44,46
45,46
45,47
46,47
48,49
52,53
53,54
53,55
54,55
54,56
55,56
55,57
56,57
58,59
62,63
62,64
62,65
63,64
64,65
64,66
65,66
67,68
69,70
69,71
69,72
69,73
70,71
71,72
71,73
72,73
75,76
75,77
76,77
79,80
80,81
82,83
83,84
84,85
84,86
85,86
85,87
86,87
88,89
90,91
90,92
91,92
93,94
95,96
96,97
96,98
97,98
99,100
100,101
100,102
101,102
-----nextToken-----
2,4,7,9,10,16,18,20,25,27,32,33,36,37,40,47,49,50,51,57,59,60,61,66,68,73,74,77,78,81,87,89,92,94,98,102,103
-----computeFrom-----
30,31
30,32
34,35
34,36
43,44
43,45
53,54
53,55
71,72
71,73
75,76
75,77
84,85
84,86
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d_badSink(twoIntsStruct * data){    {        twoIntsStruct source[100];        {            size_t i;            /* Initialize array */            for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }        }        {            size_t i;            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */            for (i = 0; i < 100; i++)            {                data[i] = source[i];            }            printStructLine(&data[0]);        }    }}
void
CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d_badSink(twoIntsStruct * data)
CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d_badSink
twoIntsStruct * data
twoIntsStruct
twoIntsStruct
* data
*
data
{    {        twoIntsStruct source[100];        {            size_t i;            /* Initialize array */            for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }        }        {            size_t i;            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */            for (i = 0; i < 100; i++)            {                data[i] = source[i];            }            printStructLine(&data[0]);        }    }}
{        twoIntsStruct source[100];        {            size_t i;            /* Initialize array */            for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }        }        {            size_t i;            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */            for (i = 0; i < 100; i++)            {                data[i] = source[i];            }            printStructLine(&data[0]);        }    }
twoIntsStruct source[100];
twoIntsStruct source[100];
twoIntsStruct
twoIntsStruct
source[100]
source
[100]
100
{            size_t i;            /* Initialize array */            for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }        }
size_t i;
size_t i;
size_t
size_t
i
i
for (i = 0; i < 100; i++)            {                source[i].intOne = 0;                source[i].intTwo = 0;            }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{                source[i].intOne = 0;                source[i].intTwo = 0;            }
source[i].intOne = 0;
source[i].intOne = 0
source[i].intOne
source[i]
source
source
i
i
intOne
0
source[i].intTwo = 0;
source[i].intTwo = 0
source[i].intTwo
source[i]
source
source
i
i
intTwo
0
{            size_t i;            /* POTENTIAL FLAW: Possible buffer overflow if data < 100 */            for (i = 0; i < 100; i++)            {                data[i] = source[i];            }            printStructLine(&data[0]);        }
size_t i;
size_t i;
size_t
size_t
i
i
for (i = 0; i < 100; i++)            {                data[i] = source[i];            }
i = 0;
i = 0
i
i
0
i < 100
i
i
100
i++
i
i
{                data[i] = source[i];            }
data[i] = source[i];
data[i] = source[i]
data[i]
data
data
i
i
source[i]
source
source
i
i
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
-----joern-----
(48,34,0)
(53,21,0)
(12,7,0)
(40,42,0)
(31,14,0)
(31,21,0)
(2,39,0)
(14,1,0)
(39,34,0)
(2,29,0)
(35,0,0)
(27,0,0)
(0,44,0)
(7,29,0)
(3,39,0)
(13,19,0)
(49,44,0)
(32,52,0)
(36,52,0)
(19,43,0)
(43,20,0)
(9,4,0)
(41,42,0)
(28,4,0)
(16,44,0)
(42,34,0)
(43,0,0)
(29,7,0)
(34,26,0)
(15,39,0)
(38,16,0)
(11,44,0)
(25,44,0)
(21,4,0)
(29,2,0)
(51,1,0)
(50,5,0)
(5,4,0)
(7,24,0)
(10,7,0)
(19,44,0)
(19,24,0)
(17,31,0)
(18,25,0)
(22,14,0)
(52,51,0)
(8,32,0)
(21,31,0)
(0,43,0)
(6,51,0)
(47,9,0)
(23,4,0)
(32,4,0)
(45,9,0)
(30,19,0)
(46,25,0)
(52,32,0)
(37,21,0)
(54,32,0)
(9,4,1)
(50,14,1)
(54,9,1)
(47,45,1)
(22,31,1)
(10,12,1)
(23,28,1)
(19,24,1)
(49,11,1)
(29,7,1)
(19,44,1)
(32,8,1)
(16,44,1)
(38,43,1)
(18,46,1)
(53,37,1)
(30,25,1)
(16,38,1)
(46,44,1)
(32,4,1)
(7,24,1)
(52,32,1)
(31,17,1)
(5,4,1)
(8,54,1)
(31,21,1)
(14,22,1)
(5,50,1)
(12,25,1)
(36,32,1)
(25,18,1)
(51,6,1)
(27,19,1)
(2,29,1)
(35,27,1)
(21,4,1)
(25,44,1)
(21,53,1)
(52,36,1)
(7,10,1)
(33,2,1)
(46,16,1)
(11,9,1)
(17,21,1)
(45,4,1)
(13,30,1)
(4,23,1)
(37,51,1)
(19,13,1)
(45,5,1)
(0,44,1)
(43,0,1)
(44,49,1)
(0,35,1)
(9,47,1)
(6,52,1)
(0,44,2)
(22,9,2)
(5,9,2)
(19,44,2)
(19,25,2)
(32,4,2)
(31,9,2)
(27,25,2)
(16,25,2)
(0,25,2)
(21,9,2)
(47,9,2)
(35,25,2)
(25,44,2)
(38,25,2)
(5,4,2)
(29,7,2)
(52,9,2)
(54,9,2)
(25,25,2)
(9,4,2)
(13,25,2)
(6,9,2)
(46,25,2)
(30,25,2)
(50,9,2)
(51,9,2)
(14,9,2)
(21,4,2)
(7,24,2)
(9,9,2)
(43,25,2)
(52,32,2)
(19,24,2)
(17,9,2)
(36,9,2)
(45,9,2)
(8,9,2)
(32,9,2)
(18,25,2)
(53,9,2)
(31,21,2)
(16,44,2)
(37,9,2)
(2,29,2)
(43,0,2)
-----------------------------------
(0,source[i])
(1,)
(2,printStructLine(&data[0])
(3,i)
(4,i = 0)
(5,i++)
(6,0)
(7,data[0])
(8,i)
(9,i < 100)
(10,0)
(11,i)
(12,data)
(13,i)
(14,source[i].intTwo = 0)
(15,for (i = 0; i < 100; i++)
(16,i++)
(17,intTwo)
(18,100)
(19,data[i])
(20,)
(21,source[i])
(22,0)
(23,0)
(24,twoIntsStruct * data)
(25,i < 100)
(26,)
(27,source)
(28,i)
(29,&data[0])
(30,data)
(31,source[i].intTwo)
(32,source[i])
(33,RET)
(34,)
(35,i)
(36,intOne)
(37,source)
(38,i)
(39,)
(40,i)
(41,for (i = 0; i < 100; i++)
(42,)
(43,data[i] = source[i])
(44,i = 0)
(45,i)
(46,i)
(47,100)
(48,source)
(49,0)
(50,i)
(51,source[i].intOne = 0)
(52,source[i].intOne)
(53,i)
(54,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^