-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int_max_preinc_07_bad()
{
    int data;
    /* Initialize data */
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use the maximum value for this type */
        data = INT_MAX;
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            int result = data;
            printIntLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__int_max_preinc_07_bad(){    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
void
CWE190_Integer_Overflow__int_max_preinc_07_bad()
CWE190_Integer_Overflow__int_max_preinc_07_bad
{    int data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }}
int data;
int data;
int
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use the maximum value for this type */        data = INT_MAX;    }
data = INT_MAX;
data = INT_MAX
data
data
INT_MAX
INT_MAX
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            int result = data;            printIntLine(result);        }
++data;
++data
data
data
int result = data;
int result = data;
int
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
-----joern-----
(21,20,0)
(19,10,0)
(3,21,0)
(11,6,0)
(3,6,0)
(27,10,0)
(8,0,0)
(14,3,0)
(2,3,0)
(9,21,0)
(17,0,0)
(24,21,0)
(26,6,0)
(26,3,0)
(12,21,0)
(4,13,0)
(10,0,0)
(24,6,0)
(23,1,0)
(6,22,0)
(7,13,0)
(3,10,0)
(16,0,0)
(18,26,0)
(15,1,0)
(24,10,0)
(25,24,0)
(15,23,1)
(24,21,1)
(12,1,1)
(23,10,1)
(1,15,1)
(4,21,1)
(24,25,1)
(4,1,1)
(10,19,1)
(3,2,1)
(19,27,1)
(2,14,1)
(21,9,1)
(7,4,1)
(3,10,1)
(5,26,1)
(14,24,1)
(13,7,1)
(26,18,1)
(26,3,1)
(3,21,1)
(24,10,1)
(25,13,1)
(5,13,1)
(18,3,1)
(9,12,1)
(3,10,2)
(21,1,2)
(9,1,2)
(14,13,2)
(25,13,2)
(2,13,2)
(26,13,2)
(24,21,2)
(24,10,2)
(3,21,2)
(12,1,2)
(24,13,2)
(3,13,2)
(26,3,2)
(18,13,2)
-----------------------------------
(0,)
(1,staticFive==5)
(2,data)
(3,result = data)
(4,staticFive)
(5,RET)
(6,)
(7,5)
(8,if(staticFive==5)
(9,INT_MAX)
(10,data = 0)
(11,result)
(12,data)
(13,staticFive==5)
(14,result)
(15,5)
(16,if(staticFive==5)
(17,data)
(18,result)
(19,0)
(20,)
(21,data = INT_MAX)
(22,)
(23,staticFive)
(24,++data)
(25,data)
(26,printIntLine(result)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^