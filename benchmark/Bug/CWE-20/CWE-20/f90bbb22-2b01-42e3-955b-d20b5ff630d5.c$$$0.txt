-----label-----
1
-----code-----
void CWE415_Double_Free__malloc_free_int_41_bad()
{
    int * data;
    /* Initialize data */
    data = NULL;
    data = (int *)malloc(100*sizeof(int));
    if (data == NULL) {exit(-1);}
    /* POTENTIAL FLAW: Free data in the source - the bad sink frees data as well */
    free(data);
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
59,60
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,39,41,46,48,52,54,58,60
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE415_Double_Free__malloc_free_int_41_bad(){    int * data;    /* Initialize data */    data = NULL;    data = (int *)malloc(100*sizeof(int));    if (data == NULL) {exit(-1);}    /* POTENTIAL FLAW: Free data in the source - the bad sink frees data as well */    free(data);    badSink(data);}
void
CWE415_Double_Free__malloc_free_int_41_bad()
CWE415_Double_Free__malloc_free_int_41_bad
{    int * data;    /* Initialize data */    data = NULL;    data = (int *)malloc(100*sizeof(int));    if (data == NULL) {exit(-1);}    /* POTENTIAL FLAW: Free data in the source - the bad sink frees data as well */    free(data);    badSink(data);}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)malloc(100*sizeof(int));
data = (int *)malloc(100*sizeof(int))
data
data
(int *)malloc(100*sizeof(int))
int *
int
*
*
malloc(100*sizeof(int))
malloc
malloc
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
free(data);
free(data)
free
free
data
data
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(0,3,0)
(4,8,0)
(23,5,0)
(24,7,0)
(22,8,0)
(15,5,0)
(3,5,0)
(19,15,0)
(26,14,0)
(14,5,0)
(17,6,0)
(7,9,0)
(7,24,0)
(18,7,0)
(20,13,0)
(4,5,0)
(6,8,0)
(9,7,0)
(15,19,0)
(11,8,0)
(5,8,0)
(13,20,0)
(20,12,0)
(15,24,0)
(16,13,0)
(2,6,0)
(3,8,0)
(24,15,0)
(1,14,0)
(21,4,0)
(25,9,0)
(5,15,0)
(23,6,1)
(5,15,1)
(3,5,1)
(20,13,1)
(15,19,1)
(18,23,1)
(1,5,1)
(21,20,1)
(26,1,1)
(10,3,1)
(9,25,1)
(3,0,1)
(25,18,1)
(13,16,1)
(4,21,1)
(2,17,1)
(4,5,1)
(16,14,1)
(15,24,1)
(21,14,1)
(7,9,1)
(0,4,1)
(6,2,1)
(14,26,1)
(24,7,1)
(14,5,1)
(16,14,2)
(7,9,2)
(13,14,2)
(5,15,2)
(4,5,2)
(20,13,2)
(15,24,2)
(20,14,2)
(15,19,2)
(3,5,2)
(24,7,2)
(14,5,2)
-----------------------------------
(0,data)
(1,data)
(2,NULL)
(3,badSink(data)
(4,free(data)
(5,data = (int *)
(6,data = NULL)
(7,100*sizeof(int)
(8,)
(9,sizeof(int)
(10,RET)
(11,if (data == NULL)
(12,)
(13,-1)
(14,data == NULL)
(15,(int *)
(16,1)
(17,data)
(18,100)
(19,int *)
(20,exit(-1)
(21,data)
(22,data)
(23,data)
(24,malloc(100*sizeof(int)
(25,int)
(26,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^