-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execlp_01_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    /* execlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
61,64
61,65
62,63
64,65
64,66
65,66
67,68
69,70
71,72
71,73
72,73
72,74
74,75
77,78
78,79
78,80
78,81
78,82
78,83
78,84
79,80
81,82
83,84
85,86
87,88
89,90
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,43,45,46,50,52,56,58,63,66,68,70,73,75,76,80,82,84,86,88,90
-----computeFrom-----
23,24
23,25
54,55
54,56
64,65
64,66
71,72
71,73
72,73
72,74
-----guardedBy-----
56,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execlp_01_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execlp_01_bad()
CWE78_OS_Command_Injection__char_environment_execlp_01_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(31,40,0)
(32,18,0)
(17,25,0)
(10,38,0)
(6,23,0)
(28,2,0)
(1,28,0)
(5,23,0)
(13,25,0)
(40,25,0)
(30,31,0)
(7,26,0)
(41,38,0)
(33,40,0)
(35,18,0)
(28,29,0)
(15,18,0)
(11,38,0)
(33,15,0)
(38,40,0)
(22,23,0)
(14,15,0)
(20,29,0)
(36,25,0)
(10,15,0)
(31,28,0)
(16,33,0)
(19,23,0)
(18,35,0)
(18,25,0)
(38,10,0)
(27,28,0)
(15,10,0)
(15,33,0)
(24,35,0)
(4,40,0)
(8,10,0)
(34,29,0)
(26,18,0)
(12,2,0)
(2,29,0)
(33,28,0)
(15,37,0)
(0,26,0)
(40,31,0)
(39,23,0)
(23,29,0)
(21,2,0)
(25,29,0)
(3,33,0)
(31,30,1)
(28,2,1)
(33,28,1)
(14,33,1)
(35,24,1)
(39,19,1)
(12,21,1)
(5,39,1)
(26,18,1)
(10,38,1)
(26,0,1)
(38,41,1)
(11,8,1)
(33,40,1)
(41,11,1)
(15,18,1)
(1,2,1)
(19,22,1)
(31,28,1)
(32,40,1)
(8,14,1)
(9,23,1)
(0,7,1)
(22,26,1)
(27,1,1)
(33,16,1)
(23,6,1)
(28,27,1)
(6,5,1)
(15,10,1)
(24,32,1)
(38,40,1)
(4,28,1)
(18,35,1)
(40,31,1)
(16,3,1)
(2,12,1)
(22,15,1)
(15,33,1)
(30,4,1)
(7,18,1)
(3,26,1)
(33,26,2)
(15,10,2)
(26,18,2)
(15,33,2)
(15,26,2)
(14,26,2)
(33,40,2)
(40,31,2)
(18,35,2)
(33,28,2)
(10,26,2)
(38,26,2)
(31,28,2)
(15,18,2)
(3,26,2)
(41,26,2)
(8,26,2)
(38,40,2)
(16,26,2)
(28,2,2)
(11,26,2)
(10,38,2)
-----------------------------------
(0,NULL)
(1,data)
(2,dataBuffer[100] = COMMAND_ARG2)
(3,data)
(4,dataLen)
(5,COMMAND_ARG3)
(6,NULL)
(7,environment)
(8,100)
(9,RET)
(10,100-dataLen-1)
(11,dataLen)
(12,COMMAND_ARG2)
(13,if (environment != NULL)
(14,environment)
(15,strncat(data+dataLen, environment, 100-dataLen-1)
(16,dataLen)
(17,dataLen)
(18,* environment = GETENV(ENV_VARIABLE)
(19,COMMAND_INT)
(20,data)
(21,dataBuffer)
(22,COMMAND_INT)
(23,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(24,ENV_VARIABLE)
(25,)
(26,environment != NULL)
(27,dataBuffer)
(28,data = dataBuffer)
(29,)
(30,data)
(31,strlen(data)
(32,environment)
(33,data+dataLen)
(34,dataBuffer)
(35,GETENV(ENV_VARIABLE)
(36,environment)
(37,)
(38,dataLen-1)
(39,COMMAND_ARG1)
(40,dataLen = strlen(data)
(41,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^