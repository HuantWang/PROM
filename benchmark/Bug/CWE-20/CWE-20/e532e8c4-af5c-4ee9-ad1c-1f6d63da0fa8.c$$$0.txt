-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_max_preinc_07_bad()
{
    unsigned int data;
    data = 0;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Use the maximum size of the data type */
        data = UINT_MAX;
    }
    if(staticFive==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
42,43
42,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,32,38,41,43,46,50,52
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_max_preinc_07_bad(){    unsigned int data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_max_preinc_07_bad()
CWE190_Integer_Overflow__unsigned_int_max_preinc_07_bad
{    unsigned int data;    data = 0;    if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }    if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Use the maximum size of the data type */        data = UINT_MAX;    }
data = UINT_MAX;
data = UINT_MAX
data
data
UINT_MAX
UINT_MAX
if(staticFive==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
staticFive==5
staticFive
staticFive
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(21,7,0)
(11,7,0)
(21,13,0)
(26,9,0)
(22,10,0)
(18,11,0)
(13,9,0)
(7,16,0)
(11,19,0)
(11,13,0)
(20,7,0)
(8,9,0)
(20,21,0)
(14,7,0)
(12,21,0)
(25,19,0)
(19,3,0)
(17,13,0)
(2,19,0)
(23,0,0)
(5,20,0)
(21,19,0)
(1,10,0)
(15,13,0)
(27,21,0)
(4,9,0)
(6,0,0)
(20,5,1)
(21,13,1)
(5,21,1)
(13,17,1)
(6,10,1)
(10,1,1)
(6,19,1)
(18,0,1)
(24,0,1)
(11,19,1)
(11,13,1)
(0,23,1)
(20,21,1)
(24,20,1)
(21,19,1)
(1,22,1)
(12,27,1)
(22,13,1)
(21,12,1)
(17,15,1)
(23,6,1)
(2,25,1)
(25,10,1)
(19,2,1)
(27,11,1)
(11,18,1)
(11,13,2)
(21,13,2)
(11,0,2)
(11,19,2)
(20,0,2)
(21,0,2)
(2,10,2)
(20,21,2)
(12,0,2)
(18,0,2)
(21,19,2)
(27,0,2)
(25,10,2)
(19,10,2)
(5,0,2)
-----------------------------------
(0,staticFive==5)
(1,5)
(2,UINT_MAX)
(3,)
(4,if(staticFive==5)
(5,result)
(6,staticFive)
(7,)
(8,if(staticFive==5)
(9,)
(10,staticFive==5)
(11,++data)
(12,data)
(13,data = 0)
(14,result)
(15,data)
(16,)
(17,0)
(18,data)
(19,data = UINT_MAX)
(20,printUnsignedLine(result)
(21,result = data)
(22,staticFive)
(23,5)
(24,RET)
(25,data)
(26,data)
(27,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^