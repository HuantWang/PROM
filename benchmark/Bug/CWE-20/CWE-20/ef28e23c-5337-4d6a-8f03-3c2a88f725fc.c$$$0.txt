-----label-----
1
-----code-----
void CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18_bad()
{
    goto sink;
sink:
    {
        charVoid structCharVoid;
        structCharVoid.voidSecond = (void *)SRC_STR;
        /* Print the initial block pointed to by structCharVoid.voidSecond */
        printLine((char *)structCharVoid.voidSecond);
        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */
        memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */
        printLine((char *)structCharVoid.charFirst);
        printLine((char *)structCharVoid.voidSecond);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
8,9
8,10
10,11
10,12
10,13
10,14
10,15
10,16
10,17
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
19,21
20,21
23,24
23,25
24,25
24,26
26,27
28,29
30,31
31,32
31,33
32,33
34,35
34,36
35,36
35,37
37,38
39,40
39,41
40,41
43,44
44,45
44,46
44,47
44,48
45,46
47,48
47,49
48,49
51,52
53,54
54,55
55,56
57,58
58,59
58,60
59,60
59,61
60,61
60,62
61,62
64,65
64,66
65,66
66,67
66,68
67,68
68,69
69,70
69,71
70,71
73,74
74,75
74,76
79,80
80,81
80,82
81,82
83,84
83,85
84,85
84,86
86,87
88,89
88,90
89,90
92,93
93,94
93,95
94,95
96,97
96,98
97,98
97,99
99,100
101,102
101,103
102,103
-----nextToken-----
2,4,7,9,14,16,21,22,25,27,29,33,36,38,41,42,46,49,50,52,56,62,63,71,72,75,76,77,78,82,85,87,90,91,95,98,100,103,104
-----computeFrom-----
18,19
18,20
58,59
58,60
64,65
64,66
66,67
66,68
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;UnaryExpression;BinaryExpression;UnaryExpression;UnaryExpression;FieldReference;IdExpression;Name;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FieldReference;IdExpression;Name;Name;
-----ast_node-----
void CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18_bad(){    goto sink;sink:    {        charVoid structCharVoid;        structCharVoid.voidSecond = (void *)SRC_STR;        /* Print the initial block pointed to by structCharVoid.voidSecond */        printLine((char *)structCharVoid.voidSecond);        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */        memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */        printLine((char *)structCharVoid.charFirst);        printLine((char *)structCharVoid.voidSecond);    }}
void
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18_bad()
CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18_bad
{    goto sink;sink:    {        charVoid structCharVoid;        structCharVoid.voidSecond = (void *)SRC_STR;        /* Print the initial block pointed to by structCharVoid.voidSecond */        printLine((char *)structCharVoid.voidSecond);        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */        memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */        printLine((char *)structCharVoid.charFirst);        printLine((char *)structCharVoid.voidSecond);    }}
goto sink;
sink
sink:    {        charVoid structCharVoid;        structCharVoid.voidSecond = (void *)SRC_STR;        /* Print the initial block pointed to by structCharVoid.voidSecond */        printLine((char *)structCharVoid.voidSecond);        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */        memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */        printLine((char *)structCharVoid.charFirst);        printLine((char *)structCharVoid.voidSecond);    }
sink
{        charVoid structCharVoid;        structCharVoid.voidSecond = (void *)SRC_STR;        /* Print the initial block pointed to by structCharVoid.voidSecond */        printLine((char *)structCharVoid.voidSecond);        /* FLAW: Use the sizeof(structCharVoid) which will overwrite the pointer voidSecond */        memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));        structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'; /* null terminate the string */        printLine((char *)structCharVoid.charFirst);        printLine((char *)structCharVoid.voidSecond);    }
charVoid structCharVoid;
charVoid structCharVoid;
charVoid
charVoid
structCharVoid
structCharVoid
structCharVoid.voidSecond = (void *)SRC_STR;
structCharVoid.voidSecond = (void *)SRC_STR
structCharVoid.voidSecond
structCharVoid
structCharVoid
voidSecond
(void *)SRC_STR
void *
void
*
*
SRC_STR
SRC_STR
printLine((char *)structCharVoid.voidSecond);
printLine((char *)structCharVoid.voidSecond)
printLine
printLine
(char *)structCharVoid.voidSecond
char *
char
*
*
structCharVoid.voidSecond
structCharVoid
structCharVoid
voidSecond
memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid));
memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid))
memcpy
memcpy
structCharVoid.charFirst
structCharVoid
structCharVoid
charFirst
SRC_STR
SRC_STR
sizeof(structCharVoid)
(structCharVoid)
structCharVoid
structCharVoid
structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0';
structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1] = '\0'
structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)/sizeof(char))-1]
structCharVoid.charFirst
structCharVoid
structCharVoid
charFirst
(sizeof(structCharVoid.charFirst)/sizeof(char))-1
(sizeof(structCharVoid.charFirst)/sizeof(char))
sizeof(structCharVoid.charFirst)/sizeof(char)
sizeof(structCharVoid.charFirst)
(structCharVoid.charFirst)
structCharVoid.charFirst
structCharVoid
structCharVoid
charFirst
sizeof(char)
char
char

1
'\0'
printLine((char *)structCharVoid.charFirst);
printLine((char *)structCharVoid.charFirst)
printLine
printLine
(char *)structCharVoid.charFirst
char *
char
*
*
structCharVoid.charFirst
structCharVoid
structCharVoid
charFirst
printLine((char *)structCharVoid.voidSecond);
printLine((char *)structCharVoid.voidSecond)
printLine
printLine
(char *)structCharVoid.voidSecond
char *
char
*
*
structCharVoid.voidSecond
structCharVoid
structCharVoid
voidSecond
-----joern-----
(19,37,0)
(28,21,0)
(27,6,0)
(11,33,0)
(14,44,0)
(6,27,0)
(41,25,0)
(7,17,0)
(15,10,0)
(13,43,0)
(12,7,0)
(36,35,0)
(35,21,0)
(21,28,0)
(23,4,0)
(39,1,0)
(2,14,0)
(10,40,0)
(39,41,0)
(31,44,0)
(21,35,0)
(42,31,0)
(39,43,0)
(33,37,0)
(1,7,0)
(21,9,0)
(32,37,0)
(44,38,0)
(1,39,0)
(33,45,0)
(7,12,0)
(44,14,0)
(50,25,0)
(45,6,0)
(35,45,0)
(40,38,0)
(43,39,0)
(41,39,0)
(37,32,0)
(38,49,0)
(5,1,0)
(22,10,0)
(26,12,0)
(47,31,0)
(34,35,0)
(32,38,0)
(52,17,0)
(9,21,0)
(10,22,0)
(45,38,0)
(6,45,0)
(40,10,0)
(0,49,0)
(20,38,0)
(37,19,0)
(18,6,0)
(3,22,0)
(28,38,0)
(4,45,0)
(25,41,0)
(16,44,0)
(48,49,0)
(46,12,0)
(51,22,0)
(37,33,0)
(17,38,0)
(8,33,0)
(10,15,0)
(44,31,0)
(7,1,0)
(29,4,0)
(30,25,0)
(1,5,1)
(41,25,1)
(42,47,1)
(21,35,1)
(51,3,1)
(52,7,1)
(10,15,1)
(14,2,1)
(21,9,1)
(43,13,1)
(30,50,1)
(50,12,1)
(4,29,1)
(10,22,1)
(35,45,1)
(2,16,1)
(24,28,1)
(25,30,1)
(39,43,1)
(26,44,1)
(40,10,1)
(5,39,1)
(16,31,1)
(31,42,1)
(47,32,1)
(17,52,1)
(13,41,1)
(36,34,1)
(37,19,1)
(33,11,1)
(28,21,1)
(8,45,1)
(7,12,1)
(29,23,1)
(44,14,1)
(12,46,1)
(7,1,1)
(22,51,1)
(6,27,1)
(18,4,1)
(33,45,1)
(39,41,1)
(34,40,1)
(1,39,1)
(44,31,1)
(3,17,1)
(11,8,1)
(37,33,1)
(6,18,1)
(45,6,1)
(23,0,1)
(32,37,1)
(46,26,1)
(35,36,1)
(33,45,2)
(37,19,2)
(35,45,2)
(45,6,2)
(7,1,2)
(40,10,2)
(6,27,2)
(39,41,2)
(10,22,2)
(28,21,2)
(21,35,2)
(39,43,2)
(1,39,2)
(44,14,2)
(10,15,2)
(21,9,2)
(32,37,2)
(7,12,2)
(41,25,2)
(44,31,2)
(37,33,2)
-----------------------------------
(0,goto sink;)
(1,(sizeof(structCharVoid.charFirst)
(2,structCharVoid)
(3,structCharVoid)
(4,structCharVoid.voidSecond)
(5,1)
(6,(void *)
(7,structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)
(8,structCharVoid)
(9,char *)
(10,(char *)
(11,voidSecond)
(12,structCharVoid.charFirst)
(13,char)
(14,sizeof(structCharVoid)
(15,char *)
(16,SRC_STR)
(17,structCharVoid.charFirst[(sizeof(structCharVoid.charFirst)
(18,SRC_STR)
(19,char *)
(20,structCharVoid)
(21,(char *)
(22,structCharVoid.charFirst)
(23,structCharVoid)
(24,RET)
(25,structCharVoid.charFirst)
(26,structCharVoid)
(27,void *)
(28,printLine((char *)
(29,voidSecond)
(30,charFirst)
(31,structCharVoid.charFirst)
(32,printLine((char *)
(33,structCharVoid.voidSecond)
(34,structCharVoid)
(35,structCharVoid.voidSecond)
(36,voidSecond)
(37,(char *)
(38,)
(39,sizeof(structCharVoid.charFirst)
(40,printLine((char *)
(41,sizeof(structCharVoid.charFirst)
(42,charFirst)
(43,sizeof(char)
(44,memcpy(structCharVoid.charFirst, SRC_STR, sizeof(structCharVoid)
(45,structCharVoid.voidSecond = (void *)
(46,charFirst)
(47,structCharVoid)
(48,sink:)
(49,)
(50,structCharVoid)
(51,charFirst)
(52,'\\\\0')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^