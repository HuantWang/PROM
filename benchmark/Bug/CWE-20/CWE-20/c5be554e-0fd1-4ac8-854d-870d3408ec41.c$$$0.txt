-----label-----
1
-----code-----
void CWE190_Integer_Overflow__int64_t_fscanf_postinc_12_bad()
{
    int64_t data;
    data = 0LL;
    if(globalReturnsTrueOrFalse())
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%" SCNd64, &data);
    }
    else
    {
        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */
        data = 2;
    }
    if(globalReturnsTrueOrFalse())
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
    else
    {
        /* FIX: Add a check to prevent an overflow from occurring */
        if (data < LLONG_MAX)
        {
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
        else
        {
            printLine("data value is too large to perform arithmetic safely.");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
17,20
18,19
19,20
21,22
22,23
23,24
24,25
25,26
25,27
26,27
29,30
29,31
29,32
30,31
31,32
33,34
34,35
34,36
34,37
35,36
36,37
37,38
39,40
40,41
40,42
41,42
43,44
43,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
54,55
55,56
55,57
55,58
56,57
56,58
57,58
59,60
61,62
61,63
61,64
62,63
63,64
64,65
66,67
67,68
67,69
68,69
70,71
70,72
72,73
73,74
75,76
76,77
76,78
77,78
79,80
81,82
82,83
83,84
83,85
84,85
-----nextToken-----
2,4,9,11,15,16,20,27,28,32,38,42,44,47,51,53,58,60,65,69,71,74,78,80,85,86
-----computeFrom-----
13,14
13,15
25,26
25,27
56,57
56,58
-----guardedBy-----
58,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ProblemStatement;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE190_Integer_Overflow__int64_t_fscanf_postinc_12_bad(){    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            data++;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
void
CWE190_Integer_Overflow__int64_t_fscanf_postinc_12_bad()
CWE190_Integer_Overflow__int64_t_fscanf_postinc_12_bad
{    int64_t data;    data = 0LL;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }    if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            data++;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }}
int64_t data;
int64_t data;
int64_t
int64_t
data
data
data = 0LL;
data = 0LL
data
data
0LL
if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }    else    {        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%" SCNd64, &data);    }
fscanf (stdin, "%" SCNd64, &data);
{        /* FIX: Use a small, non-zero value that will not cause an overflow in the sinks */        data = 2;    }
data = 2;
data = 2
data
data
2
if(globalReturnsTrueOrFalse())    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }    else    {        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            data++;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{        /* FIX: Add a check to prevent an overflow from occurring */        if (data < LLONG_MAX)        {            data++;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }    }
if (data < LLONG_MAX)        {            data++;            int64_t result = data;            printLongLongLine(result);        }        else        {            printLine("data value is too large to perform arithmetic safely.");        }
data < LLONG_MAX
data
data
LLONG_MAX
LLONG_MAX
{            data++;            int64_t result = data;            printLongLongLine(result);        }
data++;
data++
data
data
int64_t result = data;
int64_t result = data;
int64_t
int64_t
result = data
result
= data
data
data
printLongLongLine(result);
printLongLongLine(result)
printLongLongLine
printLongLongLine
result
result
{            printLine("data value is too large to perform arithmetic safely.");        }
printLine("data value is too large to perform arithmetic safely.");
printLine("data value is too large to perform arithmetic safely.")
printLine
printLine
"data value is too large to perform arithmetic safely."
-----joern-----
(29,26,0)
(34,12,0)
(31,11,0)
(21,35,0)
(11,12,0)
(21,10,0)
(10,28,0)
(37,7,0)
(31,12,0)
(22,10,0)
(36,35,0)
(22,35,0)
(19,31,0)
(13,35,0)
(32,9,0)
(24,22,0)
(38,14,0)
(30,9,0)
(8,9,0)
(15,11,0)
(0,21,0)
(1,38,0)
(26,35,0)
(7,10,0)
(11,35,0)
(6,11,0)
(35,2,0)
(3,9,0)
(5,26,0)
(13,12,0)
(7,22,0)
(25,10,0)
(33,22,0)
(18,20,0)
(16,35,0)
(27,13,0)
(24,21,1)
(36,16,1)
(35,36,1)
(19,11,1)
(16,17,1)
(21,35,1)
(23,35,1)
(27,26,1)
(17,8,1)
(1,26,1)
(33,24,1)
(7,37,1)
(23,17,1)
(22,33,1)
(37,22,1)
(26,5,1)
(11,35,1)
(31,11,1)
(15,13,1)
(21,0,1)
(5,29,1)
(38,1,1)
(31,19,1)
(4,38,1)
(0,23,1)
(13,35,1)
(4,7,1)
(29,23,1)
(13,27,1)
(7,22,1)
(11,6,1)
(6,15,1)
(22,35,1)
(4,31,1)
(26,35,1)
(24,23,2)
(15,26,2)
(16,17,2)
(37,23,2)
(31,11,2)
(11,26,2)
(22,23,2)
(26,35,2)
(7,23,2)
(27,26,2)
(35,17,2)
(29,23,2)
(0,23,2)
(21,35,2)
(21,23,2)
(6,26,2)
(7,22,2)
(11,35,2)
(1,26,2)
(19,26,2)
(13,26,2)
(5,23,2)
(31,26,2)
(22,35,2)
(33,23,2)
(13,35,2)
(38,26,2)
(26,23,2)
(36,17,2)
-----------------------------------
(0,data)
(1,"data value is too large to perform arithmetic safely.")
(2,)
(3,if(globalReturnsTrueOrFalse()
(4,RET)
(5,LLONG_MAX)
(6,data)
(7,printLongLongLine(result)
(8,L)
(9,)
(10,)
(11,result = data)
(12,)
(13,data++)
(14,)
(15,result)
(16,data)
(17,globalReturnsTrueOrFalse()
(18,if (data < LLONG_MAX)
(19,result)
(20,)
(21,data++)
(22,result = data)
(23,globalReturnsTrueOrFalse()
(24,result)
(25,result)
(26,data < LLONG_MAX)
(27,data)
(28,)
(29,data)
(30,data)
(31,printLongLongLine(result)
(32,if(globalReturnsTrueOrFalse()
(33,data)
(34,result)
(35,data = 2)
(36,2)
(37,result)
(38,printLine("data value is too large to perform arithmetic safely.")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^