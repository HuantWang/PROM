-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_07_bad()
{
    char * data;
    data = (char *)malloc(100*sizeof(char));
    if (data == NULL) {exit(-1);}
    if(staticFive==5)
    {
        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */
        memset(data, 'A', 100-1); /* fill with 'A's */
        data[100-1] = '\0'; /* null terminate */
    }
    {
        char dest[50] = "";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/
        strncat(dest, data, strlen(data));
        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */
        printLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
43,45
44,45
44,46
45,46
48,49
48,50
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
68,70
68,71
68,72
68,73
69,70
70,71
70,72
72,73
72,74
72,75
74,75
76,77
78,79
79,80
79,81
79,82
79,83
80,81
82,83
84,85
86,87
86,88
87,88
89,90
91,92
92,93
92,94
93,94
93,95
94,95
96,97
96,98
100,101
101,102
101,103
102,103
104,105
106,107
107,108
107,109
108,109
110,111
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,33,35,40,42,46,47,52,54,55,57,58,63,65,66,67,71,73,75,77,81,83,85,88,90,95,97,98,99,103,105,109,111
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
44,45
44,46
56,57
56,58
60,61
60,62
64,65
64,66
92,93
92,94
96,97
96,98
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_07_bad(){    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    if(staticFive==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/        strncat(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_07_bad()
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_07_bad
{    char * data;    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    if(staticFive==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }    {        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/        strncat(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }}
char * data;
char * data;
char
* data
*
data
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
if(staticFive==5)    {        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }
staticFive==5
staticFive
staticFive
5
{        /* FLAW: Initialize data as a large buffer that is larger than the small buffer used in the sink */        memset(data, 'A', 100-1); /* fill with 'A's */        data[100-1] = '\0'; /* null terminate */    }
memset(data, 'A', 100-1);
memset(data, 'A', 100-1)
memset
memset
data
data
'A'
100-1
100
1
data[100-1] = '\0';
data[100-1] = '\0'
data[100-1]
data
data
100-1
100
1
'\0'
{        char dest[50] = "";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/        strncat(dest, data, strlen(data));        dest[50-1] = '\0'; /* Ensure the destination buffer is null terminated */        printLine(data);        free(data);    }
char dest[50] = "";
char dest[50] = "";
char
dest[50] = ""
dest
[50]
50
= ""
""
strncat(dest, data, strlen(data));
strncat(dest, data, strlen(data))
strncat
strncat
dest
dest
data
data
strlen(data)
strlen
strlen
data
data
dest[50-1] = '\0';
dest[50-1] = '\0'
dest[50-1]
dest
dest
50-1
50
1
'\0'
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(45,5,0)
(32,54,0)
(20,39,0)
(34,18,0)
(28,22,0)
(40,18,0)
(29,40,0)
(7,35,0)
(3,40,0)
(48,40,0)
(9,18,0)
(54,20,0)
(24,40,0)
(53,13,0)
(44,4,0)
(39,6,0)
(37,31,0)
(3,54,0)
(22,40,0)
(2,54,0)
(36,42,0)
(25,6,0)
(48,31,0)
(46,48,0)
(32,43,0)
(5,30,0)
(38,18,0)
(26,29,0)
(13,53,0)
(30,10,0)
(31,54,0)
(39,20,0)
(50,32,0)
(42,32,0)
(48,29,0)
(54,18,0)
(4,40,0)
(27,51,0)
(41,57,0)
(53,4,0)
(30,5,0)
(1,48,0)
(32,42,0)
(51,54,0)
(35,6,0)
(22,54,0)
(31,48,0)
(11,10,0)
(16,15,0)
(53,29,0)
(19,20,0)
(0,23,0)
(47,51,0)
(10,43,0)
(17,42,0)
(6,39,0)
(30,54,0)
(20,19,0)
(57,0,0)
(14,30,0)
(52,32,0)
(48,54,0)
(12,5,0)
(20,54,0)
(58,29,0)
(21,53,0)
(8,3,0)
(56,15,0)
(6,35,0)
(49,13,0)
(33,13,0)
(0,57,0)
(16,0,1)
(54,20,1)
(47,54,1)
(28,4,1)
(5,45,1)
(31,37,1)
(30,54,1)
(26,15,1)
(50,52,1)
(52,15,1)
(42,36,1)
(45,12,1)
(30,5,1)
(1,46,1)
(17,50,1)
(41,51,1)
(11,30,1)
(12,14,1)
(22,28,1)
(39,6,1)
(56,16,1)
(14,32,1)
(51,27,1)
(6,35,1)
(0,57,1)
(37,1,1)
(36,17,1)
(58,26,1)
(53,13,1)
(15,56,1)
(10,11,1)
(51,54,1)
(48,31,1)
(7,25,1)
(22,54,1)
(48,29,1)
(20,39,1)
(32,54,1)
(3,8,1)
(27,47,1)
(31,54,1)
(20,19,1)
(26,10,1)
(21,48,1)
(25,2,1)
(55,3,1)
(29,58,1)
(32,42,1)
(16,51,1)
(49,21,1)
(46,29,1)
(35,7,1)
(3,54,1)
(33,49,1)
(8,22,1)
(44,53,1)
(53,29,1)
(13,33,1)
(57,41,1)
(4,44,1)
(48,54,1)
(42,15,2)
(31,54,2)
(52,15,2)
(41,51,2)
(6,35,2)
(32,42,2)
(32,15,2)
(5,15,2)
(30,54,2)
(57,51,2)
(17,15,2)
(11,15,2)
(10,15,2)
(54,20,2)
(45,15,2)
(0,57,2)
(3,54,2)
(20,39,2)
(30,5,2)
(12,15,2)
(0,51,2)
(53,13,2)
(48,31,2)
(51,54,2)
(32,54,2)
(20,19,2)
(50,15,2)
(36,15,2)
(39,6,2)
(48,29,2)
(14,15,2)
(30,15,2)
(53,29,2)
(22,54,2)
(48,54,2)
-----------------------------------
(0,exit(-1)
(1,data)
(2,data)
(3,free(data)
(4,dest[50-1] = \\\'\\\\0\\\')
(5,100-1)
(6,100*sizeof(char)
(7,char)
(8,data)
(9,data)
(10,data[100-1] = \\\'\\\\0\\\')
(11,\\\'\\\\0\\\')
(12,100)
(13,50-1)
(14,data)
(15,staticFive==5)
(16,staticFive)
(17,100)
(18,)
(19,char *)
(20,(char *)
(21,dest)
(22,printLine(data)
(23,)
(24,dest)
(25,100)
(26,dest)
(27,NULL)
(28,data)
(29,dest[50] = "")
(30,data[100-1])
(31,strlen(data)
(32,memset(data, \\\'A\\\', 100-1)
(33,1)
(34,if (data == NULL)
(35,sizeof(char)
(36,1)
(37,data)
(38,if(staticFive==5)
(39,malloc(100*sizeof(char)
(40,)
(41,1)
(42,100-1)
(43,)
(44,\\\'\\\\0\\\')
(45,1)
(46,dest)
(47,data)
(48,strncat(dest, data, strlen(data)
(49,50)
(50,\\\'A\\\')
(51,data == NULL)
(52,data)
(53,dest[50-1])
(54,data = (char *)
(55,RET)
(56,5)
(57,-1)
(58,"")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^