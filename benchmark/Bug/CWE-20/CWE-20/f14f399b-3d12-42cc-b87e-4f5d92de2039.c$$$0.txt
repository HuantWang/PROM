-----label-----
1
-----code-----
char * CWE78_OS_Command_Injection__char_file_w32spawnl_61b_badSource(char * data)
{
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
32,33
32,34
33,34
33,35
34,35
34,36
36,37
39,40
39,41
40,41
41,42
41,43
42,43
44,45
44,46
44,47
45,46
47,48
50,51
50,52
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
58,60
59,60
59,61
59,62
59,63
60,61
62,63
62,64
63,64
65,66
67,68
67,69
68,69
68,70
71,72
72,73
72,74
74,75
76,77
78,79
80,81
80,82
81,82
82,83
82,84
83,84
86,87
87,88
87,89
88,89
88,90
89,90
91,92
94,95
95,96
95,97
96,97
98,99
100,101
101,102
-----nextToken-----
2,4,5,7,9,10,16,18,22,24,28,30,31,35,37,38,43,46,48,49,53,55,61,64,66,69,70,73,75,77,79,84,85,90,92,93,97,99,102
-----computeFrom-----
33,34
33,35
34,35
34,36
41,42
41,43
51,52
51,53
58,59
58,60
62,63
62,64
72,73
72,74
87,88
87,89
-----guardedBy-----
37,92
55,79
53,99
64,90
75,92
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE78_OS_Command_Injection__char_file_w32spawnl_61b_badSource(char * data){    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    return data;}
char
* CWE78_OS_Command_Injection__char_file_w32spawnl_61b_badSource(char * data)
*
CWE78_OS_Command_Injection__char_file_w32spawnl_61b_badSource
char * data
char
* data
*
data
{    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    return data;}
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
return data;
data
data
-----joern-----
(20,37,0)
(1,11,0)
(17,13,0)
(0,3,0)
(11,48,0)
(11,1,0)
(43,44,0)
(8,38,0)
(25,0,0)
(20,9,0)
(38,2,0)
(46,17,0)
(44,48,0)
(20,3,0)
(11,41,0)
(21,33,0)
(40,13,0)
(45,38,0)
(40,3,0)
(0,9,0)
(4,1,0)
(9,17,0)
(30,15,0)
(31,40,0)
(47,9,0)
(1,3,0)
(1,9,0)
(18,20,0)
(9,0,0)
(35,44,0)
(36,42,0)
(16,40,0)
(29,26,0)
(48,33,0)
(36,48,0)
(5,36,0)
(39,1,0)
(41,11,0)
(24,20,0)
(27,47,0)
(50,48,0)
(26,47,0)
(2,14,0)
(12,42,0)
(48,50,0)
(47,26,0)
(51,50,0)
(2,38,0)
(11,2,0)
(37,49,0)
(19,41,0)
(10,48,0)
(38,9,0)
(6,9,0)
(32,17,0)
(23,50,0)
(14,2,0)
(15,49,0)
(22,11,0)
(7,47,0)
(28,37,0)
(34,17,0)
(2,11,0)
(16,40,1)
(41,19,1)
(24,15,1)
(51,10,1)
(41,11,1)
(19,11,1)
(44,43,1)
(44,48,1)
(25,6,1)
(10,26,1)
(11,1,1)
(37,28,1)
(20,9,1)
(36,5,1)
(28,20,1)
(38,9,1)
(9,0,1)
(0,3,1)
(39,4,1)
(40,31,1)
(23,51,1)
(50,23,1)
(8,45,1)
(11,2,1)
(15,30,1)
(38,8,1)
(27,9,1)
(7,27,1)
(1,9,1)
(1,39,1)
(26,47,1)
(36,48,1)
(5,41,1)
(20,3,1)
(1,3,1)
(2,38,1)
(22,2,1)
(29,47,1)
(48,50,1)
(2,14,1)
(11,22,1)
(43,35,1)
(40,3,1)
(35,48,1)
(20,18,1)
(47,9,1)
(0,25,1)
(30,41,1)
(31,44,1)
(31,36,1)
(11,48,1)
(26,29,1)
(31,26,1)
(5,37,1)
(4,44,1)
(45,1,1)
(18,24,1)
(47,7,1)
(48,50,2)
(38,44,2)
(30,41,2)
(41,44,2)
(11,2,2)
(20,9,2)
(47,9,2)
(44,26,2)
(41,11,2)
(40,3,2)
(11,48,2)
(1,9,2)
(26,47,2)
(2,44,2)
(23,26,2)
(36,44,2)
(35,26,2)
(11,44,2)
(44,48,2)
(15,41,2)
(36,48,2)
(50,26,2)
(2,14,2)
(10,26,2)
(4,44,2)
(5,44,2)
(45,44,2)
(18,41,2)
(51,26,2)
(39,44,2)
(11,1,2)
(16,40,2)
(20,3,2)
(20,41,2)
(28,41,2)
(43,26,2)
(19,44,2)
(37,41,2)
(8,44,2)
(24,41,2)
(38,9,2)
(2,38,2)
(22,44,2)
(9,0,2)
(1,44,2)
(0,3,2)
(48,26,2)
(1,3,2)
-----------------------------------
(0,strlen(data)
(1,data+dataLen)
(2,(int)
(3,char * data)
(4,data)
(5,pFile)
(6,dataLen)
(7,dataLen)
(8,dataLen)
(9,dataLen = strlen(data)
(10,pFile)
(11,fgets(data+dataLen, (int)
(12,if (fgets(data+dataLen, (int)
(13,)
(14,int)
(15,printLine("fgets()
(16,RET)
(17,)
(18,dataLen)
(19,NULL)
(20,data[dataLen])
(21,if (pFile != NULL)
(22,pFile)
(23,"r")
(24,data)
(25,data)
(26,100-dataLen > 1)
(27,100)
(28,\\\'\\\\0\\\')
(29,1)
(30,"fgets()
(31,data)
(32,dataLen)
(33,)
(34,if (100-dataLen > 1)
(35,pFile)
(36,fclose(pFile)
(37,data[dataLen] = \\\'\\\\0\\\')
(38,100-dataLen)
(39,dataLen)
(40,return data;)
(41,fgets(data+dataLen, (int)
(42,)
(43,NULL)
(44,pFile != NULL)
(45,100)
(46,pFile)
(47,100-dataLen)
(48,pFile = fopen(FILENAME, "r")
(49,)
(50,fopen(FILENAME, "r")
(51,FILENAME)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^