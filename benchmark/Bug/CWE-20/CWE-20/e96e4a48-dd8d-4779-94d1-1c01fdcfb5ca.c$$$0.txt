-----label-----
1
-----code-----
void CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_44_bad()
{
    wchar_t * data;
    /* define a function pointer */
    void (*funcPtr) (wchar_t *) = badSink;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = wcslen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgetws() failed");
                    /* Restore NUL terminator if fgetws fails */
                    data[dataLen] = L'\0';
                }
                fclose(pFile);
            }
        }
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
30,31
30,32
30,33
32,33
34,35
36,37
37,38
37,39
38,39
40,41
42,43
42,44
42,45
43,44
44,45
44,46
45,46
47,48
47,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
59,60
59,61
62,63
62,64
63,64
63,65
64,65
64,66
66,67
69,70
69,71
70,71
71,72
71,73
72,73
74,75
74,76
74,77
75,76
77,78
80,81
80,82
81,82
81,83
82,83
84,85
86,87
86,88
87,88
87,89
88,89
88,90
89,90
89,91
89,92
89,93
90,91
92,93
92,94
93,94
95,96
97,98
97,99
98,99
98,100
101,102
102,103
102,104
104,105
106,107
108,109
110,111
110,112
111,112
112,113
112,114
113,114
116,117
117,118
117,119
118,119
118,120
119,120
121,122
124,125
125,126
125,127
126,127
128,129
130,131
131,132
131,133
132,133
134,135
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,29,31,33,35,39,41,46,48,52,54,58,60,61,65,67,68,73,76,78,79,83,85,91,94,96,99,100,103,105,107,109,114,115,120,122,123,127,129,133,135
-----computeFrom-----
37,38
37,39
63,64
63,65
64,65
64,66
71,72
71,73
81,82
81,83
88,89
88,90
92,93
92,94
102,103
102,104
117,118
117,119
-----guardedBy-----
67,122
85,109
83,129
94,120
105,122
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_44_bad(){    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = badSink;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* use the function pointer */    funcPtr(data);}
void
CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_44_bad()
CWE134_Uncontrolled_Format_String__wchar_t_file_snprintf_44_bad
{    wchar_t * data;    /* define a function pointer */    void (*funcPtr) (wchar_t *) = badSink;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* use the function pointer */    funcPtr(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
void (*funcPtr) (wchar_t *) = badSink;
void (*funcPtr) (wchar_t *) = badSink;
void
(*funcPtr) (wchar_t *) = badSink
*funcPtr
*
funcPtr
wchar_t *
wchar_t
*
*

= badSink
badSink
badSink
wchar_t dataBuffer[100] = L"";
wchar_t dataBuffer[100] = L"";
wchar_t
dataBuffer[100] = L""
dataBuffer
[100]
100
= L""
L""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(100-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(25,42,0)
(43,42,0)
(27,37,0)
(17,46,0)
(14,46,0)
(4,8,0)
(30,31,0)
(18,29,0)
(3,18,0)
(53,34,0)
(42,37,0)
(23,46,0)
(36,37,0)
(15,38,0)
(1,17,0)
(5,3,0)
(18,19,0)
(31,46,0)
(28,16,0)
(16,45,0)
(7,0,0)
(47,0,0)
(12,40,0)
(0,47,0)
(13,40,0)
(40,46,0)
(22,34,0)
(21,18,0)
(37,27,0)
(9,50,0)
(55,22,0)
(8,37,0)
(54,27,0)
(29,18,0)
(45,16,0)
(6,16,0)
(37,40,0)
(39,42,0)
(35,31,0)
(10,35,0)
(44,39,0)
(8,47,0)
(27,31,0)
(47,8,0)
(42,39,0)
(47,45,0)
(8,31,0)
(24,47,0)
(16,37,0)
(33,40,0)
(2,31,0)
(45,11,0)
(48,17,0)
(20,29,0)
(11,45,0)
(38,18,0)
(38,50,0)
(41,8,0)
(51,3,0)
(52,46,0)
(49,19,0)
(45,47,0)
(47,18,0)
(32,29,0)
(35,46,0)
(53,22,1)
(37,27,1)
(8,41,1)
(16,37,1)
(16,28,1)
(27,31,1)
(38,15,1)
(35,10,1)
(51,18,1)
(0,7,1)
(42,25,1)
(1,48,1)
(10,38,1)
(7,47,1)
(3,18,1)
(45,16,1)
(15,53,1)
(2,30,1)
(5,51,1)
(35,31,1)
(55,0,1)
(52,17,1)
(44,42,1)
(26,35,1)
(15,0,1)
(42,37,1)
(0,47,1)
(25,43,1)
(30,52,1)
(31,2,1)
(18,29,1)
(4,3,1)
(10,3,1)
(32,21,1)
(27,54,1)
(8,31,1)
(21,39,1)
(47,8,1)
(8,37,1)
(41,4,1)
(3,5,1)
(47,45,1)
(54,36,1)
(17,1,1)
(28,6,1)
(6,8,1)
(38,18,1)
(39,44,1)
(36,31,1)
(47,24,1)
(29,20,1)
(43,37,1)
(24,45,1)
(45,11,1)
(20,32,1)
(22,55,1)
(10,39,1)
(39,42,1)
(47,18,1)
(21,39,2)
(37,27,2)
(24,3,2)
(47,18,2)
(20,39,2)
(55,0,2)
(5,39,2)
(41,3,2)
(16,37,2)
(0,47,2)
(29,39,2)
(8,31,2)
(35,31,2)
(22,0,2)
(18,29,2)
(18,39,2)
(27,31,2)
(7,3,2)
(15,3,2)
(32,39,2)
(38,3,2)
(0,3,2)
(16,3,2)
(45,11,2)
(3,18,2)
(53,0,2)
(39,42,2)
(38,18,2)
(28,3,2)
(47,8,2)
(45,3,2)
(6,3,2)
(47,45,2)
(51,39,2)
(47,3,2)
(3,39,2)
(4,3,2)
(42,37,2)
(8,3,2)
(8,37,2)
(45,16,2)
-----------------------------------
(0,fgetws(data+dataLen, (int)
(1,badSink)
(2,dataBuffer)
(3,pFile != NULL)
(4,data)
(5,NULL)
(6,100)
(7,NULL)
(8,data+dataLen)
(9,if (fgetws(data+dataLen, (int)
(10,data)
(11,int)
(12,if (100-dataLen > 1)
(13,pFile)
(14,funcPtr)
(15,pFile)
(16,100-dataLen)
(17,(*funcPtr)
(18,pFile = fopen(FILENAME, "r")
(19,)
(20,"r")
(21,pFile)
(22,printLine("fgetws()
(23,data)
(24,pFile)
(25,dataLen)
(26,RET)
(27,wcslen(data)
(28,dataLen)
(29,fopen(FILENAME, "r")
(30,data)
(31,data = dataBuffer)
(32,FILENAME)
(33,dataLen)
(34,)
(35,funcPtr(data)
(36,dataLen)
(37,dataLen = wcslen(data)
(38,fclose(pFile)
(39,100-dataLen > 1)
(40,)
(41,dataLen)
(42,100-dataLen)
(43,100)
(44,1)
(45,(int)
(46,)
(47,fgetws(data+dataLen, (int)
(48,funcPtr)
(49,if (pFile != NULL)
(50,)
(51,pFile)
(52,"")
(53,\\\'\\\\0\\\')
(54,data)
(55,"fgetws()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^