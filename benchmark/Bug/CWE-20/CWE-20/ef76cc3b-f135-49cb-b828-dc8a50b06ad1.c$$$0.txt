-----label-----
1
-----code-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_bad()
{
    unsigned int data;
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Use a random value */
        data = (unsigned int)RAND32();
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            ++data;
            unsigned int result = data;
            printUnsignedLine(result);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
39,40
39,41
39,42
40,41
41,42
42,43
44,45
45,46
45,47
47,48
47,49
49,50
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,37,43,46,48,51,55,57
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_bad(){    unsigned int data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
void
CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_bad()
CWE190_Integer_Overflow__unsigned_int_rand_preinc_13_bad
{    unsigned int data;    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }    if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }}
unsigned int data;
unsigned int data;
unsigned int
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Use a random value */        data = (unsigned int)RAND32();    }
data = (unsigned int)RAND32();
data = (unsigned int)RAND32()
data
data
(unsigned int)RAND32()
unsigned int
unsigned int

RAND32()
RAND32
RAND32
if(GLOBAL_CONST_FIVE==5)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            ++data;            unsigned int result = data;            printUnsignedLine(result);        }
++data;
++data
data
data
unsigned int result = data;
unsigned int result = data;
unsigned int
result = data
result
= data
data
data
printUnsignedLine(result);
printUnsignedLine(result)
printUnsignedLine
printUnsignedLine
result
result
-----joern-----
(21,7,0)
(0,14,0)
(23,21,0)
(1,28,0)
(29,8,0)
(11,4,0)
(12,25,0)
(17,16,0)
(2,0,0)
(10,5,0)
(5,27,0)
(15,14,0)
(9,28,0)
(21,23,0)
(3,8,0)
(18,10,0)
(26,28,0)
(21,5,0)
(5,21,0)
(22,25,0)
(13,5,0)
(19,16,0)
(25,28,0)
(10,14,0)
(14,24,0)
(7,21,0)
(8,14,0)
(8,5,0)
(8,25,0)
(6,4,0)
(0,8,0)
(10,25,0)
(0,2,1)
(8,5,1)
(23,13,1)
(19,4,1)
(10,18,1)
(4,6,1)
(3,29,1)
(16,17,1)
(11,25,1)
(6,11,1)
(0,8,1)
(19,5,1)
(10,5,1)
(21,7,1)
(20,0,1)
(21,23,1)
(18,16,1)
(29,10,1)
(13,4,1)
(5,21,1)
(20,16,1)
(12,22,1)
(17,19,1)
(25,12,1)
(2,8,1)
(8,25,1)
(10,25,1)
(8,3,1)
(0,16,2)
(5,21,2)
(13,4,2)
(2,16,2)
(18,16,2)
(29,16,2)
(10,5,2)
(21,23,2)
(0,8,2)
(3,16,2)
(8,16,2)
(5,4,2)
(21,4,2)
(10,16,2)
(8,5,2)
(8,25,2)
(21,7,2)
(10,25,2)
(23,4,2)
-----------------------------------
(0,printUnsignedLine(result)
(1,if(GLOBAL_CONST_FIVE==5)
(2,result)
(3,data)
(4,GLOBAL_CONST_FIVE==5)
(5,data = (unsigned int)
(6,5)
(7,unsigned int)
(8,result = data)
(9,if(GLOBAL_CONST_FIVE==5)
(10,++data)
(11,GLOBAL_CONST_FIVE)
(12,0)
(13,data)
(14,)
(15,result)
(16,GLOBAL_CONST_FIVE==5)
(17,5)
(18,data)
(19,GLOBAL_CONST_FIVE)
(20,RET)
(21,(unsigned int)
(22,data)
(23,RAND32()
(24,)
(25,data = 0)
(26,data)
(27,)
(28,)
(29,result)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^