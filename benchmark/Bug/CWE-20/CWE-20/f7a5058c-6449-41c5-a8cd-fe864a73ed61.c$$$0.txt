-----label-----
1
-----code-----
void CWE127_Buffer_Underread__malloc_char_memcpy_17_bad()
{
    int i;
    char * data;
    data = NULL;
    for(i = 0; i < 1; i++)
    {
        {
            char * dataBuffer = (char *)malloc(100*sizeof(char));
            if (dataBuffer == NULL) {exit(-1);}
            memset(dataBuffer, 'A', 100-1);
            dataBuffer[100-1] = '\0';
            /* FLAW: Set data pointer to before the allocated memory buffer */
            data = dataBuffer - 8;
        }
    }
    {
        char dest[100];
        memset(dest, 'C', 100-1); /* fill with 'C's */
        dest[100-1] = '\0'; /* null terminate */
        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */
        memcpy(dest, data, 100*sizeof(char));
        /* Ensure null termination */
        dest[100-1] = '\0';
        printLine(dest);
        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location
         * returned by malloc() so can't safely call free() on it */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
17,18
18,19
18,20
19,20
21,22
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
36,37
37,38
37,39
37,40
37,41
37,42
38,39
39,40
39,41
41,42
41,43
41,44
44,45
45,46
45,47
46,47
46,48
48,49
50,51
50,52
51,52
53,54
53,55
55,56
56,57
56,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
68,69
70,71
72,73
73,74
73,75
73,76
73,77
74,75
76,77
79,80
79,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
87,89
91,92
92,93
92,94
93,94
95,96
95,97
96,97
99,100
99,101
99,102
99,103
99,104
99,105
100,101
101,102
101,103
103,104
103,105
105,106
107,108
108,109
108,110
108,111
108,112
109,110
111,112
114,115
114,116
117,118
118,119
118,120
119,120
119,121
120,121
122,123
122,124
126,127
127,128
127,129
127,130
127,131
128,129
130,131
132,133
134,135
134,136
136,137
137,138
137,139
140,141
141,142
141,143
142,143
142,144
143,144
145,146
145,147
149,150
150,151
150,152
151,152
153,154
-----nextToken-----
2,4,8,10,13,15,16,20,22,27,28,31,32,35,40,42,43,47,49,52,54,57,58,62,64,69,71,75,77,78,80,81,86,88,89,90,94,97,98,102,104,106,110,112,113,115,116,121,123,124,125,129,131,133,135,138,139,144,146,147,148,152,154
-----computeFrom-----
18,19
18,20
25,26
25,27
29,30
29,31
53,54
53,55
60,61
60,62
79,80
79,81
83,84
83,85
87,88
87,89
92,93
92,94
95,96
95,97
114,115
114,116
118,119
118,120
122,123
122,124
134,135
134,136
141,142
141,143
145,146
145,147
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE127_Buffer_Underread__malloc_char_memcpy_17_bad(){    int i;    char * data;    data = NULL;    for(i = 0; i < 1; i++)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char dest[100];        memset(dest, 'C', 100-1); /* fill with 'C's */        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        memcpy(dest, data, 100*sizeof(char));        /* Ensure null termination */        dest[100-1] = '\0';        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
void
CWE127_Buffer_Underread__malloc_char_memcpy_17_bad()
CWE127_Buffer_Underread__malloc_char_memcpy_17_bad
{    int i;    char * data;    data = NULL;    for(i = 0; i < 1; i++)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }    {        char dest[100];        memset(dest, 'C', 100-1); /* fill with 'C's */        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        memcpy(dest, data, 100*sizeof(char));        /* Ensure null termination */        dest[100-1] = '\0';        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }}
int i;
int i;
int
i
i
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
for(i = 0; i < 1; i++)    {        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        {            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }    }
{            char * dataBuffer = (char *)malloc(100*sizeof(char));            if (dataBuffer == NULL) {exit(-1);}            memset(dataBuffer, 'A', 100-1);            dataBuffer[100-1] = '\0';            /* FLAW: Set data pointer to before the allocated memory buffer */            data = dataBuffer - 8;        }
char * dataBuffer = (char *)malloc(100*sizeof(char));
char * dataBuffer = (char *)malloc(100*sizeof(char));
char
* dataBuffer = (char *)malloc(100*sizeof(char))
*
dataBuffer
= (char *)malloc(100*sizeof(char))
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', 100-1);
memset(dataBuffer, 'A', 100-1)
memset
memset
dataBuffer
dataBuffer
'A'
100-1
100
1
dataBuffer[100-1] = '\0';
dataBuffer[100-1] = '\0'
dataBuffer[100-1]
dataBuffer
dataBuffer
100-1
100
1
'\0'
data = dataBuffer - 8;
data = dataBuffer - 8
data
data
dataBuffer - 8
dataBuffer
dataBuffer
8
{        char dest[100];        memset(dest, 'C', 100-1); /* fill with 'C's */        dest[100-1] = '\0'; /* null terminate */        /* POTENTIAL FLAW: Possibly copy from a memory location located before the source buffer */        memcpy(dest, data, 100*sizeof(char));        /* Ensure null termination */        dest[100-1] = '\0';        printLine(dest);        /* INCIDENTAL CWE-401: Memory Leak - data may not point to location         * returned by malloc() so can't safely call free() on it */    }
char dest[100];
char dest[100];
char
dest[100]
dest
[100]
100
memset(dest, 'C', 100-1);
memset(dest, 'C', 100-1)
memset
memset
dest
dest
'C'
100-1
100
1
dest[100-1] = '\0';
dest[100-1] = '\0'
dest[100-1]
dest
dest
100-1
100
1
'\0'
memcpy(dest, data, 100*sizeof(char));
memcpy(dest, data, 100*sizeof(char))
memcpy
memcpy
dest
dest
data
data
100*sizeof(char)
100
sizeof(char)
char
char

dest[100-1] = '\0';
dest[100-1] = '\0'
dest[100-1]
dest
dest
100-1
100
1
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(39,11,0)
(48,14,0)
(27,7,0)
(40,84,0)
(50,36,0)
(6,46,0)
(16,11,0)
(60,1,0)
(56,64,0)
(77,5,0)
(21,1,0)
(79,80,0)
(65,88,0)
(46,64,0)
(62,87,0)
(35,70,0)
(17,87,0)
(47,76,0)
(25,53,0)
(77,10,0)
(81,2,0)
(9,63,0)
(22,15,0)
(41,79,0)
(63,34,0)
(2,15,0)
(87,38,0)
(49,80,0)
(36,9,0)
(1,7,0)
(19,49,0)
(83,15,0)
(36,50,0)
(68,71,0)
(74,68,0)
(87,7,0)
(69,17,0)
(0,18,0)
(21,76,0)
(4,38,0)
(31,53,0)
(42,53,0)
(22,38,0)
(70,23,0)
(27,11,0)
(87,31,0)
(23,46,0)
(38,22,0)
(23,15,0)
(9,36,0)
(71,68,0)
(26,80,0)
(64,13,0)
(30,23,0)
(28,18,0)
(7,53,0)
(11,27,0)
(88,15,0)
(23,70,0)
(17,84,0)
(24,27,0)
(63,9,0)
(32,50,0)
(38,64,0)
(51,5,0)
(3,53,0)
(76,21,0)
(59,71,0)
(37,7,0)
(75,80,0)
(57,2,0)
(63,15,0)
(84,17,0)
(73,31,0)
(54,27,0)
(2,64,0)
(2,18,0)
(86,22,0)
(8,21,0)
(5,77,0)
(43,88,0)
(14,7,0)
(12,76,0)
(71,55,0)
(18,2,0)
(58,31,0)
(20,70,0)
(78,49,0)
(45,68,0)
(15,63,0)
(66,64,0)
(72,36,0)
(87,17,0)
(55,7,0)
(85,55,0)
(34,63,0)
(61,87,0)
(15,64,0)
(67,22,0)
(76,47,1)
(9,36,1)
(49,19,1)
(84,40,1)
(23,15,1)
(0,28,1)
(55,85,1)
(77,5,1)
(60,21,1)
(12,8,1)
(5,51,1)
(46,6,1)
(31,73,1)
(62,1,1)
(75,31,1)
(65,43,1)
(71,68,1)
(27,11,1)
(68,45,1)
(14,48,1)
(28,57,1)
(1,60,1)
(11,16,1)
(16,39,1)
(87,38,1)
(83,49,1)
(24,54,1)
(88,15,1)
(72,83,1)
(50,32,1)
(32,72,1)
(6,23,1)
(38,22,1)
(59,87,1)
(69,61,1)
(85,71,1)
(74,59,1)
(63,34,1)
(17,84,1)
(47,12,1)
(73,58,1)
(41,38,1)
(86,4,1)
(2,18,1)
(22,15,1)
(43,15,1)
(80,26,1)
(2,15,1)
(29,14,1)
(54,49,1)
(18,0,1)
(8,27,1)
(63,9,1)
(81,77,1)
(15,63,1)
(4,46,1)
(87,17,1)
(67,86,1)
(79,80,1)
(23,70,1)
(45,74,1)
(81,88,1)
(51,88,1)
(20,35,1)
(21,76,1)
(36,50,1)
(48,55,1)
(88,65,1)
(40,69,1)
(49,80,1)
(57,81,1)
(79,41,1)
(61,62,1)
(35,30,1)
(70,20,1)
(30,2,1)
(78,80,1)
(87,31,1)
(78,79,1)
(22,67,1)
(19,78,1)
(39,24,1)
(26,75,1)
(0,49,2)
(63,34,2)
(4,49,2)
(22,49,2)
(63,49,2)
(38,49,2)
(28,49,2)
(50,49,2)
(2,18,2)
(19,49,2)
(70,49,2)
(77,88,2)
(51,88,2)
(49,80,2)
(22,15,2)
(43,49,2)
(67,49,2)
(30,49,2)
(87,31,2)
(79,49,2)
(23,15,2)
(15,49,2)
(36,50,2)
(81,49,2)
(41,49,2)
(77,5,2)
(46,49,2)
(78,49,2)
(18,49,2)
(2,15,2)
(79,80,2)
(49,49,2)
(9,49,2)
(35,49,2)
(87,38,2)
(88,49,2)
(86,49,2)
(23,70,2)
(20,49,2)
(32,49,2)
(23,49,2)
(15,63,2)
(6,49,2)
(88,15,2)
(71,68,2)
(63,9,2)
(65,49,2)
(72,49,2)
(17,84,2)
(57,49,2)
(9,36,2)
(2,49,2)
(83,49,2)
(27,11,2)
(87,17,2)
(5,88,2)
(21,76,2)
(36,49,2)
(38,22,2)
-----------------------------------
(0,1)
(1,dest[100-1] = '\\\\0')
(2,memset(dataBuffer, \'A\', 100-1)
(3,i)
(4,data)
(5,-1)
(6,\'\\\\0\')
(7,)
(8,dest)
(9,malloc(100*sizeof(char)
(10,)
(11,100-1)
(12,100)
(13,)
(14,printLine(dest)
(15,* dataBuffer = (char *)
(16,1)
(17,100*sizeof(char)
(18,100-1)
(19,1)
(20,1)
(21,dest[100-1])
(22,dataBuffer - 8)
(23,dataBuffer[100-1])
(24,'C')
(25,for(i = 0; i < 1; i++)
(26,0)
(27,memset(dest, \'C\', 100-1)
(28,100)
(29,RET)
(30,dataBuffer)
(31,data = NULL)
(32,char)
(33,memset(dataBuffer, 'A', 100-1)
(34,char *)
(35,100)
(36,100*sizeof(char)
(37,dest)
(38,data = dataBuffer - 8)
(39,100)
(40,char)
(41,i)
(42,data)
(43,dataBuffer)
(44,'\\\\0')
(45,1)
(46,dataBuffer[100-1] = \'\\\\0\')
(47,1)
(48,dest)
(49,i < 1)
(50,sizeof(char)
(51,1)
(52,dataBuffer[100-1] = '\\\\0')
(53,)
(54,dest)
(55,dest[100-1] = '\\\\0')
(56,if (dataBuffer == NULL)
(57,\'A\')
(58,data)
(59,dest)
(60,'\\\\0')
(61,data)
(62,dest)
(63,(char *)
(64,)
(65,NULL)
(66,dataBuffer)
(67,8)
(68,100-1)
(69,100)
(70,100-1)
(71,dest[100-1])
(72,100)
(73,NULL)
(74,100)
(75,i)
(76,100-1)
(77,exit(-1)
(78,i)
(79,i++)
(80,i = 0)
(81,dataBuffer)
(82,'A')
(83,dataBuffer)
(84,sizeof(char)
(85,'\\\\0')
(86,dataBuffer)
(87,memcpy(dest, data, 100*sizeof(char)
(88,dataBuffer == NULL)
(89,memset(dest, 'C', 100-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^