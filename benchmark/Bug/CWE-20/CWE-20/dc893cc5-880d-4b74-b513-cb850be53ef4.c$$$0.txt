-----label-----
1
-----code-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_memcpy_41_badSink(wchar_t * data)
{
    {
        wchar_t dest[50] = L"";
        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */
        memcpy(dest, data, wcslen(data)*sizeof(wchar_t));
        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */
        printWLine(data);
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
11,14
11,15
11,16
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
22,25
22,26
23,24
25,26
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
36,37
36,38
39,40
40,41
40,42
41,42
41,43
42,43
44,45
44,46
48,49
49,50
49,51
50,51
52,53
54,55
55,56
55,57
56,57
58,59
-----nextToken-----
2,4,6,8,9,14,16,18,20,24,26,28,32,34,37,38,43,45,46,47,51,53,57,59
-----computeFrom-----
29,30
29,31
40,41
40,42
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_memcpy_41_badSink(wchar_t * data){    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        memcpy(dest, data, wcslen(data)*sizeof(wchar_t));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
void
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_memcpy_41_badSink(wchar_t * data)
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_memcpy_41_badSink
wchar_t * data
wchar_t
* data
*
data
{    {        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        memcpy(dest, data, wcslen(data)*sizeof(wchar_t));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }}
{        wchar_t dest[50] = L"";        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than dest */        memcpy(dest, data, wcslen(data)*sizeof(wchar_t));        dest[50-1] = L'\0'; /* Ensure the destination buffer is null terminated */        printWLine(data);        free(data);    }
wchar_t dest[50] = L"";
wchar_t dest[50] = L"";
wchar_t
dest[50] = L""
dest
[50]
50
= L""
L""
memcpy(dest, data, wcslen(data)*sizeof(wchar_t));
memcpy(dest, data, wcslen(data)*sizeof(wchar_t))
memcpy
memcpy
dest
dest
data
data
wcslen(data)*sizeof(wchar_t)
wcslen(data)
wcslen
wcslen
data
data
sizeof(wchar_t)
wchar_t
wchar_t

dest[50-1] = L'\0';
dest[50-1] = L'\0'
dest[50-1]
dest
dest
50-1
50
1
L'\0'
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(2,14,0)
(0,14,0)
(17,1,0)
(10,12,0)
(6,14,0)
(6,9,0)
(12,9,0)
(7,0,0)
(9,12,0)
(16,6,0)
(13,5,0)
(6,1,0)
(5,14,0)
(0,9,0)
(1,11,0)
(9,6,0)
(2,1,0)
(3,2,0)
(15,6,0)
(5,1,0)
(9,0,0)
(4,1,0)
(13,2,1)
(6,14,1)
(9,12,1)
(5,14,1)
(0,7,1)
(0,14,1)
(7,16,1)
(2,3,1)
(5,13,1)
(8,5,1)
(12,10,1)
(4,6,1)
(6,9,1)
(2,14,1)
(9,0,1)
(15,17,1)
(3,4,1)
(10,0,1)
(16,15,1)
(2,14,2)
(0,14,2)
(5,14,2)
(6,14,2)
(6,9,2)
(9,0,2)
(9,12,2)
-----------------------------------
(0,wcslen(data)
(1,)
(2,printWLine(data)
(3,data)
(4,\\\'\\\\0\\\')
(5,free(data)
(6,memcpy(dest, data, wcslen(data)
(7,data)
(8,RET)
(9,wcslen(data)
(10,wchar_t)
(11,)
(12,sizeof(wchar_t)
(13,data)
(14,wchar_t * data)
(15,dest)
(16,data)
(17,"")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^