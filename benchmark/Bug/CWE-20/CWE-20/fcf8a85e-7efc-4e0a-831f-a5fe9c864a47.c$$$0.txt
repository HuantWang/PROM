-----label-----
1
-----code-----
void CWE190_Integer_Overflow__short_fscanf_postinc_16_bad()
{
    short data;
    data = 0;
    while(1)
    {
        /* POTENTIAL FLAW: Use a value input from the console */
        fscanf (stdin, "%hd", &data);
        break;
    }
    while(1)
    {
        {
            /* POTENTIAL FLAW: Incrementing data could cause an overflow */
            data++;
            short result = data;
            printIntLine(result);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
30,31
30,32
32,33
32,34
33,34
33,35
33,36
34,35
35,36
36,37
38,39
39,40
39,41
41,42
41,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,29,31,37,40,42,45,49,51,52
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE190_Integer_Overflow__short_fscanf_postinc_16_bad(){    short data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }        break;    }}
void
CWE190_Integer_Overflow__short_fscanf_postinc_16_bad()
CWE190_Integer_Overflow__short_fscanf_postinc_16_bad
{    short data;    data = 0;    while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);        break;    }    while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }        break;    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);        break;    }
1
{        /* POTENTIAL FLAW: Use a value input from the console */        fscanf (stdin, "%hd", &data);        break;    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
break;
while(1)    {        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }        break;    }
1
{        {            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }        break;    }
{            /* POTENTIAL FLAW: Incrementing data could cause an overflow */            data++;            short result = data;            printIntLine(result);        }
data++;
data++
data
data
short result = data;
short result = data;
short
result = data
result
= data
data
data
printIntLine(result);
printIntLine(result)
printIntLine
printIntLine
result
result
break;
-----joern-----
(0,4,0)
(5,23,0)
(7,5,0)
(20,17,0)
(6,23,0)
(12,17,0)
(2,8,0)
(27,8,0)
(5,4,0)
(11,27,0)
(4,26,0)
(17,4,0)
(18,9,0)
(15,26,0)
(17,8,0)
(24,4,0)
(21,23,0)
(19,2,0)
(16,26,0)
(8,9,0)
(23,3,0)
(1,26,0)
(2,17,0)
(22,8,0)
(27,4,0)
(23,5,0)
(10,3,0)
(27,4,1)
(17,4,1)
(13,4,1)
(25,18,1)
(6,21,1)
(2,17,1)
(2,19,1)
(19,17,1)
(20,12,1)
(17,20,1)
(4,0,1)
(18,2,1)
(23,5,1)
(12,27,1)
(14,13,1)
(7,6,1)
(27,11,1)
(25,14,1)
(0,24,1)
(5,7,1)
(11,14,1)
(5,4,1)
(14,10,1)
(21,13,1)
(10,23,1)
(5,4,2)
(11,14,2)
(5,13,2)
(2,14,2)
(23,5,2)
(7,13,2)
(27,4,2)
(21,13,2)
(6,13,2)
(18,14,2)
(23,13,2)
(12,14,2)
(17,14,2)
(20,14,2)
(19,14,2)
(10,13,2)
(27,14,2)
(2,17,2)
(17,4,2)
-----------------------------------
(0,0)
(1,while(1)
(2,printIntLine(result)
(3,)
(4,data = 0)
(5,&data)
(6,"%hd")
(7,data)
(8,)
(9,)
(10,break;)
(11,data)
(12,result)
(13,1)
(14,1)
(15,data)
(16,while(1)
(17,result = data)
(18,break;)
(19,result)
(20,data)
(21,stdin)
(22,result)
(23,fscanf (stdin, "%hd", &data)
(24,data)
(25,RET)
(26,)
(27,data++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^