-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_execv_16_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    while(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
        break;
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* execv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECV(COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
81,82
81,83
82,83
83,84
83,85
85,86
85,87
85,88
85,89
89,90
90,91
90,92
90,93
90,94
91,92
93,94
95,96
97,98
99,100
100,101
100,102
100,103
101,102
103,104
105,106
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,80,84,86,87,88,92,94,96,98,102,104,106
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_execv_16_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_execv_16_bad()
CWE78_OS_Command_Injection__char_environment_w32_execv_16_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
EXECV(COMMAND_INT_PATH, args);
EXECV(COMMAND_INT_PATH, args)
EXECV
EXECV
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(18,16,0)
(27,20,0)
(5,25,0)
(38,25,0)
(16,17,0)
(32,45,0)
(16,18,0)
(28,4,0)
(28,30,0)
(38,28,0)
(12,8,0)
(29,18,0)
(27,13,0)
(11,4,0)
(6,45,0)
(24,43,0)
(2,22,0)
(31,45,0)
(3,18,0)
(45,6,0)
(36,13,0)
(35,30,0)
(7,27,0)
(37,27,0)
(10,4,0)
(25,8,0)
(33,8,0)
(1,17,0)
(44,6,0)
(18,25,0)
(20,4,0)
(16,26,0)
(9,1,0)
(22,17,0)
(42,17,0)
(34,4,0)
(40,38,0)
(45,25,0)
(6,16,0)
(21,28,0)
(13,20,0)
(17,8,0)
(17,1,0)
(23,28,0)
(16,6,0)
(15,16,0)
(41,22,0)
(46,8,0)
(8,43,0)
(30,4,0)
(39,30,0)
(19,20,0)
(18,28,0)
(25,38,0)
(25,38,1)
(18,25,1)
(16,6,1)
(18,28,1)
(37,13,1)
(14,27,1)
(3,29,1)
(27,7,1)
(32,31,1)
(31,44,1)
(17,1,1)
(38,40,1)
(16,17,1)
(23,21,1)
(38,28,1)
(1,9,1)
(45,32,1)
(0,28,1)
(5,0,1)
(36,0,1)
(13,36,1)
(39,35,1)
(24,16,1)
(16,18,1)
(22,17,1)
(28,23,1)
(45,25,1)
(24,22,1)
(9,42,1)
(27,13,1)
(44,15,1)
(21,30,1)
(28,30,1)
(15,18,1)
(18,3,1)
(22,2,1)
(6,45,1)
(7,37,1)
(30,39,1)
(42,25,1)
(2,41,1)
(41,17,1)
(29,22,1)
(36,24,1)
(40,5,1)
(18,22,2)
(16,17,2)
(42,0,2)
(17,0,2)
(3,22,2)
(45,22,2)
(29,22,2)
(28,30,2)
(17,1,2)
(6,45,2)
(1,0,2)
(22,17,2)
(9,0,2)
(16,18,2)
(16,22,2)
(32,22,2)
(18,25,2)
(31,22,2)
(44,22,2)
(2,0,2)
(38,28,2)
(24,0,2)
(16,6,2)
(6,22,2)
(5,0,2)
(38,0,2)
(41,0,2)
(40,0,2)
(22,0,2)
(25,0,2)
(18,28,2)
(27,13,2)
(25,38,2)
(45,25,2)
(15,22,2)
-----------------------------------
(0,1)
(1,GETENV(ENV_VARIABLE)
(2,NULL)
(3,dataLen)
(4,)
(5,dataLen)
(6,100-dataLen-1)
(7,args)
(8,)
(9,ENV_VARIABLE)
(10,while(1)
(11,data)
(12,environment)
(13,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(14,RET)
(15,environment)
(16,strncat(data+dataLen, environment, 100-dataLen-1)
(17,* environment = GETENV(ENV_VARIABLE)
(18,data+dataLen)
(19,args)
(20,)
(21,data)
(22,environment != NULL)
(23,dataBuffer)
(24,break;)
(25,dataLen = strlen(data)
(26,)
(27,EXECV(COMMAND_INT_PATH, args)
(28,data = dataBuffer)
(29,data)
(30,dataBuffer[100] = COMMAND_ARG2)
(31,dataLen)
(32,1)
(33,if (environment != NULL)
(34,dataBuffer)
(35,dataBuffer)
(36,args)
(37,COMMAND_INT_PATH)
(38,strlen(data)
(39,COMMAND_ARG2)
(40,data)
(41,environment)
(42,environment)
(43,)
(44,100)
(45,dataLen-1)
(46,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^