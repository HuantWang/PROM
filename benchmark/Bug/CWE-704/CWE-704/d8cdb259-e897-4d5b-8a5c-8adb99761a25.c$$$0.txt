-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_rand_to_short_01_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Set data to a random value */
    data = RAND32();
    {
        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
        short shortData = (short)data;
        printShortLine(shortData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
22,23
24,25
24,26
25,26
26,27
26,28
28,29
28,30
30,31
31,32
31,33
32,33
32,34
35,36
37,38
38,39
38,40
39,40
41,42
-----nextToken-----
2,4,8,10,14,16,20,23,27,29,33,34,36,40,42
-----computeFrom-----
12,13
12,14
18,19
18,20
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_rand_to_short_01_bad(){    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
void
CWE197_Numeric_Truncation_Error__int_rand_to_short_01_bad()
CWE197_Numeric_Truncation_Error__int_rand_to_short_01_bad
{    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(1,6,0)
(9,12,0)
(16,4,0)
(5,9,0)
(18,0,0)
(7,3,0)
(9,2,0)
(14,2,0)
(1,3,0)
(2,4,0)
(4,2,0)
(15,4,0)
(8,1,0)
(11,0,0)
(12,6,0)
(4,0,0)
(0,18,0)
(2,12,0)
(0,6,0)
(4,15,0)
(13,12,0)
(3,1,0)
(10,6,0)
(11,1,1)
(17,9,1)
(1,3,1)
(2,4,1)
(18,11,1)
(5,2,1)
(9,2,1)
(4,15,1)
(7,8,1)
(3,7,1)
(0,18,1)
(9,5,1)
(4,16,1)
(4,0,1)
(14,0,1)
(16,14,1)
(1,3,2)
(2,4,2)
(4,0,2)
(4,15,2)
(9,2,2)
(0,18,2)
-----------------------------------
(0,data = RAND32()
(1,data = -1)
(2,shortData = (short)
(3,-1)
(4,(short)
(5,shortData)
(6,)
(7,1)
(8,data)
(9,printShortLine(shortData)
(10,data)
(11,data)
(12,)
(13,shortData)
(14,shortData)
(15,short)
(16,data)
(17,RET)
(18,RAND32()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^