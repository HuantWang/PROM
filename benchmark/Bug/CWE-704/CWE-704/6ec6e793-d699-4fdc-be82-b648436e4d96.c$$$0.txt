-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__listen_socket_strncpy_21_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    badStatic = 1; /* true */
    data = badSource(data);
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
21,22
22,23
22,24
23,24
25,26
25,27
26,27
28,29
30,31
30,32
30,33
30,34
30,35
30,36
31,32
32,33
32,34
34,35
34,36
36,37
38,39
39,40
39,41
41,42
41,43
41,44
43,44
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
66,68
67,68
67,69
68,69
71,72
71,73
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,14,15,19,20,24,27,29,33,35,37,40,42,44,46,50,52,53,55,56,61,63,64,65,69,70,75,77,79,81,86,88,89,93,95
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
54,55
54,56
58,59
58,60
62,63
62,64
67,68
67,69
83,84
83,85
-----guardedBy-----
69,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__listen_socket_strncpy_21_bad(){    short data;    /* Initialize data */    data = 0;    badStatic = 1; /* true */    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__listen_socket_strncpy_21_bad()
CWE194_Unexpected_Sign_Extension__listen_socket_strncpy_21_bad
{    short data;    /* Initialize data */    data = 0;    badStatic = 1; /* true */    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(24,41,0)
(5,46,0)
(14,12,0)
(2,41,0)
(38,13,0)
(1,4,0)
(32,35,0)
(4,21,0)
(4,24,0)
(11,13,0)
(45,33,0)
(46,33,0)
(10,14,0)
(43,32,0)
(33,46,0)
(9,4,0)
(16,18,0)
(6,18,0)
(28,36,0)
(36,13,0)
(37,18,0)
(37,41,0)
(18,37,0)
(23,2,0)
(19,38,0)
(26,40,0)
(30,35,0)
(3,12,0)
(33,13,0)
(39,14,0)
(12,21,0)
(32,40,0)
(41,13,0)
(4,33,0)
(44,41,0)
(2,24,0)
(17,24,0)
(27,36,0)
(35,32,0)
(14,24,0)
(25,37,0)
(42,15,0)
(47,37,0)
(0,24,0)
(7,41,0)
(40,41,0)
(29,35,0)
(15,33,0)
(22,41,0)
(14,33,0)
(46,38,0)
(34,38,0)
(20,15,0)
(31,4,0)
(36,28,1)
(14,39,1)
(46,38,1)
(10,4,1)
(5,45,1)
(47,25,1)
(2,23,1)
(25,24,1)
(14,24,1)
(32,35,1)
(19,34,1)
(45,36,1)
(14,33,1)
(35,29,1)
(15,42,1)
(3,14,1)
(2,24,1)
(17,33,1)
(18,6,1)
(16,47,1)
(12,3,1)
(40,26,1)
(30,43,1)
(43,37,1)
(20,40,1)
(31,9,1)
(23,12,1)
(27,38,1)
(29,30,1)
(23,15,1)
(6,16,1)
(24,0,1)
(38,19,1)
(46,5,1)
(15,33,1)
(42,20,1)
(4,1,1)
(1,31,1)
(9,15,1)
(39,10,1)
(4,24,1)
(28,27,1)
(26,32,1)
(4,33,1)
(0,17,1)
(8,2,1)
(37,18,1)
(33,46,1)
(14,24,2)
(14,33,2)
(4,24,2)
(4,15,2)
(39,15,2)
(31,15,2)
(2,24,2)
(10,15,2)
(3,15,2)
(1,15,2)
(15,33,2)
(4,33,2)
(33,46,2)
(32,35,2)
(37,18,2)
(14,15,2)
(46,38,2)
(9,15,2)
(12,15,2)
-----------------------------------
(0,"")
(1,data)
(2,printLine(dest)
(3,\\\'\\\\0\\\')
(4,strncpy(dest, source, data)
(5,data)
(6,1)
(7,dest)
(8,RET)
(9,dest)
(10,dest)
(11,data)
(12,dest[data] = \\\'\\\\0\\\')
(13,)
(14,dest[data])
(15,data < 100)
(16,100)
(17,dest)
(18,100-1)
(19,0)
(20,data)
(21,)
(22,if (data < 100)
(23,dest)
(24,dest[100] = "")
(25,source)
(26,\\\'\\\\0\\\')
(27,badStatic)
(28,1)
(29,1)
(30,100)
(31,source)
(32,source[100-1])
(33,data = badSource(data)
(34,data)
(35,100-1)
(36,badStatic = 1)
(37,memset(source, \\\'A\\\', 100-1)
(38,data = 0)
(39,data)
(40,source[100-1] = \\\'\\\\0\\\')
(41,)
(42,100)
(43,source)
(44,source)
(45,data)
(46,badSource(data)
(47,\\\'A\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^