-----label-----
1
-----code-----
static short badSource(short data)
{
    if(badStatic)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
10,12
11,12
13,14
14,15
15,16
15,17
16,17
18,19
20,21
21,22
-----nextToken-----
2,4,6,8,12,17,19,22
-----computeFrom-----
15,16
15,17
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static short badSource(short data){    if(badStatic)    {        /* FLAW: Use a negative number */        data = -1;    }    return data;}
static short
badSource(short data)
badSource
short data
short
data
data
{    if(badStatic)    {        /* FLAW: Use a negative number */        data = -1;    }    return data;}
if(badStatic)    {        /* FLAW: Use a negative number */        data = -1;    }
badStatic
badStatic
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
return data;
data
data
-----joern-----
(4,6,0)
(6,4,0)
(9,7,0)
(10,6,0)
(3,9,0)
(4,0,0)
(1,4,0)
(2,7,0)
(4,8,0)
(9,0,0)
(9,4,0)
(11,9,0)
(3,5,1)
(6,10,1)
(1,5,1)
(4,0,1)
(9,0,1)
(9,3,1)
(10,1,1)
(3,4,1)
(4,6,1)
(9,4,1)
(11,9,1)
(4,5,2)
(6,5,2)
(1,5,2)
(9,4,2)
(9,0,2)
(11,9,2)
(4,0,2)
(4,6,2)
(10,5,2)
-----------------------------------
(0,short data)
(1,data)
(2,if(badStatic)
(3,data)
(4,data = -1)
(5,badStatic)
(6,-1)
(7,)
(8,)
(9,return data;)
(10,1)
(11,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^