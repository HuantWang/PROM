-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_03_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(5==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    {
        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
        short shortData = (short)data;
        printShortLine(shortData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
21,22
22,23
22,24
23,24
24,25
24,26
26,27
26,28
26,29
28,29
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
35,37
35,38
35,39
36,37
38,39
40,41
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
51,53
52,53
54,55
56,57
57,58
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
66,67
66,68
68,69
69,70
69,71
70,71
70,72
73,74
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,8,10,14,16,19,20,25,27,30,32,37,39,41,43,45,50,53,55,60,61,65,67,71,72,74,78,80
-----computeFrom-----
12,13
12,14
18,19
18,20
34,35
34,36
48,49
48,50
-----guardedBy-----
39,55
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_03_bad(){    int data;    /* Initialize data */    data = -1;    if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_short_03_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_short_03_bad
{    int data;    /* Initialize data */    data = -1;    if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
5==5
5
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(1,7,0)
(14,32,0)
(4,19,0)
(0,32,0)
(14,27,0)
(40,13,0)
(13,10,0)
(1,31,0)
(27,14,0)
(13,19,0)
(39,0,0)
(35,21,0)
(10,13,0)
(11,13,0)
(21,17,0)
(36,32,0)
(9,13,0)
(5,0,0)
(7,1,0)
(2,16,0)
(5,7,0)
(15,21,0)
(33,19,0)
(19,21,0)
(25,7,0)
(38,31,0)
(16,12,0)
(28,5,0)
(20,10,0)
(31,18,0)
(30,8,0)
(22,8,0)
(37,18,0)
(18,19,0)
(29,27,0)
(7,0,0)
(26,1,0)
(24,14,0)
(6,32,0)
(1,3,0)
(18,31,0)
(31,23,0)
(3,1,0)
(1,14,0)
(13,40,1)
(8,30,1)
(33,4,1)
(25,8,1)
(5,28,1)
(37,38,1)
(38,10,1)
(1,26,1)
(19,33,1)
(9,11,1)
(31,18,1)
(7,1,1)
(11,19,1)
(29,24,1)
(34,5,1)
(14,27,1)
(10,13,1)
(22,14,1)
(20,13,1)
(28,7,1)
(5,7,1)
(13,19,1)
(18,19,1)
(40,9,1)
(30,22,1)
(4,8,1)
(27,29,1)
(26,25,1)
(1,3,1)
(16,2,1)
(25,31,1)
(10,20,1)
(1,14,1)
(25,16,1)
(1,31,1)
(18,37,1)
(2,10,1)
(20,8,2)
(10,8,2)
(33,8,2)
(19,8,2)
(31,18,2)
(1,14,2)
(1,3,2)
(37,10,2)
(4,8,2)
(13,8,2)
(1,31,2)
(13,19,2)
(40,8,2)
(7,1,2)
(11,8,2)
(14,27,2)
(18,10,2)
(2,10,2)
(5,7,2)
(10,13,2)
(31,10,2)
(16,10,2)
(9,8,2)
(38,10,2)
(18,19,2)
-----------------------------------
(0,)
(1,(short)
(2,"fgets()
(3,short)
(4,inputBuffer)
(5,printShortLine(shortData)
(6,data)
(7,shortData = (short)
(8,5==5)
(9,CHAR_ARRAY_SIZE)
(10,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(11,inputBuffer)
(12,)
(13,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(14,data = -1)
(15,inputBuffer)
(16,printLine("fgets()
(17,)
(18,atoi(inputBuffer)
(19,inputBuffer[CHAR_ARRAY_SIZE] = "")
(20,NULL)
(21,)
(22,5)
(23,)
(24,data)
(25,shortData)
(26,data)
(27,-1)
(28,shortData)
(29,1)
(30,5)
(31,data = atoi(inputBuffer)
(32,)
(33,"")
(34,RET)
(35,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(36,if(5==5)
(37,inputBuffer)
(38,data)
(39,shortData)
(40,stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^