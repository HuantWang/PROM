-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_memcpy_17_bad()
{
    int i;
    short data;
    /* Initialize data */
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
22,23
23,24
23,25
24,25
27,28
27,29
28,29
31,32
32,33
34,35
35,36
36,37
36,38
36,39
36,40
37,38
39,40
42,43
43,44
45,46
45,47
45,48
45,49
45,50
45,51
46,47
47,48
47,49
49,50
49,51
51,52
53,54
54,55
54,56
56,57
56,58
56,59
58,59
60,61
62,63
63,64
63,65
63,66
63,67
64,65
66,67
69,70
69,71
72,73
73,74
73,75
74,75
74,76
75,76
77,78
77,79
81,82
81,83
82,83
82,84
83,84
86,87
86,88
87,88
88,89
88,90
88,91
88,92
89,90
91,92
93,94
95,96
97,98
98,99
98,100
99,100
99,101
100,101
102,103
105,106
106,107
106,108
107,108
109,110
-----nextToken-----
2,4,8,10,13,15,19,20,25,26,29,30,33,38,40,41,44,48,50,52,55,57,59,61,65,67,68,70,71,76,78,79,80,84,85,90,92,94,96,101,103,104,108,110
-----computeFrom-----
17,18
17,19
23,24
23,25
27,28
27,29
69,70
69,71
73,74
73,75
77,78
77,79
82,83
82,84
98,99
98,100
-----guardedBy-----
84,103
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_memcpy_17_bad(){    int i;    short data;    /* Initialize data */    data = 0;    for(i = 0; i < 1; i++)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_memcpy_17_bad()
CWE194_Unexpected_Sign_Extension__fscanf_memcpy_17_bad
{    int i;    short data;    /* Initialize data */    data = 0;    for(i = 0; i < 1; i++)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int i;
int i;
int
i
i
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(32,5,0)
(48,29,0)
(33,27,0)
(47,54,0)
(23,5,0)
(16,32,0)
(9,15,0)
(46,5,0)
(29,51,0)
(13,53,0)
(39,53,0)
(8,46,0)
(56,19,0)
(38,5,0)
(31,22,0)
(55,54,0)
(35,24,0)
(18,9,0)
(22,44,0)
(25,9,0)
(24,35,0)
(20,12,0)
(56,45,0)
(9,54,0)
(19,51,0)
(40,14,0)
(6,15,0)
(6,54,0)
(12,15,0)
(21,15,0)
(28,12,0)
(14,15,0)
(54,51,0)
(0,6,0)
(41,51,0)
(42,46,0)
(52,35,0)
(14,22,0)
(10,9,0)
(9,3,0)
(51,53,0)
(34,45,0)
(50,22,0)
(37,53,0)
(26,51,0)
(15,53,0)
(45,56,0)
(2,6,0)
(27,3,0)
(6,27,0)
(11,45,0)
(29,54,0)
(1,24,0)
(22,14,0)
(43,56,0)
(7,15,0)
(4,35,0)
(17,19,0)
(35,51,0)
(49,24,0)
(36,51,0)
(32,5,1)
(16,22,1)
(45,34,1)
(55,47,1)
(33,6,1)
(48,12,1)
(1,52,1)
(12,15,1)
(29,48,1)
(54,55,1)
(19,17,1)
(50,46,1)
(17,56,1)
(49,1,1)
(18,12,1)
(14,15,1)
(31,50,1)
(9,25,1)
(38,15,1)
(46,8,1)
(15,7,1)
(22,14,1)
(56,45,1)
(29,54,1)
(9,54,1)
(6,0,1)
(34,11,1)
(42,5,1)
(32,16,1)
(2,9,1)
(30,29,1)
(11,43,1)
(8,42,1)
(14,40,1)
(40,31,1)
(42,32,1)
(10,18,1)
(0,2,1)
(20,19,1)
(25,10,1)
(9,15,1)
(28,20,1)
(35,24,1)
(23,38,1)
(46,5,1)
(48,27,1)
(47,46,1)
(6,15,1)
(5,23,1)
(4,54,1)
(24,49,1)
(43,35,1)
(27,33,1)
(6,54,1)
(12,28,1)
(7,21,1)
(52,4,1)
(0,12,2)
(50,46,2)
(22,46,2)
(32,5,2)
(9,54,2)
(6,12,2)
(9,15,2)
(10,12,2)
(8,46,2)
(9,12,2)
(32,46,2)
(18,12,2)
(27,12,2)
(6,15,2)
(46,5,2)
(14,46,2)
(12,15,2)
(40,46,2)
(42,46,2)
(14,15,2)
(35,24,2)
(25,12,2)
(31,46,2)
(22,14,2)
(29,54,2)
(2,12,2)
(16,46,2)
(46,46,2)
(33,12,2)
(56,45,2)
(6,54,2)
-----------------------------------
(0,data)
(1,100)
(2,dest)
(3,)
(4,source)
(5,i = 0)
(6,dest[data])
(7,0)
(8,1)
(9,memcpy(dest, source, data)
(10,source)
(11,100)
(12,data < 100)
(13,i)
(14,&data)
(15,data = 0)
(16,i)
(17,\\\'\\\\0\\\')
(18,dest)
(19,source[100-1] = \\\'\\\\0\\\')
(20,data)
(21,data)
(22,fscanf (stdin, "%hd", &data)
(23,0)
(24,100-1)
(25,data)
(26,source)
(27,dest[data] = \\\'\\\\0\\\')
(28,100)
(29,printLine(dest)
(30,RET)
(31,"%hd")
(32,i++)
(33,\\\'\\\\0\\\')
(34,1)
(35,memset(source, \\\'A\\\', 100-1)
(36,dest)
(37,data)
(38,i)
(39,for(i = 0; i < 1; i++)
(40,data)
(41,if (data < 100)
(42,i)
(43,source)
(44,)
(45,100-1)
(46,i < 1)
(47,dest)
(48,dest)
(49,1)
(50,stdin)
(51,)
(52,\\\'A\\\')
(53,)
(54,dest[100] = "")
(55,"")
(56,source[100-1])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^