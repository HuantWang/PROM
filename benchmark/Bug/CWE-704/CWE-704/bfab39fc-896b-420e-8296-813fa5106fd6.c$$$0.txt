-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_large_to_char_03_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(5==5)
    {
        /* FLAW: Use a number larger than SHRT_MAX */
        data = SHRT_MAX + 5;
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
38,40
41,42
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,16,19,20,25,28,29,33,35,39,40,42,46,48
-----computeFrom-----
12,13
12,14
18,19
18,20
23,24
23,25
26,27
26,28
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_large_to_char_03_bad(){    int data;    /* Initialize data */    data = -1;    if(5==5)    {        /* FLAW: Use a number larger than SHRT_MAX */        data = SHRT_MAX + 5;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__int_large_to_char_03_bad()
CWE197_Numeric_Truncation_Error__int_large_to_char_03_bad
{    int data;    /* Initialize data */    data = -1;    if(5==5)    {        /* FLAW: Use a number larger than SHRT_MAX */        data = SHRT_MAX + 5;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(5==5)    {        /* FLAW: Use a number larger than SHRT_MAX */        data = SHRT_MAX + 5;    }
5==5
5
5
{        /* FLAW: Use a number larger than SHRT_MAX */        data = SHRT_MAX + 5;    }
data = SHRT_MAX + 5;
data = SHRT_MAX + 5
data
data
SHRT_MAX + 5
SHRT_MAX
SHRT_MAX
5
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(24,20,0)
(0,25,0)
(20,16,0)
(20,6,0)
(19,0,0)
(21,15,0)
(0,10,0)
(16,17,0)
(18,4,0)
(6,20,0)
(14,25,0)
(12,15,0)
(16,3,0)
(13,17,0)
(18,6,0)
(6,4,0)
(20,24,0)
(3,16,0)
(4,17,0)
(9,3,0)
(1,20,0)
(2,6,0)
(23,25,0)
(11,17,0)
(25,0,0)
(7,4,0)
(20,0,0)
(8,16,0)
(5,18,0)
(22,18,1)
(1,2,1)
(16,3,1)
(2,0,1)
(9,8,1)
(0,25,1)
(18,5,1)
(5,6,1)
(20,1,1)
(19,15,1)
(14,23,1)
(25,14,1)
(23,19,1)
(21,12,1)
(15,21,1)
(18,6,1)
(2,15,1)
(20,0,1)
(6,20,1)
(3,9,1)
(12,16,1)
(20,24,1)
(20,16,1)
(20,24,2)
(20,0,2)
(20,16,2)
(6,20,2)
(23,15,2)
(18,6,2)
(19,15,2)
(25,15,2)
(14,15,2)
(16,3,2)
(0,25,2)
(0,15,2)
-----------------------------------
(0,data = SHRT_MAX + 5)
(1,data)
(2,charData)
(3,-1)
(4,)
(5,charData)
(6,charData = (char)
(7,charData)
(8,data)
(9,1)
(10,)
(11,data)
(12,5)
(13,if(5==5)
(14,5)
(15,5==5)
(16,data = -1)
(17,)
(18,printHexCharLine(charData)
(19,data)
(20,(char)
(21,5)
(22,RET)
(23,SHRT_MAX)
(24,char)
(25,SHRT_MAX + 5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^