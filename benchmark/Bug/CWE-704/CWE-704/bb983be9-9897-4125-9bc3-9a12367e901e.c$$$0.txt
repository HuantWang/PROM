-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_17_bad()
{
    int i;
    int data;
    /* Initialize data */
    data = -1;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
22,26
23,24
24,25
24,26
25,26
28,29
28,30
29,30
32,33
33,34
35,36
36,37
37,38
37,39
37,40
37,41
38,39
40,41
43,44
44,45
46,47
46,48
46,49
46,50
46,51
46,52
47,48
48,49
48,50
50,51
50,52
52,53
54,55
55,56
55,57
57,58
57,59
57,60
59,60
61,62
63,64
64,65
64,66
64,67
64,68
65,66
67,68
70,71
70,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
78,80
82,83
82,84
83,84
83,85
84,85
87,88
87,89
88,89
89,90
89,91
89,92
89,93
90,91
92,93
94,95
96,97
98,99
99,100
99,101
100,101
100,102
101,102
103,104
106,107
107,108
107,109
108,109
110,111
-----nextToken-----
2,4,8,10,13,15,19,21,26,27,30,31,34,39,41,42,45,49,51,53,56,58,60,62,66,68,69,71,72,77,79,80,81,85,86,91,93,95,97,102,104,105,109,111
-----computeFrom-----
17,18
17,19
24,25
24,26
28,29
28,30
70,71
70,72
74,75
74,76
78,79
78,80
83,84
83,85
99,100
99,101
-----guardedBy-----
85,104
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_17_bad(){    int i;    int data;    /* Initialize data */    data = -1;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_17_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_17_bad
{    int i;    int data;    /* Initialize data */    data = -1;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int i;
int i;
int
i
i
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(7,29,0)
(15,38,0)
(24,44,0)
(36,16,0)
(17,33,0)
(22,44,0)
(5,30,0)
(23,19,0)
(7,19,0)
(32,0,0)
(39,14,0)
(29,7,0)
(31,34,0)
(40,37,0)
(14,50,0)
(27,29,0)
(48,23,0)
(1,50,0)
(25,23,0)
(52,42,0)
(19,26,0)
(50,14,0)
(56,0,0)
(45,19,0)
(12,19,0)
(49,33,0)
(30,44,0)
(2,26,0)
(54,7,0)
(3,5,0)
(34,42,0)
(38,0,0)
(47,57,0)
(8,50,0)
(23,53,0)
(29,43,0)
(10,26,0)
(4,26,0)
(18,42,0)
(41,5,0)
(5,19,0)
(23,30,0)
(37,0,0)
(11,14,0)
(55,44,0)
(22,30,0)
(21,23,0)
(35,30,0)
(51,44,0)
(5,57,0)
(33,19,0)
(42,34,0)
(50,44,0)
(28,45,0)
(9,30,0)
(13,29,0)
(34,16,0)
(46,38,0)
(6,22,0)
(44,26,0)
(16,44,0)
(57,53,0)
(19,45,0)
(31,50,1)
(23,48,1)
(28,12,1)
(1,30,1)
(29,7,1)
(34,42,1)
(0,56,1)
(42,52,1)
(38,0,1)
(16,36,1)
(46,0,1)
(38,15,1)
(33,49,1)
(54,27,1)
(32,19,1)
(56,32,1)
(8,1,1)
(6,33,1)
(18,31,1)
(35,9,1)
(9,38,1)
(50,14,1)
(5,19,1)
(47,5,1)
(46,37,1)
(14,11,1)
(25,21,1)
(57,47,1)
(37,40,1)
(37,0,1)
(20,22,1)
(23,30,1)
(7,19,1)
(23,19,1)
(49,17,1)
(19,45,1)
(36,34,1)
(30,35,1)
(15,46,1)
(33,19,1)
(22,6,1)
(21,33,1)
(7,54,1)
(3,41,1)
(39,8,1)
(48,25,1)
(40,29,1)
(45,28,1)
(17,16,1)
(5,3,1)
(6,57,1)
(27,13,1)
(11,39,1)
(5,30,1)
(13,38,1)
(52,18,1)
(41,23,1)
(22,30,1)
(38,38,2)
(7,19,2)
(54,38,2)
(5,33,2)
(23,30,2)
(19,45,2)
(29,7,2)
(23,19,2)
(48,33,2)
(23,33,2)
(50,14,2)
(29,38,2)
(46,38,2)
(3,33,2)
(22,30,2)
(38,0,2)
(37,38,2)
(7,38,2)
(34,42,2)
(5,30,2)
(15,38,2)
(47,33,2)
(27,38,2)
(25,33,2)
(37,0,2)
(13,38,2)
(21,33,2)
(57,33,2)
(33,19,2)
(5,19,2)
(41,33,2)
(40,38,2)
-----------------------------------
(0,i = 0)
(1,source)
(2,for(i = 0; i < 1; i++)
(3,data)
(4,i)
(5,dest[data])
(6,dest)
(7,&data)
(8,\\\'A\\\')
(9,dest)
(10,data)
(11,1)
(12,data)
(13,stdin)
(14,100-1)
(15,1)
(16,source[100-1] = \\\'\\\\0\\\')
(17,data)
(18,100)
(19,data = -1)
(20,RET)
(21,dest)
(22,printLine(dest)
(23,memcpy(dest, source, data)
(24,source)
(25,source)
(26,)
(27,"%d")
(28,1)
(29,fscanf(stdin, "%d", &data)
(30,dest[100] = "")
(31,source)
(32,i)
(33,data < 100)
(34,source[100-1])
(35,"")
(36,\\\'\\\\0\\\')
(37,i++)
(38,i < 1)
(39,100)
(40,i)
(41,dest)
(42,100-1)
(43,)
(44,)
(45,-1)
(46,i)
(47,\\\'\\\\0\\\')
(48,data)
(49,100)
(50,memset(source, \\\'A\\\', 100-1)
(51,if (data < 100)
(52,1)
(53,)
(54,data)
(55,dest)
(56,0)
(57,dest[data] = \\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^