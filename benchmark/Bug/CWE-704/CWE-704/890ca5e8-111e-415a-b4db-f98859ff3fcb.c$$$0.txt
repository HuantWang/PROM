-----label-----
1
-----code-----
static int badSource(int data)
{
    if(badStatic)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
10,12
11,12
13,14
14,15
15,16
15,17
16,17
18,19
20,21
21,22
-----nextToken-----
2,4,6,8,12,17,19,22
-----computeFrom-----
15,16
15,17
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static int badSource(int data){    if(badStatic)    {        /* FLAW: Use a negative number */        data = -1;    }    return data;}
static int
badSource(int data)
badSource
int data
int
data
data
{    if(badStatic)    {        /* FLAW: Use a negative number */        data = -1;    }    return data;}
if(badStatic)    {        /* FLAW: Use a negative number */        data = -1;    }
badStatic
badStatic
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
return data;
data
data
-----joern-----
(6,9,0)
(2,7,0)
(4,8,0)
(6,1,0)
(10,8,0)
(8,1,0)
(5,3,0)
(3,6,0)
(8,6,0)
(8,7,0)
(11,6,0)
(6,3,0)
(8,10,1)
(5,11,1)
(4,8,1)
(8,6,1)
(10,0,1)
(6,3,1)
(6,1,1)
(3,5,1)
(8,1,1)
(11,0,1)
(10,6,1)
(11,0,2)
(6,0,2)
(6,1,2)
(8,6,2)
(4,8,2)
(6,3,2)
(8,1,2)
(3,0,2)
(5,0,2)
-----------------------------------
(0,badStatic)
(1,int data)
(2,if(badStatic)
(3,-1)
(4,RET)
(5,1)
(6,data = -1)
(7,)
(8,return data;)
(9,)
(10,data)
(11,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^