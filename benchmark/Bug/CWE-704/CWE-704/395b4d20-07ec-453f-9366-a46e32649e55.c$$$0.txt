-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_03_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(5==5)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
28,32
28,33
28,34
29,30
30,31
30,32
32,33
32,34
34,35
36,37
37,38
37,39
39,40
39,41
39,42
41,42
43,44
45,46
46,47
46,48
46,49
46,50
47,48
49,50
52,53
52,54
55,56
56,57
56,58
57,58
57,59
58,59
60,61
60,62
64,65
64,66
65,66
65,67
66,67
69,70
69,71
70,71
71,72
71,73
71,74
71,75
72,73
74,75
76,77
78,79
80,81
81,82
81,83
82,83
82,84
83,84
85,86
88,89
89,90
89,91
90,91
92,93
-----nextToken-----
2,4,8,10,14,16,19,20,25,27,31,33,35,38,40,42,44,48,50,51,53,54,59,61,62,63,67,68,73,75,77,79,84,86,87,91,93
-----computeFrom-----
12,13
12,14
18,19
18,20
23,24
23,25
52,53
52,54
56,57
56,58
60,61
60,62
65,66
65,67
81,82
81,83
-----guardedBy-----
67,86
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_03_bad(){    int data;    /* Initialize data */    data = -1;    if(5==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_03_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_03_bad
{    int data;    /* Initialize data */    data = -1;    if(5==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(5==5)    {        /* FLAW: Use a negative number */        data = -1;    }
5==5
5
5
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(28,49,0)
(46,31,0)
(42,47,0)
(11,13,0)
(28,13,0)
(5,49,0)
(24,23,0)
(4,46,0)
(6,29,0)
(39,13,0)
(24,13,0)
(20,29,0)
(36,28,0)
(49,47,0)
(48,2,0)
(37,31,0)
(9,49,0)
(15,43,0)
(31,18,0)
(22,31,0)
(14,9,0)
(29,6,0)
(46,43,0)
(21,46,0)
(10,45,0)
(27,24,0)
(2,40,0)
(25,24,0)
(8,26,0)
(45,2,0)
(40,2,0)
(12,49,0)
(34,26,0)
(0,22,0)
(44,7,0)
(24,31,0)
(41,6,0)
(35,9,0)
(6,32,0)
(50,40,0)
(19,24,0)
(31,22,0)
(32,49,0)
(45,31,0)
(17,7,0)
(1,29,0)
(30,49,0)
(16,45,0)
(2,47,0)
(24,2,0)
(13,49,0)
(9,26,0)
(46,2,0)
(43,23,0)
(46,13,0)
(3,32,0)
(33,47,0)
(26,9,0)
(1,41,1)
(2,40,1)
(34,8,1)
(4,24,1)
(25,19,1)
(28,36,1)
(24,13,1)
(46,13,1)
(43,15,1)
(24,31,1)
(8,35,1)
(11,7,1)
(45,10,1)
(38,28,1)
(16,32,1)
(21,4,1)
(26,34,1)
(36,45,1)
(41,9,1)
(22,0,1)
(13,39,1)
(9,26,1)
(15,46,1)
(24,2,1)
(19,45,1)
(46,2,1)
(46,21,1)
(11,31,1)
(37,7,1)
(45,31,1)
(27,25,1)
(39,11,1)
(17,2,1)
(14,13,1)
(32,3,1)
(3,6,1)
(35,14,1)
(45,2,1)
(28,13,1)
(24,27,1)
(46,31,1)
(0,37,1)
(40,50,1)
(36,43,1)
(44,17,1)
(7,44,1)
(20,1,1)
(29,20,1)
(10,16,1)
(50,48,1)
(31,22,1)
(6,29,1)
(22,7,2)
(24,31,2)
(6,29,2)
(31,22,2)
(28,13,2)
(15,45,2)
(9,26,2)
(45,31,2)
(25,45,2)
(21,45,2)
(43,45,2)
(37,7,2)
(31,7,2)
(46,31,2)
(45,2,2)
(46,2,2)
(2,40,2)
(4,45,2)
(46,13,2)
(27,45,2)
(24,45,2)
(0,7,2)
(24,2,2)
(19,45,2)
(24,13,2)
(46,45,2)
-----------------------------------
(0,1)
(1,100)
(2,data = -1)
(3,\\\'\\\\0\\\')
(4,dest)
(5,dest)
(6,source[100-1])
(7,5==5)
(8,100)
(9,memset(source, \\\'A\\\', 100-1)
(10,100)
(11,dest)
(12,source)
(13,dest[100] = "")
(14,source)
(15,\\\'\\\\0\\\')
(16,data)
(17,5)
(18,)
(19,dest)
(20,1)
(21,data)
(22,-1)
(23,)
(24,strncpy(dest, source, data)
(25,source)
(26,100-1)
(27,data)
(28,printLine(dest)
(29,100-1)
(30,if (data < 100)
(31,data = -1)
(32,source[100-1] = \\\'\\\\0\\\')
(33,if(5==5)
(34,1)
(35,\\\'A\\\')
(36,dest)
(37,data)
(38,RET)
(39,"")
(40,-1)
(41,source)
(42,data)
(43,dest[data] = \\\'\\\\0\\\')
(44,5)
(45,data < 100)
(46,dest[data])
(47,)
(48,data)
(49,)
(50,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^