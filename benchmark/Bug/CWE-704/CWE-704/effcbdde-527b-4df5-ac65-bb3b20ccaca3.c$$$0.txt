-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_16_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    while(1)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
        break;
    }
    {
        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
        short shortData = (short)data;
        printShortLine(shortData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
19,21
20,21
20,22
21,22
22,23
22,24
24,25
24,26
24,27
26,27
27,28
29,30
31,32
31,33
31,34
32,33
32,34
33,34
33,35
33,36
33,37
34,35
36,37
38,39
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
61,62
61,63
62,63
63,64
63,65
65,66
65,67
67,68
68,69
68,70
69,70
69,71
72,73
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,8,10,14,16,18,23,25,28,30,35,37,39,41,43,48,51,53,58,59,60,64,66,70,71,73,77,79
-----computeFrom-----
12,13
12,14
32,33
32,34
46,47
46,48
-----guardedBy-----
37,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_16_bad(){    int data;    /* Initialize data */    data = -1;    while(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        break;    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_short_16_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_short_16_bad
{    int data;    /* Initialize data */    data = -1;    while(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        break;    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
while(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        break;    }
1
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        break;    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
break;
{        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(6,13,0)
(8,34,0)
(15,33,0)
(7,13,0)
(13,1,0)
(19,2,0)
(13,6,0)
(35,15,0)
(18,17,0)
(1,29,0)
(31,13,0)
(26,2,0)
(30,19,0)
(6,15,0)
(11,10,0)
(9,22,0)
(27,29,0)
(37,34,0)
(3,1,0)
(16,12,0)
(20,9,0)
(28,33,0)
(33,15,0)
(6,9,0)
(4,19,0)
(21,12,0)
(8,12,0)
(15,29,0)
(9,17,0)
(39,8,0)
(34,8,0)
(14,8,0)
(25,31,0)
(0,29,0)
(31,1,0)
(12,19,0)
(17,12,0)
(6,5,0)
(24,8,0)
(32,11,0)
(23,6,0)
(5,6,0)
(17,9,0)
(34,8,1)
(32,34,1)
(28,35,1)
(17,18,1)
(38,15,1)
(14,12,1)
(23,7,1)
(13,6,1)
(15,33,1)
(17,12,1)
(11,32,1)
(9,17,1)
(31,25,1)
(6,5,1)
(6,23,1)
(8,12,1)
(26,9,1)
(24,14,1)
(16,21,1)
(6,9,1)
(8,39,1)
(18,20,1)
(6,15,1)
(31,13,1)
(12,16,1)
(36,31,1)
(20,34,1)
(7,26,1)
(34,37,1)
(25,13,1)
(7,38,1)
(39,24,1)
(33,28,1)
(21,38,1)
(37,8,1)
(26,11,1)
(14,38,2)
(32,34,2)
(26,38,2)
(20,34,2)
(24,38,2)
(6,5,2)
(16,38,2)
(11,34,2)
(9,34,2)
(9,17,2)
(18,34,2)
(6,15,2)
(39,38,2)
(12,38,2)
(13,6,2)
(17,34,2)
(37,38,2)
(6,9,2)
(21,38,2)
(34,8,2)
(8,38,2)
(34,38,2)
(15,33,2)
(8,12,2)
(31,13,2)
(17,12,2)
-----------------------------------
(0,data)
(1,)
(2,)
(3,shortData)
(4,inputBuffer)
(5,short)
(6,(short)
(7,shortData)
(8,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(9,data = atoi(inputBuffer)
(10,)
(11,printLine("fgets()
(12,inputBuffer[CHAR_ARRAY_SIZE] = "")
(13,shortData = (short)
(14,inputBuffer)
(15,data = -1)
(16,"")
(17,atoi(inputBuffer)
(18,inputBuffer)
(19,)
(20,data)
(21,inputBuffer)
(22,)
(23,data)
(24,CHAR_ARRAY_SIZE)
(25,shortData)
(26,break;)
(27,while(1)
(28,1)
(29,)
(30,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(31,printShortLine(shortData)
(32,"fgets()
(33,-1)
(34,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(35,data)
(36,RET)
(37,NULL)
(38,1)
(39,stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^