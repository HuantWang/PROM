-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_02_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(1)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
20,21
20,22
21,22
22,23
22,24
24,25
24,26
24,27
26,27
27,28
29,30
31,32
31,33
31,34
32,33
32,34
33,34
33,35
33,36
33,37
34,35
36,37
38,39
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
60,61
60,62
61,62
62,63
62,64
64,65
64,66
66,67
67,68
67,69
68,69
68,70
71,72
73,74
74,75
74,76
75,76
77,78
-----nextToken-----
2,4,8,10,14,16,18,23,25,28,30,35,37,39,41,43,48,51,53,58,59,63,65,69,70,72,76,78
-----computeFrom-----
12,13
12,14
32,33
32,34
46,47
46,48
-----guardedBy-----
37,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_02_bad(){    int data;    /* Initialize data */    data = -1;    if(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_char_02_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_char_02_bad
{    int data;    /* Initialize data */    data = -1;    if(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
1
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(36,24,0)
(10,36,0)
(23,25,0)
(21,12,0)
(9,0,0)
(15,0,0)
(24,17,0)
(36,2,0)
(33,0,0)
(13,2,0)
(3,24,0)
(36,11,0)
(24,3,0)
(22,36,0)
(30,2,0)
(36,22,0)
(14,12,0)
(0,33,0)
(2,13,0)
(2,25,0)
(4,23,0)
(3,12,0)
(34,35,0)
(38,28,0)
(28,23,0)
(7,34,0)
(16,20,0)
(1,13,0)
(6,25,0)
(32,16,0)
(8,33,0)
(28,11,0)
(31,24,0)
(26,25,0)
(12,16,0)
(18,3,0)
(11,23,0)
(11,36,0)
(27,0,0)
(5,11,0)
(29,16,0)
(0,12,0)
(8,0,1)
(11,36,1)
(33,0,1)
(0,9,1)
(15,27,1)
(24,3,1)
(14,37,1)
(13,1,1)
(36,10,1)
(18,31,1)
(5,34,1)
(36,2,1)
(5,24,1)
(33,8,1)
(28,38,1)
(38,11,1)
(34,7,1)
(3,12,1)
(1,30,1)
(2,13,1)
(21,14,1)
(36,24,1)
(27,12,1)
(7,33,1)
(10,5,1)
(37,2,1)
(19,28,1)
(28,11,1)
(9,15,1)
(12,21,1)
(0,12,1)
(5,37,1)
(3,18,1)
(31,33,1)
(36,22,1)
(8,37,2)
(31,33,2)
(28,11,2)
(14,37,2)
(36,2,2)
(21,37,2)
(7,33,2)
(33,0,2)
(0,37,2)
(24,3,2)
(27,37,2)
(3,12,2)
(0,12,2)
(2,13,2)
(24,33,2)
(34,33,2)
(36,24,2)
(18,33,2)
(9,37,2)
(36,22,2)
(3,33,2)
(11,36,2)
(15,37,2)
(12,37,2)
(33,37,2)
-----------------------------------
(0,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(1,1)
(2,data = -1)
(3,atoi(inputBuffer)
(4,charData)
(5,charData)
(6,if(1)
(7,"fgets()
(8,NULL)
(9,stdin)
(10,data)
(11,charData = (char)
(12,inputBuffer[CHAR_ARRAY_SIZE] = "")
(13,-1)
(14,inputBuffer)
(15,CHAR_ARRAY_SIZE)
(16,)
(17,)
(18,inputBuffer)
(19,RET)
(20,)
(21,"")
(22,char)
(23,)
(24,data = atoi(inputBuffer)
(25,)
(26,data)
(27,inputBuffer)
(28,printHexCharLine(charData)
(29,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(30,data)
(31,data)
(32,inputBuffer)
(33,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(34,printLine("fgets()
(35,)
(36,(char)
(37,1)
(38,charData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^