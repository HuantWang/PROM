-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    switch(6)
    {
    case 6:
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
19,21
19,22
19,23
19,24
19,25
20,21
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
34,35
35,36
35,37
36,37
40,41
40,42
41,42
42,43
42,44
44,45
44,46
46,47
47,48
47,49
48,49
48,50
51,52
53,54
54,55
54,56
55,56
57,58
-----nextToken-----
2,4,8,10,14,16,18,21,25,27,28,31,32,33,37,38,39,43,45,49,50,52,56,58
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15_bad(){    int data;    /* Initialize data */    data = -1;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15_bad()
CWE197_Numeric_Truncation_Error__int_fscanf_to_char_15_bad
{    int data;    /* Initialize data */    data = -1;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
switch(6)    {    case 6:        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(3,23,0)
(5,16,0)
(2,20,0)
(23,16,0)
(20,0,0)
(23,26,0)
(1,26,0)
(21,27,0)
(14,27,0)
(22,0,0)
(11,27,0)
(13,21,0)
(26,18,0)
(4,27,0)
(6,27,0)
(24,27,0)
(7,18,0)
(10,18,0)
(9,24,0)
(26,16,0)
(25,0,0)
(18,0,0)
(16,28,0)
(17,28,0)
(24,25,0)
(25,24,0)
(8,25,0)
(0,28,0)
(18,10,0)
(0,20,0)
(18,26,0)
(29,24,0)
(15,28,0)
(8,9,1)
(18,10,1)
(7,1,1)
(23,26,1)
(19,23,1)
(18,0,1)
(9,29,1)
(12,0,1)
(4,21,1)
(0,20,1)
(1,4,1)
(18,7,1)
(11,24,1)
(1,11,1)
(2,22,1)
(20,2,1)
(3,26,1)
(26,18,1)
(23,3,1)
(24,25,1)
(21,13,1)
(25,8,1)
(13,12,1)
(25,0,1)
(29,12,1)
(4,12,2)
(23,26,2)
(25,12,2)
(21,12,2)
(25,0,2)
(24,12,2)
(13,12,2)
(29,12,2)
(18,10,2)
(24,25,2)
(11,12,2)
(9,12,2)
(26,18,2)
(18,0,2)
(8,12,2)
(0,20,2)
-----------------------------------
(0,data = -1)
(1,charData)
(2,1)
(3,charData)
(4,break;)
(5,charData)
(6,case 6:)
(7,data)
(8,data)
(9,"%d")
(10,char)
(11,break;)
(12,6)
(13,"Benign, fixed string")
(14,default:)
(15,switch(6)
(16,)
(17,data)
(18,(char)
(19,RET)
(20,-1)
(21,printLine("Benign, fixed string")
(22,data)
(23,printHexCharLine(charData)
(24,fscanf(stdin, "%d", &data)
(25,&data)
(26,charData = (char)
(27,)
(28,)
(29,stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^