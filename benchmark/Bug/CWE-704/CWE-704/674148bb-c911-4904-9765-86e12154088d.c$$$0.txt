-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_31_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    {
        int dataCopy = data;
        int data = dataCopy;
        {
            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
            short shortData = (short)data;
            printShortLine(shortData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
19,21
21,22
21,23
21,24
23,24
24,25
26,27
28,29
28,30
28,31
29,30
29,31
30,31
30,32
30,33
30,34
31,32
33,34
35,36
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
57,58
57,59
57,60
58,59
59,60
59,61
61,62
61,63
63,64
64,65
66,67
67,68
67,69
69,70
69,71
71,72
72,73
74,75
74,76
75,76
76,77
76,78
78,79
78,80
80,81
81,82
81,83
82,83
82,84
85,86
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,14,16,20,22,25,27,32,34,36,38,40,45,48,50,55,56,60,62,65,68,70,73,77,79,83,84,86,90,92
-----computeFrom-----
12,13
12,14
29,30
29,31
43,44
43,45
-----guardedBy-----
34,50
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_31_bad(){    int data;    /* Initialize data */    data = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_short_31_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_short_31_bad
{    int data;    /* Initialize data */    data = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }
int dataCopy = data;
int dataCopy = data;
int
dataCopy = data
dataCopy
= data
data
data
int data = dataCopy;
int data = dataCopy;
int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(0,1,0)
(12,36,0)
(21,26,0)
(39,21,0)
(32,13,0)
(27,16,0)
(37,2,0)
(20,41,0)
(13,16,0)
(18,13,0)
(24,21,0)
(23,24,0)
(24,5,0)
(31,11,0)
(2,7,0)
(19,7,0)
(36,42,0)
(36,24,0)
(9,38,0)
(1,41,0)
(17,21,0)
(30,2,0)
(21,11,0)
(14,42,0)
(13,32,0)
(6,11,0)
(25,2,0)
(15,40,0)
(40,4,0)
(26,16,0)
(22,26,0)
(2,1,0)
(34,15,0)
(35,42,0)
(24,36,0)
(43,1,0)
(29,14,0)
(3,40,0)
(11,26,0)
(7,2,0)
(33,41,0)
(28,32,0)
(11,40,0)
(5,24,0)
(11,13,0)
(14,36,0)
(40,15,0)
(15,1,0)
(8,9,0)
(42,26,0)
(44,26,0)
(41,16,0)
(12,21,1)
(23,12,1)
(37,1,1)
(10,14,1)
(6,31,1)
(15,34,1)
(31,9,1)
(1,43,1)
(31,40,1)
(21,39,1)
(32,28,1)
(39,17,1)
(3,7,1)
(30,25,1)
(9,8,1)
(19,2,1)
(17,11,1)
(40,15,1)
(24,5,1)
(15,1,1)
(11,40,1)
(11,13,1)
(29,36,1)
(36,24,1)
(7,2,1)
(0,13,1)
(34,3,1)
(14,29,1)
(24,21,1)
(7,19,1)
(24,23,1)
(13,32,1)
(2,30,1)
(14,36,1)
(25,37,1)
(8,7,1)
(21,11,1)
(2,1,1)
(28,18,1)
(11,6,1)
(43,0,1)
(15,7,2)
(2,1,2)
(11,13,2)
(24,5,2)
(15,1,2)
(13,32,2)
(9,7,2)
(24,21,2)
(7,2,2)
(34,7,2)
(8,7,2)
(3,7,2)
(40,15,2)
(21,11,2)
(14,36,2)
(36,24,2)
(11,40,2)
(40,7,2)
-----------------------------------
(0,inputBuffer)
(1,inputBuffer[CHAR_ARRAY_SIZE] = "")
(2,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(3,data)
(4,)
(5,short)
(6,data)
(7,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(8,"fgets()
(9,printLine("fgets()
(10,RET)
(11,dataCopy = data)
(12,shortData)
(13,data = -1)
(14,printShortLine(shortData)
(15,atoi(inputBuffer)
(16,)
(17,data)
(18,data)
(19,NULL)
(20,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(21,data = dataCopy)
(22,dataCopy)
(23,data)
(24,(short)
(25,CHAR_ARRAY_SIZE)
(26,)
(27,data)
(28,1)
(29,shortData)
(30,stdin)
(31,dataCopy)
(32,-1)
(33,inputBuffer)
(34,inputBuffer)
(35,shortData)
(36,shortData = (short)
(37,inputBuffer)
(38,)
(39,dataCopy)
(40,data = atoi(inputBuffer)
(41,)
(42,)
(43,"")
(44,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^