-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_03_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(5==5)
    {
        /* FLAW: Use a random value that could be less than 0 */
        data = (short)RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
32,35
32,36
32,37
32,38
33,34
34,35
34,36
36,37
36,38
38,39
40,41
41,42
41,43
43,44
43,45
43,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
68,70
69,70
69,71
70,71
73,74
73,75
74,75
75,76
75,77
75,78
75,79
76,77
78,79
80,81
82,83
84,85
85,86
85,87
86,87
86,88
87,88
89,90
92,93
93,94
93,95
94,95
96,97
-----nextToken-----
2,4,8,10,14,15,18,19,24,27,28,31,35,37,39,42,44,46,48,52,54,55,57,58,63,65,66,67,71,72,77,79,81,83,88,90,91,95,97
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
56,57
56,58
60,61
60,62
64,65
64,66
69,70
69,71
85,86
85,87
-----guardedBy-----
71,90
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_03_bad(){    short data;    /* Initialize data */    data = 0;    if(5==5)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__rand_strncpy_03_bad()
CWE194_Unexpected_Sign_Extension__rand_strncpy_03_bad
{    short data;    /* Initialize data */    data = 0;    if(5==5)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }
5==5
5
5
{        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(13,49,0)
(40,19,0)
(1,17,0)
(2,47,0)
(36,31,0)
(35,24,0)
(11,12,0)
(33,9,0)
(14,49,0)
(17,1,0)
(31,30,0)
(21,11,0)
(35,6,0)
(10,33,0)
(20,29,0)
(39,19,0)
(9,33,0)
(24,29,0)
(35,47,0)
(50,11,0)
(49,29,0)
(11,24,0)
(33,0,0)
(16,12,0)
(32,30,0)
(1,30,0)
(49,13,0)
(4,13,0)
(47,19,0)
(8,35,0)
(12,6,0)
(43,24,0)
(46,24,0)
(48,0,0)
(29,19,0)
(44,18,0)
(30,1,0)
(0,29,0)
(30,26,0)
(35,30,0)
(37,9,0)
(22,31,0)
(18,29,0)
(11,30,0)
(1,45,0)
(31,47,0)
(45,1,0)
(15,13,0)
(38,29,0)
(41,35,0)
(25,5,0)
(28,49,0)
(34,35,0)
(27,29,0)
(11,47,0)
(42,5,0)
(3,47,0)
(23,9,0)
(18,24,0)
(5,25,1)
(1,17,1)
(35,24,1)
(50,21,1)
(16,11,1)
(25,42,1)
(34,41,1)
(10,49,1)
(31,30,1)
(30,1,1)
(8,31,1)
(4,28,1)
(11,47,1)
(46,43,1)
(33,9,1)
(11,24,1)
(35,34,1)
(18,44,1)
(47,2,1)
(28,14,1)
(43,5,1)
(13,15,1)
(17,32,1)
(31,47,1)
(23,10,1)
(0,48,1)
(35,30,1)
(7,18,1)
(41,8,1)
(42,47,1)
(21,35,1)
(43,30,1)
(36,22,1)
(35,47,1)
(1,45,1)
(11,50,1)
(14,24,1)
(11,30,1)
(9,37,1)
(44,12,1)
(22,0,1)
(37,23,1)
(15,4,1)
(18,24,1)
(2,3,1)
(32,5,1)
(12,16,1)
(49,13,1)
(24,46,1)
(48,33,1)
(31,36,1)
(44,31,1)
(12,31,2)
(21,31,2)
(41,31,2)
(8,31,2)
(11,31,2)
(30,5,2)
(35,24,2)
(34,31,2)
(16,31,2)
(1,5,2)
(11,24,2)
(18,24,2)
(35,31,2)
(33,9,2)
(17,5,2)
(31,30,2)
(30,1,2)
(49,13,2)
(1,45,2)
(35,30,2)
(50,31,2)
(32,5,2)
(1,17,2)
(11,47,2)
(35,47,2)
(11,30,2)
(31,47,2)
-----------------------------------
(0,source[100-1] = \\\'\\\\0\\\')
(1,(short)
(2,0)
(3,data)
(4,100)
(5,5==5)
(6,)
(7,RET)
(8,dest)
(9,100-1)
(10,source)
(11,dest[data])
(12,dest[data] = \\\'\\\\0\\\')
(13,100-1)
(14,source)
(15,1)
(16,\\\'\\\\0\\\')
(17,RAND32()
(18,printLine(dest)
(19,)
(20,if (data < 100)
(21,dest)
(22,data)
(23,100)
(24,dest[100] = "")
(25,5)
(26,)
(27,dest)
(28,\\\'A\\\')
(29,)
(30,data = (short)
(31,data < 100)
(32,data)
(33,source[100-1])
(34,data)
(35,strncpy(dest, source, data)
(36,100)
(37,1)
(38,source)
(39,data)
(40,if(5==5)
(41,source)
(42,5)
(43,dest)
(44,dest)
(45,short)
(46,"")
(47,data = 0)
(48,\\\'\\\\0\\\')
(49,memset(source, \\\'A\\\', 100-1)
(50,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^