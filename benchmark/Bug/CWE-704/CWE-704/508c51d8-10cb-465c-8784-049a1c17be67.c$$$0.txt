-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_34_bad()
{
    int data;
    CWE197_Numeric_Truncation_Error__int_fgets_to_short_34_unionType myUnion;
    /* Initialize data */
    data = -1;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    myUnion.unionFirst = data;
    {
        int data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
            short shortData = (short)data;
            printShortLine(shortData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
23,24
23,25
24,25
25,26
25,27
27,28
27,29
27,30
29,30
30,31
32,33
34,35
34,36
34,37
35,36
35,37
36,37
36,38
36,39
36,40
37,38
39,40
41,42
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
63,64
64,65
64,66
65,66
65,67
66,67
69,70
71,72
71,73
72,73
73,74
73,75
75,76
75,77
77,78
78,79
78,80
79,80
82,83
82,84
83,84
84,85
84,86
86,87
86,88
88,89
89,90
89,91
90,91
90,92
93,94
95,96
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,8,10,14,16,20,22,26,28,31,33,38,40,42,44,46,51,54,56,61,62,67,68,70,74,76,80,81,85,87,91,92,94,98,100
-----computeFrom-----
18,19
18,20
35,36
35,37
49,50
49,51
64,65
64,66
-----guardedBy-----
40,56
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_34_bad(){    int data;    CWE197_Numeric_Truncation_Error__int_fgets_to_short_34_unionType myUnion;    /* Initialize data */    data = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_short_34_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_short_34_bad
{    int data;    CWE197_Numeric_Truncation_Error__int_fgets_to_short_34_unionType myUnion;    /* Initialize data */    data = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
int data;
int data;
int
data
data
CWE197_Numeric_Truncation_Error__int_fgets_to_short_34_unionType myUnion;
CWE197_Numeric_Truncation_Error__int_fgets_to_short_34_unionType myUnion;
CWE197_Numeric_Truncation_Error__int_fgets_to_short_34_unionType
CWE197_Numeric_Truncation_Error__int_fgets_to_short_34_unionType
myUnion
myUnion
data = -1;
data = -1
data
data
-1
1
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }
int data = myUnion.unionSecond;
int data = myUnion.unionSecond;
int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(15,30,0)
(42,45,0)
(4,19,0)
(32,36,0)
(26,45,0)
(27,18,0)
(9,27,0)
(18,39,0)
(46,29,0)
(15,12,0)
(2,18,0)
(44,47,0)
(6,3,0)
(25,46,0)
(41,31,0)
(3,22,0)
(45,27,0)
(18,24,0)
(43,47,0)
(23,19,0)
(48,44,0)
(19,44,0)
(48,31,0)
(27,31,0)
(36,30,0)
(22,3,0)
(21,19,0)
(31,11,0)
(24,18,0)
(35,19,0)
(1,15,0)
(5,39,0)
(36,22,0)
(12,5,0)
(16,3,0)
(13,47,0)
(0,44,0)
(34,39,0)
(33,30,0)
(10,22,0)
(28,12,0)
(20,23,0)
(30,36,0)
(8,39,0)
(40,24,0)
(19,23,0)
(27,39,0)
(31,48,0)
(47,39,0)
(37,36,0)
(36,37,0)
(30,12,0)
(22,5,0)
(17,44,0)
(7,48,0)
(14,5,0)
(16,10,1)
(48,7,1)
(36,22,1)
(22,3,1)
(0,17,1)
(32,33,1)
(18,24,1)
(48,44,1)
(36,32,1)
(26,31,1)
(44,0,1)
(1,30,1)
(17,18,1)
(25,23,1)
(38,15,1)
(15,30,1)
(27,31,1)
(31,48,1)
(23,20,1)
(45,42,1)
(19,21,1)
(41,23,1)
(15,1,1)
(3,6,1)
(33,22,1)
(40,2,1)
(21,4,1)
(35,44,1)
(30,36,1)
(4,35,1)
(42,26,1)
(19,44,1)
(7,41,1)
(46,25,1)
(24,40,1)
(6,16,1)
(9,45,1)
(27,18,1)
(27,9,1)
(23,19,1)
(36,37,1)
(10,27,1)
(20,19,1)
(26,46,1)
(36,37,2)
(18,24,2)
(31,48,2)
(27,31,2)
(22,3,2)
(41,23,2)
(25,23,2)
(30,36,2)
(36,22,2)
(48,23,2)
(7,23,2)
(27,18,2)
(31,23,2)
(23,19,2)
(15,30,2)
(48,44,2)
(19,44,2)
(46,23,2)
-----------------------------------
(0,"")
(1,shortData)
(2,data)
(3,myUnion.unionSecond)
(4,CHAR_ARRAY_SIZE)
(5,)
(6,unionSecond)
(7,inputBuffer)
(8,data)
(9,data)
(10,data)
(11,)
(12,)
(13,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(14,data)
(15,printShortLine(shortData)
(16,myUnion)
(17,inputBuffer)
(18,data = -1)
(19,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(20,NULL)
(21,stdin)
(22,data = myUnion.unionSecond)
(23,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(24,-1)
(25,"fgets()
(26,myUnion)
(27,myUnion.unionFirst = data)
(28,shortData)
(29,)
(30,shortData = (short)
(31,data = atoi(inputBuffer)
(32,data)
(33,shortData)
(34,myUnion)
(35,inputBuffer)
(36,(short)
(37,short)
(38,RET)
(39,)
(40,1)
(41,data)
(42,unionFirst)
(43,inputBuffer)
(44,inputBuffer[CHAR_ARRAY_SIZE] = "")
(45,myUnion.unionFirst)
(46,printLine("fgets()
(47,)
(48,atoi(inputBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^