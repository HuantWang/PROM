-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_66b_badSink(int dataArray[])
{
    /* copy data out of dataArray */
    int data = dataArray[2];
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
21,26
21,27
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
34,35
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
57,59
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,6,8,9,13,15,19,20,24,26,28,31,33,35,37,41,43,44,46,47,52,54,55,56,60,61,66,68,70,72,77,79,80,84,86
-----computeFrom-----
45,46
45,47
49,50
49,51
53,54
53,55
58,59
58,60
74,75
74,76
-----guardedBy-----
60,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_66b_badSink(int dataArray[]){    /* copy data out of dataArray */    int data = dataArray[2];    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_66b_badSink(int dataArray[])
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_66b_badSink
int dataArray[]
int
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    int data = dataArray[2];    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data = dataArray[2];
int data = dataArray[2];
int
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(20,15,0)
(27,4,0)
(14,2,0)
(23,5,0)
(19,36,0)
(32,4,0)
(40,33,0)
(21,24,0)
(9,24,0)
(2,29,0)
(7,28,0)
(0,39,0)
(24,30,0)
(6,39,0)
(17,33,0)
(36,13,0)
(16,13,0)
(42,2,0)
(18,28,0)
(4,32,0)
(13,24,0)
(4,24,0)
(28,5,0)
(11,32,0)
(29,25,0)
(38,13,0)
(3,20,0)
(41,24,0)
(34,4,0)
(33,5,0)
(1,29,0)
(37,26,0)
(33,13,0)
(28,15,0)
(25,24,0)
(5,26,0)
(43,30,0)
(26,5,0)
(12,28,0)
(28,13,0)
(31,32,0)
(36,24,0)
(35,25,0)
(5,30,0)
(22,26,0)
(39,5,0)
(29,2,0)
(33,20,0)
(26,8,0)
(4,32,1)
(38,5,1)
(36,13,1)
(33,17,1)
(2,42,1)
(17,40,1)
(28,5,1)
(39,0,1)
(22,23,1)
(33,13,1)
(34,13,1)
(36,19,1)
(42,14,1)
(32,31,1)
(10,36,1)
(0,6,1)
(6,25,1)
(35,29,1)
(28,12,1)
(20,3,1)
(28,13,1)
(12,18,1)
(13,16,1)
(33,5,1)
(29,2,1)
(14,1,1)
(39,5,1)
(11,27,1)
(5,26,1)
(26,37,1)
(19,39,1)
(1,4,1)
(27,34,1)
(31,11,1)
(26,8,1)
(3,33,1)
(25,35,1)
(40,28,1)
(7,39,1)
(18,7,1)
(16,38,1)
(37,22,1)
(19,20,1)
(28,39,2)
(26,8,2)
(3,39,2)
(29,2,2)
(7,39,2)
(28,5,2)
(39,5,2)
(33,13,2)
(18,39,2)
(12,39,2)
(4,32,2)
(17,39,2)
(5,26,2)
(33,39,2)
(36,13,2)
(20,39,2)
(28,13,2)
(40,39,2)
(33,5,2)
-----------------------------------
(0,100)
(1,source)
(2,100-1)
(3,\\\'\\\\0\\\')
(4,memset(source, \\\'A\\\', 100-1)
(5,data = dataArray[2])
(6,data)
(7,dest)
(8,int dataArray[])
(9,if (data < 100)
(10,RET)
(11,100)
(12,data)
(13,dest[100] = "")
(14,100)
(15,)
(16,"")
(17,data)
(18,source)
(19,dest)
(20,dest[data] = \\\'\\\\0\\\')
(21,source)
(22,dataArray)
(23,data)
(24,)
(25,source[100-1] = \\\'\\\\0\\\')
(26,dataArray[2])
(27,\\\'A\\\')
(28,memmove(dest, source, data)
(29,source[100-1])
(30,)
(31,1)
(32,100-1)
(33,dest[data])
(34,source)
(35,\\\'\\\\0\\\')
(36,printLine(dest)
(37,2)
(38,dest)
(39,data < 100)
(40,dest)
(41,dest)
(42,1)
(43,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^