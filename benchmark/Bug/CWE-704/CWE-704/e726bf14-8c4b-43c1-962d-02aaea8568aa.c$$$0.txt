-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_02_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(1)
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
29,30
29,31
29,32
29,33
29,34
29,35
30,31
31,32
31,33
33,34
33,35
35,36
37,38
38,39
38,40
40,41
40,42
40,43
42,43
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
53,55
56,57
57,58
57,59
58,59
58,60
59,60
61,62
61,63
65,66
65,67
66,67
66,68
67,68
70,71
70,72
71,72
72,73
72,74
72,75
72,76
73,74
75,76
77,78
79,80
81,82
82,83
82,84
83,84
83,85
84,85
86,87
89,90
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,32,34,36,39,41,43,45,49,51,52,54,55,60,62,63,64,68,69,74,76,78,80,85,87,88,92,94
-----computeFrom-----
12,13
12,14
53,54
53,55
57,58
57,59
61,62
61,63
66,67
66,68
82,83
82,84
-----guardedBy-----
68,87
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_02_bad(){    short data;    /* Initialize data */    data = 0;    if(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_memmove_02_bad()
CWE194_Unexpected_Sign_Extension__fscanf_memmove_02_bad
{    short data;    /* Initialize data */    data = 0;    if(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
1
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(26,48,0)
(42,25,0)
(16,4,0)
(46,4,0)
(37,5,0)
(23,37,0)
(10,44,0)
(35,46,0)
(20,9,0)
(12,27,0)
(0,40,0)
(47,48,0)
(13,25,0)
(39,4,0)
(7,46,0)
(43,37,0)
(34,3,0)
(1,20,0)
(15,10,0)
(38,27,0)
(30,21,0)
(5,14,0)
(28,46,0)
(18,9,0)
(27,38,0)
(27,45,0)
(37,9,0)
(38,40,0)
(40,25,0)
(29,27,0)
(21,40,0)
(21,9,0)
(21,14,0)
(19,5,0)
(36,44,0)
(41,21,0)
(17,40,0)
(46,7,0)
(2,10,0)
(24,7,0)
(44,10,0)
(3,4,0)
(48,40,0)
(8,4,0)
(44,3,0)
(31,7,0)
(4,25,0)
(32,21,0)
(11,38,0)
(20,4,0)
(9,4,0)
(6,9,0)
(37,40,0)
(6,33,1)
(6,27,1)
(9,18,1)
(23,21,1)
(36,46,1)
(37,40,1)
(44,10,1)
(11,12,1)
(48,26,1)
(26,47,1)
(32,41,1)
(48,40,1)
(21,32,1)
(2,15,1)
(21,40,1)
(1,5,1)
(43,23,1)
(10,2,1)
(37,9,1)
(28,9,1)
(29,33,1)
(35,28,1)
(37,43,1)
(1,48,1)
(0,17,1)
(20,9,1)
(47,3,1)
(12,29,1)
(19,37,1)
(34,44,1)
(31,35,1)
(41,30,1)
(27,38,1)
(38,11,1)
(3,34,1)
(22,20,1)
(21,9,1)
(30,48,1)
(20,1,1)
(38,40,1)
(24,31,1)
(7,24,1)
(15,36,1)
(5,19,1)
(46,7,1)
(18,6,1)
(33,40,1)
(40,0,1)
(37,40,2)
(48,40,2)
(27,38,2)
(11,33,2)
(38,40,2)
(5,48,2)
(21,40,2)
(32,48,2)
(20,9,2)
(23,48,2)
(46,7,2)
(12,33,2)
(19,48,2)
(37,48,2)
(29,33,2)
(41,48,2)
(30,48,2)
(21,9,2)
(38,33,2)
(21,48,2)
(43,48,2)
(37,9,2)
(44,10,2)
(27,33,2)
-----------------------------------
(0,0)
(1,dest)
(2,1)
(3,source[100-1] = \\\'\\\\0\\\')
(4,)
(5,dest[data] = \\\'\\\\0\\\')
(6,dest)
(7,100-1)
(8,dest)
(9,dest[100] = "")
(10,100-1)
(11,data)
(12,"%hd")
(13,data)
(14,)
(15,100)
(16,if (data < 100)
(17,data)
(18,"")
(19,\\\'\\\\0\\\')
(20,printLine(dest)
(21,memmove(dest, source, data)
(22,RET)
(23,dest)
(24,1)
(25,)
(26,100)
(27,fscanf (stdin, "%hd", &data)
(28,source)
(29,stdin)
(30,dest)
(31,100)
(32,data)
(33,1)
(34,\\\'\\\\0\\\')
(35,\\\'A\\\')
(36,source)
(37,dest[data])
(38,&data)
(39,source)
(40,data = 0)
(41,source)
(42,if(1)
(43,data)
(44,source[100-1])
(45,)
(46,memset(source, \\\'A\\\', 100-1)
(47,data)
(48,data < 100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^