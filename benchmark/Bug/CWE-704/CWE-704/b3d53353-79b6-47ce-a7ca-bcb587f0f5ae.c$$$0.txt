-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_67b_badSink(CWE194_Unexpected_Sign_Extension__fscanf_strncpy_67_structType myStruct)
{
    short data = myStruct.structFirst;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
21,26
21,27
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
34,35
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
57,59
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,7,9,13,15,19,20,24,26,28,31,33,35,37,41,43,44,46,47,52,54,55,56,60,61,66,68,70,72,77,79,80,84,86
-----computeFrom-----
45,46
45,47
49,50
49,51
53,54
53,55
58,59
58,60
74,75
74,76
-----guardedBy-----
60,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_67b_badSink(CWE194_Unexpected_Sign_Extension__fscanf_strncpy_67_structType myStruct){    short data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_67b_badSink(CWE194_Unexpected_Sign_Extension__fscanf_strncpy_67_structType myStruct)
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_67b_badSink
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_67_structType myStruct
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_67_structType
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_67_structType
myStruct
myStruct
{    short data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data = myStruct.structFirst;
short data = myStruct.structFirst;
short
data = myStruct.structFirst
data
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(7,38,0)
(23,3,0)
(40,3,0)
(36,15,0)
(24,10,0)
(12,40,0)
(30,39,0)
(8,40,0)
(31,12,0)
(13,41,0)
(9,38,0)
(6,34,0)
(39,19,0)
(10,41,0)
(18,19,0)
(34,19,0)
(0,11,0)
(3,2,0)
(4,8,0)
(5,8,0)
(16,9,0)
(22,11,0)
(27,11,0)
(39,9,0)
(34,36,0)
(37,12,0)
(28,9,0)
(21,12,0)
(34,40,0)
(3,40,0)
(43,22,0)
(25,34,0)
(19,9,0)
(33,24,0)
(32,24,0)
(35,22,0)
(42,10,0)
(12,15,0)
(12,19,0)
(26,19,0)
(41,9,0)
(29,3,0)
(11,9,0)
(17,40,0)
(11,22,0)
(10,24,0)
(20,9,0)
(1,36,0)
(40,38,0)
(1,34,1)
(10,24,1)
(3,2,1)
(37,21,1)
(5,41,1)
(43,0,1)
(8,40,1)
(18,40,1)
(8,4,1)
(12,37,1)
(34,40,1)
(33,32,1)
(4,5,1)
(6,25,1)
(11,22,1)
(35,43,1)
(31,8,1)
(22,35,1)
(34,6,1)
(23,17,1)
(39,30,1)
(39,19,1)
(36,1,1)
(25,12,1)
(41,13,1)
(14,39,1)
(0,27,1)
(24,33,1)
(27,19,1)
(42,11,1)
(40,3,1)
(12,19,1)
(29,23,1)
(30,36,1)
(34,19,1)
(32,42,1)
(21,31,1)
(13,10,1)
(3,29,1)
(12,40,1)
(26,18,1)
(30,8,1)
(19,26,1)
(34,8,2)
(6,8,2)
(39,19,2)
(34,40,2)
(34,19,2)
(3,2,2)
(12,8,2)
(36,8,2)
(21,8,2)
(12,40,2)
(31,8,2)
(25,8,2)
(8,40,2)
(12,19,2)
(10,24,2)
(37,8,2)
(40,3,2)
(11,22,2)
(1,8,2)
-----------------------------------
(0,\\\'A\\\')
(1,\\\'\\\\0\\\')
(2,CWE194_Unexpected_Sign_Extension__fscanf_strncpy_67_structType myStruct)
(3,myStruct.structFirst)
(4,100)
(5,data)
(6,data)
(7,data)
(8,data < 100)
(9,)
(10,source[100-1])
(11,memset(source, \\\'A\\\', 100-1)
(12,strncpy(dest, source, data)
(13,\\\'\\\\0\\\')
(14,RET)
(15,)
(16,source)
(17,data)
(18,dest)
(19,dest[100] = "")
(20,dest)
(21,source)
(22,100-1)
(23,myStruct)
(24,100-1)
(25,dest)
(26,"")
(27,source)
(28,if (data < 100)
(29,structFirst)
(30,dest)
(31,dest)
(32,100)
(33,1)
(34,dest[data])
(35,1)
(36,dest[data] = \\\'\\\\0\\\')
(37,data)
(38,)
(39,printLine(dest)
(40,data = myStruct.structFirst)
(41,source[100-1] = \\\'\\\\0\\\')
(42,source)
(43,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^