-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_16_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    while(1)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
        break;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
19,21
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,16,18,23,25,26,29,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_16_bad(){    int data;    /* Initialize data */    data = -1;    while(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_16_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_16_bad
{    int data;    /* Initialize data */    data = -1;    while(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
while(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    }
1
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
break;
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(41,7,0)
(44,13,0)
(27,4,0)
(7,4,0)
(15,20,0)
(21,20,0)
(40,36,0)
(35,14,0)
(6,34,0)
(36,31,0)
(40,4,0)
(32,15,0)
(24,47,0)
(1,36,0)
(28,7,0)
(10,19,0)
(8,31,0)
(7,10,0)
(14,35,0)
(4,36,0)
(20,15,0)
(15,36,0)
(13,47,0)
(2,31,0)
(49,4,0)
(3,35,0)
(27,13,0)
(5,27,0)
(14,13,0)
(0,10,0)
(39,36,0)
(29,15,0)
(25,38,0)
(25,1,0)
(26,4,0)
(33,1,0)
(50,14,0)
(22,40,0)
(9,27,0)
(12,34,0)
(43,38,0)
(38,25,0)
(16,36,0)
(17,38,0)
(18,20,0)
(13,31,0)
(11,35,0)
(30,27,0)
(37,25,0)
(7,13,0)
(27,19,0)
(35,48,0)
(34,13,0)
(23,48,0)
(45,36,0)
(47,13,0)
(11,3,1)
(4,49,1)
(34,6,1)
(5,34,1)
(28,41,1)
(50,11,1)
(26,46,1)
(1,33,1)
(35,14,1)
(25,38,1)
(42,40,1)
(32,4,1)
(38,17,1)
(14,13,1)
(22,10,1)
(40,4,1)
(14,50,1)
(7,4,1)
(0,7,1)
(26,23,1)
(34,13,1)
(43,37,1)
(7,13,1)
(23,35,1)
(12,1,1)
(17,43,1)
(27,13,1)
(15,20,1)
(37,15,1)
(47,24,1)
(27,4,1)
(40,22,1)
(41,27,1)
(46,13,1)
(18,21,1)
(3,46,1)
(29,32,1)
(24,44,1)
(10,0,1)
(30,9,1)
(7,28,1)
(22,34,1)
(20,18,1)
(33,25,1)
(13,47,1)
(9,5,1)
(21,29,1)
(6,12,1)
(27,30,1)
(49,26,1)
(5,34,2)
(30,34,2)
(3,46,2)
(27,34,2)
(35,46,2)
(7,4,2)
(0,34,2)
(27,13,2)
(7,34,2)
(27,4,2)
(50,46,2)
(9,34,2)
(14,13,2)
(13,47,2)
(28,34,2)
(23,46,2)
(40,4,2)
(34,13,2)
(14,46,2)
(7,13,2)
(25,38,2)
(11,46,2)
(15,20,2)
(41,34,2)
(10,34,2)
(35,14,2)
-----------------------------------
(0,\\\'\\\\0\\\')
(1,source[100-1] = \\\'\\\\0\\\')
(2,data)
(3,stdin)
(4,dest[100] = "")
(5,dest)
(6,100)
(7,dest[data])
(8,while(1)
(9,source)
(10,dest[data] = \\\'\\\\0\\\')
(11,"%d")
(12,data)
(13,data = -1)
(14,&data)
(15,memset(source, \\\'A\\\', 100-1)
(16,source)
(17,1)
(18,1)
(19,)
(20,100-1)
(21,100)
(22,dest)
(23,break;)
(24,1)
(25,source[100-1])
(26,dest)
(27,memcpy(dest, source, data)
(28,data)
(29,\\\'A\\\')
(30,data)
(31,)
(32,source)
(33,\\\'\\\\0\\\')
(34,data < 100)
(35,fscanf(stdin, "%d", &data)
(36,)
(37,source)
(38,100-1)
(39,dest)
(40,printLine(dest)
(41,dest)
(42,RET)
(43,100)
(44,data)
(45,if (data < 100)
(46,1)
(47,-1)
(48,)
(49,"")
(50,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^