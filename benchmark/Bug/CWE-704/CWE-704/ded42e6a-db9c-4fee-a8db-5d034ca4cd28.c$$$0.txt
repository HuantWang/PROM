-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_02_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(1)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
30,33
30,34
30,35
30,36
31,32
32,33
32,34
34,35
34,36
36,37
38,39
39,40
39,41
41,42
41,43
41,44
43,44
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
66,68
67,68
67,69
68,69
71,72
71,73
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,14,16,18,23,25,26,29,33,35,37,40,42,44,46,50,52,53,55,56,61,63,64,65,69,70,75,77,79,81,86,88,89,93,95
-----computeFrom-----
12,13
12,14
54,55
54,56
58,59
58,60
62,63
62,64
67,68
67,69
83,84
83,85
-----guardedBy-----
69,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_02_bad(){    int data;    /* Initialize data */    data = -1;    if(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_02_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_02_bad
{    int data;    /* Initialize data */    data = -1;    if(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
1
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(16,27,0)
(19,29,0)
(15,29,0)
(9,33,0)
(31,35,0)
(38,20,0)
(20,38,0)
(7,17,0)
(2,39,0)
(12,20,0)
(11,9,0)
(9,30,0)
(24,38,0)
(41,39,0)
(42,19,0)
(10,46,0)
(26,18,0)
(44,33,0)
(39,43,0)
(30,9,0)
(0,28,0)
(3,33,0)
(19,46,0)
(49,29,0)
(34,30,0)
(48,19,0)
(8,7,0)
(32,9,0)
(36,23,0)
(37,21,0)
(18,29,0)
(39,46,0)
(13,46,0)
(47,30,0)
(33,28,0)
(35,46,0)
(7,23,0)
(14,49,0)
(22,33,0)
(35,33,0)
(38,21,0)
(5,28,0)
(23,7,0)
(19,27,0)
(45,20,0)
(27,43,0)
(39,29,0)
(6,18,0)
(23,29,0)
(1,7,0)
(21,33,0)
(46,33,0)
(25,39,0)
(29,49,0)
(29,28,0)
(25,2,1)
(16,19,1)
(27,16,1)
(48,39,1)
(8,4,1)
(4,29,1)
(26,21,1)
(42,48,1)
(36,1,1)
(9,30,1)
(14,15,1)
(45,12,1)
(47,34,1)
(31,27,1)
(10,4,1)
(19,46,1)
(32,46,1)
(13,10,1)
(18,6,1)
(23,29,1)
(18,29,1)
(35,46,1)
(29,49,1)
(12,24,1)
(23,36,1)
(1,8,1)
(7,23,1)
(2,41,1)
(37,38,1)
(21,37,1)
(10,7,1)
(6,26,1)
(20,45,1)
(40,35,1)
(31,18,1)
(39,29,1)
(34,11,1)
(30,47,1)
(19,42,1)
(39,25,1)
(11,32,1)
(41,18,1)
(38,20,1)
(46,13,1)
(39,46,1)
(49,14,1)
(19,29,1)
(24,9,1)
(35,31,1)
(38,20,2)
(1,4,2)
(7,23,2)
(36,4,2)
(18,29,2)
(8,4,2)
(7,4,2)
(39,18,2)
(42,18,2)
(35,46,2)
(23,29,2)
(19,18,2)
(39,29,2)
(23,4,2)
(25,18,2)
(19,46,2)
(48,18,2)
(27,18,2)
(9,30,2)
(41,18,2)
(39,46,2)
(16,18,2)
(19,29,2)
(29,49,2)
(2,18,2)
-----------------------------------
(0,if(1)
(1,"%d")
(2,source)
(3,dest)
(4,1)
(5,data)
(6,100)
(7,fscanf(stdin, "%d", &data)
(8,stdin)
(9,memset(source, \\\'A\\\', 100-1)
(10,dest)
(11,\\\'A\\\')
(12,100)
(13,"")
(14,1)
(15,data)
(16,\\\'\\\\0\\\')
(17,)
(18,data < 100)
(19,dest[data])
(20,100-1)
(21,source[100-1] = \\\'\\\\0\\\')
(22,if (data < 100)
(23,&data)
(24,source)
(25,data)
(26,data)
(27,dest[data] = \\\'\\\\0\\\')
(28,)
(29,data = -1)
(30,100-1)
(31,dest)
(32,source)
(33,)
(34,100)
(35,printLine(dest)
(36,data)
(37,\\\'\\\\0\\\')
(38,source[100-1])
(39,strncpy(dest, source, data)
(40,RET)
(41,dest)
(42,data)
(43,)
(44,source)
(45,1)
(46,dest[100] = "")
(47,1)
(48,dest)
(49,-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^