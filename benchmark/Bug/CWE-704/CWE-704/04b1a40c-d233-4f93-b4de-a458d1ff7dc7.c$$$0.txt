-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_rand_to_char_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = -1;
    {
        int data = *dataPtr1;
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
            char charData = (char)data;
            printHexCharLine(charData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
35,36
37,38
37,39
37,40
38,39
39,40
39,41
41,42
41,43
43,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
52,53
54,55
55,56
55,57
56,57
57,58
59,60
61,62
61,63
62,63
63,64
63,65
65,66
65,67
67,68
68,69
69,70
71,72
71,73
72,73
73,74
73,75
75,76
75,77
77,78
78,79
78,80
79,80
79,81
82,83
84,85
85,86
85,87
86,87
88,89
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,36,40,42,46,50,53,58,60,64,66,70,74,76,80,81,83,87,89
-----computeFrom-----
32,33
32,34
48,49
48,50
55,56
55,57
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_rand_to_char_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_rand_to_char_32_bad()
CWE197_Numeric_Truncation_Error__int_rand_to_char_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = -1;
data = -1
data
data
-1
1
{        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(39,6,0)
(10,33,0)
(5,33,0)
(0,41,0)
(18,41,0)
(25,2,0)
(19,26,0)
(36,6,0)
(41,0,0)
(12,38,0)
(24,15,0)
(38,8,0)
(42,10,0)
(22,10,0)
(20,7,0)
(35,41,0)
(33,1,0)
(26,3,0)
(35,15,0)
(4,0,0)
(22,12,0)
(17,38,0)
(11,35,0)
(29,1,0)
(12,1,0)
(30,44,0)
(15,26,0)
(10,22,0)
(23,8,0)
(34,2,0)
(31,3,0)
(15,3,0)
(27,31,0)
(7,10,0)
(16,6,0)
(37,8,0)
(2,25,0)
(44,31,0)
(9,22,0)
(7,33,0)
(22,40,0)
(44,41,0)
(38,12,0)
(41,6,0)
(13,25,0)
(8,23,0)
(31,44,0)
(40,22,0)
(43,26,0)
(32,23,0)
(26,43,0)
(14,3,0)
(1,6,0)
(25,6,0)
(21,12,0)
(3,6,0)
(8,6,0)
(35,41,1)
(8,23,1)
(0,4,1)
(17,21,1)
(15,24,1)
(23,32,1)
(21,15,1)
(20,10,1)
(38,17,1)
(44,41,1)
(22,40,1)
(34,13,1)
(30,27,1)
(19,31,1)
(24,35,1)
(2,34,1)
(9,42,1)
(12,38,1)
(28,7,1)
(26,43,1)
(41,0,1)
(37,41,1)
(38,8,1)
(35,11,1)
(42,12,1)
(10,22,1)
(43,19,1)
(31,44,1)
(7,10,1)
(32,37,1)
(25,2,1)
(4,18,1)
(27,25,1)
(13,8,1)
(44,30,1)
(22,9,1)
(22,12,1)
(7,20,1)
(11,26,1)
(15,26,1)
(41,0,2)
(22,12,2)
(7,10,2)
(10,22,2)
(26,43,2)
(25,2,2)
(38,8,2)
(44,41,2)
(15,26,2)
(35,41,2)
(8,23,2)
(31,44,2)
(22,40,2)
(12,38,2)
-----------------------------------
(0,&data)
(1,)
(2,-1)
(3,)
(4,data)
(5,charData)
(6,)
(7,printHexCharLine(charData)
(8,*dataPtr2 = &data)
(9,data)
(10,charData = (char)
(11,dataPtr1)
(12,data = *dataPtr2)
(13,data)
(14,data)
(15,*dataPtr1 = data)
(16,dataPtr1)
(17,dataPtr2)
(18,dataPtr1)
(19,data)
(20,charData)
(21,data)
(22,(char)
(23,&data)
(24,data)
(25,data = -1)
(26,data = RAND32()
(27,data)
(28,RET)
(29,data)
(30,dataPtr1)
(31,data = *dataPtr1)
(32,data)
(33,)
(34,1)
(35,*dataPtr1)
(36,data)
(37,dataPtr2)
(38,*dataPtr2)
(39,dataPtr2)
(40,char)
(41,*dataPtr1 = &data)
(42,charData)
(43,RAND32()
(44,*dataPtr1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^