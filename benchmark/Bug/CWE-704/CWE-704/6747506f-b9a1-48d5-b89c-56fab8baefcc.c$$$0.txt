-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_16_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    while(1)
    {
        /* FLAW: Use a negative number */
        data = -1;
        break;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
19,21
20,21
21,22
21,23
22,23
24,25
27,28
27,29
27,30
27,31
27,32
27,33
28,29
29,30
29,31
31,32
31,33
33,34
35,36
36,37
36,38
38,39
38,40
38,41
40,41
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
63,65
64,65
64,66
65,66
68,69
68,70
69,70
70,71
70,72
70,73
70,74
71,72
73,74
75,76
77,78
79,80
80,81
80,82
81,82
81,83
82,83
84,85
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,14,16,18,23,25,26,30,32,34,37,39,41,43,47,49,50,52,53,58,60,61,62,66,67,72,74,76,78,83,85,86,90,92
-----computeFrom-----
12,13
12,14
21,22
21,23
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
80,81
80,82
-----guardedBy-----
66,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_16_bad(){    int data;    /* Initialize data */    data = -1;    while(1)    {        /* FLAW: Use a negative number */        data = -1;        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_16_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_16_bad
{    int data;    /* Initialize data */    data = -1;    while(1)    {        /* FLAW: Use a negative number */        data = -1;        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
while(1)    {        /* FLAW: Use a negative number */        data = -1;        break;    }
1
{        /* FLAW: Use a negative number */        data = -1;        break;    }
data = -1;
data = -1
data
data
-1
1
break;
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(31,33,0)
(9,6,0)
(11,4,0)
(22,6,0)
(3,7,0)
(10,12,0)
(4,38,0)
(15,22,0)
(30,12,0)
(22,4,0)
(9,33,0)
(28,30,0)
(0,2,0)
(5,6,0)
(32,16,0)
(30,16,0)
(29,9,0)
(23,43,0)
(35,6,0)
(20,22,0)
(46,7,0)
(33,2,0)
(42,9,0)
(8,12,0)
(19,30,0)
(7,46,0)
(1,21,0)
(21,16,0)
(49,41,0)
(39,46,0)
(46,13,0)
(48,25,0)
(43,6,0)
(43,33,0)
(18,7,0)
(12,30,0)
(6,41,0)
(6,5,0)
(21,25,0)
(40,2,0)
(17,16,0)
(47,43,0)
(9,25,0)
(36,25,0)
(16,2,0)
(27,16,0)
(22,25,0)
(26,33,0)
(9,38,0)
(37,26,0)
(22,33,0)
(14,9,0)
(24,5,0)
(25,16,0)
(33,26,0)
(13,16,0)
(34,13,0)
(28,19,1)
(23,47,1)
(46,7,1)
(9,29,1)
(7,18,1)
(1,43,1)
(42,14,1)
(9,6,1)
(3,39,1)
(36,44,1)
(9,33,1)
(33,26,1)
(43,6,1)
(15,9,1)
(21,1,1)
(43,23,1)
(10,8,1)
(22,20,1)
(26,37,1)
(8,28,1)
(39,30,1)
(37,31,1)
(22,6,1)
(21,25,1)
(44,33,1)
(34,46,1)
(22,25,1)
(13,34,1)
(36,49,1)
(45,21,1)
(12,10,1)
(48,36,1)
(4,11,1)
(9,25,1)
(5,24,1)
(35,44,1)
(18,3,1)
(25,48,1)
(1,4,1)
(29,42,1)
(43,33,1)
(6,5,1)
(24,35,1)
(47,13,1)
(30,12,1)
(22,33,1)
(11,22,1)
(14,43,1)
(20,15,1)
(49,6,1)
(19,25,1)
(11,43,2)
(49,44,2)
(21,25,2)
(46,7,2)
(22,43,2)
(20,43,2)
(6,5,2)
(29,43,2)
(9,6,2)
(9,25,2)
(24,44,2)
(14,43,2)
(4,43,2)
(43,6,2)
(5,44,2)
(9,33,2)
(30,12,2)
(9,43,2)
(22,33,2)
(35,44,2)
(22,25,2)
(43,33,2)
(6,44,2)
(15,43,2)
(42,43,2)
(33,26,2)
(22,6,2)
-----------------------------------
(0,while(1)
(1,dest)
(2,)
(3,100)
(4,dest[data] = \\\'\\\\0\\\')
(5,-1)
(6,data = -1)
(7,100-1)
(8,100)
(9,strncpy(dest, source, data)
(10,1)
(11,\\\'\\\\0\\\')
(12,100-1)
(13,source[100-1] = \\\'\\\\0\\\')
(14,dest)
(15,dest)
(16,)
(17,source)
(18,1)
(19,source)
(20,data)
(21,printLine(dest)
(22,dest[data])
(23,100)
(24,1)
(25,dest[100] = "")
(26,-1)
(27,dest)
(28,\\\'A\\\')
(29,data)
(30,memset(source, \\\'A\\\', 100-1)
(31,data)
(32,if (data < 100)
(33,data = -1)
(34,\\\'\\\\0\\\')
(35,data)
(36,dest)
(37,1)
(38,)
(39,source)
(40,data)
(41,)
(42,source)
(43,data < 100)
(44,1)
(45,RET)
(46,source[100-1])
(47,data)
(48,"")
(49,break;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^