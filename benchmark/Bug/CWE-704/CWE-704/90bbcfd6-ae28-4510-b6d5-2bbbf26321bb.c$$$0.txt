-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_03_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(5==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
32,35
32,36
32,37
32,38
33,34
34,35
34,36
36,37
36,38
38,39
40,41
41,42
41,43
43,44
43,45
43,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
68,70
69,70
69,71
70,71
73,74
73,75
74,75
75,76
75,77
75,78
75,79
76,77
78,79
80,81
82,83
84,85
85,86
85,87
86,87
86,88
87,88
89,90
92,93
93,94
93,95
94,95
96,97
-----nextToken-----
2,4,8,10,14,16,19,20,25,27,28,31,35,37,39,42,44,46,48,52,54,55,57,58,63,65,66,67,71,72,77,79,81,83,88,90,91,95,97
-----computeFrom-----
12,13
12,14
18,19
18,20
56,57
56,58
60,61
60,62
64,65
64,66
69,70
69,71
85,86
85,87
-----guardedBy-----
71,90
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_03_bad(){    int data;    /* Initialize data */    data = -1;    if(5==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_03_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_03_bad
{    int data;    /* Initialize data */    data = -1;    if(5==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(5==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
5==5
5
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(39,32,0)
(1,31,0)
(46,48,0)
(31,3,0)
(4,35,0)
(18,5,0)
(25,50,0)
(43,46,0)
(13,3,0)
(20,50,0)
(40,29,0)
(5,3,0)
(47,32,0)
(26,39,0)
(12,15,0)
(25,16,0)
(41,0,0)
(3,48,0)
(30,17,0)
(16,25,0)
(33,25,0)
(10,17,0)
(29,12,0)
(22,33,0)
(51,35,0)
(48,50,0)
(43,35,0)
(17,36,0)
(35,43,0)
(9,12,0)
(32,39,0)
(2,12,0)
(44,43,0)
(17,3,0)
(39,48,0)
(0,36,0)
(7,48,0)
(29,25,0)
(11,5,0)
(5,25,0)
(49,48,0)
(34,25,0)
(24,16,0)
(21,37,0)
(27,37,0)
(31,48,0)
(12,29,0)
(38,33,0)
(28,46,0)
(5,0,0)
(19,39,0)
(23,17,0)
(42,3,0)
(6,50,0)
(8,48,0)
(17,25,0)
(45,32,0)
(32,45,1)
(1,33,1)
(24,34,1)
(17,3,1)
(38,46,1)
(27,21,1)
(2,9,1)
(13,42,1)
(26,19,1)
(40,2,1)
(9,37,1)
(31,1,1)
(33,25,1)
(30,23,1)
(46,28,1)
(33,22,1)
(21,25,1)
(42,37,1)
(35,4,1)
(29,40,1)
(25,16,1)
(43,35,1)
(17,25,1)
(1,0,1)
(51,44,1)
(22,38,1)
(14,31,1)
(41,5,1)
(28,43,1)
(37,27,1)
(11,17,1)
(39,32,1)
(10,33,1)
(16,24,1)
(3,13,1)
(47,26,1)
(5,18,1)
(12,29,1)
(17,30,1)
(42,12,1)
(5,25,1)
(18,11,1)
(5,3,1)
(19,3,1)
(29,25,1)
(45,47,1)
(44,39,1)
(4,51,1)
(0,41,1)
(23,10,1)
(31,3,1)
(5,3,2)
(23,33,2)
(40,37,2)
(11,33,2)
(33,25,2)
(12,29,2)
(29,25,2)
(30,33,2)
(39,32,2)
(9,37,2)
(17,3,2)
(10,33,2)
(12,37,2)
(43,35,2)
(17,25,2)
(2,37,2)
(41,33,2)
(25,16,2)
(31,3,2)
(17,33,2)
(18,33,2)
(0,33,2)
(5,25,2)
(29,37,2)
(5,33,2)
-----------------------------------
(0,dest[data] = \\\'\\\\0\\\')
(1,dest)
(2,"%d")
(3,dest[100] = "")
(4,1)
(5,dest[data])
(6,data)
(7,if (data < 100)
(8,dest)
(9,stdin)
(10,dest)
(11,dest)
(12,fscanf(stdin, "%d", &data)
(13,"")
(14,RET)
(15,)
(16,-1)
(17,strncpy(dest, source, data)
(18,data)
(19,source)
(20,if(5==5)
(21,5)
(22,100)
(23,source)
(24,1)
(25,data = -1)
(26,\\\'A\\\')
(27,5)
(28,\\\'\\\\0\\\')
(29,&data)
(30,data)
(31,printLine(dest)
(32,100-1)
(33,data < 100)
(34,data)
(35,100-1)
(36,)
(37,5==5)
(38,data)
(39,memset(source, \\\'A\\\', 100-1)
(40,data)
(41,\\\'\\\\0\\\')
(42,dest)
(43,source[100-1])
(44,source)
(45,1)
(46,source[100-1] = \\\'\\\\0\\\')
(47,100)
(48,)
(49,source)
(50,)
(51,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^