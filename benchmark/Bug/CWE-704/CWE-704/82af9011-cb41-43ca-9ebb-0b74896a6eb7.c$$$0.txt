-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_memcpy_02_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(1)
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
29,30
29,31
29,32
29,33
29,34
29,35
30,31
31,32
31,33
33,34
33,35
35,36
37,38
38,39
38,40
40,41
40,42
40,43
42,43
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
53,55
56,57
57,58
57,59
58,59
58,60
59,60
61,62
61,63
65,66
65,67
66,67
66,68
67,68
70,71
70,72
71,72
72,73
72,74
72,75
72,76
73,74
75,76
77,78
79,80
81,82
82,83
82,84
83,84
83,85
84,85
86,87
89,90
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,32,34,36,39,41,43,45,49,51,52,54,55,60,62,63,64,68,69,74,76,78,80,85,87,88,92,94
-----computeFrom-----
12,13
12,14
53,54
53,55
57,58
57,59
61,62
61,63
66,67
66,68
82,83
82,84
-----guardedBy-----
68,87
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_memcpy_02_bad(){    short data;    /* Initialize data */    data = 0;    if(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_memcpy_02_bad()
CWE194_Unexpected_Sign_Extension__fscanf_memcpy_02_bad
{    short data;    /* Initialize data */    data = 0;    if(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
1
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(9,46,0)
(15,41,0)
(41,48,0)
(35,21,0)
(27,44,0)
(46,10,0)
(42,10,0)
(17,10,0)
(12,35,0)
(10,25,0)
(11,20,0)
(43,44,0)
(4,44,0)
(48,17,0)
(5,16,0)
(29,16,0)
(35,44,0)
(14,10,0)
(39,43,0)
(16,44,0)
(19,25,0)
(44,25,0)
(0,36,0)
(16,36,0)
(20,36,0)
(38,46,0)
(3,39,0)
(31,35,0)
(28,48,0)
(46,38,0)
(21,33,0)
(45,44,0)
(47,10,0)
(16,33,0)
(32,25,0)
(30,21,0)
(40,45,0)
(34,41,0)
(2,38,0)
(48,41,0)
(23,43,0)
(7,17,0)
(22,39,0)
(35,36,0)
(43,39,0)
(18,46,0)
(1,16,0)
(20,10,0)
(36,10,0)
(39,6,0)
(13,38,0)
(37,45,0)
(24,36,0)
(43,44,1)
(9,36,1)
(45,44,1)
(20,11,1)
(23,3,1)
(5,29,1)
(45,40,1)
(43,23,1)
(41,34,1)
(2,13,1)
(21,30,1)
(12,16,1)
(30,35,1)
(11,21,1)
(44,27,1)
(18,9,1)
(16,1,1)
(15,28,1)
(27,4,1)
(3,22,1)
(39,43,1)
(16,36,1)
(13,18,1)
(8,44,1)
(26,20,1)
(29,45,1)
(11,45,1)
(46,38,1)
(0,24,1)
(35,31,1)
(16,44,1)
(40,37,1)
(28,46,1)
(22,8,1)
(35,36,1)
(35,44,1)
(48,41,1)
(31,12,1)
(24,8,1)
(34,15,1)
(36,0,1)
(20,36,1)
(17,7,1)
(37,17,1)
(7,48,1)
(24,39,1)
(1,5,1)
(38,2,1)
(20,36,2)
(22,8,2)
(16,45,2)
(35,36,2)
(39,43,2)
(43,44,2)
(39,8,2)
(35,44,2)
(5,45,2)
(30,45,2)
(23,8,2)
(29,45,2)
(1,45,2)
(31,45,2)
(12,45,2)
(16,44,2)
(46,38,2)
(3,8,2)
(45,44,2)
(43,8,2)
(21,45,2)
(48,41,2)
(35,45,2)
(16,36,2)
-----------------------------------
(0,"")
(1,data)
(2,1)
(3,"%hd")
(4,data)
(5,source)
(6,)
(7,\\\'\\\\0\\\')
(8,1)
(9,source)
(10,)
(11,dest)
(12,dest)
(13,100)
(14,source)
(15,100)
(16,memcpy(dest, source, data)
(17,source[100-1] = \\\'\\\\0\\\')
(18,\\\'A\\\')
(19,data)
(20,printLine(dest)
(21,dest[data] = \\\'\\\\0\\\')
(22,stdin)
(23,data)
(24,dest)
(25,)
(26,RET)
(27,0)
(28,source)
(29,dest)
(30,\\\'\\\\0\\\')
(31,data)
(32,if(1)
(33,)
(34,1)
(35,dest[data])
(36,dest[100] = "")
(37,data)
(38,100-1)
(39,fscanf (stdin, "%hd", &data)
(40,100)
(41,100-1)
(42,if (data < 100)
(43,&data)
(44,data = 0)
(45,data < 100)
(46,memset(source, \\\'A\\\', 100-1)
(47,dest)
(48,source[100-1])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^