-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_08_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(staticReturnsTrue())
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
28,32
28,33
28,34
29,30
30,31
30,32
32,33
32,34
34,35
36,37
37,38
37,39
39,40
39,41
39,42
41,42
43,44
45,46
46,47
46,48
46,49
46,50
47,48
49,50
52,53
52,54
55,56
56,57
56,58
57,58
57,59
58,59
60,61
60,62
64,65
64,66
65,66
65,67
66,67
69,70
69,71
70,71
71,72
71,73
71,74
71,75
72,73
74,75
76,77
78,79
80,81
81,82
81,83
82,83
82,84
83,84
85,86
88,89
89,90
89,91
90,91
92,93
-----nextToken-----
2,4,8,10,14,16,20,25,27,31,33,35,38,40,42,44,48,50,51,53,54,59,61,62,63,67,68,73,75,77,79,84,86,87,91,93
-----computeFrom-----
12,13
12,14
23,24
23,25
52,53
52,54
56,57
56,58
60,61
60,62
65,66
65,67
81,82
81,83
-----guardedBy-----
67,86
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_08_bad(){    int data;    /* Initialize data */    data = -1;    if(staticReturnsTrue())    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_08_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_08_bad
{    int data;    /* Initialize data */    data = -1;    if(staticReturnsTrue())    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(staticReturnsTrue())    {        /* FLAW: Use a negative number */        data = -1;    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(19,13,0)
(16,8,0)
(30,6,0)
(37,8,0)
(38,46,0)
(13,35,0)
(14,41,0)
(38,21,0)
(2,21,0)
(2,1,0)
(10,5,0)
(33,1,0)
(17,29,0)
(35,13,0)
(12,16,0)
(7,17,0)
(5,16,0)
(32,35,0)
(42,46,0)
(1,8,0)
(15,47,0)
(35,1,0)
(4,41,0)
(34,12,0)
(3,21,0)
(22,1,0)
(45,2,0)
(39,8,0)
(47,1,0)
(44,35,0)
(26,5,0)
(18,17,0)
(29,47,0)
(27,16,0)
(29,17,0)
(5,30,0)
(41,30,0)
(25,21,0)
(38,30,0)
(5,9,0)
(36,20,0)
(38,16,0)
(48,29,0)
(16,12,0)
(0,5,0)
(5,21,0)
(41,16,0)
(46,9,0)
(30,20,0)
(20,30,0)
(24,30,0)
(40,1,0)
(23,38,0)
(11,38,0)
(21,1,0)
(43,13,0)
(30,20,1)
(36,24,1)
(41,16,1)
(3,25,1)
(18,7,1)
(32,21,1)
(34,27,1)
(5,21,1)
(25,31,1)
(38,30,1)
(14,47,1)
(46,42,1)
(26,41,1)
(35,13,1)
(45,46,1)
(43,44,1)
(38,11,1)
(42,38,1)
(2,45,1)
(25,30,1)
(5,10,1)
(38,21,1)
(41,4,1)
(16,12,1)
(47,15,1)
(41,30,1)
(4,14,1)
(5,16,1)
(12,34,1)
(28,2,1)
(11,23,1)
(45,41,1)
(17,18,1)
(0,26,1)
(2,21,1)
(5,30,1)
(48,35,1)
(31,16,1)
(38,16,1)
(21,3,1)
(15,29,1)
(23,5,1)
(19,43,1)
(13,19,1)
(24,31,1)
(29,17,1)
(44,32,1)
(10,0,1)
(7,48,1)
(20,36,1)
(46,41,2)
(42,41,2)
(30,31,2)
(36,31,2)
(38,41,2)
(16,12,2)
(24,31,2)
(38,30,2)
(0,41,2)
(5,21,2)
(30,20,2)
(41,16,2)
(38,21,2)
(5,41,2)
(23,41,2)
(26,41,2)
(41,30,2)
(38,16,2)
(20,31,2)
(5,16,2)
(2,21,2)
(29,17,2)
(10,41,2)
(11,41,2)
(35,13,2)
(5,30,2)
-----------------------------------
(0,source)
(1,)
(2,printLine(dest)
(3,"")
(4,100)
(5,memmove(dest, source, data)
(6,)
(7,100)
(8,)
(9,)
(10,data)
(11,data)
(12,-1)
(13,100-1)
(14,data)
(15,\\\'\\\\0\\\')
(16,data = -1)
(17,100-1)
(18,1)
(19,1)
(20,-1)
(21,dest[100] = "")
(22,if (data < 100)
(23,dest)
(24,data)
(25,dest)
(26,dest)
(27,data)
(28,RET)
(29,source[100-1])
(30,data = -1)
(31,staticReturnsTrue()
(32,source)
(33,source)
(34,1)
(35,memset(source, \\\'A\\\', 100-1)
(36,1)
(37,if(staticReturnsTrue()
(38,dest[data])
(39,data)
(40,dest)
(41,data < 100)
(42,\\\'\\\\0\\\')
(43,100)
(44,\\\'A\\\')
(45,dest)
(46,dest[data] = \\\'\\\\0\\\')
(47,source[100-1] = \\\'\\\\0\\\')
(48,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^