-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_17_bad()
{
    int i;
    int data;
    /* Initialize data */
    data = -1;
    for(i = 0; i < 1; i++)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
22,26
23,24
24,25
24,26
25,26
28,29
28,30
29,30
32,33
33,34
35,36
36,37
37,38
37,39
38,39
40,41
42,43
42,44
42,45
42,46
42,47
42,48
43,44
44,45
44,46
46,47
46,48
48,49
50,51
51,52
51,53
53,54
53,55
53,56
55,56
57,58
59,60
60,61
60,62
60,63
60,64
61,62
63,64
66,67
66,68
69,70
70,71
70,72
71,72
71,73
72,73
74,75
74,76
78,79
78,80
79,80
79,81
80,81
83,84
83,85
84,85
85,86
85,87
85,88
85,89
86,87
88,89
90,91
92,93
94,95
95,96
95,97
96,97
96,98
97,98
99,100
102,103
103,104
103,105
104,105
106,107
-----nextToken-----
2,4,8,10,13,15,19,21,26,27,30,31,34,39,41,45,47,49,52,54,56,58,62,64,65,67,68,73,75,76,77,81,82,87,89,91,93,98,100,101,105,107
-----computeFrom-----
17,18
17,19
24,25
24,26
28,29
28,30
37,38
37,39
66,67
66,68
70,71
70,72
74,75
74,76
79,80
79,81
95,96
95,97
-----guardedBy-----
81,100
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_17_bad(){    int i;    int data;    /* Initialize data */    data = -1;    for(i = 0; i < 1; i++)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_17_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_17_bad
{    int i;    int data;    /* Initialize data */    data = -1;    for(i = 0; i < 1; i++)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int i;
int i;
int
i
i
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
for(i = 0; i < 1; i++)    {        /* FLAW: Use a negative number */        data = -1;    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(14,9,0)
(19,45,0)
(56,32,0)
(19,27,0)
(52,9,0)
(8,54,0)
(15,3,0)
(9,38,0)
(23,15,0)
(22,11,0)
(9,14,0)
(15,45,0)
(37,43,0)
(8,9,0)
(29,37,0)
(2,27,0)
(53,22,0)
(54,39,0)
(24,15,0)
(47,8,0)
(52,54,0)
(21,54,0)
(3,15,0)
(31,21,0)
(48,21,0)
(42,45,0)
(54,18,0)
(30,32,0)
(4,27,0)
(0,45,0)
(8,22,0)
(51,3,0)
(20,21,0)
(25,9,0)
(40,18,0)
(1,43,0)
(50,37,0)
(6,38,0)
(21,9,0)
(28,55,0)
(10,30,0)
(12,38,0)
(18,54,0)
(35,54,0)
(41,0,0)
(16,19,0)
(34,45,0)
(7,8,0)
(13,14,0)
(36,32,0)
(44,45,0)
(30,0,0)
(21,27,0)
(27,45,0)
(49,43,0)
(26,52,0)
(5,38,0)
(46,52,0)
(45,38,0)
(55,43,0)
(33,3,0)
(21,11,0)
(32,30,0)
(8,27,0)
(54,18,1)
(21,9,1)
(46,0,1)
(32,56,1)
(21,31,1)
(10,15,1)
(9,14,1)
(28,54,1)
(7,47,1)
(50,43,1)
(30,32,1)
(37,29,1)
(21,27,1)
(36,10,1)
(29,50,1)
(26,46,1)
(13,25,1)
(35,37,1)
(8,54,1)
(3,33,1)
(23,27,1)
(18,40,1)
(14,13,1)
(8,7,1)
(51,24,1)
(8,9,1)
(52,54,1)
(20,48,1)
(56,36,1)
(0,41,1)
(53,8,1)
(37,43,1)
(16,52,1)
(41,30,1)
(16,22,1)
(21,54,1)
(17,19,1)
(52,26,1)
(50,55,1)
(31,20,1)
(4,37,1)
(55,43,1)
(1,9,1)
(15,3,1)
(2,4,1)
(55,28,1)
(52,9,1)
(43,49,1)
(49,1,1)
(24,23,1)
(22,53,1)
(19,27,1)
(48,52,1)
(19,16,1)
(40,35,1)
(8,27,1)
(27,2,1)
(47,21,1)
(33,51,1)
(21,54,2)
(7,52,2)
(18,37,2)
(19,27,2)
(54,18,2)
(37,43,2)
(22,52,2)
(28,37,2)
(8,27,2)
(21,52,2)
(55,43,2)
(53,52,2)
(30,32,2)
(52,9,2)
(20,52,2)
(8,54,2)
(8,9,2)
(47,52,2)
(52,54,2)
(9,14,2)
(31,52,2)
(40,37,2)
(37,37,2)
(35,37,2)
(48,52,2)
(29,37,2)
(55,37,2)
(21,9,2)
(50,37,2)
(54,37,2)
(8,52,2)
(21,27,2)
(15,3,2)
-----------------------------------
(0,source[100-1] = \\\'\\\\0\\\')
(1,i)
(2,"")
(3,100-1)
(4,dest)
(5,i)
(6,data)
(7,data)
(8,dest[data])
(9,data = -1)
(10,source)
(11,)
(12,for(i = 0; i < 1; i++)
(13,1)
(14,-1)
(15,memset(source, \\\'A\\\', 100-1)
(16,dest)
(17,RET)
(18,-1)
(19,printLine(dest)
(20,source)
(21,strncpy(dest, source, data)
(22,dest[data] = \\\'\\\\0\\\')
(23,source)
(24,\\\'A\\\')
(25,data)
(26,100)
(27,dest[100] = "")
(28,i)
(29,1)
(30,source[100-1])
(31,data)
(32,100-1)
(33,1)
(34,source)
(35,data)
(36,100)
(37,i < 1)
(38,)
(39,)
(40,1)
(41,\\\'\\\\0\\\')
(42,if (data < 100)
(43,i = 0)
(44,dest)
(45,)
(46,data)
(47,dest)
(48,dest)
(49,0)
(50,i)
(51,100)
(52,data < 100)
(53,\\\'\\\\0\\\')
(54,data = -1)
(55,i++)
(56,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^