-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_17_bad()
{
    int i;
    short data;
    /* Initialize data */
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
22,23
23,24
23,25
24,25
27,28
27,29
28,29
31,32
32,33
34,35
35,36
36,37
36,38
37,38
39,40
41,42
41,43
41,44
41,45
41,46
41,47
42,43
43,44
43,45
45,46
45,47
47,48
49,50
50,51
50,52
52,53
52,54
52,55
54,55
56,57
58,59
59,60
59,61
59,62
59,63
60,61
62,63
65,66
65,67
68,69
69,70
69,71
70,71
70,72
71,72
73,74
73,75
77,78
77,79
78,79
78,80
79,80
82,83
82,84
83,84
84,85
84,86
84,87
84,88
85,86
87,88
89,90
91,92
93,94
94,95
94,96
95,96
95,97
96,97
98,99
101,102
102,103
102,104
103,104
105,106
-----nextToken-----
2,4,8,10,13,15,19,20,25,26,29,30,33,38,40,44,46,48,51,53,55,57,61,63,64,66,67,72,74,75,76,80,81,86,88,90,92,97,99,100,104,106
-----computeFrom-----
17,18
17,19
23,24
23,25
27,28
27,29
36,37
36,38
65,66
65,67
69,70
69,71
73,74
73,75
78,79
78,80
94,95
94,96
-----guardedBy-----
80,99
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_17_bad(){    int i;    short data;    /* Initialize data */    data = 0;    for(i = 0; i < 1; i++)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_strncpy_17_bad()
CWE194_Unexpected_Sign_Extension__negative_strncpy_17_bad
{    int i;    short data;    /* Initialize data */    data = 0;    for(i = 0; i < 1; i++)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int i;
int i;
int
i
i
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* FLAW: Use a negative number */        data = -1;    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(8,44,0)
(39,34,0)
(34,39,0)
(8,30,0)
(19,48,0)
(52,44,0)
(53,12,0)
(43,24,0)
(17,52,0)
(16,3,0)
(10,19,0)
(9,12,0)
(38,40,0)
(24,34,0)
(21,36,0)
(42,48,0)
(29,36,0)
(7,30,0)
(41,17,0)
(15,34,0)
(30,44,0)
(36,47,0)
(47,36,0)
(2,48,0)
(34,33,0)
(49,24,0)
(24,30,0)
(31,39,0)
(26,0,0)
(22,34,0)
(13,17,0)
(52,17,0)
(32,0,0)
(1,3,0)
(44,0,0)
(19,34,0)
(27,52,0)
(50,19,0)
(14,22,0)
(25,8,0)
(20,44,0)
(24,23,0)
(4,47,0)
(51,44,0)
(48,0,0)
(11,30,0)
(35,44,0)
(22,48,0)
(46,1,0)
(24,48,0)
(23,37,0)
(18,22,0)
(55,52,0)
(19,37,0)
(19,30,0)
(40,44,0)
(28,3,0)
(45,23,0)
(12,3,0)
(5,19,0)
(47,40,0)
(54,0,0)
(6,8,1)
(16,48,1)
(24,48,1)
(7,12,1)
(8,30,1)
(22,48,1)
(21,29,1)
(53,1,1)
(14,40,1)
(29,4,1)
(23,45,1)
(27,30,1)
(25,22,1)
(18,14,1)
(4,52,1)
(19,5,1)
(38,47,1)
(9,53,1)
(8,25,1)
(47,36,1)
(19,34,1)
(49,19,1)
(53,3,1)
(24,30,1)
(28,16,1)
(34,39,1)
(50,22,1)
(19,48,1)
(39,31,1)
(2,42,1)
(10,50,1)
(36,21,1)
(40,38,1)
(41,55,1)
(12,3,1)
(19,30,1)
(46,34,1)
(30,11,1)
(43,49,1)
(24,34,1)
(15,12,1)
(3,28,1)
(25,23,1)
(45,24,1)
(22,18,1)
(22,34,1)
(13,41,1)
(1,46,1)
(11,7,1)
(31,15,1)
(17,13,1)
(24,43,1)
(12,9,1)
(52,17,1)
(55,27,1)
(5,10,1)
(1,3,1)
(48,2,1)
(43,22,2)
(19,48,2)
(34,39,2)
(34,12,2)
(19,34,2)
(24,30,2)
(53,12,2)
(52,17,2)
(19,30,2)
(39,12,2)
(45,22,2)
(46,12,2)
(12,3,2)
(10,22,2)
(50,22,2)
(12,12,2)
(24,48,2)
(8,30,2)
(22,48,2)
(47,36,2)
(24,22,2)
(5,22,2)
(9,12,2)
(15,12,2)
(23,22,2)
(1,12,2)
(24,34,2)
(49,22,2)
(19,22,2)
(1,3,2)
(31,12,2)
(22,34,2)
-----------------------------------
(0,)
(1,i++)
(2,0)
(3,i = 0)
(4,source)
(5,data)
(6,RET)
(7,dest)
(8,printLine(dest)
(9,1)
(10,source)
(11,"")
(12,i < 1)
(13,1)
(14,data)
(15,data)
(16,i)
(17,100-1)
(18,100)
(19,strncpy(dest, source, data)
(20,dest)
(21,1)
(22,data < 100)
(23,dest[data] = \\\'\\\\0\\\')
(24,dest[data])
(25,dest)
(26,i)
(27,source)
(28,0)
(29,100)
(30,dest[100] = "")
(31,1)
(32,data)
(33,)
(34,data = -1)
(35,source)
(36,100-1)
(37,)
(38,\\\'\\\\0\\\')
(39,-1)
(40,source[100-1] = \\\'\\\\0\\\')
(41,100)
(42,data)
(43,data)
(44,)
(45,\\\'\\\\0\\\')
(46,i)
(47,source[100-1])
(48,data = 0)
(49,dest)
(50,dest)
(51,if (data < 100)
(52,memset(source, \\\'A\\\', 100-1)
(53,i)
(54,for(i = 0; i < 1; i++)
(55,\\\'A\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^