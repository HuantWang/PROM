-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_21_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    badStatic = 1; /* true */
    data = badSource(data);
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
22,23
23,24
23,25
24,25
26,27
26,28
27,28
29,30
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,16,20,21,25,28,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
18,19
18,20
23,24
23,25
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_21_bad(){    int data;    /* Initialize data */    data = -1;    badStatic = 1; /* true */    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_21_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_21_bad
{    int data;    /* Initialize data */    data = -1;    badStatic = 1; /* true */    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(33,16,0)
(11,2,0)
(8,38,0)
(28,30,0)
(5,45,0)
(15,31,0)
(10,1,0)
(7,16,0)
(1,23,0)
(2,27,0)
(24,48,0)
(17,27,0)
(47,1,0)
(17,23,0)
(19,27,0)
(41,31,0)
(38,31,0)
(23,3,0)
(40,48,0)
(14,38,0)
(42,24,0)
(31,48,0)
(6,9,0)
(4,24,0)
(0,17,0)
(37,32,0)
(1,27,0)
(39,27,0)
(45,41,0)
(43,20,0)
(23,48,0)
(17,6,0)
(16,48,0)
(38,20,0)
(34,31,0)
(35,6,0)
(3,23,0)
(29,32,0)
(45,30,0)
(44,3,0)
(12,30,0)
(36,31,0)
(24,4,0)
(21,4,0)
(25,20,0)
(18,17,0)
(2,31,0)
(32,23,0)
(27,31,0)
(3,24,0)
(22,41,0)
(26,1,0)
(30,45,0)
(13,23,0)
(20,38,0)
(1,9,0)
(21,42,1)
(5,38,1)
(18,0,1)
(12,5,1)
(2,27,1)
(26,32,1)
(11,32,1)
(41,22,1)
(0,1,1)
(25,14,1)
(24,4,1)
(6,35,1)
(45,30,1)
(47,10,1)
(4,21,1)
(27,19,1)
(23,3,1)
(29,41,1)
(17,23,1)
(28,12,1)
(37,29,1)
(17,18,1)
(39,23,1)
(32,37,1)
(1,27,1)
(46,2,1)
(43,25,1)
(38,20,1)
(35,17,1)
(1,47,1)
(20,43,1)
(13,16,1)
(14,8,1)
(8,27,1)
(19,39,1)
(16,33,1)
(3,44,1)
(11,6,1)
(2,11,1)
(1,23,1)
(7,24,1)
(44,13,1)
(30,28,1)
(32,23,1)
(22,45,1)
(10,26,1)
(17,27,1)
(3,24,1)
(33,7,1)
(35,32,2)
(18,32,2)
(38,20,2)
(3,24,2)
(1,27,2)
(23,3,2)
(32,23,2)
(24,4,2)
(45,30,2)
(0,32,2)
(1,32,2)
(1,23,2)
(26,32,2)
(6,32,2)
(17,23,2)
(17,27,2)
(10,32,2)
(17,32,2)
(47,32,2)
(2,27,2)
-----------------------------------
(0,dest)
(1,memcpy(dest, source, data)
(2,printLine(dest)
(3,badSource(data)
(4,-1)
(5,source)
(6,dest[data] = \\\'\\\\0\\\')
(7,badStatic)
(8,source)
(9,)
(10,source)
(11,dest)
(12,100)
(13,data)
(14,\\\'A\\\')
(15,if (data < 100)
(16,badStatic = 1)
(17,dest[data])
(18,data)
(19,"")
(20,100-1)
(21,1)
(22,\\\'\\\\0\\\')
(23,data = badSource(data)
(24,data = -1)
(25,100)
(26,dest)
(27,dest[100] = "")
(28,1)
(29,data)
(30,100-1)
(31,)
(32,data < 100)
(33,1)
(34,source)
(35,\\\'\\\\0\\\')
(36,dest)
(37,100)
(38,memset(source, \\\'A\\\', 100-1)
(39,dest)
(40,data)
(41,source[100-1] = \\\'\\\\0\\\')
(42,data)
(43,1)
(44,data)
(45,source[100-1])
(46,RET)
(47,data)
(48,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^