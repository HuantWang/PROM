-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_16_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    while(1)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
        break;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
19,21
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,16,18,23,25,26,29,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_16_bad(){    int data;    /* Initialize data */    data = -1;    while(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_16_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_16_bad
{    int data;    /* Initialize data */    data = -1;    while(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
while(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    }
1
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
break;
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(5,15,0)
(50,12,0)
(36,24,0)
(16,3,0)
(47,18,0)
(48,36,0)
(5,40,0)
(47,3,0)
(2,15,0)
(41,4,0)
(3,47,0)
(20,18,0)
(40,4,0)
(11,40,0)
(21,15,0)
(27,10,0)
(29,3,0)
(34,46,0)
(46,15,0)
(30,46,0)
(37,36,0)
(17,5,0)
(33,18,0)
(42,24,0)
(9,18,0)
(32,19,0)
(35,48,0)
(7,48,0)
(32,40,0)
(1,33,0)
(19,32,0)
(26,32,0)
(13,46,0)
(46,18,0)
(22,33,0)
(14,8,0)
(49,50,0)
(0,32,0)
(46,12,0)
(36,48,0)
(28,19,0)
(24,40,0)
(18,4,0)
(31,20,0)
(3,10,0)
(18,20,0)
(43,40,0)
(8,50,0)
(38,8,0)
(8,15,0)
(39,40,0)
(23,47,0)
(15,40,0)
(8,18,0)
(6,19,0)
(25,4,0)
(0,26,1)
(1,24,1)
(15,2,1)
(44,5,1)
(33,18,1)
(26,15,1)
(17,33,1)
(33,22,1)
(21,27,1)
(28,0,1)
(27,3,1)
(8,14,1)
(18,20,1)
(8,18,1)
(38,46,1)
(24,42,1)
(23,29,1)
(2,21,1)
(6,28,1)
(31,9,1)
(5,17,1)
(30,13,1)
(32,19,1)
(50,49,1)
(49,8,1)
(47,23,1)
(19,6,1)
(45,18,1)
(21,45,1)
(46,18,1)
(17,50,1)
(47,18,1)
(7,37,1)
(48,35,1)
(46,15,1)
(5,15,1)
(22,1,1)
(13,33,1)
(16,45,1)
(36,48,1)
(42,36,1)
(46,34,1)
(35,7,1)
(29,16,1)
(3,47,1)
(37,32,1)
(34,30,1)
(14,38,1)
(20,31,1)
(8,15,1)
(8,33,2)
(3,45,2)
(8,18,2)
(47,45,2)
(16,45,2)
(46,15,2)
(18,20,2)
(29,45,2)
(30,33,2)
(46,18,2)
(3,47,2)
(13,33,2)
(23,45,2)
(33,18,2)
(8,15,2)
(34,33,2)
(46,33,2)
(14,33,2)
(38,33,2)
(47,18,2)
(36,48,2)
(50,33,2)
(32,19,2)
(49,33,2)
(27,45,2)
(5,15,2)
-----------------------------------
(0,\\\'A\\\')
(1,data)
(2,"")
(3,fscanf(stdin, "%d", &data)
(4,)
(5,printLine(dest)
(6,1)
(7,100)
(8,dest[data])
(9,data)
(10,)
(11,source)
(12,)
(13,dest)
(14,data)
(15,dest[100] = "")
(16,stdin)
(17,dest)
(18,data = -1)
(19,100-1)
(20,-1)
(21,dest)
(22,100)
(23,data)
(24,source[100-1] = \\\'\\\\0\\\')
(25,data)
(26,source)
(27,break;)
(28,100)
(29,"%d")
(30,source)
(31,1)
(32,memset(source, \\\'A\\\', 100-1)
(33,data < 100)
(34,data)
(35,1)
(36,source[100-1])
(37,source)
(38,dest)
(39,dest)
(40,)
(41,while(1)
(42,\\\'\\\\0\\\')
(43,if (data < 100)
(44,RET)
(45,1)
(46,strncpy(dest, source, data)
(47,&data)
(48,100-1)
(49,\\\'\\\\0\\\')
(50,dest[data] = \\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^