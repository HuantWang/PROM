-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_14_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalFive==5)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
27,28
29,30
29,31
29,32
29,33
29,34
29,35
30,31
31,32
31,33
33,34
33,35
35,36
37,38
38,39
38,40
40,41
40,42
40,43
42,43
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
53,55
56,57
57,58
57,59
58,59
58,60
59,60
61,62
61,63
65,66
65,67
66,67
66,68
67,68
70,71
70,72
71,72
72,73
72,74
72,75
72,76
73,74
75,76
77,78
79,80
81,82
82,83
82,84
83,84
83,85
84,85
86,87
89,90
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,8,10,14,16,20,21,26,28,32,34,36,39,41,43,45,49,51,52,54,55,60,62,63,64,68,69,74,76,78,80,85,87,88,92,94
-----computeFrom-----
12,13
12,14
18,19
18,20
24,25
24,26
53,54
53,55
57,58
57,59
61,62
61,63
66,67
66,68
82,83
82,84
-----guardedBy-----
68,87
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_14_bad(){    int data;    /* Initialize data */    data = -1;    if(globalFive==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_14_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_14_bad
{    int data;    /* Initialize data */    data = -1;    if(globalFive==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(globalFive==5)    {        /* FLAW: Use a negative number */        data = -1;    }
globalFive==5
globalFive
globalFive
5
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(17,37,0)
(4,49,0)
(7,0,0)
(3,9,0)
(48,23,0)
(21,18,0)
(35,39,0)
(13,35,0)
(39,34,0)
(19,9,0)
(38,23,0)
(21,23,0)
(27,42,0)
(22,42,0)
(14,39,0)
(5,30,0)
(10,18,0)
(16,21,0)
(42,45,0)
(26,15,0)
(42,15,0)
(43,45,0)
(3,29,0)
(31,23,0)
(47,30,0)
(45,9,0)
(28,21,0)
(18,46,0)
(30,3,0)
(8,17,0)
(50,49,0)
(37,17,0)
(12,29,0)
(15,42,0)
(32,15,0)
(6,35,0)
(20,45,0)
(0,39,0)
(33,37,0)
(23,45,0)
(21,39,0)
(25,9,0)
(30,46,0)
(30,23,0)
(36,11,0)
(37,11,0)
(21,3,0)
(29,3,0)
(41,30,0)
(11,45,0)
(2,31,0)
(35,3,0)
(24,45,0)
(44,3,0)
(39,0,0)
(30,39,0)
(31,45,0)
(40,17,0)
(36,37,1)
(7,14,1)
(10,21,1)
(17,8,1)
(35,6,1)
(2,18,1)
(30,3,1)
(3,29,1)
(21,3,1)
(35,39,1)
(5,41,1)
(39,0,1)
(41,47,1)
(50,4,1)
(4,3,1)
(22,23,1)
(31,2,1)
(30,5,1)
(1,31,1)
(16,28,1)
(33,42,1)
(49,50,1)
(14,49,1)
(48,49,1)
(28,30,1)
(35,3,1)
(29,12,1)
(27,22,1)
(21,23,1)
(12,44,1)
(47,35,1)
(23,38,1)
(18,10,1)
(11,36,1)
(6,13,1)
(2,35,1)
(38,48,1)
(42,15,1)
(40,33,1)
(8,40,1)
(48,39,1)
(0,7,1)
(37,17,1)
(21,16,1)
(30,39,1)
(26,27,1)
(15,32,1)
(31,23,1)
(30,23,1)
(32,26,1)
(13,11,1)
(21,39,1)
(5,35,2)
(3,29,2)
(37,17,2)
(35,39,2)
(35,3,2)
(21,35,2)
(30,3,2)
(41,35,2)
(21,23,2)
(10,35,2)
(30,23,2)
(21,3,2)
(39,49,2)
(18,35,2)
(42,15,2)
(47,35,2)
(31,23,2)
(30,35,2)
(21,39,2)
(7,49,2)
(30,39,2)
(28,35,2)
(0,49,2)
(16,35,2)
(14,49,2)
(39,0,2)
-----------------------------------
(0,-1)
(1,RET)
(2,dest)
(3,data = -1)
(4,globalFive)
(5,data)
(6,100)
(7,1)
(8,1)
(9,)
(10,\\\'\\\\0\\\')
(11,source[100-1] = \\\'\\\\0\\\')
(12,1)
(13,data)
(14,data)
(15,100-1)
(16,data)
(17,100-1)
(18,dest[data] = \\\'\\\\0\\\')
(19,data)
(20,dest)
(21,dest[data])
(22,source)
(23,dest[100] = "")
(24,source)
(25,if(globalFive==5)
(26,100)
(27,\\\'A\\\')
(28,dest)
(29,-1)
(30,memcpy(dest, source, data)
(31,printLine(dest)
(32,1)
(33,source)
(34,)
(35,data < 100)
(36,\\\'\\\\0\\\')
(37,source[100-1])
(38,"")
(39,data = -1)
(40,100)
(41,source)
(42,memset(source, \\\'A\\\', 100-1)
(43,if (data < 100)
(44,data)
(45,)
(46,)
(47,dest)
(48,dest)
(49,globalFive==5)
(50,5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^