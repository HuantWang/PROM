-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_fgets_32_bad()
{
    short data;
    short *dataPtr1 = &data;
    short *dataPtr2 = &data;
    /* Initialize data */
    data = -1;
    {
        short data = *dataPtr1;
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* FLAW: Use a number input from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to short */
                data = (short)atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
        *dataPtr1 = data;
    }
    {
        short data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
            char charData = (char)data;
            printHexCharLine(charData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
35,36
37,38
37,39
37,40
38,39
39,40
39,41
41,42
41,43
43,44
44,45
45,46
47,48
47,49
48,49
49,50
49,51
51,52
51,53
51,54
53,54
54,55
56,57
58,59
58,60
58,61
59,60
59,61
60,61
60,62
60,63
60,64
61,62
63,64
65,66
67,68
69,70
71,72
72,73
73,74
73,75
74,75
76,77
76,78
77,78
77,79
80,81
80,82
81,82
83,84
85,86
86,87
87,88
87,89
88,89
91,92
92,93
92,94
93,94
94,95
96,97
98,99
98,100
99,100
100,101
100,102
102,103
102,104
104,105
105,106
106,107
108,109
108,110
109,110
110,111
110,112
112,113
112,114
114,115
115,116
115,117
116,117
116,118
119,120
121,122
122,123
122,124
123,124
125,126
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,36,40,42,46,50,52,55,57,62,64,66,68,70,75,78,79,82,84,89,90,95,97,101,103,107,111,113,117,118,120,124,126
-----computeFrom-----
32,33
32,34
59,60
59,61
73,74
73,75
92,93
92,94
-----guardedBy-----
64,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_fgets_32_bad(){    short data;    short *dataPtr1 = &data;    short *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        short data = *dataPtr1;        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* FLAW: Use a number input from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to short */                data = (short)atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        *dataPtr1 = data;    }    {        short data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
void
CWE197_Numeric_Truncation_Error__short_fgets_32_bad()
CWE197_Numeric_Truncation_Error__short_fgets_32_bad
{    short data;    short *dataPtr1 = &data;    short *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        short data = *dataPtr1;        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* FLAW: Use a number input from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to short */                data = (short)atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        *dataPtr1 = data;    }    {        short data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
short data;
short data;
short
data
data
short *dataPtr1 = &data;
short *dataPtr1 = &data;
short
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
short *dataPtr2 = &data;
short *dataPtr2 = &data;
short
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = -1;
data = -1
data
data
-1
1
{        short data = *dataPtr1;        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* FLAW: Use a number input from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to short */                data = (short)atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        *dataPtr1 = data;    }
short data = *dataPtr1;
short data = *dataPtr1;
short
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* FLAW: Use a number input from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to short */                data = (short)atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to short */                data = (short)atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to short */                data = (short)atoi(inputBuffer);            }
data = (short)atoi(inputBuffer);
data = (short)atoi(inputBuffer)
data
data
(short)atoi(inputBuffer)
short
short

atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        short data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }
short data = *dataPtr2;
short data = *dataPtr2;
short
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(52,37,0)
(41,25,0)
(21,60,0)
(11,41,0)
(0,63,0)
(59,37,0)
(55,60,0)
(35,2,0)
(30,60,0)
(9,38,0)
(62,27,0)
(2,53,0)
(12,40,0)
(63,3,0)
(27,19,0)
(38,60,0)
(49,30,0)
(63,40,0)
(16,2,0)
(57,9,0)
(41,23,0)
(50,60,0)
(52,9,0)
(19,27,0)
(24,31,0)
(35,50,0)
(43,25,0)
(10,24,0)
(33,31,0)
(56,60,0)
(40,38,0)
(6,48,0)
(61,25,0)
(12,55,0)
(4,41,0)
(5,23,0)
(37,9,0)
(6,53,0)
(54,41,0)
(20,18,0)
(63,37,0)
(53,32,0)
(14,24,0)
(53,6,0)
(8,60,0)
(13,55,0)
(55,26,0)
(30,1,0)
(15,53,0)
(39,12,0)
(3,63,0)
(23,41,0)
(44,6,0)
(36,40,0)
(42,52,0)
(40,12,0)
(22,38,0)
(6,44,0)
(48,25,0)
(34,26,0)
(17,35,0)
(50,46,0)
(26,55,0)
(1,30,0)
(25,24,0)
(46,50,0)
(27,31,0)
(47,50,0)
(2,27,0)
(2,31,0)
(19,50,0)
(37,63,0)
(58,20,0)
(31,60,0)
(28,48,0)
(29,1,0)
(48,6,0)
(45,19,0)
(7,46,0)
(40,12,1)
(2,16,1)
(58,23,1)
(19,45,1)
(2,53,1)
(1,29,1)
(54,25,1)
(48,28,1)
(17,53,1)
(23,41,1)
(17,20,1)
(6,44,1)
(6,48,1)
(29,49,1)
(26,34,1)
(48,25,1)
(46,7,1)
(7,47,1)
(5,41,1)
(55,26,1)
(63,0,1)
(41,25,1)
(59,40,1)
(4,11,1)
(39,36,1)
(11,54,1)
(63,40,1)
(41,4,1)
(27,19,1)
(16,35,1)
(52,42,1)
(20,58,1)
(35,50,1)
(51,52,1)
(42,37,1)
(37,63,1)
(52,37,1)
(19,50,1)
(36,2,1)
(0,59,1)
(53,6,1)
(61,43,1)
(12,39,1)
(50,46,1)
(34,13,1)
(45,62,1)
(49,55,1)
(15,23,1)
(25,61,1)
(23,5,1)
(63,3,1)
(12,55,1)
(43,27,1)
(35,17,1)
(13,50,1)
(30,1,1)
(2,27,1)
(62,30,1)
(28,15,1)
(27,19,2)
(48,25,2)
(2,27,2)
(41,25,2)
(12,55,2)
(30,1,2)
(20,23,2)
(63,3,2)
(53,6,2)
(37,63,2)
(55,26,2)
(6,44,2)
(6,48,2)
(63,40,2)
(40,12,2)
(50,46,2)
(2,53,2)
(15,23,2)
(52,37,2)
(19,50,2)
(6,23,2)
(58,23,2)
(28,23,2)
(35,50,2)
(48,23,2)
(23,41,2)
(53,23,2)
-----------------------------------
(0,data)
(1,-1)
(2,*dataPtr1 = data)
(3,char)
(4,stdin)
(5,NULL)
(6,(short)
(7,data)
(8,data)
(9,)
(10,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(11,CHAR_ARRAY_SIZE)
(12,*dataPtr2)
(13,dataPtr2)
(14,inputBuffer)
(15,data)
(16,data)
(17,dataPtr1)
(18,)
(19,*dataPtr1)
(20,printLine("fgets()
(21,dataPtr2)
(22,data)
(23,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(24,)
(25,inputBuffer[CHAR_ARRAY_SIZE] = "")
(26,&data)
(27,data = *dataPtr1)
(28,inputBuffer)
(29,1)
(30,data = -1)
(31,)
(32,)
(33,data)
(34,data)
(35,*dataPtr1)
(36,data)
(37,charData = (char)
(38,)
(39,dataPtr2)
(40,data = *dataPtr2)
(41,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(42,charData)
(43,inputBuffer)
(44,short)
(45,dataPtr1)
(46,&data)
(47,dataPtr1)
(48,atoi(inputBuffer)
(49,data)
(50,*dataPtr1 = &data)
(51,RET)
(52,printHexCharLine(charData)
(53,data = (short)
(54,inputBuffer)
(55,*dataPtr2 = &data)
(56,dataPtr1)
(57,charData)
(58,"fgets()
(59,charData)
(60,)
(61,"")
(62,data)
(63,(char)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^