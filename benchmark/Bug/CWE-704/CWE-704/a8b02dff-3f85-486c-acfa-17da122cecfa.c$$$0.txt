-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_large_09_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    if(GLOBAL_CONST_TRUE)
    {
        /* FLAW: Use a number larger than CHAR_MAX */
        data = CHAR_MAX + 1;
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
29,30
29,31
30,31
31,32
31,33
33,34
33,35
35,36
36,37
36,38
37,38
37,39
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,16,19,24,27,28,32,34,38,39,41,45,47
-----computeFrom-----
12,13
12,14
22,23
22,24
25,26
25,27
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_large_09_bad(){    short data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_TRUE)    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_large_09_bad()
CWE197_Numeric_Truncation_Error__short_large_09_bad
{    short data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_TRUE)    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
if(GLOBAL_CONST_TRUE)    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }
data = CHAR_MAX + 1;
data = CHAR_MAX + 1
data
data
CHAR_MAX + 1
CHAR_MAX
CHAR_MAX
1
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(13,17,0)
(1,8,0)
(17,2,0)
(16,20,0)
(8,18,0)
(19,22,0)
(11,18,0)
(7,21,0)
(6,15,0)
(19,18,0)
(19,5,0)
(2,21,0)
(3,21,0)
(23,2,0)
(19,20,0)
(5,19,0)
(15,20,0)
(18,12,0)
(14,22,0)
(17,22,0)
(20,21,0)
(4,8,0)
(22,19,0)
(20,15,0)
(10,19,0)
(22,2,0)
(18,8,0)
(15,6,1)
(19,10,1)
(17,22,1)
(19,5,1)
(22,19,1)
(18,8,1)
(9,20,1)
(19,20,1)
(6,16,1)
(17,13,1)
(11,9,1)
(20,15,1)
(4,11,1)
(8,1,1)
(1,4,1)
(19,18,1)
(0,17,1)
(10,14,1)
(14,18,1)
(14,9,1)
(13,22,1)
(19,5,2)
(18,8,2)
(18,9,2)
(1,9,2)
(19,18,2)
(20,15,2)
(17,22,2)
(19,20,2)
(22,19,2)
(11,9,2)
(4,9,2)
(8,9,2)
-----------------------------------
(0,RET)
(1,1)
(2,)
(3,data)
(4,CHAR_MAX)
(5,char)
(6,1)
(7,if(GLOBAL_CONST_TRUE)
(8,CHAR_MAX + 1)
(9,GLOBAL_CONST_TRUE)
(10,data)
(11,data)
(12,)
(13,charData)
(14,charData)
(15,-1)
(16,data)
(17,printHexCharLine(charData)
(18,data = CHAR_MAX + 1)
(19,(char)
(20,data = -1)
(21,)
(22,charData = (char)
(23,charData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^