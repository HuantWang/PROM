-----label-----
1
-----code-----
static int badSource(int data)
{
    if(badStatic)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
10,12
11,12
13,14
14,15
15,16
15,17
16,17
18,19
20,21
21,22
-----nextToken-----
2,4,6,8,12,17,19,22
-----computeFrom-----
15,16
15,17
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static int badSource(int data){    if(badStatic)    {        /* FLAW: Use a negative number */        data = -1;    }    return data;}
static int
badSource(int data)
badSource
int data
int
data
data
{    if(badStatic)    {        /* FLAW: Use a negative number */        data = -1;    }    return data;}
if(badStatic)    {        /* FLAW: Use a negative number */        data = -1;    }
badStatic
badStatic
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
return data;
data
data
-----joern-----
(6,4,0)
(3,11,0)
(0,11,0)
(5,6,0)
(10,6,0)
(11,7,0)
(6,2,0)
(1,4,0)
(9,3,0)
(11,2,0)
(11,3,0)
(6,11,0)
(0,8,1)
(6,2,1)
(6,11,1)
(10,11,1)
(3,9,1)
(11,3,1)
(6,10,1)
(10,8,1)
(9,0,1)
(11,2,1)
(5,6,1)
(6,11,2)
(11,2,2)
(11,8,2)
(3,8,2)
(0,8,2)
(11,3,2)
(5,6,2)
(6,2,2)
(9,8,2)
-----------------------------------
(0,data)
(1,if(badStatic)
(2,int data)
(3,-1)
(4,)
(5,RET)
(6,return data;)
(7,)
(8,badStatic)
(9,1)
(10,data)
(11,data = -1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^