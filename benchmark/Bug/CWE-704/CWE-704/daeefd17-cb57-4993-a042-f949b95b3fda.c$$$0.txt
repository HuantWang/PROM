-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_04_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_TRUE)
    {
        /* FLAW: Use a random value that could be less than 0 */
        data = (short)RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
21,22
21,23
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_04_bad(){    short data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__rand_strncpy_04_bad()
CWE194_Unexpected_Sign_Extension__rand_strncpy_04_bad
{    short data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_TRUE)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(12,9,0)
(16,46,0)
(43,4,0)
(35,46,0)
(10,1,0)
(14,38,0)
(9,12,0)
(13,41,0)
(18,1,0)
(24,36,0)
(7,0,0)
(39,38,0)
(48,13,0)
(18,7,0)
(3,26,0)
(20,21,0)
(28,18,0)
(38,20,0)
(46,20,0)
(8,7,0)
(19,12,0)
(2,20,0)
(47,20,0)
(45,1,0)
(31,4,0)
(47,0,0)
(44,9,0)
(22,41,0)
(33,26,0)
(20,46,0)
(1,36,0)
(31,26,0)
(26,31,0)
(42,41,0)
(18,13,0)
(37,47,0)
(47,13,0)
(38,1,0)
(47,1,0)
(29,9,0)
(9,41,0)
(42,13,0)
(11,31,0)
(27,41,0)
(34,36,0)
(32,47,0)
(6,13,0)
(46,35,0)
(23,42,0)
(41,36,0)
(18,20,0)
(46,16,0)
(4,41,0)
(30,47,0)
(5,18,0)
(17,41,0)
(15,12,0)
(3,11,1)
(11,9,1)
(38,1,1)
(23,7,1)
(8,18,1)
(33,3,1)
(15,44,1)
(48,20,1)
(32,30,1)
(2,40,1)
(48,40,1)
(43,31,1)
(47,20,1)
(30,38,1)
(38,20,1)
(47,37,1)
(18,28,1)
(31,26,1)
(4,43,1)
(1,45,1)
(46,35,1)
(47,1,1)
(40,1,1)
(14,39,1)
(12,19,1)
(18,1,1)
(38,14,1)
(26,33,1)
(29,13,1)
(28,5,1)
(37,32,1)
(39,4,1)
(18,13,1)
(42,13,1)
(23,38,1)
(25,42,1)
(13,6,1)
(47,13,1)
(20,46,1)
(18,20,1)
(45,10,1)
(7,8,1)
(9,12,1)
(6,48,1)
(44,29,1)
(42,23,1)
(16,2,1)
(5,47,1)
(46,16,1)
(19,15,1)
(7,38,2)
(46,40,2)
(20,46,2)
(18,38,2)
(38,1,2)
(31,26,2)
(47,1,2)
(16,40,2)
(28,38,2)
(5,38,2)
(32,38,2)
(46,16,2)
(18,13,2)
(18,20,2)
(18,1,2)
(30,38,2)
(42,13,2)
(47,13,2)
(9,12,2)
(2,40,2)
(8,38,2)
(38,20,2)
(46,35,2)
(37,38,2)
(47,38,2)
(20,40,2)
(47,20,2)
-----------------------------------
(0,)
(1,data = 0)
(2,data)
(3,100)
(4,source[100-1] = \\\'\\\\0\\\')
(5,dest)
(6,"")
(7,dest[data] = \\\'\\\\0\\\')
(8,\\\'\\\\0\\\')
(9,memset(source, \\\'A\\\', 100-1)
(10,data)
(11,source)
(12,100-1)
(13,dest[100] = "")
(14,100)
(15,100)
(16,RAND32()
(17,if (data < 100)
(18,dest[data])
(19,1)
(20,data = (short)
(21,)
(22,dest)
(23,dest)
(24,data)
(25,RET)
(26,100-1)
(27,source)
(28,data)
(29,source)
(30,dest)
(31,source[100-1])
(32,source)
(33,1)
(34,if(STATIC_CONST_TRUE)
(35,short)
(36,)
(37,data)
(38,data < 100)
(39,data)
(40,STATIC_CONST_TRUE)
(41,)
(42,printLine(dest)
(43,\\\'\\\\0\\\')
(44,\\\'A\\\')
(45,0)
(46,(short)
(47,strncpy(dest, source, data)
(48,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^