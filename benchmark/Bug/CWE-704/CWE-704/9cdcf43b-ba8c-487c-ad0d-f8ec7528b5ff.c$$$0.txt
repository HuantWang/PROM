-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_listen_socket_63b_badSink(short * dataPtr)
{
    short data = *dataPtr;
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
18,19
20,21
20,22
21,22
22,23
22,24
24,25
24,26
26,27
27,28
27,29
28,29
28,30
31,32
33,34
34,35
34,36
35,36
37,38
-----nextToken-----
2,4,6,8,9,13,15,19,23,25,29,30,32,36,38
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_listen_socket_63b_badSink(short * dataPtr){    short data = *dataPtr;    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_listen_socket_63b_badSink(short * dataPtr)
CWE197_Numeric_Truncation_Error__short_listen_socket_63b_badSink
short * dataPtr
short
* dataPtr
*
dataPtr
{    short data = *dataPtr;    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data = *dataPtr;
short data = *dataPtr;
short
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(5,3,0)
(1,8,0)
(12,2,0)
(7,2,0)
(0,2,0)
(10,11,0)
(1,6,0)
(6,1,0)
(6,11,0)
(2,6,0)
(4,6,0)
(5,12,0)
(13,3,0)
(16,12,0)
(2,0,0)
(15,1,0)
(12,3,0)
(14,5,0)
(3,11,0)
(2,12,0)
(7,16,1)
(2,6,1)
(2,0,1)
(12,2,1)
(14,12,1)
(1,8,1)
(16,6,1)
(1,15,1)
(9,5,1)
(5,14,1)
(15,4,1)
(2,7,1)
(5,12,1)
(6,1,1)
(6,1,2)
(2,0,2)
(2,6,2)
(1,8,2)
(5,12,2)
(12,2,2)
-----------------------------------
(0,char)
(1,*dataPtr)
(2,(char)
(3,)
(4,data)
(5,printHexCharLine(charData)
(6,data = *dataPtr)
(7,data)
(8,short * dataPtr)
(9,RET)
(10,data)
(11,)
(12,charData = (char)
(13,charData)
(14,charData)
(15,dataPtr)
(16,charData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^