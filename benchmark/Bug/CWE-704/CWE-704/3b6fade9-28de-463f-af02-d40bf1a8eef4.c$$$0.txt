-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_04_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_TRUE)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
26,29
26,30
26,31
26,32
27,28
28,29
28,30
30,31
30,32
32,33
34,35
35,36
35,37
37,38
37,39
37,40
39,40
41,42
43,44
44,45
44,46
44,47
44,48
45,46
47,48
50,51
50,52
53,54
54,55
54,56
55,56
55,57
56,57
58,59
58,60
62,63
62,64
63,64
63,65
64,65
67,68
67,69
68,69
69,70
69,71
69,72
69,73
70,71
72,73
74,75
76,77
78,79
79,80
79,81
80,81
80,82
81,82
83,84
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,14,15,18,23,25,29,31,33,36,38,40,42,46,48,49,51,52,57,59,60,61,65,66,71,73,75,77,82,84,85,89,91
-----computeFrom-----
12,13
12,14
21,22
21,23
50,51
50,52
54,55
54,56
58,59
58,60
63,64
63,65
79,80
79,81
-----guardedBy-----
65,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_04_bad(){    short data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_memmove_04_bad()
CWE194_Unexpected_Sign_Extension__negative_memmove_04_bad
{    short data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_TRUE)    {        /* FLAW: Use a negative number */        data = -1;    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(44,36,0)
(37,20,0)
(0,33,0)
(42,20,0)
(18,44,0)
(26,33,0)
(14,15,0)
(6,41,0)
(46,42,0)
(5,16,0)
(16,21,0)
(42,33,0)
(43,0,0)
(18,28,0)
(8,3,0)
(1,44,0)
(45,17,0)
(40,27,0)
(20,36,0)
(34,15,0)
(0,21,0)
(13,44,0)
(29,0,0)
(11,34,0)
(22,44,0)
(0,20,0)
(0,41,0)
(3,41,0)
(7,0,0)
(42,16,0)
(41,44,0)
(28,18,0)
(31,44,0)
(35,36,0)
(15,31,0)
(17,20,0)
(15,34,0)
(38,31,0)
(23,17,0)
(3,44,0)
(10,28,0)
(17,33,0)
(30,36,0)
(2,28,0)
(4,41,0)
(47,18,0)
(12,34,0)
(32,42,0)
(9,20,0)
(27,33,0)
(19,18,0)
(42,41,0)
(33,25,0)
(33,27,0)
(12,11,1)
(39,3,1)
(42,41,1)
(17,20,1)
(26,24,1)
(0,33,1)
(3,41,1)
(10,2,1)
(42,20,1)
(17,33,1)
(11,14,1)
(7,29,1)
(0,41,1)
(28,10,1)
(43,17,1)
(42,33,1)
(33,27,1)
(0,20,1)
(32,46,1)
(24,20,1)
(47,41,1)
(6,33,1)
(8,16,1)
(34,12,1)
(45,31,1)
(20,9,1)
(17,23,1)
(31,38,1)
(8,17,1)
(6,24,1)
(2,19,1)
(41,4,1)
(46,0,1)
(29,43,1)
(0,7,1)
(14,18,1)
(40,26,1)
(4,6,1)
(3,8,1)
(19,47,1)
(38,15,1)
(27,40,1)
(16,5,1)
(15,34,1)
(5,42,1)
(42,32,1)
(9,37,1)
(18,28,1)
(23,45,1)
(42,20,2)
(33,24,2)
(0,17,2)
(7,17,2)
(16,17,2)
(46,17,2)
(0,20,2)
(0,41,2)
(17,33,2)
(3,41,2)
(17,20,2)
(5,17,2)
(42,41,2)
(26,24,2)
(40,24,2)
(43,17,2)
(42,17,2)
(29,17,2)
(33,27,2)
(0,33,2)
(18,28,2)
(15,34,2)
(32,17,2)
(27,24,2)
(42,33,2)
-----------------------------------
(0,memmove(dest, source, data)
(1,dest)
(2,100)
(3,printLine(dest)
(4,"")
(5,\\\'\\\\0\\\')
(6,dest)
(7,data)
(8,dest)
(9,0)
(10,1)
(11,100)
(12,1)
(13,source)
(14,source)
(15,source[100-1])
(16,dest[data] = \\\'\\\\0\\\')
(17,data < 100)
(18,memset(source, \\\'A\\\', 100-1)
(19,\\\'A\\\')
(20,data = 0)
(21,)
(22,if (data < 100)
(23,100)
(24,STATIC_CONST_TRUE)
(25,)
(26,data)
(27,-1)
(28,100-1)
(29,source)
(30,data)
(31,source[100-1] = \\\'\\\\0\\\')
(32,data)
(33,data = -1)
(34,100-1)
(35,if(STATIC_CONST_TRUE)
(36,)
(37,data)
(38,\\\'\\\\0\\\')
(39,RET)
(40,1)
(41,dest[100] = "")
(42,dest[data])
(43,dest)
(44,)
(45,data)
(46,dest)
(47,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^