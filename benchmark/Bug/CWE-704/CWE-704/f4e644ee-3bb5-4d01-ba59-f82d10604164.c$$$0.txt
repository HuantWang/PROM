-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_02_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(1)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
30,33
30,34
30,35
30,36
31,32
32,33
32,34
34,35
34,36
36,37
38,39
39,40
39,41
41,42
41,43
41,44
43,44
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
66,68
67,68
67,69
68,69
71,72
71,73
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,14,16,18,23,25,26,29,33,35,37,40,42,44,46,50,52,53,55,56,61,63,64,65,69,70,75,77,79,81,86,88,89,93,95
-----computeFrom-----
12,13
12,14
54,55
54,56
58,59
58,60
62,63
62,64
67,68
67,69
83,84
83,85
-----guardedBy-----
69,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_02_bad(){    int data;    /* Initialize data */    data = -1;    if(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_02_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_02_bad
{    int data;    /* Initialize data */    data = -1;    if(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(1)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
1
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(7,25,0)
(19,17,0)
(16,40,0)
(23,25,0)
(7,17,0)
(29,41,0)
(22,14,0)
(31,40,0)
(43,14,0)
(7,11,0)
(45,17,0)
(44,22,0)
(38,16,0)
(22,33,0)
(49,45,0)
(41,17,0)
(47,41,0)
(4,7,0)
(5,17,0)
(18,14,0)
(12,3,0)
(36,26,0)
(41,29,0)
(24,11,0)
(15,7,0)
(45,25,0)
(6,24,0)
(27,21,0)
(40,33,0)
(28,29,0)
(9,45,0)
(14,22,0)
(25,33,0)
(42,7,0)
(21,33,0)
(3,17,0)
(2,38,0)
(34,29,0)
(21,25,0)
(45,24,0)
(46,33,0)
(29,20,0)
(48,38,0)
(37,19,0)
(1,3,0)
(16,38,0)
(0,33,0)
(17,26,0)
(39,26,0)
(32,16,0)
(8,22,0)
(33,26,0)
(30,33,0)
(17,19,0)
(13,25,0)
(38,48,1)
(10,21,1)
(3,12,1)
(34,28,1)
(45,17,1)
(31,16,1)
(7,42,1)
(27,3,1)
(42,15,1)
(13,35,1)
(19,37,1)
(43,8,1)
(15,4,1)
(32,22,1)
(24,6,1)
(45,25,1)
(18,43,1)
(2,32,1)
(41,47,1)
(16,38,1)
(41,17,1)
(44,25,1)
(9,49,1)
(4,3,1)
(22,14,1)
(49,7,1)
(8,44,1)
(40,31,1)
(12,1,1)
(7,17,1)
(13,29,1)
(27,24,1)
(35,17,1)
(48,2,1)
(6,45,1)
(45,9,1)
(14,18,1)
(21,27,1)
(23,13,1)
(28,35,1)
(3,17,1)
(37,5,1)
(25,23,1)
(21,25,1)
(17,19,1)
(7,25,1)
(1,40,1)
(47,34,1)
(29,41,1)
(7,3,2)
(7,25,2)
(41,17,2)
(29,41,2)
(9,3,2)
(45,3,2)
(6,3,2)
(3,17,2)
(45,17,2)
(42,3,2)
(34,35,2)
(17,19,2)
(21,25,2)
(41,35,2)
(24,3,2)
(29,35,2)
(15,3,2)
(47,35,2)
(45,25,2)
(4,3,2)
(7,17,2)
(16,38,2)
(49,3,2)
(22,14,2)
(28,35,2)
-----------------------------------
(0,dest)
(1,data)
(2,100)
(3,data < 100)
(4,dest)
(5,data)
(6,\\\'\\\\0\\\')
(7,memmove(dest, source, data)
(8,\\\'A\\\')
(9,data)
(10,RET)
(11,)
(12,100)
(13,dest)
(14,100-1)
(15,source)
(16,source[100-1])
(17,data = -1)
(18,1)
(19,-1)
(20,)
(21,printLine(dest)
(22,memset(source, \\\'A\\\', 100-1)
(23,"")
(24,dest[data] = \\\'\\\\0\\\')
(25,dest[100] = "")
(26,)
(27,dest)
(28,stdin)
(29,fscanf(stdin, "%d", &data)
(30,source)
(31,\\\'\\\\0\\\')
(32,source)
(33,)
(34,"%d")
(35,1)
(36,data)
(37,1)
(38,100-1)
(39,if(1)
(40,source[100-1] = \\\'\\\\0\\\')
(41,&data)
(42,data)
(43,100)
(44,source)
(45,dest[data])
(46,if (data < 100)
(47,data)
(48,1)
(49,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^