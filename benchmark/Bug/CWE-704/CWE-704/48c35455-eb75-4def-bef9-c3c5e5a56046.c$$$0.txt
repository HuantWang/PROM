-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_large_31_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    /* FLAW: Use a number larger than CHAR_MAX */
    data = CHAR_MAX + 1;
    {
        short dataCopy = data;
        short data = dataCopy;
        {
            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
            char charData = (char)data;
            printHexCharLine(charData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
22,23
25,26
25,27
25,28
26,27
27,28
27,29
29,30
29,31
31,32
32,33
34,35
35,36
35,37
37,38
37,39
39,40
40,41
42,43
42,44
43,44
44,45
44,46
46,47
46,48
48,49
49,50
49,51
50,51
50,52
53,54
55,56
56,57
56,58
57,58
59,60
-----nextToken-----
2,4,8,10,14,16,20,23,24,28,30,33,36,38,41,45,47,51,52,54,58,60
-----computeFrom-----
12,13
12,14
18,19
18,20
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_large_31_bad(){    short data;    /* Initialize data */    data = -1;    /* FLAW: Use a number larger than CHAR_MAX */    data = CHAR_MAX + 1;    {        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
void
CWE197_Numeric_Truncation_Error__short_large_31_bad()
CWE197_Numeric_Truncation_Error__short_large_31_bad
{    short data;    /* Initialize data */    data = -1;    /* FLAW: Use a number larger than CHAR_MAX */    data = CHAR_MAX + 1;    {        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
data = CHAR_MAX + 1;
data = CHAR_MAX + 1
data
data
CHAR_MAX + 1
CHAR_MAX
CHAR_MAX
1
{        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }
short dataCopy = data;
short dataCopy = data;
short
dataCopy = data
dataCopy
= data
data
data
short data = dataCopy;
short data = dataCopy;
short
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(12,20,0)
(14,23,0)
(5,6,0)
(9,15,0)
(8,14,0)
(20,23,0)
(27,20,0)
(26,0,0)
(9,0,0)
(0,9,0)
(29,23,0)
(24,9,0)
(13,6,0)
(28,9,0)
(3,17,0)
(0,18,0)
(25,28,0)
(17,5,0)
(17,20,0)
(22,6,0)
(16,15,0)
(15,20,0)
(4,13,0)
(21,5,0)
(5,20,0)
(6,13,0)
(19,17,0)
(1,8,0)
(2,13,0)
(14,8,0)
(0,17,0)
(10,14,0)
(11,5,0)
(28,15,0)
(6,23,0)
(18,0,0)
(8,1,1)
(9,0,1)
(28,9,1)
(5,6,1)
(17,19,1)
(19,3,1)
(14,8,1)
(22,14,1)
(13,2,1)
(0,26,1)
(17,5,1)
(26,24,1)
(11,6,1)
(21,11,1)
(25,9,1)
(24,17,1)
(0,18,1)
(0,17,1)
(28,25,1)
(6,13,1)
(3,5,1)
(7,28,1)
(5,21,1)
(1,10,1)
(4,22,1)
(2,4,1)
(0,18,2)
(17,5,2)
(5,6,2)
(9,0,2)
(14,8,2)
(6,13,2)
(0,17,2)
(28,9,2)
-----------------------------------
(0,(char)
(1,1)
(2,1)
(3,data)
(4,CHAR_MAX)
(5,dataCopy = data)
(6,data = CHAR_MAX + 1)
(7,RET)
(8,-1)
(9,charData = (char)
(10,data)
(11,dataCopy)
(12,data)
(13,CHAR_MAX + 1)
(14,data = -1)
(15,)
(16,charData)
(17,data = dataCopy)
(18,char)
(19,dataCopy)
(20,)
(21,data)
(22,data)
(23,)
(24,charData)
(25,charData)
(26,data)
(27,dataCopy)
(28,printHexCharLine(charData)
(29,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^