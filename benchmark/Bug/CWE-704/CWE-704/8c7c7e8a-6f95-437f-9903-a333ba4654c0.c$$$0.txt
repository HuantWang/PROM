-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_34_bad()
{
    int data;
    CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_34_unionType myUnion;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Set data to a random value */
    data = RAND32();
    myUnion.unionFirst = data;
    {
        int data = myUnion.unionSecond;
        {
            char source[100];
            char dest[100] = "";
            memset(source, 'A', 100-1);
            source[100-1] = '\0';
            if (data < 100)
            {
                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
                 * the sign conversion could result in a very large number */
                memmove(dest, source, data);
                dest[data] = '\0'; /* NULL terminate */
            }
            printLine(dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
23,24
24,25
24,26
25,26
27,28
28,29
30,31
31,32
31,33
32,33
32,34
33,34
36,37
38,39
38,40
39,40
40,41
40,42
42,43
42,44
44,45
45,46
45,47
46,47
49,50
49,51
49,52
49,53
49,54
49,55
50,51
51,52
51,53
53,54
53,55
55,56
57,58
58,59
58,60
60,61
60,62
60,63
62,63
64,65
66,67
67,68
67,69
67,70
67,71
68,69
70,71
73,74
73,75
76,77
77,78
77,79
78,79
78,80
79,80
81,82
81,83
85,86
85,87
86,87
86,88
87,88
90,91
90,92
91,92
92,93
92,94
92,95
92,96
93,94
95,96
97,98
99,100
101,102
102,103
102,104
103,104
103,105
104,105
106,107
109,110
110,111
110,112
111,112
113,114
-----nextToken-----
2,4,8,10,14,16,20,22,26,29,34,35,37,41,43,47,48,52,54,56,59,61,63,65,69,71,72,74,75,80,82,83,84,88,89,94,96,98,100,105,107,108,112,114
-----computeFrom-----
18,19
18,20
24,25
24,26
31,32
31,33
73,74
73,75
77,78
77,79
81,82
81,83
86,87
86,88
102,103
102,104
-----guardedBy-----
88,107
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_34_bad(){    int data;    CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_34_unionType myUnion;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_34_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_34_bad
{    int data;    CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_34_unionType myUnion;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }    }}
int data;
int data;
int
data
data
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_34_unionType myUnion;
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_34_unionType myUnion;
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_34_unionType
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_34_unionType
myUnion
myUnion
data = -1;
data = -1
data
data
-1
1
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }    }
int data = myUnion.unionSecond;
int data = myUnion.unionSecond;
int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }
data < 100
data
data
100
{                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(11,15,0)
(37,25,0)
(13,30,0)
(20,38,0)
(2,37,0)
(23,32,0)
(1,12,0)
(15,51,0)
(36,38,0)
(18,1,0)
(16,5,0)
(0,37,0)
(3,32,0)
(28,4,0)
(44,25,0)
(34,25,0)
(21,11,0)
(22,25,0)
(37,40,0)
(4,28,0)
(6,40,0)
(31,23,0)
(56,32,0)
(42,16,0)
(1,38,0)
(54,4,0)
(43,32,0)
(55,3,0)
(57,5,0)
(45,38,0)
(5,16,0)
(16,3,0)
(24,32,0)
(11,38,0)
(15,38,0)
(39,34,0)
(23,40,0)
(29,34,0)
(12,1,0)
(41,20,0)
(19,25,0)
(10,13,0)
(53,19,0)
(34,13,0)
(14,12,0)
(27,22,0)
(34,40,0)
(25,19,0)
(37,30,0)
(25,20,0)
(7,47,0)
(4,32,0)
(17,22,0)
(40,32,0)
(46,37,0)
(35,47,0)
(32,20,0)
(51,15,0)
(26,28,0)
(49,15,0)
(9,19,0)
(50,5,0)
(47,11,0)
(33,40,0)
(48,28,0)
(8,4,0)
(6,25,1)
(11,21,1)
(14,18,1)
(39,37,1)
(16,5,1)
(33,6,1)
(11,15,1)
(37,0,1)
(34,40,1)
(31,22,1)
(51,49,1)
(48,26,1)
(21,47,1)
(42,4,1)
(15,51,1)
(37,25,1)
(49,1,1)
(50,42,1)
(12,14,1)
(23,40,1)
(37,40,1)
(3,55,1)
(1,12,1)
(46,2,1)
(34,25,1)
(44,11,1)
(26,8,1)
(4,28,1)
(17,3,1)
(47,35,1)
(19,53,1)
(53,9,1)
(13,10,1)
(25,19,1)
(0,46,1)
(27,17,1)
(2,22,1)
(22,27,1)
(22,25,1)
(23,31,1)
(34,29,1)
(31,13,1)
(7,15,1)
(55,16,1)
(40,33,1)
(5,57,1)
(35,7,1)
(29,39,1)
(52,23,1)
(10,34,1)
(57,50,1)
(9,44,1)
(54,40,1)
(28,48,1)
(8,54,1)
(22,25,2)
(10,22,2)
(23,40,2)
(46,22,2)
(39,22,2)
(16,5,2)
(11,15,2)
(13,22,2)
(15,51,2)
(0,22,2)
(37,40,2)
(37,25,2)
(34,25,2)
(29,22,2)
(34,22,2)
(37,22,2)
(1,12,2)
(2,22,2)
(4,28,2)
(34,40,2)
(25,19,2)
-----------------------------------
(0,data)
(1,data = -1)
(2,dest)
(3,source[100-1] = \\\'\\\\0\\\')
(4,memset(source, \\\'A\\\', 100-1)
(5,100-1)
(6,dest)
(7,myUnion)
(8,\\\'A\\\')
(9,myUnion)
(10,\\\'\\\\0\\\')
(11,myUnion.unionFirst = data)
(12,-1)
(13,dest[data] = \\\'\\\\0\\\')
(14,1)
(15,data = RAND32()
(16,source[100-1])
(17,data)
(18,data)
(19,myUnion.unionSecond)
(20,)
(21,data)
(22,data < 100)
(23,printLine(dest)
(24,if (data < 100)
(25,data = myUnion.unionSecond)
(26,100)
(27,100)
(28,100-1)
(29,data)
(30,)
(31,dest)
(32,)
(33,"")
(34,dest[data])
(35,unionFirst)
(36,myUnion)
(37,memmove(dest, source, data)
(38,)
(39,dest)
(40,dest[100] = "")
(41,data)
(42,source)
(43,dest)
(44,data)
(45,data)
(46,source)
(47,myUnion.unionFirst)
(48,1)
(49,data)
(50,100)
(51,RAND32()
(52,RET)
(53,unionSecond)
(54,source)
(55,\\\'\\\\0\\\')
(56,source)
(57,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^