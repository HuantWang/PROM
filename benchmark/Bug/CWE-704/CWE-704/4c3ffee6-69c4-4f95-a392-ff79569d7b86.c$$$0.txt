-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_05_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,16,19,24,26,27,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_05_bad(){    int data;    /* Initialize data */    data = -1;    if(staticTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_05_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_05_bad
{    int data;    /* Initialize data */    data = -1;    if(staticTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(staticTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(34,48,0)
(46,18,0)
(24,18,0)
(32,39,0)
(11,47,0)
(45,11,0)
(33,46,0)
(30,47,0)
(4,9,0)
(12,37,0)
(19,15,0)
(18,46,0)
(14,1,0)
(9,22,0)
(22,46,0)
(21,37,0)
(22,9,0)
(48,11,0)
(1,42,0)
(36,3,0)
(37,47,0)
(10,5,0)
(17,47,0)
(1,37,0)
(38,20,0)
(9,8,0)
(41,22,0)
(3,47,0)
(35,5,0)
(44,2,0)
(25,42,0)
(5,3,0)
(40,38,0)
(1,46,0)
(28,47,0)
(15,37,0)
(6,2,0)
(48,2,0)
(43,38,0)
(47,23,0)
(38,37,0)
(42,20,0)
(27,38,0)
(39,46,0)
(49,1,0)
(7,23,0)
(46,23,0)
(16,23,0)
(26,39,0)
(3,5,0)
(38,46,0)
(0,9,0)
(15,47,0)
(13,3,0)
(2,48,0)
(31,46,1)
(15,19,1)
(26,11,1)
(12,31,1)
(19,39,1)
(14,38,1)
(46,18,1)
(1,37,1)
(19,42,1)
(36,13,1)
(41,4,1)
(0,31,1)
(21,12,1)
(40,43,1)
(4,0,1)
(38,37,1)
(18,24,1)
(34,3,1)
(5,10,1)
(48,2,1)
(11,45,1)
(32,26,1)
(10,35,1)
(42,25,1)
(1,46,1)
(29,15,1)
(24,33,1)
(6,44,1)
(35,36,1)
(25,1,1)
(37,21,1)
(22,46,1)
(2,6,1)
(9,22,1)
(44,34,1)
(45,48,1)
(39,32,1)
(27,39,1)
(22,41,1)
(43,27,1)
(3,5,1)
(38,46,1)
(15,37,1)
(49,14,1)
(1,49,1)
(12,9,1)
(38,40,1)
(39,46,1)
(13,37,1)
(27,39,2)
(1,39,2)
(42,39,2)
(41,31,2)
(9,31,2)
(1,46,2)
(1,37,2)
(3,5,2)
(14,39,2)
(15,37,2)
(43,39,2)
(38,46,2)
(9,22,2)
(38,37,2)
(40,39,2)
(38,39,2)
(4,31,2)
(49,39,2)
(0,31,2)
(25,39,2)
(22,31,2)
(22,46,2)
(48,2,2)
(46,18,2)
(39,46,2)
-----------------------------------
(0,stdin)
(1,dest[data])
(2,100-1)
(3,memset(source, \\\'A\\\', 100-1)
(4,"%d")
(5,100-1)
(6,1)
(7,data)
(8,)
(9,fscanf(stdin, "%d", &data)
(10,1)
(11,source[100-1] = \\\'\\\\0\\\')
(12,dest)
(13,source)
(14,dest)
(15,printLine(dest)
(16,if(staticTrue)
(17,source)
(18,-1)
(19,dest)
(20,)
(21,"")
(22,&data)
(23,)
(24,1)
(25,\\\'\\\\0\\\')
(26,data)
(27,dest)
(28,if (data < 100)
(29,RET)
(30,dest)
(31,staticTrue)
(32,100)
(33,data)
(34,source)
(35,100)
(36,\\\'A\\\')
(37,dest[100] = "")
(38,memcpy(dest, source, data)
(39,data < 100)
(40,data)
(41,data)
(42,dest[data] = \\\'\\\\0\\\')
(43,source)
(44,100)
(45,\\\'\\\\0\\\')
(46,data = -1)
(47,)
(48,source[100-1])
(49,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^