-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__rand_malloc_61_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    data = CWE194_Unexpected_Sign_Extension__rand_malloc_61b_badSource(data);
    /* Assume we want to allocate a relatively small buffer */
    if (data < 100)
    {
        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,
         * the conversion will cause malloc() to allocate a very large amount of data or fail */
        char * dataBuffer = (char *)malloc(data);
        /* Do something with dataBuffer */
        memset(dataBuffer, 'A', data-1);
        dataBuffer[data-1] = '\0';
        printLine(dataBuffer);
        free(dataBuffer);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
23,24
25,26
25,27
26,27
26,28
27,28
30,31
30,32
30,33
30,34
30,35
31,32
32,33
32,34
34,35
34,36
34,37
37,38
38,39
38,40
39,40
39,41
41,42
43,44
43,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
56,57
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
65,66
69,70
70,71
70,72
71,72
73,74
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,8,10,14,15,19,22,24,28,29,33,35,36,40,42,45,47,51,53,54,57,58,63,66,67,68,72,74,78,80
-----computeFrom-----
12,13
12,14
17,18
17,19
26,27
26,28
55,56
55,57
60,61
60,62
64,65
64,66
-----guardedBy-----
28,66
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__rand_malloc_61_bad(){    short data;    /* Initialize data */    data = 0;    data = CWE194_Unexpected_Sign_Extension__rand_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
void
CWE194_Unexpected_Sign_Extension__rand_malloc_61_bad()
CWE194_Unexpected_Sign_Extension__rand_malloc_61_bad
{    short data;    /* Initialize data */    data = 0;    data = CWE194_Unexpected_Sign_Extension__rand_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
data = CWE194_Unexpected_Sign_Extension__rand_malloc_61b_badSource(data);
data = CWE194_Unexpected_Sign_Extension__rand_malloc_61b_badSource(data)
data
data
CWE194_Unexpected_Sign_Extension__rand_malloc_61b_badSource(data)
CWE194_Unexpected_Sign_Extension__rand_malloc_61b_badSource
CWE194_Unexpected_Sign_Extension__rand_malloc_61b_badSource
data
data
if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
data < 100
data
data
100
{        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
char * dataBuffer = (char *)malloc(data);
char * dataBuffer = (char *)malloc(data);
char
* dataBuffer = (char *)malloc(data)
*
dataBuffer
= (char *)malloc(data)
(char *)malloc(data)
char *
char
*
*
malloc(data)
malloc
malloc
data
data
memset(dataBuffer, 'A', data-1);
memset(dataBuffer, 'A', data-1)
memset
memset
dataBuffer
dataBuffer
'A'
data-1
data
data
1
dataBuffer[data-1] = '\0';
dataBuffer[data-1] = '\0'
dataBuffer[data-1]
dataBuffer
dataBuffer
data-1
data
data
1
'\0'
printLine(dataBuffer);
printLine(dataBuffer)
printLine
printLine
dataBuffer
dataBuffer
free(dataBuffer);
free(dataBuffer)
free
free
dataBuffer
dataBuffer
-----joern-----
(32,3,0)
(1,4,0)
(36,4,0)
(27,23,0)
(4,7,0)
(30,42,0)
(42,4,0)
(3,27,0)
(40,23,0)
(10,0,0)
(31,24,0)
(19,39,0)
(34,39,0)
(17,23,0)
(35,27,0)
(16,27,0)
(11,29,0)
(28,38,0)
(12,42,0)
(20,1,0)
(21,39,0)
(18,12,0)
(27,3,0)
(9,38,0)
(7,16,0)
(42,21,0)
(13,12,0)
(3,0,0)
(0,23,0)
(5,16,0)
(8,21,0)
(12,27,0)
(34,4,0)
(15,7,0)
(4,39,0)
(2,0,0)
(1,38,0)
(29,27,0)
(38,27,0)
(24,4,0)
(6,29,0)
(24,39,0)
(42,12,0)
(14,1,0)
(1,39,0)
(7,15,0)
(16,7,0)
(26,34,0)
(7,4,0)
(38,1,0)
(27,3,1)
(3,0,1)
(18,30,1)
(24,31,1)
(38,27,1)
(7,16,1)
(29,6,1)
(5,36,1)
(3,32,1)
(12,27,1)
(36,29,1)
(13,18,1)
(28,14,1)
(38,9,1)
(22,34,1)
(4,7,1)
(35,0,1)
(20,4,1)
(14,20,1)
(42,4,1)
(7,15,1)
(6,11,1)
(22,29,1)
(29,27,1)
(1,38,1)
(42,12,1)
(16,27,1)
(1,4,1)
(8,42,1)
(21,8,1)
(32,35,1)
(34,26,1)
(9,28,1)
(11,27,1)
(30,1,1)
(24,4,1)
(0,10,1)
(34,4,1)
(10,2,1)
(12,13,1)
(31,21,1)
(16,5,1)
(26,24,1)
(18,29,2)
(12,27,2)
(38,29,2)
(16,29,2)
(26,29,2)
(36,29,2)
(42,29,2)
(12,29,2)
(42,4,2)
(14,29,2)
(28,29,2)
(1,29,2)
(24,4,2)
(21,29,2)
(9,29,2)
(31,29,2)
(4,7,2)
(1,38,2)
(8,29,2)
(34,4,2)
(20,29,2)
(13,29,2)
(42,12,2)
(38,27,2)
(7,29,2)
(4,29,2)
(7,15,2)
(7,16,2)
(24,29,2)
(34,29,2)
(27,3,2)
(3,0,2)
(29,27,2)
(16,27,2)
(1,4,2)
(5,29,2)
(30,29,2)
-----------------------------------
(0,data = 0)
(1,memset(dataBuffer, \'A\', data-1)
(2,data)
(3,CWE194_Unexpected_Sign_Extension__rand_malloc_61b_badSource(data)
(4,* dataBuffer = (char *)
(5,data)
(6,100)
(7,(char *)
(8,'\\\\0')
(9,1)
(10,0)
(11,data)
(12,data-1)
(13,1)
(14,'A')
(15,char *)
(16,malloc(data)
(17,if (data < 100)
(18,data)
(19,dataBuffer)
(20,dataBuffer)
(21,dataBuffer[data-1] = \'\\\\0\')
(22,RET)
(23,)
(24,printLine(dataBuffer)
(25,\'A\')
(26,dataBuffer)
(27,data = CWE194_Unexpected_Sign_Extension__rand_malloc_61b_badSource(data)
(28,data)
(29,data < 100)
(30,dataBuffer)
(31,dataBuffer)
(32,data)
(33,dataBuffer[data-1] = '\\\\0')
(34,free(dataBuffer)
(35,data)
(36,dataBuffer)
(37,\'\\\\0\')
(38,data-1)
(39,)
(40,data)
(41,memset(dataBuffer, 'A', data-1)
(42,dataBuffer[data-1])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^