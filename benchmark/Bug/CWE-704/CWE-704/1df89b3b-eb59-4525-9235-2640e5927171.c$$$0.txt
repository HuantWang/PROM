-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_07_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(staticFive==5)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
27,28
29,30
29,31
29,32
29,33
29,34
29,35
30,31
31,32
31,33
33,34
33,35
35,36
37,38
38,39
38,40
40,41
40,42
40,43
42,43
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
53,55
56,57
57,58
57,59
58,59
58,60
59,60
61,62
61,63
65,66
65,67
66,67
66,68
67,68
70,71
70,72
71,72
72,73
72,74
72,75
72,76
73,74
75,76
77,78
79,80
81,82
82,83
82,84
83,84
83,85
84,85
86,87
89,90
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,8,10,14,16,20,21,26,28,32,34,36,39,41,43,45,49,51,52,54,55,60,62,63,64,68,69,74,76,78,80,85,87,88,92,94
-----computeFrom-----
12,13
12,14
18,19
18,20
24,25
24,26
53,54
53,55
57,58
57,59
61,62
61,63
66,67
66,68
82,83
82,84
-----guardedBy-----
68,87
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_07_bad(){    int data;    /* Initialize data */    data = -1;    if(staticFive==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_07_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_07_bad
{    int data;    /* Initialize data */    data = -1;    if(staticFive==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(staticFive==5)    {        /* FLAW: Use a negative number */        data = -1;    }
staticFive==5
staticFive
staticFive
5
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(15,46,0)
(17,50,0)
(10,38,0)
(8,21,0)
(20,23,0)
(33,3,0)
(5,47,0)
(40,50,0)
(29,38,0)
(34,23,0)
(1,31,0)
(5,23,0)
(19,23,0)
(27,47,0)
(13,38,0)
(28,42,0)
(32,22,0)
(47,5,0)
(36,5,0)
(11,15,0)
(18,45,0)
(17,20,0)
(39,1,0)
(23,45,0)
(9,20,0)
(26,22,0)
(35,23,0)
(22,23,0)
(41,46,0)
(38,22,0)
(15,28,0)
(30,17,0)
(46,45,0)
(46,2,0)
(38,42,0)
(2,46,0)
(48,1,0)
(14,48,0)
(44,21,0)
(1,48,0)
(38,1,0)
(15,22,0)
(3,46,0)
(16,2,0)
(32,23,0)
(38,46,0)
(37,32,0)
(50,17,0)
(24,3,0)
(6,47,0)
(12,22,0)
(4,28,0)
(25,15,0)
(15,1,0)
(43,5,0)
(3,1,0)
(7,50,0)
(49,45,0)
(27,43,1)
(7,40,1)
(25,11,1)
(3,24,1)
(38,22,1)
(38,1,1)
(21,44,1)
(3,1,1)
(33,20,1)
(28,4,1)
(29,13,1)
(38,10,1)
(14,39,1)
(15,22,1)
(3,46,1)
(44,8,1)
(39,21,1)
(17,50,1)
(22,12,1)
(6,27,1)
(15,1,1)
(47,6,1)
(1,48,1)
(38,46,1)
(15,46,1)
(13,3,1)
(0,32,1)
(32,22,1)
(37,28,1)
(4,15,1)
(5,47,1)
(50,7,1)
(26,1,1)
(10,29,1)
(12,26,1)
(20,9,1)
(16,41,1)
(48,14,1)
(26,21,1)
(15,25,1)
(32,37,1)
(2,16,1)
(11,38,1)
(24,33,1)
(46,2,1)
(8,46,1)
(30,5,1)
(9,17,1)
(37,3,1)
(40,30,1)
(43,36,1)
(36,22,1)
(13,3,2)
(17,50,2)
(4,3,2)
(38,22,2)
(5,47,2)
(1,21,2)
(1,48,2)
(25,3,2)
(29,3,2)
(14,21,2)
(10,3,2)
(28,3,2)
(15,22,2)
(39,21,2)
(15,1,2)
(46,2,2)
(15,46,2)
(11,3,2)
(32,22,2)
(38,46,2)
(15,3,2)
(3,1,2)
(38,3,2)
(48,21,2)
(38,1,2)
(3,46,2)
-----------------------------------
(0,RET)
(1,data = -1)
(2,-1)
(3,data < 100)
(4,\\\'\\\\0\\\')
(5,memset(source, \\\'A\\\', 100-1)
(6,1)
(7,1)
(8,staticFive)
(9,\\\'\\\\0\\\')
(10,data)
(11,dest)
(12,"")
(13,dest)
(14,1)
(15,dest[data])
(16,1)
(17,source[100-1])
(18,if(staticFive==5)
(19,if (data < 100)
(20,source[100-1] = \\\'\\\\0\\\')
(21,staticFive==5)
(22,dest[100] = "")
(23,)
(24,100)
(25,data)
(26,dest)
(27,100)
(28,dest[data] = \\\'\\\\0\\\')
(29,source)
(30,source)
(31,)
(32,printLine(dest)
(33,data)
(34,source)
(35,dest)
(36,source)
(37,dest)
(38,memmove(dest, source, data)
(39,data)
(40,100)
(41,data)
(42,)
(43,\\\'A\\\')
(44,5)
(45,)
(46,data = -1)
(47,100-1)
(48,-1)
(49,data)
(50,100-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^