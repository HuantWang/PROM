-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_44_bad()
{
    int data;
    /* define a function pointer */
    void (*funcPtr) (int) = badSink;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Set data to a random value */
    data = RAND32();
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
15,16
15,17
18,19
18,20
20,21
22,23
23,24
25,26
26,27
26,28
27,28
29,30
31,32
32,33
32,34
33,34
35,36
36,37
38,39
39,40
39,41
40,41
42,43
-----nextToken-----
2,4,8,10,13,16,17,19,21,24,28,30,34,37,41,43
-----computeFrom-----
26,27
26,28
32,33
32,34
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_44_bad(){    int data;    /* define a function pointer */    void (*funcPtr) (int) = badSink;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    /* use the function pointer */    funcPtr(data);}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_44_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_44_bad
{    int data;    /* define a function pointer */    void (*funcPtr) (int) = badSink;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    /* use the function pointer */    funcPtr(data);}
int data;
int data;
int
data
data
void (*funcPtr) (int) = badSink;
void (*funcPtr) (int) = badSink;
void
(*funcPtr) (int) = badSink
*funcPtr
*
funcPtr
int
int


= badSink
badSink
badSink
data = -1;
data = -1
data
data
-1
1
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(15,9,0)
(3,2,0)
(13,4,0)
(0,11,0)
(9,11,0)
(8,10,0)
(10,11,0)
(4,6,0)
(12,6,0)
(2,5,0)
(5,2,0)
(6,11,0)
(2,11,0)
(9,2,0)
(6,4,0)
(14,11,0)
(7,10,0)
(4,13,1)
(9,2,1)
(10,8,1)
(6,4,1)
(15,2,1)
(9,15,1)
(5,3,1)
(1,9,1)
(3,6,1)
(8,7,1)
(12,10,1)
(13,12,1)
(2,5,1)
(9,2,2)
(6,4,2)
(2,5,2)
-----------------------------------
(0,funcPtr)
(1,RET)
(2,data = RAND32()
(3,data)
(4,-1)
(5,RAND32()
(6,data = -1)
(7,funcPtr)
(8,badSink)
(9,funcPtr(data)
(10,(*funcPtr)
(11,)
(12,data)
(13,1)
(14,data)
(15,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^