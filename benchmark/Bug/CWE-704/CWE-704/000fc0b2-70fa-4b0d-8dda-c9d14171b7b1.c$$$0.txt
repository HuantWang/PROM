-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fgets_memcpy_45_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* FLAW: Use a value input from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to short */
            data = (short)atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    CWE194_Unexpected_Sign_Extension__fgets_memcpy_45_badData = data;
    badSink();
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
18,20
20,21
20,22
20,23
22,23
23,24
25,26
27,28
27,29
27,30
28,29
28,30
29,30
29,31
29,32
29,33
30,31
32,33
34,35
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
45,47
46,47
46,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
60,61
61,62
61,63
62,63
64,65
66,67
67,68
68,69
-----nextToken-----
2,4,8,10,14,15,19,21,24,26,31,33,35,37,39,44,47,48,51,53,58,59,63,65,69
-----computeFrom-----
12,13
12,14
28,29
28,30
42,43
42,44
61,62
61,63
-----guardedBy-----
33,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fgets_memcpy_45_bad(){    short data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* FLAW: Use a value input from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    CWE194_Unexpected_Sign_Extension__fgets_memcpy_45_badData = data;    badSink();}
void
CWE194_Unexpected_Sign_Extension__fgets_memcpy_45_bad()
CWE194_Unexpected_Sign_Extension__fgets_memcpy_45_bad
{    short data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* FLAW: Use a value input from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    CWE194_Unexpected_Sign_Extension__fgets_memcpy_45_badData = data;    badSink();}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* FLAW: Use a value input from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to short */            data = (short)atoi(inputBuffer);        }
data = (short)atoi(inputBuffer);
data = (short)atoi(inputBuffer)
data
data
(short)atoi(inputBuffer)
short
short

atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
CWE194_Unexpected_Sign_Extension__fgets_memcpy_45_badData = data;
CWE194_Unexpected_Sign_Extension__fgets_memcpy_45_badData = data
CWE194_Unexpected_Sign_Extension__fgets_memcpy_45_badData
CWE194_Unexpected_Sign_Extension__fgets_memcpy_45_badData
data
data
badSink();
badSink()
badSink
badSink
-----joern-----
(4,9,0)
(12,11,0)
(13,24,0)
(15,4,0)
(3,11,0)
(16,11,0)
(18,13,0)
(14,29,0)
(26,17,0)
(10,5,0)
(21,17,0)
(26,5,0)
(29,0,0)
(29,25,0)
(20,24,0)
(8,3,0)
(30,13,0)
(27,26,0)
(13,3,0)
(22,13,0)
(5,17,0)
(31,17,0)
(26,0,0)
(14,3,0)
(19,5,0)
(28,14,0)
(2,3,0)
(25,29,0)
(24,13,0)
(11,17,0)
(6,0,0)
(0,29,0)
(29,14,0)
(23,26,0)
(0,1,0)
(29,14,1)
(13,18,1)
(5,19,1)
(29,25,1)
(15,24,1)
(26,23,1)
(0,29,1)
(31,26,1)
(24,20,1)
(8,5,1)
(4,15,1)
(19,10,1)
(2,8,1)
(13,3,1)
(7,31,1)
(27,4,1)
(26,5,1)
(27,0,1)
(30,22,1)
(23,27,1)
(28,6,1)
(20,13,1)
(26,0,1)
(6,24,1)
(14,28,1)
(14,3,1)
(24,13,1)
(22,3,1)
(18,30,1)
(3,2,1)
(15,24,2)
(29,24,2)
(24,13,2)
(13,3,2)
(26,5,2)
(28,24,2)
(29,25,2)
(29,14,2)
(4,24,2)
(26,0,2)
(6,24,2)
(0,29,2)
(14,3,2)
(14,24,2)
(0,24,2)
-----------------------------------
(0,data = (short)
(1,)
(2,"")
(3,inputBuffer[CHAR_ARRAY_SIZE] = "")
(4,printLine("fgets()
(5,data = 0)
(6,data)
(7,RET)
(8,inputBuffer)
(9,)
(10,data)
(11,)
(12,inputBuffer)
(13,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(14,atoi(inputBuffer)
(15,"fgets()
(16,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(17,)
(18,stdin)
(19,0)
(20,NULL)
(21,data)
(22,inputBuffer)
(23,data)
(24,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(25,short)
(26,CWE194_Unexpected_Sign_Extension__fgets_memcpy_45_badData = data)
(27,CWE194_Unexpected_Sign_Extension__fgets_memcpy_45_badData)
(28,inputBuffer)
(29,(short)
(30,CHAR_ARRAY_SIZE)
(31,badSink()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^