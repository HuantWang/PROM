-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_large_to_short_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = -1;
    {
        int data = *dataPtr1;
        /* FLAW: Use a number larger than SHRT_MAX */
        data = SHRT_MAX + 5;
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
            short shortData = (short)data;
            printShortLine(shortData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
35,36
37,38
37,39
37,40
38,39
39,40
39,41
41,42
41,43
43,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
51,53
52,53
55,56
56,57
56,58
57,58
58,59
60,61
62,63
62,64
63,64
64,65
64,66
66,67
66,68
68,69
69,70
70,71
72,73
72,74
73,74
74,75
74,76
76,77
76,78
78,79
79,80
79,81
80,81
80,82
83,84
85,86
86,87
86,88
87,88
89,90
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,36,40,42,46,50,53,54,59,61,65,67,71,75,77,81,82,84,88,90
-----computeFrom-----
32,33
32,34
48,49
48,50
51,52
51,53
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_large_to_short_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        /* FLAW: Use a number larger than SHRT_MAX */        data = SHRT_MAX + 5;        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_large_to_short_32_bad()
CWE197_Numeric_Truncation_Error__int_large_to_short_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        /* FLAW: Use a number larger than SHRT_MAX */        data = SHRT_MAX + 5;        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = -1;
data = -1
data
data
-1
1
{        int data = *dataPtr1;        /* FLAW: Use a number larger than SHRT_MAX */        data = SHRT_MAX + 5;        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = SHRT_MAX + 5;
data = SHRT_MAX + 5
data
data
SHRT_MAX + 5
SHRT_MAX
SHRT_MAX
5
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(18,26,0)
(29,39,0)
(0,2,0)
(8,15,0)
(30,38,0)
(4,31,0)
(33,16,0)
(12,15,0)
(26,43,0)
(43,26,0)
(11,3,0)
(14,39,0)
(45,19,0)
(6,42,0)
(35,2,0)
(38,3,0)
(34,26,0)
(39,14,0)
(16,23,0)
(42,6,0)
(40,42,0)
(17,19,0)
(15,14,0)
(16,7,0)
(31,2,0)
(27,38,0)
(39,19,0)
(22,3,0)
(9,7,0)
(13,26,0)
(23,22,0)
(26,3,0)
(7,23,0)
(24,6,0)
(0,42,0)
(41,27,0)
(42,2,0)
(34,31,0)
(7,15,0)
(32,3,0)
(14,22,0)
(2,3,0)
(18,0,0)
(5,23,0)
(46,0,0)
(19,3,0)
(25,45,0)
(15,8,0)
(1,3,0)
(38,27,0)
(28,34,0)
(37,43,0)
(44,22,0)
(31,34,0)
(10,6,0)
(15,7,0)
(21,14,0)
(19,45,0)
(36,18,0)
(21,0,1)
(18,36,1)
(42,6,1)
(34,26,1)
(15,12,1)
(15,8,1)
(18,26,1)
(29,21,1)
(0,42,1)
(9,14,1)
(0,46,1)
(12,9,1)
(38,27,1)
(40,31,1)
(43,37,1)
(25,17,1)
(28,4,1)
(16,7,1)
(39,29,1)
(16,33,1)
(27,41,1)
(46,18,1)
(15,14,1)
(7,15,1)
(33,7,1)
(20,16,1)
(19,45,1)
(37,13,1)
(6,24,1)
(14,39,1)
(10,40,1)
(41,30,1)
(30,19,1)
(26,43,1)
(31,34,1)
(45,25,1)
(17,26,1)
(36,42,1)
(34,28,1)
(24,10,1)
(39,19,1)
(4,38,1)
(42,6,2)
(34,26,2)
(16,7,2)
(31,34,2)
(38,27,2)
(19,45,2)
(7,15,2)
(26,43,2)
(0,42,2)
(14,39,2)
(39,19,2)
(15,14,2)
(18,26,2)
(15,8,2)
-----------------------------------
(0,*dataPtr1 = data)
(1,data)
(2,)
(3,)
(4,data)
(5,shortData)
(6,SHRT_MAX + 5)
(7,shortData = (short)
(8,short)
(9,shortData)
(10,SHRT_MAX)
(11,dataPtr2)
(12,data)
(13,dataPtr1)
(14,data = *dataPtr2)
(15,(short)
(16,printShortLine(shortData)
(17,dataPtr2)
(18,*dataPtr1)
(19,*dataPtr2 = &data)
(20,RET)
(21,data)
(22,)
(23,)
(24,5)
(25,data)
(26,*dataPtr1 = &data)
(27,-1)
(28,dataPtr1)
(29,dataPtr2)
(30,data)
(31,data = *dataPtr1)
(32,dataPtr1)
(33,shortData)
(34,*dataPtr1)
(35,data)
(36,dataPtr1)
(37,data)
(38,data = -1)
(39,*dataPtr2)
(40,data)
(41,1)
(42,data = SHRT_MAX + 5)
(43,&data)
(44,data)
(45,&data)
(46,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^