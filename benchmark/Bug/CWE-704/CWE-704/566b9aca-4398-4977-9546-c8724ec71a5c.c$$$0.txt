-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_bad()
{
    int data;
    CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType myUnion;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Set data to a random value */
    data = RAND32();
    myUnion.unionFirst = data;
    {
        int data = myUnion.unionSecond;
        {
            char source[100];
            char dest[100] = "";
            memset(source, 'A', 100-1);
            source[100-1] = '\0';
            if (data < 100)
            {
                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
                 * the sign conversion could result in a very large number */
                strncpy(dest, source, data);
                dest[data] = '\0'; /* strncpy() does not always NULL terminate */
            }
            printLine(dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
23,24
24,25
24,26
25,26
27,28
28,29
30,31
31,32
31,33
32,33
32,34
33,34
36,37
38,39
38,40
39,40
40,41
40,42
42,43
42,44
44,45
45,46
45,47
46,47
49,50
49,51
49,52
49,53
49,54
49,55
50,51
51,52
51,53
53,54
53,55
55,56
57,58
58,59
58,60
60,61
60,62
60,63
62,63
64,65
66,67
67,68
67,69
67,70
67,71
68,69
70,71
73,74
73,75
76,77
77,78
77,79
78,79
78,80
79,80
81,82
81,83
85,86
85,87
86,87
86,88
87,88
90,91
90,92
91,92
92,93
92,94
92,95
92,96
93,94
95,96
97,98
99,100
101,102
102,103
102,104
103,104
103,105
104,105
106,107
109,110
110,111
110,112
111,112
113,114
-----nextToken-----
2,4,8,10,14,16,20,22,26,29,34,35,37,41,43,47,48,52,54,56,59,61,63,65,69,71,72,74,75,80,82,83,84,88,89,94,96,98,100,105,107,108,112,114
-----computeFrom-----
18,19
18,20
24,25
24,26
31,32
31,33
73,74
73,75
77,78
77,79
81,82
81,83
86,87
86,88
102,103
102,104
-----guardedBy-----
88,107
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_bad(){    int data;    CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType myUnion;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_bad
{    int data;    CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType myUnion;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }}
int data;
int data;
int
data
data
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType myUnion;
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType myUnion;
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType
myUnion
myUnion
data = -1;
data = -1
data
data
-1
1
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }
int data = myUnion.unionSecond;
int data = myUnion.unionSecond;
int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }
data < 100
data
data
100
{                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(23,37,0)
(2,31,0)
(8,39,0)
(1,55,0)
(41,31,0)
(12,49,0)
(54,9,0)
(30,33,0)
(3,14,0)
(10,25,0)
(19,53,0)
(41,17,0)
(4,31,0)
(55,14,0)
(49,47,0)
(39,53,0)
(57,14,0)
(26,31,0)
(42,17,0)
(14,45,0)
(22,56,0)
(19,46,0)
(25,31,0)
(50,33,0)
(15,50,0)
(37,17,0)
(40,9,0)
(39,11,0)
(33,31,0)
(21,3,0)
(52,17,0)
(16,41,0)
(14,55,0)
(6,45,0)
(20,54,0)
(38,3,0)
(44,55,0)
(33,50,0)
(35,19,0)
(27,53,0)
(37,14,0)
(45,53,0)
(48,49,0)
(34,11,0)
(32,18,0)
(56,18,0)
(29,54,0)
(0,33,0)
(47,25,0)
(47,49,0)
(17,31,0)
(51,37,0)
(28,50,0)
(18,53,0)
(36,47,0)
(13,56,0)
(43,54,0)
(11,39,0)
(24,40,0)
(5,53,0)
(31,45,0)
(54,14,0)
(18,19,0)
(54,17,0)
(46,19,0)
(37,40,0)
(34,8,1)
(35,39,1)
(10,47,1)
(22,19,1)
(0,30,1)
(38,25,1)
(44,1,1)
(41,16,1)
(40,24,1)
(18,19,1)
(18,32,1)
(24,37,1)
(33,50,1)
(15,0,1)
(19,46,1)
(7,41,1)
(54,20,1)
(42,52,1)
(3,14,1)
(11,34,1)
(56,13,1)
(39,11,1)
(29,43,1)
(3,21,1)
(46,35,1)
(30,17,1)
(37,17,1)
(25,10,1)
(1,57,1)
(51,23,1)
(28,15,1)
(20,29,1)
(52,14,1)
(17,42,1)
(21,38,1)
(54,14,1)
(23,54,1)
(55,44,1)
(12,48,1)
(43,3,1)
(37,14,1)
(14,55,1)
(49,12,1)
(32,56,1)
(13,22,1)
(36,33,1)
(41,17,1)
(50,28,1)
(16,3,1)
(16,40,1)
(48,36,1)
(37,51,1)
(57,18,1)
(47,49,1)
(54,17,1)
(39,11,2)
(23,3,2)
(51,3,2)
(54,14,2)
(40,3,2)
(19,46,2)
(33,50,2)
(43,3,2)
(18,19,2)
(37,3,2)
(29,3,2)
(24,3,2)
(37,17,2)
(54,3,2)
(3,14,2)
(14,55,2)
(41,17,2)
(54,17,2)
(47,49,2)
(37,14,2)
(20,3,2)
-----------------------------------
(0,\\\'A\\\')
(1,myUnion)
(2,source)
(3,data < 100)
(4,if (data < 100)
(5,data)
(6,data)
(7,RET)
(8,data)
(9,)
(10,\\\'\\\\0\\\')
(11,-1)
(12,1)
(13,unionFirst)
(14,data = myUnion.unionSecond)
(15,100)
(16,dest)
(17,dest[100] = "")
(18,myUnion.unionFirst = data)
(19,data = RAND32()
(20,data)
(21,100)
(22,myUnion)
(23,dest)
(24,\\\'\\\\0\\\')
(25,source[100-1] = \\\'\\\\0\\\')
(26,dest)
(27,myUnion)
(28,1)
(29,source)
(30,source)
(31,)
(32,data)
(33,memset(source, \\\'A\\\', 100-1)
(34,1)
(35,data)
(36,source)
(37,dest[data])
(38,data)
(39,data = -1)
(40,dest[data] = \\\'\\\\0\\\')
(41,printLine(dest)
(42,"")
(43,dest)
(44,unionSecond)
(45,)
(46,RAND32()
(47,source[100-1])
(48,100)
(49,100-1)
(50,100-1)
(51,data)
(52,dest)
(53,)
(54,strncpy(dest, source, data)
(55,myUnion.unionSecond)
(56,myUnion.unionFirst)
(57,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^