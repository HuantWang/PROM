-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    data = CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61b_badSource(data);
    /* Assume we want to allocate a relatively small buffer */
    if (data < 100)
    {
        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,
         * the conversion will cause malloc() to allocate a very large amount of data or fail */
        char * dataBuffer = (char *)malloc(data);
        /* Do something with dataBuffer */
        memset(dataBuffer, 'A', data-1);
        dataBuffer[data-1] = '\0';
        printLine(dataBuffer);
        free(dataBuffer);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
23,24
25,26
25,27
26,27
26,28
27,28
30,31
30,32
30,33
30,34
30,35
31,32
32,33
32,34
34,35
34,36
34,37
37,38
38,39
38,40
39,40
39,41
41,42
43,44
43,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
56,57
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
65,66
69,70
70,71
70,72
71,72
73,74
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,8,10,14,15,19,22,24,28,29,33,35,36,40,42,45,47,51,53,54,57,58,63,66,67,68,72,74,78,80
-----computeFrom-----
12,13
12,14
17,18
17,19
26,27
26,28
55,56
55,57
60,61
60,62
64,65
64,66
-----guardedBy-----
28,66
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61_bad(){    short data;    /* Initialize data */    data = 0;    data = CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
void
CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61_bad()
CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61_bad
{    short data;    /* Initialize data */    data = 0;    data = CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
data = CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61b_badSource(data);
data = CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61b_badSource(data)
data
data
CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61b_badSource(data)
CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61b_badSource
CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61b_badSource
data
data
if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
data < 100
data
data
100
{        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
char * dataBuffer = (char *)malloc(data);
char * dataBuffer = (char *)malloc(data);
char
* dataBuffer = (char *)malloc(data)
*
dataBuffer
= (char *)malloc(data)
(char *)malloc(data)
char *
char
*
*
malloc(data)
malloc
malloc
data
data
memset(dataBuffer, 'A', data-1);
memset(dataBuffer, 'A', data-1)
memset
memset
dataBuffer
dataBuffer
'A'
data-1
data
data
1
dataBuffer[data-1] = '\0';
dataBuffer[data-1] = '\0'
dataBuffer[data-1]
dataBuffer
dataBuffer
data-1
data
data
1
'\0'
printLine(dataBuffer);
printLine(dataBuffer)
printLine
printLine
dataBuffer
dataBuffer
free(dataBuffer);
free(dataBuffer)
free
free
dataBuffer
dataBuffer
-----joern-----
(7,20,0)
(4,9,0)
(32,8,0)
(33,14,0)
(38,29,0)
(10,8,0)
(38,10,0)
(32,19,0)
(22,39,0)
(42,19,0)
(36,12,0)
(20,9,0)
(35,10,0)
(0,9,0)
(21,14,0)
(28,25,0)
(20,8,0)
(9,29,0)
(10,38,0)
(1,29,0)
(8,11,0)
(34,38,0)
(25,12,0)
(14,8,0)
(11,25,0)
(26,25,0)
(11,8,0)
(6,11,0)
(19,29,0)
(3,5,0)
(8,12,0)
(24,12,0)
(15,20,0)
(38,39,0)
(1,5,0)
(31,29,0)
(29,19,0)
(17,5,0)
(9,5,0)
(19,32,0)
(18,17,0)
(39,5,0)
(2,32,0)
(29,5,0)
(40,1,0)
(16,8,0)
(19,42,0)
(30,10,0)
(17,29,0)
(9,20,0)
(4,29,1)
(10,8,1)
(10,30,1)
(30,35,1)
(31,14,1)
(0,4,1)
(11,6,1)
(20,8,1)
(20,7,1)
(38,10,1)
(22,38,1)
(37,14,1)
(9,29,1)
(21,8,1)
(11,25,1)
(16,25,1)
(19,32,1)
(28,26,1)
(25,28,1)
(37,1,1)
(7,15,1)
(15,0,1)
(32,8,1)
(33,21,1)
(19,42,1)
(35,34,1)
(1,29,1)
(32,2,1)
(1,40,1)
(2,31,1)
(8,11,1)
(39,22,1)
(17,29,1)
(34,9,1)
(38,29,1)
(14,33,1)
(9,20,1)
(29,19,1)
(14,8,1)
(17,18,1)
(6,16,1)
(18,39,1)
(40,17,1)
(38,29,2)
(7,14,2)
(9,29,2)
(11,25,2)
(2,14,2)
(20,8,2)
(10,8,2)
(17,29,2)
(29,14,2)
(38,14,2)
(1,29,2)
(35,14,2)
(19,32,2)
(20,14,2)
(4,14,2)
(19,14,2)
(10,14,2)
(0,14,2)
(17,14,2)
(9,20,2)
(22,14,2)
(38,10,2)
(32,8,2)
(14,8,2)
(9,14,2)
(40,14,2)
(8,11,2)
(19,42,2)
(1,14,2)
(32,14,2)
(30,14,2)
(39,14,2)
(29,19,2)
(18,14,2)
(15,14,2)
(34,14,2)
(31,14,2)
-----------------------------------
(0,'A')
(1,free(dataBuffer)
(2,data)
(3,dataBuffer)
(4,dataBuffer)
(5,)
(6,data)
(7,1)
(8,data = CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61b_badSource(data)
(9,memset(dataBuffer, \'A\', data-1)
(10,data-1)
(11,CWE194_Unexpected_Sign_Extension__listen_socket_malloc_61b_badSource(data)
(12,)
(13,\'A\')
(14,data < 100)
(15,data)
(16,data)
(17,printLine(dataBuffer)
(18,dataBuffer)
(19,(char *)
(20,data-1)
(21,data)
(22,'\\\\0')
(23,\'\\\\0\')
(24,if (data < 100)
(25,data = 0)
(26,data)
(27,memset(dataBuffer, 'A', data-1)
(28,0)
(29,* dataBuffer = (char *)
(30,1)
(31,dataBuffer)
(32,malloc(data)
(33,100)
(34,dataBuffer)
(35,data)
(36,data)
(37,RET)
(38,dataBuffer[data-1])
(39,dataBuffer[data-1] = '\\\\0')
(40,dataBuffer)
(41,dataBuffer[data-1] = \'\\\\0\')
(42,char *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^