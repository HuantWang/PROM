-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_34_bad()
{
    int data;
    CWE197_Numeric_Truncation_Error__int_fgets_to_char_34_unionType myUnion;
    /* Initialize data */
    data = -1;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    myUnion.unionFirst = data;
    {
        int data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
            char charData = (char)data;
            printHexCharLine(charData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
23,24
23,25
24,25
25,26
25,27
27,28
27,29
27,30
29,30
30,31
32,33
34,35
34,36
34,37
35,36
35,37
36,37
36,38
36,39
36,40
37,38
39,40
41,42
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
63,64
64,65
64,66
65,66
65,67
66,67
69,70
71,72
71,73
72,73
73,74
73,75
75,76
75,77
77,78
78,79
78,80
79,80
82,83
82,84
83,84
84,85
84,86
86,87
86,88
88,89
89,90
89,91
90,91
90,92
93,94
95,96
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,8,10,14,16,20,22,26,28,31,33,38,40,42,44,46,51,54,56,61,62,67,68,70,74,76,80,81,85,87,91,92,94,98,100
-----computeFrom-----
18,19
18,20
35,36
35,37
49,50
49,51
64,65
64,66
-----guardedBy-----
40,56
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_34_bad(){    int data;    CWE197_Numeric_Truncation_Error__int_fgets_to_char_34_unionType myUnion;    /* Initialize data */    data = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_char_34_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_char_34_bad
{    int data;    CWE197_Numeric_Truncation_Error__int_fgets_to_char_34_unionType myUnion;    /* Initialize data */    data = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
int data;
int data;
int
data
data
CWE197_Numeric_Truncation_Error__int_fgets_to_char_34_unionType myUnion;
CWE197_Numeric_Truncation_Error__int_fgets_to_char_34_unionType myUnion;
CWE197_Numeric_Truncation_Error__int_fgets_to_char_34_unionType
CWE197_Numeric_Truncation_Error__int_fgets_to_char_34_unionType
myUnion
myUnion
data = -1;
data = -1
data
data
-1
1
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }
int data = myUnion.unionSecond;
int data = myUnion.unionSecond;
int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(46,16,0)
(44,37,0)
(44,42,0)
(3,9,0)
(32,40,0)
(5,21,0)
(11,9,0)
(48,12,0)
(25,39,0)
(8,19,0)
(2,1,0)
(12,48,0)
(26,44,0)
(22,48,0)
(21,19,0)
(19,21,0)
(37,20,0)
(23,43,0)
(41,39,0)
(6,20,0)
(2,9,0)
(24,12,0)
(42,3,0)
(36,47,0)
(0,14,0)
(1,9,0)
(38,37,0)
(48,29,0)
(2,12,0)
(37,44,0)
(4,9,0)
(45,37,0)
(16,9,0)
(40,42,0)
(1,47,0)
(40,44,0)
(15,16,0)
(34,29,0)
(43,20,0)
(39,2,0)
(10,42,0)
(21,29,0)
(35,29,0)
(14,28,0)
(7,3,0)
(37,38,0)
(29,16,0)
(17,2,0)
(18,43,0)
(13,21,0)
(27,21,0)
(20,43,0)
(20,3,0)
(33,1,0)
(47,1,0)
(12,31,0)
(48,22,1)
(30,40,1)
(37,45,1)
(14,0,1)
(13,27,1)
(2,1,1)
(20,43,1)
(47,36,1)
(2,12,1)
(25,41,1)
(12,48,1)
(32,44,1)
(8,21,1)
(24,19,1)
(43,23,1)
(39,25,1)
(29,34,1)
(21,29,1)
(40,32,1)
(6,2,1)
(22,24,1)
(5,29,1)
(1,47,1)
(23,18,1)
(0,19,1)
(41,14,1)
(21,13,1)
(34,35,1)
(19,8,1)
(19,21,1)
(18,6,1)
(41,12,1)
(45,26,1)
(48,29,1)
(35,1,1)
(44,37,1)
(37,38,1)
(36,33,1)
(27,5,1)
(2,17,1)
(40,44,1)
(26,20,1)
(17,39,1)
(37,20,1)
(19,21,2)
(40,44,2)
(44,37,2)
(14,19,2)
(21,29,2)
(48,19,2)
(0,19,2)
(24,19,2)
(2,1,2)
(12,48,2)
(12,19,2)
(1,47,2)
(37,20,2)
(2,12,2)
(37,38,2)
(22,19,2)
(48,29,2)
(20,43,2)
-----------------------------------
(0,"fgets()
(1,data = -1)
(2,myUnion.unionFirst = data)
(3,)
(4,data)
(5,inputBuffer)
(6,data)
(7,data)
(8,NULL)
(9,)
(10,charData)
(11,myUnion)
(12,data = atoi(inputBuffer)
(13,stdin)
(14,printLine("fgets()
(15,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(16,)
(17,data)
(18,myUnion)
(19,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(20,data = myUnion.unionSecond)
(21,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(22,inputBuffer)
(23,unionSecond)
(24,data)
(25,unionFirst)
(26,charData)
(27,CHAR_ARRAY_SIZE)
(28,)
(29,inputBuffer[CHAR_ARRAY_SIZE] = "")
(30,RET)
(31,)
(32,charData)
(33,data)
(34,"")
(35,inputBuffer)
(36,1)
(37,(char)
(38,char)
(39,myUnion.unionFirst)
(40,printHexCharLine(charData)
(41,myUnion)
(42,)
(43,myUnion.unionSecond)
(44,charData = (char)
(45,data)
(46,inputBuffer)
(47,-1)
(48,atoi(inputBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^