-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_17_bad()
{
    int i;
    int data;
    /* Initialize data */
    data = -1;
    for(i = 0; i < 1; i++)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
22,26
23,24
24,25
24,26
25,26
28,29
28,30
29,30
32,33
33,34
35,36
36,37
37,38
37,39
38,39
40,41
42,43
42,44
42,45
42,46
42,47
42,48
43,44
44,45
44,46
46,47
46,48
48,49
50,51
51,52
51,53
53,54
53,55
53,56
55,56
57,58
59,60
60,61
60,62
60,63
60,64
61,62
63,64
66,67
66,68
69,70
70,71
70,72
71,72
71,73
72,73
74,75
74,76
78,79
78,80
79,80
79,81
80,81
83,84
83,85
84,85
85,86
85,87
85,88
85,89
86,87
88,89
90,91
92,93
94,95
95,96
95,97
96,97
96,98
97,98
99,100
102,103
103,104
103,105
104,105
106,107
-----nextToken-----
2,4,8,10,13,15,19,21,26,27,30,31,34,39,41,45,47,49,52,54,56,58,62,64,65,67,68,73,75,76,77,81,82,87,89,91,93,98,100,101,105,107
-----computeFrom-----
17,18
17,19
24,25
24,26
28,29
28,30
37,38
37,39
66,67
66,68
70,71
70,72
74,75
74,76
79,80
79,81
95,96
95,97
-----guardedBy-----
81,100
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_17_bad(){    int i;    int data;    /* Initialize data */    data = -1;    for(i = 0; i < 1; i++)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_17_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_17_bad
{    int i;    int data;    /* Initialize data */    data = -1;    for(i = 0; i < 1; i++)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int i;
int i;
int
i
i
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
for(i = 0; i < 1; i++)    {        /* FLAW: Use a negative number */        data = -1;    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(24,41,0)
(3,2,0)
(28,1,0)
(44,54,0)
(42,34,0)
(39,43,0)
(37,49,0)
(46,55,0)
(41,11,0)
(33,32,0)
(41,49,0)
(36,7,0)
(49,56,0)
(6,54,0)
(17,2,0)
(4,54,0)
(13,1,0)
(38,55,0)
(51,43,0)
(20,41,0)
(40,49,0)
(32,13,0)
(35,41,0)
(26,11,0)
(12,18,0)
(46,2,0)
(43,50,0)
(21,2,0)
(8,48,0)
(53,50,0)
(0,11,0)
(37,46,0)
(49,31,0)
(15,48,0)
(14,37,0)
(29,32,0)
(54,2,0)
(13,32,0)
(41,46,0)
(47,0,0)
(23,16,0)
(43,49,0)
(41,22,0)
(1,54,0)
(48,18,0)
(31,49,0)
(55,46,0)
(50,22,0)
(43,11,0)
(11,54,0)
(9,13,0)
(7,54,0)
(0,54,0)
(52,46,0)
(43,46,0)
(10,16,0)
(5,37,0)
(45,7,0)
(34,18,0)
(19,18,0)
(16,7,0)
(25,31,0)
(30,11,0)
(7,16,0)
(12,46,1)
(11,26,1)
(34,18,1)
(37,46,1)
(24,35,1)
(53,43,1)
(43,49,1)
(23,10,1)
(25,40,1)
(49,31,1)
(42,49,1)
(5,1,1)
(7,16,1)
(8,18,1)
(31,25,1)
(51,41,1)
(41,11,1)
(37,14,1)
(0,47,1)
(39,51,1)
(48,18,1)
(10,36,1)
(47,37,1)
(50,53,1)
(32,33,1)
(30,48,1)
(45,11,1)
(48,15,1)
(14,5,1)
(9,7,1)
(19,12,1)
(38,52,1)
(55,38,1)
(41,24,1)
(43,11,1)
(16,23,1)
(33,29,1)
(1,28,1)
(36,45,1)
(37,49,1)
(46,55,1)
(43,46,1)
(29,9,1)
(28,13,1)
(18,19,1)
(27,0,1)
(20,37,1)
(8,34,1)
(41,46,1)
(43,39,1)
(0,11,1)
(47,50,1)
(40,48,1)
(35,20,1)
(34,42,1)
(26,30,1)
(13,32,1)
(41,49,1)
(15,8,1)
(34,18,2)
(13,32,2)
(48,48,2)
(41,11,2)
(35,37,2)
(43,46,2)
(50,37,2)
(25,48,2)
(53,37,2)
(40,48,2)
(31,48,2)
(41,37,2)
(43,37,2)
(43,11,2)
(48,18,2)
(0,11,2)
(37,49,2)
(41,49,2)
(7,16,2)
(15,48,2)
(20,37,2)
(43,49,2)
(24,37,2)
(46,55,2)
(42,48,2)
(37,46,2)
(34,48,2)
(39,37,2)
(41,46,2)
(8,48,2)
(49,31,2)
(49,48,2)
(51,37,2)
-----------------------------------
(0,printLine(dest)
(1,source[100-1] = \\\'\\\\0\\\')
(2,)
(3,data)
(4,dest)
(5,data)
(6,source)
(7,memset(source, \\\'A\\\', 100-1)
(8,i)
(9,source)
(10,100)
(11,dest[100] = "")
(12,i)
(13,source[100-1])
(14,100)
(15,1)
(16,100-1)
(17,i)
(18,i = 0)
(19,0)
(20,dest)
(21,for(i = 0; i < 1; i++)
(22,)
(23,1)
(24,data)
(25,1)
(26,"")
(27,RET)
(28,\\\'\\\\0\\\')
(29,100)
(30,dest)
(31,-1)
(32,100-1)
(33,1)
(34,i++)
(35,source)
(36,\\\'A\\\')
(37,data < 100)
(38,1)
(39,data)
(40,data)
(41,memcpy(dest, source, data)
(42,i)
(43,dest[data])
(44,if (data < 100)
(45,source)
(46,data = -1)
(47,dest)
(48,i < 1)
(49,data = -1)
(50,dest[data] = \\\'\\\\0\\\')
(51,dest)
(52,data)
(53,\\\'\\\\0\\\')
(54,)
(55,-1)
(56,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^