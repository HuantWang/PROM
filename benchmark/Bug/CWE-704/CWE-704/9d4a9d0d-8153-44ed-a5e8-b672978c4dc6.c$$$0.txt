-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_08_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(staticReturnsTrue())
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_08_bad(){    short data;    /* Initialize data */    data = 0;    if(staticReturnsTrue())    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_memmove_08_bad()
CWE194_Unexpected_Sign_Extension__fscanf_memmove_08_bad
{    short data;    /* Initialize data */    data = 0;    if(staticReturnsTrue())    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(17,19,0)
(33,20,0)
(45,41,0)
(5,18,0)
(4,13,0)
(24,18,0)
(33,41,0)
(38,43,0)
(41,20,0)
(31,5,0)
(22,19,0)
(10,5,0)
(6,39,0)
(43,39,0)
(28,20,0)
(46,33,0)
(2,41,0)
(0,25,0)
(44,20,0)
(32,5,0)
(1,44,0)
(30,28,0)
(21,30,0)
(1,19,0)
(11,20,0)
(23,1,0)
(47,24,0)
(48,24,0)
(42,30,0)
(36,28,0)
(9,28,0)
(39,43,0)
(27,13,0)
(3,20,0)
(25,18,0)
(34,18,0)
(40,18,0)
(37,14,0)
(26,25,0)
(5,15,0)
(18,13,0)
(7,44,0)
(29,20,0)
(20,13,0)
(19,1,0)
(43,35,0)
(12,43,0)
(5,41,0)
(24,41,0)
(28,30,0)
(14,15,0)
(39,18,0)
(24,14,0)
(19,22,1)
(5,18,1)
(21,42,1)
(36,41,1)
(6,12,1)
(48,5,1)
(1,19,1)
(14,37,1)
(41,2,1)
(16,18,1)
(46,14,1)
(8,33,1)
(40,34,1)
(2,45,1)
(12,38,1)
(25,0,1)
(28,30,1)
(24,47,1)
(25,18,1)
(32,25,1)
(24,18,1)
(10,31,1)
(43,39,1)
(31,32,1)
(44,7,1)
(17,23,1)
(39,6,1)
(39,18,1)
(37,24,1)
(9,36,1)
(33,41,1)
(0,26,1)
(7,1,1)
(5,41,1)
(45,16,1)
(5,10,1)
(33,46,1)
(23,28,1)
(22,17,1)
(26,44,1)
(24,41,1)
(45,43,1)
(46,25,1)
(30,21,1)
(38,16,1)
(47,48,1)
(42,9,1)
(18,40,1)
(24,25,2)
(31,25,2)
(5,25,2)
(14,25,2)
(43,39,2)
(47,25,2)
(5,41,2)
(12,16,2)
(37,25,2)
(24,41,2)
(39,18,2)
(6,16,2)
(38,16,2)
(25,18,2)
(43,16,2)
(5,18,2)
(39,16,2)
(48,25,2)
(24,18,2)
(10,25,2)
(32,25,2)
(1,19,2)
(33,41,2)
(28,30,2)
-----------------------------------
(0,100)
(1,source[100-1])
(2,"")
(3,if (data < 100)
(4,if(staticReturnsTrue()
(5,memmove(dest, source, data)
(6,data)
(7,\\\'\\\\0\\\')
(8,RET)
(9,\\\'A\\\')
(10,data)
(11,dest)
(12,"%hd")
(13,)
(14,dest[data] = \\\'\\\\0\\\')
(15,)
(16,staticReturnsTrue()
(17,100)
(18,data = 0)
(19,100-1)
(20,)
(21,1)
(22,1)
(23,source)
(24,dest[data])
(25,data < 100)
(26,data)
(27,data)
(28,memset(source, \\\'A\\\', 100-1)
(29,source)
(30,100-1)
(31,source)
(32,dest)
(33,printLine(dest)
(34,data)
(35,)
(36,source)
(37,\\\'\\\\0\\\')
(38,stdin)
(39,&data)
(40,0)
(41,dest[100] = "")
(42,100)
(43,fscanf (stdin, "%hd", &data)
(44,source[100-1] = \\\'\\\\0\\\')
(45,dest)
(46,dest)
(47,data)
(48,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^