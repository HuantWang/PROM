-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_16_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    while(1)
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
        break;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
30,31
30,32
30,33
30,34
30,35
30,36
31,32
32,33
32,34
34,35
34,36
36,37
38,39
39,40
39,41
41,42
41,43
41,44
43,44
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
66,68
67,68
67,69
68,69
71,72
71,73
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,29,33,35,37,40,42,44,46,50,52,53,55,56,61,63,64,65,69,70,75,77,79,81,86,88,89,93,95
-----computeFrom-----
12,13
12,14
54,55
54,56
58,59
58,60
62,63
62,64
67,68
67,69
83,84
83,85
-----guardedBy-----
69,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_16_bad(){    short data;    /* Initialize data */    data = 0;    while(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_16_bad()
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_16_bad
{    short data;    /* Initialize data */    data = 0;    while(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);        break;    }
1
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);        break;    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
break;
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(46,17,0)
(17,40,0)
(9,43,0)
(44,28,0)
(32,8,0)
(24,17,0)
(49,7,0)
(6,0,0)
(28,14,0)
(41,14,0)
(4,22,0)
(18,28,0)
(43,28,0)
(48,43,0)
(5,22,0)
(11,34,0)
(39,47,0)
(38,12,0)
(33,22,0)
(37,4,0)
(33,0,0)
(34,11,0)
(34,3,0)
(0,40,0)
(19,47,0)
(8,47,0)
(25,11,0)
(30,45,0)
(36,11,0)
(30,22,0)
(42,22,0)
(23,8,0)
(27,17,0)
(33,43,0)
(35,30,0)
(22,14,0)
(17,43,0)
(13,28,0)
(21,33,0)
(2,34,0)
(7,28,0)
(17,22,0)
(45,30,0)
(20,14,0)
(8,28,0)
(47,8,0)
(3,28,0)
(1,45,0)
(45,12,0)
(31,45,0)
(29,4,0)
(7,43,0)
(16,33,0)
(10,3,0)
(43,48,1)
(5,42,1)
(34,11,1)
(16,17,1)
(48,9,1)
(11,25,1)
(49,0,1)
(27,46,1)
(30,35,1)
(17,43,1)
(38,45,1)
(25,36,1)
(4,22,1)
(7,43,1)
(29,37,1)
(46,4,1)
(33,43,1)
(17,22,1)
(8,47,1)
(39,32,1)
(15,7,1)
(0,6,1)
(6,33,1)
(36,2,1)
(31,1,1)
(33,22,1)
(19,39,1)
(10,34,1)
(3,10,1)
(9,38,1)
(9,26,1)
(1,26,1)
(37,3,1)
(33,21,1)
(26,22,1)
(24,27,1)
(7,49,1)
(49,4,1)
(32,23,1)
(17,24,1)
(35,31,1)
(2,8,1)
(47,19,1)
(21,16,1)
(45,30,1)
(23,43,1)
(22,5,1)
(4,29,1)
(30,22,1)
(38,26,2)
(33,22,2)
(45,30,2)
(30,26,2)
(34,11,2)
(35,26,2)
(33,4,2)
(1,26,2)
(8,47,2)
(17,22,2)
(33,43,2)
(27,4,2)
(17,43,2)
(31,26,2)
(17,4,2)
(0,4,2)
(24,4,2)
(6,4,2)
(30,22,2)
(21,4,2)
(7,43,2)
(46,4,2)
(16,4,2)
(4,22,2)
(45,26,2)
-----------------------------------
(0,dest[data] = \\\'\\\\0\\\')
(1,stdin)
(2,source)
(3,source[100-1] = \\\'\\\\0\\\')
(4,data < 100)
(5,0)
(6,\\\'\\\\0\\\')
(7,printLine(dest)
(8,memset(source, \\\'A\\\', 100-1)
(9,dest)
(10,\\\'\\\\0\\\')
(11,100-1)
(12,)
(13,if (data < 100)
(14,)
(15,RET)
(16,dest)
(17,strncpy(dest, source, data)
(18,dest)
(19,1)
(20,while(1)
(21,data)
(22,data = 0)
(23,source)
(24,data)
(25,1)
(26,1)
(27,source)
(28,)
(29,100)
(30,&data)
(31,"%hd")
(32,\\\'A\\\')
(33,dest[data])
(34,source[100-1])
(35,data)
(36,100)
(37,data)
(38,break;)
(39,100)
(40,)
(41,data)
(42,data)
(43,dest[100] = "")
(44,source)
(45,fscanf (stdin, "%hd", &data)
(46,dest)
(47,100-1)
(48,"")
(49,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^