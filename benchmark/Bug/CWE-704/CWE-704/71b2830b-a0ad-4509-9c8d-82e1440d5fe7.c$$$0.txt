-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_01_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    /* FLAW: Use a negative number */
    data = -1;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
23,24
23,25
23,26
23,27
23,28
23,29
24,25
25,26
25,27
27,28
27,29
29,30
31,32
32,33
32,34
34,35
34,36
34,37
36,37
38,39
40,41
41,42
41,43
41,44
41,45
42,43
44,45
47,48
47,49
50,51
51,52
51,53
52,53
52,54
53,54
55,56
55,57
59,60
59,61
60,61
60,62
61,62
64,65
64,66
65,66
66,67
66,68
66,69
66,70
67,68
69,70
71,72
73,74
75,76
76,77
76,78
77,78
77,79
78,79
80,81
83,84
84,85
84,86
85,86
87,88
-----nextToken-----
2,4,8,10,14,16,20,22,26,28,30,33,35,37,39,43,45,46,48,49,54,56,57,58,62,63,68,70,72,74,79,81,82,86,88
-----computeFrom-----
12,13
12,14
18,19
18,20
47,48
47,49
51,52
51,53
55,56
55,57
60,61
60,62
76,77
76,78
-----guardedBy-----
62,81
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_01_bad(){    int data;    /* Initialize data */    data = -1;    /* FLAW: Use a negative number */    data = -1;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_01_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_01_bad
{    int data;    /* Initialize data */    data = -1;    /* FLAW: Use a negative number */    data = -1;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(31,19,0)
(45,10,0)
(28,9,0)
(41,28,0)
(23,14,0)
(39,9,0)
(3,43,0)
(4,40,0)
(29,40,0)
(9,6,0)
(20,19,0)
(28,26,0)
(33,44,0)
(14,9,0)
(26,5,0)
(7,26,0)
(28,10,0)
(30,10,0)
(6,9,0)
(1,40,0)
(2,45,0)
(13,6,0)
(19,44,0)
(45,40,0)
(44,19,0)
(29,36,0)
(21,38,0)
(36,29,0)
(38,9,0)
(12,15,0)
(25,22,0)
(35,40,0)
(27,28,0)
(17,15,0)
(8,14,0)
(11,29,0)
(43,17,0)
(18,29,0)
(10,40,0)
(37,10,0)
(17,43,0)
(34,38,0)
(44,22,0)
(24,36,0)
(38,5,0)
(0,36,0)
(38,10,0)
(16,38,0)
(40,15,0)
(22,40,0)
(9,15,0)
(42,17,0)
(34,14,1)
(31,33,1)
(26,7,1)
(2,14,1)
(17,43,1)
(39,17,1)
(7,28,1)
(21,16,1)
(10,30,1)
(25,44,1)
(30,37,1)
(45,2,1)
(16,34,1)
(33,29,1)
(28,10,1)
(22,25,1)
(41,38,1)
(14,8,1)
(19,20,1)
(20,31,1)
(32,45,1)
(3,42,1)
(23,22,1)
(43,3,1)
(45,10,1)
(24,11,1)
(28,9,1)
(0,24,1)
(27,41,1)
(36,0,1)
(28,27,1)
(38,9,1)
(11,18,1)
(37,9,1)
(14,9,1)
(29,36,1)
(38,21,1)
(8,23,1)
(13,39,1)
(9,6,1)
(6,13,1)
(2,26,1)
(18,10,1)
(38,10,1)
(44,19,1)
(34,14,2)
(29,36,2)
(9,6,2)
(28,10,2)
(27,14,2)
(26,14,2)
(38,9,2)
(28,14,2)
(38,14,2)
(38,10,2)
(16,14,2)
(44,19,2)
(28,9,2)
(41,14,2)
(14,9,2)
(21,14,2)
(7,14,2)
(45,10,2)
(17,43,2)
-----------------------------------
(0,1)
(1,if (data < 100)
(2,dest)
(3,1)
(4,source)
(5,)
(6,-1)
(7,\\\'\\\\0\\\')
(8,100)
(9,data = -1)
(10,dest[100] = "")
(11,\\\'A\\\')
(12,data)
(13,1)
(14,data < 100)
(15,)
(16,source)
(17,data = -1)
(18,source)
(19,100-1)
(20,1)
(21,data)
(22,source[100-1] = \\\'\\\\0\\\')
(23,data)
(24,100)
(25,\\\'\\\\0\\\')
(26,dest[data] = \\\'\\\\0\\\')
(27,data)
(28,dest[data])
(29,memset(source, \\\'A\\\', 100-1)
(30,"")
(31,100)
(32,RET)
(33,source)
(34,dest)
(35,dest)
(36,100-1)
(37,dest)
(38,memcpy(dest, source, data)
(39,data)
(40,)
(41,dest)
(42,data)
(43,-1)
(44,source[100-1])
(45,printLine(dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^