-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_67b_badSink(CWE194_Unexpected_Sign_Extension__negative_strncpy_67_structType myStruct)
{
    short data = myStruct.structFirst;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
21,26
21,27
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
34,35
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
57,59
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,7,9,13,15,19,20,24,26,28,31,33,35,37,41,43,44,46,47,52,54,55,56,60,61,66,68,70,72,77,79,80,84,86
-----computeFrom-----
45,46
45,47
49,50
49,51
53,54
53,55
58,59
58,60
74,75
74,76
-----guardedBy-----
60,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_67b_badSink(CWE194_Unexpected_Sign_Extension__negative_strncpy_67_structType myStruct){    short data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_strncpy_67b_badSink(CWE194_Unexpected_Sign_Extension__negative_strncpy_67_structType myStruct)
CWE194_Unexpected_Sign_Extension__negative_strncpy_67b_badSink
CWE194_Unexpected_Sign_Extension__negative_strncpy_67_structType myStruct
CWE194_Unexpected_Sign_Extension__negative_strncpy_67_structType
CWE194_Unexpected_Sign_Extension__negative_strncpy_67_structType
myStruct
myStruct
{    short data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data = myStruct.structFirst;
short data = myStruct.structFirst;
short
data = myStruct.structFirst
data
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(2,29,0)
(31,1,0)
(18,7,0)
(25,37,0)
(38,6,0)
(38,34,0)
(20,17,0)
(11,6,0)
(41,37,0)
(35,5,0)
(15,6,0)
(26,16,0)
(1,16,0)
(42,38,0)
(12,8,0)
(24,17,0)
(40,5,0)
(10,38,0)
(28,8,0)
(8,21,0)
(36,16,0)
(8,17,0)
(3,1,0)
(17,8,0)
(17,7,0)
(4,11,0)
(30,2,0)
(5,17,0)
(19,16,0)
(22,2,0)
(6,16,0)
(9,24,0)
(29,36,0)
(38,17,0)
(27,24,0)
(5,6,0)
(11,16,0)
(23,14,0)
(39,29,0)
(14,34,0)
(43,36,0)
(5,14,0)
(37,1,0)
(29,2,0)
(13,38,0)
(0,6,0)
(32,16,0)
(1,37,0)
(16,7,0)
(15,17,1)
(22,30,1)
(39,1,1)
(5,6,1)
(1,37,1)
(38,10,1)
(33,11,1)
(8,21,1)
(11,4,1)
(12,28,1)
(4,24,1)
(38,17,1)
(43,29,1)
(2,22,1)
(9,27,1)
(40,38,1)
(11,6,1)
(24,17,1)
(25,31,1)
(30,39,1)
(24,9,1)
(6,0,1)
(35,40,1)
(13,24,1)
(31,3,1)
(42,13,1)
(10,42,1)
(4,14,1)
(5,35,1)
(17,8,1)
(3,6,1)
(37,41,1)
(27,36,1)
(36,43,1)
(23,5,1)
(5,17,1)
(29,2,1)
(14,23,1)
(28,20,1)
(41,25,1)
(8,12,1)
(0,15,1)
(38,6,1)
(13,24,2)
(17,8,2)
(38,24,2)
(5,6,2)
(5,17,2)
(24,17,2)
(10,24,2)
(1,37,2)
(42,24,2)
(29,2,2)
(11,6,2)
(38,17,2)
(40,24,2)
(23,24,2)
(35,24,2)
(8,21,2)
(38,6,2)
(14,24,2)
(5,24,2)
-----------------------------------
(0,"")
(1,memset(source, \\\'A\\\', 100-1)
(2,100-1)
(3,source)
(4,dest)
(5,dest[data])
(6,dest[100] = "")
(7,)
(8,myStruct.structFirst)
(9,100)
(10,data)
(11,printLine(dest)
(12,structFirst)
(13,dest)
(14,dest[data] = \\\'\\\\0\\\')
(15,dest)
(16,)
(17,data = myStruct.structFirst)
(18,data)
(19,if (data < 100)
(20,data)
(21,CWE194_Unexpected_Sign_Extension__negative_strncpy_67_structType myStruct)
(22,1)
(23,\\\'\\\\0\\\')
(24,data < 100)
(25,100)
(26,source)
(27,data)
(28,myStruct)
(29,source[100-1])
(30,100)
(31,\\\'A\\\')
(32,dest)
(33,RET)
(34,)
(35,data)
(36,source[100-1] = \\\'\\\\0\\\')
(37,100-1)
(38,strncpy(dest, source, data)
(39,source)
(40,dest)
(41,1)
(42,source)
(43,\\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^