-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_10_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalTrue)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
27,32
27,33
28,29
29,30
29,31
31,32
31,33
33,34
35,36
36,37
36,38
38,39
38,40
38,41
40,41
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
63,65
64,65
64,66
65,66
68,69
68,70
69,70
70,71
70,72
70,73
70,74
71,72
73,74
75,76
77,78
79,80
80,81
80,82
81,82
81,83
82,83
84,85
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,14,16,19,24,26,30,32,34,37,39,41,43,47,49,50,52,53,58,60,61,62,66,67,72,74,76,78,83,85,86,90,92
-----computeFrom-----
12,13
12,14
22,23
22,24
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
80,81
80,82
-----guardedBy-----
66,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_10_bad(){    int data;    /* Initialize data */    data = -1;    if(globalTrue)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_10_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_10_bad
{    int data;    /* Initialize data */    data = -1;    if(globalTrue)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(globalTrue)    {        /* FLAW: Use a negative number */        data = -1;    }
globalTrue
globalTrue
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(48,30,0)
(25,12,0)
(28,9,0)
(7,31,0)
(16,7,0)
(9,34,0)
(39,27,0)
(10,46,0)
(46,34,0)
(45,8,0)
(9,25,0)
(32,34,0)
(13,17,0)
(44,24,0)
(37,23,0)
(30,24,0)
(24,30,0)
(41,6,0)
(6,34,0)
(26,45,0)
(33,46,0)
(8,39,0)
(32,25,0)
(29,24,0)
(35,9,0)
(46,25,0)
(22,8,0)
(14,25,0)
(36,8,0)
(9,4,0)
(45,39,0)
(12,25,0)
(21,27,0)
(25,15,0)
(17,39,0)
(2,31,0)
(5,7,0)
(1,34,0)
(3,39,0)
(40,39,0)
(34,27,0)
(46,23,0)
(47,12,0)
(30,39,0)
(31,7,0)
(42,27,0)
(34,6,0)
(38,32,0)
(9,8,0)
(23,4,0)
(20,9,0)
(43,30,0)
(18,39,0)
(46,8,0)
(11,32,0)
(31,17,0)
(45,8,1)
(13,31,1)
(17,13,1)
(26,23,1)
(33,10,1)
(20,32,1)
(11,17,1)
(9,25,1)
(9,28,1)
(31,7,1)
(8,22,1)
(25,12,1)
(12,47,1)
(46,8,1)
(2,30,1)
(26,32,1)
(35,20,1)
(44,48,1)
(36,25,1)
(32,38,1)
(30,24,1)
(38,11,1)
(28,35,1)
(9,34,1)
(36,19,1)
(37,46,1)
(0,45,1)
(43,8,1)
(5,16,1)
(46,34,1)
(19,34,1)
(10,9,1)
(32,25,1)
(34,6,1)
(24,29,1)
(14,19,1)
(45,26,1)
(46,25,1)
(46,33,1)
(16,2,1)
(41,1,1)
(6,41,1)
(48,43,1)
(7,5,1)
(9,8,1)
(23,37,1)
(47,14,1)
(29,44,1)
(32,34,1)
(22,36,1)
(47,19,2)
(34,6,2)
(30,24,2)
(32,34,2)
(45,8,2)
(23,32,2)
(10,32,2)
(46,34,2)
(37,32,2)
(9,25,2)
(9,32,2)
(20,32,2)
(25,12,2)
(46,8,2)
(9,34,2)
(28,32,2)
(33,32,2)
(14,19,2)
(31,7,2)
(35,32,2)
(25,19,2)
(46,25,2)
(9,8,2)
(12,19,2)
(32,25,2)
(46,32,2)
-----------------------------------
(0,RET)
(1,data)
(2,source)
(3,source)
(4,)
(5,1)
(6,-1)
(7,100-1)
(8,dest[100] = "")
(9,memcpy(dest, source, data)
(10,dest)
(11,data)
(12,-1)
(13,\\\'\\\\0\\\')
(14,data)
(15,)
(16,100)
(17,source[100-1] = \\\'\\\\0\\\')
(18,if (data < 100)
(19,globalTrue)
(20,dest)
(21,data)
(22,"")
(23,dest[data] = \\\'\\\\0\\\')
(24,100-1)
(25,data = -1)
(26,dest)
(27,)
(28,data)
(29,1)
(30,memset(source, \\\'A\\\', 100-1)
(31,source[100-1])
(32,data < 100)
(33,data)
(34,data = -1)
(35,source)
(36,dest)
(37,\\\'\\\\0\\\')
(38,100)
(39,)
(40,dest)
(41,1)
(42,if(globalTrue)
(43,source)
(44,100)
(45,printLine(dest)
(46,dest[data])
(47,1)
(48,\\\'A\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^