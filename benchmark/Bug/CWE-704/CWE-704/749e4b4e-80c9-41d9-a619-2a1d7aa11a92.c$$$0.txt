-----label-----
1
-----code-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_08_bad()
{
    void * data;
    twoIntsStruct dataGoodBuffer;
    int dataBadBuffer = 100;
    dataGoodBuffer.intOne = 0;
    dataGoodBuffer.intTwo = 0;
    if(staticReturnsTrue())
    {
        /* FLAW: Set data to point to an int */
        data = &dataBadBuffer;
    }
    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */
    printStructLine((twoIntsStruct *)data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
23,24
25,26
26,27
26,28
27,28
27,29
28,29
32,33
33,34
33,35
34,35
34,36
35,36
39,40
39,41
40,41
41,42
43,44
44,45
45,46
45,47
46,47
48,49
49,50
51,52
52,53
52,54
53,54
55,56
55,57
56,57
56,58
57,58
59,60
61,62
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,29,30,31,36,37,38,42,47,50,54,58,60,62
-----computeFrom-----
26,27
26,28
33,34
33,35
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_08_bad(){    void * data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    if(staticReturnsTrue())    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */    printStructLine((twoIntsStruct *)data);}
void
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_08_bad()
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_08_bad
{    void * data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    if(staticReturnsTrue())    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */    printStructLine((twoIntsStruct *)data);}
void * data;
void * data;
void
* data
*
data
twoIntsStruct dataGoodBuffer;
twoIntsStruct dataGoodBuffer;
twoIntsStruct
twoIntsStruct
dataGoodBuffer
dataGoodBuffer
int dataBadBuffer = 100;
int dataBadBuffer = 100;
int
dataBadBuffer = 100
dataBadBuffer
= 100
100
dataGoodBuffer.intOne = 0;
dataGoodBuffer.intOne = 0
dataGoodBuffer.intOne
dataGoodBuffer
dataGoodBuffer
intOne
0
dataGoodBuffer.intTwo = 0;
dataGoodBuffer.intTwo = 0
dataGoodBuffer.intTwo
dataGoodBuffer
dataGoodBuffer
intTwo
0
if(staticReturnsTrue())    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }
data = &dataBadBuffer;
data = &dataBadBuffer
data
data
&dataBadBuffer
dataBadBuffer
dataBadBuffer
printStructLine((twoIntsStruct *)data);
printStructLine((twoIntsStruct *)data)
printStructLine
printStructLine
(twoIntsStruct *)data
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
data
data
-----joern-----
(27,11,0)
(20,22,0)
(11,0,0)
(14,0,0)
(27,25,0)
(22,0,0)
(13,0,0)
(9,0,0)
(19,17,0)
(24,13,0)
(6,0,0)
(26,17,0)
(5,27,0)
(17,0,0)
(23,20,0)
(21,13,0)
(4,24,0)
(1,20,0)
(16,22,0)
(25,3,0)
(2,27,0)
(19,25,0)
(28,25,0)
(11,27,0)
(15,19,0)
(25,19,0)
(27,2,0)
(8,17,0)
(10,24,0)
(12,0,0)
(22,16,1)
(27,5,1)
(7,11,1)
(8,26,1)
(28,18,1)
(27,2,1)
(19,15,1)
(16,20,1)
(10,4,1)
(24,10,1)
(27,25,1)
(5,18,1)
(18,13,1)
(17,8,1)
(21,24,1)
(23,17,1)
(11,27,1)
(5,25,1)
(1,23,1)
(20,1,1)
(19,17,1)
(25,19,1)
(13,21,1)
(4,22,1)
(15,28,1)
(25,18,2)
(27,2,2)
(19,17,2)
(28,18,2)
(19,18,2)
(27,25,2)
(15,18,2)
(11,27,2)
(25,19,2)
-----------------------------------
(0,)
(1,intOne)
(2,twoIntsStruct *)
(3,)
(4,dataGoodBuffer)
(5,data)
(6,dataGoodBuffer)
(7,RET)
(8,100)
(9,dataBadBuffer)
(10,intTwo)
(11,printStructLine((twoIntsStruct *)
(12,data)
(13,dataGoodBuffer.intTwo = 0)
(14,if(staticReturnsTrue()
(15,dataBadBuffer)
(16,0)
(17,dataBadBuffer = 100)
(18,staticReturnsTrue()
(19,&dataBadBuffer)
(20,dataGoodBuffer.intOne)
(21,0)
(22,dataGoodBuffer.intOne = 0)
(23,dataGoodBuffer)
(24,dataGoodBuffer.intTwo)
(25,data = &dataBadBuffer)
(26,dataBadBuffer)
(27,(twoIntsStruct *)
(28,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^