-----label-----
1
-----code-----
void CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_01_bad()
{
    {
        char inputBuffer[CHAR_ARRAY_SIZE];
        double doubleNumber = 0;
        /* Enter: 1e20f, result should be 2147483647 (for bad case) */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Read a double */
            doubleNumber = atof(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
        /* FLAW: should not cast without checking if conversion is safe */
        printIntLine((int)doubleNumber);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
6,9
6,10
7,8
8,9
8,10
10,11
10,12
12,13
13,14
15,16
16,17
16,18
18,19
18,20
20,21
22,23
22,24
22,25
23,24
23,25
24,25
24,26
24,27
24,28
25,26
27,28
29,30
31,32
33,34
35,36
36,37
37,38
37,39
38,39
40,41
40,42
41,42
43,44
45,46
46,47
47,48
47,49
48,49
51,52
52,53
52,54
53,54
55,56
55,57
56,57
56,58
59,60
-----nextToken-----
2,4,9,11,14,17,19,21,26,28,30,32,34,39,42,44,49,50,54,57,58,60
-----computeFrom-----
23,24
23,25
37,38
37,39
-----guardedBy-----
28,44
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;
-----ast_node-----
void CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_01_bad(){    {        char inputBuffer[CHAR_ARRAY_SIZE];        double doubleNumber = 0;        /* Enter: 1e20f, result should be 2147483647 (for bad case) */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Read a double */            doubleNumber = atof(inputBuffer);        }        else        {            printLine("fgets() failed.");        }        /* FLAW: should not cast without checking if conversion is safe */        printIntLine((int)doubleNumber);    }}
void
CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_01_bad()
CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_01_bad
{    {        char inputBuffer[CHAR_ARRAY_SIZE];        double doubleNumber = 0;        /* Enter: 1e20f, result should be 2147483647 (for bad case) */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Read a double */            doubleNumber = atof(inputBuffer);        }        else        {            printLine("fgets() failed.");        }        /* FLAW: should not cast without checking if conversion is safe */        printIntLine((int)doubleNumber);    }}
{        char inputBuffer[CHAR_ARRAY_SIZE];        double doubleNumber = 0;        /* Enter: 1e20f, result should be 2147483647 (for bad case) */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Read a double */            doubleNumber = atof(inputBuffer);        }        else        {            printLine("fgets() failed.");        }        /* FLAW: should not cast without checking if conversion is safe */        printIntLine((int)doubleNumber);    }
char inputBuffer[CHAR_ARRAY_SIZE];
char inputBuffer[CHAR_ARRAY_SIZE];
char
inputBuffer[CHAR_ARRAY_SIZE]
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
double doubleNumber = 0;
double doubleNumber = 0;
double
doubleNumber = 0
doubleNumber
= 0
0
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Read a double */            doubleNumber = atof(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Read a double */            doubleNumber = atof(inputBuffer);        }
doubleNumber = atof(inputBuffer);
doubleNumber = atof(inputBuffer)
doubleNumber
doubleNumber
atof(inputBuffer)
atof
atof
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
printIntLine((int)doubleNumber);
printIntLine((int)doubleNumber)
printIntLine
printIntLine
(int)doubleNumber
int
int

doubleNumber
doubleNumber
-----joern-----
(19,12,0)
(6,26,0)
(14,24,0)
(4,5,0)
(5,12,0)
(15,26,0)
(18,22,0)
(5,7,0)
(5,20,0)
(17,0,0)
(0,13,0)
(3,20,0)
(20,24,0)
(26,25,0)
(16,12,0)
(5,6,0)
(22,11,0)
(7,5,0)
(8,26,0)
(24,20,0)
(20,23,0)
(13,0,0)
(9,13,0)
(6,5,0)
(12,26,0)
(21,13,0)
(10,26,0)
(1,13,0)
(5,7,1)
(17,13,1)
(5,12,1)
(14,3,1)
(5,4,1)
(22,18,1)
(24,14,1)
(0,13,1)
(20,24,1)
(13,9,1)
(3,0,1)
(12,16,1)
(4,22,1)
(4,20,1)
(5,20,1)
(1,21,1)
(6,5,1)
(0,17,1)
(2,6,1)
(9,1,1)
(18,0,1)
(16,19,1)
(21,12,1)
(6,5,2)
(3,0,2)
(5,12,2)
(22,0,2)
(5,7,2)
(18,0,2)
(24,0,2)
(0,13,2)
(20,24,2)
(14,0,2)
(20,0,2)
(5,20,2)
-----------------------------------
(0,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(1,CHAR_ARRAY_SIZE)
(2,RET)
(3,doubleNumber)
(4,doubleNumber)
(5,(int)
(6,printIntLine((int)
(7,int)
(8,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(9,stdin)
(10,inputBuffer)
(11,)
(12,doubleNumber = 0)
(13,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(14,inputBuffer)
(15,doubleNumber)
(16,0)
(17,NULL)
(18,"fgets()
(19,doubleNumber)
(20,doubleNumber = atof(inputBuffer)
(21,inputBuffer)
(22,printLine("fgets()
(23,)
(24,atof(inputBuffer)
(25,)
(26,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^