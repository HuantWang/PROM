-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_44_bad()
{
    int data;
    /* define a function pointer */
    void (*funcPtr) (int) = badSink;
    /* Initialize data */
    data = -1;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
15,16
15,17
18,19
18,20
20,21
22,23
23,24
25,26
26,27
26,28
27,28
29,30
31,32
31,33
32,33
33,34
33,35
35,36
35,37
35,38
37,38
38,39
40,41
42,43
42,44
42,45
43,44
43,45
44,45
44,46
44,47
44,48
45,46
47,48
49,50
51,52
53,54
55,56
56,57
57,58
57,59
58,59
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
68,69
71,72
72,73
72,74
73,74
75,76
-----nextToken-----
2,4,8,10,13,16,17,19,21,24,28,30,34,36,39,41,46,48,50,52,54,59,62,64,69,70,74,76
-----computeFrom-----
26,27
26,28
43,44
43,45
57,58
57,59
-----guardedBy-----
48,64
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_44_bad(){    int data;    /* define a function pointer */    void (*funcPtr) (int) = badSink;    /* Initialize data */    data = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    /* use the function pointer */    funcPtr(data);}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_char_44_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_char_44_bad
{    int data;    /* define a function pointer */    void (*funcPtr) (int) = badSink;    /* Initialize data */    data = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    /* use the function pointer */    funcPtr(data);}
int data;
int data;
int
data
data
void (*funcPtr) (int) = badSink;
void (*funcPtr) (int) = badSink;
void
(*funcPtr) (int) = badSink
*funcPtr
*
funcPtr
int
int


= badSink
badSink
badSink
data = -1;
data = -1
data
data
-1
1
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(8,3,0)
(15,4,0)
(31,18,0)
(25,21,0)
(6,19,0)
(5,22,0)
(10,18,0)
(23,4,0)
(22,2,0)
(28,3,0)
(20,11,0)
(9,10,0)
(19,11,0)
(18,10,0)
(18,1,0)
(19,13,0)
(13,12,0)
(32,22,0)
(29,20,0)
(13,11,0)
(10,3,0)
(17,11,0)
(3,4,0)
(22,3,0)
(14,11,0)
(19,18,0)
(16,13,0)
(26,2,0)
(21,24,0)
(4,11,0)
(2,22,0)
(12,13,0)
(30,20,0)
(0,22,0)
(7,12,0)
(2,22,1)
(6,21,1)
(5,32,1)
(16,20,1)
(25,2,1)
(29,30,1)
(18,10,1)
(27,19,1)
(7,16,1)
(19,18,1)
(28,13,1)
(9,31,1)
(3,8,1)
(22,3,1)
(20,29,1)
(12,7,1)
(0,3,1)
(26,22,1)
(6,18,1)
(31,2,1)
(2,26,1)
(21,25,1)
(10,9,1)
(8,28,1)
(13,12,1)
(19,6,1)
(19,13,1)
(22,5,1)
(32,0,1)
(10,3,1)
(31,2,2)
(13,12,2)
(21,2,2)
(9,2,2)
(18,2,2)
(10,3,2)
(2,22,2)
(19,13,2)
(25,2,2)
(18,10,2)
(19,18,2)
(22,3,2)
(10,2,2)
-----------------------------------
(0,inputBuffer)
(1,)
(2,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(3,inputBuffer[CHAR_ARRAY_SIZE] = "")
(4,)
(5,stdin)
(6,data)
(7,1)
(8,"")
(9,inputBuffer)
(10,atoi(inputBuffer)
(11,)
(12,-1)
(13,data = -1)
(14,data)
(15,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(16,data)
(17,funcPtr)
(18,data = atoi(inputBuffer)
(19,funcPtr(data)
(20,(*funcPtr)
(21,printLine("fgets()
(22,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(23,inputBuffer)
(24,)
(25,"fgets()
(26,NULL)
(27,RET)
(28,inputBuffer)
(29,badSink)
(30,funcPtr)
(31,data)
(32,CHAR_ARRAY_SIZE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^