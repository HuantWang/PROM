-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_08_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(staticReturnsTrue())
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_08_bad(){    short data;    /* Initialize data */    data = 0;    if(staticReturnsTrue())    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_08_bad()
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_08_bad
{    short data;    /* Initialize data */    data = 0;    if(staticReturnsTrue())    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(31,45,0)
(28,23,0)
(13,24,0)
(42,13,0)
(29,13,0)
(22,25,0)
(41,25,0)
(17,47,0)
(20,41,0)
(47,11,0)
(5,6,0)
(11,12,0)
(46,12,0)
(16,2,0)
(5,23,0)
(21,2,0)
(48,12,0)
(14,6,0)
(47,7,0)
(26,24,0)
(10,13,0)
(27,21,0)
(36,46,0)
(32,46,0)
(37,21,0)
(10,2,0)
(33,5,0)
(19,41,0)
(41,13,0)
(46,2,0)
(2,13,0)
(23,5,0)
(9,11,0)
(6,13,0)
(35,21,0)
(34,23,0)
(18,25,0)
(1,12,0)
(21,12,0)
(11,47,0)
(45,0,0)
(30,13,0)
(12,24,0)
(46,45,0)
(8,48,0)
(15,12,0)
(40,10,0)
(21,0,0)
(3,24,0)
(38,47,0)
(39,48,0)
(43,2,0)
(25,41,0)
(2,16,1)
(35,27,1)
(27,48,1)
(33,41,1)
(40,48,1)
(37,35,1)
(8,6,1)
(14,5,1)
(4,10,1)
(39,8,1)
(21,12,1)
(9,17,1)
(19,20,1)
(15,1,1)
(20,2,1)
(31,46,1)
(25,22,1)
(44,12,1)
(23,28,1)
(43,47,1)
(12,15,1)
(10,40,1)
(34,33,1)
(47,11,1)
(16,43,1)
(46,12,1)
(18,19,1)
(38,44,1)
(32,21,1)
(21,2,1)
(28,34,1)
(40,45,1)
(41,25,1)
(46,36,1)
(11,12,1)
(5,23,1)
(6,14,1)
(48,12,1)
(11,9,1)
(46,2,1)
(17,38,1)
(45,31,1)
(43,44,1)
(48,39,1)
(36,32,1)
(21,37,1)
(22,18,1)
(10,2,1)
(11,12,2)
(46,48,2)
(48,12,2)
(11,44,2)
(27,48,2)
(41,25,2)
(31,48,2)
(45,48,2)
(32,48,2)
(5,23,2)
(21,48,2)
(46,12,2)
(35,48,2)
(17,44,2)
(38,44,2)
(21,2,2)
(37,48,2)
(46,2,2)
(9,44,2)
(21,12,2)
(10,2,2)
(36,48,2)
(47,44,2)
(47,11,2)
-----------------------------------
(0,)
(1,data)
(2,dest[100] = "")
(3,data)
(4,RET)
(5,source[100-1])
(6,source[100-1] = \\\'\\\\0\\\')
(7,)
(8,data)
(9,data)
(10,printLine(dest)
(11,&data)
(12,data = 0)
(13,)
(14,\\\'\\\\0\\\')
(15,0)
(16,"")
(17,"%hd")
(18,100)
(19,\\\'A\\\')
(20,source)
(21,strncpy(dest, source, data)
(22,1)
(23,100-1)
(24,)
(25,100-1)
(26,if(staticReturnsTrue()
(27,dest)
(28,1)
(29,source)
(30,if (data < 100)
(31,\\\'\\\\0\\\')
(32,dest)
(33,source)
(34,100)
(35,source)
(36,data)
(37,data)
(38,stdin)
(39,100)
(40,dest)
(41,memset(source, \\\'A\\\', 100-1)
(42,dest)
(43,dest)
(44,staticReturnsTrue()
(45,dest[data] = \\\'\\\\0\\\')
(46,dest[data])
(47,fscanf (stdin, "%hd", &data)
(48,data < 100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^