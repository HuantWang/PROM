-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_10_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalTrue)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
27,32
27,33
28,29
29,30
29,31
31,32
31,33
33,34
35,36
36,37
36,38
38,39
38,40
38,41
40,41
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
63,65
64,65
64,66
65,66
68,69
68,70
69,70
70,71
70,72
70,73
70,74
71,72
73,74
75,76
77,78
79,80
80,81
80,82
81,82
81,83
82,83
84,85
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,14,16,19,24,26,30,32,34,37,39,41,43,47,49,50,52,53,58,60,61,62,66,67,72,74,76,78,83,85,86,90,92
-----computeFrom-----
12,13
12,14
22,23
22,24
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
80,81
80,82
-----guardedBy-----
66,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_10_bad(){    int data;    /* Initialize data */    data = -1;    if(globalTrue)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_10_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_10_bad
{    int data;    /* Initialize data */    data = -1;    if(globalTrue)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(globalTrue)    {        /* FLAW: Use a negative number */        data = -1;    }
globalTrue
globalTrue
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(8,19,0)
(26,4,0)
(46,17,0)
(32,22,0)
(13,33,0)
(31,13,0)
(35,40,0)
(43,24,0)
(30,42,0)
(34,32,0)
(37,33,0)
(17,45,0)
(4,26,0)
(14,24,0)
(48,7,0)
(3,15,0)
(23,45,0)
(2,33,0)
(20,4,0)
(11,19,0)
(21,41,0)
(13,45,0)
(27,19,0)
(0,26,0)
(45,10,0)
(13,22,0)
(42,32,0)
(19,24,0)
(42,33,0)
(9,13,0)
(33,24,0)
(36,42,0)
(29,40,0)
(42,40,0)
(12,26,0)
(1,13,0)
(13,40,0)
(17,33,0)
(7,11,0)
(5,11,0)
(16,15,0)
(42,45,0)
(4,19,0)
(45,38,0)
(41,19,0)
(33,2,0)
(44,17,0)
(47,2,0)
(6,4,0)
(40,19,0)
(15,7,0)
(38,45,0)
(41,40,0)
(18,19,0)
(25,38,0)
(7,15,0)
(32,34,1)
(33,2,1)
(44,11,1)
(30,13,1)
(13,45,1)
(45,38,1)
(42,33,1)
(36,30,1)
(17,33,1)
(4,26,1)
(29,39,1)
(0,12,1)
(16,3,1)
(42,45,1)
(28,41,1)
(23,39,1)
(42,40,1)
(35,29,1)
(29,45,1)
(13,9,1)
(39,33,1)
(17,45,1)
(13,33,1)
(46,44,1)
(42,36,1)
(1,31,1)
(31,17,1)
(41,40,1)
(15,16,1)
(13,40,1)
(12,20,1)
(7,15,1)
(47,37,1)
(11,5,1)
(38,25,1)
(41,21,1)
(3,48,1)
(40,35,1)
(21,32,1)
(48,4,1)
(2,47,1)
(34,42,1)
(26,0,1)
(17,46,1)
(6,40,1)
(20,6,1)
(9,1,1)
(5,7,1)
(25,23,1)
(21,17,1)
(13,33,2)
(13,17,2)
(31,17,2)
(45,38,2)
(42,40,2)
(33,2,2)
(41,40,2)
(38,39,2)
(17,33,2)
(34,17,2)
(30,17,2)
(1,17,2)
(23,39,2)
(4,26,2)
(32,17,2)
(7,15,2)
(9,17,2)
(42,33,2)
(13,40,2)
(13,45,2)
(36,17,2)
(42,45,2)
(25,39,2)
(17,45,2)
(42,17,2)
(45,39,2)
-----------------------------------
(0,1)
(1,source)
(2,-1)
(3,100)
(4,memset(source, \\\'A\\\', 100-1)
(5,\\\'\\\\0\\\')
(6,source)
(7,source[100-1])
(8,if (data < 100)
(9,data)
(10,)
(11,source[100-1] = \\\'\\\\0\\\')
(12,100)
(13,strncpy(dest, source, data)
(14,data)
(15,100-1)
(16,1)
(17,data < 100)
(18,dest)
(19,)
(20,\\\'A\\\')
(21,dest)
(22,)
(23,data)
(24,)
(25,1)
(26,100-1)
(27,source)
(28,RET)
(29,dest)
(30,dest)
(31,dest)
(32,dest[data] = \\\'\\\\0\\\')
(33,data = -1)
(34,\\\'\\\\0\\\')
(35,"")
(36,data)
(37,data)
(38,-1)
(39,globalTrue)
(40,dest[100] = "")
(41,printLine(dest)
(42,dest[data])
(43,if(globalTrue)
(44,data)
(45,data = -1)
(46,100)
(47,1)
(48,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^