-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_16_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    while(1)
    {
        /* FLAW: Use a negative number */
        data = -1;
        break;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
19,21
20,21
21,22
21,23
22,23
24,25
27,28
27,29
27,30
27,31
27,32
27,33
28,29
29,30
29,31
31,32
31,33
33,34
35,36
36,37
36,38
38,39
38,40
38,41
40,41
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
63,65
64,65
64,66
65,66
68,69
68,70
69,70
70,71
70,72
70,73
70,74
71,72
73,74
75,76
77,78
79,80
80,81
80,82
81,82
81,83
82,83
84,85
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,14,16,18,23,25,26,30,32,34,37,39,41,43,47,49,50,52,53,58,60,61,62,66,67,72,74,76,78,83,85,86,90,92
-----computeFrom-----
12,13
12,14
21,22
21,23
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
80,81
80,82
-----guardedBy-----
66,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_16_bad(){    int data;    /* Initialize data */    data = -1;    while(1)    {        /* FLAW: Use a negative number */        data = -1;        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_16_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_16_bad
{    int data;    /* Initialize data */    data = -1;    while(1)    {        /* FLAW: Use a negative number */        data = -1;        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
while(1)    {        /* FLAW: Use a negative number */        data = -1;        break;    }
1
{        /* FLAW: Use a negative number */        data = -1;        break;    }
data = -1;
data = -1
data
data
-1
1
break;
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(38,14,0)
(31,12,0)
(25,49,0)
(29,31,0)
(40,49,0)
(49,3,0)
(30,49,0)
(10,12,0)
(39,30,0)
(38,20,0)
(5,46,0)
(8,46,0)
(22,31,0)
(6,31,0)
(12,3,0)
(15,29,0)
(32,5,0)
(26,19,0)
(21,38,0)
(40,44,0)
(7,26,0)
(1,44,0)
(5,44,0)
(44,47,0)
(35,25,0)
(37,10,0)
(49,30,0)
(9,12,0)
(25,19,0)
(33,14,0)
(0,44,0)
(10,46,0)
(24,40,0)
(44,1,0)
(2,12,0)
(34,40,0)
(42,5,0)
(16,49,0)
(11,1,0)
(18,29,0)
(48,47,0)
(4,25,0)
(23,46,0)
(43,25,0)
(36,3,0)
(5,26,0)
(25,46,0)
(46,12,0)
(45,3,0)
(25,44,0)
(27,14,0)
(5,49,0)
(31,29,0)
(13,12,0)
(41,20,0)
(20,12,0)
(14,38,0)
(5,49,1)
(7,5,1)
(40,49,1)
(21,31,1)
(14,27,1)
(28,10,1)
(31,29,1)
(25,44,1)
(26,7,1)
(40,34,1)
(42,25,1)
(25,46,1)
(18,6,1)
(15,18,1)
(46,23,1)
(33,21,1)
(32,42,1)
(30,39,1)
(25,49,1)
(8,17,1)
(35,4,1)
(17,49,1)
(38,14,1)
(44,1,1)
(43,40,1)
(0,17,1)
(10,46,1)
(41,38,1)
(48,44,1)
(34,24,1)
(37,26,1)
(4,43,1)
(10,37,1)
(5,44,1)
(6,22,1)
(29,15,1)
(25,35,1)
(23,8,1)
(37,40,1)
(8,48,1)
(5,32,1)
(49,30,1)
(20,41,1)
(39,16,1)
(22,46,1)
(5,46,1)
(11,0,1)
(27,33,1)
(24,20,1)
(40,44,1)
(1,11,1)
(0,17,2)
(4,40,2)
(44,17,2)
(5,49,2)
(5,46,2)
(40,49,2)
(5,44,2)
(35,40,2)
(10,46,2)
(7,40,2)
(32,40,2)
(5,40,2)
(40,44,2)
(25,49,2)
(43,40,2)
(25,46,2)
(42,40,2)
(49,30,2)
(1,17,2)
(11,17,2)
(48,17,2)
(38,14,2)
(31,29,2)
(25,44,2)
(26,40,2)
(44,1,2)
(25,40,2)
-----------------------------------
(0,data)
(1,-1)
(2,source)
(3,)
(4,source)
(5,dest[data])
(6,\\\'A\\\')
(7,\\\'\\\\0\\\')
(8,dest)
(9,if (data < 100)
(10,printLine(dest)
(11,1)
(12,)
(13,dest)
(14,100-1)
(15,1)
(16,data)
(17,1)
(18,100)
(19,)
(20,source[100-1] = \\\'\\\\0\\\')
(21,source)
(22,source)
(23,"")
(24,data)
(25,memcpy(dest, source, data)
(26,dest[data] = \\\'\\\\0\\\')
(27,1)
(28,RET)
(29,100-1)
(30,-1)
(31,memset(source, \\\'A\\\', 100-1)
(32,data)
(33,100)
(34,100)
(35,data)
(36,while(1)
(37,dest)
(38,source[100-1])
(39,1)
(40,data < 100)
(41,\\\'\\\\0\\\')
(42,dest)
(43,dest)
(44,data = -1)
(45,data)
(46,dest[100] = "")
(47,)
(48,break;)
(49,data = -1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^