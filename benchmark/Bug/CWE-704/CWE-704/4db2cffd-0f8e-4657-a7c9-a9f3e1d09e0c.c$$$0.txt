-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_05_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
26,27
28,29
28,30
28,31
28,32
28,33
28,34
29,30
30,31
30,32
32,33
32,34
34,35
36,37
37,38
37,39
39,40
39,41
39,42
41,42
43,44
45,46
46,47
46,48
46,49
46,50
47,48
49,50
52,53
52,54
55,56
56,57
56,58
57,58
57,59
58,59
60,61
60,62
64,65
64,66
65,66
65,67
66,67
69,70
69,71
70,71
71,72
71,73
71,74
71,75
72,73
74,75
76,77
78,79
80,81
81,82
81,83
82,83
82,84
83,84
85,86
88,89
89,90
89,91
90,91
92,93
-----nextToken-----
2,4,8,10,14,16,19,24,27,31,33,35,38,40,42,44,48,50,51,53,54,59,61,62,63,67,68,73,75,77,79,84,86,87,91,93
-----computeFrom-----
12,13
12,14
22,23
22,24
52,53
52,54
56,57
56,58
60,61
60,62
65,66
65,67
81,82
81,83
-----guardedBy-----
67,86
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_05_bad(){    int data;    /* Initialize data */    data = -1;    if(staticTrue)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_05_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_05_bad
{    int data;    /* Initialize data */    data = -1;    if(staticTrue)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(staticTrue)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(29,22,0)
(46,3,0)
(30,1,0)
(5,4,0)
(19,9,0)
(24,11,0)
(11,33,0)
(23,1,0)
(18,46,0)
(15,1,0)
(34,3,0)
(3,33,0)
(46,9,0)
(8,43,0)
(1,35,0)
(25,8,0)
(47,28,0)
(43,36,0)
(4,22,0)
(37,17,0)
(28,2,0)
(10,8,0)
(29,42,0)
(9,46,0)
(38,2,0)
(7,3,0)
(2,3,0)
(12,9,0)
(17,11,0)
(1,2,0)
(27,29,0)
(6,2,0)
(43,8,0)
(45,33,0)
(42,35,0)
(26,22,0)
(29,2,0)
(11,17,0)
(20,43,0)
(22,26,0)
(16,4,0)
(22,0,0)
(1,11,0)
(1,22,0)
(28,3,0)
(29,11,0)
(31,33,0)
(21,29,0)
(41,46,0)
(40,36,0)
(13,42,0)
(4,11,0)
(32,3,0)
(14,22,0)
(36,3,0)
(1,11,1)
(29,21,1)
(36,40,1)
(12,41,1)
(23,15,1)
(10,20,1)
(47,4,1)
(26,14,1)
(46,9,1)
(38,39,1)
(29,11,1)
(21,27,1)
(4,22,1)
(6,38,1)
(41,18,1)
(4,11,1)
(20,46,1)
(8,25,1)
(4,16,1)
(14,39,1)
(15,30,1)
(22,26,1)
(28,2,1)
(1,2,1)
(28,47,1)
(47,42,1)
(13,29,1)
(17,37,1)
(40,43,1)
(29,2,1)
(44,28,1)
(25,10,1)
(29,22,1)
(38,22,1)
(30,4,1)
(9,19,1)
(11,17,1)
(19,12,1)
(42,13,1)
(16,5,1)
(1,23,1)
(27,1,1)
(5,36,1)
(37,24,1)
(18,2,1)
(2,6,1)
(39,11,1)
(43,8,1)
(1,22,1)
(29,2,2)
(11,17,2)
(1,11,2)
(4,11,2)
(27,4,2)
(26,39,2)
(1,2,2)
(43,8,2)
(46,9,2)
(14,39,2)
(30,4,2)
(29,4,2)
(28,2,2)
(21,4,2)
(4,22,2)
(23,4,2)
(1,4,2)
(13,4,2)
(15,4,2)
(1,22,2)
(42,4,2)
(22,26,2)
(29,22,2)
(29,11,2)
(22,39,2)
-----------------------------------
(0,)
(1,memmove(dest, source, data)
(2,dest[100] = "")
(3,)
(4,data < 100)
(5,data)
(6,"")
(7,dest)
(8,100-1)
(9,100-1)
(10,100)
(11,data = -1)
(12,100)
(13,\\\'\\\\0\\\')
(14,data)
(15,source)
(16,100)
(17,-1)
(18,source)
(19,1)
(20,source)
(21,data)
(22,data = RAND32()
(23,data)
(24,data)
(25,1)
(26,RAND32()
(27,dest)
(28,printLine(dest)
(29,dest[data])
(30,dest)
(31,data)
(32,source)
(33,)
(34,if (data < 100)
(35,)
(36,source[100-1] = \\\'\\\\0\\\')
(37,1)
(38,dest)
(39,staticTrue)
(40,\\\'\\\\0\\\')
(41,\\\'A\\\')
(42,dest[data] = \\\'\\\\0\\\')
(43,source[100-1])
(44,RET)
(45,if(staticTrue)
(46,memset(source, \\\'A\\\', 100-1)
(47,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^