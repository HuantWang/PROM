-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_66b_badSink(short dataArray[])
{
    /* copy data out of dataArray */
    short data = dataArray[2];
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
21,26
21,27
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
34,35
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
57,59
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,6,8,9,13,15,19,20,24,26,28,31,33,35,37,41,43,44,46,47,52,54,55,56,60,61,66,68,70,72,77,79,80,84,86
-----computeFrom-----
45,46
45,47
49,50
49,51
53,54
53,55
58,59
58,60
74,75
74,76
-----guardedBy-----
60,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_66b_badSink(short dataArray[]){    /* copy data out of dataArray */    short data = dataArray[2];    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__rand_strncpy_66b_badSink(short dataArray[])
CWE194_Unexpected_Sign_Extension__rand_strncpy_66b_badSink
short dataArray[]
short
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    short data = dataArray[2];    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data = dataArray[2];
short data = dataArray[2];
short
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(36,2,0)
(12,13,0)
(25,19,0)
(20,6,0)
(24,34,0)
(11,9,0)
(6,21,0)
(7,19,0)
(32,25,0)
(35,42,0)
(19,21,0)
(25,42,0)
(30,23,0)
(13,22,0)
(22,16,0)
(9,11,0)
(42,25,0)
(21,23,0)
(5,43,0)
(10,34,0)
(13,11,0)
(40,43,0)
(40,21,0)
(41,20,0)
(20,11,0)
(13,6,0)
(8,40,0)
(20,16,0)
(17,21,0)
(37,6,0)
(15,11,0)
(18,9,0)
(11,23,0)
(39,9,0)
(26,22,0)
(1,13,0)
(27,43,0)
(34,11,0)
(0,42,0)
(3,20,0)
(14,40,0)
(43,40,0)
(2,6,0)
(38,21,0)
(29,20,0)
(2,21,0)
(9,28,0)
(4,6,0)
(31,21,0)
(2,36,1)
(20,11,1)
(9,28,1)
(34,24,1)
(40,43,1)
(43,5,1)
(33,2,1)
(39,15,1)
(36,34,1)
(9,18,1)
(3,41,1)
(12,1,1)
(36,22,1)
(13,12,1)
(19,7,1)
(8,6,1)
(32,40,1)
(13,11,1)
(20,29,1)
(18,39,1)
(25,42,1)
(1,20,1)
(37,4,1)
(35,0,1)
(10,19,1)
(24,10,1)
(13,6,1)
(14,8,1)
(29,3,1)
(26,13,1)
(34,11,1)
(6,37,1)
(4,11,1)
(5,27,1)
(22,26,1)
(27,14,1)
(0,32,1)
(20,6,1)
(11,9,1)
(41,34,1)
(7,25,1)
(2,6,1)
(42,35,1)
(3,34,2)
(25,42,2)
(12,34,2)
(26,34,2)
(11,9,2)
(9,28,2)
(22,34,2)
(13,34,2)
(13,11,2)
(41,34,2)
(2,6,2)
(34,11,2)
(40,43,2)
(1,34,2)
(20,11,2)
(20,34,2)
(13,6,2)
(20,6,2)
(29,34,2)
-----------------------------------
(0,100)
(1,dest)
(2,printLine(dest)
(3,source)
(4,dest)
(5,1)
(6,dest[100] = "")
(7,\\\'\\\\0\\\')
(8,source)
(9,dataArray[2])
(10,data)
(11,data = dataArray[2])
(12,data)
(13,dest[data])
(14,\\\'A\\\')
(15,data)
(16,)
(17,if (data < 100)
(18,2)
(19,source[100-1] = \\\'\\\\0\\\')
(20,strncpy(dest, source, data)
(21,)
(22,dest[data] = \\\'\\\\0\\\')
(23,)
(24,100)
(25,source[100-1])
(26,\\\'\\\\0\\\')
(27,100)
(28,short dataArray[])
(29,data)
(30,data)
(31,source)
(32,source)
(33,RET)
(34,data < 100)
(35,1)
(36,dest)
(37,"")
(38,dest)
(39,dataArray)
(40,memset(source, \\\'A\\\', 100-1)
(41,dest)
(42,100-1)
(43,100-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^