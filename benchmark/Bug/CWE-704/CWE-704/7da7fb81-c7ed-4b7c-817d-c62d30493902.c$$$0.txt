-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_18_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    goto source;
source:
    /* FLAW: Use a negative number */
    data = -1;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
19,20
19,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
27,32
27,33
28,29
29,30
29,31
31,32
31,33
33,34
35,36
36,37
36,38
38,39
38,40
38,41
40,41
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
63,65
64,65
64,66
65,66
68,69
68,70
69,70
70,71
70,72
70,73
70,74
71,72
73,74
75,76
77,78
79,80
80,81
80,82
81,82
81,83
82,83
84,85
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,14,16,18,20,24,26,30,32,34,37,39,41,43,47,49,50,52,53,58,60,61,62,66,67,72,74,76,78,83,85,86,90,92
-----computeFrom-----
12,13
12,14
22,23
22,24
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
80,81
80,82
-----guardedBy-----
66,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_18_bad(){    int data;    /* Initialize data */    data = -1;    goto source;source:    /* FLAW: Use a negative number */    data = -1;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_18_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_18_bad
{    int data;    /* Initialize data */    data = -1;    goto source;source:    /* FLAW: Use a negative number */    data = -1;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
goto source;
source
source:    /* FLAW: Use a negative number */    data = -1;
source
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(31,38,0)
(17,37,0)
(8,6,0)
(30,23,0)
(42,24,0)
(44,8,0)
(18,5,0)
(45,39,0)
(47,45,0)
(21,6,0)
(43,0,0)
(12,39,0)
(28,32,0)
(0,17,0)
(19,30,0)
(9,17,0)
(26,30,0)
(32,10,0)
(3,24,0)
(40,0,0)
(6,8,0)
(24,32,0)
(17,10,0)
(25,45,0)
(2,39,0)
(6,46,0)
(46,32,0)
(0,5,0)
(13,9,0)
(16,17,0)
(35,10,0)
(31,10,0)
(37,17,0)
(30,24,0)
(38,31,0)
(4,8,0)
(41,10,0)
(15,32,0)
(5,23,0)
(30,17,0)
(1,10,0)
(22,15,0)
(39,45,0)
(39,32,0)
(34,38,0)
(20,37,0)
(15,24,0)
(14,30,0)
(27,32,0)
(11,32,0)
(36,46,0)
(29,9,0)
(7,31,0)
(0,24,0)
(29,13,1)
(25,47,1)
(21,39,1)
(3,42,1)
(43,40,1)
(37,20,1)
(24,3,1)
(16,41,1)
(4,21,1)
(14,19,1)
(19,26,1)
(18,0,1)
(0,43,1)
(40,30,1)
(22,5,1)
(26,9,1)
(8,44,1)
(38,34,1)
(5,18,1)
(42,17,1)
(41,31,1)
(20,16,1)
(34,7,1)
(46,36,1)
(45,25,1)
(0,17,1)
(12,24,1)
(6,8,1)
(33,15,1)
(39,45,1)
(47,2,1)
(15,24,1)
(31,38,1)
(9,17,1)
(30,24,1)
(15,22,1)
(17,37,1)
(44,4,1)
(22,9,1)
(13,46,1)
(30,14,1)
(30,17,1)
(2,12,1)
(9,29,1)
(0,24,1)
(36,6,1)
(19,9,2)
(0,24,2)
(30,9,2)
(43,9,2)
(18,9,2)
(40,9,2)
(9,17,2)
(31,38,2)
(39,45,2)
(0,9,2)
(14,9,2)
(15,24,2)
(30,17,2)
(26,9,2)
(6,8,2)
(5,9,2)
(17,37,2)
(30,24,2)
(0,17,2)
-----------------------------------
(0,dest[data])
(1,source:)
(2,\\\'A\\\')
(3,"")
(4,100)
(5,dest[data] = \\\'\\\\0\\\')
(6,source[100-1])
(7,data)
(8,100-1)
(9,data < 100)
(10,)
(11,source)
(12,source)
(13,data)
(14,data)
(15,printLine(dest)
(16,data)
(17,data = -1)
(18,\\\'\\\\0\\\')
(19,source)
(20,1)
(21,source)
(22,dest)
(23,)
(24,dest[100] = "")
(25,1)
(26,dest)
(27,if (data < 100)
(28,dest)
(29,100)
(30,memcpy(dest, source, data)
(31,data = -1)
(32,)
(33,RET)
(34,1)
(35,data)
(36,\\\'\\\\0\\\')
(37,-1)
(38,-1)
(39,memset(source, \\\'A\\\', 100-1)
(40,dest)
(41,goto source;)
(42,dest)
(43,data)
(44,1)
(45,100-1)
(46,source[100-1] = \\\'\\\\0\\\')
(47,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^