-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_09_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,16,19,24,26,27,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_09_bad(){    int data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_09_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_09_bad
{    int data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(19,21,0)
(25,44,0)
(37,13,0)
(44,21,0)
(7,30,0)
(37,21,0)
(41,21,0)
(15,44,0)
(28,25,0)
(8,29,0)
(30,34,0)
(1,40,0)
(34,30,0)
(30,43,0)
(39,42,0)
(22,29,0)
(10,43,0)
(17,41,0)
(40,11,0)
(24,42,0)
(11,30,0)
(14,30,0)
(29,30,0)
(13,37,0)
(38,21,0)
(31,12,0)
(20,13,0)
(0,44,0)
(49,25,0)
(4,36,0)
(36,21,0)
(40,47,0)
(36,44,0)
(27,34,0)
(23,13,0)
(21,43,0)
(2,43,0)
(11,40,0)
(25,31,0)
(35,11,0)
(45,37,0)
(32,7,0)
(6,39,0)
(42,39,0)
(29,12,0)
(5,7,0)
(16,37,0)
(46,29,0)
(9,39,0)
(3,40,0)
(33,21,0)
(48,31,0)
(25,30,0)
(29,44,0)
(42,41,0)
(34,27,1)
(11,35,1)
(49,28,1)
(18,30,1)
(24,37,1)
(39,6,1)
(1,3,1)
(35,1,1)
(25,44,1)
(42,39,1)
(31,48,1)
(25,49,1)
(29,30,1)
(48,25,1)
(26,36,1)
(4,7,1)
(25,30,1)
(3,18,1)
(23,20,1)
(36,4,1)
(27,14,1)
(0,18,1)
(28,29,1)
(20,16,1)
(37,13,1)
(7,32,1)
(9,24,1)
(45,44,1)
(44,15,1)
(0,40,1)
(11,30,1)
(36,44,1)
(6,9,1)
(16,45,1)
(41,17,1)
(13,23,1)
(46,7,1)
(30,34,1)
(7,30,1)
(32,5,1)
(17,42,1)
(22,8,1)
(29,44,1)
(8,46,1)
(40,11,1)
(4,31,1)
(29,22,1)
(15,0,1)
(5,41,1)
(22,7,2)
(48,7,2)
(8,7,2)
(42,39,2)
(36,44,2)
(3,18,2)
(11,18,2)
(31,7,2)
(28,7,2)
(29,44,2)
(25,7,2)
(30,34,2)
(25,44,2)
(7,30,2)
(49,7,2)
(37,13,2)
(11,30,2)
(1,18,2)
(35,18,2)
(29,7,2)
(29,30,2)
(40,11,2)
(46,7,2)
(40,18,2)
(25,30,2)
-----------------------------------
(0,dest)
(1,"%d")
(2,if(GLOBAL_CONST_TRUE)
(3,stdin)
(4,dest)
(5,data)
(6,1)
(7,data < 100)
(8,source)
(9,100)
(10,data)
(11,&data)
(12,)
(13,100-1)
(14,data)
(15,"")
(16,\\\'A\\\')
(17,\\\'\\\\0\\\')
(18,GLOBAL_CONST_TRUE)
(19,if (data < 100)
(20,100)
(21,)
(22,data)
(23,1)
(24,source)
(25,dest[data])
(26,RET)
(27,1)
(28,dest)
(29,memcpy(dest, source, data)
(30,data = -1)
(31,dest[data] = \\\'\\\\0\\\')
(32,100)
(33,dest)
(34,-1)
(35,data)
(36,printLine(dest)
(37,memset(source, \\\'A\\\', 100-1)
(38,source)
(39,100-1)
(40,fscanf(stdin, "%d", &data)
(41,source[100-1] = \\\'\\\\0\\\')
(42,source[100-1])
(43,)
(44,dest[100] = "")
(45,source)
(46,dest)
(47,)
(48,\\\'\\\\0\\\')
(49,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^