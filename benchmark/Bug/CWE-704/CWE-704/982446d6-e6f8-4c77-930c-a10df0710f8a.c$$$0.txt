-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_01_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    /* FLAW: Use a random value that could be less than 0 */
    data = (short)RAND32();
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
21,23
24,25
25,26
27,28
27,29
27,30
27,31
27,32
27,33
28,29
29,30
29,31
31,32
31,33
33,34
35,36
36,37
36,38
38,39
38,40
38,41
40,41
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
63,65
64,65
64,66
65,66
68,69
68,70
69,70
70,71
70,72
70,73
70,74
71,72
73,74
75,76
77,78
79,80
80,81
80,82
81,82
81,83
82,83
84,85
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,14,15,19,22,23,26,30,32,34,37,39,41,43,47,49,50,52,53,58,60,61,62,66,67,72,74,76,78,83,85,86,90,92
-----computeFrom-----
12,13
12,14
17,18
17,19
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
80,81
80,82
-----guardedBy-----
66,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_01_bad(){    short data;    /* Initialize data */    data = 0;    /* FLAW: Use a random value that could be less than 0 */    data = (short)RAND32();    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__rand_strncpy_01_bad()
CWE194_Unexpected_Sign_Extension__rand_strncpy_01_bad
{    short data;    /* Initialize data */    data = 0;    /* FLAW: Use a random value that could be less than 0 */    data = (short)RAND32();    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(40,7,0)
(9,30,0)
(12,29,0)
(9,43,0)
(45,43,0)
(30,9,0)
(2,23,0)
(1,29,0)
(36,32,0)
(24,20,0)
(15,12,0)
(42,26,0)
(41,24,0)
(44,24,0)
(26,6,0)
(4,30,0)
(24,32,0)
(18,45,0)
(12,32,0)
(6,45,0)
(23,34,0)
(22,26,0)
(11,36,0)
(34,23,0)
(6,26,0)
(13,12,0)
(43,7,0)
(12,39,0)
(16,32,0)
(20,39,0)
(27,40,0)
(10,20,0)
(17,1,0)
(28,1,0)
(0,32,0)
(23,2,0)
(23,29,0)
(3,30,0)
(5,40,0)
(31,9,0)
(24,29,0)
(38,29,0)
(19,12,0)
(37,43,0)
(8,6,0)
(32,43,0)
(25,43,0)
(29,7,0)
(21,7,0)
(29,23,0)
(33,43,0)
(36,43,0)
(14,9,0)
(24,32,1)
(41,12,1)
(23,2,1)
(8,9,1)
(36,11,1)
(20,10,1)
(40,5,1)
(10,24,1)
(23,34,1)
(3,31,1)
(42,22,1)
(15,19,1)
(30,4,1)
(45,18,1)
(12,13,1)
(19,1,1)
(11,1,1)
(9,30,1)
(17,45,1)
(2,38,1)
(16,29,1)
(28,17,1)
(13,15,1)
(18,6,1)
(11,20,1)
(4,3,1)
(5,27,1)
(38,40,1)
(22,8,1)
(35,36,1)
(32,0,1)
(26,42,1)
(12,29,1)
(36,32,1)
(24,29,1)
(0,16,1)
(1,28,1)
(44,41,1)
(14,32,1)
(31,14,1)
(12,32,1)
(29,23,1)
(1,29,1)
(24,44,1)
(6,26,1)
(24,29,2)
(13,1,2)
(19,1,2)
(23,2,2)
(9,30,2)
(24,32,2)
(12,29,2)
(41,1,2)
(12,32,2)
(44,1,2)
(29,23,2)
(24,1,2)
(1,29,2)
(15,1,2)
(12,1,2)
(20,1,2)
(23,34,2)
(36,32,2)
(6,26,2)
(10,1,2)
-----------------------------------
(0,"")
(1,data < 100)
(2,RAND32()
(3,100)
(4,1)
(5,0)
(6,source[100-1])
(7,)
(8,source)
(9,memset(source, \\\'A\\\', 100-1)
(10,\\\'\\\\0\\\')
(11,dest)
(12,strncpy(dest, source, data)
(13,data)
(14,source)
(15,source)
(16,dest)
(17,data)
(18,\\\'\\\\0\\\')
(19,dest)
(20,dest[data] = \\\'\\\\0\\\')
(21,data)
(22,100)
(23,(short)
(24,dest[data])
(25,dest)
(26,100-1)
(27,data)
(28,100)
(29,data = (short)
(30,100-1)
(31,\\\'A\\\')
(32,dest[100] = "")
(33,if (data < 100)
(34,short)
(35,RET)
(36,printLine(dest)
(37,source)
(38,data)
(39,)
(40,data = 0)
(41,dest)
(42,1)
(43,)
(44,data)
(45,source[100-1] = \\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^