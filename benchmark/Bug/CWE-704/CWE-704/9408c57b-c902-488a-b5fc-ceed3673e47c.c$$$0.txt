-----label-----
1
-----code-----
static short badSource(short data)
{
    /* FLAW: Use a negative number */
    data = -1;
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
11,12
11,13
12,13
14,15
16,17
17,18
-----nextToken-----
2,4,6,8,13,15,18
-----computeFrom-----
11,12
11,13
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static short badSource(short data){    /* FLAW: Use a negative number */    data = -1;    return data;}
static short
badSource(short data)
badSource
short data
short
data
data
{    /* FLAW: Use a negative number */    data = -1;    return data;}
data = -1;
data = -1
data
data
-1
1
return data;
data
data
-----joern-----
(7,5,0)
(8,7,0)
(3,5,0)
(5,3,0)
(0,3,0)
(5,1,0)
(7,1,0)
(2,5,0)
(4,7,0)
(7,6,0)
(5,6,0)
(3,0,1)
(7,4,1)
(0,2,1)
(4,5,1)
(5,3,1)
(5,1,1)
(8,7,1)
(7,5,1)
(7,1,1)
(7,1,2)
(7,5,2)
(8,7,2)
(5,3,2)
(5,1,2)
-----------------------------------
(0,1)
(1,short data)
(2,data)
(3,-1)
(4,data)
(5,data = -1)
(6,)
(7,return data;)
(8,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^