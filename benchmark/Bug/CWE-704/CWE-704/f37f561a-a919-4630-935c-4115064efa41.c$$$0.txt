-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__connect_socket_memmove_66b_badSink(short dataArray[])
{
    /* copy data out of dataArray */
    short data = dataArray[2];
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
21,26
21,27
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
34,35
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
57,59
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,6,8,9,13,15,19,20,24,26,28,31,33,35,37,41,43,44,46,47,52,54,55,56,60,61,66,68,70,72,77,79,80,84,86
-----computeFrom-----
45,46
45,47
49,50
49,51
53,54
53,55
58,59
58,60
74,75
74,76
-----guardedBy-----
60,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__connect_socket_memmove_66b_badSink(short dataArray[]){    /* copy data out of dataArray */    short data = dataArray[2];    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__connect_socket_memmove_66b_badSink(short dataArray[])
CWE194_Unexpected_Sign_Extension__connect_socket_memmove_66b_badSink
short dataArray[]
short
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    short data = dataArray[2];    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data = dataArray[2];
short data = dataArray[2];
short
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(22,31,0)
(19,31,0)
(5,3,0)
(5,21,0)
(3,31,0)
(25,34,0)
(31,30,0)
(8,25,0)
(9,21,0)
(43,36,0)
(21,30,0)
(37,9,0)
(26,31,0)
(23,43,0)
(18,1,0)
(12,30,0)
(33,25,0)
(13,21,0)
(10,31,0)
(42,3,0)
(1,41,0)
(28,8,0)
(41,31,0)
(17,8,0)
(11,3,0)
(27,3,0)
(35,2,0)
(40,2,0)
(29,43,0)
(8,21,0)
(43,21,0)
(4,5,0)
(1,2,0)
(11,31,0)
(7,10,0)
(32,11,0)
(10,39,0)
(15,39,0)
(0,5,0)
(24,41,0)
(2,1,0)
(39,10,0)
(5,34,0)
(20,39,0)
(21,43,0)
(16,9,0)
(6,10,0)
(8,3,0)
(14,5,0)
(24,1,1)
(35,40,1)
(40,18,1)
(18,10,1)
(41,24,1)
(8,21,1)
(33,8,1)
(0,9,1)
(3,27,1)
(6,3,1)
(27,42,1)
(9,21,1)
(9,16,1)
(7,6,1)
(17,5,1)
(11,32,1)
(8,28,1)
(39,20,1)
(8,3,1)
(42,21,1)
(38,11,1)
(23,29,1)
(25,33,1)
(11,3,1)
(1,2,1)
(43,36,1)
(5,3,1)
(14,0,1)
(37,41,1)
(43,23,1)
(20,15,1)
(4,14,1)
(32,9,1)
(32,25,1)
(5,4,1)
(2,35,1)
(15,7,1)
(21,43,1)
(28,17,1)
(29,13,1)
(10,39,1)
(5,21,1)
(16,37,1)
(8,3,2)
(14,9,2)
(9,21,2)
(8,9,2)
(11,3,2)
(5,3,2)
(5,9,2)
(5,21,2)
(10,39,2)
(21,43,2)
(43,36,2)
(0,9,2)
(8,21,2)
(25,9,2)
(33,9,2)
(17,9,2)
(1,2,2)
(4,9,2)
(28,9,2)
-----------------------------------
(0,dest)
(1,source[100-1])
(2,100-1)
(3,dest[100] = "")
(4,data)
(5,memmove(dest, source, data)
(6,source)
(7,\\\'A\\\')
(8,dest[data])
(9,data < 100)
(10,memset(source, \\\'A\\\', 100-1)
(11,printLine(dest)
(12,data)
(13,data)
(14,source)
(15,100)
(16,100)
(17,dest)
(18,source)
(19,dest)
(20,1)
(21,data = dataArray[2])
(22,if (data < 100)
(23,2)
(24,\\\'\\\\0\\\')
(25,dest[data] = \\\'\\\\0\\\')
(26,source)
(27,"")
(28,data)
(29,dataArray)
(30,)
(31,)
(32,dest)
(33,\\\'\\\\0\\\')
(34,)
(35,1)
(36,short dataArray[])
(37,data)
(38,RET)
(39,100-1)
(40,100)
(41,source[100-1] = \\\'\\\\0\\\')
(42,dest)
(43,dataArray[2])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^