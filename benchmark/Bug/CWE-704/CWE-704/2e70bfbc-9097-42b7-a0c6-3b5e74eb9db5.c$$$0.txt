-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_fscanf_32_bad()
{
    short data;
    short *dataPtr1 = &data;
    short *dataPtr2 = &data;
    /* Initialize data */
    data = -1;
    {
        short data = *dataPtr1;
        /* FLAW: Use a number input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
        *dataPtr1 = data;
    }
    {
        short data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
            char charData = (char)data;
            printHexCharLine(charData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
35,36
37,38
37,39
37,40
38,39
39,40
39,41
41,42
41,43
43,44
44,45
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
55,56
57,58
58,59
58,60
59,60
60,61
62,63
64,65
64,66
65,66
66,67
66,68
68,69
68,70
70,71
71,72
72,73
74,75
74,76
75,76
76,77
76,78
78,79
78,80
80,81
81,82
81,83
82,83
82,84
85,86
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,36,40,42,46,50,52,53,56,61,63,67,69,73,77,79,83,84,86,90,92
-----computeFrom-----
32,33
32,34
58,59
58,60
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_fscanf_32_bad(){    short data;    short *dataPtr1 = &data;    short *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        short data = *dataPtr1;        /* FLAW: Use a number input from the console using fscanf() */        fscanf (stdin, "%hd", &data);        *dataPtr1 = data;    }    {        short data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
void
CWE197_Numeric_Truncation_Error__short_fscanf_32_bad()
CWE197_Numeric_Truncation_Error__short_fscanf_32_bad
{    short data;    short *dataPtr1 = &data;    short *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        short data = *dataPtr1;        /* FLAW: Use a number input from the console using fscanf() */        fscanf (stdin, "%hd", &data);        *dataPtr1 = data;    }    {        short data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
short data;
short data;
short
data
data
short *dataPtr1 = &data;
short *dataPtr1 = &data;
short
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
short *dataPtr2 = &data;
short *dataPtr2 = &data;
short
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = -1;
data = -1
data
data
-1
1
{        short data = *dataPtr1;        /* FLAW: Use a number input from the console using fscanf() */        fscanf (stdin, "%hd", &data);        *dataPtr1 = data;    }
short data = *dataPtr1;
short data = *dataPtr1;
short
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        short data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }
short data = *dataPtr2;
short data = *dataPtr2;
short
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(30,36,0)
(42,4,0)
(24,37,0)
(2,34,0)
(38,11,0)
(29,36,0)
(23,25,0)
(42,45,0)
(46,2,0)
(0,16,0)
(15,2,0)
(8,4,0)
(16,0,0)
(37,29,0)
(38,4,0)
(21,33,0)
(39,19,0)
(19,39,0)
(39,23,0)
(6,42,0)
(7,38,0)
(23,34,0)
(20,4,0)
(3,6,0)
(22,34,0)
(12,30,0)
(16,4,0)
(11,38,0)
(44,11,0)
(46,33,0)
(1,42,0)
(31,16,0)
(29,6,0)
(18,36,0)
(43,0,0)
(32,30,0)
(33,2,0)
(12,29,0)
(24,42,0)
(17,25,0)
(9,4,0)
(26,46,0)
(34,4,0)
(28,37,0)
(27,39,0)
(35,30,0)
(25,23,0)
(6,29,0)
(14,29,0)
(30,12,0)
(5,12,0)
(33,39,0)
(39,33,0)
(25,38,0)
(45,42,0)
(37,36,0)
(40,45,0)
(36,4,0)
(13,23,0)
(41,24,0)
(42,45,1)
(16,0,1)
(21,23,1)
(39,23,1)
(5,32,1)
(44,7,1)
(37,28,1)
(24,41,1)
(46,33,1)
(43,31,1)
(12,29,1)
(6,42,1)
(46,26,1)
(39,27,1)
(3,14,1)
(35,29,1)
(13,37,1)
(40,1,1)
(0,43,1)
(28,24,1)
(12,5,1)
(33,39,1)
(14,16,1)
(25,38,1)
(30,12,1)
(41,30,1)
(11,44,1)
(29,6,1)
(24,42,1)
(10,46,1)
(39,19,1)
(27,21,1)
(38,11,1)
(32,35,1)
(26,33,1)
(7,42,1)
(23,25,1)
(6,3,1)
(45,40,1)
(25,17,1)
(37,29,1)
(17,13,1)
(31,38,1)
(46,33,2)
(12,29,2)
(38,11,2)
(39,23,2)
(37,29,2)
(24,42,2)
(42,45,2)
(33,39,2)
(30,12,2)
(25,38,2)
(16,0,2)
(39,19,2)
(23,25,2)
(6,42,2)
(29,6,2)
-----------------------------------
(0,-1)
(1,dataPtr1)
(2,)
(3,dataPtr1)
(4,)
(5,data)
(6,*dataPtr1)
(7,dataPtr2)
(8,dataPtr2)
(9,dataPtr1)
(10,RET)
(11,&data)
(12,&data)
(13,data)
(14,data)
(15,charData)
(16,data = -1)
(17,dataPtr2)
(18,data)
(19,char)
(20,data)
(21,charData)
(22,data)
(23,data = *dataPtr2)
(24,*dataPtr1)
(25,*dataPtr2)
(26,charData)
(27,data)
(28,data)
(29,data = *dataPtr1)
(30,fscanf (stdin, "%hd", &data)
(31,data)
(32,"%hd")
(33,charData = (char)
(34,)
(35,stdin)
(36,)
(37,*dataPtr1 = data)
(38,*dataPtr2 = &data)
(39,(char)
(40,data)
(41,dataPtr1)
(42,*dataPtr1 = &data)
(43,1)
(44,data)
(45,&data)
(46,printHexCharLine(charData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^