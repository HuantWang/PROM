-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    data = CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61b_badSource(data);
    /* Assume we want to allocate a relatively small buffer */
    if (data < 100)
    {
        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,
         * the conversion will cause malloc() to allocate a very large amount of data or fail */
        char * dataBuffer = (char *)malloc(data);
        /* Do something with dataBuffer */
        memset(dataBuffer, 'A', data-1);
        dataBuffer[data-1] = '\0';
        printLine(dataBuffer);
        free(dataBuffer);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
22,23
24,25
26,27
26,28
27,28
27,29
28,29
31,32
31,33
31,34
31,35
31,36
32,33
33,34
33,35
35,36
35,37
35,38
38,39
39,40
39,41
40,41
40,42
42,43
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
57,58
60,61
61,62
61,63
62,63
62,64
63,64
65,66
65,67
66,67
70,71
71,72
71,73
72,73
74,75
76,77
77,78
77,79
78,79
80,81
-----nextToken-----
2,4,8,10,14,16,20,23,25,29,30,34,36,37,41,43,46,48,52,54,55,58,59,64,67,68,69,73,75,79,81
-----computeFrom-----
12,13
12,14
18,19
18,20
27,28
27,29
56,57
56,58
61,62
61,63
65,66
65,67
-----guardedBy-----
29,67
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61_bad(){    int data;    /* Initialize data */    data = -1;    data = CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61_bad
{    int data;    /* Initialize data */    data = -1;    data = CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61b_badSource(data);
data = CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61b_badSource(data)
data
data
CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61b_badSource(data)
CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61b_badSource
CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61b_badSource
data
data
if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
data < 100
data
data
100
{        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
char * dataBuffer = (char *)malloc(data);
char * dataBuffer = (char *)malloc(data);
char
* dataBuffer = (char *)malloc(data)
*
dataBuffer
= (char *)malloc(data)
(char *)malloc(data)
char *
char
*
*
malloc(data)
malloc
malloc
data
data
memset(dataBuffer, 'A', data-1);
memset(dataBuffer, 'A', data-1)
memset
memset
dataBuffer
dataBuffer
'A'
data-1
data
data
1
dataBuffer[data-1] = '\0';
dataBuffer[data-1] = '\0'
dataBuffer[data-1]
dataBuffer
dataBuffer
data-1
data
data
1
'\0'
printLine(dataBuffer);
printLine(dataBuffer)
printLine
printLine
dataBuffer
dataBuffer
free(dataBuffer);
free(dataBuffer)
free
free
dataBuffer
dataBuffer
-----joern-----
(6,9,0)
(18,6,0)
(37,35,0)
(2,29,0)
(24,9,0)
(0,42,0)
(13,10,0)
(20,12,0)
(29,10,0)
(26,32,0)
(6,10,0)
(33,34,0)
(27,16,0)
(22,0,0)
(37,42,0)
(5,6,0)
(17,5,0)
(23,29,0)
(12,29,0)
(35,37,0)
(29,12,0)
(35,21,0)
(13,6,0)
(19,10,0)
(15,34,0)
(35,6,0)
(3,32,0)
(30,12,0)
(9,24,0)
(34,42,0)
(14,42,0)
(29,6,0)
(9,14,0)
(42,0,0)
(41,35,0)
(8,13,0)
(4,14,0)
(43,37,0)
(21,10,0)
(42,16,0)
(32,3,0)
(12,42,0)
(32,16,0)
(0,32,0)
(39,16,0)
(7,3,0)
(5,10,0)
(14,9,0)
(28,21,0)
(1,37,0)
(25,42,0)
(9,6,0)
(20,23,1)
(34,33,1)
(13,8,1)
(5,6,1)
(1,43,1)
(15,42,1)
(22,25,1)
(25,32,1)
(21,28,1)
(9,14,1)
(6,9,1)
(11,34,1)
(12,30,1)
(35,6,1)
(17,13,1)
(4,18,1)
(9,24,1)
(2,6,1)
(5,17,1)
(28,35,1)
(7,26,1)
(37,42,1)
(43,41,1)
(35,37,1)
(14,4,1)
(0,32,1)
(3,7,1)
(29,12,1)
(34,42,1)
(12,42,1)
(0,22,1)
(30,20,1)
(14,42,1)
(32,3,1)
(23,2,1)
(29,6,1)
(11,5,1)
(42,0,1)
(18,34,1)
(8,21,1)
(33,15,1)
(13,6,1)
(37,1,1)
(41,29,1)
(34,42,2)
(41,34,2)
(13,34,2)
(14,42,2)
(23,34,2)
(21,34,2)
(20,34,2)
(42,0,2)
(1,34,2)
(30,34,2)
(32,3,2)
(9,24,2)
(35,37,2)
(29,6,2)
(5,6,2)
(35,34,2)
(28,34,2)
(14,34,2)
(43,34,2)
(29,12,2)
(17,34,2)
(37,42,2)
(18,34,2)
(13,6,2)
(12,34,2)
(37,34,2)
(6,34,2)
(35,6,2)
(5,34,2)
(9,34,2)
(8,34,2)
(4,34,2)
(29,34,2)
(2,34,2)
(9,14,2)
(0,32,2)
(6,9,2)
(12,42,2)
-----------------------------------
(0,CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61b_badSource(data)
(1,1)
(2,dataBuffer)
(3,-1)
(4,data)
(5,free(dataBuffer)
(6,* dataBuffer = (char *)
(7,1)
(8,dataBuffer)
(9,(char *)
(10,)
(11,RET)
(12,data-1)
(13,printLine(dataBuffer)
(14,malloc(data)
(15,data)
(16,)
(17,dataBuffer)
(18,dataBuffer)
(19,dataBuffer)
(20,data)
(21,dataBuffer[data-1] = \'\\\\0\')
(22,data)
(23,'A')
(24,char *)
(25,data)
(26,data)
(27,if (data < 100)
(28,\'\\\\0\')
(29,memset(dataBuffer, 'A', data-1)
(30,1)
(31,'\\\\0')
(32,data = -1)
(33,100)
(34,data < 100)
(35,dataBuffer[data-1])
(36,\'A\')
(37,data-1)
(38,memset(dataBuffer, \'A\', data-1)
(39,data)
(40,dataBuffer[data-1] = '\\\\0')
(41,dataBuffer)
(42,data = CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_61b_badSource(data)
(43,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^