-----label-----
1
-----code-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_13_bad()
{
    void * data;
    twoIntsStruct dataGoodBuffer;
    int dataBadBuffer = 100;
    dataGoodBuffer.intOne = 0;
    dataGoodBuffer.intTwo = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* FLAW: Set data to point to an int */
        data = &dataBadBuffer;
    }
    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */
    printStructLine((twoIntsStruct *)data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
23,24
25,26
26,27
26,28
27,28
27,29
28,29
32,33
33,34
33,35
34,35
34,36
35,36
39,40
39,41
40,41
40,42
41,42
44,45
45,46
46,47
46,48
47,48
49,50
50,51
52,53
53,54
53,55
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,29,30,31,36,37,38,42,43,48,51,55,59,61,63
-----computeFrom-----
26,27
26,28
33,34
33,35
40,41
40,42
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_13_bad(){    void * data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */    printStructLine((twoIntsStruct *)data);}
void
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_13_bad()
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_13_bad
{    void * data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */    printStructLine((twoIntsStruct *)data);}
void * data;
void * data;
void
* data
*
data
twoIntsStruct dataGoodBuffer;
twoIntsStruct dataGoodBuffer;
twoIntsStruct
twoIntsStruct
dataGoodBuffer
dataGoodBuffer
int dataBadBuffer = 100;
int dataBadBuffer = 100;
int
dataBadBuffer = 100
dataBadBuffer
= 100
100
dataGoodBuffer.intOne = 0;
dataGoodBuffer.intOne = 0
dataGoodBuffer.intOne
dataGoodBuffer
dataGoodBuffer
intOne
0
dataGoodBuffer.intTwo = 0;
dataGoodBuffer.intTwo = 0
dataGoodBuffer.intTwo
dataGoodBuffer
dataGoodBuffer
intTwo
0
if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }
data = &dataBadBuffer;
data = &dataBadBuffer
data
data
&dataBadBuffer
dataBadBuffer
dataBadBuffer
printStructLine((twoIntsStruct *)data);
printStructLine((twoIntsStruct *)data)
printStructLine
printStructLine
(twoIntsStruct *)data
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
data
data
-----joern-----
(1,18,0)
(5,17,0)
(6,13,0)
(14,16,0)
(22,9,0)
(9,22,0)
(28,29,0)
(29,23,0)
(29,22,0)
(9,8,0)
(3,25,0)
(19,17,0)
(22,11,0)
(23,29,0)
(16,25,0)
(8,18,0)
(27,9,0)
(21,8,0)
(13,18,0)
(26,29,0)
(12,8,0)
(10,16,0)
(20,18,0)
(30,18,0)
(7,22,0)
(15,6,0)
(24,18,0)
(28,18,0)
(25,18,0)
(0,6,0)
(2,13,0)
(29,28,0)
(3,16,1)
(7,17,1)
(29,22,1)
(29,23,1)
(10,14,1)
(25,3,1)
(12,21,1)
(13,2,1)
(6,0,1)
(0,15,1)
(29,26,1)
(15,8,1)
(17,19,1)
(19,5,1)
(26,22,1)
(22,9,1)
(16,10,1)
(4,28,1)
(9,8,1)
(5,25,1)
(27,7,1)
(2,6,1)
(8,12,1)
(9,27,1)
(28,29,1)
(26,17,1)
(14,13,1)
(22,9,2)
(27,17,2)
(9,17,2)
(7,17,2)
(22,17,2)
(9,8,2)
(29,23,2)
(28,29,2)
(29,22,2)
-----------------------------------
(0,intOne)
(1,dataBadBuffer)
(2,0)
(3,0)
(4,RET)
(5,GLOBAL_CONST_FIVE)
(6,dataGoodBuffer.intOne)
(7,data)
(8,dataBadBuffer = 100)
(9,&dataBadBuffer)
(10,intTwo)
(11,)
(12,100)
(13,dataGoodBuffer.intOne = 0)
(14,dataGoodBuffer)
(15,dataGoodBuffer)
(16,dataGoodBuffer.intTwo)
(17,GLOBAL_CONST_FIVE==5)
(18,)
(19,5)
(20,dataGoodBuffer)
(21,dataBadBuffer)
(22,data = &dataBadBuffer)
(23,twoIntsStruct *)
(24,if(GLOBAL_CONST_FIVE==5)
(25,dataGoodBuffer.intTwo = 0)
(26,data)
(27,dataBadBuffer)
(28,printStructLine((twoIntsStruct *)
(29,(twoIntsStruct *)
(30,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^