-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_14_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalFive==5)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
27,28
29,30
29,31
29,32
29,33
29,34
29,35
30,31
31,32
31,33
33,34
33,35
35,36
37,38
38,39
38,40
40,41
40,42
40,43
42,43
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
53,55
56,57
57,58
57,59
58,59
58,60
59,60
61,62
61,63
65,66
65,67
66,67
66,68
67,68
70,71
70,72
71,72
72,73
72,74
72,75
72,76
73,74
75,76
77,78
79,80
81,82
82,83
82,84
83,84
83,85
84,85
86,87
89,90
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,8,10,14,16,20,21,26,28,32,34,36,39,41,43,45,49,51,52,54,55,60,62,63,64,68,69,74,76,78,80,85,87,88,92,94
-----computeFrom-----
12,13
12,14
18,19
18,20
24,25
24,26
53,54
53,55
57,58
57,59
61,62
61,63
66,67
66,68
82,83
82,84
-----guardedBy-----
68,87
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_14_bad(){    int data;    /* Initialize data */    data = -1;    if(globalFive==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_14_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_14_bad
{    int data;    /* Initialize data */    data = -1;    if(globalFive==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(globalFive==5)    {        /* FLAW: Use a negative number */        data = -1;    }
globalFive==5
globalFive
globalFive
5
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(40,27,0)
(27,22,0)
(31,26,0)
(47,37,0)
(21,27,0)
(18,30,0)
(45,27,0)
(34,45,0)
(39,31,0)
(13,22,0)
(18,26,0)
(43,34,0)
(9,45,0)
(26,22,0)
(7,40,0)
(37,30,0)
(42,44,0)
(5,18,0)
(17,0,0)
(0,7,0)
(11,27,0)
(37,26,0)
(28,38,0)
(49,28,0)
(32,27,0)
(14,0,0)
(4,22,0)
(7,0,0)
(48,50,0)
(23,31,0)
(46,27,0)
(6,44,0)
(41,11,0)
(35,30,0)
(31,28,0)
(29,33,0)
(12,37,0)
(37,15,0)
(50,15,0)
(36,40,0)
(18,28,0)
(28,20,0)
(37,28,0)
(8,18,0)
(30,27,0)
(16,45,0)
(45,34,0)
(11,30,0)
(3,26,0)
(18,50,0)
(10,7,0)
(26,33,0)
(2,38,0)
(38,28,0)
(25,30,0)
(33,26,0)
(24,34,0)
(19,37,0)
(16,9,1)
(30,25,1)
(41,50,1)
(6,42,1)
(40,36,1)
(37,26,1)
(11,30,1)
(18,8,1)
(26,33,1)
(37,30,1)
(28,38,1)
(18,26,1)
(35,44,1)
(2,49,1)
(24,43,1)
(38,2,1)
(35,28,1)
(29,3,1)
(18,28,1)
(18,30,1)
(7,0,1)
(31,23,1)
(34,24,1)
(48,18,1)
(41,31,1)
(31,28,1)
(5,37,1)
(44,6,1)
(12,19,1)
(47,12,1)
(10,45,1)
(49,44,1)
(45,34,1)
(36,7,1)
(14,17,1)
(9,30,1)
(25,35,1)
(31,26,1)
(39,40,1)
(33,29,1)
(37,28,1)
(0,14,1)
(43,16,1)
(37,47,1)
(11,41,1)
(8,5,1)
(1,11,1)
(17,10,1)
(50,48,1)
(42,26,1)
(23,39,1)
(19,31,1)
(12,31,2)
(28,38,2)
(37,28,2)
(31,26,2)
(8,31,2)
(50,31,2)
(45,34,2)
(18,28,2)
(31,28,2)
(19,31,2)
(47,31,2)
(37,30,2)
(28,44,2)
(18,26,2)
(37,31,2)
(48,31,2)
(26,33,2)
(5,31,2)
(18,31,2)
(49,44,2)
(38,44,2)
(2,44,2)
(18,30,2)
(7,0,2)
(37,26,2)
(11,30,2)
-----------------------------------
(0,100-1)
(1,RET)
(2,1)
(3,data)
(4,if(globalFive==5)
(5,dest)
(6,5)
(7,source[100-1])
(8,data)
(9,source)
(10,source)
(11,printLine(dest)
(12,source)
(13,data)
(14,1)
(15,)
(16,\\\'A\\\')
(17,100)
(18,dest[data])
(19,dest)
(20,)
(21,dest)
(22,)
(23,100)
(24,1)
(25,"")
(26,data = -1)
(27,)
(28,data = -1)
(29,1)
(30,dest[100] = "")
(31,data < 100)
(32,source)
(33,-1)
(34,100-1)
(35,dest)
(36,\\\'\\\\0\\\')
(37,memmove(dest, source, data)
(38,-1)
(39,data)
(40,source[100-1] = \\\'\\\\0\\\')
(41,dest)
(42,globalFive)
(43,100)
(44,globalFive==5)
(45,memset(source, \\\'A\\\', 100-1)
(46,if (data < 100)
(47,data)
(48,\\\'\\\\0\\\')
(49,data)
(50,dest[data] = \\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^