-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_04_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_TRUE)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
26,29
26,30
26,31
26,32
27,28
28,29
28,30
30,31
30,32
32,33
34,35
35,36
35,37
37,38
37,39
37,40
39,40
41,42
43,44
44,45
44,46
44,47
44,48
45,46
47,48
50,51
50,52
53,54
54,55
54,56
55,56
55,57
56,57
58,59
58,60
62,63
62,64
63,64
63,65
64,65
67,68
67,69
68,69
69,70
69,71
69,72
69,73
70,71
72,73
74,75
76,77
78,79
79,80
79,81
80,81
80,82
81,82
83,84
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,14,15,18,23,25,29,31,33,36,38,40,42,46,48,49,51,52,57,59,60,61,65,66,71,73,75,77,82,84,85,89,91
-----computeFrom-----
12,13
12,14
21,22
21,23
50,51
50,52
54,55
54,56
58,59
58,60
63,64
63,65
79,80
79,81
-----guardedBy-----
65,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_04_bad(){    short data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_strncpy_04_bad()
CWE194_Unexpected_Sign_Extension__negative_strncpy_04_bad
{    short data;    /* Initialize data */    data = 0;    if(STATIC_CONST_TRUE)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_TRUE)    {        /* FLAW: Use a negative number */        data = -1;    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(14,26,0)
(5,23,0)
(15,18,0)
(34,14,0)
(38,10,0)
(45,26,0)
(40,8,0)
(44,45,0)
(5,46,0)
(37,36,0)
(42,46,0)
(37,10,0)
(25,23,0)
(37,23,0)
(29,8,0)
(41,5,0)
(46,0,0)
(21,46,0)
(9,11,0)
(45,23,0)
(14,10,0)
(12,46,0)
(22,45,0)
(24,0,0)
(27,26,0)
(1,28,0)
(20,45,0)
(8,28,0)
(37,26,0)
(10,19,0)
(45,10,0)
(17,46,0)
(33,38,0)
(6,37,0)
(18,11,0)
(45,7,0)
(26,0,0)
(35,12,0)
(28,12,0)
(30,23,0)
(36,7,0)
(10,38,0)
(43,36,0)
(32,0,0)
(31,14,0)
(47,11,0)
(16,26,0)
(18,46,0)
(28,8,0)
(23,46,0)
(4,37,0)
(3,18,0)
(13,10,0)
(11,18,0)
(38,33,1)
(30,39,1)
(45,23,1)
(45,20,1)
(39,26,1)
(29,40,1)
(30,10,1)
(41,14,1)
(1,18,1)
(8,29,1)
(33,13,1)
(9,47,1)
(28,8,1)
(31,12,1)
(36,43,1)
(22,44,1)
(23,25,1)
(12,35,1)
(14,34,1)
(4,45,1)
(43,37,1)
(6,4,1)
(35,28,1)
(20,22,1)
(37,26,1)
(26,16,1)
(11,9,1)
(5,41,1)
(41,36,1)
(40,1,1)
(14,26,1)
(13,39,1)
(16,27,1)
(10,38,1)
(15,3,1)
(37,6,1)
(2,5,1)
(37,10,1)
(47,15,1)
(37,23,1)
(45,26,1)
(18,11,1)
(14,10,1)
(45,10,1)
(34,31,1)
(5,23,1)
(3,23,1)
(25,30,1)
(44,14,1)
(14,10,2)
(45,26,2)
(37,10,2)
(45,10,2)
(37,14,2)
(18,11,2)
(33,39,2)
(20,14,2)
(44,14,2)
(4,14,2)
(45,23,2)
(10,38,2)
(38,39,2)
(37,26,2)
(36,14,2)
(5,23,2)
(45,14,2)
(6,14,2)
(43,14,2)
(37,23,2)
(22,14,2)
(14,26,2)
(10,39,2)
(28,8,2)
(13,39,2)
-----------------------------------
(0,)
(1,source)
(2,RET)
(3,source)
(4,dest)
(5,printLine(dest)
(6,data)
(7,)
(8,100-1)
(9,1)
(10,data = -1)
(11,100-1)
(12,source[100-1] = \\\'\\\\0\\\')
(13,data)
(14,data < 100)
(15,\\\'A\\\')
(16,0)
(17,if (data < 100)
(18,memset(source, \\\'A\\\', 100-1)
(19,)
(20,data)
(21,dest)
(22,source)
(23,dest[100] = "")
(24,data)
(25,"")
(26,data = 0)
(27,data)
(28,source[100-1])
(29,1)
(30,dest)
(31,data)
(32,if(STATIC_CONST_TRUE)
(33,1)
(34,100)
(35,\\\'\\\\0\\\')
(36,dest[data] = \\\'\\\\0\\\')
(37,dest[data])
(38,-1)
(39,STATIC_CONST_TRUE)
(40,100)
(41,dest)
(42,source)
(43,\\\'\\\\0\\\')
(44,dest)
(45,strncpy(dest, source, data)
(46,)
(47,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^