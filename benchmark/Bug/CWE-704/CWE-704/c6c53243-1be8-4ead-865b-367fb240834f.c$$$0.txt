-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_10_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,16,19,24,26,27,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_10_bad(){    int data;    /* Initialize data */    data = -1;    if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_10_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_10_bad
{    int data;    /* Initialize data */    data = -1;    if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(11,29,0)
(24,27,0)
(30,29,0)
(8,36,0)
(31,23,0)
(23,5,0)
(20,32,0)
(47,19,0)
(12,33,0)
(11,7,0)
(32,27,0)
(26,0,0)
(13,5,0)
(7,11,0)
(32,46,0)
(35,14,0)
(17,36,0)
(18,12,0)
(36,11,0)
(14,23,0)
(1,49,0)
(33,5,0)
(48,8,0)
(6,0,0)
(19,16,0)
(31,5,0)
(44,33,0)
(25,33,0)
(22,0,0)
(38,11,0)
(37,7,0)
(14,19,0)
(21,46,0)
(0,11,0)
(4,5,0)
(8,28,0)
(36,8,0)
(46,5,0)
(42,14,0)
(39,8,0)
(40,23,0)
(9,29,0)
(0,23,0)
(15,23,0)
(41,12,0)
(43,31,0)
(10,5,0)
(2,27,0)
(27,32,0)
(33,12,0)
(49,11,0)
(0,16,0)
(14,11,0)
(45,49,0)
(5,29,0)
(25,44,1)
(49,11,1)
(23,40,1)
(7,37,1)
(2,20,1)
(36,11,1)
(15,3,1)
(36,17,1)
(26,22,1)
(42,0,1)
(15,8,1)
(0,26,1)
(31,23,1)
(14,11,1)
(18,25,1)
(22,6,1)
(48,39,1)
(43,19,1)
(0,23,1)
(31,43,1)
(41,18,1)
(33,12,1)
(0,11,1)
(47,14,1)
(6,49,1)
(44,23,1)
(46,21,1)
(34,31,1)
(49,1,1)
(11,7,1)
(39,3,1)
(14,23,1)
(14,35,1)
(45,46,1)
(35,42,1)
(40,15,1)
(3,11,1)
(43,49,1)
(24,2,1)
(12,41,1)
(20,33,1)
(21,32,1)
(37,38,1)
(27,24,1)
(8,36,1)
(19,47,1)
(32,27,1)
(17,48,1)
(1,45,1)
(14,49,2)
(42,49,2)
(47,49,2)
(36,11,2)
(22,49,2)
(33,12,2)
(0,23,2)
(36,3,2)
(49,11,2)
(35,49,2)
(14,23,2)
(0,11,2)
(32,27,2)
(17,3,2)
(31,23,2)
(0,49,2)
(39,3,2)
(6,49,2)
(8,3,2)
(26,49,2)
(11,7,2)
(8,36,2)
(19,49,2)
(14,11,2)
(48,3,2)
-----------------------------------
(0,memcpy(dest, source, data)
(1,100)
(2,100)
(3,globalTrue)
(4,dest)
(5,)
(6,dest)
(7,-1)
(8,fscanf(stdin, "%d", &data)
(9,data)
(10,source)
(11,data = -1)
(12,100-1)
(13,if (data < 100)
(14,dest[data])
(15,dest)
(16,)
(17,data)
(18,100)
(19,dest[data] = \\\'\\\\0\\\')
(20,source)
(21,\\\'\\\\0\\\')
(22,source)
(23,dest[100] = "")
(24,1)
(25,\\\'A\\\')
(26,data)
(27,100-1)
(28,)
(29,)
(30,if(globalTrue)
(31,printLine(dest)
(32,source[100-1])
(33,memset(source, \\\'A\\\', 100-1)
(34,RET)
(35,data)
(36,&data)
(37,1)
(38,data)
(39,stdin)
(40,"")
(41,1)
(42,dest)
(43,dest)
(44,source)
(45,data)
(46,source[100-1] = \\\'\\\\0\\\')
(47,\\\'\\\\0\\\')
(48,"%d")
(49,data < 100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^