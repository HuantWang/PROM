-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fgets_strncpy_64_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* FLAW: Use a value input from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to short */
            data = (short)atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    CWE194_Unexpected_Sign_Extension__fgets_strncpy_64b_badSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
18,20
20,21
20,22
20,23
22,23
23,24
25,26
27,28
27,29
27,30
28,29
28,30
29,30
29,31
29,32
29,33
30,31
32,33
34,35
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
45,47
46,47
46,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
60,61
61,62
61,63
62,63
64,65
65,66
-----nextToken-----
2,4,8,10,14,15,19,21,24,26,31,33,35,37,39,44,47,48,51,53,58,59,63,66
-----computeFrom-----
12,13
12,14
28,29
28,30
42,43
42,44
-----guardedBy-----
33,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fgets_strncpy_64_bad(){    short data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* FLAW: Use a value input from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    CWE194_Unexpected_Sign_Extension__fgets_strncpy_64b_badSink(&data);}
void
CWE194_Unexpected_Sign_Extension__fgets_strncpy_64_bad()
CWE194_Unexpected_Sign_Extension__fgets_strncpy_64_bad
{    short data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* FLAW: Use a value input from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    CWE194_Unexpected_Sign_Extension__fgets_strncpy_64b_badSink(&data);}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* FLAW: Use a value input from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to short */            data = (short)atoi(inputBuffer);        }
data = (short)atoi(inputBuffer);
data = (short)atoi(inputBuffer)
data
data
(short)atoi(inputBuffer)
short
short

atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
CWE194_Unexpected_Sign_Extension__fgets_strncpy_64b_badSink(&data);
CWE194_Unexpected_Sign_Extension__fgets_strncpy_64b_badSink(&data)
CWE194_Unexpected_Sign_Extension__fgets_strncpy_64b_badSink
CWE194_Unexpected_Sign_Extension__fgets_strncpy_64b_badSink
&data
data
data
-----joern-----
(29,14,0)
(9,19,0)
(14,11,0)
(20,11,0)
(18,2,0)
(0,30,0)
(23,30,0)
(28,10,0)
(12,18,0)
(16,11,0)
(21,6,0)
(16,8,0)
(5,16,0)
(22,6,0)
(11,20,0)
(30,21,0)
(19,30,0)
(30,19,0)
(3,21,0)
(14,21,0)
(2,18,0)
(4,28,0)
(1,21,0)
(18,16,0)
(18,28,0)
(2,10,0)
(11,14,0)
(7,28,0)
(17,10,0)
(26,30,0)
(11,16,0)
(15,6,0)
(6,10,0)
(24,25,0)
(25,13,0)
(19,9,1)
(30,26,1)
(0,21,1)
(14,21,1)
(26,23,1)
(2,18,1)
(30,21,1)
(18,28,1)
(12,16,1)
(18,16,1)
(23,0,1)
(19,30,1)
(1,28,1)
(18,12,1)
(3,1,1)
(11,20,1)
(5,19,1)
(28,4,1)
(29,5,1)
(24,19,1)
(21,3,1)
(9,30,1)
(12,25,1)
(14,29,1)
(27,2,1)
(25,24,1)
(11,14,1)
(4,7,1)
(16,11,1)
(5,19,2)
(18,28,2)
(2,18,2)
(16,11,2)
(11,20,2)
(19,30,2)
(16,19,2)
(29,19,2)
(24,19,2)
(30,21,2)
(11,14,2)
(18,16,2)
(11,19,2)
(14,21,2)
(25,19,2)
(14,19,2)
-----------------------------------
(0,inputBuffer)
(1,inputBuffer)
(2,CWE194_Unexpected_Sign_Extension__fgets_strncpy_64b_badSink(&data)
(3,"")
(4,0)
(5,data)
(6,)
(7,data)
(8,)
(9,NULL)
(10,)
(11,(short)
(12,data)
(13,)
(14,atoi(inputBuffer)
(15,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(16,data = (short)
(17,data)
(18,&data)
(19,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(20,short)
(21,inputBuffer[CHAR_ARRAY_SIZE] = "")
(22,inputBuffer)
(23,CHAR_ARRAY_SIZE)
(24,"fgets()
(25,printLine("fgets()
(26,stdin)
(27,RET)
(28,data = 0)
(29,inputBuffer)
(30,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^