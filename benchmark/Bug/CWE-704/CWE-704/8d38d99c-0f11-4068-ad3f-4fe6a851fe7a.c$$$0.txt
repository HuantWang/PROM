-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_02_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(1)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
26,29
26,30
26,31
26,32
27,28
28,29
28,30
30,31
30,32
32,33
34,35
35,36
35,37
37,38
37,39
37,40
39,40
41,42
43,44
44,45
44,46
44,47
44,48
45,46
47,48
50,51
50,52
53,54
54,55
54,56
55,56
55,57
56,57
58,59
58,60
62,63
62,64
63,64
63,65
64,65
67,68
67,69
68,69
69,70
69,71
69,72
69,73
70,71
72,73
74,75
76,77
78,79
79,80
79,81
80,81
80,82
81,82
83,84
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,14,16,18,23,25,29,31,33,36,38,40,42,46,48,49,51,52,57,59,60,61,65,66,71,73,75,77,82,84,85,89,91
-----computeFrom-----
12,13
12,14
21,22
21,23
50,51
50,52
54,55
54,56
58,59
58,60
63,64
63,65
79,80
79,81
-----guardedBy-----
65,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_02_bad(){    int data;    /* Initialize data */    data = -1;    if(1)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_02_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_02_bad
{    int data;    /* Initialize data */    data = -1;    if(1)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(1)    {        /* FLAW: Use a negative number */        data = -1;    }
1
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(36,34,0)
(26,18,0)
(6,18,0)
(40,34,0)
(34,4,0)
(32,22,0)
(5,18,0)
(11,26,0)
(44,35,0)
(9,48,0)
(34,18,0)
(13,31,0)
(29,44,0)
(12,4,0)
(4,34,0)
(10,47,0)
(0,6,0)
(31,24,0)
(16,18,0)
(47,23,0)
(47,35,0)
(41,42,0)
(17,20,0)
(47,3,0)
(7,19,0)
(44,3,0)
(24,31,0)
(24,38,0)
(35,19,0)
(47,26,0)
(46,24,0)
(15,31,0)
(19,35,0)
(27,47,0)
(1,35,0)
(42,3,0)
(43,20,0)
(35,30,0)
(6,26,0)
(8,47,0)
(21,3,0)
(42,48,0)
(48,23,0)
(42,35,0)
(25,26,0)
(22,3,0)
(28,38,0)
(18,20,0)
(33,44,0)
(39,18,0)
(45,4,0)
(14,42,0)
(38,18,0)
(3,20,0)
(42,26,0)
(3,22,0)
(0,44,1)
(13,15,1)
(47,3,1)
(0,48,1)
(31,13,1)
(11,35,1)
(32,21,1)
(14,47,1)
(29,33,1)
(1,2,1)
(15,46,1)
(46,34,1)
(3,22,1)
(22,32,1)
(27,10,1)
(48,9,1)
(9,42,1)
(6,26,1)
(36,40,1)
(12,36,1)
(42,35,1)
(47,27,1)
(33,38,1)
(45,12,1)
(7,1,1)
(19,7,1)
(11,2,1)
(41,14,1)
(25,11,1)
(35,19,1)
(44,3,1)
(24,31,1)
(42,41,1)
(44,29,1)
(34,4,1)
(38,28,1)
(42,26,1)
(42,3,1)
(6,0,1)
(4,45,1)
(47,35,1)
(2,3,1)
(44,35,1)
(26,25,1)
(28,24,1)
(10,8,1)
(8,44,1)
(40,26,1)
(37,6,1)
(47,26,1)
(47,35,2)
(1,2,2)
(6,26,2)
(44,3,2)
(47,3,2)
(19,2,2)
(35,2,2)
(9,44,2)
(48,44,2)
(24,31,2)
(42,35,2)
(47,26,2)
(8,44,2)
(34,4,2)
(41,44,2)
(42,44,2)
(3,22,2)
(47,44,2)
(42,3,2)
(10,44,2)
(27,44,2)
(35,19,2)
(44,35,2)
(7,2,2)
(14,44,2)
(42,26,2)
-----------------------------------
(0,dest)
(1,data)
(2,1)
(3,data = -1)
(4,100-1)
(5,dest)
(6,printLine(dest)
(7,1)
(8,dest)
(9,\\\'\\\\0\\\')
(10,source)
(11,dest)
(12,100)
(13,1)
(14,dest)
(15,100)
(16,source)
(17,data)
(18,)
(19,-1)
(20,)
(21,data)
(22,-1)
(23,)
(24,source[100-1])
(25,"")
(26,dest[100] = "")
(27,data)
(28,\\\'\\\\0\\\')
(29,100)
(30,)
(31,100-1)
(32,1)
(33,data)
(34,memset(source, \\\'A\\\', 100-1)
(35,data = -1)
(36,\\\'A\\\')
(37,RET)
(38,source[100-1] = \\\'\\\\0\\\')
(39,if (data < 100)
(40,source)
(41,data)
(42,dest[data])
(43,if(1)
(44,data < 100)
(45,1)
(46,source)
(47,memmove(dest, source, data)
(48,dest[data] = \\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^