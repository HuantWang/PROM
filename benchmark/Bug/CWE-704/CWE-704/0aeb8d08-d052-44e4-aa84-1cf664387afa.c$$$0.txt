-----label-----
1
-----code-----
void CWE843_Type_Confusion__char_32_bad()
{
    void * data;
    void * *dataPtr1 = &data;
    void * *dataPtr2 = &data;
    /* Initialize data */
    data = NULL;
    {
        void * data = *dataPtr1;
        {
            /* FLAW: Point data to a char */
            char charBuffer = 'a';
            data = &charBuffer;
        }
        *dataPtr1 = data;
    }
    {
        void * data = *dataPtr2;
        /* POTENTIAL FLAW: Attempt to access data as an int */
        printIntLine(*((int*)data));
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
15,19
19,20
20,21
21,22
23,24
24,25
24,26
26,27
26,28
26,29
26,30
30,31
31,32
32,33
34,35
35,36
35,37
36,37
38,39
40,41
40,42
40,43
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
49,50
51,52
51,53
52,53
53,54
53,55
55,56
55,57
57,58
59,60
60,61
60,62
61,62
63,64
64,65
66,67
67,68
67,69
68,69
69,70
71,72
73,74
73,75
74,75
75,76
75,77
77,78
77,79
77,80
80,81
81,82
82,83
84,85
85,86
85,87
86,87
88,89
89,90
90,91
90,92
91,92
91,93
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,16,17,18,22,25,27,28,29,33,37,39,43,45,46,50,54,56,58,62,65,70,72,76,78,79,83,87,92,94,96
-----computeFrom-----
35,36
35,37
60,61
60,62
67,68
67,69
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;UnaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE843_Type_Confusion__char_32_bad(){    void * data;    void * *dataPtr1 = &data;    void * *dataPtr2 = &data;    /* Initialize data */    data = NULL;    {        void * data = *dataPtr1;        {            /* FLAW: Point data to a char */            char charBuffer = 'a';            data = &charBuffer;        }        *dataPtr1 = data;    }    {        void * data = *dataPtr2;        /* POTENTIAL FLAW: Attempt to access data as an int */        printIntLine(*((int*)data));    }}
void
CWE843_Type_Confusion__char_32_bad()
CWE843_Type_Confusion__char_32_bad
{    void * data;    void * *dataPtr1 = &data;    void * *dataPtr2 = &data;    /* Initialize data */    data = NULL;    {        void * data = *dataPtr1;        {            /* FLAW: Point data to a char */            char charBuffer = 'a';            data = &charBuffer;        }        *dataPtr1 = data;    }    {        void * data = *dataPtr2;        /* POTENTIAL FLAW: Attempt to access data as an int */        printIntLine(*((int*)data));    }}
void * data;
void * data;
void
* data
*
data
void * *dataPtr1 = &data;
void * *dataPtr1 = &data;
void
* *dataPtr1 = &data
*
*
dataPtr1
= &data
&data
data
data
void * *dataPtr2 = &data;
void * *dataPtr2 = &data;
void
* *dataPtr2 = &data
*
*
dataPtr2
= &data
&data
data
data
data = NULL;
data = NULL
data
data
NULL
NULL
{        void * data = *dataPtr1;        {            /* FLAW: Point data to a char */            char charBuffer = 'a';            data = &charBuffer;        }        *dataPtr1 = data;    }
void * data = *dataPtr1;
void * data = *dataPtr1;
void
* data = *dataPtr1
*
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
{            /* FLAW: Point data to a char */            char charBuffer = 'a';            data = &charBuffer;        }
char charBuffer = 'a';
char charBuffer = 'a';
char
charBuffer = 'a'
charBuffer
= 'a'
'a'
data = &charBuffer;
data = &charBuffer
data
data
&charBuffer
charBuffer
charBuffer
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        void * data = *dataPtr2;        /* POTENTIAL FLAW: Attempt to access data as an int */        printIntLine(*((int*)data));    }
void * data = *dataPtr2;
void * data = *dataPtr2;
void
* data = *dataPtr2
*
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
printIntLine(*((int*)data));
printIntLine(*((int*)data))
printIntLine
printIntLine
*((int*)data)
((int*)data)
(int*)data
int*
int
*
*
data
data
-----joern-----
(19,33,0)
(11,24,0)
(4,14,0)
(41,14,0)
(31,32,0)
(33,25,0)
(25,34,0)
(39,4,0)
(35,41,0)
(46,34,0)
(2,8,0)
(9,39,0)
(3,31,0)
(18,33,0)
(18,46,0)
(27,8,0)
(5,9,0)
(23,14,0)
(8,14,0)
(24,14,0)
(44,25,0)
(6,29,0)
(16,34,0)
(25,45,0)
(34,14,0)
(32,31,0)
(11,36,0)
(38,6,0)
(46,18,0)
(26,24,0)
(33,18,0)
(29,39,0)
(20,2,0)
(36,4,0)
(45,8,0)
(6,9,0)
(10,45,0)
(8,2,0)
(13,14,0)
(32,4,0)
(24,26,0)
(17,33,0)
(30,9,0)
(21,41,0)
(45,25,0)
(7,32,0)
(1,11,0)
(33,17,0)
(36,29,0)
(12,39,0)
(15,4,0)
(22,29,0)
(29,6,0)
(43,26,0)
(40,24,0)
(31,24,0)
(28,36,0)
(0,14,0)
(5,30,1)
(41,21,1)
(21,35,1)
(33,25,1)
(11,24,1)
(33,19,1)
(29,6,1)
(22,9,1)
(7,41,1)
(42,46,1)
(27,24,1)
(19,25,1)
(9,5,1)
(31,24,1)
(26,43,1)
(1,29,1)
(46,18,1)
(3,7,1)
(36,29,1)
(44,36,1)
(11,1,1)
(10,44,1)
(35,8,1)
(38,22,1)
(30,32,1)
(45,10,1)
(25,45,1)
(8,2,1)
(6,38,1)
(33,17,1)
(36,28,1)
(31,3,1)
(2,20,1)
(18,33,1)
(6,9,1)
(45,8,1)
(20,27,1)
(43,40,1)
(24,26,1)
(28,11,1)
(32,31,1)
(18,33,2)
(31,24,2)
(29,6,2)
(33,25,2)
(25,45,2)
(33,17,2)
(24,26,2)
(32,31,2)
(46,18,2)
(45,8,2)
(6,9,2)
(11,24,2)
(36,29,2)
(8,2,2)
-----------------------------------
(0,data)
(1,dataPtr1)
(2,&data)
(3,dataPtr1)
(4,)
(5,'a')
(6,&charBuffer)
(7,data)
(8,* *dataPtr2 = &data)
(9,charBuffer = \'a\')
(10,dataPtr2)
(11,*dataPtr1)
(12,charBuffer)
(13,dataPtr1)
(14,)
(15,data)
(16,data)
(17,int*)
(18,*((int*)
(19,data)
(20,data)
(21,NULL)
(22,data)
(23,dataPtr2)
(24,* *dataPtr1 = &data)
(25,* data = *dataPtr2)
(26,&data)
(27,dataPtr2)
(28,data)
(29,data = &charBuffer)
(30,charBuffer)
(31,*dataPtr1)
(32,* data = *dataPtr1)
(33,(int*)
(34,)
(35,data)
(36,*dataPtr1 = data)
(37,charBuffer = 'a')
(38,charBuffer)
(39,)
(40,dataPtr1)
(41,data = NULL)
(42,RET)
(43,data)
(44,data)
(45,*dataPtr2)
(46,printIntLine(*((int*)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^