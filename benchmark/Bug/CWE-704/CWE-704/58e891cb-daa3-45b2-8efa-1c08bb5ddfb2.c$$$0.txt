-----label-----
1
-----code-----
void CWE196_Unsigned_to_Signed_Conversion_Error__basic_02_bad()
{
    if(1)
    {
        {
            unsigned intUnsigned;
            int intSigned;
            intUnsigned = rand();
            if (rand() % 2 == 0)
            {
                intUnsigned = UINT_MAX - intUnsigned;
            }
            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */
            intSigned = intUnsigned;
            printIntLine(intSigned);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
8,9
9,10
9,11
9,12
9,13
9,14
9,15
10,11
11,12
11,13
13,14
15,16
16,17
16,18
18,19
20,21
21,22
21,23
22,23
24,25
25,26
27,28
27,29
28,29
28,30
29,30
29,31
30,31
31,32
35,36
36,37
37,38
37,39
38,39
40,41
40,42
41,42
43,44
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,7,12,14,17,19,23,26,32,33,34,39,42,44,48,50,54,56
-----computeFrom-----
21,22
21,23
28,29
28,30
29,30
29,31
37,38
37,39
40,41
40,42
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE196_Unsigned_to_Signed_Conversion_Error__basic_02_bad(){    if(1)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }}
void
CWE196_Unsigned_to_Signed_Conversion_Error__basic_02_bad()
CWE196_Unsigned_to_Signed_Conversion_Error__basic_02_bad
{    if(1)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }}
if(1)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }
1
{        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }
{            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }
unsigned intUnsigned;
unsigned intUnsigned;
unsigned
intUnsigned
intUnsigned
int intSigned;
int intSigned;
int
intSigned
intSigned
intUnsigned = rand();
intUnsigned = rand()
intUnsigned
intUnsigned
rand()
rand
rand
if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }
rand() % 2 == 0
rand() % 2
rand()
rand
rand
2
0
{                intUnsigned = UINT_MAX - intUnsigned;            }
intUnsigned = UINT_MAX - intUnsigned;
intUnsigned = UINT_MAX - intUnsigned
intUnsigned
intUnsigned
UINT_MAX - intUnsigned
UINT_MAX
UINT_MAX
intUnsigned
intUnsigned
intSigned = intUnsigned;
intSigned = intUnsigned
intSigned
intSigned
intUnsigned
intUnsigned
printIntLine(intSigned);
printIntLine(intSigned)
printIntLine
printIntLine
intSigned
intSigned
-----joern-----
(14,13,0)
(10,9,0)
(4,14,0)
(18,13,0)
(15,18,0)
(1,22,0)
(13,21,0)
(6,11,0)
(12,22,0)
(12,27,0)
(4,10,0)
(16,12,0)
(27,12,0)
(20,23,0)
(24,10,0)
(18,11,0)
(0,4,0)
(2,13,0)
(13,18,0)
(11,6,0)
(22,12,0)
(5,14,0)
(17,18,0)
(26,10,0)
(14,10,0)
(11,10,0)
(19,10,0)
(14,11,0)
(7,14,0)
(8,11,0)
(4,14,1)
(6,8,1)
(3,25,1)
(3,4,1)
(13,18,1)
(0,14,1)
(4,0,1)
(7,13,1)
(1,12,1)
(12,16,1)
(14,5,1)
(22,12,1)
(8,25,1)
(16,27,1)
(14,13,1)
(5,7,1)
(2,22,1)
(17,2,1)
(12,27,1)
(14,11,1)
(7,22,1)
(18,11,1)
(27,11,1)
(15,17,1)
(11,6,1)
(18,15,1)
(22,1,1)
(5,25,2)
(16,25,2)
(2,22,2)
(17,22,2)
(11,25,2)
(18,22,2)
(11,6,2)
(6,25,2)
(14,13,2)
(22,25,2)
(0,25,2)
(18,11,2)
(7,25,2)
(4,25,2)
(14,11,2)
(13,22,2)
(27,25,2)
(4,14,2)
(12,25,2)
(15,22,2)
(12,27,2)
(1,25,2)
(8,25,2)
(22,12,2)
(13,18,2)
(14,25,2)
-----------------------------------
(0,intSigned)
(1,0)
(2,intUnsigned)
(3,RET)
(4,printIntLine(intSigned)
(5,intUnsigned)
(6,rand()
(7,intSigned)
(8,intUnsigned)
(9,)
(10,)
(11,intUnsigned = rand()
(12,rand()
(13,intUnsigned = UINT_MAX - intUnsigned)
(14,intSigned = intUnsigned)
(15,intUnsigned)
(16,2)
(17,UINT_MAX)
(18,UINT_MAX - intUnsigned)
(19,intSigned)
(20,if(1)
(21,)
(22,rand()
(23,)
(24,intUnsigned)
(25,1)
(26,if (rand()
(27,rand()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^