-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_07_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(staticFive==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
23,25
24,25
25,26
25,27
27,28
27,29
27,30
29,30
30,31
32,33
34,35
34,36
34,37
35,36
35,37
36,37
36,38
36,39
36,40
37,38
39,40
41,42
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
63,64
63,65
64,65
65,66
65,67
67,68
67,69
69,70
70,71
70,72
71,72
71,73
74,75
76,77
77,78
77,79
78,79
80,81
-----nextToken-----
2,4,8,10,14,16,20,21,26,28,31,33,38,40,42,44,46,51,54,56,61,62,66,68,72,73,75,79,81
-----computeFrom-----
12,13
12,14
18,19
18,20
35,36
35,37
49,50
49,51
-----guardedBy-----
40,56
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_07_bad(){    int data;    /* Initialize data */    data = -1;    if(staticFive==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_char_07_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_char_07_bad
{    int data;    /* Initialize data */    data = -1;    if(staticFive==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(staticFive==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
staticFive==5
staticFive
staticFive
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(8,17,0)
(2,40,0)
(13,5,0)
(21,13,0)
(27,35,0)
(13,20,0)
(13,21,0)
(20,32,0)
(40,9,0)
(10,19,0)
(31,12,0)
(22,2,0)
(13,14,0)
(11,17,0)
(34,2,0)
(3,2,0)
(34,5,0)
(14,13,0)
(5,7,0)
(28,12,0)
(37,5,0)
(32,20,0)
(23,20,0)
(5,34,0)
(14,11,0)
(19,24,0)
(36,19,0)
(16,24,0)
(6,14,0)
(0,32,0)
(18,17,0)
(38,34,0)
(4,40,0)
(30,19,0)
(19,2,0)
(24,19,0)
(25,13,0)
(26,6,0)
(20,17,0)
(6,11,0)
(1,11,0)
(39,40,0)
(29,14,0)
(33,27,0)
(32,0,1)
(13,20,1)
(25,29,1)
(27,33,1)
(3,12,1)
(24,19,1)
(31,20,1)
(22,3,1)
(6,14,1)
(26,14,1)
(38,37,1)
(0,23,1)
(14,13,1)
(34,38,1)
(37,24,1)
(6,26,1)
(16,19,1)
(33,24,1)
(24,16,1)
(29,12,1)
(2,22,1)
(12,28,1)
(15,6,1)
(13,21,1)
(13,25,1)
(36,10,1)
(34,2,1)
(5,34,1)
(19,2,1)
(28,31,1)
(10,2,1)
(29,27,1)
(19,30,1)
(30,36,1)
(13,5,1)
(20,32,1)
(29,5,1)
(24,19,2)
(20,32,2)
(34,2,2)
(37,24,2)
(24,12,2)
(27,24,2)
(10,12,2)
(16,12,2)
(5,24,2)
(3,12,2)
(19,2,2)
(38,24,2)
(22,12,2)
(6,14,2)
(36,12,2)
(30,12,2)
(13,20,2)
(19,12,2)
(5,34,2)
(13,21,2)
(34,24,2)
(2,12,2)
(33,24,2)
(14,13,2)
(13,5,2)
-----------------------------------
(0,1)
(1,charData)
(2,inputBuffer[CHAR_ARRAY_SIZE] = "")
(3,inputBuffer)
(4,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(5,data = atoi(inputBuffer)
(6,printHexCharLine(charData)
(7,)
(8,if(staticFive==5)
(9,)
(10,inputBuffer)
(11,)
(12,staticFive==5)
(13,(char)
(14,charData = (char)
(15,RET)
(16,NULL)
(17,)
(18,data)
(19,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(20,data = -1)
(21,char)
(22,"")
(23,data)
(24,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(25,data)
(26,charData)
(27,printLine("fgets()
(28,5)
(29,charData)
(30,stdin)
(31,staticFive)
(32,-1)
(33,"fgets()
(34,atoi(inputBuffer)
(35,)
(36,CHAR_ARRAY_SIZE)
(37,data)
(38,inputBuffer)
(39,inputBuffer)
(40,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^