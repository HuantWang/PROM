-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_03_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(5==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
32,35
32,36
32,37
32,38
33,34
34,35
34,36
36,37
36,38
38,39
40,41
41,42
41,43
43,44
43,45
43,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
68,70
69,70
69,71
70,71
73,74
73,75
74,75
75,76
75,77
75,78
75,79
76,77
78,79
80,81
82,83
84,85
85,86
85,87
86,87
86,88
87,88
89,90
92,93
93,94
93,95
94,95
96,97
-----nextToken-----
2,4,8,10,14,16,19,20,25,27,28,31,35,37,39,42,44,46,48,52,54,55,57,58,63,65,66,67,71,72,77,79,81,83,88,90,91,95,97
-----computeFrom-----
12,13
12,14
18,19
18,20
56,57
56,58
60,61
60,62
64,65
64,66
69,70
69,71
85,86
85,87
-----guardedBy-----
71,90
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_03_bad(){    int data;    /* Initialize data */    data = -1;    if(5==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_03_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_03_bad
{    int data;    /* Initialize data */    data = -1;    if(5==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(5==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
5==5
5
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(1,2,0)
(11,19,0)
(48,21,0)
(47,33,0)
(39,40,0)
(21,48,0)
(9,51,0)
(45,30,0)
(17,33,0)
(31,43,0)
(10,13,0)
(6,30,0)
(23,13,0)
(26,18,0)
(12,18,0)
(3,48,0)
(30,9,0)
(43,23,0)
(46,21,0)
(33,20,0)
(0,9,0)
(32,42,0)
(48,40,0)
(27,9,0)
(45,9,0)
(40,14,0)
(34,30,0)
(29,51,0)
(35,14,0)
(21,49,0)
(16,40,0)
(24,19,0)
(14,40,0)
(25,43,0)
(13,9,0)
(42,40,0)
(44,20,0)
(18,40,0)
(2,41,0)
(15,16,0)
(50,16,0)
(33,9,0)
(40,51,0)
(16,41,0)
(5,42,0)
(38,20,0)
(20,33,0)
(16,30,0)
(8,45,0)
(36,21,0)
(42,2,0)
(23,43,0)
(4,16,0)
(7,23,0)
(42,30,0)
(28,9,0)
(22,51,0)
(18,12,1)
(30,34,1)
(37,45,1)
(40,14,1)
(46,19,1)
(3,36,1)
(18,40,1)
(6,19,1)
(8,2,1)
(44,47,1)
(42,40,1)
(50,4,1)
(7,33,1)
(47,17,1)
(20,38,1)
(4,18,1)
(24,40,1)
(48,40,1)
(26,13,1)
(6,21,1)
(14,35,1)
(42,32,1)
(42,30,1)
(35,39,1)
(8,18,1)
(15,50,1)
(13,10,1)
(34,6,1)
(32,5,1)
(36,46,1)
(21,48,1)
(12,26,1)
(11,24,1)
(5,16,1)
(16,30,1)
(38,44,1)
(43,31,1)
(25,7,1)
(45,8,1)
(16,15,1)
(19,11,1)
(33,20,1)
(10,23,1)
(1,42,1)
(45,30,1)
(2,1,1)
(31,25,1)
(16,40,1)
(23,43,1)
(17,30,1)
(48,3,1)
(18,40,2)
(40,14,2)
(42,40,2)
(45,30,2)
(2,18,2)
(21,19,2)
(32,18,2)
(1,18,2)
(48,19,2)
(21,48,2)
(36,19,2)
(3,19,2)
(33,20,2)
(23,43,2)
(46,19,2)
(42,30,2)
(15,18,2)
(50,18,2)
(16,30,2)
(42,18,2)
(16,18,2)
(5,18,2)
(16,40,2)
(4,18,2)
(48,40,2)
-----------------------------------
(0,dest)
(1,\\\'\\\\0\\\')
(2,dest[data] = \\\'\\\\0\\\')
(3,data)
(4,dest)
(5,dest)
(6,dest)
(7,source)
(8,dest)
(9,)
(10,\\\'\\\\0\\\')
(11,5)
(12,100)
(13,source[100-1] = \\\'\\\\0\\\')
(14,-1)
(15,data)
(16,memmove(dest, source, data)
(17,source)
(18,data < 100)
(19,5==5)
(20,100-1)
(21,fscanf(stdin, "%d", &data)
(22,data)
(23,source[100-1])
(24,5)
(25,100)
(26,data)
(27,source)
(28,if (data < 100)
(29,if(5==5)
(30,dest[100] = "")
(31,1)
(32,data)
(33,memset(source, \\\'A\\\', 100-1)
(34,"")
(35,1)
(36,"%d")
(37,RET)
(38,1)
(39,data)
(40,data = -1)
(41,)
(42,dest[data])
(43,100-1)
(44,100)
(45,printLine(dest)
(46,stdin)
(47,\\\'A\\\')
(48,&data)
(49,)
(50,source)
(51,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^