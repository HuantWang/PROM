-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68b_badSink()
{
    int data = CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68_badData;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
14,17
14,18
14,19
14,20
15,16
16,17
16,18
18,19
18,20
20,21
22,23
23,24
23,25
25,26
25,27
25,28
27,28
29,30
31,32
32,33
32,34
32,35
32,36
33,34
35,36
38,39
38,40
41,42
42,43
42,44
43,44
43,45
44,45
46,47
46,48
50,51
50,52
51,52
51,53
52,53
55,56
55,57
56,57
57,58
57,59
57,60
57,61
58,59
60,61
62,63
64,65
66,67
67,68
67,69
68,69
68,70
69,70
71,72
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,8,10,13,17,19,21,24,26,28,30,34,36,37,39,40,45,47,48,49,53,54,59,61,63,65,70,72,73,77,79
-----computeFrom-----
38,39
38,40
42,43
42,44
46,47
46,48
51,52
51,53
67,68
67,69
-----guardedBy-----
53,72
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68b_badSink(){    int data = CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68_badData;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68b_badSink()
CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68b_badSink
{    int data = CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68_badData;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data = CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68_badData;
int data = CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68_badData;
int
data = CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68_badData
data
= CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68_badData
CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68_badData
CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68_badData
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(10,15,0)
(27,15,0)
(38,0,0)
(29,6,0)
(29,7,0)
(6,0,0)
(30,27,0)
(18,37,0)
(33,15,0)
(15,34,0)
(20,38,0)
(14,10,0)
(36,6,0)
(10,40,0)
(3,24,0)
(31,27,0)
(4,25,0)
(32,13,0)
(24,0,0)
(28,38,0)
(7,29,0)
(37,40,0)
(26,0,0)
(25,37,0)
(0,34,0)
(5,10,0)
(17,7,0)
(22,15,0)
(20,0,0)
(35,20,0)
(19,0,0)
(1,13,0)
(24,13,0)
(2,38,0)
(39,0,0)
(23,24,0)
(25,15,0)
(25,38,0)
(16,34,0)
(13,24,0)
(9,10,0)
(12,29,0)
(11,7,0)
(10,38,0)
(21,25,0)
(31,30,1)
(11,17,1)
(2,15,1)
(21,10,1)
(25,38,1)
(8,20,1)
(7,11,1)
(18,25,1)
(32,23,1)
(24,13,1)
(17,12,1)
(25,15,1)
(10,5,1)
(5,14,1)
(20,38,1)
(38,28,1)
(29,7,1)
(4,21,1)
(25,4,1)
(33,22,1)
(28,2,1)
(27,31,1)
(1,32,1)
(3,38,1)
(37,18,1)
(36,29,1)
(15,33,1)
(6,36,1)
(14,9,1)
(23,3,1)
(10,15,1)
(9,27,1)
(10,38,1)
(13,1,1)
(35,27,1)
(27,15,1)
(30,6,1)
(12,24,1)
(20,35,1)
(35,37,1)
(29,7,2)
(25,38,2)
(20,38,2)
(5,27,2)
(25,15,2)
(24,13,2)
(10,38,2)
(4,27,2)
(18,27,2)
(10,15,2)
(10,27,2)
(9,27,2)
(25,27,2)
(27,15,2)
(21,27,2)
(37,27,2)
(14,27,2)
-----------------------------------
(0,)
(1,1)
(2,dest)
(3,source)
(4,data)
(5,data)
(6,source[100-1] = \\\'\\\\0\\\')
(7,100-1)
(8,RET)
(9,dest)
(10,memcpy(dest, source, data)
(11,1)
(12,source)
(13,100-1)
(14,source)
(15,data = CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68_badData)
(16,data)
(17,100)
(18,\\\'\\\\0\\\')
(19,dest)
(20,printLine(dest)
(21,dest)
(22,data)
(23,\\\'A\\\')
(24,memset(source, \\\'A\\\', 100-1)
(25,dest[data])
(26,source)
(27,data < 100)
(28,"")
(29,source[100-1])
(30,data)
(31,100)
(32,100)
(33,CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_68_badData)
(34,)
(35,dest)
(36,\\\'\\\\0\\\')
(37,dest[data] = \\\'\\\\0\\\')
(38,dest[100] = "")
(39,if (data < 100)
(40,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^