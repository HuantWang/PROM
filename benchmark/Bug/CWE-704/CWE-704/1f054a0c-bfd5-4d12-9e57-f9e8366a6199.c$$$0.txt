-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_16_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    while(1)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
        break;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
19,21
20,21
21,22
21,23
22,23
24,25
25,26
28,29
28,30
28,31
28,32
28,33
28,34
29,30
30,31
30,32
32,33
32,34
34,35
36,37
37,38
37,39
39,40
39,41
39,42
41,42
43,44
45,46
46,47
46,48
46,49
46,50
47,48
49,50
52,53
52,54
55,56
56,57
56,58
57,58
57,59
58,59
60,61
60,62
64,65
64,66
65,66
65,67
66,67
69,70
69,71
70,71
71,72
71,73
71,74
71,75
72,73
74,75
76,77
78,79
80,81
81,82
81,83
82,83
82,84
83,84
85,86
88,89
89,90
89,91
90,91
92,93
-----nextToken-----
2,4,8,10,14,16,18,23,26,27,31,33,35,38,40,42,44,48,50,51,53,54,59,61,62,63,67,68,73,75,77,79,84,86,87,91,93
-----computeFrom-----
12,13
12,14
21,22
21,23
52,53
52,54
56,57
56,58
60,61
60,62
65,66
65,67
81,82
81,83
-----guardedBy-----
67,86
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_16_bad(){    int data;    /* Initialize data */    data = -1;    while(1)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_16_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_16_bad
{    int data;    /* Initialize data */    data = -1;    while(1)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
while(1)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    }
1
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
break;
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(19,30,0)
(16,5,0)
(28,7,0)
(35,34,0)
(8,17,0)
(21,34,0)
(43,22,0)
(45,41,0)
(12,43,0)
(33,5,0)
(41,14,0)
(39,27,0)
(7,5,0)
(11,14,0)
(34,33,0)
(2,5,0)
(0,17,0)
(41,45,0)
(17,0,0)
(46,16,0)
(8,4,0)
(6,33,0)
(20,7,0)
(38,43,0)
(5,23,0)
(8,41,0)
(25,27,0)
(8,30,0)
(36,23,0)
(31,0,0)
(27,17,0)
(26,43,0)
(17,23,0)
(9,20,0)
(16,30,0)
(44,32,0)
(42,5,0)
(43,17,0)
(43,30,0)
(4,22,0)
(37,5,0)
(32,20,0)
(10,8,0)
(29,23,0)
(13,30,0)
(40,32,0)
(3,17,0)
(24,4,0)
(27,41,0)
(33,34,0)
(43,41,0)
(18,33,0)
(30,5,0)
(20,32,0)
(47,8,0)
(1,41,0)
(48,17,1)
(39,25,1)
(20,32,1)
(25,7,1)
(41,45,1)
(27,41,1)
(18,6,1)
(47,10,1)
(43,17,1)
(21,18,1)
(31,3,1)
(9,33,1)
(38,12,1)
(7,28,1)
(30,13,1)
(40,9,1)
(46,4,1)
(15,16,1)
(44,40,1)
(46,27,1)
(43,30,1)
(16,46,1)
(0,31,1)
(8,41,1)
(12,26,1)
(11,41,1)
(10,43,1)
(43,38,1)
(19,48,1)
(8,47,1)
(35,21,1)
(34,35,1)
(13,19,1)
(33,34,1)
(27,17,1)
(8,30,1)
(6,30,1)
(43,41,1)
(4,24,1)
(24,8,1)
(8,17,1)
(28,20,1)
(16,30,1)
(32,44,1)
(45,1,1)
(19,11,1)
(1,48,1)
(27,39,1)
(26,27,1)
(17,0,1)
(8,17,2)
(16,30,2)
(41,48,2)
(27,17,2)
(11,48,2)
(43,17,2)
(24,27,2)
(43,30,2)
(43,41,2)
(41,45,2)
(12,27,2)
(43,27,2)
(47,27,2)
(45,48,2)
(10,27,2)
(1,48,2)
(27,41,2)
(33,34,2)
(26,27,2)
(38,27,2)
(8,27,2)
(8,41,2)
(20,32,2)
(8,30,2)
(4,27,2)
(17,0,2)
-----------------------------------
(0,-1)
(1,data)
(2,if (data < 100)
(3,data)
(4,dest[data] = \\\'\\\\0\\\')
(5,)
(6,source)
(7,source[100-1] = \\\'\\\\0\\\')
(8,dest[data])
(9,source)
(10,dest)
(11,break;)
(12,source)
(13,"")
(14,)
(15,RET)
(16,printLine(dest)
(17,data = -1)
(18,\\\'A\\\')
(19,dest)
(20,source[100-1])
(21,100)
(22,)
(23,)
(24,\\\'\\\\0\\\')
(25,data)
(26,dest)
(27,data < 100)
(28,\\\'\\\\0\\\')
(29,while(1)
(30,dest[100] = "")
(31,1)
(32,100-1)
(33,memset(source, \\\'A\\\', 100-1)
(34,100-1)
(35,1)
(36,data)
(37,dest)
(38,data)
(39,100)
(40,100)
(41,data = RAND32()
(42,source)
(43,strncpy(dest, source, data)
(44,1)
(45,RAND32()
(46,dest)
(47,data)
(48,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^