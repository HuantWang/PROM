-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    int * dataPtr = (int *)dataVoidPtr;
    /* dereference dataPtr into data */
    int data = (*dataPtr);
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
35,37
35,38
35,39
35,40
35,41
36,37
37,38
37,39
39,40
39,41
41,42
43,44
44,45
44,46
46,47
46,48
46,49
48,49
50,51
52,53
53,54
53,55
53,56
53,57
54,55
56,57
59,60
59,61
62,63
63,64
63,65
64,65
64,66
65,66
67,68
67,69
71,72
71,73
72,73
72,74
73,74
76,77
76,78
77,78
78,79
78,80
78,81
78,82
79,80
81,82
83,84
85,86
87,88
88,89
88,90
89,90
89,91
90,91
92,93
95,96
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,38,40,42,45,47,49,51,55,57,58,60,61,66,68,69,70,74,75,80,82,84,86,91,93,94,98,100
-----computeFrom-----
59,60
59,61
63,64
63,65
67,68
67,69
72,73
72,74
88,89
88,90
-----guardedBy-----
74,93
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_64b_badSink(void * dataVoidPtr)
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int * dataPtr = (int *)dataVoidPtr;
int * dataPtr = (int *)dataVoidPtr;
int
* dataPtr = (int *)dataVoidPtr
*
dataPtr
= (int *)dataVoidPtr
(int *)dataVoidPtr
int *
int
*
*
dataVoidPtr
dataVoidPtr
int data = (*dataPtr);
int data = (*dataPtr);
int
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(42,13,0)
(3,38,0)
(33,38,0)
(12,18,0)
(20,45,0)
(11,44,0)
(34,25,0)
(40,2,0)
(13,45,0)
(41,21,0)
(14,21,0)
(28,16,0)
(43,16,0)
(22,45,0)
(21,48,0)
(35,48,0)
(19,29,0)
(24,29,0)
(14,38,0)
(39,28,0)
(23,21,0)
(8,28,0)
(31,21,0)
(45,48,0)
(16,28,0)
(29,19,0)
(1,6,0)
(32,2,0)
(29,44,0)
(4,14,0)
(26,48,0)
(44,48,0)
(29,36,0)
(25,0,0)
(2,38,0)
(2,17,0)
(18,25,0)
(45,13,0)
(15,0,0)
(2,45,0)
(6,38,0)
(28,21,0)
(0,21,0)
(6,45,0)
(46,2,0)
(44,29,0)
(30,16,0)
(13,44,0)
(38,21,0)
(37,22,0)
(47,18,0)
(5,6,0)
(10,17,0)
(6,10,0)
(9,22,0)
(25,18,0)
(27,10,0)
(6,5,1)
(4,22,1)
(8,39,1)
(39,38,1)
(1,2,1)
(29,24,1)
(7,14,1)
(4,10,1)
(16,43,1)
(29,19,1)
(22,45,1)
(25,18,1)
(9,37,1)
(37,0,1)
(14,4,1)
(2,38,1)
(0,15,1)
(20,44,1)
(32,40,1)
(47,34,1)
(27,6,1)
(24,11,1)
(12,47,1)
(18,12,1)
(15,25,1)
(43,30,1)
(3,33,1)
(40,46,1)
(46,22,1)
(29,36,1)
(2,45,1)
(2,32,1)
(33,45,1)
(45,13,1)
(42,20,1)
(6,38,1)
(6,45,1)
(13,44,1)
(30,8,1)
(10,27,1)
(13,42,1)
(44,29,1)
(5,1,1)
(38,3,1)
(34,28,1)
(28,16,1)
(14,38,1)
(22,9,1)
(32,22,2)
(5,22,2)
(10,22,2)
(25,18,2)
(22,45,2)
(2,45,2)
(45,13,2)
(6,22,2)
(46,22,2)
(40,22,2)
(14,38,2)
(6,38,2)
(1,22,2)
(13,44,2)
(27,22,2)
(28,16,2)
(29,36,2)
(2,38,2)
(2,22,2)
(44,29,2)
(6,45,2)
(29,19,2)
-----------------------------------
(0,source[100-1] = \\\'\\\\0\\\')
(1,dest)
(2,memcpy(dest, source, data)
(3,"")
(4,dest)
(5,data)
(6,dest[data])
(7,RET)
(8,\\\'A\\\')
(9,100)
(10,dest[data] = \\\'\\\\0\\\')
(11,dataPtr)
(12,1)
(13,*dataPtr)
(14,printLine(dest)
(15,\\\'\\\\0\\\')
(16,100-1)
(17,)
(18,100-1)
(19,int *)
(20,data)
(21,)
(22,data < 100)
(23,if (data < 100)
(24,dataVoidPtr)
(25,source[100-1])
(26,data)
(27,\\\'\\\\0\\\')
(28,memset(source, \\\'A\\\', 100-1)
(29,(int *)
(30,100)
(31,source)
(32,data)
(33,dest)
(34,source)
(35,dataPtr)
(36,void * dataVoidPtr)
(37,data)
(38,dest[100] = "")
(39,source)
(40,source)
(41,dest)
(42,dataPtr)
(43,1)
(44,* dataPtr = (int *)
(45,data = (*dataPtr)
(46,dest)
(47,100)
(48,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^