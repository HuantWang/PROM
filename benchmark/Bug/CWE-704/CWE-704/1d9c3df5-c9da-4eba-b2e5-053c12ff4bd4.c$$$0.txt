-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_fgets_03_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    if(5==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* FLAW: Use a number input from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to short */
                data = (short)atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
21,22
22,23
22,24
23,24
24,25
24,26
26,27
26,28
26,29
28,29
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
35,37
35,38
35,39
36,37
38,39
40,41
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
51,53
52,53
52,54
55,56
55,57
56,57
58,59
60,61
61,62
62,63
62,64
63,64
66,67
66,68
67,68
68,69
68,70
70,71
70,72
72,73
73,74
73,75
74,75
74,76
77,78
79,80
80,81
80,82
81,82
83,84
-----nextToken-----
2,4,8,10,14,16,19,20,25,27,30,32,37,39,41,43,45,50,53,54,57,59,64,65,69,71,75,76,78,82,84
-----computeFrom-----
12,13
12,14
18,19
18,20
34,35
34,36
48,49
48,50
-----guardedBy-----
39,59
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_fgets_03_bad(){    short data;    /* Initialize data */    data = -1;    if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* FLAW: Use a number input from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to short */                data = (short)atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_fgets_03_bad()
CWE197_Numeric_Truncation_Error__short_fgets_03_bad
{    short data;    /* Initialize data */    data = -1;    if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* FLAW: Use a number input from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to short */                data = (short)atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
if(5==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* FLAW: Use a number input from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to short */                data = (short)atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
5==5
5
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* FLAW: Use a number input from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to short */                data = (short)atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* FLAW: Use a number input from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to short */                data = (short)atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to short */                data = (short)atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to short */                data = (short)atoi(inputBuffer);            }
data = (short)atoi(inputBuffer);
data = (short)atoi(inputBuffer)
data
data
(short)atoi(inputBuffer)
short
short

atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(25,35,0)
(41,22,0)
(31,34,0)
(28,23,0)
(7,25,0)
(15,23,0)
(30,27,0)
(23,5,0)
(12,27,0)
(35,30,0)
(22,34,0)
(26,36,0)
(15,20,0)
(37,32,0)
(36,30,0)
(20,34,0)
(32,15,0)
(22,4,0)
(5,6,0)
(27,42,0)
(24,13,0)
(23,22,0)
(8,24,0)
(9,23,0)
(38,40,0)
(14,4,0)
(19,30,0)
(32,20,0)
(4,22,0)
(29,35,0)
(35,25,0)
(17,15,0)
(23,9,0)
(16,20,0)
(23,15,0)
(11,5,0)
(40,38,0)
(40,5,0)
(18,21,0)
(3,27,0)
(36,40,0)
(2,34,0)
(5,40,0)
(39,35,0)
(1,21,0)
(10,30,0)
(0,35,0)
(40,36,0)
(17,21,1)
(0,29,1)
(4,14,1)
(35,0,1)
(23,5,1)
(11,25,1)
(14,41,1)
(21,1,1)
(40,38,1)
(36,30,1)
(33,32,1)
(36,26,1)
(40,36,1)
(23,22,1)
(18,22,1)
(5,40,1)
(19,21,1)
(25,7,1)
(24,8,1)
(28,17,1)
(22,4,1)
(23,9,1)
(17,5,1)
(30,10,1)
(17,24,1)
(23,28,1)
(32,37,1)
(29,39,1)
(25,35,1)
(35,30,1)
(15,23,1)
(32,15,1)
(39,30,1)
(7,35,1)
(37,15,1)
(8,25,1)
(10,19,1)
(26,11,1)
(1,18,1)
(30,21,2)
(23,22,2)
(7,21,2)
(25,21,2)
(24,25,2)
(36,30,2)
(36,25,2)
(15,23,2)
(10,21,2)
(25,35,2)
(40,38,2)
(11,25,2)
(0,21,2)
(35,30,2)
(19,21,2)
(8,25,2)
(35,21,2)
(40,25,2)
(23,5,2)
(39,21,2)
(5,40,2)
(32,15,2)
(29,21,2)
(23,9,2)
(40,36,2)
(5,25,2)
(22,4,2)
(26,25,2)
-----------------------------------
(0,stdin)
(1,5)
(2,if(5==5)
(3,inputBuffer)
(4,-1)
(5,data = (short)
(6,)
(7,NULL)
(8,"fgets()
(9,char)
(10,"")
(11,data)
(12,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(13,)
(14,1)
(15,charData = (char)
(16,charData)
(17,charData)
(18,5)
(19,inputBuffer)
(20,)
(21,5==5)
(22,data = -1)
(23,(char)
(24,printLine("fgets()
(25,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(26,inputBuffer)
(27,)
(28,data)
(29,CHAR_ARRAY_SIZE)
(30,inputBuffer[CHAR_ARRAY_SIZE] = "")
(31,data)
(32,printHexCharLine(charData)
(33,RET)
(34,)
(35,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(36,atoi(inputBuffer)
(37,charData)
(38,short)
(39,inputBuffer)
(40,(short)
(41,data)
(42,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^