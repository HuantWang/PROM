-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_17_bad()
{
    int i;
    int data;
    /* Initialize data */
    data = -1;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
22,26
23,24
24,25
24,26
25,26
28,29
28,30
29,30
32,33
33,34
35,36
36,37
37,38
37,39
37,40
37,41
38,39
40,41
43,44
44,45
46,47
46,48
46,49
46,50
46,51
46,52
47,48
48,49
48,50
50,51
50,52
52,53
54,55
55,56
55,57
57,58
57,59
57,60
59,60
61,62
63,64
64,65
64,66
64,67
64,68
65,66
67,68
70,71
70,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
78,80
82,83
82,84
83,84
83,85
84,85
87,88
87,89
88,89
89,90
89,91
89,92
89,93
90,91
92,93
94,95
96,97
98,99
99,100
99,101
100,101
100,102
101,102
103,104
106,107
107,108
107,109
108,109
110,111
-----nextToken-----
2,4,8,10,13,15,19,21,26,27,30,31,34,39,41,42,45,49,51,53,56,58,60,62,66,68,69,71,72,77,79,80,81,85,86,91,93,95,97,102,104,105,109,111
-----computeFrom-----
17,18
17,19
24,25
24,26
28,29
28,30
70,71
70,72
74,75
74,76
78,79
78,80
83,84
83,85
99,100
99,101
-----guardedBy-----
85,104
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_17_bad(){    int i;    int data;    /* Initialize data */    data = -1;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_17_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_17_bad
{    int i;    int data;    /* Initialize data */    data = -1;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int i;
int i;
int
i
i
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(1,46,0)
(11,56,0)
(26,56,0)
(28,33,0)
(49,26,0)
(32,27,0)
(23,45,0)
(10,18,0)
(34,20,0)
(11,26,0)
(39,37,0)
(30,19,0)
(8,11,0)
(3,27,0)
(45,33,0)
(21,26,0)
(40,12,0)
(42,27,0)
(43,0,0)
(37,35,0)
(34,3,0)
(22,21,0)
(36,56,0)
(46,3,0)
(18,25,0)
(50,26,0)
(13,12,0)
(44,27,0)
(17,25,0)
(54,45,0)
(21,19,0)
(24,37,0)
(37,26,0)
(56,27,0)
(18,0,0)
(12,40,0)
(4,3,0)
(12,56,0)
(41,4,0)
(7,20,0)
(57,34,0)
(53,33,0)
(6,56,0)
(16,37,0)
(31,12,0)
(38,25,0)
(51,46,0)
(5,40,0)
(9,20,0)
(15,56,0)
(21,3,0)
(47,29,0)
(0,56,0)
(3,4,0)
(25,18,0)
(20,48,0)
(2,21,0)
(14,40,0)
(29,33,0)
(37,3,0)
(20,34,0)
(19,35,0)
(52,3,0)
(31,26,1)
(40,5,1)
(21,26,1)
(11,8,1)
(3,4,1)
(17,10,1)
(22,2,1)
(1,51,1)
(13,31,1)
(25,38,1)
(7,9,1)
(47,20,1)
(38,17,1)
(23,29,1)
(46,3,1)
(43,18,1)
(57,7,1)
(30,21,1)
(16,24,1)
(19,30,1)
(4,41,1)
(8,46,1)
(26,50,1)
(33,28,1)
(28,53,1)
(11,26,1)
(39,16,1)
(45,54,1)
(34,57,1)
(55,11,1)
(18,25,1)
(45,33,1)
(9,45,1)
(50,49,1)
(12,40,1)
(2,37,1)
(34,3,1)
(37,39,1)
(14,13,1)
(20,34,1)
(5,14,1)
(51,0,1)
(53,3,1)
(23,33,1)
(8,19,1)
(54,23,1)
(37,26,1)
(29,33,1)
(49,45,1)
(0,43,1)
(21,3,1)
(29,47,1)
(46,1,1)
(24,46,1)
(37,3,1)
(21,22,1)
(10,12,1)
(41,52,1)
(21,46,2)
(2,46,2)
(30,46,2)
(29,45,2)
(12,40,2)
(54,45,2)
(37,46,2)
(16,46,2)
(47,45,2)
(18,25,2)
(21,26,2)
(9,45,2)
(45,33,2)
(7,45,2)
(19,46,2)
(20,45,2)
(3,4,2)
(37,26,2)
(57,45,2)
(21,3,2)
(37,3,2)
(11,26,2)
(22,46,2)
(29,33,2)
(23,45,2)
(20,34,2)
(34,3,2)
(39,46,2)
(24,46,2)
(45,45,2)
(46,3,2)
(34,45,2)
-----------------------------------
(0,source[100-1] = \\\'\\\\0\\\')
(1,100)
(2,dest)
(3,data = -1)
(4,-1)
(5,1)
(6,source)
(7,"%d")
(8,dest)
(9,stdin)
(10,source)
(11,printLine(dest)
(12,memset(source, \\\'A\\\', 100-1)
(13,\\\'A\\\')
(14,100)
(15,if (data < 100)
(16,source)
(17,100)
(18,source[100-1])
(19,dest[data] = \\\'\\\\0\\\')
(20,fscanf(stdin, "%d", &data)
(21,dest[data])
(22,data)
(23,i)
(24,dest)
(25,100-1)
(26,dest[100] = "")
(27,)
(28,0)
(29,i++)
(30,\\\'\\\\0\\\')
(31,source)
(32,i)
(33,i = 0)
(34,&data)
(35,)
(36,dest)
(37,strncpy(dest, source, data)
(38,1)
(39,data)
(40,100-1)
(41,1)
(42,data)
(43,\\\'\\\\0\\\')
(44,for(i = 0; i < 1; i++)
(45,i < 1)
(46,data < 100)
(47,i)
(48,)
(49,dest)
(50,"")
(51,data)
(52,data)
(53,i)
(54,1)
(55,RET)
(56,)
(57,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^