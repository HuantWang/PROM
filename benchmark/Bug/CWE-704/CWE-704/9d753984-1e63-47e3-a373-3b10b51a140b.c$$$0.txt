-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    switch(6)
    {
    case 6:
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
19,21
19,22
19,23
19,24
19,25
20,21
22,23
23,24
23,25
24,25
26,27
27,28
31,32
32,33
32,34
33,34
37,38
37,39
37,40
37,41
37,42
37,43
38,39
39,40
39,41
41,42
41,43
43,44
45,46
46,47
46,48
48,49
48,50
48,51
50,51
52,53
54,55
55,56
55,57
55,58
55,59
56,57
58,59
61,62
61,63
64,65
65,66
65,67
66,67
66,68
67,68
69,70
69,71
73,74
73,75
74,75
74,76
75,76
78,79
78,80
79,80
80,81
80,82
80,83
80,84
81,82
83,84
85,86
87,88
89,90
90,91
90,92
91,92
91,93
92,93
94,95
97,98
98,99
98,100
99,100
101,102
-----nextToken-----
2,4,8,10,14,16,18,21,25,28,29,30,34,35,36,40,42,44,47,49,51,53,57,59,60,62,63,68,70,71,72,76,77,82,84,86,88,93,95,96,100,102
-----computeFrom-----
12,13
12,14
23,24
23,25
61,62
61,63
65,66
65,67
69,70
69,71
74,75
74,76
90,91
90,92
-----guardedBy-----
76,95
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15_bad(){    int data;    /* Initialize data */    data = -1;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15_bad
{    int data;    /* Initialize data */    data = -1;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
switch(6)    {    case 6:        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(27,51,0)
(23,25,0)
(25,10,0)
(47,37,0)
(33,10,0)
(26,25,0)
(30,4,0)
(6,15,0)
(37,17,0)
(31,23,0)
(15,24,0)
(48,19,0)
(0,10,0)
(52,2,0)
(11,30,0)
(47,4,0)
(41,16,0)
(18,41,0)
(24,15,0)
(10,44,0)
(51,49,0)
(23,30,0)
(45,49,0)
(22,44,0)
(42,10,0)
(17,37,0)
(36,52,0)
(1,23,0)
(20,44,0)
(2,52,0)
(39,47,0)
(16,10,0)
(35,25,0)
(19,15,0)
(14,47,0)
(34,37,0)
(28,25,0)
(50,2,0)
(23,37,0)
(15,44,0)
(23,15,0)
(29,10,0)
(46,16,0)
(26,10,0)
(9,47,0)
(3,49,0)
(7,49,0)
(19,37,0)
(32,26,0)
(37,49,0)
(2,0,0)
(53,41,0)
(5,52,0)
(8,19,0)
(12,0,0)
(21,24,0)
(16,41,0)
(13,49,0)
(47,15,0)
(47,25,0)
(40,16,0)
(41,53,1)
(25,28,1)
(40,25,1)
(17,34,1)
(53,18,1)
(14,19,1)
(35,7,1)
(32,30,1)
(30,11,1)
(18,46,1)
(24,21,1)
(5,36,1)
(8,48,1)
(15,24,1)
(48,0,1)
(23,37,1)
(47,15,1)
(9,39,1)
(16,41,1)
(34,43,1)
(50,16,1)
(7,37,1)
(47,37,1)
(47,9,1)
(11,23,1)
(32,19,1)
(21,6,1)
(26,32,1)
(23,31,1)
(37,17,1)
(27,43,1)
(1,47,1)
(12,2,1)
(35,3,1)
(28,35,1)
(0,12,1)
(43,15,1)
(19,37,1)
(2,52,1)
(36,50,1)
(38,26,1)
(47,25,1)
(52,5,1)
(39,14,1)
(23,25,1)
(19,15,1)
(23,15,1)
(46,40,1)
(51,27,1)
(31,1,1)
(26,25,1)
(3,51,1)
(19,8,1)
(37,43,2)
(7,43,2)
(47,15,2)
(16,41,2)
(23,37,2)
(27,43,2)
(47,37,2)
(14,19,2)
(47,25,2)
(37,17,2)
(51,43,2)
(19,15,2)
(3,43,2)
(34,43,2)
(31,19,2)
(1,19,2)
(23,19,2)
(47,19,2)
(9,19,2)
(19,37,2)
(23,25,2)
(11,19,2)
(26,25,2)
(39,19,2)
(15,24,2)
(17,43,2)
(2,52,2)
(30,19,2)
(23,15,2)
-----------------------------------
(0,source[100-1] = \\\'\\\\0\\\')
(1,dest)
(2,source[100-1])
(3,break;)
(4,)
(5,1)
(6,data)
(7,break;)
(8,100)
(9,data)
(10,)
(11,\\\'\\\\0\\\')
(12,\\\'\\\\0\\\')
(13,case 6:)
(14,dest)
(15,data = -1)
(16,memset(source, \\\'A\\\', 100-1)
(17,RAND32()
(18,100)
(19,data < 100)
(20,data)
(21,1)
(22,switch(6)
(23,dest[data])
(24,-1)
(25,dest[100] = "")
(26,printLine(dest)
(27,"Benign, fixed string")
(28,"")
(29,dest)
(30,dest[data] = \\\'\\\\0\\\')
(31,data)
(32,dest)
(33,source)
(34,data)
(35,dest)
(36,100)
(37,data = RAND32()
(38,RET)
(39,source)
(40,source)
(41,100-1)
(42,if (data < 100)
(43,6)
(44,)
(45,default:)
(46,\\\'A\\\')
(47,memmove(dest, source, data)
(48,data)
(49,)
(50,source)
(51,printLine("Benign, fixed string")
(52,100-1)
(53,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^