-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    /* FLAW: Use a negative number */
    data = -1;
    {
        int dataCopy = data;
        int data = dataCopy;
        {
            char source[100];
            char dest[100] = "";
            memset(source, 'A', 100-1);
            source[100-1] = '\0';
            if (data < 100)
            {
                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
                 * the sign conversion could result in a very large number */
                strncpy(dest, source, data);
                dest[data] = '\0'; /* strncpy() does not always NULL terminate */
            }
            printLine(dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
23,24
23,25
23,26
24,25
25,26
25,27
27,28
27,29
29,30
30,31
32,33
33,34
33,35
35,36
35,37
37,38
38,39
40,41
40,42
40,43
40,44
40,45
40,46
41,42
42,43
42,44
44,45
44,46
46,47
48,49
49,50
49,51
51,52
51,53
51,54
53,54
55,56
57,58
58,59
58,60
58,61
58,62
59,60
61,62
64,65
64,66
67,68
68,69
68,70
69,70
69,71
70,71
72,73
72,74
76,77
76,78
77,78
77,79
78,79
81,82
81,83
82,83
83,84
83,85
83,86
83,87
84,85
86,87
88,89
90,91
92,93
93,94
93,95
94,95
94,96
95,96
97,98
100,101
101,102
101,103
102,103
104,105
-----nextToken-----
2,4,8,10,14,16,20,22,26,28,31,34,36,39,43,45,47,50,52,54,56,60,62,63,65,66,71,73,74,75,79,80,85,87,89,91,96,98,99,103,105
-----computeFrom-----
12,13
12,14
18,19
18,20
64,65
64,66
68,69
68,70
72,73
72,74
77,78
77,79
93,94
93,95
-----guardedBy-----
79,98
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31_bad(){    int data;    /* Initialize data */    data = -1;    /* FLAW: Use a negative number */    data = -1;    {        int dataCopy = data;        int data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31_bad
{    int data;    /* Initialize data */    data = -1;    /* FLAW: Use a negative number */    data = -1;    {        int dataCopy = data;        int data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = -1;
data = -1
data
data
-1
1
{        int dataCopy = data;        int data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }
int dataCopy = data;
int dataCopy = data;
int
dataCopy = data
dataCopy
= data
data
data
int data = dataCopy;
int data = dataCopy;
int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }
data < 100
data
data
100
{                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(15,32,0)
(7,47,0)
(42,32,0)
(40,35,0)
(31,35,0)
(20,28,0)
(21,26,0)
(54,36,0)
(10,37,0)
(28,22,0)
(6,22,0)
(9,41,0)
(40,38,0)
(43,54,0)
(14,52,0)
(18,42,0)
(1,4,0)
(49,40,0)
(38,35,0)
(26,21,0)
(11,38,0)
(47,35,0)
(0,25,0)
(24,25,0)
(19,26,0)
(54,25,0)
(54,38,0)
(39,9,0)
(28,37,0)
(9,26,0)
(25,9,0)
(52,14,0)
(32,42,0)
(50,32,0)
(3,14,0)
(8,41,0)
(45,4,0)
(53,4,0)
(29,9,0)
(16,21,0)
(30,25,0)
(42,35,0)
(41,22,0)
(46,52,0)
(37,28,0)
(35,41,0)
(13,42,0)
(27,30,0)
(34,38,0)
(25,41,0)
(36,23,0)
(12,54,0)
(2,35,0)
(5,14,0)
(26,22,0)
(4,25,0)
(52,47,0)
(33,30,0)
(44,36,0)
(4,38,0)
(17,35,0)
(4,23,0)
(48,41,0)
(32,15,1)
(45,53,1)
(52,14,1)
(42,32,1)
(34,11,1)
(4,25,1)
(9,39,1)
(3,46,1)
(30,33,1)
(11,25,1)
(21,16,1)
(18,13,1)
(10,20,1)
(49,36,1)
(24,0,1)
(0,9,1)
(14,5,1)
(26,21,1)
(33,27,1)
(37,10,1)
(40,38,1)
(54,12,1)
(51,40,1)
(49,30,1)
(39,29,1)
(38,34,1)
(28,37,1)
(9,26,1)
(50,18,1)
(29,26,1)
(16,19,1)
(4,45,1)
(46,42,1)
(15,50,1)
(4,38,1)
(1,30,1)
(47,7,1)
(36,44,1)
(19,28,1)
(25,24,1)
(40,49,1)
(43,4,1)
(53,1,1)
(12,43,1)
(25,9,1)
(30,25,1)
(7,52,1)
(54,38,1)
(13,38,1)
(27,47,1)
(44,54,1)
(5,3,1)
(54,25,1)
(44,30,2)
(43,30,2)
(4,38,2)
(9,26,2)
(30,25,2)
(1,30,2)
(40,38,2)
(54,38,2)
(54,30,2)
(52,14,2)
(53,30,2)
(42,32,2)
(45,30,2)
(25,9,2)
(4,30,2)
(4,25,2)
(36,30,2)
(28,37,2)
(12,30,2)
(26,21,2)
(54,25,2)
-----------------------------------
(0,data)
(1,dest)
(2,if (data < 100)
(3,100)
(4,strncpy(dest, source, data)
(5,1)
(6,data)
(7,\\\'\\\\0\\\')
(8,dataCopy)
(9,dataCopy = data)
(10,1)
(11,dest)
(12,data)
(13,source)
(14,100-1)
(15,1)
(16,1)
(17,dest)
(18,\\\'A\\\')
(19,data)
(20,data)
(21,-1)
(22,)
(23,)
(24,dataCopy)
(25,data = dataCopy)
(26,data = -1)
(27,data)
(28,data = -1)
(29,dataCopy)
(30,data < 100)
(31,source)
(32,100-1)
(33,100)
(34,"")
(35,)
(36,dest[data] = \\\'\\\\0\\\')
(37,-1)
(38,dest[100] = "")
(39,data)
(40,printLine(dest)
(41,)
(42,memset(source, \\\'A\\\', 100-1)
(43,dest)
(44,\\\'\\\\0\\\')
(45,data)
(46,source)
(47,source[100-1] = \\\'\\\\0\\\')
(48,data)
(49,dest)
(50,100)
(51,RET)
(52,source[100-1])
(53,source)
(54,dest[data])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^