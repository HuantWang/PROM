-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = -1;
    {
        int data = *dataPtr1;
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
            char charData = (char)data;
            printHexCharLine(charData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
35,36
37,38
37,39
37,40
38,39
39,40
39,41
41,42
41,43
43,44
44,45
45,46
47,48
47,49
48,49
49,50
49,51
51,52
51,53
51,54
53,54
54,55
56,57
58,59
58,60
58,61
59,60
59,61
60,61
60,62
60,63
60,64
61,62
63,64
65,66
67,68
69,70
71,72
72,73
73,74
73,75
74,75
76,77
76,78
77,78
79,80
81,82
82,83
83,84
83,85
84,85
87,88
88,89
88,90
89,90
90,91
92,93
94,95
94,96
95,96
96,97
96,98
98,99
98,100
100,101
101,102
102,103
104,105
104,106
105,106
106,107
106,108
108,109
108,110
110,111
111,112
111,113
112,113
112,114
115,116
117,118
118,119
118,120
119,120
121,122
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,36,40,42,46,50,52,55,57,62,64,66,68,70,75,78,80,85,86,91,93,97,99,103,107,109,113,114,116,120,122
-----computeFrom-----
32,33
32,34
59,60
59,61
73,74
73,75
88,89
88,90
-----guardedBy-----
64,80
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_char_32_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_char_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = -1;
data = -1
data
data
-1
1
{        int data = *dataPtr1;        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(40,59,0)
(19,51,0)
(3,22,0)
(47,30,0)
(2,30,0)
(42,15,0)
(16,35,0)
(56,15,0)
(8,54,0)
(33,1,0)
(7,3,0)
(30,51,0)
(2,60,0)
(29,51,0)
(10,59,0)
(46,32,0)
(55,56,0)
(7,22,0)
(0,43,0)
(39,35,0)
(46,30,0)
(50,55,0)
(38,1,0)
(53,46,0)
(45,40,0)
(57,59,0)
(11,43,0)
(54,15,0)
(43,60,0)
(27,18,0)
(14,55,0)
(44,60,0)
(55,57,0)
(22,57,0)
(43,35,0)
(14,34,0)
(1,59,0)
(14,3,0)
(58,1,0)
(31,12,0)
(5,22,0)
(21,56,0)
(35,59,0)
(23,59,0)
(4,2,0)
(9,58,0)
(6,32,0)
(51,35,0)
(1,58,0)
(61,31,0)
(0,1,0)
(41,38,0)
(60,2,0)
(18,40,0)
(43,16,0)
(34,14,0)
(40,18,0)
(38,16,0)
(15,59,0)
(52,30,0)
(32,46,0)
(3,14,0)
(56,55,0)
(15,54,0)
(24,57,0)
(16,38,0)
(37,7,0)
(28,16,0)
(17,14,0)
(36,46,0)
(13,0,0)
(60,48,0)
(49,46,0)
(20,3,0)
(25,59,0)
(4,44,1)
(56,15,1)
(49,30,1)
(28,40,1)
(46,36,1)
(17,20,1)
(42,1,1)
(53,49,1)
(13,60,1)
(15,54,1)
(40,18,1)
(1,58,1)
(0,13,1)
(46,30,1)
(26,7,1)
(61,32,1)
(43,60,1)
(32,46,1)
(43,16,1)
(13,31,1)
(14,55,1)
(52,16,1)
(7,37,1)
(55,56,1)
(38,41,1)
(31,61,1)
(54,8,1)
(14,17,1)
(32,6,1)
(37,3,1)
(47,52,1)
(11,0,1)
(2,30,1)
(45,15,1)
(0,1,1)
(44,32,1)
(56,21,1)
(30,47,1)
(6,46,1)
(8,42,1)
(7,3,1)
(21,50,1)
(3,14,1)
(38,1,1)
(20,55,1)
(16,38,1)
(36,53,1)
(9,33,1)
(14,34,1)
(2,4,1)
(50,43,1)
(27,45,1)
(18,27,1)
(41,28,1)
(58,9,1)
(60,2,1)
(43,11,1)
(38,1,2)
(14,34,2)
(14,55,2)
(46,30,2)
(44,32,2)
(60,32,2)
(61,32,2)
(55,56,2)
(1,58,2)
(15,54,2)
(16,38,2)
(4,32,2)
(0,1,2)
(2,32,2)
(56,15,2)
(3,14,2)
(2,30,2)
(60,2,2)
(31,32,2)
(43,16,2)
(7,3,2)
(43,60,2)
(32,46,2)
(40,18,2)
-----------------------------------
(0,*dataPtr1)
(1,*dataPtr1 = &data)
(2,atoi(inputBuffer)
(3,charData = (char)
(4,inputBuffer)
(5,charData)
(6,NULL)
(7,printHexCharLine(charData)
(8,data)
(9,data)
(10,dataPtr1)
(11,data)
(12,)
(13,dataPtr1)
(14,(char)
(15,*dataPtr2 = &data)
(16,data = *dataPtr1)
(17,data)
(18,-1)
(19,inputBuffer)
(20,charData)
(21,dataPtr2)
(22,)
(23,data)
(24,data)
(25,dataPtr2)
(26,RET)
(27,1)
(28,data)
(29,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(30,inputBuffer[CHAR_ARRAY_SIZE] = "")
(31,printLine("fgets()
(32,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(33,dataPtr1)
(34,char)
(35,)
(36,stdin)
(37,charData)
(38,*dataPtr1)
(39,data)
(40,data = -1)
(41,dataPtr1)
(42,dataPtr2)
(43,*dataPtr1 = data)
(44,data)
(45,data)
(46,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(47,"")
(48,)
(49,inputBuffer)
(50,data)
(51,)
(52,inputBuffer)
(53,CHAR_ARRAY_SIZE)
(54,&data)
(55,data = *dataPtr2)
(56,*dataPtr2)
(57,)
(58,&data)
(59,)
(60,data = atoi(inputBuffer)
(61,"fgets()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^