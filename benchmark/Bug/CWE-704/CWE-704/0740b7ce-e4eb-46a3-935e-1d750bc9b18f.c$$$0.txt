-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_15_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    switch(6)
    {
    case 6:
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
19,21
19,22
19,23
19,24
19,25
20,21
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
34,35
35,36
35,37
36,37
40,41
40,42
40,43
40,44
40,45
40,46
41,42
42,43
42,44
44,45
44,46
46,47
48,49
49,50
49,51
51,52
51,53
51,54
53,54
55,56
57,58
58,59
58,60
58,61
58,62
59,60
61,62
64,65
64,66
67,68
68,69
68,70
69,70
69,71
70,71
72,73
72,74
76,77
76,78
77,78
77,79
78,79
81,82
81,83
82,83
83,84
83,85
83,86
83,87
84,85
86,87
88,89
90,91
92,93
93,94
93,95
94,95
94,96
95,96
97,98
100,101
101,102
101,103
102,103
104,105
-----nextToken-----
2,4,8,10,14,16,18,21,25,27,28,31,32,33,37,38,39,43,45,47,50,52,54,56,60,62,63,65,66,71,73,74,75,79,80,85,87,89,91,96,98,99,103,105
-----computeFrom-----
12,13
12,14
64,65
64,66
68,69
68,70
72,73
72,74
77,78
77,79
93,94
93,95
-----guardedBy-----
79,98
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_15_bad(){    int data;    /* Initialize data */    data = -1;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_15_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_15_bad
{    int data;    /* Initialize data */    data = -1;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
switch(6)    {    case 6:        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(47,13,0)
(12,34,0)
(4,25,0)
(37,7,0)
(21,40,0)
(40,46,0)
(16,55,0)
(27,25,0)
(0,41,0)
(50,37,0)
(26,33,0)
(38,40,0)
(45,34,0)
(13,7,0)
(34,33,0)
(18,33,0)
(24,55,0)
(16,17,0)
(41,19,0)
(44,55,0)
(54,21,0)
(39,16,0)
(36,55,0)
(35,34,0)
(9,34,0)
(46,34,0)
(31,41,0)
(23,19,0)
(53,4,0)
(37,12,0)
(17,4,0)
(47,4,0)
(19,41,0)
(43,12,0)
(19,34,0)
(51,47,0)
(8,55,0)
(40,21,0)
(11,28,0)
(28,4,0)
(37,4,0)
(5,16,0)
(9,12,0)
(15,19,0)
(6,47,0)
(22,55,0)
(32,34,0)
(52,28,0)
(2,8,0)
(14,37,0)
(17,16,0)
(3,46,0)
(29,13,0)
(25,4,0)
(48,37,0)
(42,9,0)
(47,12,0)
(30,21,0)
(1,12,0)
(4,33,0)
(10,17,0)
(47,51,1)
(12,1,1)
(31,15,1)
(11,52,1)
(25,27,1)
(48,14,1)
(14,28,1)
(29,47,1)
(43,22,1)
(37,50,1)
(46,3,1)
(19,41,1)
(2,49,1)
(0,31,1)
(21,54,1)
(52,46,1)
(23,12,1)
(17,4,1)
(1,43,1)
(30,38,1)
(54,30,1)
(37,12,1)
(9,42,1)
(16,17,1)
(3,40,1)
(27,53,1)
(9,12,1)
(36,16,1)
(13,29,1)
(28,11,1)
(39,49,1)
(4,25,1)
(10,5,1)
(15,23,1)
(20,9,1)
(42,13,1)
(40,21,1)
(47,4,1)
(47,12,1)
(37,4,1)
(8,2,1)
(43,36,1)
(38,19,1)
(28,4,1)
(42,28,1)
(17,10,1)
(49,4,1)
(6,37,1)
(5,39,1)
(22,8,1)
(50,48,1)
(41,0,1)
(51,6,1)
(47,4,2)
(17,4,2)
(13,28,2)
(47,28,2)
(4,25,2)
(5,49,2)
(28,4,2)
(10,49,2)
(36,49,2)
(16,49,2)
(19,41,2)
(50,28,2)
(9,12,2)
(48,28,2)
(37,4,2)
(29,28,2)
(14,28,2)
(47,12,2)
(8,49,2)
(17,49,2)
(40,21,2)
(6,28,2)
(2,49,2)
(37,28,2)
(37,12,2)
(51,28,2)
(16,17,2)
(39,49,2)
(22,49,2)
-----------------------------------
(0,1)
(1,"")
(2,"Benign, fixed string")
(3,\\\'\\\\0\\\')
(4,data = -1)
(5,"%d")
(6,dest)
(7,)
(8,printLine("Benign, fixed string")
(9,printLine(dest)
(10,data)
(11,100)
(12,dest[100] = "")
(13,dest[data] = \\\'\\\\0\\\')
(14,dest)
(15,\\\'A\\\')
(16,fscanf(stdin, "%d", &data)
(17,&data)
(18,data)
(19,memset(source, \\\'A\\\', 100-1)
(20,RET)
(21,100-1)
(22,break;)
(23,source)
(24,case 6:)
(25,-1)
(26,switch(6)
(27,1)
(28,data < 100)
(29,\\\'\\\\0\\\')
(30,100)
(31,100)
(32,dest)
(33,)
(34,)
(35,source)
(36,break;)
(37,strncpy(dest, source, data)
(38,source)
(39,stdin)
(40,source[100-1])
(41,100-1)
(42,dest)
(43,dest)
(44,default:)
(45,if (data < 100)
(46,source[100-1] = \\\'\\\\0\\\')
(47,dest[data])
(48,source)
(49,6)
(50,data)
(51,data)
(52,data)
(53,data)
(54,1)
(55,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^