-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_11_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(globalReturnsTrue())
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_11_bad(){    short data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_memmove_11_bad()
CWE194_Unexpected_Sign_Extension__fscanf_memmove_11_bad
{    short data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(6,46,0)
(17,44,0)
(43,44,0)
(12,43,0)
(34,43,0)
(16,13,0)
(26,10,0)
(35,43,0)
(38,12,0)
(46,12,0)
(13,14,0)
(46,40,0)
(13,16,0)
(29,48,0)
(45,23,0)
(11,40,0)
(30,14,0)
(2,43,0)
(5,43,0)
(7,38,0)
(20,40,0)
(32,13,0)
(36,5,0)
(21,29,0)
(15,46,0)
(28,12,0)
(48,25,0)
(38,45,0)
(37,8,0)
(33,48,0)
(9,10,0)
(40,44,0)
(0,44,0)
(46,23,0)
(22,38,0)
(48,29,0)
(4,5,0)
(41,8,0)
(3,46,0)
(39,16,0)
(19,2,0)
(5,8,0)
(27,12,0)
(8,5,0)
(18,45,0)
(14,43,0)
(2,12,0)
(29,40,0)
(47,43,0)
(10,40,0)
(31,48,0)
(38,40,0)
(42,16,0)
(41,37,1)
(28,27,1)
(24,40,1)
(26,14,1)
(12,28,1)
(33,24,1)
(46,15,1)
(46,40,1)
(36,4,1)
(5,8,1)
(27,48,1)
(16,39,1)
(9,26,1)
(38,40,1)
(19,10,1)
(31,33,1)
(7,22,1)
(38,12,1)
(22,46,1)
(30,13,1)
(32,5,1)
(40,11,1)
(10,40,1)
(46,12,1)
(2,12,1)
(29,40,1)
(42,32,1)
(14,30,1)
(15,3,1)
(21,31,1)
(8,41,1)
(11,20,1)
(2,19,1)
(19,45,1)
(6,10,1)
(3,6,1)
(10,9,1)
(18,38,1)
(38,7,1)
(29,21,1)
(4,12,1)
(39,42,1)
(45,18,1)
(27,24,1)
(48,29,1)
(13,16,1)
(1,2,1)
(37,36,1)
(33,24,2)
(29,24,2)
(46,10,2)
(3,10,2)
(46,40,2)
(13,16,2)
(29,40,2)
(38,12,2)
(5,8,2)
(48,24,2)
(6,10,2)
(22,10,2)
(46,12,2)
(31,24,2)
(7,10,2)
(38,10,2)
(15,10,2)
(48,29,2)
(21,24,2)
(2,12,2)
(45,10,2)
(10,40,2)
(38,40,2)
(18,10,2)
-----------------------------------
(0,if(globalReturnsTrue()
(1,RET)
(2,printLine(dest)
(3,source)
(4,source)
(5,memset(source, \\\'A\\\', 100-1)
(6,dest)
(7,data)
(8,100-1)
(9,100)
(10,data < 100)
(11,0)
(12,dest[100] = "")
(13,source[100-1])
(14,source[100-1] = \\\'\\\\0\\\')
(15,data)
(16,100-1)
(17,data)
(18,\\\'\\\\0\\\')
(19,dest)
(20,data)
(21,data)
(22,dest)
(23,)
(24,globalReturnsTrue()
(25,)
(26,data)
(27,dest)
(28,"")
(29,&data)
(30,\\\'\\\\0\\\')
(31,"%hd")
(32,source)
(33,stdin)
(34,source)
(35,if (data < 100)
(36,\\\'A\\\')
(37,100)
(38,dest[data])
(39,1)
(40,data = 0)
(41,1)
(42,100)
(43,)
(44,)
(45,dest[data] = \\\'\\\\0\\\')
(46,memmove(dest, source, data)
(47,dest)
(48,fscanf (stdin, "%hd", &data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^