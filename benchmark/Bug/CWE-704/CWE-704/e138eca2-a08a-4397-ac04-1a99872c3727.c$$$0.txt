-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_67b_badSink(CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_67_structType myStruct)
{
    int data = myStruct.structFirst;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
21,26
21,27
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
34,35
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
57,59
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,7,9,13,15,19,20,24,26,28,31,33,35,37,41,43,44,46,47,52,54,55,56,60,61,66,68,70,72,77,79,80,84,86
-----computeFrom-----
45,46
45,47
49,50
49,51
53,54
53,55
58,59
58,60
74,75
74,76
-----guardedBy-----
60,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_67b_badSink(CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_67_structType myStruct){    int data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_67b_badSink(CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_67_structType myStruct)
CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_67b_badSink
CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_67_structType myStruct
CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_67_structType
CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_67_structType
myStruct
myStruct
{    int data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data = myStruct.structFirst;
int data = myStruct.structFirst;
int
data = myStruct.structFirst
data
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(25,36,0)
(23,11,0)
(42,33,0)
(5,33,0)
(9,11,0)
(37,34,0)
(2,16,0)
(19,41,0)
(15,10,0)
(16,8,0)
(35,41,0)
(36,18,0)
(6,18,0)
(38,10,0)
(43,33,0)
(31,36,0)
(6,36,0)
(41,13,0)
(18,1,0)
(3,38,0)
(4,42,0)
(28,38,0)
(31,42,0)
(27,1,0)
(26,36,0)
(20,18,0)
(29,34,0)
(11,8,0)
(11,42,0)
(34,42,0)
(10,38,0)
(12,6,0)
(21,18,0)
(40,18,0)
(33,42,0)
(7,31,0)
(32,11,0)
(42,1,0)
(22,31,0)
(11,36,0)
(0,13,0)
(38,18,0)
(33,14,0)
(39,35,0)
(13,18,0)
(24,35,0)
(31,16,0)
(30,10,0)
(41,35,0)
(3,36,1)
(16,2,1)
(12,16,1)
(19,38,1)
(36,26,1)
(15,28,1)
(35,24,1)
(11,32,1)
(25,42,1)
(7,11,1)
(30,15,1)
(17,6,1)
(11,42,1)
(29,37,1)
(32,23,1)
(23,9,1)
(31,22,1)
(38,10,1)
(33,14,1)
(34,42,1)
(41,35,1)
(9,34,1)
(42,33,1)
(0,41,1)
(31,42,1)
(28,3,1)
(39,19,1)
(11,36,1)
(10,30,1)
(2,31,1)
(34,29,1)
(5,4,1)
(13,0,1)
(33,43,1)
(37,13,1)
(6,36,1)
(24,39,1)
(6,12,1)
(12,34,1)
(43,5,1)
(31,36,1)
(26,25,1)
(22,7,1)
(9,34,2)
(6,36,2)
(11,34,2)
(16,34,2)
(31,42,2)
(11,36,2)
(31,36,2)
(33,14,2)
(11,42,2)
(2,34,2)
(34,42,2)
(22,34,2)
(42,33,2)
(31,34,2)
(38,10,2)
(23,34,2)
(7,34,2)
(41,35,2)
(32,34,2)
-----------------------------------
(0,\\\'\\\\0\\\')
(1,)
(2,\\\'\\\\0\\\')
(3,source)
(4,data)
(5,myStruct)
(6,printLine(dest)
(7,dest)
(8,)
(9,dest)
(10,100-1)
(11,memcpy(dest, source, data)
(12,dest)
(13,source[100-1] = \\\'\\\\0\\\')
(14,CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_67_structType myStruct)
(15,100)
(16,dest[data] = \\\'\\\\0\\\')
(17,RET)
(18,)
(19,source)
(20,dest)
(21,source)
(22,data)
(23,source)
(24,1)
(25,dest)
(26,"")
(27,data)
(28,\\\'A\\\')
(29,100)
(30,1)
(31,dest[data])
(32,data)
(33,myStruct.structFirst)
(34,data < 100)
(35,100-1)
(36,dest[100] = "")
(37,data)
(38,memset(source, \\\'A\\\', 100-1)
(39,100)
(40,if (data < 100)
(41,source[100-1])
(42,data = myStruct.structFirst)
(43,structFirst)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^