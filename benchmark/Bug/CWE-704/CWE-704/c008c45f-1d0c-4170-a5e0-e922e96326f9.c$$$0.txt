-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_21_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    badStatic = 1; /* true */
    data = badSource(data);
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
21,22
22,23
22,24
23,24
25,26
25,27
26,27
28,29
30,31
30,32
30,33
30,34
30,35
30,36
31,32
32,33
32,34
34,35
34,36
36,37
38,39
39,40
39,41
41,42
41,43
41,44
43,44
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
66,68
67,68
67,69
68,69
71,72
71,73
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,14,15,19,20,24,27,29,33,35,37,40,42,44,46,50,52,53,55,56,61,63,64,65,69,70,75,77,79,81,86,88,89,93,95
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
54,55
54,56
58,59
58,60
62,63
62,64
67,68
67,69
83,84
83,85
-----guardedBy-----
69,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_21_bad(){    short data;    /* Initialize data */    data = 0;    badStatic = 1; /* true */    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_memmove_21_bad()
CWE194_Unexpected_Sign_Extension__fscanf_memmove_21_bad
{    short data;    /* Initialize data */    data = 0;    badStatic = 1; /* true */    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(41,3,0)
(42,11,0)
(34,19,0)
(34,12,0)
(29,3,0)
(1,22,0)
(15,11,0)
(26,12,0)
(20,43,0)
(0,32,0)
(47,40,0)
(6,13,0)
(39,5,0)
(8,18,0)
(14,47,0)
(13,28,0)
(28,3,0)
(45,24,0)
(12,3,0)
(34,11,0)
(5,32,0)
(27,12,0)
(11,5,0)
(37,34,0)
(10,42,0)
(21,40,0)
(17,34,0)
(4,28,0)
(2,12,0)
(40,47,0)
(23,19,0)
(33,27,0)
(30,32,0)
(43,11,0)
(42,36,0)
(18,22,0)
(27,3,0)
(44,40,0)
(11,22,0)
(42,12,0)
(24,13,0)
(5,11,0)
(31,3,0)
(40,3,0)
(35,47,0)
(46,18,0)
(16,42,0)
(19,36,0)
(3,22,0)
(7,43,0)
(38,24,0)
(25,42,0)
(32,22,0)
(13,24,0)
(43,11,1)
(30,0,1)
(17,37,1)
(28,4,1)
(6,40,1)
(34,11,1)
(19,23,1)
(40,47,1)
(16,25,1)
(7,28,1)
(44,12,1)
(46,32,1)
(47,14,1)
(11,5,1)
(34,12,1)
(23,34,1)
(42,10,1)
(43,20,1)
(37,42,1)
(42,12,1)
(9,27,1)
(24,38,1)
(27,12,1)
(18,8,1)
(14,35,1)
(10,16,1)
(20,7,1)
(4,13,1)
(15,18,1)
(13,24,1)
(38,45,1)
(27,33,1)
(35,21,1)
(45,6,1)
(12,2,1)
(34,17,1)
(21,44,1)
(39,15,1)
(8,46,1)
(33,19,1)
(26,11,1)
(42,11,1)
(2,26,1)
(25,43,1)
(5,39,1)
(33,43,1)
(5,32,1)
(32,30,1)
(42,12,2)
(27,12,2)
(10,43,2)
(42,43,2)
(5,32,2)
(11,5,2)
(19,43,2)
(34,43,2)
(25,43,2)
(37,43,2)
(34,12,2)
(23,43,2)
(34,11,2)
(42,11,2)
(17,43,2)
(13,24,2)
(16,43,2)
(40,47,2)
(43,11,2)
-----------------------------------
(0,data)
(1,data)
(2,"")
(3,)
(4,\\\'\\\\0\\\')
(5,badSource(data)
(6,source)
(7,data)
(8,1)
(9,RET)
(10,data)
(11,data = badSource(data)
(12,dest[100] = "")
(13,source[100-1])
(14,1)
(15,data)
(16,source)
(17,data)
(18,badStatic = 1)
(19,dest[data] = \\\'\\\\0\\\')
(20,100)
(21,\\\'A\\\')
(22,)
(23,\\\'\\\\0\\\')
(24,100-1)
(25,dest)
(26,dest)
(27,printLine(dest)
(28,source[100-1] = \\\'\\\\0\\\')
(29,dest)
(30,0)
(31,source)
(32,data = 0)
(33,dest)
(34,dest[data])
(35,100)
(36,)
(37,dest)
(38,1)
(39,data)
(40,memset(source, \\\'A\\\', 100-1)
(41,if (data < 100)
(42,memmove(dest, source, data)
(43,data < 100)
(44,source)
(45,100)
(46,badStatic)
(47,100-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^