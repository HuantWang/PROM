-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_memcpy_08_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(staticReturnsTrue())
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,15,19,24,26,27,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_memcpy_08_bad(){    short data;    /* Initialize data */    data = 0;    if(staticReturnsTrue())    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_memcpy_08_bad()
CWE194_Unexpected_Sign_Extension__fscanf_memcpy_08_bad
{    short data;    /* Initialize data */    data = 0;    if(staticReturnsTrue())    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticReturnsTrue())    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(32,26,0)
(3,29,0)
(27,2,0)
(24,42,0)
(43,5,0)
(7,5,0)
(13,26,0)
(31,2,0)
(15,10,0)
(11,23,0)
(40,36,0)
(10,24,0)
(20,24,0)
(28,19,0)
(41,24,0)
(25,21,0)
(0,8,0)
(12,24,0)
(19,21,0)
(3,26,0)
(2,10,0)
(44,41,0)
(38,19,0)
(44,23,0)
(10,2,0)
(36,13,0)
(37,13,0)
(8,21,0)
(45,44,0)
(4,41,0)
(23,44,0)
(22,26,0)
(21,24,0)
(19,26,0)
(29,18,0)
(47,10,0)
(9,36,0)
(26,42,0)
(34,23,0)
(8,24,0)
(13,36,0)
(17,19,0)
(33,3,0)
(3,21,0)
(30,21,0)
(14,24,0)
(6,42,0)
(39,42,0)
(5,26,0)
(48,3,0)
(16,29,0)
(36,35,0)
(19,18,0)
(30,36,1)
(36,13,1)
(40,9,1)
(13,26,1)
(3,21,1)
(29,16,1)
(27,31,1)
(32,22,1)
(33,48,1)
(13,37,1)
(44,23,1)
(28,5,1)
(31,15,1)
(0,5,1)
(19,26,1)
(34,11,1)
(26,32,1)
(16,3,1)
(9,46,1)
(1,8,1)
(7,41,1)
(8,0,1)
(23,34,1)
(46,26,1)
(3,26,1)
(0,29,1)
(45,10,1)
(41,4,1)
(37,40,1)
(30,46,1)
(15,47,1)
(2,27,1)
(38,17,1)
(19,38,1)
(43,7,1)
(3,33,1)
(47,21,1)
(8,21,1)
(11,45,1)
(25,30,1)
(10,2,1)
(5,43,1)
(4,44,1)
(5,26,1)
(48,19,1)
(19,21,1)
(21,25,1)
(17,28,1)
(19,5,2)
(9,46,2)
(37,46,2)
(29,5,2)
(19,21,2)
(36,46,2)
(36,13,2)
(33,5,2)
(3,5,2)
(3,21,2)
(3,26,2)
(8,21,2)
(44,23,2)
(5,26,2)
(13,46,2)
(16,5,2)
(40,46,2)
(19,26,2)
(28,5,2)
(38,5,2)
(10,2,2)
(48,5,2)
(17,5,2)
(13,26,2)
-----------------------------------
(0,dest)
(1,RET)
(2,100-1)
(3,dest[data])
(4,\\\'\\\\0\\\')
(5,data < 100)
(6,data)
(7,data)
(8,printLine(dest)
(9,stdin)
(10,memset(source, \\\'A\\\', 100-1)
(11,100)
(12,dest)
(13,&data)
(14,if (data < 100)
(15,\\\'A\\\')
(16,\\\'\\\\0\\\')
(17,source)
(18,)
(19,memcpy(dest, source, data)
(20,source)
(21,dest[100] = "")
(22,data)
(23,100-1)
(24,)
(25,"")
(26,data = 0)
(27,1)
(28,dest)
(29,dest[data] = \\\'\\\\0\\\')
(30,dest)
(31,100)
(32,0)
(33,data)
(34,1)
(35,)
(36,fscanf (stdin, "%hd", &data)
(37,data)
(38,data)
(39,if(staticReturnsTrue()
(40,"%hd")
(41,source[100-1] = \\\'\\\\0\\\')
(42,)
(43,100)
(44,source[100-1])
(45,source)
(46,staticReturnsTrue()
(47,source)
(48,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^