-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_18_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    goto source;
source:
    /* FLAW: Use a random value that could be less than 0 */
    data = (short)RAND32();
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,15,17,19,23,26,27,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
21,22
21,23
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_18_bad(){    short data;    /* Initialize data */    data = 0;    goto source;source:    /* FLAW: Use a random value that could be less than 0 */    data = (short)RAND32();    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__rand_strncpy_18_bad()
CWE194_Unexpected_Sign_Extension__rand_strncpy_18_bad
{    short data;    /* Initialize data */    data = 0;    goto source;source:    /* FLAW: Use a random value that could be less than 0 */    data = (short)RAND32();    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    /* FLAW: Use a random value that could be less than 0 */    data = (short)RAND32();
source
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(8,26,0)
(19,43,0)
(17,37,0)
(13,26,0)
(4,35,0)
(47,37,0)
(5,32,0)
(23,38,0)
(25,35,0)
(29,19,0)
(18,33,0)
(47,41,0)
(41,10,0)
(33,43,0)
(32,47,0)
(3,33,0)
(30,41,0)
(20,19,0)
(28,36,0)
(2,25,0)
(45,16,0)
(40,43,0)
(38,33,0)
(42,34,0)
(13,47,0)
(16,47,0)
(25,40,0)
(0,13,0)
(11,37,0)
(14,43,0)
(21,8,0)
(46,32,0)
(1,13,0)
(7,43,0)
(34,19,0)
(24,35,0)
(35,25,0)
(19,34,0)
(9,34,0)
(12,47,0)
(16,33,0)
(41,47,0)
(6,36,0)
(39,13,0)
(38,43,0)
(36,37,0)
(13,33,0)
(31,40,0)
(10,41,0)
(16,8,0)
(41,30,0)
(44,16,0)
(43,37,0)
(15,43,0)
(22,37,0)
(2,19,1)
(30,12,1)
(40,31,1)
(13,47,1)
(13,0,1)
(16,33,1)
(23,32,1)
(34,42,1)
(39,1,1)
(24,4,1)
(36,6,1)
(13,33,1)
(16,47,1)
(9,29,1)
(18,47,1)
(47,41,1)
(21,16,1)
(25,35,1)
(12,22,1)
(32,5,1)
(6,28,1)
(19,34,1)
(8,21,1)
(27,38,1)
(20,33,1)
(3,18,1)
(38,23,1)
(0,39,1)
(32,47,1)
(41,10,1)
(38,33,1)
(23,8,1)
(46,40,1)
(16,45,1)
(31,25,1)
(41,30,1)
(5,46,1)
(1,32,1)
(44,13,1)
(35,24,1)
(22,36,1)
(42,9,1)
(4,2,1)
(29,20,1)
(33,3,1)
(45,44,1)
(16,32,2)
(13,47,2)
(25,35,2)
(16,47,2)
(32,47,2)
(45,32,2)
(13,32,2)
(19,34,2)
(16,33,2)
(38,33,2)
(1,32,2)
(39,32,2)
(21,32,2)
(47,41,2)
(8,32,2)
(0,32,2)
(41,30,2)
(13,33,2)
(41,10,2)
(44,32,2)
-----------------------------------
(0,data)
(1,dest)
(2,source)
(3,"")
(4,100)
(5,100)
(6,0)
(7,dest)
(8,dest[data] = \\\'\\\\0\\\')
(9,100)
(10,short)
(11,data)
(12,data)
(13,strncpy(dest, source, data)
(14,if (data < 100)
(15,source)
(16,dest[data])
(17,source:)
(18,dest)
(19,memset(source, \\\'A\\\', 100-1)
(20,source)
(21,\\\'\\\\0\\\')
(22,goto source;)
(23,dest)
(24,1)
(25,source[100-1])
(26,)
(27,RET)
(28,data)
(29,\\\'A\\\')
(30,RAND32()
(31,\\\'\\\\0\\\')
(32,data < 100)
(33,dest[100] = "")
(34,100-1)
(35,100-1)
(36,data = 0)
(37,)
(38,printLine(dest)
(39,source)
(40,source[100-1] = \\\'\\\\0\\\')
(41,(short)
(42,1)
(43,)
(44,dest)
(45,data)
(46,data)
(47,data = (short)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^