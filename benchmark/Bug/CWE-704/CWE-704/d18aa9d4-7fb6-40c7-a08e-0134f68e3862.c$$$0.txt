-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_02_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(1)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
21,22
23,24
25,26
25,27
25,28
25,29
25,30
25,31
26,27
27,28
27,29
29,30
29,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
38,39
40,41
42,43
43,44
43,45
43,46
43,47
44,45
46,47
49,50
49,51
52,53
53,54
53,55
54,55
54,56
55,56
57,58
57,59
61,62
61,63
62,63
62,64
63,64
66,67
66,68
67,68
68,69
68,70
68,71
68,72
69,70
71,72
73,74
75,76
77,78
78,79
78,80
79,80
79,81
80,81
82,83
85,86
86,87
86,88
87,88
89,90
-----nextToken-----
2,4,8,10,14,15,17,22,24,28,30,32,35,37,39,41,45,47,48,50,51,56,58,59,60,64,65,70,72,74,76,81,83,84,88,90
-----computeFrom-----
12,13
12,14
20,21
20,22
49,50
49,51
53,54
53,55
57,58
57,59
62,63
62,64
78,79
78,80
-----guardedBy-----
64,83
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_02_bad(){    short data;    /* Initialize data */    data = 0;    if(1)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_strncpy_02_bad()
CWE194_Unexpected_Sign_Extension__negative_strncpy_02_bad
{    short data;    /* Initialize data */    data = 0;    if(1)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(1)    {        /* FLAW: Use a negative number */        data = -1;    }
1
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(22,1,0)
(30,15,0)
(18,0,0)
(18,5,0)
(2,37,0)
(20,5,0)
(4,31,0)
(29,37,0)
(12,31,0)
(36,24,0)
(3,18,0)
(41,5,0)
(32,24,0)
(13,1,0)
(22,24,0)
(1,22,0)
(18,31,0)
(40,12,0)
(23,22,0)
(10,25,0)
(29,25,0)
(5,21,0)
(35,31,0)
(33,12,0)
(34,32,0)
(12,32,0)
(46,37,0)
(12,27,0)
(25,24,0)
(12,5,0)
(7,41,0)
(42,1,0)
(24,44,0)
(0,27,0)
(5,45,0)
(8,22,0)
(15,32,0)
(15,24,0)
(39,12,0)
(31,44,0)
(43,41,0)
(37,29,0)
(9,29,0)
(21,5,0)
(41,31,0)
(11,32,0)
(38,44,0)
(14,21,0)
(16,44,0)
(18,32,0)
(28,24,0)
(19,0,0)
(6,18,0)
(47,24,0)
(2,9,1)
(22,1,1)
(12,32,1)
(13,42,1)
(12,5,1)
(30,0,1)
(14,20,1)
(18,5,1)
(7,25,1)
(35,4,1)
(41,31,1)
(12,40,1)
(5,21,1)
(34,26,1)
(23,32,1)
(30,41,1)
(46,2,1)
(21,14,1)
(42,8,1)
(26,31,1)
(18,3,1)
(39,33,1)
(41,43,1)
(32,11,1)
(20,26,1)
(6,12,1)
(34,5,1)
(18,32,1)
(19,18,1)
(3,6,1)
(1,13,1)
(37,46,1)
(15,30,1)
(29,37,1)
(0,19,1)
(25,10,1)
(11,34,1)
(9,22,1)
(31,35,1)
(17,15,1)
(41,5,1)
(15,32,1)
(43,7,1)
(40,39,1)
(18,31,1)
(10,29,1)
(12,31,1)
(33,41,1)
(8,23,1)
(5,21,2)
(6,41,2)
(29,37,2)
(41,31,2)
(21,26,2)
(12,5,2)
(18,32,2)
(19,41,2)
(5,26,2)
(18,31,2)
(12,41,2)
(33,41,2)
(12,32,2)
(3,41,2)
(12,31,2)
(15,32,2)
(40,41,2)
(39,41,2)
(41,5,2)
(14,26,2)
(20,26,2)
(18,41,2)
(18,5,2)
(22,1,2)
(0,41,2)
-----------------------------------
(0,dest[data] = \\\'\\\\0\\\')
(1,100-1)
(2,100)
(3,data)
(4,data)
(5,data = -1)
(6,dest)
(7,data)
(8,\\\'A\\\')
(9,source)
(10,\\\'\\\\0\\\')
(11,"")
(12,strncpy(dest, source, data)
(13,1)
(14,1)
(15,printLine(dest)
(16,data)
(17,RET)
(18,dest[data])
(19,\\\'\\\\0\\\')
(20,data)
(21,-1)
(22,memset(source, \\\'A\\\', 100-1)
(23,source)
(24,)
(25,source[100-1] = \\\'\\\\0\\\')
(26,1)
(27,)
(28,source)
(29,source[100-1])
(30,dest)
(31,data = 0)
(32,dest[100] = "")
(33,dest)
(34,dest)
(35,0)
(36,dest)
(37,100-1)
(38,if(1)
(39,source)
(40,data)
(41,data < 100)
(42,100)
(43,100)
(44,)
(45,)
(46,1)
(47,if (data < 100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^