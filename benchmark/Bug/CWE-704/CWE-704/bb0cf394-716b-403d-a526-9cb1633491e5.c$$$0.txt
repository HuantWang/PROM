-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_large_11_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    if(globalReturnsTrue())
    {
        /* FLAW: Use a number larger than CHAR_MAX */
        data = CHAR_MAX + 1;
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
38,40
41,42
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,16,20,25,28,29,33,35,39,40,42,46,48
-----computeFrom-----
12,13
12,14
23,24
23,25
26,27
26,28
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_large_11_bad(){    short data;    /* Initialize data */    data = -1;    if(globalReturnsTrue())    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_large_11_bad()
CWE197_Numeric_Truncation_Error__short_large_11_bad
{    short data;    /* Initialize data */    data = -1;    if(globalReturnsTrue())    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
if(globalReturnsTrue())    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }
data = CHAR_MAX + 1;
data = CHAR_MAX + 1
data
data
CHAR_MAX + 1
CHAR_MAX
CHAR_MAX
1
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(20,14,0)
(1,12,0)
(11,14,0)
(19,2,0)
(9,12,0)
(3,20,0)
(6,15,0)
(3,15,0)
(17,5,0)
(15,12,0)
(9,15,0)
(13,9,0)
(21,2,0)
(22,14,0)
(2,19,0)
(20,5,0)
(3,4,0)
(12,14,0)
(5,20,0)
(4,3,0)
(18,2,0)
(15,3,0)
(16,3,0)
(7,20,0)
(10,19,0)
(3,19,0)
(19,23,0)
(10,0,1)
(3,4,1)
(3,19,1)
(9,15,1)
(3,16,1)
(5,17,1)
(16,6,1)
(6,0,1)
(15,3,1)
(0,20,1)
(3,20,1)
(13,15,1)
(19,2,1)
(20,5,1)
(8,9,1)
(2,21,1)
(18,10,1)
(9,13,1)
(17,7,1)
(21,18,1)
(6,19,1)
(19,0,2)
(10,0,2)
(21,0,2)
(3,4,2)
(9,15,2)
(15,3,2)
(3,19,2)
(20,5,2)
(19,2,2)
(3,20,2)
(18,0,2)
(2,0,2)
-----------------------------------
(0,globalReturnsTrue()
(1,charData)
(2,CHAR_MAX + 1)
(3,(char)
(4,char)
(5,-1)
(6,charData)
(7,data)
(8,RET)
(9,printHexCharLine(charData)
(10,data)
(11,data)
(12,)
(13,charData)
(14,)
(15,charData = (char)
(16,data)
(17,1)
(18,CHAR_MAX)
(19,data = CHAR_MAX + 1)
(20,data = -1)
(21,1)
(22,if(globalReturnsTrue()
(23,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^