-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_05_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(staticTrue)
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
30,33
30,34
30,35
30,36
31,32
32,33
32,34
34,35
34,36
36,37
38,39
39,40
39,41
41,42
41,43
41,44
43,44
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
66,68
67,68
67,69
68,69
71,72
71,73
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,14,15,18,23,25,26,29,33,35,37,40,42,44,46,50,52,53,55,56,61,63,64,65,69,70,75,77,79,81,86,88,89,93,95
-----computeFrom-----
12,13
12,14
54,55
54,56
58,59
58,60
62,63
62,64
67,68
67,69
83,84
83,85
-----guardedBy-----
69,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_05_bad(){    short data;    /* Initialize data */    data = 0;    if(staticTrue)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_memmove_05_bad()
CWE194_Unexpected_Sign_Extension__fscanf_memmove_05_bad
{    short data;    /* Initialize data */    data = 0;    if(staticTrue)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticTrue)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
staticTrue
staticTrue
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(30,27,0)
(25,48,0)
(8,7,0)
(44,48,0)
(4,27,0)
(31,28,0)
(37,27,0)
(42,6,0)
(6,22,0)
(26,4,0)
(33,30,0)
(1,32,0)
(28,16,0)
(23,7,0)
(39,40,0)
(19,16,0)
(34,16,0)
(9,44,0)
(19,2,0)
(13,19,0)
(7,23,0)
(3,30,0)
(47,2,0)
(15,33,0)
(5,27,0)
(35,44,0)
(17,47,0)
(38,16,0)
(18,6,0)
(29,7,0)
(44,47,0)
(36,33,0)
(45,32,0)
(19,48,0)
(23,40,0)
(21,30,0)
(4,48,0)
(48,27,0)
(30,33,0)
(42,16,0)
(46,28,0)
(40,27,0)
(41,19,0)
(44,16,0)
(6,42,0)
(16,32,0)
(27,32,0)
(10,42,0)
(12,23,0)
(43,27,0)
(0,48,0)
(14,6,0)
(11,19,0)
(17,44,1)
(0,6,1)
(39,23,1)
(31,40,1)
(12,30,1)
(26,47,1)
(24,4,1)
(46,31,1)
(0,20,1)
(36,21,1)
(3,48,1)
(35,19,1)
(44,16,1)
(20,16,1)
(11,28,1)
(10,14,1)
(19,13,1)
(47,17,1)
(19,16,1)
(14,18,1)
(33,15,1)
(40,39,1)
(28,16,1)
(42,10,1)
(15,36,1)
(23,7,1)
(29,12,1)
(44,9,1)
(42,16,1)
(44,48,1)
(25,0,1)
(6,42,1)
(18,20,1)
(30,33,1)
(41,11,1)
(4,26,1)
(28,46,1)
(19,48,1)
(13,41,1)
(9,35,1)
(38,34,1)
(16,38,1)
(21,3,1)
(7,8,1)
(8,29,1)
(4,48,1)
(48,25,1)
(26,28,1)
(18,20,2)
(17,28,2)
(44,28,2)
(47,28,2)
(6,42,2)
(44,48,2)
(19,48,2)
(35,28,2)
(42,16,2)
(19,16,2)
(30,33,2)
(44,16,2)
(11,28,2)
(41,28,2)
(10,20,2)
(14,20,2)
(19,28,2)
(28,16,2)
(4,48,2)
(13,28,2)
(23,7,2)
(42,20,2)
(6,20,2)
(9,28,2)
-----------------------------------
(0,dest)
(1,data)
(2,)
(3,source)
(4,printLine(dest)
(5,if (data < 100)
(6,fscanf (stdin, "%hd", &data)
(7,100-1)
(8,1)
(9,data)
(10,data)
(11,dest)
(12,source)
(13,data)
(14,"%hd")
(15,1)
(16,data = 0)
(17,\\\'\\\\0\\\')
(18,stdin)
(19,memmove(dest, source, data)
(20,staticTrue)
(21,\\\'A\\\')
(22,)
(23,source[100-1])
(24,RET)
(25,"")
(26,dest)
(27,)
(28,data < 100)
(29,100)
(30,memset(source, \\\'A\\\', 100-1)
(31,data)
(32,)
(33,100-1)
(34,data)
(35,dest)
(36,100)
(37,dest)
(38,0)
(39,\\\'\\\\0\\\')
(40,source[100-1] = \\\'\\\\0\\\')
(41,source)
(42,&data)
(43,source)
(44,dest[data])
(45,if(staticTrue)
(46,100)
(47,dest[data] = \\\'\\\\0\\\')
(48,dest[100] = "")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^