-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_01_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    /* FLAW: Use a value input from the console using fscanf() */
    fscanf (stdin, "%hd", &data);
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
17,20
17,21
18,19
20,21
23,24
24,25
26,27
26,28
26,29
26,30
26,31
26,32
27,28
28,29
28,30
30,31
30,32
32,33
34,35
35,36
35,37
37,38
37,39
37,40
39,40
41,42
43,44
44,45
44,46
44,47
44,48
45,46
47,48
50,51
50,52
53,54
54,55
54,56
55,56
55,57
56,57
58,59
58,60
62,63
62,64
63,64
63,65
64,65
67,68
67,69
68,69
69,70
69,71
69,72
69,73
70,71
72,73
74,75
76,77
78,79
79,80
79,81
80,81
80,82
81,82
83,84
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,14,15,19,21,22,25,29,31,33,36,38,40,42,46,48,49,51,52,57,59,60,61,65,66,71,73,75,77,82,84,85,89,91
-----computeFrom-----
12,13
12,14
50,51
50,52
54,55
54,56
58,59
58,60
63,64
63,65
79,80
79,81
-----guardedBy-----
65,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_01_bad(){    short data;    /* Initialize data */    data = 0;    /* FLAW: Use a value input from the console using fscanf() */    fscanf (stdin, "%hd", &data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_01_bad()
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_01_bad
{    short data;    /* Initialize data */    data = 0;    /* FLAW: Use a value input from the console using fscanf() */    fscanf (stdin, "%hd", &data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(44,6,0)
(7,23,0)
(33,26,0)
(22,23,0)
(6,23,0)
(9,37,0)
(39,1,0)
(32,39,0)
(35,8,0)
(41,18,0)
(27,1,0)
(43,42,0)
(2,16,0)
(34,18,0)
(26,14,0)
(38,6,0)
(14,26,0)
(5,14,0)
(36,9,0)
(13,26,0)
(6,8,0)
(18,42,0)
(12,9,0)
(18,9,0)
(17,31,0)
(30,22,0)
(42,18,0)
(1,37,0)
(24,23,0)
(28,1,0)
(7,35,0)
(14,16,0)
(31,9,0)
(45,42,0)
(0,9,0)
(40,0,0)
(1,39,0)
(23,37,0)
(10,35,0)
(20,22,0)
(16,9,0)
(4,37,0)
(29,6,0)
(21,7,0)
(19,31,0)
(7,31,0)
(11,23,0)
(3,7,0)
(0,31,0)
(39,23,0)
(6,31,0)
(15,9,0)
(23,11,1)
(28,27,1)
(22,23,1)
(6,31,1)
(2,14,1)
(40,35,1)
(41,31,1)
(22,30,1)
(18,42,1)
(6,29,1)
(0,40,1)
(10,7,1)
(1,39,1)
(39,23,1)
(35,10,1)
(13,5,1)
(20,16,1)
(29,38,1)
(7,23,1)
(44,22,1)
(3,21,1)
(26,33,1)
(25,0,1)
(31,19,1)
(14,26,1)
(11,24,1)
(16,2,1)
(17,1,1)
(40,22,1)
(39,32,1)
(7,31,1)
(34,41,1)
(45,34,1)
(21,6,1)
(32,28,1)
(19,17,1)
(7,3,1)
(33,13,1)
(38,44,1)
(43,45,1)
(5,18,1)
(6,23,1)
(30,20,1)
(0,31,1)
(42,43,1)
(27,23,1)
(10,22,2)
(7,23,2)
(22,23,2)
(3,22,2)
(0,31,2)
(35,22,2)
(14,26,2)
(38,22,2)
(44,22,2)
(7,22,2)
(29,22,2)
(1,39,2)
(21,22,2)
(6,22,2)
(18,42,2)
(6,31,2)
(6,23,2)
(7,31,2)
(39,23,2)
-----------------------------------
(0,printLine(dest)
(1,fscanf (stdin, "%hd", &data)
(2,\\\'\\\\0\\\')
(3,data)
(4,data)
(5,source)
(6,strncpy(dest, source, data)
(7,dest[data])
(8,)
(9,)
(10,\\\'\\\\0\\\')
(11,0)
(12,source)
(13,100)
(14,source[100-1])
(15,dest)
(16,source[100-1] = \\\'\\\\0\\\')
(17,dest)
(18,memset(source, \\\'A\\\', 100-1)
(19,"")
(20,data)
(21,dest)
(22,data < 100)
(23,data = 0)
(24,data)
(25,RET)
(26,100-1)
(27,stdin)
(28,"%hd")
(29,data)
(30,100)
(31,dest[100] = "")
(32,data)
(33,1)
(34,\\\'A\\\')
(35,dest[data] = \\\'\\\\0\\\')
(36,if (data < 100)
(37,)
(38,source)
(39,&data)
(40,dest)
(41,source)
(42,100-1)
(43,1)
(44,dest)
(45,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^