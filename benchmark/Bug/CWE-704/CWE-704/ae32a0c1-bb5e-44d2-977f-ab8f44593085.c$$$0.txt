-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_02_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(1)
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
29,30
29,31
29,32
29,33
29,34
29,35
30,31
31,32
31,33
33,34
33,35
35,36
37,38
38,39
38,40
40,41
40,42
40,43
42,43
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
53,55
56,57
57,58
57,59
58,59
58,60
59,60
61,62
61,63
65,66
65,67
66,67
66,68
67,68
70,71
70,72
71,72
72,73
72,74
72,75
72,76
73,74
75,76
77,78
79,80
81,82
82,83
82,84
83,84
83,85
84,85
86,87
89,90
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,32,34,36,39,41,43,45,49,51,52,54,55,60,62,63,64,68,69,74,76,78,80,85,87,88,92,94
-----computeFrom-----
12,13
12,14
53,54
53,55
57,58
57,59
61,62
61,63
66,67
66,68
82,83
82,84
-----guardedBy-----
68,87
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_02_bad(){    short data;    /* Initialize data */    data = 0;    if(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_02_bad()
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_02_bad
{    short data;    /* Initialize data */    data = 0;    if(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
1
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(12,34,0)
(32,3,0)
(28,19,0)
(11,5,0)
(44,36,0)
(24,7,0)
(38,12,0)
(41,48,0)
(7,5,0)
(2,34,0)
(15,36,0)
(15,7,0)
(16,5,0)
(48,12,0)
(28,34,0)
(34,39,0)
(27,17,0)
(45,39,0)
(23,34,0)
(1,36,0)
(3,5,0)
(26,23,0)
(27,47,0)
(29,16,0)
(43,28,0)
(28,47,0)
(37,34,0)
(21,10,0)
(10,16,0)
(30,47,0)
(12,48,0)
(6,16,0)
(31,48,0)
(0,47,0)
(48,20,0)
(14,23,0)
(9,5,0)
(27,34,0)
(25,28,0)
(33,19,0)
(18,27,0)
(8,39,0)
(22,27,0)
(13,27,0)
(5,39,0)
(3,47,0)
(16,10,0)
(46,15,0)
(47,5,0)
(19,17,0)
(36,15,0)
(4,10,0)
(40,5,0)
(23,26,1)
(28,47,1)
(36,1,1)
(16,10,1)
(31,41,1)
(47,30,1)
(19,33,1)
(12,38,1)
(30,0,1)
(34,2,1)
(33,28,1)
(44,46,1)
(26,14,1)
(0,35,1)
(4,21,1)
(21,6,1)
(1,44,1)
(6,29,1)
(27,47,1)
(25,43,1)
(27,34,1)
(18,13,1)
(10,4,1)
(3,47,1)
(41,35,1)
(7,24,1)
(15,36,1)
(28,25,1)
(32,19,1)
(3,32,1)
(24,15,1)
(42,3,1)
(13,23,1)
(22,18,1)
(38,31,1)
(35,34,1)
(2,37,1)
(27,22,1)
(29,47,1)
(46,16,1)
(28,34,1)
(12,34,1)
(48,12,1)
(43,27,1)
(23,34,1)
(0,48,1)
(32,23,1)
(14,7,1)
(12,35,2)
(15,36,2)
(27,34,2)
(41,35,2)
(28,34,2)
(3,47,2)
(22,23,2)
(48,35,2)
(12,34,2)
(18,23,2)
(25,23,2)
(28,47,2)
(19,23,2)
(27,23,2)
(13,23,2)
(38,35,2)
(28,23,2)
(48,12,2)
(16,10,2)
(43,23,2)
(27,47,2)
(33,23,2)
(31,35,2)
(23,34,2)
-----------------------------------
(0,dest)
(1,1)
(2,0)
(3,printLine(dest)
(4,1)
(5,)
(6,\\\'A\\\')
(7,source[100-1] = \\\'\\\\0\\\')
(8,if(1)
(9,if (data < 100)
(10,100-1)
(11,dest)
(12,&data)
(13,dest)
(14,data)
(15,source[100-1])
(16,memset(source, \\\'A\\\', 100-1)
(17,)
(18,source)
(19,dest[data] = \\\'\\\\0\\\')
(20,)
(21,100)
(22,data)
(23,data < 100)
(24,\\\'\\\\0\\\')
(25,data)
(26,100)
(27,strncpy(dest, source, data)
(28,dest[data])
(29,source)
(30,"")
(31,"%hd")
(32,dest)
(33,\\\'\\\\0\\\')
(34,data = 0)
(35,1)
(36,100-1)
(37,data)
(38,data)
(39,)
(40,source)
(41,stdin)
(42,RET)
(43,dest)
(44,100)
(45,data)
(46,source)
(47,dest[100] = "")
(48,fscanf (stdin, "%hd", &data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^