-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_06_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
24,27
24,28
25,26
27,28
30,31
31,32
33,34
33,35
33,36
33,37
33,38
33,39
34,35
35,36
35,37
37,38
37,39
39,40
41,42
42,43
42,44
44,45
44,46
44,47
46,47
48,49
50,51
51,52
51,53
51,54
51,55
52,53
54,55
57,58
57,59
60,61
61,62
61,63
62,63
62,64
63,64
65,66
65,67
69,70
69,71
70,71
70,72
71,72
74,75
74,76
75,76
76,77
76,78
76,79
76,80
77,78
79,80
81,82
83,84
85,86
86,87
86,88
87,88
87,89
88,89
90,91
93,94
94,95
94,96
95,96
97,98
-----nextToken-----
2,4,8,10,14,16,20,21,26,28,29,32,36,38,40,43,45,47,49,53,55,56,58,59,64,66,67,68,72,73,78,80,82,84,89,91,92,96,98
-----computeFrom-----
12,13
12,14
18,19
18,20
57,58
57,59
61,62
61,63
65,66
65,67
70,71
70,72
86,87
86,88
-----guardedBy-----
72,91
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_06_bad(){    int data;    /* Initialize data */    data = -1;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_06_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_06_bad
{    int data;    /* Initialize data */    data = -1;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(33,21,0)
(10,15,0)
(44,33,0)
(22,33,0)
(48,33,0)
(9,8,0)
(6,48,0)
(40,36,0)
(20,31,0)
(47,39,0)
(25,26,0)
(23,39,0)
(4,39,0)
(35,29,0)
(44,45,0)
(13,33,0)
(5,39,0)
(48,38,0)
(0,13,0)
(41,26,0)
(22,35,0)
(39,26,0)
(28,15,0)
(44,5,0)
(51,44,0)
(14,36,0)
(31,39,0)
(32,39,0)
(30,46,0)
(35,22,0)
(50,47,0)
(21,33,0)
(48,5,0)
(19,5,0)
(24,13,0)
(7,14,0)
(18,14,0)
(33,26,0)
(43,21,0)
(1,44,0)
(36,14,0)
(46,8,0)
(12,33,0)
(46,39,0)
(45,38,0)
(27,35,0)
(42,35,0)
(3,5,0)
(49,45,0)
(36,31,0)
(34,46,0)
(11,8,0)
(2,48,0)
(8,46,0)
(47,5,0)
(17,48,0)
(37,22,0)
(16,47,1)
(22,37,1)
(24,31,1)
(18,40,1)
(48,5,1)
(30,5,1)
(48,2,1)
(44,51,1)
(21,43,1)
(11,9,1)
(14,7,1)
(8,11,1)
(40,46,1)
(37,42,1)
(19,15,1)
(28,33,1)
(46,8,1)
(48,33,1)
(13,33,1)
(9,34,1)
(50,13,1)
(47,5,1)
(51,1,1)
(19,35,1)
(49,44,1)
(22,33,1)
(17,13,1)
(1,48,1)
(5,3,1)
(36,14,1)
(20,36,1)
(45,49,1)
(42,27,1)
(35,22,1)
(47,50,1)
(31,20,1)
(50,45,1)
(34,30,1)
(13,0,1)
(6,17,1)
(15,10,1)
(43,12,1)
(7,18,1)
(10,28,1)
(27,15,1)
(0,24,1)
(3,19,1)
(44,33,1)
(44,5,1)
(2,6,1)
(33,21,1)
(48,13,2)
(45,13,2)
(35,15,2)
(22,33,2)
(17,13,2)
(48,33,2)
(46,8,2)
(33,21,2)
(51,13,2)
(44,33,2)
(1,13,2)
(37,15,2)
(48,5,2)
(42,15,2)
(2,13,2)
(36,14,2)
(22,15,2)
(47,5,2)
(13,33,2)
(44,5,2)
(27,15,2)
(49,13,2)
(6,13,2)
(35,22,2)
(44,13,2)
-----------------------------------
(0,100)
(1,dest)
(2,data)
(3,"")
(4,source)
(5,dest[100] = "")
(6,source)
(7,1)
(8,100-1)
(9,100)
(10,5)
(11,1)
(12,data)
(13,data < 100)
(14,100-1)
(15,STATIC_CONST_FIVE==5)
(16,RET)
(17,dest)
(18,100)
(19,dest)
(20,\\\'\\\\0\\\')
(21,-1)
(22,&data)
(23,if (data < 100)
(24,data)
(25,if(STATIC_CONST_FIVE==5)
(26,)
(27,stdin)
(28,STATIC_CONST_FIVE)
(29,)
(30,source)
(31,source[100-1] = \\\'\\\\0\\\')
(32,dest)
(33,data = -1)
(34,\\\'A\\\')
(35,fscanf(stdin, "%d", &data)
(36,source[100-1])
(37,data)
(38,)
(39,)
(40,source)
(41,data)
(42,"%d")
(43,1)
(44,dest[data])
(45,dest[data] = \\\'\\\\0\\\')
(46,memset(source, \\\'A\\\', 100-1)
(47,printLine(dest)
(48,memcpy(dest, source, data)
(49,\\\'\\\\0\\\')
(50,dest)
(51,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^