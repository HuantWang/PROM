-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_large_08_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    if(staticReturnsTrue())
    {
        /* FLAW: Use a number larger than CHAR_MAX */
        data = CHAR_MAX + 1;
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
30,31
30,32
31,32
32,33
32,34
34,35
34,36
36,37
37,38
37,39
38,39
38,40
41,42
43,44
44,45
44,46
45,46
47,48
-----nextToken-----
2,4,8,10,14,16,20,25,28,29,33,35,39,40,42,46,48
-----computeFrom-----
12,13
12,14
23,24
23,25
26,27
26,28
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_large_08_bad(){    short data;    /* Initialize data */    data = -1;    if(staticReturnsTrue())    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_large_08_bad()
CWE197_Numeric_Truncation_Error__short_large_08_bad
{    short data;    /* Initialize data */    data = -1;    if(staticReturnsTrue())    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
if(staticReturnsTrue())    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }
data = CHAR_MAX + 1;
data = CHAR_MAX + 1
data
data
CHAR_MAX + 1
CHAR_MAX
CHAR_MAX
1
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(6,11,0)
(16,3,0)
(16,5,0)
(21,13,0)
(16,13,0)
(23,11,0)
(20,22,0)
(6,16,0)
(7,10,0)
(12,22,0)
(13,19,0)
(3,16,0)
(9,16,0)
(14,5,0)
(10,11,0)
(11,19,0)
(18,21,0)
(5,4,0)
(16,6,0)
(5,22,0)
(10,6,0)
(17,6,0)
(1,19,0)
(8,19,0)
(13,21,0)
(22,5,0)
(0,13,0)
(15,13,1)
(2,10,1)
(20,12,1)
(18,0,1)
(17,15,1)
(7,6,1)
(10,7,1)
(16,3,1)
(6,16,1)
(16,9,1)
(21,18,1)
(17,5,1)
(22,20,1)
(12,14,1)
(16,5,1)
(10,6,1)
(13,21,1)
(16,13,1)
(5,22,1)
(9,17,1)
(14,15,1)
(20,15,2)
(16,5,2)
(16,3,2)
(10,6,2)
(6,16,2)
(13,21,2)
(5,15,2)
(5,22,2)
(14,15,2)
(22,15,2)
(16,13,2)
(12,15,2)
-----------------------------------
(0,data)
(1,data)
(2,RET)
(3,char)
(4,)
(5,data = CHAR_MAX + 1)
(6,charData = (char)
(7,charData)
(8,if(staticReturnsTrue()
(9,data)
(10,printHexCharLine(charData)
(11,)
(12,CHAR_MAX)
(13,data = -1)
(14,data)
(15,staticReturnsTrue()
(16,(char)
(17,charData)
(18,1)
(19,)
(20,1)
(21,-1)
(22,CHAR_MAX + 1)
(23,charData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^