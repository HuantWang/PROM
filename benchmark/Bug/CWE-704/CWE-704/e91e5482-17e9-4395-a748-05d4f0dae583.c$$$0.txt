-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_large_to_char_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = -1;
    {
        int data = *dataPtr1;
        /* FLAW: Use a number larger than SHRT_MAX */
        data = SHRT_MAX + 5;
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
            char charData = (char)data;
            printHexCharLine(charData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
35,36
37,38
37,39
37,40
38,39
39,40
39,41
41,42
41,43
43,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
51,53
52,53
55,56
56,57
56,58
57,58
58,59
60,61
62,63
62,64
63,64
64,65
64,66
66,67
66,68
68,69
69,70
70,71
72,73
72,74
73,74
74,75
74,76
76,77
76,78
78,79
79,80
79,81
80,81
80,82
83,84
85,86
86,87
86,88
87,88
89,90
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,36,40,42,46,50,53,54,59,61,65,67,71,75,77,81,82,84,88,90
-----computeFrom-----
32,33
32,34
48,49
48,50
51,52
51,53
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_large_to_char_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        /* FLAW: Use a number larger than SHRT_MAX */        data = SHRT_MAX + 5;        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_large_to_char_32_bad()
CWE197_Numeric_Truncation_Error__int_large_to_char_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        /* FLAW: Use a number larger than SHRT_MAX */        data = SHRT_MAX + 5;        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = -1;
data = -1
data
data
-1
1
{        int data = *dataPtr1;        /* FLAW: Use a number larger than SHRT_MAX */        data = SHRT_MAX + 5;        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = SHRT_MAX + 5;
data = SHRT_MAX + 5
data
data
SHRT_MAX + 5
SHRT_MAX
SHRT_MAX
5
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(46,4,0)
(45,33,0)
(43,1,0)
(13,5,0)
(5,13,0)
(30,24,0)
(3,26,0)
(26,17,0)
(14,27,0)
(11,2,0)
(9,8,0)
(1,44,0)
(32,33,0)
(18,32,0)
(17,33,0)
(19,44,0)
(15,4,0)
(21,32,0)
(41,27,0)
(16,1,0)
(24,30,0)
(27,41,0)
(36,0,0)
(12,41,0)
(22,26,0)
(34,33,0)
(28,21,0)
(32,21,0)
(20,46,0)
(8,39,0)
(1,30,0)
(0,17,0)
(26,3,0)
(35,33,0)
(30,1,0)
(30,27,0)
(36,8,0)
(23,17,0)
(13,8,0)
(27,2,0)
(6,0,0)
(41,32,0)
(29,3,0)
(2,33,0)
(37,30,0)
(10,13,0)
(4,46,0)
(38,16,0)
(16,44,0)
(31,3,0)
(5,17,0)
(44,2,0)
(0,26,0)
(40,36,0)
(8,33,0)
(25,5,0)
(46,33,0)
(39,8,0)
(42,39,0)
(40,26,1)
(21,28,1)
(37,43,1)
(43,27,1)
(7,16,1)
(3,29,1)
(36,40,1)
(36,8,1)
(26,3,1)
(31,22,1)
(41,12,1)
(30,37,1)
(15,20,1)
(0,26,1)
(18,8,1)
(13,10,1)
(0,6,1)
(16,38,1)
(1,30,1)
(38,1,1)
(25,46,1)
(30,24,1)
(10,25,1)
(5,13,1)
(16,1,1)
(41,32,1)
(4,15,1)
(8,39,1)
(42,9,1)
(27,41,1)
(39,42,1)
(32,21,1)
(12,14,1)
(20,32,1)
(14,0,1)
(30,27,1)
(22,5,1)
(28,18,1)
(6,36,1)
(46,4,1)
(29,31,1)
(13,8,1)
(46,4,2)
(26,3,2)
(1,30,2)
(5,13,2)
(30,27,2)
(41,32,2)
(27,41,2)
(36,8,2)
(16,1,2)
(32,21,2)
(13,8,2)
(30,24,2)
(0,26,2)
(8,39,2)
-----------------------------------
(0,*dataPtr1 = data)
(1,charData = (char)
(2,)
(3,SHRT_MAX + 5)
(4,-1)
(5,data = *dataPtr1)
(6,data)
(7,RET)
(8,*dataPtr1 = &data)
(9,dataPtr1)
(10,dataPtr1)
(11,data)
(12,dataPtr2)
(13,*dataPtr1)
(14,data)
(15,1)
(16,printHexCharLine(charData)
(17,)
(18,dataPtr2)
(19,charData)
(20,data)
(21,&data)
(22,data)
(23,data)
(24,char)
(25,data)
(26,data = SHRT_MAX + 5)
(27,data = *dataPtr2)
(28,data)
(29,5)
(30,(char)
(31,SHRT_MAX)
(32,*dataPtr2 = &data)
(33,)
(34,dataPtr1)
(35,data)
(36,*dataPtr1)
(37,data)
(38,charData)
(39,&data)
(40,dataPtr1)
(41,*dataPtr2)
(42,data)
(43,charData)
(44,)
(45,dataPtr2)
(46,data = -1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^