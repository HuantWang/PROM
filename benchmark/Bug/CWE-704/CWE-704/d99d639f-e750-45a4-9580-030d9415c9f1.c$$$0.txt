-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68b_badSink()
{
    int data = CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68_badData;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
14,17
14,18
14,19
14,20
15,16
16,17
16,18
18,19
18,20
20,21
22,23
23,24
23,25
25,26
25,27
25,28
27,28
29,30
31,32
32,33
32,34
32,35
32,36
33,34
35,36
38,39
38,40
41,42
42,43
42,44
43,44
43,45
44,45
46,47
46,48
50,51
50,52
51,52
51,53
52,53
55,56
55,57
56,57
57,58
57,59
57,60
57,61
58,59
60,61
62,63
64,65
66,67
67,68
67,69
68,69
68,70
69,70
71,72
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,8,10,13,17,19,21,24,26,28,30,34,36,37,39,40,45,47,48,49,53,54,59,61,63,65,70,72,73,77,79
-----computeFrom-----
38,39
38,40
42,43
42,44
46,47
46,48
51,52
51,53
67,68
67,69
-----guardedBy-----
53,72
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68b_badSink(){    int data = CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68_badData;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68b_badSink()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68b_badSink
{    int data = CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68_badData;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data = CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68_badData;
int data = CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68_badData;
int
data = CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68_badData
data
= CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68_badData
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68_badData
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68_badData
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(20,18,0)
(22,20,0)
(34,6,0)
(18,6,0)
(15,18,0)
(1,30,0)
(24,17,0)
(28,10,0)
(36,22,0)
(17,6,0)
(2,24,0)
(29,17,0)
(38,39,0)
(30,35,0)
(11,39,0)
(8,40,0)
(14,22,0)
(12,14,0)
(3,40,0)
(5,18,0)
(7,10,0)
(10,17,0)
(22,14,0)
(1,40,0)
(0,10,0)
(26,38,0)
(38,18,0)
(1,17,0)
(4,18,0)
(9,18,0)
(13,20,0)
(23,1,0)
(40,18,0)
(9,40,0)
(27,1,0)
(16,17,0)
(33,9,0)
(10,35,0)
(39,38,0)
(32,24,0)
(25,30,0)
(10,40,0)
(31,39,0)
(21,38,0)
(37,14,0)
(1,40,1)
(21,40,1)
(10,40,1)
(30,25,1)
(37,36,1)
(17,29,1)
(29,16,1)
(2,20,1)
(39,31,1)
(9,40,1)
(31,11,1)
(1,17,1)
(8,3,1)
(24,32,1)
(36,38,1)
(28,24,1)
(33,24,1)
(12,37,1)
(32,2,1)
(22,14,1)
(10,17,1)
(19,9,1)
(14,12,1)
(1,23,1)
(3,17,1)
(0,28,1)
(33,30,1)
(25,1,1)
(24,17,1)
(11,26,1)
(7,0,1)
(10,7,1)
(40,8,1)
(26,21,1)
(38,39,1)
(13,22,1)
(9,33,1)
(27,10,1)
(23,27,1)
(20,13,1)
(38,39,2)
(0,24,2)
(1,17,2)
(25,24,2)
(1,24,2)
(7,24,2)
(28,24,2)
(22,14,2)
(30,24,2)
(10,40,2)
(1,40,2)
(27,24,2)
(24,17,2)
(10,17,2)
(23,24,2)
(10,24,2)
(9,40,2)
-----------------------------------
(0,source)
(1,dest[data])
(2,data)
(3,dest)
(4,dest)
(5,source)
(6,)
(7,data)
(8,"")
(9,printLine(dest)
(10,memcpy(dest, source, data)
(11,100)
(12,1)
(13,\\\'\\\\0\\\')
(14,100-1)
(15,if (data < 100)
(16,data)
(17,data = CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68_badData)
(18,)
(19,RET)
(20,source[100-1] = \\\'\\\\0\\\')
(21,source)
(22,source[100-1])
(23,data)
(24,data < 100)
(25,\\\'\\\\0\\\')
(26,\\\'A\\\')
(27,dest)
(28,dest)
(29,CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_68_badData)
(30,dest[data] = \\\'\\\\0\\\')
(31,1)
(32,100)
(33,dest)
(34,data)
(35,)
(36,source)
(37,100)
(38,memset(source, \\\'A\\\', 100-1)
(39,100-1)
(40,dest[100] = "")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^