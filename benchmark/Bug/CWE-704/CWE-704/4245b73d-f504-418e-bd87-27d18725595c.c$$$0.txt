-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__connect_socket_memmove_42_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    data = badSource(data);
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
23,24
25,26
25,27
25,28
25,29
25,30
25,31
26,27
27,28
27,29
29,30
29,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
38,39
40,41
42,43
43,44
43,45
43,46
43,47
44,45
46,47
49,50
49,51
52,53
53,54
53,55
54,55
54,56
55,56
57,58
57,59
61,62
61,63
62,63
62,64
63,64
66,67
66,68
67,68
68,69
68,70
68,71
68,72
69,70
71,72
73,74
75,76
77,78
78,79
78,80
79,80
79,81
80,81
82,83
85,86
86,87
86,88
87,88
89,90
-----nextToken-----
2,4,8,10,14,15,19,22,24,28,30,32,35,37,39,41,45,47,48,50,51,56,58,59,60,64,65,70,72,74,76,81,83,84,88,90
-----computeFrom-----
12,13
12,14
17,18
17,19
49,50
49,51
53,54
53,55
57,58
57,59
62,63
62,64
78,79
78,80
-----guardedBy-----
64,83
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__connect_socket_memmove_42_bad(){    short data;    /* Initialize data */    data = 0;    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__connect_socket_memmove_42_bad()
CWE194_Unexpected_Sign_Extension__connect_socket_memmove_42_bad
{    short data;    /* Initialize data */    data = 0;    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(44,1,0)
(29,27,0)
(20,27,0)
(33,5,0)
(0,22,0)
(5,12,0)
(11,0,0)
(7,22,0)
(18,37,0)
(27,12,0)
(25,13,0)
(25,1,0)
(4,42,0)
(32,15,0)
(13,25,0)
(31,24,0)
(8,5,0)
(37,21,0)
(38,42,0)
(39,24,0)
(5,22,0)
(17,42,0)
(19,15,0)
(28,24,0)
(15,42,0)
(22,21,0)
(23,25,0)
(14,13,0)
(31,42,0)
(22,7,0)
(43,0,0)
(6,31,0)
(15,30,0)
(35,7,0)
(2,20,0)
(42,21,0)
(34,5,0)
(24,42,0)
(40,30,0)
(30,15,0)
(41,37,0)
(3,30,0)
(36,21,0)
(26,22,0)
(20,22,0)
(9,20,0)
(7,37,0)
(20,24,0)
(5,24,0)
(1,42,0)
(16,13,0)
(32,19,1)
(22,7,1)
(20,22,1)
(41,18,1)
(2,5,1)
(7,35,1)
(0,22,1)
(20,24,1)
(26,37,1)
(23,15,1)
(34,0,1)
(31,6,1)
(5,22,1)
(13,16,1)
(7,37,1)
(30,3,1)
(43,11,1)
(0,43,1)
(16,14,1)
(10,31,1)
(5,8,1)
(31,24,1)
(3,40,1)
(1,44,1)
(25,13,1)
(15,30,1)
(9,2,1)
(27,29,1)
(24,39,1)
(6,0,1)
(44,25,1)
(40,32,1)
(19,24,1)
(33,34,1)
(14,23,1)
(35,26,1)
(29,20,1)
(8,33,1)
(37,41,1)
(28,22,1)
(20,9,1)
(5,24,1)
(39,28,1)
(6,27,1)
(11,1,1)
(5,24,2)
(15,30,2)
(8,0,2)
(33,0,2)
(20,22,2)
(5,0,2)
(7,37,2)
(31,24,2)
(29,0,2)
(25,13,2)
(2,0,2)
(20,0,2)
(0,22,2)
(27,0,2)
(34,0,2)
(22,7,2)
(9,0,2)
(5,22,2)
(20,24,2)
-----------------------------------
(0,data < 100)
(1,source[100-1] = \\\'\\\\0\\\')
(2,dest)
(3,1)
(4,dest)
(5,memmove(dest, source, data)
(6,dest)
(7,badSource(data)
(8,data)
(9,data)
(10,RET)
(11,data)
(12,)
(13,100-1)
(14,100)
(15,memset(source, \\\'A\\\', 100-1)
(16,1)
(17,source)
(18,data)
(19,source)
(20,dest[data])
(21,)
(22,data = badSource(data)
(23,source)
(24,dest[100] = "")
(25,source[100-1])
(26,data)
(27,dest[data] = \\\'\\\\0\\\')
(28,dest)
(29,\\\'\\\\0\\\')
(30,100-1)
(31,printLine(dest)
(32,\\\'A\\\')
(33,source)
(34,dest)
(35,data)
(36,data)
(37,data = 0)
(38,if (data < 100)
(39,"")
(40,100)
(41,0)
(42,)
(43,100)
(44,\\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^