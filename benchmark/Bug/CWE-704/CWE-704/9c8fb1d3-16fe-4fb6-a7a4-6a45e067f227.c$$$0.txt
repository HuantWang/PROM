-----label-----
1
-----code-----
void CWE196_Unsigned_to_Signed_Conversion_Error__basic_17_bad()
{
    int j;
    for(j = 0; j < 1; j++)
    {
        {
            unsigned intUnsigned;
            int intSigned;
            intUnsigned = rand();
            if (rand() % 2 == 0)
            {
                intUnsigned = UINT_MAX - intUnsigned;
            }
            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */
            intSigned = intUnsigned;
            printIntLine(intSigned);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
11,12
11,13
11,14
11,15
12,13
13,14
13,15
14,15
17,18
17,19
18,19
21,22
22,23
24,25
25,26
25,27
25,28
25,29
25,30
25,31
26,27
27,28
27,29
29,30
31,32
32,33
32,34
34,35
36,37
37,38
37,39
38,39
40,41
41,42
43,44
43,45
44,45
44,46
45,46
45,47
46,47
47,48
51,52
52,53
53,54
53,55
54,55
56,57
56,58
57,58
59,60
61,62
62,63
62,64
63,64
65,66
67,68
68,69
68,70
69,70
71,72
-----nextToken-----
2,4,8,10,15,16,19,20,23,28,30,33,35,39,42,48,49,50,55,58,60,64,66,70,72
-----computeFrom-----
13,14
13,15
17,18
17,19
37,38
37,39
44,45
44,46
45,46
45,47
53,54
53,55
56,57
56,58
62,63
62,64
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE196_Unsigned_to_Signed_Conversion_Error__basic_17_bad(){    int j;    for(j = 0; j < 1; j++)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }}
void
CWE196_Unsigned_to_Signed_Conversion_Error__basic_17_bad()
CWE196_Unsigned_to_Signed_Conversion_Error__basic_17_bad
{    int j;    for(j = 0; j < 1; j++)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }}
int j;
int j;
int
j
j
for(j = 0; j < 1; j++)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }
{            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }
unsigned intUnsigned;
unsigned intUnsigned;
unsigned
intUnsigned
intUnsigned
int intSigned;
int intSigned;
int
intSigned
intSigned
intUnsigned = rand();
intUnsigned = rand()
intUnsigned
intUnsigned
rand()
rand
rand
if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }
rand() % 2 == 0
rand() % 2
rand()
rand
rand
2
0
{                intUnsigned = UINT_MAX - intUnsigned;            }
intUnsigned = UINT_MAX - intUnsigned;
intUnsigned = UINT_MAX - intUnsigned
intUnsigned
intUnsigned
UINT_MAX - intUnsigned
UINT_MAX
UINT_MAX
intUnsigned
intUnsigned
intSigned = intUnsigned;
intSigned = intUnsigned
intSigned
intSigned
intUnsigned
intUnsigned
printIntLine(intSigned);
printIntLine(intSigned)
printIntLine
printIntLine
intSigned
intSigned
-----joern-----
(21,12,0)
(2,35,0)
(32,3,0)
(13,26,0)
(34,32,0)
(27,3,0)
(0,13,0)
(13,35,0)
(14,21,0)
(11,35,0)
(18,27,0)
(17,32,0)
(4,12,0)
(29,3,0)
(13,28,0)
(6,28,0)
(6,26,0)
(33,15,0)
(12,21,0)
(7,26,0)
(28,35,0)
(20,13,0)
(25,12,0)
(12,4,0)
(35,10,0)
(20,35,0)
(9,20,0)
(26,22,0)
(28,16,0)
(1,3,0)
(26,6,0)
(16,28,0)
(24,13,0)
(23,6,0)
(19,28,0)
(8,15,0)
(5,6,0)
(30,35,0)
(17,27,1)
(18,20,1)
(26,6,1)
(24,21,1)
(3,1,1)
(4,28,1)
(16,19,1)
(13,0,1)
(5,7,1)
(20,13,1)
(7,21,1)
(6,23,1)
(13,28,1)
(12,25,1)
(32,34,1)
(32,3,1)
(21,14,1)
(13,26,1)
(24,26,1)
(27,3,1)
(31,32,1)
(17,3,1)
(34,17,1)
(1,29,1)
(21,12,1)
(19,32,1)
(0,24,1)
(14,12,1)
(9,13,1)
(25,4,1)
(20,9,1)
(6,28,1)
(28,16,1)
(23,5,1)
(12,4,1)
(27,18,1)
(24,32,2)
(28,32,2)
(26,21,2)
(16,32,2)
(6,21,2)
(27,32,2)
(13,26,2)
(6,28,2)
(20,32,2)
(26,6,2)
(13,28,2)
(21,12,2)
(14,32,2)
(17,32,2)
(13,32,2)
(7,21,2)
(21,32,2)
(19,32,2)
(32,32,2)
(5,21,2)
(12,32,2)
(32,3,2)
(18,32,2)
(9,32,2)
(34,32,2)
(23,21,2)
(28,16,2)
(12,4,2)
(20,13,2)
(25,32,2)
(4,32,2)
(27,3,2)
(0,32,2)
-----------------------------------
(0,intUnsigned)
(1,0)
(2,intSigned)
(3,j = 0)
(4,rand()
(5,UINT_MAX)
(6,UINT_MAX - intUnsigned)
(7,intUnsigned)
(8,j)
(9,intSigned)
(10,)
(11,if (rand()
(12,rand()
(13,intSigned = intUnsigned)
(14,0)
(15,)
(16,rand()
(17,j)
(18,j)
(19,intUnsigned)
(20,printIntLine(intSigned)
(21,rand()
(22,)
(23,intUnsigned)
(24,intSigned)
(25,2)
(26,intUnsigned = UINT_MAX - intUnsigned)
(27,j++)
(28,intUnsigned = rand()
(29,j)
(30,intUnsigned)
(31,RET)
(32,j < 1)
(33,for(j = 0; j < 1; j++)
(34,1)
(35,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^