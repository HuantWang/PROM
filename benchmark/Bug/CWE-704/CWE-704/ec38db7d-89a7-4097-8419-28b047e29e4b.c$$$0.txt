-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_rand_to_short_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = -1;
    {
        int data = *dataPtr1;
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
            short shortData = (short)data;
            printShortLine(shortData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
35,36
37,38
37,39
37,40
38,39
39,40
39,41
41,42
41,43
43,44
44,45
45,46
47,48
48,49
48,50
49,50
51,52
52,53
54,55
55,56
55,57
56,57
57,58
59,60
61,62
61,63
62,63
63,64
63,65
65,66
65,67
67,68
68,69
69,70
71,72
71,73
72,73
73,74
73,75
75,76
75,77
77,78
78,79
78,80
79,80
79,81
82,83
84,85
85,86
85,87
86,87
88,89
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,36,40,42,46,50,53,58,60,64,66,70,74,76,80,81,83,87,89
-----computeFrom-----
32,33
32,34
48,49
48,50
55,56
55,57
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_rand_to_short_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_rand_to_short_32_bad()
CWE197_Numeric_Truncation_Error__int_rand_to_short_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = -1;
data = -1
data
data
-1
1
{        int data = *dataPtr1;        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(2,24,0)
(14,26,0)
(22,5,0)
(16,21,0)
(43,19,0)
(10,31,0)
(5,11,0)
(36,7,0)
(17,28,0)
(6,7,0)
(3,27,0)
(19,21,0)
(17,21,0)
(41,7,0)
(7,6,0)
(25,17,0)
(15,19,0)
(9,14,0)
(18,21,0)
(0,24,0)
(5,15,0)
(44,14,0)
(37,40,0)
(11,8,0)
(35,40,0)
(1,41,0)
(37,19,0)
(23,11,0)
(40,37,0)
(24,0,0)
(24,19,0)
(7,27,0)
(31,21,0)
(11,21,0)
(12,26,0)
(41,1,0)
(32,21,0)
(26,27,0)
(40,11,0)
(8,11,0)
(4,28,0)
(20,44,0)
(39,37,0)
(13,31,0)
(29,15,0)
(44,26,0)
(28,17,0)
(33,10,0)
(14,41,0)
(15,24,0)
(41,14,0)
(27,21,0)
(42,41,0)
(31,10,0)
(30,6,0)
(34,8,0)
(6,17,0)
(37,40,1)
(9,7,1)
(41,7,1)
(44,20,1)
(28,4,1)
(24,0,1)
(5,22,1)
(6,30,1)
(4,25,1)
(5,11,1)
(42,9,1)
(40,35,1)
(36,15,1)
(31,10,1)
(41,1,1)
(7,6,1)
(44,14,1)
(35,39,1)
(25,11,1)
(11,8,1)
(14,41,1)
(15,24,1)
(39,31,1)
(10,33,1)
(41,42,1)
(33,13,1)
(22,24,1)
(15,29,1)
(13,17,1)
(8,34,1)
(34,23,1)
(20,14,1)
(29,5,1)
(0,2,1)
(30,36,1)
(38,44,1)
(6,17,1)
(40,11,1)
(2,37,1)
(17,28,1)
(37,40,2)
(7,6,2)
(40,11,2)
(14,41,2)
(5,11,2)
(6,17,2)
(17,28,2)
(31,10,2)
(41,1,2)
(11,8,2)
(24,0,2)
(41,7,2)
(15,24,2)
(44,14,2)
-----------------------------------
(0,RAND32()
(1,short)
(2,data)
(3,data)
(4,data)
(5,*dataPtr1)
(6,*dataPtr2)
(7,data = *dataPtr2)
(8,&data)
(9,shortData)
(10,-1)
(11,*dataPtr1 = &data)
(12,shortData)
(13,data)
(14,shortData = (short)
(15,*dataPtr1 = data)
(16,data)
(17,*dataPtr2 = &data)
(18,dataPtr1)
(19,)
(20,shortData)
(21,)
(22,dataPtr1)
(23,dataPtr1)
(24,data = RAND32()
(25,dataPtr2)
(26,)
(27,)
(28,&data)
(29,data)
(30,dataPtr2)
(31,data = -1)
(32,dataPtr2)
(33,1)
(34,data)
(35,dataPtr1)
(36,data)
(37,data = *dataPtr1)
(38,RET)
(39,data)
(40,*dataPtr1)
(41,(short)
(42,data)
(43,data)
(44,printShortLine(shortData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^