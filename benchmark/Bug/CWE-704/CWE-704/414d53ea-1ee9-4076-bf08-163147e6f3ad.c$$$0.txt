-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_34_bad()
{
    int data;
    CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_34_unionType myUnion;
    /* Initialize data */
    data = -1;
    /* FLAW: Use a negative number */
    data = -1;
    myUnion.unionFirst = data;
    {
        int data = myUnion.unionSecond;
        {
            char source[100];
            char dest[100] = "";
            memset(source, 'A', 100-1);
            source[100-1] = '\0';
            if (data < 100)
            {
                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
                 * the sign conversion could result in a very large number */
                strncpy(dest, source, data);
                dest[data] = '\0'; /* strncpy() does not always NULL terminate */
            }
            printLine(dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
31,32
31,33
32,33
35,36
37,38
37,39
38,39
39,40
39,41
41,42
41,43
43,44
44,45
44,46
45,46
48,49
48,50
48,51
48,52
48,53
48,54
49,50
50,51
50,52
52,53
52,54
54,55
56,57
57,58
57,59
59,60
59,61
59,62
61,62
63,64
65,66
66,67
66,68
66,69
66,70
67,68
69,70
72,73
72,74
75,76
76,77
76,78
77,78
77,79
78,79
80,81
80,82
84,85
84,86
85,86
85,87
86,87
89,90
89,91
90,91
91,92
91,93
91,94
91,95
92,93
94,95
96,97
98,99
100,101
101,102
101,103
102,103
102,104
103,104
105,106
108,109
109,110
109,111
110,111
112,113
-----nextToken-----
2,4,8,10,14,16,20,22,26,28,33,34,36,40,42,46,47,51,53,55,58,60,62,64,68,70,71,73,74,79,81,82,83,87,88,93,95,97,99,104,106,107,111,113
-----computeFrom-----
18,19
18,20
24,25
24,26
30,31
30,32
72,73
72,74
76,77
76,78
80,81
80,82
85,86
85,87
101,102
101,103
-----guardedBy-----
87,106
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_34_bad(){    int data;    CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_34_unionType myUnion;    /* Initialize data */    data = -1;    /* FLAW: Use a negative number */    data = -1;    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_34_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_34_bad
{    int data;    CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_34_unionType myUnion;    /* Initialize data */    data = -1;    /* FLAW: Use a negative number */    data = -1;    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }}
int data;
int data;
int
data
data
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_34_unionType myUnion;
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_34_unionType myUnion;
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_34_unionType
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_34_unionType
myUnion
myUnion
data = -1;
data = -1
data
data
-1
1
data = -1;
data = -1
data
data
-1
1
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }
int data = myUnion.unionSecond;
int data = myUnion.unionSecond;
int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }
data < 100
data
data
100
{                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(32,0,0)
(9,32,0)
(10,55,0)
(14,1,0)
(0,30,0)
(56,36,0)
(55,0,0)
(16,14,0)
(26,28,0)
(23,55,0)
(17,32,0)
(54,28,0)
(24,50,0)
(32,33,0)
(15,14,0)
(23,35,0)
(39,19,0)
(19,30,0)
(38,19,0)
(40,1,0)
(7,5,0)
(45,32,0)
(51,0,0)
(9,27,0)
(58,37,0)
(1,14,0)
(20,55,0)
(43,30,0)
(50,38,0)
(42,5,0)
(47,33,0)
(13,39,0)
(53,4,0)
(2,45,0)
(5,32,0)
(12,55,0)
(37,55,0)
(4,36,0)
(38,30,0)
(46,9,0)
(6,10,0)
(5,29,0)
(9,35,0)
(36,4,0)
(18,38,0)
(44,33,0)
(57,45,0)
(27,29,0)
(37,28,0)
(22,19,0)
(21,50,0)
(52,9,0)
(49,23,0)
(11,35,0)
(5,35,0)
(48,27,0)
(4,30,0)
(34,5,0)
(19,39,0)
(35,55,0)
(33,32,0)
(3,30,0)
(28,37,0)
(1,10,0)
(31,37,0)
(25,55,0)
(41,35,0)
(8,23,1)
(5,35,1)
(52,5,1)
(58,35,1)
(27,48,1)
(24,19,1)
(44,47,1)
(22,4,1)
(42,7,1)
(23,35,1)
(21,24,1)
(7,45,1)
(39,13,1)
(9,35,1)
(5,34,1)
(9,32,1)
(2,10,1)
(45,57,1)
(49,45,1)
(17,38,1)
(49,27,1)
(45,32,1)
(28,54,1)
(19,39,1)
(13,22,1)
(26,31,1)
(46,52,1)
(57,2,1)
(48,9,1)
(54,26,1)
(56,53,1)
(38,18,1)
(18,50,1)
(14,16,1)
(33,44,1)
(11,41,1)
(47,17,1)
(38,19,1)
(6,1,1)
(32,33,1)
(34,42,1)
(40,37,1)
(5,32,1)
(9,46,1)
(4,36,1)
(35,11,1)
(10,6,1)
(36,56,1)
(50,21,1)
(15,40,1)
(37,28,1)
(31,58,1)
(23,49,1)
(41,32,1)
(1,14,1)
(16,15,1)
(46,45,2)
(45,32,2)
(9,32,2)
(7,45,2)
(52,45,2)
(32,33,2)
(27,45,2)
(5,45,2)
(34,45,2)
(9,35,2)
(42,45,2)
(4,36,2)
(23,35,2)
(38,19,2)
(48,45,2)
(37,28,2)
(19,39,2)
(9,45,2)
(5,32,2)
(1,14,2)
(5,35,2)
-----------------------------------
(0,)
(1,source[100-1])
(2,data)
(3,myUnion)
(4,data = -1)
(5,strncpy(dest, source, data)
(6,\\\'\\\\0\\\')
(7,dest)
(8,RET)
(9,dest[data])
(10,source[100-1] = \\\'\\\\0\\\')
(11,"")
(12,if (data < 100)
(13,1)
(14,100-1)
(15,100)
(16,1)
(17,data)
(18,data)
(19,data = -1)
(20,dest)
(21,unionFirst)
(22,data)
(23,printLine(dest)
(24,myUnion)
(25,source)
(26,100)
(27,dest[data] = \\\'\\\\0\\\')
(28,100-1)
(29,)
(30,)
(31,\\\'A\\\')
(32,data = myUnion.unionSecond)
(33,myUnion.unionSecond)
(34,data)
(35,dest[100] = "")
(36,-1)
(37,memset(source, \\\'A\\\', 100-1)
(38,myUnion.unionFirst = data)
(39,-1)
(40,source)
(41,dest)
(42,source)
(43,data)
(44,unionSecond)
(45,data < 100)
(46,data)
(47,myUnion)
(48,\\\'\\\\0\\\')
(49,dest)
(50,myUnion.unionFirst)
(51,data)
(52,dest)
(53,data)
(54,1)
(55,)
(56,1)
(57,100)
(58,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^