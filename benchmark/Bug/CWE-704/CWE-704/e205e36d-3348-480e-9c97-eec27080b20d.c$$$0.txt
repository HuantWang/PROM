-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_31_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Read data from the console using fscanf() */
    fscanf(stdin, "%d", &data);
    {
        int dataCopy = data;
        int data = dataCopy;
        {
            char source[100];
            char dest[100] = "";
            memset(source, 'A', 100-1);
            source[100-1] = '\0';
            if (data < 100)
            {
                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
                 * the sign conversion could result in a very large number */
                memcpy(dest, source, data);
                dest[data] = '\0'; /* NULL terminate */
            }
            printLine(dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
18,21
18,22
19,20
21,22
24,25
25,26
27,28
27,29
27,30
28,29
29,30
29,31
31,32
31,33
33,34
34,35
36,37
37,38
37,39
39,40
39,41
41,42
42,43
44,45
44,46
44,47
44,48
44,49
44,50
45,46
46,47
46,48
48,49
48,50
50,51
52,53
53,54
53,55
55,56
55,57
55,58
57,58
59,60
61,62
62,63
62,64
62,65
62,66
63,64
65,66
68,69
68,70
71,72
72,73
72,74
73,74
73,75
74,75
76,77
76,78
80,81
80,82
81,82
81,83
82,83
85,86
85,87
86,87
87,88
87,89
87,90
87,91
88,89
90,91
92,93
94,95
96,97
97,98
97,99
98,99
98,100
99,100
101,102
104,105
105,106
105,107
106,107
108,109
-----nextToken-----
2,4,8,10,14,16,20,22,23,26,30,32,35,38,40,43,47,49,51,54,56,58,60,64,66,67,69,70,75,77,78,79,83,84,89,91,93,95,100,102,103,107,109
-----computeFrom-----
12,13
12,14
68,69
68,70
72,73
72,74
76,77
76,78
81,82
81,83
97,98
97,99
-----guardedBy-----
83,102
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_31_bad(){    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    {        int dataCopy = data;        int data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memcpy(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_31_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_31_bad
{    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    {        int dataCopy = data;        int data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memcpy(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        int dataCopy = data;        int data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memcpy(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }    }
int dataCopy = data;
int dataCopy = data;
int
dataCopy = data
dataCopy
= data
data
data
int data = dataCopy;
int data = dataCopy;
int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memcpy(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memcpy(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }
data < 100
data
data
100
{                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memcpy(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(26,32,0)
(40,51,0)
(51,32,0)
(43,0,0)
(35,33,0)
(36,18,0)
(5,51,0)
(9,48,0)
(34,51,0)
(18,26,0)
(47,33,0)
(20,0,0)
(3,46,0)
(12,47,0)
(0,5,0)
(22,41,0)
(33,23,0)
(26,47,0)
(27,51,0)
(15,23,0)
(38,46,0)
(53,22,0)
(2,8,0)
(8,35,0)
(4,32,0)
(45,41,0)
(17,46,0)
(31,22,0)
(13,17,0)
(39,26,0)
(8,23,0)
(29,28,0)
(27,5,0)
(52,26,0)
(44,19,0)
(21,35,0)
(1,41,0)
(35,8,0)
(41,22,0)
(16,47,0)
(7,51,0)
(0,26,0)
(28,6,0)
(46,17,0)
(0,6,0)
(14,5,0)
(19,33,0)
(48,5,0)
(50,51,0)
(49,5,0)
(42,32,0)
(33,19,0)
(48,26,0)
(32,23,0)
(41,51,0)
(17,40,0)
(48,28,0)
(11,48,0)
(10,33,0)
(25,18,0)
(30,40,0)
(47,32,0)
(37,27,0)
(24,0,0)
(54,8,0)
(0,5,1)
(35,33,1)
(27,5,1)
(19,44,1)
(22,53,1)
(9,0,1)
(46,38,1)
(33,19,1)
(26,47,1)
(16,12,1)
(54,33,1)
(20,18,1)
(29,48,1)
(48,26,1)
(39,52,1)
(0,24,1)
(47,16,1)
(26,39,1)
(28,29,1)
(52,47,1)
(44,10,1)
(47,33,1)
(24,43,1)
(1,45,1)
(55,27,1)
(0,26,1)
(53,31,1)
(36,40,1)
(18,26,1)
(3,13,1)
(40,30,1)
(37,18,1)
(18,25,1)
(45,5,1)
(13,41,1)
(12,8,1)
(2,54,1)
(25,36,1)
(27,37,1)
(31,1,1)
(21,2,1)
(30,17,1)
(41,22,1)
(49,14,1)
(38,3,1)
(48,11,1)
(14,26,1)
(8,35,1)
(5,49,1)
(48,5,1)
(43,20,1)
(37,28,1)
(17,46,1)
(35,21,1)
(11,9,1)
(35,33,2)
(0,18,2)
(26,47,2)
(47,33,2)
(28,18,2)
(11,18,2)
(33,19,2)
(29,18,2)
(48,26,2)
(27,5,2)
(48,5,2)
(0,26,2)
(48,18,2)
(18,26,2)
(9,18,2)
(43,18,2)
(0,5,2)
(8,35,2)
(20,18,2)
(24,18,2)
(17,46,2)
(41,22,2)
-----------------------------------
(0,memcpy(dest, source, data)
(1,\\\'A\\\')
(2,"%d")
(3,100)
(4,dataCopy)
(5,dest[100] = "")
(6,)
(7,if (data < 100)
(8,fscanf(stdin, "%d", &data)
(9,dest)
(10,data)
(11,data)
(12,dataCopy)
(13,source)
(14,dest)
(15,data)
(16,data)
(17,source[100-1])
(18,data < 100)
(19,-1)
(20,dest)
(21,data)
(22,100-1)
(23,)
(24,data)
(25,100)
(26,data = dataCopy)
(27,printLine(dest)
(28,dest[data] = \\\'\\\\0\\\')
(29,\\\'\\\\0\\\')
(30,\\\'\\\\0\\\')
(31,100)
(32,)
(33,data = -1)
(34,source)
(35,&data)
(36,data)
(37,dest)
(38,1)
(39,dataCopy)
(40,source[100-1] = \\\'\\\\0\\\')
(41,memset(source, \\\'A\\\', 100-1)
(42,data)
(43,source)
(44,1)
(45,source)
(46,100-1)
(47,dataCopy = data)
(48,dest[data])
(49,"")
(50,dest)
(51,)
(52,data)
(53,1)
(54,stdin)
(55,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^