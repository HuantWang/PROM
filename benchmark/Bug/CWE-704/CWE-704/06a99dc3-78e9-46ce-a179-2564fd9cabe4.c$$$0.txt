-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_large_14_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    if(globalFive==5)
    {
        /* FLAW: Use a number larger than CHAR_MAX */
        data = CHAR_MAX + 1;
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
31,32
31,33
32,33
33,34
33,35
35,36
35,37
37,38
38,39
38,40
39,40
39,41
42,43
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,8,10,14,16,20,21,26,29,30,34,36,40,41,43,47,49
-----computeFrom-----
12,13
12,14
18,19
18,20
24,25
24,26
27,28
27,29
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_large_14_bad(){    short data;    /* Initialize data */    data = -1;    if(globalFive==5)    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_large_14_bad()
CWE197_Numeric_Truncation_Error__short_large_14_bad
{    short data;    /* Initialize data */    data = -1;    if(globalFive==5)    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
if(globalFive==5)    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }
globalFive==5
globalFive
globalFive
5
{        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }
data = CHAR_MAX + 1;
data = CHAR_MAX + 1
data
data
CHAR_MAX + 1
CHAR_MAX
CHAR_MAX
1
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(1,7,0)
(15,8,0)
(20,8,0)
(8,13,0)
(18,9,0)
(14,15,0)
(4,9,0)
(25,4,0)
(3,0,0)
(6,16,0)
(17,0,0)
(6,7,0)
(4,25,0)
(13,7,0)
(9,18,0)
(10,13,0)
(23,18,0)
(22,4,0)
(4,8,0)
(4,6,0)
(16,6,0)
(21,7,0)
(8,4,0)
(24,9,0)
(2,16,0)
(11,18,0)
(5,6,0)
(15,13,0)
(9,12,0)
(17,6,1)
(19,15,1)
(4,25,1)
(4,9,1)
(14,8,1)
(15,8,1)
(20,9,1)
(4,6,1)
(18,11,1)
(24,0,1)
(22,20,1)
(16,2,1)
(11,23,1)
(6,16,1)
(23,24,1)
(15,14,1)
(0,3,1)
(20,0,1)
(2,5,1)
(4,22,1)
(8,4,1)
(3,17,1)
(9,18,1)
(11,0,2)
(4,6,2)
(18,0,2)
(4,25,2)
(4,9,2)
(8,4,2)
(15,8,2)
(9,18,2)
(23,0,2)
(24,0,2)
(6,16,2)
(9,0,2)
-----------------------------------
(0,globalFive==5)
(1,if(globalFive==5)
(2,1)
(3,5)
(4,(char)
(5,data)
(6,data = -1)
(7,)
(8,charData = (char)
(9,data = CHAR_MAX + 1)
(10,charData)
(11,1)
(12,)
(13,)
(14,charData)
(15,printHexCharLine(charData)
(16,-1)
(17,globalFive)
(18,CHAR_MAX + 1)
(19,RET)
(20,charData)
(21,data)
(22,data)
(23,CHAR_MAX)
(24,data)
(25,char)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^