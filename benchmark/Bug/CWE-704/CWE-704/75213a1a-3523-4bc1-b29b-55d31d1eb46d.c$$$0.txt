-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_rand_13_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* FLAW: Use a random number */
        data = (short)RAND32();
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
31,32
32,33
34,35
34,36
35,36
36,37
36,38
38,39
38,40
40,41
41,42
41,43
42,43
42,44
45,46
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,8,10,14,16,20,21,26,29,30,33,37,39,43,44,46,50,52
-----computeFrom-----
12,13
12,14
18,19
18,20
24,25
24,26
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_rand_13_bad(){    short data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Use a random number */        data = (short)RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_rand_13_bad()
CWE197_Numeric_Truncation_Error__short_rand_13_bad
{    short data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Use a random number */        data = (short)RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Use a random number */        data = (short)RAND32();    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* FLAW: Use a random number */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(22,7,0)
(24,11,0)
(19,22,0)
(6,25,0)
(3,22,0)
(23,0,0)
(20,16,0)
(5,3,0)
(12,11,0)
(20,15,0)
(25,6,0)
(16,20,0)
(14,22,0)
(25,0,0)
(3,15,0)
(22,3,0)
(1,6,0)
(14,7,0)
(3,13,0)
(3,25,0)
(21,20,0)
(2,25,0)
(8,15,0)
(10,14,0)
(4,7,0)
(7,0,0)
(20,21,0)
(15,20,0)
(17,0,0)
(15,9,0)
(13,3,0)
(5,19,1)
(10,22,1)
(1,2,1)
(6,1,1)
(18,14,1)
(12,24,1)
(3,13,1)
(21,8,1)
(3,15,1)
(15,20,1)
(22,3,1)
(3,5,1)
(11,12,1)
(14,10,1)
(25,6,1)
(19,11,1)
(24,25,1)
(20,21,1)
(20,16,1)
(3,25,1)
(19,15,1)
(8,11,1)
(14,22,1)
(3,25,2)
(8,11,2)
(25,6,2)
(3,13,2)
(20,16,2)
(3,15,2)
(15,20,2)
(20,21,2)
(15,11,2)
(22,3,2)
(20,11,2)
(21,11,2)
(14,22,2)
-----------------------------------
(0,)
(1,1)
(2,data)
(3,(char)
(4,charData)
(5,data)
(6,-1)
(7,)
(8,data)
(9,)
(10,charData)
(11,GLOBAL_CONST_FIVE==5)
(12,5)
(13,char)
(14,printHexCharLine(charData)
(15,data = (short)
(16,short)
(17,data)
(18,RET)
(19,charData)
(20,(short)
(21,RAND32()
(22,charData = (char)
(23,if(GLOBAL_CONST_FIVE==5)
(24,GLOBAL_CONST_FIVE)
(25,data = -1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^