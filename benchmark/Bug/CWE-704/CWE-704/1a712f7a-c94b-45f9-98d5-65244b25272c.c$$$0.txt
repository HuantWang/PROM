-----label-----
1
-----code-----
void CWE843_Type_Confusion__short_01_bad()
{
    void * data;
    /* Initialize data */
    data = NULL;
    {
        /* FLAW: Point data to a short */
        short shortBuffer = 8;
        data = &shortBuffer;
    }
    /* POTENTIAL FLAW: Attempt to access data as an int */
    printIntLine(*((int*)data));
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
20,21
20,22
22,23
22,24
24,25
26,27
27,28
27,29
28,29
30,31
31,32
33,34
34,35
34,36
35,36
37,38
38,39
39,40
39,41
40,41
40,42
42,43
44,45
-----nextToken-----
2,4,8,10,11,15,17,21,23,25,29,32,36,41,43,45
-----computeFrom-----
13,14
13,15
27,28
27,29
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;UnaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE843_Type_Confusion__short_01_bad(){    void * data;    /* Initialize data */    data = NULL;    {        /* FLAW: Point data to a short */        short shortBuffer = 8;        data = &shortBuffer;    }    /* POTENTIAL FLAW: Attempt to access data as an int */    printIntLine(*((int*)data));}
void
CWE843_Type_Confusion__short_01_bad()
CWE843_Type_Confusion__short_01_bad
{    void * data;    /* Initialize data */    data = NULL;    {        /* FLAW: Point data to a short */        short shortBuffer = 8;        data = &shortBuffer;    }    /* POTENTIAL FLAW: Attempt to access data as an int */    printIntLine(*((int*)data));}
void * data;
void * data;
void
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
{        /* FLAW: Point data to a short */        short shortBuffer = 8;        data = &shortBuffer;    }
short shortBuffer = 8;
short shortBuffer = 8;
short
shortBuffer = 8
shortBuffer
= 8
8
data = &shortBuffer;
data = &shortBuffer
data
data
&shortBuffer
shortBuffer
shortBuffer
printIntLine(*((int*)data));
printIntLine(*((int*)data))
printIntLine
printIntLine
*((int*)data)
((int*)data)
(int*)data
int*
int
*
*
data
data
-----joern-----
(19,16,0)
(6,1,0)
(7,18,0)
(14,4,0)
(7,4,0)
(1,0,0)
(18,7,0)
(6,2,0)
(17,2,0)
(3,5,0)
(11,2,0)
(4,5,0)
(1,6,0)
(8,4,0)
(12,18,0)
(15,7,0)
(10,0,0)
(9,16,0)
(16,0,0)
(18,5,0)
(2,11,0)
(5,0,0)
(2,6,0)
(2,18,0)
(8,16,1)
(7,15,1)
(7,4,1)
(16,19,1)
(2,11,1)
(1,6,1)
(13,1,1)
(2,17,1)
(14,8,1)
(6,2,1)
(18,7,1)
(17,18,1)
(12,4,1)
(15,12,1)
(2,18,1)
(19,9,1)
(4,14,1)
(6,2,2)
(2,18,2)
(1,6,2)
(7,4,2)
(18,7,2)
(2,11,2)
-----------------------------------
(0,)
(1,printIntLine(*((int*)
(2,(int*)
(3,shortBuffer)
(4,shortBuffer = 8)
(5,)
(6,*((int*)
(7,&shortBuffer)
(8,shortBuffer)
(9,data)
(10,data)
(11,int*)
(12,data)
(13,RET)
(14,8)
(15,shortBuffer)
(16,data = NULL)
(17,data)
(18,data = &shortBuffer)
(19,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^