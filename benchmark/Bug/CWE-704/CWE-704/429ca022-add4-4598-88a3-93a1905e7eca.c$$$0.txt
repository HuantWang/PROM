-----label-----
1
-----code-----
static int badSource(int data)
{
    /* FLAW: Use a negative number */
    data = -1;
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
11,12
11,13
12,13
14,15
16,17
17,18
-----nextToken-----
2,4,6,8,13,15,18
-----computeFrom-----
11,12
11,13
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static int badSource(int data){    /* FLAW: Use a negative number */    data = -1;    return data;}
static int
badSource(int data)
badSource
int data
int
data
data
{    /* FLAW: Use a negative number */    data = -1;    return data;}
data = -1;
data = -1
data
data
-1
1
return data;
data
data
-----joern-----
(7,6,0)
(6,5,0)
(4,2,0)
(2,6,0)
(6,8,0)
(2,5,0)
(3,7,0)
(1,2,0)
(2,8,0)
(0,6,0)
(6,7,0)
(2,5,1)
(7,3,1)
(6,7,1)
(3,0,1)
(1,2,1)
(2,6,1)
(6,5,1)
(4,6,1)
(2,4,1)
(6,7,2)
(2,6,2)
(6,5,2)
(1,2,2)
(2,5,2)
-----------------------------------
(0,data)
(1,RET)
(2,return data;)
(3,1)
(4,data)
(5,int data)
(6,data = -1)
(7,-1)
(8,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^