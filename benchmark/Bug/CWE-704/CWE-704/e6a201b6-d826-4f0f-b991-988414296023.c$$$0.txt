-----label-----
1
-----code-----
int CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_22_badSource(int data)
{
    if(CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_22_badGlobal)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
10,12
11,12
13,14
14,15
14,16
15,16
16,17
16,18
18,19
18,20
18,21
20,21
21,22
23,24
25,26
25,27
25,28
26,27
26,28
27,28
27,29
27,30
27,31
28,29
30,31
32,33
34,35
36,37
38,39
39,40
40,41
40,42
41,42
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
54,55
55,56
-----nextToken-----
2,4,6,8,12,17,19,22,24,29,31,33,35,37,42,45,47,52,53,56
-----computeFrom-----
26,27
26,28
40,41
40,42
-----guardedBy-----
31,47
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
int CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_22_badSource(int data){    if(CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_22_badGlobal)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    return data;}
int
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_22_badSource(int data)
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_22_badSource
int data
int
data
data
{    if(CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_22_badGlobal)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    return data;}
if(CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_22_badGlobal)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_22_badGlobal
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_22_badGlobal
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
return data;
data
data
-----joern-----
(27,25,0)
(22,17,0)
(26,1,0)
(16,12,0)
(7,12,0)
(26,13,0)
(23,12,0)
(0,26,0)
(26,3,0)
(13,1,0)
(15,3,0)
(24,5,0)
(25,16,0)
(7,13,0)
(19,7,0)
(18,13,0)
(10,16,0)
(20,16,0)
(14,26,0)
(13,8,0)
(12,5,0)
(9,16,0)
(2,5,0)
(5,6,0)
(4,12,0)
(13,7,0)
(17,21,0)
(16,25,0)
(18,25,1)
(16,10,1)
(13,1,1)
(25,27,1)
(19,18,1)
(4,11,1)
(22,25,1)
(0,13,1)
(7,12,1)
(10,20,1)
(12,23,1)
(17,22,1)
(26,1,1)
(9,12,1)
(25,16,1)
(14,26,1)
(27,16,1)
(16,12,1)
(7,19,1)
(0,17,1)
(26,13,1)
(20,9,1)
(26,0,1)
(13,7,1)
(0,11,1)
(23,4,1)
(27,11,2)
(23,11,2)
(19,25,2)
(16,11,2)
(4,11,2)
(13,25,2)
(22,25,2)
(26,1,2)
(13,7,2)
(16,12,2)
(12,11,2)
(13,1,2)
(14,26,2)
(10,11,2)
(18,25,2)
(9,11,2)
(17,25,2)
(7,25,2)
(25,11,2)
(20,11,2)
(7,12,2)
(25,16,2)
(26,13,2)
-----------------------------------
(0,data)
(1,int data)
(2,inputBuffer)
(3,)
(4,inputBuffer)
(5,)
(6,)
(7,atoi(inputBuffer)
(8,)
(9,inputBuffer)
(10,stdin)
(11,CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_22_badGlobal)
(12,inputBuffer[CHAR_ARRAY_SIZE] = "")
(13,data = atoi(inputBuffer)
(14,RET)
(15,if(CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_22_badGlobal)
(16,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(17,printLine("fgets()
(18,data)
(19,inputBuffer)
(20,CHAR_ARRAY_SIZE)
(21,)
(22,"fgets()
(23,"")
(24,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(25,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(26,return data;)
(27,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^