-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_34_bad()
{
    short data;
    CWE194_Unexpected_Sign_Extension__negative_strncpy_34_unionType myUnion;
    /* Initialize data */
    data = 0;
    /* FLAW: Use a negative number */
    data = -1;
    myUnion.unionFirst = data;
    {
        short data = myUnion.unionSecond;
        {
            char source[100];
            char dest[100] = "";
            memset(source, 'A', 100-1);
            source[100-1] = '\0';
            if (data < 100)
            {
                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
                 * the sign extension could result in a very large number */
                strncpy(dest, source, data);
                dest[data] = '\0'; /* strncpy() does not always NULL terminate */
            }
            printLine(dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
30,32
31,32
34,35
36,37
36,38
37,38
38,39
38,40
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
47,50
47,51
47,52
47,53
48,49
49,50
49,51
51,52
51,53
53,54
55,56
56,57
56,58
58,59
58,60
58,61
60,61
62,63
64,65
65,66
65,67
65,68
65,69
66,67
68,69
71,72
71,73
74,75
75,76
75,77
76,77
76,78
77,78
79,80
79,81
83,84
83,85
84,85
84,86
85,86
88,89
88,90
89,90
90,91
90,92
90,93
90,94
91,92
93,94
95,96
97,98
99,100
100,101
100,102
101,102
101,103
102,103
104,105
107,108
108,109
108,110
109,110
111,112
-----nextToken-----
2,4,8,10,14,16,20,21,25,27,32,33,35,39,41,45,46,50,52,54,57,59,61,63,67,69,70,72,73,78,80,81,82,86,87,92,94,96,98,103,105,106,110,112
-----computeFrom-----
18,19
18,20
23,24
23,25
29,30
29,31
71,72
71,73
75,76
75,77
79,80
79,81
84,85
84,86
100,101
100,102
-----guardedBy-----
86,105
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_34_bad(){    short data;    CWE194_Unexpected_Sign_Extension__negative_strncpy_34_unionType myUnion;    /* Initialize data */    data = 0;    /* FLAW: Use a negative number */    data = -1;    myUnion.unionFirst = data;    {        short data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign extension could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }}
void
CWE194_Unexpected_Sign_Extension__negative_strncpy_34_bad()
CWE194_Unexpected_Sign_Extension__negative_strncpy_34_bad
{    short data;    CWE194_Unexpected_Sign_Extension__negative_strncpy_34_unionType myUnion;    /* Initialize data */    data = 0;    /* FLAW: Use a negative number */    data = -1;    myUnion.unionFirst = data;    {        short data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign extension could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }}
short data;
short data;
short
data
data
CWE194_Unexpected_Sign_Extension__negative_strncpy_34_unionType myUnion;
CWE194_Unexpected_Sign_Extension__negative_strncpy_34_unionType myUnion;
CWE194_Unexpected_Sign_Extension__negative_strncpy_34_unionType
CWE194_Unexpected_Sign_Extension__negative_strncpy_34_unionType
myUnion
myUnion
data = 0;
data = 0
data
data
0
data = -1;
data = -1
data
data
-1
1
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        short data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign extension could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }
short data = myUnion.unionSecond;
short data = myUnion.unionSecond;
short
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign extension could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign extension could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }
data < 100
data
data
100
{                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign extension could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(5,57,0)
(23,50,0)
(9,35,0)
(2,46,0)
(41,46,0)
(57,17,0)
(51,35,0)
(45,55,0)
(9,13,0)
(17,42,0)
(36,55,0)
(48,37,0)
(16,9,0)
(52,35,0)
(54,27,0)
(11,42,0)
(2,42,0)
(38,39,0)
(22,1,0)
(39,33,0)
(36,39,0)
(55,35,0)
(19,35,0)
(56,13,0)
(37,57,0)
(44,46,0)
(32,57,0)
(50,55,0)
(46,42,0)
(47,44,0)
(18,5,0)
(21,8,0)
(36,57,0)
(6,17,0)
(8,42,0)
(28,35,0)
(1,2,0)
(15,50,0)
(27,54,0)
(26,2,0)
(13,9,0)
(40,27,0)
(3,37,0)
(20,36,0)
(43,54,0)
(31,50,0)
(4,27,0)
(14,55,0)
(7,12,0)
(46,44,0)
(49,52,0)
(24,36,0)
(50,57,0)
(10,9,0)
(35,17,0)
(57,37,0)
(50,33,0)
(30,1,0)
(54,52,0)
(12,35,0)
(0,13,0)
(34,8,0)
(25,5,0)
(12,55,0)
(53,42,0)
(20,24,1)
(2,26,1)
(46,44,1)
(50,57,1)
(5,57,1)
(1,22,1)
(31,5,1)
(39,38,1)
(0,16,1)
(49,54,1)
(26,1,1)
(16,10,1)
(52,49,1)
(50,55,1)
(57,37,1)
(54,27,1)
(37,3,1)
(25,18,1)
(12,7,1)
(7,5,1)
(12,55,1)
(50,23,1)
(48,32,1)
(23,15,1)
(15,31,1)
(47,41,1)
(24,50,1)
(36,57,1)
(44,47,1)
(56,0,1)
(2,46,1)
(7,39,1)
(40,43,1)
(38,36,1)
(55,14,1)
(36,55,1)
(22,30,1)
(14,45,1)
(4,40,1)
(36,20,1)
(41,8,1)
(43,9,1)
(45,57,1)
(10,55,1)
(18,52,1)
(27,4,1)
(34,21,1)
(29,12,1)
(8,34,1)
(13,56,1)
(32,2,1)
(5,25,1)
(9,13,1)
(3,48,1)
(30,46,1)
(20,5,2)
(54,27,2)
(38,5,2)
(31,5,2)
(5,57,2)
(36,57,2)
(23,5,2)
(36,55,2)
(46,44,2)
(9,13,2)
(12,55,2)
(57,37,2)
(15,5,2)
(2,46,2)
(50,5,2)
(39,5,2)
(50,57,2)
(50,55,2)
(36,5,2)
(24,5,2)
-----------------------------------
(0,100)
(1,myUnion.unionFirst)
(2,myUnion.unionFirst = data)
(3,unionSecond)
(4,1)
(5,data < 100)
(6,data)
(7,dest)
(8,data = 0)
(9,memset(source, \\\'A\\\', 100-1)
(10,source)
(11,data)
(12,printLine(dest)
(13,100-1)
(14,"")
(15,source)
(16,\\\'A\\\')
(17,)
(18,data)
(19,dest)
(20,data)
(21,data)
(22,unionFirst)
(23,data)
(24,dest)
(25,100)
(26,data)
(27,100-1)
(28,source)
(29,RET)
(30,myUnion)
(31,dest)
(32,data)
(33,)
(34,0)
(35,)
(36,dest[data])
(37,myUnion.unionSecond)
(38,\\\'\\\\0\\\')
(39,dest[data] = \\\'\\\\0\\\')
(40,100)
(41,data)
(42,)
(43,source)
(44,-1)
(45,dest)
(46,data = -1)
(47,1)
(48,myUnion)
(49,\\\'\\\\0\\\')
(50,strncpy(dest, source, data)
(51,if (data < 100)
(52,source[100-1] = \\\'\\\\0\\\')
(53,myUnion)
(54,source[100-1])
(55,dest[100] = "")
(56,1)
(57,data = myUnion.unionSecond)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^