-----label-----
1
-----code-----
void CWE843_Type_Confusion__short_32_bad()
{
    void * data;
    void * *dataPtr1 = &data;
    void * *dataPtr2 = &data;
    /* Initialize data */
    data = NULL;
    {
        void * data = *dataPtr1;
        {
            /* FLAW: Point data to a short */
            short shortBuffer = 8;
            data = &shortBuffer;
        }
        *dataPtr1 = data;
    }
    {
        void * data = *dataPtr2;
        /* POTENTIAL FLAW: Attempt to access data as an int */
        printIntLine(*((int*)data));
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
15,19
19,20
20,21
21,22
23,24
24,25
24,26
26,27
26,28
26,29
26,30
30,31
31,32
32,33
34,35
35,36
35,37
36,37
38,39
40,41
40,42
40,43
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
49,50
51,52
51,53
52,53
53,54
53,55
55,56
55,57
57,58
59,60
60,61
60,62
61,62
63,64
64,65
66,67
67,68
67,69
68,69
69,70
71,72
73,74
73,75
74,75
75,76
75,77
77,78
77,79
77,80
80,81
81,82
82,83
84,85
85,86
85,87
86,87
88,89
89,90
90,91
90,92
91,92
91,93
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,16,17,18,22,25,27,28,29,33,37,39,43,45,46,50,54,56,58,62,65,70,72,76,78,79,83,87,92,94,96
-----computeFrom-----
35,36
35,37
60,61
60,62
67,68
67,69
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;UnaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE843_Type_Confusion__short_32_bad(){    void * data;    void * *dataPtr1 = &data;    void * *dataPtr2 = &data;    /* Initialize data */    data = NULL;    {        void * data = *dataPtr1;        {            /* FLAW: Point data to a short */            short shortBuffer = 8;            data = &shortBuffer;        }        *dataPtr1 = data;    }    {        void * data = *dataPtr2;        /* POTENTIAL FLAW: Attempt to access data as an int */        printIntLine(*((int*)data));    }}
void
CWE843_Type_Confusion__short_32_bad()
CWE843_Type_Confusion__short_32_bad
{    void * data;    void * *dataPtr1 = &data;    void * *dataPtr2 = &data;    /* Initialize data */    data = NULL;    {        void * data = *dataPtr1;        {            /* FLAW: Point data to a short */            short shortBuffer = 8;            data = &shortBuffer;        }        *dataPtr1 = data;    }    {        void * data = *dataPtr2;        /* POTENTIAL FLAW: Attempt to access data as an int */        printIntLine(*((int*)data));    }}
void * data;
void * data;
void
* data
*
data
void * *dataPtr1 = &data;
void * *dataPtr1 = &data;
void
* *dataPtr1 = &data
*
*
dataPtr1
= &data
&data
data
data
void * *dataPtr2 = &data;
void * *dataPtr2 = &data;
void
* *dataPtr2 = &data
*
*
dataPtr2
= &data
&data
data
data
data = NULL;
data = NULL
data
data
NULL
NULL
{        void * data = *dataPtr1;        {            /* FLAW: Point data to a short */            short shortBuffer = 8;            data = &shortBuffer;        }        *dataPtr1 = data;    }
void * data = *dataPtr1;
void * data = *dataPtr1;
void
* data = *dataPtr1
*
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
{            /* FLAW: Point data to a short */            short shortBuffer = 8;            data = &shortBuffer;        }
short shortBuffer = 8;
short shortBuffer = 8;
short
shortBuffer = 8
shortBuffer
= 8
8
data = &shortBuffer;
data = &shortBuffer
data
data
&shortBuffer
shortBuffer
shortBuffer
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        void * data = *dataPtr2;        /* POTENTIAL FLAW: Attempt to access data as an int */        printIntLine(*((int*)data));    }
void * data = *dataPtr2;
void * data = *dataPtr2;
void
* data = *dataPtr2
*
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
printIntLine(*((int*)data));
printIntLine(*((int*)data))
printIntLine
printIntLine
*((int*)data)
((int*)data)
(int*)data
int*
int
*
*
data
data
-----joern-----
(10,35,0)
(5,39,0)
(31,25,0)
(2,38,0)
(9,24,0)
(25,17,0)
(39,5,0)
(2,23,0)
(13,9,0)
(35,17,0)
(36,37,0)
(38,2,0)
(37,35,0)
(33,2,0)
(7,21,0)
(42,34,0)
(11,15,0)
(35,37,0)
(27,17,0)
(40,24,0)
(22,25,0)
(18,10,0)
(33,20,0)
(3,34,0)
(4,39,0)
(5,17,0)
(16,2,0)
(44,33,0)
(13,35,0)
(38,5,0)
(10,40,0)
(29,23,0)
(11,33,0)
(9,13,0)
(21,3,0)
(33,11,0)
(8,17,0)
(41,42,0)
(19,40,0)
(12,38,0)
(30,3,0)
(0,5,0)
(43,9,0)
(23,17,0)
(15,23,0)
(20,33,0)
(40,3,0)
(1,17,0)
(14,24,0)
(15,11,0)
(24,17,0)
(34,24,0)
(32,35,0)
(28,13,0)
(26,34,0)
(6,42,0)
(21,42,0)
(3,21,0)
(30,42,1)
(22,5,1)
(38,12,1)
(2,38,1)
(40,19,1)
(3,21,1)
(21,42,1)
(0,35,1)
(28,43,1)
(42,6,1)
(9,13,1)
(33,2,1)
(12,16,1)
(6,41,1)
(15,11,1)
(10,35,1)
(21,7,1)
(33,20,1)
(45,15,1)
(7,30,1)
(40,3,1)
(31,22,1)
(5,39,1)
(43,25,1)
(33,44,1)
(44,2,1)
(16,40,1)
(35,37,1)
(13,35,1)
(11,33,1)
(19,10,1)
(4,0,1)
(36,32,1)
(10,18,1)
(38,5,1)
(39,4,1)
(37,36,1)
(18,3,1)
(25,31,1)
(41,9,1)
(13,28,1)
(33,2,2)
(5,39,2)
(2,38,2)
(13,35,2)
(38,5,2)
(15,11,2)
(9,13,2)
(10,35,2)
(11,33,2)
(3,21,2)
(21,42,2)
(35,37,2)
(40,3,2)
(33,20,2)
-----------------------------------
(0,dataPtr2)
(1,dataPtr1)
(2,* data = *dataPtr2)
(3,data = &shortBuffer)
(4,data)
(5,* *dataPtr2 = &data)
(6,8)
(7,shortBuffer)
(8,dataPtr2)
(9,* data = *dataPtr1)
(10,*dataPtr1)
(11,*((int*)
(12,dataPtr2)
(13,*dataPtr1)
(14,data)
(15,printIntLine(*((int*)
(16,data)
(17,)
(18,dataPtr1)
(19,data)
(20,int*)
(21,&shortBuffer)
(22,data)
(23,)
(24,)
(25,data = NULL)
(26,shortBuffer)
(27,data)
(28,dataPtr1)
(29,data)
(30,data)
(31,NULL)
(32,dataPtr1)
(33,(int*)
(34,)
(35,* *dataPtr1 = &data)
(36,data)
(37,&data)
(38,*dataPtr2)
(39,&data)
(40,*dataPtr1 = data)
(41,shortBuffer)
(42,shortBuffer = 8)
(43,data)
(44,data)
(45,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^