-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fscanf_to_short_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = -1;
    {
        int data = *dataPtr1;
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
            short shortData = (short)data;
            printShortLine(shortData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
35,36
37,38
37,39
37,40
38,39
39,40
39,41
41,42
41,43
43,44
44,45
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
55,56
57,58
58,59
58,60
59,60
60,61
62,63
64,65
64,66
65,66
66,67
66,68
68,69
68,70
70,71
71,72
72,73
74,75
74,76
75,76
76,77
76,78
78,79
78,80
80,81
81,82
81,83
82,83
82,84
85,86
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,36,40,42,46,50,52,53,56,61,63,67,69,73,77,79,83,84,86,90,92
-----computeFrom-----
32,33
32,34
58,59
58,60
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fscanf_to_short_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_fscanf_to_short_32_bad()
CWE197_Numeric_Truncation_Error__int_fscanf_to_short_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = -1;
data = -1
data
data
-1
1
{        int data = *dataPtr1;        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(17,42,0)
(18,43,0)
(42,17,0)
(41,3,0)
(39,33,0)
(12,23,0)
(14,7,0)
(36,9,0)
(3,20,0)
(29,43,0)
(24,17,0)
(8,9,0)
(15,23,0)
(43,22,0)
(3,21,0)
(19,43,0)
(9,8,0)
(33,1,0)
(17,23,0)
(6,23,0)
(20,22,0)
(40,1,0)
(30,6,0)
(26,28,0)
(37,4,0)
(44,33,0)
(46,8,0)
(7,4,0)
(35,19,0)
(40,8,0)
(27,29,0)
(5,1,0)
(44,8,0)
(4,7,0)
(34,40,0)
(2,40,0)
(6,28,0)
(19,3,0)
(25,33,0)
(0,20,0)
(34,6,0)
(1,23,0)
(0,17,0)
(20,0,0)
(32,0,0)
(29,19,0)
(10,42,0)
(9,6,0)
(8,1,0)
(45,23,0)
(4,23,0)
(11,20,0)
(33,44,0)
(28,6,0)
(21,3,0)
(13,34,0)
(38,44,0)
(3,19,0)
(31,22,0)
(22,23,0)
(40,8,1)
(9,36,1)
(0,32,1)
(33,44,1)
(40,2,1)
(20,0,1)
(29,19,1)
(17,42,1)
(25,39,1)
(34,6,1)
(29,27,1)
(3,20,1)
(26,30,1)
(34,13,1)
(13,33,1)
(4,7,1)
(27,19,1)
(3,21,1)
(44,8,1)
(24,6,1)
(39,8,1)
(9,6,1)
(14,37,1)
(41,35,1)
(19,3,1)
(46,4,1)
(38,25,1)
(2,34,1)
(10,24,1)
(42,10,1)
(6,28,1)
(3,41,1)
(37,17,1)
(28,26,1)
(36,46,1)
(44,38,1)
(32,11,1)
(0,17,1)
(7,14,1)
(11,40,1)
(8,9,1)
(16,29,1)
(35,20,1)
(34,6,2)
(3,20,2)
(6,28,2)
(8,9,2)
(17,42,2)
(20,0,2)
(44,8,2)
(9,6,2)
(19,3,2)
(29,19,2)
(33,44,2)
(0,17,2)
(3,21,2)
(40,8,2)
(4,7,2)
-----------------------------------
(0,*dataPtr2)
(1,)
(2,data)
(3,(short)
(4,data = -1)
(5,data)
(6,*dataPtr1 = &data)
(7,-1)
(8,data = *dataPtr1)
(9,*dataPtr1)
(10,data)
(11,data)
(12,dataPtr1)
(13,dataPtr1)
(14,1)
(15,data)
(16,RET)
(17,*dataPtr2 = &data)
(18,shortData)
(19,shortData = (short)
(20,data = *dataPtr2)
(21,short)
(22,)
(23,)
(24,dataPtr2)
(25,"%d")
(26,data)
(27,shortData)
(28,&data)
(29,printShortLine(shortData)
(30,dataPtr1)
(31,data)
(32,dataPtr2)
(33,fscanf(stdin, "%d", &data)
(34,*dataPtr1)
(35,shortData)
(36,dataPtr1)
(37,data)
(38,data)
(39,stdin)
(40,*dataPtr1 = data)
(41,data)
(42,&data)
(43,)
(44,&data)
(45,dataPtr2)
(46,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^