-----label-----
1
-----code-----
static int badSource(int data)
{
    /* POTENTIAL FLAW: Read data from the console using fscanf() */
    fscanf(stdin, "%d", &data);
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
11,12
11,13
11,14
11,15
12,13
14,15
17,18
18,19
20,21
21,22
-----nextToken-----
2,4,6,8,13,15,16,19,22
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static int badSource(int data){    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    return data;}
static int
badSource(int data)
badSource
int data
int
data
data
{    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    return data;}
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
return data;
data
data
-----joern-----
(8,9,0)
(0,6,0)
(8,7,0)
(4,7,0)
(2,0,0)
(7,8,0)
(0,9,0)
(1,8,0)
(5,7,0)
(7,6,0)
(3,0,0)
(0,9,1)
(7,8,1)
(8,9,1)
(8,1,1)
(5,4,1)
(2,0,1)
(1,5,1)
(3,7,1)
(0,3,1)
(0,9,2)
(8,9,2)
(2,0,2)
(7,8,2)
-----------------------------------
(0,return data;)
(1,data)
(2,RET)
(3,data)
(4,stdin)
(5,"%d")
(6,)
(7,fscanf(stdin, "%d", &data)
(8,&data)
(9,int data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^