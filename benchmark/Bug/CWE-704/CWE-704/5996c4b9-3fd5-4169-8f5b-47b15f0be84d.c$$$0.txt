-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_13_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
27,28
28,29
30,31
30,32
30,33
30,34
30,35
30,36
31,32
32,33
32,34
34,35
34,36
36,37
38,39
39,40
39,41
41,42
41,43
41,44
43,44
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
66,68
67,68
67,69
68,69
71,72
71,73
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,14,16,20,21,26,29,33,35,37,40,42,44,46,50,52,53,55,56,61,63,64,65,69,70,75,77,79,81,86,88,89,93,95
-----computeFrom-----
12,13
12,14
18,19
18,20
24,25
24,26
54,55
54,56
58,59
58,60
62,63
62,64
67,68
67,69
83,84
83,85
-----guardedBy-----
69,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_13_bad(){    int data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_13_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_13_bad
{    int data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(34,10,0)
(37,12,0)
(18,13,0)
(44,12,0)
(32,39,0)
(5,16,0)
(38,23,0)
(45,12,0)
(12,42,0)
(33,42,0)
(13,12,0)
(35,3,0)
(0,48,0)
(14,2,0)
(31,32,0)
(46,12,0)
(23,13,0)
(30,37,0)
(32,27,0)
(10,32,0)
(48,20,0)
(6,10,0)
(21,48,0)
(48,32,0)
(49,13,0)
(47,31,0)
(22,12,0)
(8,48,0)
(35,42,0)
(13,23,0)
(26,35,0)
(3,35,0)
(24,29,0)
(11,3,0)
(20,12,0)
(25,44,0)
(19,20,0)
(31,35,0)
(48,29,0)
(44,20,0)
(43,20,0)
(48,35,0)
(7,23,0)
(31,20,0)
(15,2,0)
(39,32,0)
(1,42,0)
(17,16,0)
(28,31,0)
(4,32,0)
(10,35,0)
(16,36,0)
(36,37,0)
(31,24,0)
(9,24,0)
(40,36,0)
(36,16,0)
(24,9,1)
(4,2,1)
(25,24,1)
(11,26,1)
(40,13,1)
(5,40,1)
(14,15,1)
(31,20,1)
(21,10,1)
(38,18,1)
(48,35,1)
(10,35,1)
(44,20,1)
(37,30,1)
(16,17,1)
(15,35,1)
(34,37,1)
(0,21,1)
(23,7,1)
(20,43,1)
(35,3,1)
(13,23,1)
(48,8,1)
(6,34,1)
(31,35,1)
(17,5,1)
(9,31,1)
(48,20,1)
(48,32,1)
(28,47,1)
(31,28,1)
(10,6,1)
(32,39,1)
(2,14,1)
(7,38,1)
(3,11,1)
(8,0,1)
(31,32,1)
(19,32,1)
(41,44,1)
(39,4,1)
(47,48,1)
(44,25,1)
(18,49,1)
(25,10,1)
(19,2,1)
(43,19,1)
(36,16,1)
(10,32,1)
(49,20,1)
(30,36,1)
(48,10,2)
(8,10,2)
(47,10,2)
(10,32,2)
(31,20,2)
(21,10,2)
(10,35,2)
(28,10,2)
(9,10,2)
(0,10,2)
(44,20,2)
(32,39,2)
(4,2,2)
(48,32,2)
(48,20,2)
(31,32,2)
(32,2,2)
(31,35,2)
(35,3,2)
(48,35,2)
(36,16,2)
(24,10,2)
(13,23,2)
(39,2,2)
(31,10,2)
-----------------------------------
(0,source)
(1,if(GLOBAL_CONST_FIVE==5)
(2,GLOBAL_CONST_FIVE==5)
(3,-1)
(4,data)
(5,100)
(6,100)
(7,1)
(8,data)
(9,\\\'\\\\0\\\')
(10,data < 100)
(11,1)
(12,)
(13,memset(source, \\\'A\\\', 100-1)
(14,5)
(15,GLOBAL_CONST_FIVE)
(16,100-1)
(17,1)
(18,\\\'A\\\')
(19,dest)
(20,dest[100] = "")
(21,dest)
(22,if (data < 100)
(23,100-1)
(24,dest[data] = \\\'\\\\0\\\')
(25,dest)
(26,data)
(27,)
(28,data)
(29,)
(30,\\\'\\\\0\\\')
(31,dest[data])
(32,data = RAND32()
(33,data)
(34,data)
(35,data = -1)
(36,source[100-1])
(37,source[100-1] = \\\'\\\\0\\\')
(38,100)
(39,RAND32()
(40,source)
(41,RET)
(42,)
(43,"")
(44,printLine(dest)
(45,dest)
(46,source)
(47,dest)
(48,memmove(dest, source, data)
(49,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^