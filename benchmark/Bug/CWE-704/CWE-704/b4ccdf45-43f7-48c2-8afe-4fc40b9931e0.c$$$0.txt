-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memmove_67b_badSink(CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memmove_67_structType myStruct)
{
    int data = myStruct.structFirst;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
21,26
21,27
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
34,35
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
57,59
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,7,9,13,15,19,20,24,26,28,31,33,35,37,41,43,44,46,47,52,54,55,56,60,61,66,68,70,72,77,79,80,84,86
-----computeFrom-----
45,46
45,47
49,50
49,51
53,54
53,55
58,59
58,60
74,75
74,76
-----guardedBy-----
60,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memmove_67b_badSink(CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memmove_67_structType myStruct){    int data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memmove_67b_badSink(CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memmove_67_structType myStruct)
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memmove_67b_badSink
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memmove_67_structType myStruct
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memmove_67_structType
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memmove_67_structType
myStruct
myStruct
{    int data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data = myStruct.structFirst;
int data = myStruct.structFirst;
int
data = myStruct.structFirst
data
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(7,34,0)
(28,39,0)
(8,28,0)
(28,0,0)
(19,29,0)
(41,29,0)
(9,10,0)
(29,31,0)
(4,15,0)
(37,24,0)
(33,28,0)
(39,28,0)
(15,34,0)
(38,25,0)
(25,5,0)
(43,24,0)
(20,24,0)
(34,24,0)
(43,35,0)
(34,15,0)
(1,34,0)
(31,16,0)
(27,17,0)
(17,35,0)
(40,14,0)
(31,29,0)
(16,24,0)
(36,17,0)
(32,5,0)
(25,35,0)
(13,17,0)
(24,14,0)
(22,15,0)
(39,14,0)
(12,39,0)
(18,16,0)
(17,39,0)
(11,43,0)
(23,25,0)
(35,24,0)
(2,24,0)
(17,21,0)
(42,31,0)
(25,39,0)
(6,35,0)
(10,39,0)
(26,10,0)
(5,21,0)
(30,35,0)
(16,18,1)
(39,28,1)
(11,5,1)
(30,6,1)
(9,16,1)
(17,13,1)
(10,26,1)
(17,35,1)
(17,39,1)
(36,27,1)
(11,10,1)
(5,32,1)
(7,1,1)
(22,4,1)
(8,33,1)
(41,19,1)
(27,10,1)
(19,42,1)
(28,0,1)
(3,43,1)
(42,34,1)
(1,35,1)
(13,36,1)
(31,29,1)
(35,30,1)
(43,11,1)
(4,7,1)
(38,23,1)
(23,17,1)
(25,35,1)
(29,41,1)
(10,39,1)
(32,25,1)
(6,39,1)
(18,31,1)
(34,15,1)
(33,12,1)
(28,8,1)
(26,9,1)
(43,35,1)
(25,38,1)
(15,22,1)
(25,39,1)
(36,10,2)
(31,29,2)
(10,39,2)
(5,10,2)
(25,39,2)
(25,35,2)
(43,35,2)
(39,28,2)
(23,10,2)
(17,39,2)
(34,15,2)
(28,0,2)
(27,10,2)
(25,10,2)
(13,10,2)
(38,10,2)
(32,10,2)
(17,10,2)
(17,35,2)
-----------------------------------
(0,CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memmove_67_structType myStruct)
(1,source)
(2,source)
(3,RET)
(4,100)
(5,dest[data] = \\\'\\\\0\\\')
(6,dest)
(7,\\\'A\\\')
(8,structFirst)
(9,data)
(10,data < 100)
(11,dest)
(12,data)
(13,data)
(14,)
(15,100-1)
(16,source[100-1] = \\\'\\\\0\\\')
(17,memmove(dest, source, data)
(18,\\\'\\\\0\\\')
(19,100)
(20,if (data < 100)
(21,)
(22,1)
(23,dest)
(24,)
(25,dest[data])
(26,100)
(27,dest)
(28,myStruct.structFirst)
(29,100-1)
(30,"")
(31,source[100-1])
(32,\\\'\\\\0\\\')
(33,myStruct)
(34,memset(source, \\\'A\\\', 100-1)
(35,dest[100] = "")
(36,source)
(37,dest)
(38,data)
(39,data = myStruct.structFirst)
(40,data)
(41,1)
(42,source)
(43,printLine(dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^