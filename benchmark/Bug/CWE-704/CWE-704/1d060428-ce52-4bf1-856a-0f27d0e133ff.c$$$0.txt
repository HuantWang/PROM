-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_04_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
26,27
28,29
28,30
28,31
28,32
28,33
28,34
29,30
30,31
30,32
32,33
32,34
34,35
36,37
37,38
37,39
39,40
39,41
39,42
41,42
43,44
45,46
46,47
46,48
46,49
46,50
47,48
49,50
52,53
52,54
55,56
56,57
56,58
57,58
57,59
58,59
60,61
60,62
64,65
64,66
65,66
65,67
66,67
69,70
69,71
70,71
71,72
71,73
71,74
71,75
72,73
74,75
76,77
78,79
80,81
81,82
81,83
82,83
82,84
83,84
85,86
88,89
89,90
89,91
90,91
92,93
-----nextToken-----
2,4,8,10,14,16,19,24,27,31,33,35,38,40,42,44,48,50,51,53,54,59,61,62,63,67,68,73,75,77,79,84,86,87,91,93
-----computeFrom-----
12,13
12,14
22,23
22,24
52,53
52,54
56,57
56,58
60,61
60,62
65,66
65,67
81,82
81,83
-----guardedBy-----
67,86
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_04_bad(){    int data;    /* Initialize data */    data = -1;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_04_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_04_bad
{    int data;    /* Initialize data */    data = -1;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(24,25,0)
(18,14,0)
(4,14,0)
(2,40,0)
(28,3,0)
(38,25,0)
(21,26,0)
(10,3,0)
(28,25,0)
(3,22,0)
(23,12,0)
(26,14,0)
(26,40,0)
(4,11,0)
(1,11,0)
(42,14,0)
(13,11,0)
(8,3,0)
(5,23,0)
(13,40,0)
(47,14,0)
(12,23,0)
(4,40,0)
(25,28,0)
(40,2,0)
(6,12,0)
(4,32,0)
(40,22,0)
(26,20,0)
(47,3,0)
(7,13,0)
(34,40,0)
(46,4,0)
(0,26,0)
(43,28,0)
(19,26,0)
(33,3,0)
(23,33,0)
(39,22,0)
(14,3,0)
(35,28,0)
(11,1,0)
(31,13,0)
(32,20,0)
(11,30,0)
(26,11,0)
(37,3,0)
(44,33,0)
(17,32,0)
(29,47,0)
(9,4,0)
(16,22,0)
(15,12,0)
(27,11,0)
(41,2,0)
(15,6,1)
(32,17,1)
(26,14,1)
(44,23,1)
(4,9,1)
(26,40,1)
(43,35,1)
(7,33,1)
(2,41,1)
(46,26,1)
(4,11,1)
(45,47,1)
(1,27,1)
(9,46,1)
(36,40,1)
(21,19,1)
(47,29,1)
(13,40,1)
(4,14,1)
(13,31,1)
(23,12,1)
(29,13,1)
(29,32,1)
(0,21,1)
(14,42,1)
(13,11,1)
(24,38,1)
(28,25,1)
(47,14,1)
(18,36,1)
(38,43,1)
(27,36,1)
(4,40,1)
(42,18,1)
(35,14,1)
(6,5,1)
(5,28,1)
(18,11,1)
(19,13,1)
(17,4,1)
(25,24,1)
(11,1,1)
(26,11,1)
(41,34,1)
(26,0,1)
(31,7,1)
(12,15,1)
(33,44,1)
(40,2,1)
(23,12,2)
(4,14,2)
(32,13,2)
(4,40,2)
(26,40,2)
(40,2,2)
(4,13,2)
(27,36,2)
(26,14,2)
(28,25,2)
(26,11,2)
(0,13,2)
(17,13,2)
(13,40,2)
(11,1,2)
(19,13,2)
(11,36,2)
(13,11,2)
(4,11,2)
(21,13,2)
(26,13,2)
(46,13,2)
(9,13,2)
(1,36,2)
(47,14,2)
-----------------------------------
(0,data)
(1,RAND32()
(2,-1)
(3,)
(4,dest[data])
(5,source)
(6,100)
(7,data)
(8,if (data < 100)
(9,data)
(10,source)
(11,data = RAND32()
(12,100-1)
(13,data < 100)
(14,dest[100] = "")
(15,1)
(16,if(STATIC_CONST_TRUE)
(17,\\\'\\\\0\\\')
(18,dest)
(19,dest)
(20,)
(21,source)
(22,)
(23,source[100-1])
(24,1)
(25,100-1)
(26,memmove(dest, source, data)
(27,data)
(28,memset(source, \\\'A\\\', 100-1)
(29,dest)
(30,)
(31,100)
(32,dest[data] = \\\'\\\\0\\\')
(33,source[100-1] = \\\'\\\\0\\\')
(34,data)
(35,source)
(36,STATIC_CONST_TRUE)
(37,dest)
(38,100)
(39,data)
(40,data = -1)
(41,1)
(42,"")
(43,\\\'A\\\')
(44,\\\'\\\\0\\\')
(45,RET)
(46,dest)
(47,printLine(dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^