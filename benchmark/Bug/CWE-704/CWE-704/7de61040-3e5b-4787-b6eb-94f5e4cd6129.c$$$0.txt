-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_05_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(staticTrue)
    {
        /* FLAW: Use a random value that could be less than 0 */
        data = (short)RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
28,29
29,30
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,15,18,23,26,27,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
21,22
21,23
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_05_bad(){    short data;    /* Initialize data */    data = 0;    if(staticTrue)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__rand_strncpy_05_bad()
CWE194_Unexpected_Sign_Extension__rand_strncpy_05_bad
{    short data;    /* Initialize data */    data = 0;    if(staticTrue)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticTrue)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }
staticTrue
staticTrue
{        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(16,37,0)
(37,24,0)
(31,12,0)
(17,34,0)
(28,18,0)
(12,31,0)
(29,26,0)
(1,34,0)
(18,28,0)
(30,42,0)
(37,25,0)
(22,36,0)
(22,25,0)
(31,25,0)
(13,9,0)
(25,31,0)
(14,8,0)
(2,28,0)
(5,34,0)
(31,27,0)
(26,34,0)
(37,8,0)
(27,31,0)
(7,48,0)
(22,8,0)
(23,46,0)
(0,1,0)
(40,28,0)
(22,48,0)
(32,34,0)
(42,48,0)
(15,42,0)
(3,48,0)
(45,9,0)
(36,24,0)
(1,46,0)
(38,1,0)
(6,22,0)
(25,39,0)
(10,25,0)
(44,46,0)
(8,34,0)
(35,18,0)
(46,1,0)
(20,34,0)
(43,32,0)
(42,25,0)
(48,9,0)
(18,26,0)
(19,36,0)
(4,8,0)
(37,48,0)
(33,22,0)
(32,8,0)
(34,9,0)
(11,37,0)
(47,37,0)
(43,36,1)
(48,3,1)
(46,23,1)
(8,14,1)
(16,11,1)
(12,10,1)
(15,26,1)
(42,25,1)
(28,40,1)
(22,6,1)
(42,30,1)
(21,32,1)
(31,12,1)
(31,27,1)
(32,8,1)
(36,19,1)
(22,48,1)
(22,8,1)
(6,33,1)
(3,7,1)
(14,4,1)
(19,22,1)
(2,35,1)
(30,15,1)
(38,0,1)
(41,48,1)
(26,29,1)
(1,46,1)
(37,25,1)
(0,8,1)
(37,8,1)
(44,38,1)
(40,2,1)
(4,41,1)
(35,1,1)
(43,42,1)
(4,25,1)
(32,43,1)
(37,48,1)
(37,16,1)
(33,37,1)
(22,25,1)
(47,42,1)
(18,28,1)
(25,31,1)
(23,44,1)
(10,41,1)
(11,47,1)
(42,48,1)
(29,18,1)
(11,42,2)
(22,25,2)
(37,42,2)
(22,48,2)
(37,25,2)
(10,41,2)
(1,46,2)
(16,42,2)
(22,8,2)
(31,41,2)
(37,8,2)
(42,25,2)
(25,31,2)
(31,27,2)
(37,48,2)
(31,12,2)
(25,41,2)
(42,48,2)
(22,42,2)
(36,42,2)
(19,42,2)
(33,42,2)
(6,42,2)
(18,28,2)
(32,8,2)
(12,41,2)
(47,42,2)
-----------------------------------
(0,source)
(1,memset(source, \\\'A\\\', 100-1)
(2,100)
(3,0)
(4,dest)
(5,if (data < 100)
(6,data)
(7,data)
(8,dest[100] = "")
(9,)
(10,data)
(11,source)
(12,RAND32()
(13,data)
(14,"")
(15,data)
(16,data)
(17,dest)
(18,source[100-1])
(19,\\\'\\\\0\\\')
(20,source)
(21,RET)
(22,dest[data])
(23,1)
(24,)
(25,data = (short)
(26,source[100-1] = \\\'\\\\0\\\')
(27,short)
(28,100-1)
(29,\\\'\\\\0\\\')
(30,100)
(31,(short)
(32,printLine(dest)
(33,dest)
(34,)
(35,source)
(36,dest[data] = \\\'\\\\0\\\')
(37,strncpy(dest, source, data)
(38,\\\'A\\\')
(39,)
(40,1)
(41,staticTrue)
(42,data < 100)
(43,dest)
(44,100)
(45,if(staticTrue)
(46,100-1)
(47,dest)
(48,data = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^