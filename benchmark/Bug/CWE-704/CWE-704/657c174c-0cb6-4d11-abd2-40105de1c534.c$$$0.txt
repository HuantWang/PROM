-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_06_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(STATIC_CONST_FIVE==5)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
23,25
24,25
25,26
25,27
27,28
27,29
27,30
29,30
30,31
32,33
34,35
34,36
34,37
35,36
35,37
36,37
36,38
36,39
36,40
37,38
39,40
41,42
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
63,64
63,65
64,65
65,66
65,67
67,68
67,69
69,70
70,71
70,72
71,72
71,73
74,75
76,77
77,78
77,79
78,79
80,81
-----nextToken-----
2,4,8,10,14,16,20,21,26,28,31,33,38,40,42,44,46,51,54,56,61,62,66,68,72,73,75,79,81
-----computeFrom-----
12,13
12,14
18,19
18,20
35,36
35,37
49,50
49,51
-----guardedBy-----
40,56
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_06_bad(){    int data;    /* Initialize data */    data = -1;    if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_char_06_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_char_06_bad
{    int data;    /* Initialize data */    data = -1;    if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(STATIC_CONST_FIVE==5)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(37,3,0)
(29,0,0)
(0,22,0)
(20,12,0)
(11,30,0)
(40,2,0)
(36,19,0)
(10,11,0)
(34,6,0)
(32,37,0)
(19,35,0)
(15,25,0)
(40,34,0)
(18,24,0)
(28,14,0)
(25,12,0)
(40,0,0)
(27,24,0)
(25,34,0)
(22,24,0)
(12,19,0)
(40,30,0)
(1,38,0)
(16,30,0)
(9,38,0)
(29,22,0)
(5,19,0)
(4,38,0)
(8,9,0)
(7,22,0)
(0,40,0)
(13,14,0)
(21,12,0)
(31,38,0)
(34,25,0)
(26,29,0)
(30,11,0)
(2,40,0)
(38,9,0)
(17,0,0)
(38,12,0)
(33,34,0)
(23,40,0)
(30,24,0)
(37,32,1)
(1,31,1)
(29,26,1)
(40,2,1)
(8,38,1)
(38,12,1)
(40,30,1)
(32,9,1)
(33,9,1)
(15,33,1)
(14,13,1)
(20,21,1)
(34,25,1)
(30,11,1)
(10,16,1)
(0,40,1)
(26,0,1)
(17,37,1)
(9,38,1)
(17,34,1)
(31,12,1)
(25,12,1)
(12,20,1)
(40,23,1)
(23,17,1)
(13,28,1)
(4,1,1)
(9,8,1)
(40,34,1)
(38,4,1)
(25,15,1)
(17,14,1)
(39,29,1)
(11,10,1)
(29,0,1)
(28,30,1)
(21,14,1)
(20,14,2)
(34,25,2)
(33,9,2)
(4,14,2)
(29,0,2)
(9,38,2)
(8,14,2)
(38,12,2)
(40,30,2)
(40,2,2)
(25,9,2)
(37,9,2)
(12,14,2)
(9,14,2)
(21,14,2)
(31,14,2)
(40,34,2)
(1,14,2)
(34,9,2)
(0,40,2)
(25,12,2)
(38,14,2)
(32,9,2)
(30,11,2)
(15,9,2)
-----------------------------------
(0,charData = (char)
(1,CHAR_ARRAY_SIZE)
(2,char)
(3,)
(4,stdin)
(5,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(6,)
(7,charData)
(8,NULL)
(9,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(10,1)
(11,-1)
(12,inputBuffer[CHAR_ARRAY_SIZE] = "")
(13,5)
(14,STATIC_CONST_FIVE==5)
(15,inputBuffer)
(16,data)
(17,charData)
(18,data)
(19,)
(20,"")
(21,inputBuffer)
(22,)
(23,data)
(24,)
(25,atoi(inputBuffer)
(26,charData)
(27,if(STATIC_CONST_FIVE==5)
(28,STATIC_CONST_FIVE)
(29,printHexCharLine(charData)
(30,data = -1)
(31,inputBuffer)
(32,"fgets()
(33,data)
(34,data = atoi(inputBuffer)
(35,)
(36,inputBuffer)
(37,printLine("fgets()
(38,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(39,RET)
(40,(char)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^