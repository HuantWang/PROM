-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fscanf_to_short_34_bad()
{
    int data;
    CWE197_Numeric_Truncation_Error__int_fscanf_to_short_34_unionType myUnion;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Read data from the console using fscanf() */
    fscanf(stdin, "%d", &data);
    myUnion.unionFirst = data;
    {
        int data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
            short shortData = (short)data;
            printShortLine(shortData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
23,24
24,25
24,26
24,27
24,28
25,26
27,28
30,31
31,32
33,34
34,35
34,36
35,36
35,37
36,37
39,40
41,42
41,43
42,43
43,44
43,45
45,46
45,47
47,48
48,49
48,50
49,50
52,53
52,54
53,54
54,55
54,56
56,57
56,58
58,59
59,60
59,61
60,61
60,62
63,64
65,66
66,67
66,68
67,68
69,70
-----nextToken-----
2,4,8,10,14,16,20,22,26,28,29,32,37,38,40,44,46,50,51,55,57,61,62,64,68,70
-----computeFrom-----
18,19
18,20
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fscanf_to_short_34_bad(){    int data;    CWE197_Numeric_Truncation_Error__int_fscanf_to_short_34_unionType myUnion;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_fscanf_to_short_34_bad()
CWE197_Numeric_Truncation_Error__int_fscanf_to_short_34_bad
{    int data;    CWE197_Numeric_Truncation_Error__int_fscanf_to_short_34_unionType myUnion;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
int data;
int data;
int
data
data
CWE197_Numeric_Truncation_Error__int_fscanf_to_short_34_unionType myUnion;
CWE197_Numeric_Truncation_Error__int_fscanf_to_short_34_unionType myUnion;
CWE197_Numeric_Truncation_Error__int_fscanf_to_short_34_unionType
CWE197_Numeric_Truncation_Error__int_fscanf_to_short_34_unionType
myUnion
myUnion
data = -1;
data = -1
data
data
-1
1
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }
int data = myUnion.unionSecond;
int data = myUnion.unionSecond;
int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(32,11,0)
(30,16,0)
(14,17,0)
(13,14,0)
(27,3,0)
(7,33,0)
(22,21,0)
(3,32,0)
(16,14,0)
(29,32,0)
(10,27,0)
(19,21,0)
(20,33,0)
(12,18,0)
(18,0,0)
(28,31,0)
(14,16,0)
(5,0,0)
(23,17,0)
(11,32,0)
(1,3,0)
(6,24,0)
(32,3,0)
(25,18,0)
(0,33,0)
(31,7,0)
(21,19,0)
(27,31,0)
(0,17,0)
(3,31,0)
(26,33,0)
(4,19,0)
(17,33,0)
(19,7,0)
(17,24,0)
(24,17,0)
(32,19,0)
(9,21,0)
(8,16,0)
(16,33,0)
(2,7,0)
(15,27,1)
(24,6,1)
(17,24,1)
(12,16,1)
(16,14,1)
(5,18,1)
(4,0,1)
(10,3,1)
(14,17,1)
(6,23,1)
(32,19,1)
(29,1,1)
(21,9,1)
(27,10,1)
(14,13,1)
(3,32,1)
(19,21,1)
(0,17,1)
(13,30,1)
(22,4,1)
(9,22,1)
(27,3,1)
(18,25,1)
(32,11,1)
(25,12,1)
(30,8,1)
(1,19,1)
(32,29,1)
(0,5,1)
(8,17,1)
(17,24,2)
(27,3,2)
(3,32,2)
(32,19,2)
(19,21,2)
(0,17,2)
(14,17,2)
(16,14,2)
(32,11,2)
-----------------------------------
(0,myUnion.unionFirst = data)
(1,shortData)
(2,data)
(3,shortData = (short)
(4,data)
(5,data)
(6,1)
(7,)
(8,stdin)
(9,unionSecond)
(10,shortData)
(11,short)
(12,myUnion)
(13,data)
(14,&data)
(15,RET)
(16,fscanf(stdin, "%d", &data)
(17,data = -1)
(18,myUnion.unionFirst)
(19,data = myUnion.unionSecond)
(20,data)
(21,myUnion.unionSecond)
(22,myUnion)
(23,data)
(24,-1)
(25,unionFirst)
(26,myUnion)
(27,printShortLine(shortData)
(28,shortData)
(29,data)
(30,"%d")
(31,)
(32,(short)
(33,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^