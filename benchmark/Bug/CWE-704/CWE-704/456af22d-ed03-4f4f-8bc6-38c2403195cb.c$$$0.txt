-----label-----
1
-----code-----
void CWE196_Unsigned_to_Signed_Conversion_Error__basic_10_bad()
{
    if(globalTrue)
    {
        {
            unsigned intUnsigned;
            int intSigned;
            intUnsigned = rand();
            if (rand() % 2 == 0)
            {
                intUnsigned = UINT_MAX - intUnsigned;
            }
            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */
            intSigned = intUnsigned;
            printIntLine(intSigned);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
11,12
12,13
12,14
14,15
16,17
17,18
17,19
19,20
21,22
22,23
22,24
23,24
25,26
26,27
28,29
28,30
29,30
29,31
30,31
30,32
31,32
32,33
36,37
37,38
38,39
38,40
39,40
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,13,15,18,20,24,27,33,34,35,40,43,45,49,51,55,57
-----computeFrom-----
22,23
22,24
29,30
29,31
30,31
30,32
38,39
38,40
41,42
41,43
47,48
47,49
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE196_Unsigned_to_Signed_Conversion_Error__basic_10_bad(){    if(globalTrue)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }}
void
CWE196_Unsigned_to_Signed_Conversion_Error__basic_10_bad()
CWE196_Unsigned_to_Signed_Conversion_Error__basic_10_bad
{    if(globalTrue)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }}
if(globalTrue)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }
globalTrue
globalTrue
{        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }
{            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }
unsigned intUnsigned;
unsigned intUnsigned;
unsigned
intUnsigned
intUnsigned
int intSigned;
int intSigned;
int
intSigned
intSigned
intUnsigned = rand();
intUnsigned = rand()
intUnsigned
intUnsigned
rand()
rand
rand
if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }
rand() % 2 == 0
rand() % 2
rand()
rand
rand
2
0
{                intUnsigned = UINT_MAX - intUnsigned;            }
intUnsigned = UINT_MAX - intUnsigned;
intUnsigned = UINT_MAX - intUnsigned
intUnsigned
intUnsigned
UINT_MAX - intUnsigned
UINT_MAX
UINT_MAX
intUnsigned
intUnsigned
intSigned = intUnsigned;
intSigned = intUnsigned
intSigned
intSigned
intUnsigned
intUnsigned
printIntLine(intSigned);
printIntLine(intSigned)
printIntLine
printIntLine
intSigned
intSigned
-----joern-----
(3,17,0)
(10,21,0)
(19,21,0)
(6,24,0)
(17,14,0)
(14,25,0)
(27,24,0)
(14,17,0)
(11,20,0)
(10,20,0)
(20,21,0)
(8,24,0)
(18,6,0)
(26,13,0)
(20,13,0)
(13,21,0)
(22,10,0)
(9,17,0)
(15,20,0)
(23,21,0)
(7,16,0)
(4,21,0)
(0,14,0)
(20,14,0)
(12,13,0)
(21,5,0)
(24,6,0)
(17,13,0)
(24,27,0)
(13,12,0)
(11,6,1)
(11,14,1)
(20,13,1)
(9,0,1)
(8,27,1)
(0,6,1)
(20,14,1)
(10,20,1)
(3,9,1)
(17,13,1)
(2,1,1)
(6,18,1)
(12,26,1)
(26,1,1)
(20,15,1)
(15,11,1)
(17,3,1)
(14,17,1)
(18,24,1)
(13,12,1)
(24,27,1)
(6,24,1)
(2,10,1)
(10,22,1)
(27,13,1)
(24,8,1)
(22,20,1)
(24,1,2)
(10,20,2)
(0,6,2)
(11,1,2)
(9,6,2)
(27,1,2)
(10,1,2)
(24,27,2)
(3,6,2)
(14,6,2)
(22,1,2)
(20,1,2)
(20,14,2)
(17,13,2)
(13,1,2)
(18,1,2)
(8,1,2)
(14,17,2)
(13,12,2)
(6,24,2)
(26,1,2)
(12,1,2)
(17,6,2)
(20,13,2)
(15,1,2)
(6,1,2)
-----------------------------------
(0,intUnsigned)
(1,globalTrue)
(2,RET)
(3,intUnsigned)
(4,intUnsigned)
(5,)
(6,rand()
(7,if(globalTrue)
(8,2)
(9,UINT_MAX)
(10,printIntLine(intSigned)
(11,intSigned)
(12,rand()
(13,intUnsigned = rand()
(14,intUnsigned = UINT_MAX - intUnsigned)
(15,intUnsigned)
(16,)
(17,UINT_MAX - intUnsigned)
(18,0)
(19,intSigned)
(20,intSigned = intUnsigned)
(21,)
(22,intSigned)
(23,if (rand()
(24,rand()
(25,)
(26,intUnsigned)
(27,rand()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^