-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_10_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(globalTrue)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
26,29
26,30
26,31
26,32
27,28
28,29
28,30
30,31
30,32
32,33
34,35
35,36
35,37
37,38
37,39
37,40
39,40
41,42
43,44
44,45
44,46
44,47
44,48
45,46
47,48
50,51
50,52
53,54
54,55
54,56
55,56
55,57
56,57
58,59
58,60
62,63
62,64
63,64
63,65
64,65
67,68
67,69
68,69
69,70
69,71
69,72
69,73
70,71
72,73
74,75
76,77
78,79
79,80
79,81
80,81
80,82
81,82
83,84
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,14,15,18,23,25,29,31,33,36,38,40,42,46,48,49,51,52,57,59,60,61,65,66,71,73,75,77,82,84,85,89,91
-----computeFrom-----
12,13
12,14
21,22
21,23
50,51
50,52
54,55
54,56
58,59
58,60
63,64
63,65
79,80
79,81
-----guardedBy-----
65,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_10_bad(){    short data;    /* Initialize data */    data = 0;    if(globalTrue)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_strncpy_10_bad()
CWE194_Unexpected_Sign_Extension__negative_strncpy_10_bad
{    short data;    /* Initialize data */    data = 0;    if(globalTrue)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* FLAW: Use a negative number */        data = -1;    }
globalTrue
globalTrue
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(20,33,0)
(8,10,0)
(38,5,0)
(23,28,0)
(27,4,0)
(21,28,0)
(34,21,0)
(11,45,0)
(42,32,0)
(43,28,0)
(33,29,0)
(39,33,0)
(33,44,0)
(33,37,0)
(0,44,0)
(32,4,0)
(10,37,0)
(26,34,0)
(1,21,0)
(10,43,0)
(41,46,0)
(12,21,0)
(10,44,0)
(19,28,0)
(22,10,0)
(30,6,0)
(5,29,0)
(9,37,0)
(47,32,0)
(2,43,0)
(6,37,0)
(13,45,0)
(14,46,0)
(33,43,0)
(4,32,0)
(7,0,0)
(25,34,0)
(3,43,0)
(4,21,0)
(45,26,0)
(46,43,0)
(35,4,0)
(31,26,0)
(17,21,0)
(44,21,0)
(46,37,0)
(0,21,0)
(37,6,0)
(18,33,0)
(26,45,0)
(36,44,0)
(10,5,0)
(37,24,0)
(15,44,0)
(45,11,1)
(10,8,1)
(15,37,1)
(8,22,1)
(31,4,1)
(11,13,1)
(26,45,1)
(44,36,1)
(41,14,1)
(40,0,1)
(14,34,1)
(33,18,1)
(46,41,1)
(6,30,1)
(33,44,1)
(32,42,1)
(7,46,1)
(38,10,1)
(43,2,1)
(10,43,1)
(15,16,1)
(0,44,1)
(42,47,1)
(46,37,1)
(37,6,1)
(4,32,1)
(16,43,1)
(9,16,1)
(34,25,1)
(39,20,1)
(0,7,1)
(46,43,1)
(18,39,1)
(35,44,1)
(5,38,1)
(30,9,1)
(33,37,1)
(47,27,1)
(27,35,1)
(36,15,1)
(20,46,1)
(22,33,1)
(7,5,1)
(25,26,1)
(10,37,1)
(10,44,1)
(2,3,1)
(13,31,1)
(33,43,1)
(10,46,2)
(10,44,2)
(6,16,2)
(38,46,2)
(33,46,2)
(20,46,2)
(4,32,2)
(22,46,2)
(5,46,2)
(33,44,2)
(46,43,2)
(37,16,2)
(46,37,2)
(30,16,2)
(10,43,2)
(0,44,2)
(37,6,2)
(8,46,2)
(26,45,2)
(10,37,2)
(9,16,2)
(33,43,2)
(33,37,2)
(39,46,2)
(18,46,2)
-----------------------------------
(0,printLine(dest)
(1,if (data < 100)
(2,0)
(3,data)
(4,memset(source, \\\'A\\\', 100-1)
(5,dest[data] = \\\'\\\\0\\\')
(6,-1)
(7,dest)
(8,data)
(9,data)
(10,dest[data])
(11,1)
(12,dest)
(13,100)
(14,data)
(15,dest)
(16,globalTrue)
(17,source)
(18,data)
(19,if(globalTrue)
(20,dest)
(21,)
(22,dest)
(23,data)
(24,)
(25,\\\'\\\\0\\\')
(26,source[100-1])
(27,\\\'A\\\')
(28,)
(29,)
(30,1)
(31,source)
(32,100-1)
(33,strncpy(dest, source, data)
(34,source[100-1] = \\\'\\\\0\\\')
(35,source)
(36,"")
(37,data = -1)
(38,\\\'\\\\0\\\')
(39,source)
(40,RET)
(41,100)
(42,1)
(43,data = 0)
(44,dest[100] = "")
(45,100-1)
(46,data < 100)
(47,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^