-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_fgets_44_bad()
{
    short data;
    /* define a function pointer */
    void (*funcPtr) (short) = badSink;
    /* Initialize data */
    data = -1;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* FLAW: Use a number input from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to short */
            data = (short)atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
15,16
15,17
18,19
18,20
20,21
22,23
23,24
25,26
26,27
26,28
27,28
29,30
31,32
31,33
32,33
33,34
33,35
35,36
35,37
35,38
37,38
38,39
40,41
42,43
42,44
42,45
43,44
43,45
44,45
44,46
44,47
44,48
45,46
47,48
49,50
51,52
53,54
55,56
56,57
57,58
57,59
58,59
60,61
60,62
61,62
61,63
64,65
64,66
65,66
67,68
69,70
70,71
71,72
71,73
72,73
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,8,10,13,16,17,19,21,24,28,30,34,36,39,41,46,48,50,52,54,59,62,63,66,68,73,74,78,80
-----computeFrom-----
26,27
26,28
43,44
43,45
57,58
57,59
-----guardedBy-----
48,68
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_fgets_44_bad(){    short data;    /* define a function pointer */    void (*funcPtr) (short) = badSink;    /* Initialize data */    data = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* FLAW: Use a number input from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    /* use the function pointer */    funcPtr(data);}
void
CWE197_Numeric_Truncation_Error__short_fgets_44_bad()
CWE197_Numeric_Truncation_Error__short_fgets_44_bad
{    short data;    /* define a function pointer */    void (*funcPtr) (short) = badSink;    /* Initialize data */    data = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* FLAW: Use a number input from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    /* use the function pointer */    funcPtr(data);}
short data;
short data;
short
data
data
void (*funcPtr) (short) = badSink;
void (*funcPtr) (short) = badSink;
void
(*funcPtr) (short) = badSink
*funcPtr
*
funcPtr
short
short


= badSink
badSink
badSink
data = -1;
data = -1
data
data
-1
1
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* FLAW: Use a number input from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to short */            data = (short)atoi(inputBuffer);        }
data = (short)atoi(inputBuffer);
data = (short)atoi(inputBuffer)
data
data
(short)atoi(inputBuffer)
short
short

atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(7,24,0)
(5,27,0)
(18,5,0)
(34,8,0)
(8,34,0)
(26,34,0)
(26,27,0)
(16,28,0)
(31,10,0)
(25,26,0)
(19,27,0)
(20,3,0)
(6,13,0)
(4,10,0)
(4,14,0)
(1,6,0)
(6,12,0)
(11,13,0)
(10,13,0)
(10,4,0)
(2,8,0)
(12,6,0)
(30,12,0)
(26,7,0)
(28,22,0)
(13,5,0)
(0,27,0)
(32,13,0)
(3,27,0)
(33,6,0)
(17,34,0)
(21,7,0)
(15,6,0)
(14,4,0)
(7,4,0)
(23,3,0)
(4,7,0)
(9,5,0)
(34,27,0)
(15,33,1)
(20,23,1)
(25,7,1)
(21,12,1)
(4,14,1)
(25,28,1)
(6,13,1)
(34,8,1)
(32,34,1)
(11,32,1)
(1,13,1)
(28,16,1)
(26,34,1)
(3,20,1)
(7,4,1)
(26,7,1)
(8,2,1)
(17,3,1)
(10,31,1)
(31,21,1)
(33,1,1)
(30,6,1)
(16,12,1)
(12,6,1)
(6,15,1)
(10,13,1)
(13,11,1)
(4,10,1)
(12,30,1)
(26,25,1)
(29,26,1)
(2,17,1)
(4,12,2)
(7,4,2)
(16,12,2)
(34,8,2)
(10,12,2)
(21,12,2)
(26,34,2)
(26,7,2)
(6,13,2)
(12,6,2)
(4,14,2)
(7,12,2)
(31,12,2)
(4,10,2)
(10,13,2)
(28,12,2)
-----------------------------------
(0,funcPtr)
(1,inputBuffer)
(2,1)
(3,(*funcPtr)
(4,(short)
(5,)
(6,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(7,data = (short)
(8,-1)
(9,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(10,atoi(inputBuffer)
(11,"")
(12,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(13,inputBuffer[CHAR_ARRAY_SIZE] = "")
(14,short)
(15,stdin)
(16,"fgets()
(17,data)
(18,inputBuffer)
(19,data)
(20,badSink)
(21,data)
(22,)
(23,funcPtr)
(24,)
(25,data)
(26,funcPtr(data)
(27,)
(28,printLine("fgets()
(29,RET)
(30,NULL)
(31,inputBuffer)
(32,inputBuffer)
(33,CHAR_ARRAY_SIZE)
(34,data = -1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^