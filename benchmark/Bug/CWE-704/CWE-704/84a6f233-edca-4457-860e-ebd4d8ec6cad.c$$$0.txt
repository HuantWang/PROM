-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    data = CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61b_badSource(data);
    /* Assume we want to allocate a relatively small buffer */
    if (data < 100)
    {
        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,
         * the conversion will cause malloc() to allocate a very large amount of data or fail */
        char * dataBuffer = (char *)malloc(data);
        /* Do something with dataBuffer */
        memset(dataBuffer, 'A', data-1);
        dataBuffer[data-1] = '\0';
        printLine(dataBuffer);
        free(dataBuffer);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
22,23
24,25
26,27
26,28
27,28
27,29
28,29
31,32
31,33
31,34
31,35
31,36
32,33
33,34
33,35
35,36
35,37
35,38
38,39
39,40
39,41
40,41
40,42
42,43
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
57,58
60,61
61,62
61,63
62,63
62,64
63,64
65,66
65,67
66,67
70,71
71,72
71,73
72,73
74,75
76,77
77,78
77,79
78,79
80,81
-----nextToken-----
2,4,8,10,14,16,20,23,25,29,30,34,36,37,41,43,46,48,52,54,55,58,59,64,67,68,69,73,75,79,81
-----computeFrom-----
12,13
12,14
18,19
18,20
27,28
27,29
56,57
56,58
61,62
61,63
65,66
65,67
-----guardedBy-----
29,67
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61_bad(){    int data;    /* Initialize data */    data = -1;    data = CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61_bad
{    int data;    /* Initialize data */    data = -1;    data = CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61b_badSource(data);
data = CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61b_badSource(data)
data
data
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61b_badSource(data)
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61b_badSource
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61b_badSource
data
data
if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
data < 100
data
data
100
{        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
char * dataBuffer = (char *)malloc(data);
char * dataBuffer = (char *)malloc(data);
char
* dataBuffer = (char *)malloc(data)
*
dataBuffer
= (char *)malloc(data)
(char *)malloc(data)
char *
char
*
*
malloc(data)
malloc
malloc
data
data
memset(dataBuffer, 'A', data-1);
memset(dataBuffer, 'A', data-1)
memset
memset
dataBuffer
dataBuffer
'A'
data-1
data
data
1
dataBuffer[data-1] = '\0';
dataBuffer[data-1] = '\0'
dataBuffer[data-1]
dataBuffer
dataBuffer
data-1
data
data
1
'\0'
printLine(dataBuffer);
printLine(dataBuffer)
printLine
printLine
dataBuffer
dataBuffer
free(dataBuffer);
free(dataBuffer)
free
free
dataBuffer
dataBuffer
-----joern-----
(27,19,0)
(40,37,0)
(3,22,0)
(27,40,0)
(7,40,0)
(12,3,0)
(29,39,0)
(15,33,0)
(38,37,0)
(14,40,0)
(33,22,0)
(39,21,0)
(25,6,0)
(14,2,0)
(2,14,0)
(31,23,0)
(40,6,0)
(17,14,0)
(27,3,0)
(6,26,0)
(24,2,0)
(39,29,0)
(1,20,0)
(41,21,0)
(35,14,0)
(18,38,0)
(9,33,0)
(34,25,0)
(32,27,0)
(16,37,0)
(6,40,0)
(14,37,0)
(20,22,0)
(26,6,0)
(38,40,0)
(10,19,0)
(8,39,0)
(13,29,0)
(19,37,0)
(3,27,0)
(36,21,0)
(2,22,0)
(22,20,0)
(4,3,0)
(22,21,0)
(23,40,0)
(6,25,0)
(0,22,0)
(20,39,0)
(23,37,0)
(25,22,0)
(5,2,0)
(0,39,1)
(40,6,1)
(18,23,1)
(15,22,1)
(34,7,1)
(27,3,1)
(38,40,1)
(1,0,1)
(22,20,1)
(10,27,1)
(2,22,1)
(30,38,1)
(32,14,1)
(29,13,1)
(33,9,1)
(35,40,1)
(23,40,1)
(38,18,1)
(14,40,1)
(25,22,1)
(6,25,1)
(3,22,1)
(17,35,1)
(23,31,1)
(19,10,1)
(2,5,1)
(31,19,1)
(39,29,1)
(3,12,1)
(13,8,1)
(7,33,1)
(6,26,1)
(24,17,1)
(4,32,1)
(9,15,1)
(20,1,1)
(27,40,1)
(20,39,1)
(30,33,1)
(14,2,1)
(12,4,1)
(5,24,1)
(33,22,1)
(25,34,1)
(35,33,2)
(33,22,2)
(19,33,2)
(27,3,2)
(23,33,2)
(3,22,2)
(2,22,2)
(6,25,2)
(27,40,2)
(22,20,2)
(14,2,2)
(31,33,2)
(4,33,2)
(5,33,2)
(20,39,2)
(38,33,2)
(38,40,2)
(27,33,2)
(40,6,2)
(23,40,2)
(6,26,2)
(34,33,2)
(32,33,2)
(18,33,2)
(12,33,2)
(25,33,2)
(2,33,2)
(39,29,2)
(14,33,2)
(40,33,2)
(25,22,2)
(6,33,2)
(10,33,2)
(7,33,2)
(14,40,2)
(3,33,2)
(24,33,2)
(17,33,2)
-----------------------------------
(0,data)
(1,data)
(2,data-1)
(3,data-1)
(4,data)
(5,1)
(6,(char *)
(7,dataBuffer)
(8,data)
(9,100)
(10,\'\\\\0\')
(11,'\\\\0')
(12,1)
(13,1)
(14,memset(dataBuffer, 'A', data-1)
(15,data)
(16,dataBuffer)
(17,'A')
(18,dataBuffer)
(19,dataBuffer[data-1] = '\\\\0')
(20,CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61b_badSource(data)
(21,)
(22,data = CWE195_Signed_to_Unsigned_Conversion_Error__fgets_malloc_61b_badSource(data)
(23,printLine(dataBuffer)
(24,data)
(25,malloc(data)
(26,char *)
(27,dataBuffer[data-1])
(28,memset(dataBuffer, \'A\', data-1)
(29,-1)
(30,RET)
(31,dataBuffer)
(32,dataBuffer)
(33,data < 100)
(34,data)
(35,dataBuffer)
(36,if (data < 100)
(37,)
(38,free(dataBuffer)
(39,data = -1)
(40,* dataBuffer = (char *)
(41,data)
(42,\'A\')
(43,dataBuffer[data-1] = \'\\\\0\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^