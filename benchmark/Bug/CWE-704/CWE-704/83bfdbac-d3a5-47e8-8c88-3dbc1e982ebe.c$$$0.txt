-----label-----
1
-----code-----
static short badSource(short data)
{
    if(badStatic)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
10,12
11,12
13,14
14,15
15,16
15,17
16,17
18,19
20,21
21,22
-----nextToken-----
2,4,6,8,12,17,19,22
-----computeFrom-----
15,16
15,17
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static short badSource(short data){    if(badStatic)    {        /* FLAW: Use a negative number */        data = -1;    }    return data;}
static short
badSource(short data)
badSource
short data
short
data
data
{    if(badStatic)    {        /* FLAW: Use a negative number */        data = -1;    }    return data;}
if(badStatic)    {        /* FLAW: Use a negative number */        data = -1;    }
badStatic
badStatic
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
return data;
data
data
-----joern-----
(0,11,0)
(0,7,0)
(8,7,0)
(8,0,0)
(8,1,0)
(2,3,0)
(5,0,0)
(9,8,0)
(0,3,0)
(10,1,0)
(6,8,0)
(3,0,0)
(2,5,1)
(0,3,1)
(8,0,1)
(0,7,1)
(6,8,1)
(8,7,1)
(8,9,1)
(3,2,1)
(9,0,1)
(9,4,1)
(5,4,1)
(0,7,2)
(0,3,2)
(8,0,2)
(8,7,2)
(6,8,2)
(5,4,2)
(0,4,2)
(2,4,2)
(3,4,2)
-----------------------------------
(0,data = -1)
(1,)
(2,1)
(3,-1)
(4,badStatic)
(5,data)
(6,RET)
(7,short data)
(8,return data;)
(9,data)
(10,if(badStatic)
(11,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^