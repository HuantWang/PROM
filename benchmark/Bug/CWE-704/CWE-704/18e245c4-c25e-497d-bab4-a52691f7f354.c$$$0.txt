-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = -1;
    {
        int data = *dataPtr1;
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
            short shortData = (short)data;
            printShortLine(shortData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
35,36
37,38
37,39
37,40
38,39
39,40
39,41
41,42
41,43
43,44
44,45
45,46
47,48
47,49
48,49
49,50
49,51
51,52
51,53
51,54
53,54
54,55
56,57
58,59
58,60
58,61
59,60
59,61
60,61
60,62
60,63
60,64
61,62
63,64
65,66
67,68
69,70
71,72
72,73
73,74
73,75
74,75
76,77
76,78
77,78
79,80
81,82
82,83
83,84
83,85
84,85
87,88
88,89
88,90
89,90
90,91
92,93
94,95
94,96
95,96
96,97
96,98
98,99
98,100
100,101
101,102
102,103
104,105
104,106
105,106
106,107
106,108
108,109
108,110
110,111
111,112
111,113
112,113
112,114
115,116
117,118
118,119
118,120
119,120
121,122
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,36,40,42,46,50,52,55,57,62,64,66,68,70,75,78,80,85,86,91,93,97,99,103,107,109,113,114,116,120,122
-----computeFrom-----
32,33
32,34
59,60
59,61
73,74
73,75
88,89
88,90
-----guardedBy-----
64,80
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_short_32_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_short_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = -1;
data = -1
data
data
-1
1
{        int data = *dataPtr1;        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(14,38,0)
(48,14,0)
(38,24,0)
(17,61,0)
(38,14,0)
(61,17,0)
(20,7,0)
(30,9,0)
(13,28,0)
(11,28,0)
(28,41,0)
(16,23,0)
(31,1,0)
(12,11,0)
(5,32,0)
(7,49,0)
(50,17,0)
(54,7,0)
(27,38,0)
(56,9,0)
(60,53,0)
(53,24,0)
(15,41,0)
(40,36,0)
(50,36,0)
(18,19,0)
(1,28,0)
(22,61,0)
(3,32,0)
(42,19,0)
(36,50,0)
(9,15,0)
(52,24,0)
(47,53,0)
(49,60,0)
(25,24,0)
(44,45,0)
(32,45,0)
(9,1,0)
(4,17,0)
(36,53,0)
(1,10,0)
(19,24,0)
(28,11,0)
(30,15,0)
(1,9,0)
(2,60,0)
(34,49,0)
(58,57,0)
(43,5,0)
(45,32,0)
(39,21,0)
(33,41,0)
(59,50,0)
(23,37,0)
(57,5,0)
(5,53,0)
(5,36,0)
(0,15,0)
(51,42,0)
(41,24,0)
(46,24,0)
(8,49,0)
(21,7,0)
(19,42,0)
(32,29,0)
(26,7,0)
(10,1,0)
(45,49,0)
(7,21,0)
(11,38,0)
(17,24,0)
(35,30,0)
(6,60,0)
(57,17,0)
(59,40,1)
(1,28,1)
(43,57,1)
(32,45,1)
(1,31,1)
(21,39,1)
(27,17,1)
(61,22,1)
(50,17,1)
(51,18,1)
(17,61,1)
(3,21,1)
(42,51,1)
(58,23,1)
(58,32,1)
(54,20,1)
(57,17,1)
(39,7,1)
(50,59,1)
(49,8,1)
(1,10,1)
(38,14,1)
(5,32,1)
(22,4,1)
(11,12,1)
(5,43,1)
(57,58,1)
(55,30,1)
(14,48,1)
(8,34,1)
(30,9,1)
(7,49,1)
(7,54,1)
(11,38,1)
(34,36,1)
(26,49,1)
(31,56,1)
(19,42,1)
(12,13,1)
(40,19,1)
(18,38,1)
(21,7,1)
(48,27,1)
(45,44,1)
(30,35,1)
(9,1,1)
(5,36,1)
(35,9,1)
(36,50,1)
(23,16,1)
(20,26,1)
(28,11,1)
(13,5,1)
(45,49,1)
(56,28,1)
(16,21,1)
(44,3,1)
(1,10,2)
(44,21,2)
(5,36,2)
(9,1,2)
(16,21,2)
(3,21,2)
(50,17,2)
(30,9,2)
(11,38,2)
(45,21,2)
(38,14,2)
(5,32,2)
(19,42,2)
(32,21,2)
(28,11,2)
(1,28,2)
(7,49,2)
(17,61,2)
(23,21,2)
(32,45,2)
(36,50,2)
(21,7,2)
(45,49,2)
(57,17,2)
-----------------------------------
(0,shortData)
(1,(short)
(2,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(3,data)
(4,dataPtr1)
(5,*dataPtr1 = data)
(6,inputBuffer)
(7,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(8,"")
(9,shortData = (short)
(10,short)
(11,*dataPtr2)
(12,dataPtr2)
(13,data)
(14,&data)
(15,)
(16,"fgets()
(17,*dataPtr1 = &data)
(18,data)
(19,data = -1)
(20,CHAR_ARRAY_SIZE)
(21,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(22,data)
(23,printLine("fgets()
(24,)
(25,data)
(26,inputBuffer)
(27,dataPtr2)
(28,data = *dataPtr2)
(29,)
(30,printShortLine(shortData)
(31,data)
(32,data = atoi(inputBuffer)
(33,data)
(34,inputBuffer)
(35,shortData)
(36,data = *dataPtr1)
(37,)
(38,*dataPtr2 = &data)
(39,NULL)
(40,data)
(41,)
(42,-1)
(43,data)
(44,inputBuffer)
(45,atoi(inputBuffer)
(46,dataPtr1)
(47,data)
(48,data)
(49,inputBuffer[CHAR_ARRAY_SIZE] = "")
(50,*dataPtr1)
(51,1)
(52,dataPtr2)
(53,)
(54,stdin)
(55,RET)
(56,shortData)
(57,*dataPtr1)
(58,dataPtr1)
(59,dataPtr1)
(60,)
(61,&data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^