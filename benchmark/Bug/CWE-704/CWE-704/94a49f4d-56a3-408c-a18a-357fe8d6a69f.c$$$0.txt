-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    data = CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61b_badSource(data);
    /* Assume we want to allocate a relatively small buffer */
    if (data < 100)
    {
        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,
         * the conversion will cause malloc() to allocate a very large amount of data or fail */
        char * dataBuffer = (char *)malloc(data);
        /* Do something with dataBuffer */
        memset(dataBuffer, 'A', data-1);
        dataBuffer[data-1] = '\0';
        printLine(dataBuffer);
        free(dataBuffer);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
22,23
24,25
26,27
26,28
27,28
27,29
28,29
31,32
31,33
31,34
31,35
31,36
32,33
33,34
33,35
35,36
35,37
35,38
38,39
39,40
39,41
40,41
40,42
42,43
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
57,58
60,61
61,62
61,63
62,63
62,64
63,64
65,66
65,67
66,67
70,71
71,72
71,73
72,73
74,75
76,77
77,78
77,79
78,79
80,81
-----nextToken-----
2,4,8,10,14,16,20,23,25,29,30,34,36,37,41,43,46,48,52,54,55,58,59,64,67,68,69,73,75,79,81
-----computeFrom-----
12,13
12,14
18,19
18,20
27,28
27,29
56,57
56,58
61,62
61,63
65,66
65,67
-----guardedBy-----
29,67
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61_bad(){    int data;    /* Initialize data */    data = -1;    data = CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61_bad
{    int data;    /* Initialize data */    data = -1;    data = CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61b_badSource(data);
data = CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61b_badSource(data)
data
data
CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61b_badSource(data)
CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61b_badSource
CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61b_badSource
data
data
if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
data < 100
data
data
100
{        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
char * dataBuffer = (char *)malloc(data);
char * dataBuffer = (char *)malloc(data);
char
* dataBuffer = (char *)malloc(data)
*
dataBuffer
= (char *)malloc(data)
(char *)malloc(data)
char *
char
*
*
malloc(data)
malloc
malloc
data
data
memset(dataBuffer, 'A', data-1);
memset(dataBuffer, 'A', data-1)
memset
memset
dataBuffer
dataBuffer
'A'
data-1
data
data
1
dataBuffer[data-1] = '\0';
dataBuffer[data-1] = '\0'
dataBuffer[data-1]
dataBuffer
dataBuffer
data-1
data
data
1
'\0'
printLine(dataBuffer);
printLine(dataBuffer)
printLine
printLine
dataBuffer
dataBuffer
free(dataBuffer);
free(dataBuffer)
free
free
dataBuffer
dataBuffer
-----joern-----
(9,30,0)
(41,2,0)
(0,10,0)
(18,34,0)
(10,40,0)
(28,24,0)
(7,30,0)
(11,28,0)
(35,40,0)
(32,30,0)
(31,15,0)
(21,24,0)
(26,17,0)
(24,15,0)
(1,41,0)
(24,36,0)
(30,24,0)
(8,28,0)
(36,24,0)
(34,40,0)
(36,17,0)
(3,17,0)
(22,28,0)
(7,40,0)
(28,22,0)
(33,24,0)
(17,3,0)
(29,33,0)
(43,10,0)
(37,33,0)
(17,15,0)
(13,40,0)
(41,10,0)
(6,7,0)
(27,7,0)
(2,24,0)
(0,40,0)
(7,10,0)
(2,41,0)
(20,13,0)
(14,0,0)
(4,22,0)
(41,1,0)
(5,3,0)
(10,41,0)
(30,7,0)
(16,2,0)
(22,10,0)
(13,10,0)
(22,34,0)
(38,36,0)
(42,15,0)
(9,6,1)
(22,28,1)
(36,38,1)
(33,24,1)
(28,24,1)
(37,24,1)
(0,10,1)
(30,32,1)
(30,24,1)
(43,33,1)
(17,3,1)
(33,29,1)
(12,0,1)
(11,4,1)
(13,20,1)
(41,1,1)
(3,5,1)
(2,16,1)
(38,21,1)
(41,2,1)
(24,36,1)
(14,13,1)
(34,18,1)
(2,24,1)
(4,7,1)
(27,10,1)
(5,26,1)
(12,33,1)
(6,27,1)
(36,17,1)
(28,8,1)
(22,10,1)
(7,10,1)
(13,10,1)
(21,17,1)
(7,30,1)
(18,22,1)
(16,43,1)
(8,11,1)
(20,34,1)
(10,41,1)
(0,14,1)
(32,9,1)
(29,37,1)
(28,33,2)
(32,33,2)
(9,33,2)
(41,33,2)
(22,10,2)
(13,33,2)
(22,28,2)
(7,33,2)
(13,10,2)
(0,33,2)
(10,41,2)
(36,17,2)
(34,33,2)
(10,33,2)
(7,30,2)
(28,24,2)
(2,24,2)
(41,2,2)
(22,33,2)
(2,33,2)
(11,33,2)
(30,33,2)
(6,33,2)
(18,33,2)
(43,33,2)
(27,33,2)
(20,33,2)
(14,33,2)
(7,10,2)
(4,33,2)
(8,33,2)
(24,36,2)
(41,1,2)
(33,24,2)
(17,3,2)
(30,24,2)
(16,33,2)
(0,10,2)
-----------------------------------
(0,free(dataBuffer)
(1,char *)
(2,malloc(data)
(3,-1)
(4,dataBuffer)
(5,1)
(6,\'A\')
(7,memset(dataBuffer, \'A\', data-1)
(8,1)
(9,data)
(10,* dataBuffer = (char *)
(11,data)
(12,RET)
(13,printLine(dataBuffer)
(14,dataBuffer)
(15,)
(16,data)
(17,data = -1)
(18,\'\\\\0\')
(19,'\\\\0')
(20,dataBuffer)
(21,data)
(22,dataBuffer[data-1])
(23,'A')
(24,data = CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61b_badSource(data)
(25,memset(dataBuffer, 'A', data-1)
(26,data)
(27,dataBuffer)
(28,data-1)
(29,100)
(30,data-1)
(31,data)
(32,1)
(33,data < 100)
(34,dataBuffer[data-1] = '\\\\0')
(35,dataBuffer)
(36,CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_61b_badSource(data)
(37,data)
(38,data)
(39,dataBuffer[data-1] = \'\\\\0\')
(40,)
(41,(char *)
(42,if (data < 100)
(43,dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^