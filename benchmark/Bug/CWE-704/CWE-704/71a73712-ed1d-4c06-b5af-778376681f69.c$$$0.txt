-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_rand_11_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    if(globalReturnsTrue())
    {
        /* FLAW: Use a random number */
        data = (short)RAND32();
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
35,36
35,37
37,38
37,39
39,40
40,41
40,42
41,42
41,43
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,16,20,25,28,29,32,36,38,42,43,45,49,51
-----computeFrom-----
12,13
12,14
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_rand_11_bad(){    short data;    /* Initialize data */    data = -1;    if(globalReturnsTrue())    {        /* FLAW: Use a random number */        data = (short)RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_rand_11_bad()
CWE197_Numeric_Truncation_Error__short_rand_11_bad
{    short data;    /* Initialize data */    data = -1;    if(globalReturnsTrue())    {        /* FLAW: Use a random number */        data = (short)RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
if(globalReturnsTrue())    {        /* FLAW: Use a random number */        data = (short)RAND32();    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* FLAW: Use a random number */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(3,1,0)
(3,17,0)
(14,13,0)
(0,1,0)
(18,3,0)
(17,6,0)
(10,5,0)
(12,10,0)
(15,14,0)
(3,18,0)
(14,15,0)
(2,17,0)
(4,5,0)
(23,3,0)
(21,1,0)
(17,14,0)
(12,18,0)
(3,9,0)
(18,10,0)
(13,14,0)
(9,3,0)
(1,21,0)
(22,10,0)
(1,5,0)
(11,18,0)
(16,21,0)
(14,17,0)
(8,5,0)
(20,12,0)
(19,1,1)
(3,1,1)
(12,20,1)
(12,18,1)
(20,18,1)
(1,21,1)
(16,0,1)
(14,13,1)
(2,19,1)
(14,15,1)
(21,16,1)
(17,14,1)
(3,9,1)
(3,17,1)
(3,23,1)
(18,3,1)
(7,12,1)
(11,19,1)
(23,11,1)
(13,2,1)
(11,17,1)
(14,13,2)
(12,18,2)
(3,1,2)
(18,3,2)
(1,21,2)
(17,19,2)
(17,14,2)
(3,17,2)
(13,19,2)
(2,19,2)
(3,9,2)
(14,15,2)
(14,19,2)
-----------------------------------
(0,data)
(1,data = -1)
(2,data)
(3,(char)
(4,data)
(5,)
(6,)
(7,RET)
(8,if(globalReturnsTrue()
(9,char)
(10,)
(11,charData)
(12,printHexCharLine(charData)
(13,RAND32()
(14,(short)
(15,short)
(16,1)
(17,data = (short)
(18,charData = (char)
(19,globalReturnsTrue()
(20,charData)
(21,-1)
(22,charData)
(23,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^