-----label-----
1
-----code-----
static short badSource(short data)
{
    /* FLAW: Use a negative number */
    data = -1;
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
11,12
11,13
12,13
14,15
16,17
17,18
-----nextToken-----
2,4,6,8,13,15,18
-----computeFrom-----
11,12
11,13
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static short badSource(short data){    /* FLAW: Use a negative number */    data = -1;    return data;}
static short
badSource(short data)
badSource
short data
short
data
data
{    /* FLAW: Use a negative number */    data = -1;    return data;}
data = -1;
data = -1
data
data
-1
1
return data;
data
data
-----joern-----
(2,4,0)
(2,5,0)
(3,2,0)
(1,4,0)
(2,1,0)
(8,2,0)
(1,6,0)
(6,1,0)
(7,1,0)
(1,5,0)
(0,6,0)
(2,1,1)
(1,4,1)
(1,6,1)
(2,4,1)
(3,2,1)
(6,0,1)
(2,8,1)
(8,1,1)
(0,7,1)
(2,4,2)
(1,6,2)
(3,2,2)
(1,4,2)
(2,1,2)
-----------------------------------
(0,1)
(1,data = -1)
(2,return data;)
(3,RET)
(4,short data)
(5,)
(6,-1)
(7,data)
(8,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^