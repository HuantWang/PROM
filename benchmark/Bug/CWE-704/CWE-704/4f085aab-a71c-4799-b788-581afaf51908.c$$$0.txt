-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fgets_malloc_68b_badSink()
{
    short data = CWE194_Unexpected_Sign_Extension__fgets_malloc_68_badData;
    /* Assume we want to allocate a relatively small buffer */
    if (data < 100)
    {
        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,
         * the conversion will cause malloc() to allocate a very large amount of data or fail */
        char * dataBuffer = (char *)malloc(data);
        if (dataBuffer == NULL) {exit(-1);}
        /* Do something with dataBuffer */
        memset(dataBuffer, 'A', data-1);
        dataBuffer[data-1] = '\0';
        printLine(dataBuffer);
        free(dataBuffer);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
15,16
15,17
16,17
19,20
19,21
19,22
19,23
19,24
19,25
20,21
21,22
21,23
23,24
23,25
23,26
26,27
27,28
27,29
28,29
28,30
30,31
32,33
32,34
33,34
35,36
37,38
37,39
38,39
38,40
39,40
41,42
43,44
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
51,54
51,55
52,53
54,55
57,58
57,59
58,59
61,62
62,63
62,64
63,64
63,65
64,65
66,67
66,68
67,68
71,72
72,73
72,74
73,74
75,76
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,8,10,13,17,18,22,24,25,29,31,34,36,40,42,47,49,53,55,56,59,60,65,68,69,70,74,76,80,82
-----computeFrom-----
15,16
15,17
38,39
38,40
57,58
57,59
62,63
62,64
66,67
66,68
-----guardedBy-----
17,68
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fgets_malloc_68b_badSink(){    short data = CWE194_Unexpected_Sign_Extension__fgets_malloc_68_badData;    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        if (dataBuffer == NULL) {exit(-1);}        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
void
CWE194_Unexpected_Sign_Extension__fgets_malloc_68b_badSink()
CWE194_Unexpected_Sign_Extension__fgets_malloc_68b_badSink
{    short data = CWE194_Unexpected_Sign_Extension__fgets_malloc_68_badData;    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        if (dataBuffer == NULL) {exit(-1);}        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
short data = CWE194_Unexpected_Sign_Extension__fgets_malloc_68_badData;
short data = CWE194_Unexpected_Sign_Extension__fgets_malloc_68_badData;
short
data = CWE194_Unexpected_Sign_Extension__fgets_malloc_68_badData
data
= CWE194_Unexpected_Sign_Extension__fgets_malloc_68_badData
CWE194_Unexpected_Sign_Extension__fgets_malloc_68_badData
CWE194_Unexpected_Sign_Extension__fgets_malloc_68_badData
if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        if (dataBuffer == NULL) {exit(-1);}        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
data < 100
data
data
100
{        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        if (dataBuffer == NULL) {exit(-1);}        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
char * dataBuffer = (char *)malloc(data);
char * dataBuffer = (char *)malloc(data);
char
* dataBuffer = (char *)malloc(data)
*
dataBuffer
= (char *)malloc(data)
(char *)malloc(data)
char *
char
*
*
malloc(data)
malloc
malloc
data
data
if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', data-1);
memset(dataBuffer, 'A', data-1)
memset
memset
dataBuffer
dataBuffer
'A'
data-1
data
data
1
dataBuffer[data-1] = '\0';
dataBuffer[data-1] = '\0'
dataBuffer[data-1]
dataBuffer
dataBuffer
data-1
data
data
1
'\0'
printLine(dataBuffer);
printLine(dataBuffer)
printLine
printLine
dataBuffer
dataBuffer
free(dataBuffer);
free(dataBuffer)
free
free
dataBuffer
dataBuffer
-----joern-----
(44,5,0)
(11,21,0)
(32,7,0)
(11,2,0)
(43,5,0)
(18,35,0)
(28,8,0)
(41,33,0)
(45,3,0)
(3,43,0)
(11,32,0)
(21,5,0)
(13,21,0)
(7,19,0)
(5,1,0)
(38,5,0)
(39,28,0)
(30,14,0)
(37,32,0)
(46,43,0)
(15,3,0)
(19,7,0)
(3,14,0)
(27,38,0)
(2,14,0)
(17,32,0)
(36,11,0)
(35,14,0)
(31,44,0)
(7,38,0)
(23,44,0)
(37,14,0)
(6,39,0)
(38,7,0)
(10,43,0)
(40,14,0)
(0,21,0)
(4,2,0)
(28,39,0)
(25,1,0)
(21,11,0)
(3,32,0)
(16,33,0)
(35,32,0)
(20,5,0)
(43,3,0)
(7,32,0)
(42,5,0)
(12,1,0)
(32,14,0)
(33,32,0)
(29,37,0)
(17,44,1)
(18,2,1)
(42,20,1)
(6,33,1)
(38,27,1)
(4,11,1)
(21,5,1)
(31,23,1)
(38,5,1)
(13,0,1)
(26,37,1)
(15,45,1)
(35,32,1)
(45,33,1)
(46,10,1)
(10,15,1)
(44,31,1)
(41,32,1)
(7,19,1)
(7,38,1)
(3,43,1)
(2,4,1)
(37,29,1)
(27,17,1)
(29,35,1)
(23,5,1)
(26,44,1)
(33,16,1)
(35,18,1)
(45,28,1)
(5,42,1)
(33,32,1)
(44,5,1)
(11,32,1)
(32,7,1)
(21,13,1)
(16,41,1)
(43,46,1)
(28,39,1)
(3,32,1)
(43,5,1)
(11,21,1)
(39,6,1)
(36,3,1)
(37,32,1)
(0,36,1)
(33,32,2)
(36,44,2)
(6,33,2)
(35,32,2)
(17,44,2)
(43,5,2)
(13,44,2)
(11,44,2)
(11,32,2)
(32,44,2)
(44,5,2)
(18,44,2)
(0,44,2)
(3,44,2)
(21,44,2)
(38,5,2)
(29,44,2)
(46,44,2)
(4,44,2)
(45,44,2)
(10,44,2)
(7,38,2)
(15,44,2)
(7,19,2)
(41,44,2)
(28,39,2)
(7,44,2)
(21,5,2)
(32,7,2)
(28,33,2)
(37,32,2)
(3,43,2)
(39,33,2)
(3,32,2)
(35,44,2)
(38,44,2)
(37,44,2)
(43,44,2)
(27,44,2)
(11,21,2)
(16,44,2)
(33,44,2)
(2,44,2)
-----------------------------------
(0,data)
(1,)
(2,dataBuffer[data-1] = \'\\\\0\')
(3,memset(dataBuffer, 'A', data-1)
(4,\'\\\\0\')
(5,data = CWE194_Unexpected_Sign_Extension__fgets_malloc_68_badData)
(6,1)
(7,(char *)
(8,)
(9,dataBuffer[data-1] = '\\\\0')
(10,data)
(11,dataBuffer[data-1])
(12,data)
(13,1)
(14,)
(15,'A')
(16,NULL)
(17,dataBuffer)
(18,dataBuffer)
(19,char *)
(20,data)
(21,data-1)
(22,'\\\\0')
(23,data)
(24,memset(dataBuffer, \'A\', data-1)
(25,if (data < 100)
(26,RET)
(27,data)
(28,exit(-1)
(29,dataBuffer)
(30,dataBuffer)
(31,100)
(32,* dataBuffer = (char *)
(33,dataBuffer == NULL)
(34,\'A\')
(35,printLine(dataBuffer)
(36,dataBuffer)
(37,free(dataBuffer)
(38,malloc(data)
(39,-1)
(40,if (dataBuffer == NULL)
(41,dataBuffer)
(42,CWE194_Unexpected_Sign_Extension__fgets_malloc_68_badData)
(43,data-1)
(44,data < 100)
(45,dataBuffer)
(46,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^