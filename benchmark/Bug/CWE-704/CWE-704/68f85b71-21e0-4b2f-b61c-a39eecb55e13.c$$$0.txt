-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_04_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(STATIC_CONST_TRUE)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    {
        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
        short shortData = (short)data;
        printShortLine(shortData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
21,23
22,23
23,24
23,25
25,26
25,27
25,28
27,28
28,29
30,31
32,33
32,34
32,35
33,34
33,35
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
53,54
55,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
63,64
63,65
65,66
65,67
67,68
68,69
68,70
69,70
69,71
72,73
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,8,10,14,16,19,24,26,29,31,36,38,40,42,44,49,52,54,59,60,64,66,70,71,73,77,79
-----computeFrom-----
12,13
12,14
33,34
33,35
47,48
47,49
-----guardedBy-----
38,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_04_bad(){    int data;    /* Initialize data */    data = -1;    if(STATIC_CONST_TRUE)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_short_04_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_short_04_bad
{    int data;    /* Initialize data */    data = -1;    if(STATIC_CONST_TRUE)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(STATIC_CONST_TRUE)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(27,8,0)
(10,17,0)
(35,34,0)
(17,1,0)
(7,30,0)
(12,13,0)
(13,12,0)
(18,23,0)
(24,4,0)
(19,1,0)
(1,17,0)
(9,1,0)
(29,30,0)
(31,8,0)
(1,8,0)
(33,6,0)
(23,32,0)
(13,26,0)
(2,8,0)
(15,12,0)
(36,31,0)
(32,34,0)
(36,14,0)
(38,4,0)
(0,36,0)
(24,12,0)
(11,31,0)
(13,36,0)
(13,32,0)
(6,25,0)
(31,36,0)
(12,4,0)
(30,16,0)
(5,13,0)
(37,24,0)
(26,13,0)
(3,1,0)
(32,23,0)
(8,30,0)
(20,34,0)
(28,32,0)
(4,34,0)
(5,15,1)
(15,36,1)
(19,9,1)
(17,1,1)
(0,17,1)
(24,12,1)
(32,23,1)
(10,1,1)
(13,26,1)
(13,36,1)
(12,13,1)
(8,2,1)
(31,11,1)
(24,37,1)
(31,8,1)
(2,27,1)
(27,22,1)
(11,0,1)
(1,3,1)
(23,18,1)
(17,10,1)
(37,12,1)
(15,6,1)
(6,33,1)
(21,24,1)
(15,22,1)
(36,31,1)
(18,28,1)
(3,19,1)
(22,32,1)
(1,8,1)
(13,32,1)
(9,8,1)
(13,5,1)
(33,17,1)
(2,22,2)
(9,22,2)
(33,17,2)
(12,13,2)
(13,32,2)
(0,17,2)
(24,12,2)
(8,22,2)
(31,17,2)
(19,22,2)
(11,17,2)
(3,22,2)
(27,22,2)
(1,8,2)
(32,23,2)
(6,17,2)
(36,31,2)
(36,17,2)
(1,22,2)
(10,22,2)
(17,22,2)
(13,26,2)
(17,1,2)
(31,8,2)
(13,36,2)
-----------------------------------
(0,data)
(1,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(2,"")
(3,stdin)
(4,)
(5,data)
(6,printLine("fgets()
(7,inputBuffer)
(8,inputBuffer[CHAR_ARRAY_SIZE] = "")
(9,inputBuffer)
(10,NULL)
(11,inputBuffer)
(12,shortData = (short)
(13,(short)
(14,)
(15,shortData)
(16,)
(17,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(18,1)
(19,CHAR_ARRAY_SIZE)
(20,data)
(21,RET)
(22,STATIC_CONST_TRUE)
(23,-1)
(24,printShortLine(shortData)
(25,)
(26,short)
(27,inputBuffer)
(28,data)
(29,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(30,)
(31,atoi(inputBuffer)
(32,data = -1)
(33,"fgets()
(34,)
(35,if(STATIC_CONST_TRUE)
(36,data = atoi(inputBuffer)
(37,shortData)
(38,shortData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^