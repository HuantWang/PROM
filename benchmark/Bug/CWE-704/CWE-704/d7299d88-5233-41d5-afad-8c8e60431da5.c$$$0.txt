-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_01_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    /* FLAW: Use a negative number */
    data = -1;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
22,26
22,27
22,28
23,24
24,25
24,26
26,27
26,28
28,29
30,31
31,32
31,33
33,34
33,35
33,36
35,36
37,38
39,40
40,41
40,42
40,43
40,44
41,42
43,44
46,47
46,48
49,50
50,51
50,52
51,52
51,53
52,53
54,55
54,56
58,59
58,60
59,60
59,61
60,61
63,64
63,65
64,65
65,66
65,67
65,68
65,69
66,67
68,69
70,71
72,73
74,75
75,76
75,77
76,77
76,78
77,78
79,80
82,83
83,84
83,85
84,85
86,87
-----nextToken-----
2,4,8,10,14,15,19,21,25,27,29,32,34,36,38,42,44,45,47,48,53,55,56,57,61,62,67,69,71,73,78,80,81,85,87
-----computeFrom-----
12,13
12,14
17,18
17,19
46,47
46,48
50,51
50,52
54,55
54,56
59,60
59,61
75,76
75,77
-----guardedBy-----
61,80
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_01_bad(){    short data;    /* Initialize data */    data = 0;    /* FLAW: Use a negative number */    data = -1;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_memmove_01_bad()
CWE194_Unexpected_Sign_Extension__negative_memmove_01_bad
{    short data;    /* Initialize data */    data = 0;    /* FLAW: Use a negative number */    data = -1;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(40,27,0)
(6,10,0)
(39,35,0)
(10,44,0)
(36,27,0)
(13,19,0)
(0,42,0)
(28,27,0)
(22,6,0)
(18,16,0)
(1,43,0)
(7,8,0)
(38,6,0)
(4,44,0)
(15,20,0)
(31,0,0)
(11,44,0)
(37,44,0)
(27,28,0)
(19,10,0)
(30,28,0)
(0,44,0)
(26,15,0)
(8,10,0)
(32,19,0)
(25,18,0)
(19,20,0)
(24,0,0)
(17,18,0)
(14,10,0)
(29,20,0)
(34,16,0)
(6,20,0)
(21,19,0)
(19,41,0)
(8,44,0)
(23,44,0)
(33,10,0)
(43,41,0)
(12,42,0)
(20,35,0)
(9,15,0)
(5,23,0)
(20,16,0)
(6,43,0)
(28,23,0)
(35,20,0)
(42,0,0)
(2,42,0)
(44,16,0)
(10,14,1)
(31,10,1)
(32,21,1)
(23,5,1)
(3,8,1)
(22,38,1)
(5,28,1)
(19,20,1)
(39,29,1)
(30,0,1)
(7,15,1)
(20,35,1)
(6,22,1)
(43,1,1)
(0,42,1)
(36,30,1)
(2,12,1)
(19,10,1)
(7,43,1)
(27,40,1)
(40,36,1)
(15,20,1)
(24,31,1)
(35,39,1)
(15,26,1)
(12,24,1)
(33,20,1)
(19,13,1)
(42,2,1)
(6,20,1)
(38,19,1)
(21,15,1)
(14,33,1)
(9,23,1)
(1,6,1)
(26,9,1)
(25,17,1)
(6,10,1)
(13,32,1)
(29,18,1)
(18,25,1)
(8,10,1)
(8,7,1)
(28,27,1)
(38,15,2)
(6,15,2)
(6,10,2)
(32,15,2)
(20,35,2)
(21,15,2)
(0,42,2)
(19,15,2)
(8,10,2)
(19,10,2)
(13,15,2)
(22,15,2)
(43,15,2)
(6,20,2)
(19,20,2)
(28,27,2)
(1,15,2)
(15,20,2)
-----------------------------------
(0,memset(source, \\\'A\\\', 100-1)
(1,\\\'\\\\0\\\')
(2,1)
(3,RET)
(4,dest)
(5,\\\'\\\\0\\\')
(6,dest[data])
(7,dest)
(8,printLine(dest)
(9,data)
(10,dest[100] = "")
(11,if (data < 100)
(12,100)
(13,data)
(14,"")
(15,data < 100)
(16,)
(17,data)
(18,data = 0)
(19,memmove(dest, source, data)
(20,data = -1)
(21,dest)
(22,data)
(23,source[100-1] = \\\'\\\\0\\\')
(24,\\\'A\\\')
(25,0)
(26,100)
(27,100-1)
(28,source[100-1])
(29,data)
(30,source)
(31,source)
(32,source)
(33,dest)
(34,data)
(35,-1)
(36,100)
(37,source)
(38,dest)
(39,1)
(40,1)
(41,)
(42,100-1)
(43,dest[data] = \\\'\\\\0\\\')
(44,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^