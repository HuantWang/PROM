-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_15_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    switch(6)
    {
    case 6:
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
19,21
19,22
19,23
19,24
19,25
20,21
22,23
23,24
23,25
24,25
26,27
27,28
31,32
32,33
32,34
33,34
37,38
37,39
37,40
37,41
37,42
37,43
38,39
39,40
39,41
41,42
41,43
43,44
45,46
46,47
46,48
48,49
48,50
48,51
50,51
52,53
54,55
55,56
55,57
55,58
55,59
56,57
58,59
61,62
61,63
64,65
65,66
65,67
66,67
66,68
67,68
69,70
69,71
73,74
73,75
74,75
74,76
75,76
78,79
78,80
79,80
80,81
80,82
80,83
80,84
81,82
83,84
85,86
87,88
89,90
90,91
90,92
91,92
91,93
92,93
94,95
97,98
98,99
98,100
99,100
101,102
-----nextToken-----
2,4,8,10,14,16,18,21,25,28,29,30,34,35,36,40,42,44,47,49,51,53,57,59,60,62,63,68,70,71,72,76,77,82,84,86,88,93,95,96,100,102
-----computeFrom-----
12,13
12,14
23,24
23,25
61,62
61,63
65,66
65,67
69,70
69,71
74,75
74,76
90,91
90,92
-----guardedBy-----
76,95
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_15_bad(){    int data;    /* Initialize data */    data = -1;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_15_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_15_bad
{    int data;    /* Initialize data */    data = -1;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
switch(6)    {    case 6:        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(23,39,0)
(4,15,0)
(14,53,0)
(25,43,0)
(27,15,0)
(16,38,0)
(30,23,0)
(10,3,0)
(11,23,0)
(25,27,0)
(45,38,0)
(19,27,0)
(21,30,0)
(42,28,0)
(38,14,0)
(47,12,0)
(6,20,0)
(40,2,0)
(12,47,0)
(17,25,0)
(25,33,0)
(24,33,0)
(20,24,0)
(7,39,0)
(28,2,0)
(20,27,0)
(43,23,0)
(37,53,0)
(8,14,0)
(38,27,0)
(9,25,0)
(48,20,0)
(27,41,0)
(34,12,0)
(41,27,0)
(53,14,0)
(13,15,0)
(2,23,0)
(20,43,0)
(31,25,0)
(50,26,0)
(26,28,0)
(1,15,0)
(20,14,0)
(18,39,0)
(14,39,0)
(5,47,0)
(28,26,0)
(44,23,0)
(36,47,0)
(29,43,0)
(32,24,0)
(25,14,0)
(49,23,0)
(35,26,0)
(51,12,0)
(3,15,0)
(46,43,0)
(52,15,0)
(30,43,0)
(12,23,0)
(47,5,1)
(1,3,1)
(6,25,1)
(25,14,1)
(14,53,1)
(21,24,1)
(32,20,1)
(17,9,1)
(53,37,1)
(45,16,1)
(19,0,1)
(36,34,1)
(30,43,1)
(5,36,1)
(26,35,1)
(13,27,1)
(46,29,1)
(3,10,1)
(37,8,1)
(2,40,1)
(25,31,1)
(35,50,1)
(38,27,1)
(30,21,1)
(41,19,1)
(50,42,1)
(24,32,1)
(0,14,1)
(27,41,1)
(42,12,1)
(20,48,1)
(20,14,1)
(40,28,1)
(21,38,1)
(43,46,1)
(16,2,1)
(22,30,1)
(29,13,1)
(20,43,1)
(25,27,1)
(29,1,1)
(28,26,1)
(20,27,1)
(38,14,1)
(10,0,1)
(38,45,1)
(34,51,1)
(48,6,1)
(51,43,1)
(25,43,1)
(31,17,1)
(9,38,1)
(12,47,1)
(1,0,2)
(20,27,2)
(32,38,2)
(14,53,2)
(30,43,2)
(41,0,2)
(20,38,2)
(9,38,2)
(27,41,2)
(19,0,2)
(25,43,2)
(48,38,2)
(20,14,2)
(24,38,2)
(6,38,2)
(20,43,2)
(13,0,2)
(3,0,2)
(31,38,2)
(10,0,2)
(38,27,2)
(27,0,2)
(25,38,2)
(28,26,2)
(12,47,2)
(25,14,2)
(25,27,2)
(38,14,2)
(17,38,2)
-----------------------------------
(0,6)
(1,break;)
(2,source[100-1] = \\\'\\\\0\\\')
(3,printLine("Benign, fixed string")
(4,default:)
(5,1)
(6,dest)
(7,switch(6)
(8,data)
(9,dest)
(10,"Benign, fixed string")
(11,if (data < 100)
(12,memset(source, \\\'A\\\', 100-1)
(13,break;)
(14,data = -1)
(15,)
(16,data)
(17,source)
(18,data)
(19,data)
(20,dest[data])
(21,dest)
(22,RET)
(23,)
(24,dest[data] = \\\'\\\\0\\\')
(25,strncpy(dest, source, data)
(26,100-1)
(27,data = RAND32()
(28,source[100-1])
(29,dest)
(30,printLine(dest)
(31,data)
(32,\\\'\\\\0\\\')
(33,)
(34,\\\'A\\\')
(35,1)
(36,100)
(37,1)
(38,data < 100)
(39,)
(40,\\\'\\\\0\\\')
(41,RAND32()
(42,source)
(43,dest[100] = "")
(44,source)
(45,100)
(46,"")
(47,100-1)
(48,data)
(49,dest)
(50,100)
(51,source)
(52,case 6:)
(53,-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^