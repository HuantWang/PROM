-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_17_bad()
{
    int i;
    short data;
    /* Initialize data */
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
22,23
23,24
23,25
24,25
27,28
27,29
28,29
31,32
32,33
34,35
35,36
36,37
36,38
36,39
36,40
37,38
39,40
42,43
43,44
45,46
45,47
45,48
45,49
45,50
45,51
46,47
47,48
47,49
49,50
49,51
51,52
53,54
54,55
54,56
56,57
56,58
56,59
58,59
60,61
62,63
63,64
63,65
63,66
63,67
64,65
66,67
69,70
69,71
72,73
73,74
73,75
74,75
74,76
75,76
77,78
77,79
81,82
81,83
82,83
82,84
83,84
86,87
86,88
87,88
88,89
88,90
88,91
88,92
89,90
91,92
93,94
95,96
97,98
98,99
98,100
99,100
99,101
100,101
102,103
105,106
106,107
106,108
107,108
109,110
-----nextToken-----
2,4,8,10,13,15,19,20,25,26,29,30,33,38,40,41,44,48,50,52,55,57,59,61,65,67,68,70,71,76,78,79,80,84,85,90,92,94,96,101,103,104,108,110
-----computeFrom-----
17,18
17,19
23,24
23,25
27,28
27,29
69,70
69,71
73,74
73,75
77,78
77,79
82,83
82,84
98,99
98,100
-----guardedBy-----
84,103
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_17_bad(){    int i;    short data;    /* Initialize data */    data = 0;    for(i = 0; i < 1; i++)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_17_bad()
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_17_bad
{    int i;    short data;    /* Initialize data */    data = 0;    for(i = 0; i < 1; i++)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int i;
int i;
int
i
i
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(8,48,0)
(22,48,0)
(2,37,0)
(29,37,0)
(31,17,0)
(54,49,0)
(51,24,0)
(37,16,0)
(40,19,0)
(42,37,0)
(18,23,0)
(39,29,0)
(4,39,0)
(17,0,0)
(41,37,0)
(15,9,0)
(49,0,0)
(23,48,0)
(30,0,0)
(12,37,0)
(9,37,0)
(11,26,0)
(50,3,0)
(32,39,0)
(45,29,0)
(33,4,0)
(26,42,0)
(38,9,0)
(13,42,0)
(41,42,0)
(34,16,0)
(43,8,0)
(27,42,0)
(10,55,0)
(52,16,0)
(24,55,0)
(28,37,0)
(26,19,0)
(46,3,0)
(14,16,0)
(35,40,0)
(25,55,0)
(23,40,0)
(20,49,0)
(1,0,0)
(55,6,0)
(26,48,0)
(44,48,0)
(23,42,0)
(21,41,0)
(24,48,0)
(39,4,0)
(5,26,0)
(7,26,0)
(3,9,0)
(56,23,0)
(48,16,0)
(9,3,0)
(55,24,0)
(47,4,0)
(53,8,0)
(3,50,1)
(43,29,1)
(26,48,1)
(46,38,1)
(49,0,1)
(0,30,1)
(38,15,1)
(33,47,1)
(11,5,1)
(35,23,1)
(21,40,1)
(48,22,1)
(23,56,1)
(41,21,1)
(22,44,1)
(24,51,1)
(10,25,1)
(1,48,1)
(41,42,1)
(30,1,1)
(36,41,1)
(51,10,1)
(29,45,1)
(26,42,1)
(53,43,1)
(26,7,1)
(56,18,1)
(24,48,1)
(7,11,1)
(21,8,1)
(25,49,1)
(5,8,1)
(42,27,1)
(9,3,1)
(27,13,1)
(17,31,1)
(54,0,1)
(39,4,1)
(20,54,1)
(50,46,1)
(23,48,1)
(23,42,1)
(47,32,1)
(4,33,1)
(54,17,1)
(40,35,1)
(32,9,1)
(13,49,1)
(15,42,1)
(17,0,1)
(18,26,1)
(45,39,1)
(8,48,1)
(8,53,1)
(31,55,1)
(55,24,1)
(49,20,1)
(5,8,2)
(17,49,2)
(23,8,2)
(31,49,2)
(49,0,2)
(54,49,2)
(26,48,2)
(51,49,2)
(11,8,2)
(39,4,2)
(49,49,2)
(26,8,2)
(20,49,2)
(24,48,2)
(9,3,2)
(8,48,2)
(17,0,2)
(55,24,2)
(18,8,2)
(7,8,2)
(26,42,2)
(25,49,2)
(40,8,2)
(24,49,2)
(55,49,2)
(41,42,2)
(10,49,2)
(23,42,2)
(56,8,2)
(23,48,2)
(35,8,2)
-----------------------------------
(0,i = 0)
(1,i)
(2,dest)
(3,100-1)
(4,100-1)
(5,dest)
(6,)
(7,data)
(8,data < 100)
(9,memset(source, \\\'A\\\', 100-1)
(10,"%hd")
(11,source)
(12,source)
(13,dest)
(14,data)
(15,source)
(16,)
(17,i++)
(18,dest)
(19,)
(20,1)
(21,dest)
(22,0)
(23,dest[data])
(24,&data)
(25,stdin)
(26,strncpy(dest, source, data)
(27,"")
(28,if (data < 100)
(29,source[100-1] = \\\'\\\\0\\\')
(30,0)
(31,i)
(32,source)
(33,1)
(34,i)
(35,\\\'\\\\0\\\')
(36,RET)
(37,)
(38,\\\'A\\\')
(39,source[100-1])
(40,dest[data] = \\\'\\\\0\\\')
(41,printLine(dest)
(42,dest[100] = "")
(43,data)
(44,data)
(45,\\\'\\\\0\\\')
(46,100)
(47,100)
(48,data = 0)
(49,i < 1)
(50,1)
(51,data)
(52,for(i = 0; i < 1; i++)
(53,100)
(54,i)
(55,fscanf (stdin, "%hd", &data)
(56,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^