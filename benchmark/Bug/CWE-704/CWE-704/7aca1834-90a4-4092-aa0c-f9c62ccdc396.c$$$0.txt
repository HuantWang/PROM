-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_rand_to_short_04_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    {
        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
        short shortData = (short)data;
        printShortLine(shortData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
26,27
28,29
28,30
29,30
30,31
30,32
32,33
32,34
34,35
35,36
35,37
36,37
36,38
39,40
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,8,10,14,16,19,24,27,31,33,37,38,40,44,46
-----computeFrom-----
12,13
12,14
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_rand_to_short_04_bad(){    int data;    /* Initialize data */    data = -1;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
void
CWE197_Numeric_Truncation_Error__int_rand_to_short_04_bad()
CWE197_Numeric_Truncation_Error__int_rand_to_short_04_bad
{    int data;    /* Initialize data */    data = -1;    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(5,6,0)
(13,0,0)
(19,5,0)
(16,17,0)
(13,11,0)
(9,3,0)
(2,0,0)
(17,20,0)
(3,11,0)
(4,11,0)
(17,8,0)
(10,13,0)
(7,6,0)
(0,5,0)
(14,5,0)
(18,13,0)
(19,0,0)
(13,10,0)
(0,13,0)
(11,3,0)
(1,19,0)
(15,6,0)
(13,17,0)
(11,6,0)
(8,17,0)
(1,0,1)
(9,4,1)
(16,12,1)
(21,19,1)
(13,10,1)
(13,11,1)
(19,1,1)
(13,18,1)
(18,2,1)
(2,17,1)
(0,13,1)
(13,17,1)
(19,0,1)
(3,9,1)
(2,12,1)
(8,16,1)
(12,11,1)
(11,3,1)
(17,8,1)
(8,12,2)
(0,13,2)
(13,10,2)
(16,12,2)
(13,17,2)
(17,8,2)
(19,0,2)
(17,12,2)
(13,11,2)
(11,3,2)
-----------------------------------
(0,shortData = (short)
(1,shortData)
(2,shortData)
(3,-1)
(4,data)
(5,)
(6,)
(7,data)
(8,RAND32()
(9,1)
(10,short)
(11,data = -1)
(12,STATIC_CONST_TRUE)
(13,(short)
(14,shortData)
(15,if(STATIC_CONST_TRUE)
(16,data)
(17,data = RAND32()
(18,data)
(19,printShortLine(shortData)
(20,)
(21,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^