-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_34_bad()
{
    int data;
    CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_34_unionType myUnion;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Read data from the console using fscanf() */
    fscanf(stdin, "%d", &data);
    myUnion.unionFirst = data;
    {
        int data = myUnion.unionSecond;
        {
            char source[100];
            char dest[100] = "";
            memset(source, 'A', 100-1);
            source[100-1] = '\0';
            if (data < 100)
            {
                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
                 * the sign conversion could result in a very large number */
                strncpy(dest, source, data);
                dest[data] = '\0'; /* strncpy() does not always NULL terminate */
            }
            printLine(dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
23,24
24,25
24,26
24,27
24,28
25,26
27,28
30,31
31,32
33,34
34,35
34,36
35,36
35,37
36,37
39,40
41,42
41,43
42,43
43,44
43,45
45,46
45,47
47,48
48,49
48,50
49,50
52,53
52,54
52,55
52,56
52,57
52,58
53,54
54,55
54,56
56,57
56,58
58,59
60,61
61,62
61,63
63,64
63,65
63,66
65,66
67,68
69,70
70,71
70,72
70,73
70,74
71,72
73,74
76,77
76,78
79,80
80,81
80,82
81,82
81,83
82,83
84,85
84,86
88,89
88,90
89,90
89,91
90,91
93,94
93,95
94,95
95,96
95,97
95,98
95,99
96,97
98,99
100,101
102,103
104,105
105,106
105,107
106,107
106,108
107,108
109,110
112,113
113,114
113,115
114,115
116,117
-----nextToken-----
2,4,8,10,14,16,20,22,26,28,29,32,37,38,40,44,46,50,51,55,57,59,62,64,66,68,72,74,75,77,78,83,85,86,87,91,92,97,99,101,103,108,110,111,115,117
-----computeFrom-----
18,19
18,20
34,35
34,36
76,77
76,78
80,81
80,82
84,85
84,86
89,90
89,91
105,106
105,107
-----guardedBy-----
91,110
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_34_bad(){    int data;    CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_34_unionType myUnion;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_34_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_34_bad
{    int data;    CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_34_unionType myUnion;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }}
int data;
int data;
int
data
data
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_34_unionType myUnion;
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_34_unionType myUnion;
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_34_unionType
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_34_unionType
myUnion
myUnion
data = -1;
data = -1
data
data
-1
1
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int data = myUnion.unionSecond;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }
int data = myUnion.unionSecond;
int data = myUnion.unionSecond;
int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }
data < 100
data
data
100
{                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(1,30,0)
(35,21,0)
(45,24,0)
(0,46,0)
(38,21,0)
(46,1,0)
(27,9,0)
(16,38,0)
(59,32,0)
(32,3,0)
(43,42,0)
(12,24,0)
(29,40,0)
(32,16,0)
(8,38,0)
(17,38,0)
(34,1,0)
(29,14,0)
(39,34,0)
(52,42,0)
(56,30,0)
(1,46,0)
(51,40,0)
(48,5,0)
(21,30,0)
(2,38,0)
(5,58,0)
(47,16,0)
(27,16,0)
(31,39,0)
(14,38,0)
(37,29,0)
(27,45,0)
(54,45,0)
(24,45,0)
(47,38,0)
(22,45,0)
(23,54,0)
(20,27,0)
(58,30,0)
(15,32,0)
(34,39,0)
(50,16,0)
(55,34,0)
(45,21,0)
(6,27,0)
(41,5,0)
(57,9,0)
(39,30,0)
(4,58,0)
(19,47,0)
(10,16,0)
(26,42,0)
(49,32,0)
(53,43,0)
(9,3,0)
(33,40,0)
(32,45,0)
(40,29,0)
(36,54,0)
(13,1,0)
(58,1,0)
(11,39,0)
(42,43,0)
(7,24,0)
(28,14,0)
(18,30,0)
(43,38,0)
(44,43,0)
(10,50,1)
(6,20,1)
(41,48,1)
(58,1,1)
(37,43,1)
(40,51,1)
(47,19,1)
(49,59,1)
(15,49,1)
(59,54,1)
(33,37,1)
(58,4,1)
(51,33,1)
(47,16,1)
(45,24,1)
(34,1,1)
(57,27,1)
(16,10,1)
(22,58,1)
(54,45,1)
(4,5,1)
(44,16,1)
(48,39,1)
(27,16,1)
(32,16,1)
(14,28,1)
(24,7,1)
(27,6,1)
(9,57,1)
(19,54,1)
(31,1,1)
(12,22,1)
(53,44,1)
(50,45,1)
(32,15,1)
(26,53,1)
(52,26,1)
(11,31,1)
(28,29,1)
(46,0,1)
(39,34,1)
(43,42,1)
(27,45,1)
(36,23,1)
(42,52,1)
(20,32,1)
(34,55,1)
(0,13,1)
(5,41,1)
(55,11,1)
(19,9,1)
(29,40,1)
(7,12,1)
(25,47,1)
(1,46,1)
(54,36,1)
(32,45,1)
(23,14,1)
(47,16,2)
(34,1,2)
(57,54,2)
(58,1,2)
(43,42,2)
(1,46,2)
(49,54,2)
(27,54,2)
(27,16,2)
(39,34,2)
(27,45,2)
(45,24,2)
(20,54,2)
(32,45,2)
(6,54,2)
(54,45,2)
(32,16,2)
(32,54,2)
(15,54,2)
(29,40,2)
(9,54,2)
(59,54,2)
-----------------------------------
(0,1)
(1,data = -1)
(2,if (data < 100)
(3,)
(4,data)
(5,myUnion.unionFirst)
(6,data)
(7,unionSecond)
(8,source)
(9,dest[data] = \\\'\\\\0\\\')
(10,"")
(11,"%d")
(12,myUnion)
(13,data)
(14,source[100-1] = \\\'\\\\0\\\')
(15,data)
(16,dest[100] = "")
(17,dest)
(18,data)
(19,dest)
(20,dest)
(21,)
(22,data)
(23,data)
(24,myUnion.unionSecond)
(25,RET)
(26,100)
(27,dest[data])
(28,\\\'\\\\0\\\')
(29,source[100-1])
(30,)
(31,stdin)
(32,strncpy(dest, source, data)
(33,100)
(34,&data)
(35,data)
(36,100)
(37,source)
(38,)
(39,fscanf(stdin, "%d", &data)
(40,100-1)
(41,unionFirst)
(42,100-1)
(43,memset(source, \\\'A\\\', 100-1)
(44,source)
(45,data = myUnion.unionSecond)
(46,-1)
(47,printLine(dest)
(48,myUnion)
(49,source)
(50,dest)
(51,1)
(52,1)
(53,\\\'A\\\')
(54,data < 100)
(55,data)
(56,myUnion)
(57,\\\'\\\\0\\\')
(58,myUnion.unionFirst = data)
(59,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^