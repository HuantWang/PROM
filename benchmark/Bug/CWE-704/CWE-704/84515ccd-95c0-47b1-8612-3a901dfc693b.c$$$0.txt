-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_11_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(globalReturnsTrue())
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
18,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
27,32
27,33
28,29
29,30
29,31
31,32
31,33
33,34
35,36
36,37
36,38
38,39
38,40
38,41
40,41
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
63,65
64,65
64,66
65,66
68,69
68,70
69,70
70,71
70,72
70,73
70,74
71,72
73,74
75,76
77,78
79,80
80,81
80,82
81,82
81,83
82,83
84,85
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,14,15,19,24,26,30,32,34,37,39,41,43,47,49,50,52,53,58,60,61,62,66,67,72,74,76,78,83,85,86,90,92
-----computeFrom-----
12,13
12,14
22,23
22,24
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
80,81
80,82
-----guardedBy-----
66,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_11_bad(){    short data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_memmove_11_bad()
CWE194_Unexpected_Sign_Extension__negative_memmove_11_bad
{    short data;    /* Initialize data */    data = 0;    if(globalReturnsTrue())    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalReturnsTrue())    {        /* FLAW: Use a negative number */        data = -1;    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(43,8,0)
(36,19,0)
(15,12,0)
(30,4,0)
(19,36,0)
(4,40,0)
(39,35,0)
(14,40,0)
(38,25,0)
(3,19,0)
(25,11,0)
(17,27,0)
(38,40,0)
(44,38,0)
(8,37,0)
(13,35,0)
(31,6,0)
(23,36,0)
(32,4,0)
(9,11,0)
(38,37,0)
(21,1,0)
(2,40,0)
(40,27,0)
(10,38,0)
(22,20,0)
(33,25,0)
(12,1,0)
(1,20,0)
(16,11,0)
(19,6,0)
(5,19,0)
(1,12,0)
(39,6,0)
(6,11,0)
(27,40,0)
(4,8,0)
(26,2,0)
(4,35,0)
(45,39,0)
(46,25,0)
(29,12,0)
(24,6,0)
(2,25,0)
(20,6,0)
(4,25,0)
(38,35,0)
(34,38,0)
(18,6,0)
(41,36,0)
(40,7,0)
(35,6,0)
(0,2,0)
(47,35,0)
(13,40,1)
(42,25,1)
(44,10,1)
(21,19,1)
(10,2,1)
(23,5,1)
(2,0,1)
(0,26,1)
(17,14,1)
(35,47,1)
(19,36,1)
(5,3,1)
(39,45,1)
(38,35,1)
(13,42,1)
(2,40,1)
(22,1,1)
(32,30,1)
(38,25,1)
(47,13,1)
(4,40,1)
(12,29,1)
(26,20,1)
(43,4,1)
(27,17,1)
(3,35,1)
(36,41,1)
(28,39,1)
(4,35,1)
(29,15,1)
(33,46,1)
(20,22,1)
(45,2,1)
(25,33,1)
(39,35,1)
(40,27,1)
(30,38,1)
(41,23,1)
(34,44,1)
(45,8,1)
(4,32,1)
(38,40,1)
(2,25,1)
(8,43,1)
(14,42,1)
(1,12,1)
(4,25,1)
(38,34,1)
(15,21,1)
(19,36,2)
(4,35,2)
(30,2,2)
(10,2,2)
(8,2,2)
(2,25,2)
(17,42,2)
(38,40,2)
(4,40,2)
(40,42,2)
(1,12,2)
(38,2,2)
(34,2,2)
(2,40,2)
(32,2,2)
(38,25,2)
(44,2,2)
(4,25,2)
(40,27,2)
(27,42,2)
(39,35,2)
(38,35,2)
(14,42,2)
(43,2,2)
(4,2,2)
-----------------------------------
(0,100)
(1,source[100-1])
(2,data < 100)
(3,source)
(4,dest[data])
(5,\\\'A\\\')
(6,)
(7,)
(8,dest[data] = \\\'\\\\0\\\')
(9,data)
(10,dest)
(11,)
(12,100-1)
(13,dest)
(14,data)
(15,100)
(16,if(globalReturnsTrue()
(17,1)
(18,source)
(19,memset(source, \\\'A\\\', 100-1)
(20,source[100-1] = \\\'\\\\0\\\')
(21,source)
(22,\\\'\\\\0\\\')
(23,100)
(24,if (data < 100)
(25,data = 0)
(26,data)
(27,-1)
(28,RET)
(29,1)
(30,dest)
(31,dest)
(32,data)
(33,0)
(34,data)
(35,dest[100] = "")
(36,100-1)
(37,)
(38,memmove(dest, source, data)
(39,printLine(dest)
(40,data = -1)
(41,1)
(42,globalReturnsTrue()
(43,\\\'\\\\0\\\')
(44,source)
(45,dest)
(46,data)
(47,"")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^