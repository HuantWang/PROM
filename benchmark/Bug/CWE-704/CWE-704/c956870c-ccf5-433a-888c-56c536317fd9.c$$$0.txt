-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_18_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    goto source;
source:
    /* FLAW: Use a value input from the console using fscanf() */
    fscanf (stdin, "%hd", &data);
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
30,33
30,34
30,35
30,36
31,32
32,33
32,34
34,35
34,36
36,37
38,39
39,40
39,41
41,42
41,43
41,44
43,44
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
66,68
67,68
67,69
68,69
71,72
71,73
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,26,29,33,35,37,40,42,44,46,50,52,53,55,56,61,63,64,65,69,70,75,77,79,81,86,88,89,93,95
-----computeFrom-----
12,13
12,14
54,55
54,56
58,59
58,60
62,63
62,64
67,68
67,69
83,84
83,85
-----guardedBy-----
69,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_18_bad(){    short data;    /* Initialize data */    data = 0;    goto source;source:    /* FLAW: Use a value input from the console using fscanf() */    fscanf (stdin, "%hd", &data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_18_bad()
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_18_bad
{    short data;    /* Initialize data */    data = 0;    goto source;source:    /* FLAW: Use a value input from the console using fscanf() */    fscanf (stdin, "%hd", &data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    /* FLAW: Use a value input from the console using fscanf() */    fscanf (stdin, "%hd", &data);
source
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(29,38,0)
(21,47,0)
(31,11,0)
(37,30,0)
(44,2,0)
(18,43,0)
(5,2,0)
(14,44,0)
(10,40,0)
(24,44,0)
(38,13,0)
(12,2,0)
(17,41,0)
(0,8,0)
(35,43,0)
(8,27,0)
(16,47,0)
(13,2,0)
(11,41,0)
(9,3,0)
(15,43,0)
(2,20,0)
(7,38,0)
(40,47,0)
(13,38,0)
(46,20,0)
(19,41,0)
(31,30,0)
(38,20,0)
(3,8,0)
(25,11,0)
(26,2,0)
(41,20,0)
(40,41,0)
(44,27,0)
(39,20,0)
(3,2,0)
(32,35,0)
(43,41,0)
(47,40,0)
(34,40,0)
(22,20,0)
(1,12,0)
(45,44,0)
(4,3,0)
(35,41,0)
(44,43,0)
(23,12,0)
(3,43,0)
(30,31,0)
(28,30,0)
(36,13,0)
(42,31,0)
(33,41,0)
(25,31,1)
(7,46,1)
(43,18,1)
(15,38,1)
(35,32,1)
(31,30,1)
(45,14,1)
(13,2,1)
(3,43,1)
(12,23,1)
(10,34,1)
(14,12,1)
(8,0,1)
(44,2,1)
(44,24,1)
(30,28,1)
(40,47,1)
(16,21,1)
(44,43,1)
(47,16,1)
(34,43,1)
(3,2,1)
(29,7,1)
(46,2,1)
(21,10,1)
(4,44,1)
(6,35,1)
(23,1,1)
(1,11,1)
(9,4,1)
(32,12,1)
(0,3,1)
(36,29,1)
(18,15,1)
(42,40,1)
(5,26,1)
(24,45,1)
(38,13,1)
(13,36,1)
(28,37,1)
(2,5,1)
(37,42,1)
(35,43,1)
(3,9,1)
(12,2,1)
(11,25,1)
(32,8,1)
(38,13,2)
(3,2,2)
(31,30,2)
(45,12,2)
(13,2,2)
(44,12,2)
(14,12,2)
(3,12,2)
(3,43,2)
(44,2,2)
(24,12,2)
(9,12,2)
(8,12,2)
(40,47,2)
(12,2,2)
(0,12,2)
(35,43,2)
(4,12,2)
(44,43,2)
-----------------------------------
(0,\\\'\\\\0\\\')
(1,data)
(2,data = 0)
(3,dest[data])
(4,dest)
(5,0)
(6,RET)
(7,stdin)
(8,dest[data] = \\\'\\\\0\\\')
(9,data)
(10,\\\'A\\\')
(11,source[100-1] = \\\'\\\\0\\\')
(12,data < 100)
(13,&data)
(14,dest)
(15,dest)
(16,1)
(17,dest)
(18,"")
(19,source)
(20,)
(21,100)
(22,source:)
(23,100)
(24,data)
(25,\\\'\\\\0\\\')
(26,data)
(27,)
(28,1)
(29,"%hd")
(30,100-1)
(31,source[100-1])
(32,dest)
(33,if (data < 100)
(34,source)
(35,printLine(dest)
(36,data)
(37,100)
(38,fscanf (stdin, "%hd", &data)
(39,data)
(40,memset(source, \\\'A\\\', 100-1)
(41,)
(42,source)
(43,dest[100] = "")
(44,strncpy(dest, source, data)
(45,source)
(46,goto source;)
(47,100-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^