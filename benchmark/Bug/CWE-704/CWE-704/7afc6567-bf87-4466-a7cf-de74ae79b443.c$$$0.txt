-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_13_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
27,28
28,29
30,31
30,32
30,33
30,34
30,35
30,36
31,32
32,33
32,34
34,35
34,36
36,37
38,39
39,40
39,41
41,42
41,43
41,44
43,44
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
66,68
67,68
67,69
68,69
71,72
71,73
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,14,16,20,21,26,29,33,35,37,40,42,44,46,50,52,53,55,56,61,63,64,65,69,70,75,77,79,81,86,88,89,93,95
-----computeFrom-----
12,13
12,14
18,19
18,20
24,25
24,26
54,55
54,56
58,59
58,60
62,63
62,64
67,68
67,69
83,84
83,85
-----guardedBy-----
69,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_13_bad(){    int data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_13_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_13_bad
{    int data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(22,36,0)
(47,43,0)
(9,43,0)
(17,3,0)
(34,41,0)
(14,41,0)
(33,5,0)
(48,24,0)
(3,46,0)
(3,18,0)
(48,12,0)
(2,9,0)
(45,12,0)
(35,8,0)
(12,27,0)
(3,12,0)
(19,9,0)
(13,12,0)
(4,46,0)
(48,21,0)
(3,21,0)
(20,27,0)
(15,46,0)
(1,46,0)
(29,45,0)
(31,48,0)
(1,41,0)
(7,21,0)
(16,8,0)
(41,27,0)
(40,49,0)
(36,8,0)
(49,12,0)
(23,21,0)
(39,5,0)
(21,30,0)
(45,21,0)
(43,41,0)
(42,18,0)
(46,41,0)
(48,46,0)
(32,27,0)
(37,36,0)
(10,41,0)
(21,23,0)
(12,49,0)
(25,1,0)
(18,24,0)
(6,45,0)
(8,36,0)
(8,41,0)
(0,2,0)
(28,3,0)
(38,48,0)
(11,48,0)
(9,2,0)
(44,2,0)
(47,9,1)
(16,35,1)
(35,46,1)
(26,1,1)
(3,28,1)
(44,0,1)
(42,3,1)
(0,19,1)
(29,6,1)
(7,5,1)
(2,44,1)
(46,15,1)
(21,23,1)
(12,49,1)
(39,33,1)
(33,12,1)
(43,47,1)
(45,29,1)
(8,36,1)
(45,21,1)
(17,48,1)
(3,21,1)
(45,12,1)
(19,8,1)
(25,45,1)
(6,43,1)
(40,13,1)
(9,2,1)
(15,4,1)
(48,46,1)
(48,31,1)
(18,42,1)
(11,45,1)
(5,39,1)
(22,16,1)
(23,7,1)
(37,22,1)
(3,12,1)
(28,17,1)
(36,37,1)
(48,12,1)
(38,11,1)
(4,21,1)
(1,46,1)
(1,25,1)
(3,46,1)
(25,18,1)
(4,5,1)
(49,40,1)
(31,38,1)
(48,21,1)
(23,5,2)
(12,49,2)
(28,45,2)
(7,5,2)
(3,45,2)
(31,45,2)
(21,5,2)
(48,46,2)
(48,21,2)
(42,45,2)
(1,46,2)
(3,46,2)
(18,45,2)
(45,21,2)
(38,45,2)
(21,23,2)
(3,21,2)
(17,45,2)
(9,2,2)
(11,45,2)
(48,45,2)
(48,12,2)
(3,12,2)
(45,12,2)
(8,36,2)
-----------------------------------
(0,100)
(1,printLine(dest)
(2,100-1)
(3,dest[data])
(4,dest)
(5,GLOBAL_CONST_FIVE==5)
(6,data)
(7,data)
(8,memset(source, \\\'A\\\', 100-1)
(9,source[100-1])
(10,source)
(11,dest)
(12,data = -1)
(13,data)
(14,if (data < 100)
(15,"")
(16,\\\'A\\\')
(17,dest)
(18,dest[data] = \\\'\\\\0\\\')
(19,source)
(20,if(GLOBAL_CONST_FIVE==5)
(21,data = RAND32()
(22,100)
(23,RAND32()
(24,)
(25,dest)
(26,RET)
(27,)
(28,data)
(29,100)
(30,)
(31,data)
(32,data)
(33,GLOBAL_CONST_FIVE)
(34,dest)
(35,source)
(36,100-1)
(37,1)
(38,source)
(39,5)
(40,1)
(41,)
(42,\\\'\\\\0\\\')
(43,source[100-1] = \\\'\\\\0\\\')
(44,1)
(45,data < 100)
(46,dest[100] = "")
(47,\\\'\\\\0\\\')
(48,strncpy(dest, source, data)
(49,-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^