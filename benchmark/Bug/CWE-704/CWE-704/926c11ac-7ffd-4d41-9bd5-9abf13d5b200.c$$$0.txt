-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_10_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(globalTrue)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
19,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
26,29
26,30
26,31
26,32
27,28
28,29
28,30
30,31
30,32
32,33
34,35
35,36
35,37
37,38
37,39
37,40
39,40
41,42
43,44
44,45
44,46
44,47
44,48
45,46
47,48
50,51
50,52
53,54
54,55
54,56
55,56
55,57
56,57
58,59
58,60
62,63
62,64
63,64
63,65
64,65
67,68
67,69
68,69
69,70
69,71
69,72
69,73
70,71
72,73
74,75
76,77
78,79
79,80
79,81
80,81
80,82
81,82
83,84
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,14,15,18,23,25,29,31,33,36,38,40,42,46,48,49,51,52,57,59,60,61,65,66,71,73,75,77,82,84,85,89,91
-----computeFrom-----
12,13
12,14
21,22
21,23
50,51
50,52
54,55
54,56
58,59
58,60
63,64
63,65
79,80
79,81
-----guardedBy-----
65,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_10_bad(){    short data;    /* Initialize data */    data = 0;    if(globalTrue)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_memmove_10_bad()
CWE194_Unexpected_Sign_Extension__negative_memmove_10_bad
{    short data;    /* Initialize data */    data = 0;    if(globalTrue)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalTrue)    {        /* FLAW: Use a negative number */        data = -1;    }
globalTrue
globalTrue
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(15,23,0)
(40,23,0)
(3,17,0)
(28,23,0)
(8,14,0)
(31,43,0)
(10,14,0)
(16,13,0)
(19,20,0)
(7,45,0)
(25,23,0)
(12,6,0)
(31,14,0)
(0,43,0)
(38,6,0)
(37,45,0)
(35,23,0)
(26,23,0)
(45,2,0)
(30,34,0)
(38,13,0)
(27,6,0)
(4,35,0)
(46,15,0)
(47,11,0)
(34,2,0)
(24,8,0)
(43,17,0)
(5,31,0)
(14,39,0)
(45,14,0)
(32,35,0)
(22,45,0)
(45,43,0)
(20,43,0)
(42,40,0)
(9,11,0)
(14,8,0)
(45,15,0)
(18,17,0)
(20,15,0)
(6,38,0)
(21,43,0)
(20,14,0)
(44,38,0)
(1,15,0)
(40,15,0)
(11,35,0)
(23,17,0)
(33,20,0)
(20,34,0)
(35,11,0)
(13,23,0)
(29,31,0)
(20,33,1)
(35,11,1)
(31,43,1)
(45,7,1)
(13,16,1)
(22,31,1)
(44,35,1)
(34,30,1)
(45,14,1)
(47,4,1)
(32,15,1)
(27,44,1)
(16,38,1)
(37,22,1)
(19,45,1)
(36,40,1)
(29,13,1)
(14,8,1)
(38,6,1)
(6,12,1)
(42,34,1)
(31,5,1)
(4,32,1)
(15,46,1)
(1,14,1)
(9,47,1)
(1,41,1)
(45,15,1)
(20,15,1)
(0,21,1)
(12,27,1)
(31,14,1)
(33,19,1)
(20,43,1)
(5,29,1)
(30,20,1)
(24,10,1)
(8,24,1)
(40,15,1)
(46,1,1)
(45,43,1)
(41,43,1)
(20,14,1)
(43,0,1)
(7,37,1)
(11,9,1)
(40,42,1)
(10,41,1)
(42,31,1)
(33,31,2)
(22,31,2)
(35,11,2)
(30,31,2)
(24,41,2)
(14,41,2)
(45,43,2)
(37,31,2)
(19,31,2)
(31,43,2)
(20,31,2)
(7,31,2)
(40,15,2)
(45,14,2)
(20,14,2)
(20,43,2)
(34,31,2)
(45,31,2)
(10,41,2)
(14,8,2)
(38,6,2)
(45,15,2)
(20,15,2)
(31,14,2)
(8,41,2)
-----------------------------------
(0,0)
(1,dest)
(2,)
(3,if(globalTrue)
(4,\\\'A\\\')
(5,100)
(6,100-1)
(7,data)
(8,-1)
(9,1)
(10,data)
(11,100-1)
(12,1)
(13,source[100-1] = \\\'\\\\0\\\')
(14,data = -1)
(15,dest[100] = "")
(16,\\\'\\\\0\\\')
(17,)
(18,data)
(19,dest)
(20,dest[data])
(21,data)
(22,dest)
(23,)
(24,1)
(25,if (data < 100)
(26,dest)
(27,100)
(28,source)
(29,data)
(30,\\\'\\\\0\\\')
(31,data < 100)
(32,source)
(33,data)
(34,dest[data] = \\\'\\\\0\\\')
(35,memset(source, \\\'A\\\', 100-1)
(36,RET)
(37,source)
(38,source[100-1])
(39,)
(40,printLine(dest)
(41,globalTrue)
(42,dest)
(43,data = 0)
(44,source)
(45,memmove(dest, source, data)
(46,"")
(47,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^