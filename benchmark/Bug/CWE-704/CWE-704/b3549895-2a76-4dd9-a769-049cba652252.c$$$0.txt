-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_01_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Set data to a random value */
    data = RAND32();
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
22,23
24,25
24,26
24,27
24,28
24,29
24,30
25,26
26,27
26,28
28,29
28,30
30,31
32,33
33,34
33,35
35,36
35,37
35,38
37,38
39,40
41,42
42,43
42,44
42,45
42,46
43,44
45,46
48,49
48,50
51,52
52,53
52,54
53,54
53,55
54,55
56,57
56,58
60,61
60,62
61,62
61,63
62,63
65,66
65,67
66,67
67,68
67,69
67,70
67,71
68,69
70,71
72,73
74,75
76,77
77,78
77,79
78,79
78,80
79,80
81,82
84,85
85,86
85,87
86,87
88,89
-----nextToken-----
2,4,8,10,14,16,20,23,27,29,31,34,36,38,40,44,46,47,49,50,55,57,58,59,63,64,69,71,73,75,80,82,83,87,89
-----computeFrom-----
12,13
12,14
18,19
18,20
48,49
48,50
52,53
52,54
56,57
56,58
61,62
61,63
77,78
77,79
-----guardedBy-----
63,82
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_01_bad(){    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_01_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_01_bad
{    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(18,26,0)
(30,26,0)
(12,21,0)
(36,40,0)
(9,23,0)
(15,23,0)
(13,33,0)
(27,14,0)
(43,32,0)
(2,11,0)
(6,33,0)
(16,0,0)
(37,33,0)
(10,0,0)
(20,22,0)
(22,5,0)
(33,44,0)
(42,33,0)
(11,34,0)
(34,11,0)
(26,13,0)
(4,35,0)
(34,33,0)
(1,30,0)
(32,21,0)
(22,0,0)
(28,22,0)
(26,30,0)
(24,35,0)
(3,40,0)
(19,34,0)
(22,35,0)
(14,5,0)
(35,24,0)
(29,30,0)
(0,33,0)
(38,11,0)
(31,33,0)
(25,13,0)
(7,37,0)
(40,0,0)
(35,44,0)
(21,32,0)
(40,35,0)
(37,0,0)
(40,14,0)
(23,35,0)
(8,22,0)
(39,34,0)
(17,44,0)
(21,44,0)
(2,38,1)
(28,23,1)
(23,9,1)
(0,16,1)
(4,21,1)
(37,0,1)
(34,11,1)
(10,35,1)
(16,10,1)
(25,26,1)
(41,37,1)
(23,35,1)
(19,0,1)
(27,40,1)
(9,15,1)
(21,32,1)
(43,12,1)
(24,4,1)
(7,23,1)
(40,3,1)
(37,7,1)
(11,2,1)
(36,22,1)
(14,27,1)
(38,39,1)
(30,29,1)
(20,28,1)
(18,34,1)
(22,8,1)
(35,24,1)
(13,25,1)
(1,18,1)
(22,35,1)
(32,43,1)
(40,0,1)
(40,35,1)
(29,1,1)
(39,19,1)
(7,14,1)
(15,13,1)
(26,30,1)
(22,0,1)
(8,20,1)
(3,36,1)
(40,35,2)
(14,23,2)
(34,11,2)
(26,30,2)
(37,0,2)
(21,32,2)
(40,0,2)
(35,24,2)
(40,23,2)
(23,35,2)
(22,35,2)
(22,0,2)
(8,23,2)
(28,23,2)
(27,23,2)
(22,23,2)
(20,23,2)
(36,23,2)
(3,23,2)
-----------------------------------
(0,dest[100] = "")
(1,100)
(2,1)
(3,data)
(4,data)
(5,)
(6,source)
(7,dest)
(8,data)
(9,100)
(10,dest)
(11,100-1)
(12,data)
(13,source[100-1] = \\\'\\\\0\\\')
(14,dest[data] = \\\'\\\\0\\\')
(15,data)
(16,"")
(17,data)
(18,source)
(19,source)
(20,source)
(21,data = -1)
(22,strncpy(dest, source, data)
(23,data < 100)
(24,RAND32()
(25,\\\'\\\\0\\\')
(26,source[100-1])
(27,\\\'\\\\0\\\')
(28,dest)
(29,1)
(30,100-1)
(31,dest)
(32,-1)
(33,)
(34,memset(source, \\\'A\\\', 100-1)
(35,data = RAND32()
(36,dest)
(37,printLine(dest)
(38,100)
(39,\\\'A\\\')
(40,dest[data])
(41,RET)
(42,if (data < 100)
(43,1)
(44,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^