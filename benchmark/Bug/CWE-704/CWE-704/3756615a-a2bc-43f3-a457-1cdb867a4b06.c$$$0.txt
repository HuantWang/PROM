-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fgets_strncpy_01_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
19,21
21,22
21,23
21,24
23,24
24,25
26,27
28,29
28,30
28,31
29,30
29,31
30,31
30,32
30,33
30,34
31,32
33,34
35,36
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
57,58
57,59
57,60
57,61
57,62
57,63
58,59
59,60
59,61
61,62
61,63
63,64
65,66
66,67
66,68
68,69
68,70
68,71
70,71
72,73
74,75
75,76
75,77
75,78
75,79
76,77
78,79
81,82
81,83
84,85
85,86
85,87
86,87
86,88
87,88
89,90
89,91
93,94
93,95
94,95
94,96
95,96
98,99
98,100
99,100
100,101
100,102
100,103
100,104
101,102
103,104
105,106
107,108
109,110
110,111
110,112
111,112
111,113
112,113
114,115
117,118
118,119
118,120
119,120
121,122
-----nextToken-----
2,4,8,10,14,16,20,22,25,27,32,34,36,38,40,45,48,50,55,56,60,62,64,67,69,71,73,77,79,80,82,83,88,90,91,92,96,97,102,104,106,108,113,115,116,120,122
-----computeFrom-----
12,13
12,14
29,30
29,31
43,44
43,45
81,82
81,83
85,86
85,87
89,90
89,91
94,95
94,96
110,111
110,112
-----guardedBy-----
34,50
96,115
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fgets_strncpy_01_bad(){    int data;    /* Initialize data */    data = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_strncpy_01_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_strncpy_01_bad
{    int data;    /* Initialize data */    data = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(4,38,0)
(12,27,0)
(13,58,0)
(43,56,0)
(37,41,0)
(14,58,0)
(56,38,0)
(29,48,0)
(32,58,0)
(19,35,0)
(49,42,0)
(59,49,0)
(30,25,0)
(50,58,0)
(24,4,0)
(20,12,0)
(36,43,0)
(51,58,0)
(57,18,0)
(10,13,0)
(16,48,0)
(7,28,0)
(9,28,0)
(31,28,0)
(26,17,0)
(41,48,0)
(28,25,0)
(3,27,0)
(12,42,0)
(41,42,0)
(23,45,0)
(40,28,0)
(35,58,0)
(49,56,0)
(61,9,0)
(1,18,0)
(60,50,0)
(5,41,0)
(18,19,0)
(8,38,0)
(22,23,0)
(42,6,0)
(25,4,0)
(12,48,0)
(46,49,0)
(21,42,0)
(48,58,0)
(41,56,0)
(42,30,0)
(53,35,0)
(55,56,0)
(11,41,0)
(17,13,0)
(56,43,0)
(30,42,0)
(33,4,0)
(39,25,0)
(34,25,0)
(41,0,0)
(50,48,0)
(19,18,0)
(47,13,0)
(27,0,0)
(58,38,0)
(28,9,0)
(52,17,0)
(15,19,0)
(12,56,0)
(13,17,0)
(54,30,0)
(2,12,0)
(48,29,1)
(22,9,1)
(11,49,1)
(15,13,1)
(41,5,1)
(2,20,1)
(52,47,1)
(36,55,1)
(30,25,1)
(41,42,1)
(34,56,1)
(12,56,1)
(43,36,1)
(41,48,1)
(29,16,1)
(57,15,1)
(47,10,1)
(16,42,1)
(12,2,1)
(23,22,1)
(12,42,1)
(7,31,1)
(17,26,1)
(12,48,1)
(16,23,1)
(9,28,1)
(31,25,1)
(19,18,1)
(30,54,1)
(41,56,1)
(37,11,1)
(26,52,1)
(44,50,1)
(61,28,1)
(13,17,1)
(56,43,1)
(10,48,1)
(50,60,1)
(3,12,1)
(35,53,1)
(28,40,1)
(9,61,1)
(50,48,1)
(25,39,1)
(20,41,1)
(21,9,1)
(42,30,1)
(28,25,1)
(60,49,1)
(27,3,1)
(49,42,1)
(39,34,1)
(60,27,1)
(54,21,1)
(49,59,1)
(53,19,1)
(40,7,1)
(1,57,1)
(59,46,1)
(49,56,1)
(46,35,1)
(18,1,1)
(5,37,1)
(3,49,2)
(42,30,2)
(2,49,2)
(12,49,2)
(12,56,2)
(13,17,2)
(41,42,2)
(27,49,2)
(20,49,2)
(12,42,2)
(41,48,2)
(28,25,2)
(19,18,2)
(56,43,2)
(5,49,2)
(30,9,2)
(49,42,2)
(41,56,2)
(21,9,2)
(30,25,2)
(37,49,2)
(41,49,2)
(42,9,2)
(23,9,2)
(12,48,2)
(54,9,2)
(11,49,2)
(50,48,2)
(9,28,2)
(22,9,2)
(49,56,2)
-----------------------------------
(0,)
(1,1)
(2,data)
(3,\\\'\\\\0\\\')
(4,)
(5,data)
(6,)
(7,CHAR_ARRAY_SIZE)
(8,data)
(9,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(10,source)
(11,dest)
(12,dest[data])
(13,memset(source, \\\'A\\\', 100-1)
(14,source)
(15,source)
(16,dest)
(17,100-1)
(18,100-1)
(19,source[100-1])
(20,dest)
(21,data)
(22,"fgets()
(23,printLine("fgets()
(24,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(25,inputBuffer[CHAR_ARRAY_SIZE] = "")
(26,1)
(27,dest[data] = \\\'\\\\0\\\')
(28,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(29,"")
(30,atoi(inputBuffer)
(31,inputBuffer)
(32,if (data < 100)
(33,inputBuffer)
(34,inputBuffer)
(35,source[100-1] = \\\'\\\\0\\\')
(36,1)
(37,source)
(38,)
(39,"")
(40,stdin)
(41,strncpy(dest, source, data)
(42,data = atoi(inputBuffer)
(43,-1)
(44,RET)
(45,)
(46,data)
(47,\\\'A\\\')
(48,dest[100] = "")
(49,data < 100)
(50,printLine(dest)
(51,dest)
(52,100)
(53,\\\'\\\\0\\\')
(54,inputBuffer)
(55,data)
(56,data = -1)
(57,100)
(58,)
(59,100)
(60,dest)
(61,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^