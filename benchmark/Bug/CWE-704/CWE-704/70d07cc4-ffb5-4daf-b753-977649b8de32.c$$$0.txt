-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_fgets_18_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    goto source;
source:
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* FLAW: Use a number input from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to short */
            data = (short)atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
19,20
19,21
21,22
21,23
22,23
23,24
23,25
25,26
25,27
25,28
27,28
28,29
30,31
32,33
32,34
32,35
33,34
33,35
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
51,53
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
62,63
65,66
65,67
66,67
67,68
67,69
69,70
69,71
71,72
72,73
72,74
73,74
73,75
76,77
78,79
79,80
79,81
80,81
82,83
-----nextToken-----
2,4,8,10,14,16,18,20,24,26,29,31,36,38,40,42,44,49,52,53,56,58,63,64,68,70,74,75,77,81,83
-----computeFrom-----
12,13
12,14
33,34
33,35
47,48
47,49
-----guardedBy-----
38,58
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_fgets_18_bad(){    short data;    /* Initialize data */    data = -1;    goto source;source:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* FLAW: Use a number input from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_fgets_18_bad()
CWE197_Numeric_Truncation_Error__short_fgets_18_bad
{    short data;    /* Initialize data */    data = -1;    goto source;source:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* FLAW: Use a number input from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
goto source;
source
source:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* FLAW: Use a number input from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
source
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* FLAW: Use a number input from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to short */            data = (short)atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to short */            data = (short)atoi(inputBuffer);        }
data = (short)atoi(inputBuffer);
data = (short)atoi(inputBuffer)
data
data
(short)atoi(inputBuffer)
short
short

atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(10,14,0)
(12,20,0)
(20,21,0)
(32,8,0)
(7,37,0)
(13,34,0)
(5,0,0)
(38,30,0)
(11,26,0)
(20,12,0)
(12,23,0)
(37,12,0)
(17,39,0)
(27,14,0)
(0,30,0)
(39,20,0)
(37,7,0)
(2,37,0)
(37,2,0)
(4,34,0)
(24,0,0)
(1,34,0)
(31,4,0)
(0,8,0)
(11,7,0)
(19,11,0)
(28,34,0)
(29,8,0)
(16,7,0)
(18,27,0)
(25,4,0)
(30,0,0)
(21,20,0)
(33,26,0)
(3,0,0)
(37,14,0)
(20,39,0)
(22,12,0)
(9,37,0)
(7,26,0)
(14,34,0)
(26,34,0)
(39,8,0)
(6,36,0)
(8,4,0)
(15,6,0)
(14,27,0)
(17,22,1)
(0,8,1)
(16,12,1)
(35,11,1)
(20,39,1)
(9,16,1)
(11,19,1)
(30,0,1)
(39,17,1)
(29,32,1)
(12,20,1)
(0,3,1)
(11,7,1)
(7,37,1)
(32,28,1)
(18,10,1)
(37,2,1)
(38,0,1)
(20,21,1)
(27,18,1)
(19,7,1)
(39,8,1)
(22,30,1)
(37,9,1)
(37,14,1)
(37,12,1)
(30,38,1)
(8,29,1)
(15,30,1)
(16,6,1)
(5,24,1)
(24,8,1)
(28,14,1)
(14,27,1)
(6,15,1)
(3,5,1)
(39,30,2)
(12,30,2)
(30,0,2)
(7,37,2)
(14,27,2)
(20,39,2)
(15,30,2)
(11,7,2)
(17,30,2)
(0,8,2)
(39,8,2)
(37,2,2)
(12,20,2)
(37,14,2)
(6,30,2)
(22,30,2)
(37,12,2)
(20,30,2)
(20,21,2)
-----------------------------------
(0,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(1,data)
(2,char)
(3,stdin)
(4,)
(5,CHAR_ARRAY_SIZE)
(6,printLine("fgets()
(7,charData = (char)
(8,inputBuffer[CHAR_ARRAY_SIZE] = "")
(9,data)
(10,data)
(11,printHexCharLine(charData)
(12,data = (short)
(13,source:)
(14,data = -1)
(15,"fgets()
(16,charData)
(17,inputBuffer)
(18,1)
(19,charData)
(20,(short)
(21,short)
(22,data)
(23,)
(24,inputBuffer)
(25,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(26,)
(27,-1)
(28,goto source;)
(29,"")
(30,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(31,inputBuffer)
(32,inputBuffer)
(33,charData)
(34,)
(35,RET)
(36,)
(37,(char)
(38,NULL)
(39,atoi(inputBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^