-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_03_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(5==5)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
27,32
27,33
28,29
29,30
29,31
31,32
31,33
33,34
35,36
36,37
36,38
38,39
38,40
38,41
40,41
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
63,65
64,65
64,66
65,66
68,69
68,70
69,70
70,71
70,72
70,73
70,74
71,72
73,74
75,76
77,78
79,80
80,81
80,82
81,82
81,83
82,83
84,85
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,30,32,34,37,39,41,43,47,49,50,52,53,58,60,61,62,66,67,72,74,76,78,83,85,86,90,92
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
80,81
80,82
-----guardedBy-----
66,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_03_bad(){    short data;    /* Initialize data */    data = 0;    if(5==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_memmove_03_bad()
CWE194_Unexpected_Sign_Extension__negative_memmove_03_bad
{    short data;    /* Initialize data */    data = 0;    if(5==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* FLAW: Use a negative number */        data = -1;    }
5==5
5
5
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(48,38,0)
(16,48,0)
(0,38,0)
(44,24,0)
(7,48,0)
(37,45,0)
(23,5,0)
(35,1,0)
(46,11,0)
(29,10,0)
(22,27,0)
(27,1,0)
(10,11,0)
(2,45,0)
(3,0,0)
(36,35,0)
(2,24,0)
(48,11,0)
(18,2,0)
(3,11,0)
(41,3,0)
(4,0,0)
(34,6,0)
(3,36,0)
(20,1,0)
(31,6,0)
(9,31,0)
(26,10,0)
(10,27,0)
(6,31,0)
(25,48,0)
(31,35,0)
(15,36,0)
(17,36,0)
(40,6,0)
(39,24,0)
(14,35,0)
(30,31,0)
(11,46,0)
(24,2,0)
(47,27,0)
(49,35,0)
(8,14,0)
(14,36,0)
(11,21,0)
(28,5,0)
(48,36,0)
(19,1,0)
(45,35,0)
(32,11,0)
(48,27,0)
(43,35,0)
(33,35,0)
(42,3,0)
(13,46,0)
(3,27,0)
(37,2,1)
(48,27,1)
(10,27,1)
(41,42,1)
(16,7,1)
(46,13,1)
(11,46,1)
(24,44,1)
(2,24,1)
(47,22,1)
(39,18,1)
(0,4,1)
(3,41,1)
(15,11,1)
(32,5,1)
(45,37,1)
(28,27,1)
(26,45,1)
(48,36,1)
(10,29,1)
(36,17,1)
(3,36,1)
(3,27,1)
(14,36,1)
(17,15,1)
(34,40,1)
(48,11,1)
(8,0,1)
(7,10,1)
(5,23,1)
(42,48,1)
(3,11,1)
(6,34,1)
(31,6,1)
(18,31,1)
(13,32,1)
(15,5,1)
(12,14,1)
(30,9,1)
(10,11,1)
(25,16,1)
(8,10,1)
(44,39,1)
(4,3,1)
(48,25,1)
(14,8,1)
(23,28,1)
(9,36,1)
(29,26,1)
(27,47,1)
(40,30,1)
(11,46,2)
(16,10,2)
(31,6,2)
(48,27,2)
(48,10,2)
(4,10,2)
(3,36,2)
(11,5,2)
(42,10,2)
(13,5,2)
(3,11,2)
(10,27,2)
(7,10,2)
(48,11,2)
(46,5,2)
(48,36,2)
(3,27,2)
(14,36,2)
(10,11,2)
(0,10,2)
(32,5,2)
(25,10,2)
(41,10,2)
(3,10,2)
(2,24,2)
-----------------------------------
(0,dest[data] = \\\'\\\\0\\\')
(1,)
(2,source[100-1])
(3,dest[data])
(4,\\\'\\\\0\\\')
(5,5==5)
(6,100-1)
(7,dest)
(8,dest)
(9,source)
(10,data < 100)
(11,data = -1)
(12,RET)
(13,1)
(14,printLine(dest)
(15,dest)
(16,source)
(17,"")
(18,source)
(19,if(5==5)
(20,data)
(21,)
(22,data)
(23,5)
(24,100-1)
(25,data)
(26,data)
(27,data = 0)
(28,5)
(29,100)
(30,\\\'A\\\')
(31,memset(source, \\\'A\\\', 100-1)
(32,data)
(33,if (data < 100)
(34,1)
(35,)
(36,dest[100] = "")
(37,\\\'\\\\0\\\')
(38,)
(39,100)
(40,100)
(41,data)
(42,dest)
(43,source)
(44,1)
(45,source[100-1] = \\\'\\\\0\\\')
(46,-1)
(47,0)
(48,memmove(dest, source, data)
(49,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^