-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fgets_strncpy_21_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    badStatic = 1; /* true */
    data = badSource(data);
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
22,23
23,24
23,25
24,25
26,27
26,28
27,28
29,30
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,16,20,21,25,28,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
18,19
18,20
23,24
23,25
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fgets_strncpy_21_bad(){    int data;    /* Initialize data */    data = -1;    badStatic = 1; /* true */    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_strncpy_21_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_strncpy_21_bad
{    int data;    /* Initialize data */    data = -1;    badStatic = 1; /* true */    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(41,32,0)
(46,19,0)
(36,32,0)
(45,29,0)
(48,11,0)
(21,9,0)
(18,1,0)
(24,19,0)
(0,21,0)
(25,21,0)
(19,9,0)
(31,21,0)
(43,12,0)
(2,47,0)
(29,40,0)
(26,21,0)
(29,4,0)
(24,4,0)
(32,4,0)
(16,20,0)
(44,40,0)
(16,25,0)
(37,9,0)
(15,40,0)
(32,14,0)
(11,14,0)
(19,12,0)
(28,24,0)
(26,47,0)
(4,24,0)
(29,11,0)
(17,20,0)
(3,26,0)
(33,1,0)
(39,20,0)
(13,16,0)
(4,9,0)
(7,9,0)
(27,47,0)
(30,37,0)
(8,21,0)
(35,29,0)
(5,32,0)
(23,4,0)
(6,21,0)
(22,37,0)
(12,19,0)
(1,4,0)
(20,16,0)
(32,40,0)
(0,40,0)
(42,25,0)
(34,26,0)
(38,0,0)
(47,26,0)
(40,21,0)
(1,4,1)
(29,40,1)
(18,25,1)
(0,38,1)
(25,42,1)
(3,40,1)
(26,47,1)
(2,27,1)
(35,32,1)
(32,40,1)
(1,33,1)
(45,35,1)
(33,18,1)
(16,20,1)
(5,41,1)
(10,0,1)
(47,2,1)
(13,26,1)
(24,28,1)
(29,4,1)
(23,37,1)
(43,46,1)
(39,13,1)
(17,39,1)
(28,23,1)
(27,34,1)
(24,19,1)
(48,29,1)
(15,4,1)
(12,43,1)
(30,22,1)
(34,3,1)
(42,16,1)
(0,40,1)
(38,1,1)
(41,1,1)
(32,36,1)
(29,45,1)
(22,19,1)
(40,44,1)
(4,24,1)
(32,4,1)
(44,15,1)
(11,48,1)
(38,11,1)
(20,17,1)
(36,5,1)
(37,30,1)
(19,12,1)
(4,24,2)
(5,1,2)
(35,1,2)
(0,40,2)
(45,1,2)
(48,1,2)
(16,20,2)
(26,47,2)
(36,1,2)
(32,40,2)
(41,1,2)
(11,1,2)
(29,1,2)
(32,4,2)
(29,40,2)
(1,4,2)
(19,12,2)
(24,19,2)
(29,4,2)
(32,1,2)
-----------------------------------
(0,printLine(dest)
(1,data < 100)
(2,1)
(3,source)
(4,data = badSource(data)
(5,source)
(6,source)
(7,data)
(8,dest)
(9,)
(10,RET)
(11,dest[data] = \\\'\\\\0\\\')
(12,-1)
(13,source)
(14,)
(15,dest)
(16,source[100-1])
(17,1)
(18,data)
(19,data = -1)
(20,100-1)
(21,)
(22,badStatic)
(23,data)
(24,badSource(data)
(25,source[100-1] = \\\'\\\\0\\\')
(26,memset(source, \\\'A\\\', 100-1)
(27,100)
(28,data)
(29,dest[data])
(30,1)
(31,if (data < 100)
(32,strncpy(dest, source, data)
(33,100)
(34,\\\'A\\\')
(35,dest)
(36,data)
(37,badStatic = 1)
(38,dest)
(39,100)
(40,dest[100] = "")
(41,dest)
(42,\\\'\\\\0\\\')
(43,1)
(44,"")
(45,data)
(46,data)
(47,100-1)
(48,\\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^