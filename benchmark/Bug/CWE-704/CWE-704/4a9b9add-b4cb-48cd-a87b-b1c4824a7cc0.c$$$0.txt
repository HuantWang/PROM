-----label-----
1
-----code-----
static void badSink()
{
    short data = CWE194_Unexpected_Sign_Extension__connect_socket_malloc_45_badData;
    /* Assume we want to allocate a relatively small buffer */
    if (data < 100)
    {
        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,
         * the conversion will cause malloc() to allocate a very large amount of data or fail */
        char * dataBuffer = (char *)malloc(data);
        if (dataBuffer == NULL) {exit(-1);}
        /* Do something with dataBuffer */
        memset(dataBuffer, 'A', data-1);
        dataBuffer[data-1] = '\0';
        printLine(dataBuffer);
        free(dataBuffer);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
15,16
15,17
16,17
19,20
19,21
19,22
19,23
19,24
19,25
20,21
21,22
21,23
23,24
23,25
23,26
26,27
27,28
27,29
28,29
28,30
30,31
32,33
32,34
33,34
35,36
37,38
37,39
38,39
38,40
39,40
41,42
43,44
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
51,54
51,55
52,53
54,55
57,58
57,59
58,59
61,62
62,63
62,64
63,64
63,65
64,65
66,67
66,68
67,68
71,72
72,73
72,74
73,74
75,76
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,8,10,13,17,18,22,24,25,29,31,34,36,40,42,47,49,53,55,56,59,60,65,68,69,70,74,76,80,82
-----computeFrom-----
15,16
15,17
38,39
38,40
57,58
57,59
62,63
62,64
66,67
66,68
-----guardedBy-----
17,68
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    short data = CWE194_Unexpected_Sign_Extension__connect_socket_malloc_45_badData;    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        if (dataBuffer == NULL) {exit(-1);}        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
static void
badSink()
badSink
{    short data = CWE194_Unexpected_Sign_Extension__connect_socket_malloc_45_badData;    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        if (dataBuffer == NULL) {exit(-1);}        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
short data = CWE194_Unexpected_Sign_Extension__connect_socket_malloc_45_badData;
short data = CWE194_Unexpected_Sign_Extension__connect_socket_malloc_45_badData;
short
data = CWE194_Unexpected_Sign_Extension__connect_socket_malloc_45_badData
data
= CWE194_Unexpected_Sign_Extension__connect_socket_malloc_45_badData
CWE194_Unexpected_Sign_Extension__connect_socket_malloc_45_badData
CWE194_Unexpected_Sign_Extension__connect_socket_malloc_45_badData
if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        if (dataBuffer == NULL) {exit(-1);}        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
data < 100
data
data
100
{        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        if (dataBuffer == NULL) {exit(-1);}        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
char * dataBuffer = (char *)malloc(data);
char * dataBuffer = (char *)malloc(data);
char
* dataBuffer = (char *)malloc(data)
*
dataBuffer
= (char *)malloc(data)
(char *)malloc(data)
char *
char
*
*
malloc(data)
malloc
malloc
data
data
if (dataBuffer == NULL) {exit(-1);}
dataBuffer == NULL
dataBuffer
dataBuffer
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
memset(dataBuffer, 'A', data-1);
memset(dataBuffer, 'A', data-1)
memset
memset
dataBuffer
dataBuffer
'A'
data-1
data
data
1
dataBuffer[data-1] = '\0';
dataBuffer[data-1] = '\0'
dataBuffer[data-1]
dataBuffer
dataBuffer
data-1
data
data
1
'\0'
printLine(dataBuffer);
printLine(dataBuffer)
printLine
printLine
dataBuffer
dataBuffer
free(dataBuffer);
free(dataBuffer)
free
free
dataBuffer
dataBuffer
-----joern-----
(6,3,0)
(33,24,0)
(25,33,0)
(26,17,0)
(22,24,0)
(46,34,0)
(2,29,0)
(20,14,0)
(11,24,0)
(46,33,0)
(0,15,0)
(7,22,0)
(25,24,0)
(8,33,0)
(34,5,0)
(4,9,0)
(33,46,0)
(22,14,0)
(18,19,0)
(3,24,0)
(23,24,0)
(36,17,0)
(31,9,0)
(22,33,0)
(1,5,0)
(16,5,0)
(9,33,0)
(45,39,0)
(27,34,0)
(17,36,0)
(12,0,0)
(21,22,0)
(17,33,0)
(44,19,0)
(3,33,0)
(39,5,0)
(28,25,0)
(14,5,0)
(5,19,0)
(10,39,0)
(0,12,0)
(29,24,0)
(36,5,0)
(13,36,0)
(34,46,0)
(40,36,0)
(43,12,0)
(14,22,0)
(30,46,0)
(46,30,0)
(17,29,0)
(41,14,0)
(25,28,1)
(27,8,1)
(36,13,1)
(39,5,1)
(40,26,1)
(25,33,1)
(3,6,1)
(21,9,1)
(36,5,1)
(20,41,1)
(12,43,1)
(14,5,1)
(34,27,1)
(3,33,1)
(5,16,1)
(17,33,1)
(45,10,1)
(46,30,1)
(28,29,1)
(41,7,1)
(31,33,1)
(33,46,1)
(29,2,1)
(43,9,1)
(22,33,1)
(26,22,1)
(9,4,1)
(42,39,1)
(13,40,1)
(10,5,1)
(4,31,1)
(42,3,1)
(46,34,1)
(17,36,1)
(0,12,1)
(6,25,1)
(2,17,1)
(39,45,1)
(16,1,1)
(34,5,1)
(9,33,1)
(14,20,1)
(22,14,1)
(8,39,1)
(7,21,1)
(21,0,1)
(2,39,2)
(40,39,2)
(17,39,2)
(26,39,2)
(21,39,2)
(39,5,2)
(20,39,2)
(33,39,2)
(9,39,2)
(31,39,2)
(4,39,2)
(17,33,2)
(46,34,2)
(0,12,2)
(9,33,2)
(6,39,2)
(22,33,2)
(0,9,2)
(14,39,2)
(29,39,2)
(43,9,2)
(14,5,2)
(46,30,2)
(3,33,2)
(34,39,2)
(34,5,2)
(46,39,2)
(22,39,2)
(33,46,2)
(8,39,2)
(36,39,2)
(28,39,2)
(13,39,2)
(7,39,2)
(3,39,2)
(25,39,2)
(22,14,2)
(41,39,2)
(12,9,2)
(27,39,2)
(17,36,2)
(25,33,2)
(36,5,2)
-----------------------------------
(0,exit(-1)
(1,data)
(2,'\\\\0')
(3,free(dataBuffer)
(4,NULL)
(5,data = CWE194_Unexpected_Sign_Extension__connect_socket_malloc_45_badData)
(6,dataBuffer)
(7,'A')
(8,dataBuffer)
(9,dataBuffer == NULL)
(10,data)
(11,if (dataBuffer == NULL)
(12,-1)
(13,1)
(14,data-1)
(15,)
(16,CWE194_Unexpected_Sign_Extension__connect_socket_malloc_45_badData)
(17,dataBuffer[data-1])
(18,if (data < 100)
(19,)
(20,1)
(21,dataBuffer)
(22,memset(dataBuffer, \'A\', data-1)
(23,dataBuffer)
(24,)
(25,printLine(dataBuffer)
(26,dataBuffer)
(27,data)
(28,dataBuffer)
(29,dataBuffer[data-1] = \'\\\\0\')
(30,char *)
(31,dataBuffer)
(32,memset(dataBuffer, 'A', data-1)
(33,* dataBuffer = (char *)
(34,malloc(data)
(35,\'\\\\0\')
(36,data-1)
(37,dataBuffer[data-1] = '\\\\0')
(38,\'A\')
(39,data < 100)
(40,data)
(41,data)
(42,RET)
(43,1)
(44,data)
(45,100)
(46,(char *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^