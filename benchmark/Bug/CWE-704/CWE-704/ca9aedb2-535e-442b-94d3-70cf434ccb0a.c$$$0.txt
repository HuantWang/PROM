-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_42_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    data = badSource(data);
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
20,22
21,22
23,24
25,26
25,27
25,28
25,29
25,30
25,31
26,27
27,28
27,29
29,30
29,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
38,39
40,41
42,43
43,44
43,45
43,46
43,47
44,45
46,47
49,50
49,51
52,53
53,54
53,55
54,55
54,56
55,56
57,58
57,59
61,62
61,63
62,63
62,64
63,64
66,67
66,68
67,68
68,69
68,70
68,71
68,72
69,70
71,72
73,74
75,76
77,78
78,79
78,80
79,80
79,81
80,81
82,83
85,86
86,87
86,88
87,88
89,90
-----nextToken-----
2,4,8,10,14,15,19,22,24,28,30,32,35,37,39,41,45,47,48,50,51,56,58,59,60,64,65,70,72,74,76,81,83,84,88,90
-----computeFrom-----
12,13
12,14
17,18
17,19
49,50
49,51
53,54
53,55
57,58
57,59
62,63
62,64
78,79
78,80
-----guardedBy-----
64,83
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_42_bad(){    short data;    /* Initialize data */    data = 0;    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_42_bad()
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_42_bad
{    short data;    /* Initialize data */    data = 0;    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(15,2,0)
(22,27,0)
(35,1,0)
(11,43,0)
(10,2,0)
(30,16,0)
(18,4,0)
(28,1,0)
(6,2,0)
(43,16,0)
(0,4,0)
(32,13,0)
(29,17,0)
(20,43,0)
(44,4,0)
(38,0,0)
(4,0,0)
(13,35,0)
(27,35,0)
(1,31,0)
(23,0,0)
(36,15,0)
(42,2,0)
(40,27,0)
(24,31,0)
(34,29,0)
(27,2,0)
(13,1,0)
(41,1,0)
(16,43,0)
(26,12,0)
(10,21,0)
(12,1,0)
(4,1,0)
(15,29,0)
(27,17,0)
(25,27,0)
(39,10,0)
(19,15,0)
(2,31,0)
(33,21,0)
(3,1,0)
(7,42,0)
(37,35,0)
(9,42,0)
(2,10,0)
(14,21,0)
(15,35,0)
(16,12,0)
(21,31,0)
(5,35,0)
(15,19,1)
(34,15,1)
(13,32,1)
(27,40,1)
(14,33,1)
(32,29,1)
(2,10,1)
(22,25,1)
(40,22,1)
(10,21,1)
(27,35,1)
(35,5,1)
(12,26,1)
(29,34,1)
(36,27,1)
(11,20,1)
(43,11,1)
(16,43,1)
(30,4,1)
(10,39,1)
(39,6,1)
(18,44,1)
(26,16,1)
(15,2,1)
(7,9,1)
(32,42,1)
(8,13,1)
(6,21,1)
(38,18,1)
(15,35,1)
(37,2,1)
(4,0,1)
(9,12,1)
(23,38,1)
(5,37,1)
(0,23,1)
(27,2,1)
(42,7,1)
(13,35,1)
(19,36,1)
(25,42,1)
(42,2,1)
(21,14,1)
(44,35,1)
(20,30,1)
(19,42,2)
(15,35,2)
(25,42,2)
(13,35,2)
(2,10,2)
(42,2,2)
(22,42,2)
(10,21,2)
(4,0,2)
(34,42,2)
(27,42,2)
(29,42,2)
(36,42,2)
(16,43,2)
(27,35,2)
(27,2,2)
(15,42,2)
(15,2,2)
(40,42,2)
-----------------------------------
(0,100-1)
(1,)
(2,data = badSource(data)
(3,dest)
(4,memset(source, \\\'A\\\', 100-1)
(5,"")
(6,data)
(7,100)
(8,RET)
(9,data)
(10,badSource(data)
(11,1)
(12,source[100-1] = \\\'\\\\0\\\')
(13,printLine(dest)
(14,0)
(15,dest[data])
(16,source[100-1])
(17,)
(18,\\\'A\\\')
(19,data)
(20,100)
(21,data = 0)
(22,source)
(23,1)
(24,data)
(25,dest)
(26,\\\'\\\\0\\\')
(27,strncpy(dest, source, data)
(28,if (data < 100)
(29,dest[data] = \\\'\\\\0\\\')
(30,source)
(31,)
(32,dest)
(33,data)
(34,\\\'\\\\0\\\')
(35,dest[100] = "")
(36,dest)
(37,dest)
(38,100)
(39,data)
(40,data)
(41,source)
(42,data < 100)
(43,100-1)
(44,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^