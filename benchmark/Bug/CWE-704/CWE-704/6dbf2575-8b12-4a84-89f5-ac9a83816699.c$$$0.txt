-----label-----
1
-----code-----
void CWE196_Unsigned_to_Signed_Conversion_Error__basic_03_bad()
{
    if(5==5)
    {
        {
            unsigned intUnsigned;
            int intSigned;
            intUnsigned = rand();
            if (rand() % 2 == 0)
            {
                intUnsigned = UINT_MAX - intUnsigned;
            }
            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */
            intSigned = intUnsigned;
            printIntLine(intSigned);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
7,9
10,11
11,12
11,13
11,14
11,15
11,16
11,17
12,13
13,14
13,15
15,16
17,18
18,19
18,20
20,21
22,23
23,24
23,25
24,25
26,27
27,28
29,30
29,31
30,31
30,32
31,32
31,33
32,33
33,34
37,38
38,39
39,40
39,41
40,41
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
53,54
54,55
54,56
55,56
57,58
-----nextToken-----
2,4,8,9,14,16,19,21,25,28,34,35,36,41,44,46,50,52,56,58
-----computeFrom-----
7,8
7,9
23,24
23,25
30,31
30,32
31,32
31,33
39,40
39,41
42,43
42,44
48,49
48,50
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE196_Unsigned_to_Signed_Conversion_Error__basic_03_bad(){    if(5==5)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }}
void
CWE196_Unsigned_to_Signed_Conversion_Error__basic_03_bad()
CWE196_Unsigned_to_Signed_Conversion_Error__basic_03_bad
{    if(5==5)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }}
if(5==5)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }
5==5
5
5
{        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }    }
{            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }
unsigned intUnsigned;
unsigned intUnsigned;
unsigned
intUnsigned
intUnsigned
int intSigned;
int intSigned;
int
intSigned
intSigned
intUnsigned = rand();
intUnsigned = rand()
intUnsigned
intUnsigned
rand()
rand
rand
if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }
rand() % 2 == 0
rand() % 2
rand()
rand
rand
2
0
{                intUnsigned = UINT_MAX - intUnsigned;            }
intUnsigned = UINT_MAX - intUnsigned;
intUnsigned = UINT_MAX - intUnsigned
intUnsigned
intUnsigned
UINT_MAX - intUnsigned
UINT_MAX
UINT_MAX
intUnsigned
intUnsigned
intSigned = intUnsigned;
intSigned = intUnsigned
intSigned
intSigned
intUnsigned
intUnsigned
printIntLine(intSigned);
printIntLine(intSigned)
printIntLine
printIntLine
intSigned
intSigned
-----joern-----
(13,18,0)
(4,13,0)
(0,9,0)
(6,11,0)
(25,4,0)
(4,9,0)
(27,13,0)
(11,26,0)
(29,3,0)
(21,24,0)
(11,9,0)
(16,26,0)
(19,11,0)
(8,9,0)
(22,13,0)
(5,13,0)
(4,26,0)
(9,8,0)
(9,13,0)
(14,13,0)
(20,14,0)
(7,3,0)
(12,21,0)
(26,11,0)
(14,4,0)
(10,21,0)
(21,12,0)
(23,12,0)
(26,2,0)
(15,1,0)
(28,4,0)
(24,21,0)
(11,9,1)
(28,12,1)
(25,28,1)
(19,6,1)
(0,3,1)
(14,4,1)
(9,8,1)
(4,26,1)
(3,29,1)
(21,10,1)
(6,16,1)
(23,21,1)
(8,0,1)
(28,26,1)
(12,23,1)
(24,9,1)
(29,7,1)
(17,3,1)
(4,9,1)
(12,21,1)
(14,20,1)
(10,24,1)
(16,12,1)
(17,14,1)
(26,11,1)
(4,25,1)
(21,24,1)
(11,19,1)
(20,4,1)
(19,12,2)
(8,3,2)
(4,9,2)
(24,3,2)
(0,3,2)
(11,9,2)
(26,12,2)
(20,3,2)
(12,21,2)
(25,3,2)
(9,3,2)
(16,12,2)
(26,11,2)
(9,8,2)
(21,3,2)
(10,3,2)
(23,3,2)
(4,26,2)
(11,12,2)
(14,4,2)
(14,3,2)
(21,24,2)
(28,3,2)
(12,3,2)
(4,3,2)
(6,12,2)
-----------------------------------
(0,intUnsigned)
(1,)
(2,)
(3,5==5)
(4,intSigned = intUnsigned)
(5,if (rand()
(6,UINT_MAX)
(7,5)
(8,rand()
(9,intUnsigned = rand()
(10,2)
(11,UINT_MAX - intUnsigned)
(12,rand()
(13,)
(14,printIntLine(intSigned)
(15,if(5==5)
(16,intUnsigned)
(17,RET)
(18,)
(19,intUnsigned)
(20,intSigned)
(21,rand()
(22,intSigned)
(23,0)
(24,rand()
(25,intUnsigned)
(26,intUnsigned = UINT_MAX - intUnsigned)
(27,intUnsigned)
(28,intSigned)
(29,5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^