-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_31_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Read data from the console using fscanf() */
    fscanf(stdin, "%d", &data);
    {
        int dataCopy = data;
        int data = dataCopy;
        {
            char source[100];
            char dest[100] = "";
            memset(source, 'A', 100-1);
            source[100-1] = '\0';
            if (data < 100)
            {
                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
                 * the sign conversion could result in a very large number */
                strncpy(dest, source, data);
                dest[data] = '\0'; /* strncpy() does not always NULL terminate */
            }
            printLine(dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
18,21
18,22
19,20
21,22
24,25
25,26
27,28
27,29
27,30
28,29
29,30
29,31
31,32
31,33
33,34
34,35
36,37
37,38
37,39
39,40
39,41
41,42
42,43
44,45
44,46
44,47
44,48
44,49
44,50
45,46
46,47
46,48
48,49
48,50
50,51
52,53
53,54
53,55
55,56
55,57
55,58
57,58
59,60
61,62
62,63
62,64
62,65
62,66
63,64
65,66
68,69
68,70
71,72
72,73
72,74
73,74
73,75
74,75
76,77
76,78
80,81
80,82
81,82
81,83
82,83
85,86
85,87
86,87
87,88
87,89
87,90
87,91
88,89
90,91
92,93
94,95
96,97
97,98
97,99
98,99
98,100
99,100
101,102
104,105
105,106
105,107
106,107
108,109
-----nextToken-----
2,4,8,10,14,16,20,22,23,26,30,32,35,38,40,43,47,49,51,54,56,58,60,64,66,67,69,70,75,77,78,79,83,84,89,91,93,95,100,102,103,107,109
-----computeFrom-----
12,13
12,14
68,69
68,70
72,73
72,74
76,77
76,78
81,82
81,83
97,98
97,99
-----guardedBy-----
83,102
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_31_bad(){    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    {        int dataCopy = data;        int data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_31_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_31_bad
{    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    {        int dataCopy = data;        int data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        int dataCopy = data;        int data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }    }
int dataCopy = data;
int dataCopy = data;
int
dataCopy = data
dataCopy
= data
data
data
int data = dataCopy;
int data = dataCopy;
int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }            printLine(dest);        }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }
data < 100
data
data
100
{                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                strncpy(dest, source, data);                dest[data] = '\0'; /* strncpy() does not always NULL terminate */            }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(28,31,0)
(1,3,0)
(45,50,0)
(54,29,0)
(49,45,0)
(16,54,0)
(7,12,0)
(40,16,0)
(36,47,0)
(15,47,0)
(8,13,0)
(45,22,0)
(20,29,0)
(4,6,0)
(54,16,0)
(10,20,0)
(22,20,0)
(14,53,0)
(27,20,0)
(53,22,0)
(34,52,0)
(25,12,0)
(18,54,0)
(38,12,0)
(52,39,0)
(32,3,0)
(2,45,0)
(48,31,0)
(46,39,0)
(24,32,0)
(26,15,0)
(31,20,0)
(3,32,0)
(39,52,0)
(21,29,0)
(7,31,0)
(53,12,0)
(44,53,0)
(33,7,0)
(37,3,0)
(23,51,0)
(53,42,0)
(5,52,0)
(13,20,0)
(47,29,0)
(11,42,0)
(41,54,0)
(22,13,0)
(39,31,0)
(6,22,0)
(35,31,0)
(51,31,0)
(12,31,0)
(45,12,0)
(32,51,0)
(42,50,0)
(17,22,0)
(30,13,0)
(43,39,0)
(55,6,0)
(19,22,0)
(47,15,0)
(16,47,0)
(13,47,0)
(0,45,0)
(13,30,1)
(45,12,1)
(18,47,1)
(55,51,1)
(47,15,1)
(2,49,1)
(4,55,1)
(8,54,1)
(11,53,1)
(6,4,1)
(41,18,1)
(6,22,1)
(17,13,1)
(14,45,1)
(26,36,1)
(43,12,1)
(5,46,1)
(13,47,1)
(22,13,1)
(34,5,1)
(3,1,1)
(39,52,1)
(52,34,1)
(53,22,1)
(51,23,1)
(7,33,1)
(33,42,1)
(7,12,1)
(44,14,1)
(16,47,1)
(45,0,1)
(37,24,1)
(46,43,1)
(30,8,1)
(33,6,1)
(54,16,1)
(23,32,1)
(45,22,1)
(38,22,1)
(1,37,1)
(15,26,1)
(16,40,1)
(19,17,1)
(40,41,1)
(24,39,1)
(22,19,1)
(0,2,1)
(12,25,1)
(32,3,1)
(42,11,1)
(53,44,1)
(25,38,1)
(49,6,1)
(9,7,1)
(53,12,1)
(45,22,2)
(49,6,2)
(45,6,2)
(2,6,2)
(7,12,2)
(53,12,2)
(42,6,2)
(11,6,2)
(45,12,2)
(32,3,2)
(44,6,2)
(39,52,2)
(54,16,2)
(0,6,2)
(22,13,2)
(6,22,2)
(16,47,2)
(13,47,2)
(53,22,2)
(14,6,2)
(47,15,2)
(53,6,2)
-----------------------------------
(0,data)
(1,1)
(2,source)
(3,100-1)
(4,100)
(5,100)
(6,data < 100)
(7,printLine(dest)
(8,dataCopy)
(9,RET)
(10,data)
(11,\\\'\\\\0\\\')
(12,dest[100] = "")
(13,dataCopy = data)
(14,dest)
(15,-1)
(16,&data)
(17,data)
(18,stdin)
(19,dataCopy)
(20,)
(21,data)
(22,data = dataCopy)
(23,\\\'\\\\0\\\')
(24,source)
(25,"")
(26,1)
(27,dataCopy)
(28,dest)
(29,)
(30,data)
(31,)
(32,source[100-1])
(33,dest)
(34,1)
(35,source)
(36,data)
(37,100)
(38,dest)
(39,memset(source, \\\'A\\\', 100-1)
(40,data)
(41,"%d")
(42,dest[data] = \\\'\\\\0\\\')
(43,source)
(44,data)
(45,strncpy(dest, source, data)
(46,\\\'A\\\')
(47,data = -1)
(48,if (data < 100)
(49,dest)
(50,)
(51,source[100-1] = \\\'\\\\0\\\')
(52,100-1)
(53,dest[data])
(54,fscanf(stdin, "%d", &data)
(55,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^