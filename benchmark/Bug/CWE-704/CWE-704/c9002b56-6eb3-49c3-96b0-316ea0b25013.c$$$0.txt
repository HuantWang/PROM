-----label-----
1
-----code-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_32_bad()
{
    void * data;
    void * *dataPtr1 = &data;
    void * *dataPtr2 = &data;
    twoIntsStruct dataGoodBuffer;
    int dataBadBuffer = 100;
    dataGoodBuffer.intOne = 0;
    dataGoodBuffer.intTwo = 0;
    {
        void * data = *dataPtr1;
        /* FLAW: Set data to point to an int */
        data = &dataBadBuffer;
        *dataPtr1 = data;
    }
    {
        void * data = *dataPtr2;
        /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */
        printStructLine((twoIntsStruct *)data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
15,19
19,20
20,21
21,22
23,24
24,25
24,26
26,27
26,28
26,29
26,30
30,31
31,32
32,33
34,35
35,36
35,37
36,37
38,39
40,41
41,42
41,43
43,44
43,45
45,46
47,48
48,49
48,50
49,50
49,51
50,51
54,55
55,56
55,57
56,57
56,58
57,58
61,62
61,63
61,64
62,63
63,64
63,65
65,66
65,67
65,68
68,69
69,70
70,71
72,73
73,74
73,75
74,75
76,77
77,78
79,80
80,81
80,82
81,82
82,83
84,85
86,87
86,88
87,88
88,89
88,90
90,91
90,92
90,93
93,94
94,95
95,96
97,98
98,99
98,100
99,100
101,102
101,103
102,103
102,104
103,104
105,106
107,108
-----nextToken-----
2,4,8,10,11,14,16,17,18,22,25,27,28,29,33,37,39,42,44,46,51,52,53,58,59,60,64,66,67,71,75,78,83,85,89,91,92,96,100,104,106,108
-----computeFrom-----
48,49
48,50
55,56
55,57
73,74
73,75
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_32_bad(){    void * data;    void * *dataPtr1 = &data;    void * *dataPtr2 = &data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    {        void * data = *dataPtr1;        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;        *dataPtr1 = data;    }    {        void * data = *dataPtr2;        /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */        printStructLine((twoIntsStruct *)data);    }}
void
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_32_bad()
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_32_bad
{    void * data;    void * *dataPtr1 = &data;    void * *dataPtr2 = &data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    {        void * data = *dataPtr1;        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;        *dataPtr1 = data;    }    {        void * data = *dataPtr2;        /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */        printStructLine((twoIntsStruct *)data);    }}
void * data;
void * data;
void
* data
*
data
void * *dataPtr1 = &data;
void * *dataPtr1 = &data;
void
* *dataPtr1 = &data
*
*
dataPtr1
= &data
&data
data
data
void * *dataPtr2 = &data;
void * *dataPtr2 = &data;
void
* *dataPtr2 = &data
*
*
dataPtr2
= &data
&data
data
data
twoIntsStruct dataGoodBuffer;
twoIntsStruct dataGoodBuffer;
twoIntsStruct
twoIntsStruct
dataGoodBuffer
dataGoodBuffer
int dataBadBuffer = 100;
int dataBadBuffer = 100;
int
dataBadBuffer = 100
dataBadBuffer
= 100
100
dataGoodBuffer.intOne = 0;
dataGoodBuffer.intOne = 0
dataGoodBuffer.intOne
dataGoodBuffer
dataGoodBuffer
intOne
0
dataGoodBuffer.intTwo = 0;
dataGoodBuffer.intTwo = 0
dataGoodBuffer.intTwo
dataGoodBuffer
dataGoodBuffer
intTwo
0
{        void * data = *dataPtr1;        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;        *dataPtr1 = data;    }
void * data = *dataPtr1;
void * data = *dataPtr1;
void
* data = *dataPtr1
*
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
data = &dataBadBuffer;
data = &dataBadBuffer
data
data
&dataBadBuffer
dataBadBuffer
dataBadBuffer
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        void * data = *dataPtr2;        /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */        printStructLine((twoIntsStruct *)data);    }
void * data = *dataPtr2;
void * data = *dataPtr2;
void
* data = *dataPtr2
*
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
printStructLine((twoIntsStruct *)data);
printStructLine((twoIntsStruct *)data)
printStructLine
printStructLine
(twoIntsStruct *)data
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
data
data
-----joern-----
(39,46,0)
(46,20,0)
(10,31,0)
(0,51,0)
(15,5,0)
(40,41,0)
(51,31,0)
(45,50,0)
(3,31,0)
(7,31,0)
(38,41,0)
(50,23,0)
(46,18,0)
(12,9,0)
(50,31,0)
(16,42,0)
(5,36,0)
(41,50,0)
(14,37,0)
(28,8,0)
(13,7,0)
(43,27,0)
(42,7,0)
(49,11,0)
(2,49,0)
(8,16,0)
(21,7,0)
(33,42,0)
(18,46,0)
(32,16,0)
(44,48,0)
(46,40,0)
(5,49,0)
(34,31,0)
(47,23,0)
(11,31,0)
(37,36,0)
(1,27,0)
(17,40,0)
(18,9,0)
(48,36,0)
(6,36,0)
(19,31,0)
(36,31,0)
(29,4,0)
(16,11,0)
(37,8,0)
(35,22,0)
(23,50,0)
(36,48,0)
(40,9,0)
(26,31,0)
(22,31,0)
(4,22,0)
(24,4,0)
(30,11,0)
(20,46,0)
(8,11,0)
(27,51,0)
(41,40,0)
(49,5,0)
(9,31,0)
(42,16,0)
(22,35,1)
(42,33,1)
(38,17,1)
(23,47,1)
(50,23,1)
(5,15,1)
(25,18,1)
(44,6,1)
(17,8,1)
(0,27,1)
(1,7,1)
(8,28,1)
(32,49,1)
(15,2,1)
(5,36,1)
(41,38,1)
(40,41,1)
(47,45,1)
(2,22,1)
(33,32,1)
(46,20,1)
(36,48,1)
(45,36,1)
(29,24,1)
(39,40,1)
(43,1,1)
(51,0,1)
(37,14,1)
(42,7,1)
(46,39,1)
(7,21,1)
(48,44,1)
(13,50,1)
(14,16,1)
(24,51,1)
(8,16,1)
(4,29,1)
(35,4,1)
(28,37,1)
(49,5,1)
(16,42,1)
(27,43,1)
(21,13,1)
(41,50,1)
(37,36,1)
(46,40,1)
(18,46,1)
(16,42,2)
(41,50,2)
(49,5,2)
(46,20,2)
(42,7,2)
(37,36,2)
(40,41,2)
(36,48,2)
(18,46,2)
(5,36,2)
(50,23,2)
(46,40,2)
(8,16,2)
-----------------------------------
(0,0)
(1,dataGoodBuffer)
(2,data)
(3,dataGoodBuffer)
(4,dataGoodBuffer.intTwo)
(5,*dataPtr1)
(6,dataPtr1)
(7,dataBadBuffer = 100)
(8,*dataPtr1 = data)
(9,)
(10,dataBadBuffer)
(11,)
(12,data)
(13,dataBadBuffer)
(14,dataPtr1)
(15,dataPtr1)
(16,data = &dataBadBuffer)
(17,data)
(18,printStructLine((twoIntsStruct *)
(19,dataPtr1)
(20,twoIntsStruct *)
(21,100)
(22,dataGoodBuffer.intTwo = 0)
(23,&data)
(24,dataGoodBuffer)
(25,RET)
(26,dataPtr2)
(27,dataGoodBuffer.intOne)
(28,data)
(29,intTwo)
(30,data)
(31,)
(32,data)
(33,dataBadBuffer)
(34,data)
(35,0)
(36,* *dataPtr1 = &data)
(37,*dataPtr1)
(38,dataPtr2)
(39,data)
(40,* data = *dataPtr2)
(41,*dataPtr2)
(42,&dataBadBuffer)
(43,intOne)
(44,data)
(45,dataPtr2)
(46,(twoIntsStruct *)
(47,data)
(48,&data)
(49,* data = *dataPtr1)
(50,* *dataPtr2 = &data)
(51,dataGoodBuffer.intOne = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^