-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_10_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
35,36
35,37
37,38
39,40
40,41
40,42
42,43
42,44
42,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
55,56
55,57
58,59
59,60
59,61
60,61
60,62
61,62
63,64
63,65
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
74,75
74,76
74,77
74,78
75,76
77,78
79,80
81,82
83,84
84,85
84,86
85,86
85,87
86,87
88,89
91,92
92,93
92,94
93,94
95,96
-----nextToken-----
2,4,8,10,14,16,19,24,26,27,30,34,36,38,41,43,45,47,51,53,54,56,57,62,64,65,66,70,71,76,78,80,82,87,89,90,94,96
-----computeFrom-----
12,13
12,14
55,56
55,57
59,60
59,61
63,64
63,65
68,69
68,70
84,85
84,86
-----guardedBy-----
70,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_10_bad(){    int data;    /* Initialize data */    data = -1;    if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_10_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_10_bad
{    int data;    /* Initialize data */    data = -1;    if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(24,45,0)
(43,31,0)
(16,18,0)
(0,8,0)
(27,28,0)
(35,14,0)
(23,18,0)
(1,10,0)
(11,43,0)
(48,16,0)
(30,38,0)
(29,43,0)
(15,12,0)
(34,45,0)
(42,8,0)
(43,45,0)
(40,27,0)
(6,27,0)
(26,37,0)
(13,24,0)
(47,12,0)
(14,38,0)
(5,26,0)
(3,12,0)
(36,48,0)
(14,10,0)
(33,14,0)
(21,32,0)
(25,38,0)
(4,48,0)
(31,43,0)
(26,41,0)
(12,28,0)
(17,31,0)
(14,28,0)
(46,31,0)
(28,32,0)
(2,37,0)
(18,45,0)
(32,28,0)
(12,38,0)
(44,26,0)
(38,45,0)
(49,45,0)
(45,8,0)
(16,48,0)
(39,45,0)
(37,26,0)
(24,38,0)
(28,8,0)
(19,16,0)
(10,20,0)
(9,28,0)
(37,28,0)
(12,20,0)
(11,29,1)
(23,16,1)
(14,35,1)
(28,32,1)
(12,28,1)
(44,5,1)
(32,21,1)
(7,24,1)
(16,48,1)
(30,22,1)
(10,1,1)
(12,38,1)
(33,12,1)
(6,18,1)
(17,46,1)
(48,4,1)
(37,2,1)
(14,28,1)
(27,28,1)
(3,27,1)
(12,47,1)
(47,15,1)
(19,43,1)
(35,33,1)
(5,22,1)
(29,38,1)
(25,30,1)
(38,25,1)
(2,44,1)
(24,38,1)
(40,6,1)
(13,10,1)
(27,40,1)
(36,19,1)
(15,3,1)
(1,14,1)
(26,37,1)
(4,36,1)
(13,27,1)
(18,23,1)
(14,38,1)
(22,28,1)
(24,13,1)
(43,31,1)
(30,26,1)
(46,11,1)
(31,17,1)
(21,9,1)
(37,28,1)
(16,48,2)
(27,28,2)
(12,27,2)
(26,37,2)
(1,27,2)
(5,22,2)
(37,22,2)
(28,32,2)
(10,27,2)
(14,27,2)
(47,27,2)
(12,38,2)
(14,28,2)
(12,28,2)
(35,27,2)
(37,28,2)
(15,27,2)
(26,22,2)
(24,38,2)
(33,27,2)
(3,27,2)
(43,31,2)
(44,22,2)
(2,22,2)
(14,38,2)
-----------------------------------
(0,data)
(1,\\\'\\\\0\\\')
(2,data)
(3,dest)
(4,1)
(5,stdin)
(6,data)
(7,RET)
(8,)
(9,data)
(10,dest[data] = \\\'\\\\0\\\')
(11,\\\'A\\\')
(12,strncpy(dest, source, data)
(13,dest)
(14,dest[data])
(15,source)
(16,source[100-1])
(17,1)
(18,source[100-1] = \\\'\\\\0\\\')
(19,source)
(20,)
(21,1)
(22,globalTrue)
(23,\\\'\\\\0\\\')
(24,printLine(dest)
(25,"")
(26,fscanf(stdin, "%d", &data)
(27,data < 100)
(28,data = -1)
(29,source)
(30,dest)
(31,100-1)
(32,-1)
(33,dest)
(34,source)
(35,data)
(36,100)
(37,&data)
(38,dest[100] = "")
(39,if (data < 100)
(40,100)
(41,)
(42,if(globalTrue)
(43,memset(source, \\\'A\\\', 100-1)
(44,"%d")
(45,)
(46,100)
(47,data)
(48,100-1)
(49,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^