-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_17_bad()
{
    int i;
    int data;
    /* Initialize data */
    data = -1;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
22,26
23,24
24,25
24,26
25,26
28,29
28,30
29,30
32,33
33,34
35,36
36,37
37,38
37,39
37,40
37,41
38,39
40,41
43,44
44,45
46,47
46,48
46,49
46,50
46,51
46,52
47,48
48,49
48,50
50,51
50,52
52,53
54,55
55,56
55,57
57,58
57,59
57,60
59,60
61,62
63,64
64,65
64,66
64,67
64,68
65,66
67,68
70,71
70,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
78,80
82,83
82,84
83,84
83,85
84,85
87,88
87,89
88,89
89,90
89,91
89,92
89,93
90,91
92,93
94,95
96,97
98,99
99,100
99,101
100,101
100,102
101,102
103,104
106,107
107,108
107,109
108,109
110,111
-----nextToken-----
2,4,8,10,13,15,19,21,26,27,30,31,34,39,41,42,45,49,51,53,56,58,60,62,66,68,69,71,72,77,79,80,81,85,86,91,93,95,97,102,104,105,109,111
-----computeFrom-----
17,18
17,19
24,25
24,26
28,29
28,30
70,71
70,72
74,75
74,76
78,79
78,80
83,84
83,85
99,100
99,101
-----guardedBy-----
85,104
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_17_bad(){    int i;    int data;    /* Initialize data */    data = -1;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_17_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_17_bad
{    int i;    int data;    /* Initialize data */    data = -1;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int i;
int i;
int
i
i
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(1,9,0)
(13,16,0)
(7,16,0)
(19,18,0)
(34,0,0)
(52,8,0)
(31,23,0)
(15,24,0)
(29,9,0)
(10,43,0)
(21,24,0)
(46,21,0)
(35,40,0)
(54,49,0)
(41,40,0)
(25,24,0)
(18,8,0)
(28,6,0)
(51,0,0)
(49,9,0)
(18,23,0)
(11,51,0)
(2,43,0)
(12,42,0)
(56,18,0)
(43,52,0)
(18,9,0)
(53,55,0)
(33,0,0)
(40,16,0)
(49,51,0)
(43,23,0)
(50,52,0)
(45,22,0)
(17,28,0)
(20,44,0)
(32,21,0)
(43,9,0)
(5,55,0)
(55,23,0)
(26,18,0)
(47,0,0)
(36,38,0)
(23,0,0)
(37,28,0)
(23,31,0)
(4,45,0)
(57,23,0)
(27,22,0)
(22,51,0)
(28,44,0)
(39,51,0)
(9,51,0)
(45,38,0)
(24,21,0)
(14,31,0)
(30,38,0)
(42,16,0)
(44,23,0)
(24,51,0)
(38,45,0)
(44,28,0)
(3,51,0)
(12,28,1)
(5,22,1)
(17,37,1)
(16,7,1)
(18,26,1)
(56,55,1)
(28,44,1)
(18,9,1)
(43,2,1)
(13,23,1)
(1,29,1)
(55,23,1)
(55,53,1)
(52,50,1)
(41,35,1)
(40,16,1)
(23,31,1)
(49,54,1)
(24,21,1)
(49,9,1)
(48,49,1)
(54,55,1)
(27,45,1)
(26,19,1)
(37,40,1)
(45,38,1)
(2,10,1)
(10,18,1)
(43,23,1)
(35,16,1)
(30,4,1)
(36,30,1)
(53,5,1)
(42,12,1)
(14,57,1)
(20,17,1)
(32,15,1)
(21,46,1)
(25,9,1)
(40,41,1)
(4,24,1)
(35,42,1)
(7,13,1)
(22,27,1)
(46,32,1)
(44,20,1)
(29,40,1)
(54,52,1)
(42,16,1)
(38,36,1)
(15,25,1)
(19,56,1)
(18,23,1)
(50,43,1)
(31,14,1)
(44,23,1)
(43,9,1)
(9,1,1)
(50,55,2)
(20,40,2)
(40,40,2)
(18,55,2)
(43,9,2)
(43,55,2)
(40,16,2)
(44,23,2)
(28,44,2)
(41,40,2)
(24,21,2)
(42,40,2)
(37,40,2)
(45,38,2)
(52,55,2)
(28,40,2)
(23,31,2)
(55,23,2)
(56,55,2)
(10,55,2)
(49,9,2)
(12,40,2)
(18,23,2)
(43,23,2)
(42,16,2)
(19,55,2)
(17,40,2)
(2,55,2)
(35,40,2)
(18,9,2)
(26,55,2)
(44,40,2)
-----------------------------------
(0,)
(1,"")
(2,data)
(3,source)
(4,source)
(5,data)
(6,)
(7,0)
(8,)
(9,dest[100] = "")
(10,dest)
(11,dest)
(12,i)
(13,i)
(14,1)
(15,\\\'A\\\')
(16,i = 0)
(17,"%d")
(18,memmove(dest, source, data)
(19,source)
(20,data)
(21,100-1)
(22,source[100-1] = \\\'\\\\0\\\')
(23,data = -1)
(24,memset(source, \\\'A\\\', 100-1)
(25,source)
(26,data)
(27,\\\'\\\\0\\\')
(28,fscanf(stdin, "%d", &data)
(29,dest)
(30,100)
(31,-1)
(32,100)
(33,data)
(34,i)
(35,i)
(36,1)
(37,stdin)
(38,100-1)
(39,if (data < 100)
(40,i < 1)
(41,1)
(42,i++)
(43,dest[data])
(44,&data)
(45,source[100-1])
(46,1)
(47,for(i = 0; i < 1; i++)
(48,RET)
(49,printLine(dest)
(50,\\\'\\\\0\\\')
(51,)
(52,dest[data] = \\\'\\\\0\\\')
(53,100)
(54,dest)
(55,data < 100)
(56,dest)
(57,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^