-----label-----
1
-----code-----
void CWE196_Unsigned_to_Signed_Conversion_Error__basic_16_bad()
{
    while(1)
    {
        {
            unsigned intUnsigned;
            int intSigned;
            intUnsigned = rand();
            if (rand() % 2 == 0)
            {
                intUnsigned = UINT_MAX - intUnsigned;
            }
            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */
            intSigned = intUnsigned;
            printIntLine(intSigned);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
8,9
8,10
9,10
9,11
9,12
9,13
9,14
9,15
10,11
11,12
11,13
13,14
15,16
16,17
16,18
18,19
20,21
21,22
21,23
22,23
24,25
25,26
27,28
27,29
28,29
28,30
29,30
29,31
30,31
31,32
35,36
36,37
37,38
37,39
38,39
40,41
40,42
41,42
43,44
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,7,12,14,17,19,23,26,32,33,34,39,42,44,48,50,54,56,57
-----computeFrom-----
21,22
21,23
28,29
28,30
29,30
29,31
37,38
37,39
40,41
40,42
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE196_Unsigned_to_Signed_Conversion_Error__basic_16_bad(){    while(1)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }        break;    }}
void
CWE196_Unsigned_to_Signed_Conversion_Error__basic_16_bad()
CWE196_Unsigned_to_Signed_Conversion_Error__basic_16_bad
{    while(1)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }        break;    }}
while(1)    {        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }        break;    }
1
{        {            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }        break;    }
{            unsigned intUnsigned;            int intSigned;            intUnsigned = rand();            if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }            /* FLAW: intUnsigned could be very large, in which case intSigned will be negative */            intSigned = intUnsigned;            printIntLine(intSigned);        }
unsigned intUnsigned;
unsigned intUnsigned;
unsigned
intUnsigned
intUnsigned
int intSigned;
int intSigned;
int
intSigned
intSigned
intUnsigned = rand();
intUnsigned = rand()
intUnsigned
intUnsigned
rand()
rand
rand
if (rand() % 2 == 0)            {                intUnsigned = UINT_MAX - intUnsigned;            }
rand() % 2 == 0
rand() % 2
rand()
rand
rand
2
0
{                intUnsigned = UINT_MAX - intUnsigned;            }
intUnsigned = UINT_MAX - intUnsigned;
intUnsigned = UINT_MAX - intUnsigned
intUnsigned
intUnsigned
UINT_MAX - intUnsigned
UINT_MAX
UINT_MAX
intUnsigned
intUnsigned
intSigned = intUnsigned;
intSigned = intUnsigned
intSigned
intSigned
intUnsigned
intUnsigned
printIntLine(intSigned);
printIntLine(intSigned)
printIntLine
printIntLine
intSigned
intSigned
break;
-----joern-----
(16,23,0)
(24,5,0)
(23,4,0)
(8,25,0)
(26,21,0)
(28,26,0)
(26,12,0)
(3,21,0)
(1,26,0)
(12,19,0)
(22,21,0)
(14,1,0)
(6,8,0)
(16,12,0)
(27,12,0)
(4,23,0)
(21,13,0)
(10,26,0)
(20,16,0)
(9,8,0)
(17,23,0)
(1,21,0)
(11,6,0)
(25,8,0)
(18,16,0)
(23,21,0)
(0,21,0)
(7,13,0)
(26,23,0)
(8,6,0)
(12,16,0)
(10,6,1)
(9,25,1)
(26,28,1)
(15,2,1)
(23,4,1)
(15,7,1)
(16,20,1)
(16,23,1)
(26,23,1)
(27,6,1)
(8,25,1)
(7,1,1)
(25,23,1)
(14,26,1)
(8,9,1)
(6,11,1)
(28,10,1)
(12,16,1)
(1,26,1)
(4,17,1)
(26,12,1)
(1,14,1)
(6,8,1)
(18,27,1)
(10,12,1)
(11,8,1)
(17,2,1)
(20,18,1)
(17,2,2)
(26,23,2)
(23,2,2)
(8,25,2)
(16,23,2)
(26,2,2)
(9,2,2)
(14,2,2)
(8,2,2)
(28,2,2)
(6,2,2)
(6,8,2)
(12,6,2)
(7,2,2)
(20,6,2)
(10,2,2)
(1,2,2)
(4,2,2)
(16,6,2)
(23,4,2)
(25,2,2)
(18,6,2)
(12,16,2)
(26,12,2)
(1,26,2)
(27,6,2)
(11,2,2)
-----------------------------------
(0,intSigned)
(1,printIntLine(intSigned)
(2,1)
(3,intUnsigned)
(4,rand()
(5,)
(6,rand()
(7,break;)
(8,rand()
(9,2)
(10,intSigned)
(11,0)
(12,intUnsigned = UINT_MAX - intUnsigned)
(13,)
(14,intSigned)
(15,RET)
(16,UINT_MAX - intUnsigned)
(17,intUnsigned)
(18,UINT_MAX)
(19,)
(20,intUnsigned)
(21,)
(22,if (rand()
(23,intUnsigned = rand()
(24,while(1)
(25,rand()
(26,intSigned = intUnsigned)
(27,intUnsigned)
(28,intUnsigned)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^