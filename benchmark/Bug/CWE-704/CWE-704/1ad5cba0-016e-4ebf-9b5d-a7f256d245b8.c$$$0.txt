-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_66b_badSink(int dataArray[])
{
    /* copy data out of dataArray */
    int data = dataArray[2];
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
21,26
21,27
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
34,35
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
57,59
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,6,8,9,13,15,19,20,24,26,28,31,33,35,37,41,43,44,46,47,52,54,55,56,60,61,66,68,70,72,77,79,80,84,86
-----computeFrom-----
45,46
45,47
49,50
49,51
53,54
53,55
58,59
58,60
74,75
74,76
-----guardedBy-----
60,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_66b_badSink(int dataArray[]){    /* copy data out of dataArray */    int data = dataArray[2];    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_66b_badSink(int dataArray[])
CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_66b_badSink
int dataArray[]
int
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    int data = dataArray[2];    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data = dataArray[2];
int data = dataArray[2];
int
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(40,22,0)
(17,30,0)
(23,35,0)
(14,22,0)
(28,38,0)
(24,18,0)
(43,22,0)
(19,30,0)
(39,10,0)
(17,22,0)
(20,13,0)
(37,18,0)
(7,35,0)
(11,4,0)
(30,17,0)
(1,8,0)
(42,17,0)
(0,7,0)
(2,9,0)
(6,2,0)
(10,28,0)
(15,8,0)
(29,10,0)
(7,6,0)
(37,43,0)
(35,22,0)
(6,4,0)
(34,7,0)
(2,6,0)
(22,4,0)
(33,17,0)
(3,18,0)
(16,2,0)
(41,22,0)
(31,2,0)
(36,30,0)
(32,7,0)
(7,38,0)
(5,6,0)
(13,22,0)
(8,6,0)
(25,37,0)
(27,28,0)
(21,35,0)
(26,43,0)
(13,35,0)
(10,35,0)
(18,37,0)
(10,6,0)
(26,37,1)
(21,6,1)
(17,30,1)
(37,18,1)
(27,10,1)
(19,36,1)
(29,7,1)
(34,32,1)
(2,9,1)
(28,27,1)
(12,13,1)
(33,42,1)
(36,33,1)
(32,8,1)
(31,5,1)
(7,35,1)
(13,35,1)
(7,0,1)
(8,15,1)
(43,26,1)
(2,16,1)
(20,8,1)
(42,35,1)
(0,34,1)
(23,21,1)
(35,23,1)
(10,6,1)
(7,6,1)
(24,3,1)
(30,19,1)
(25,17,1)
(16,31,1)
(18,24,1)
(13,20,1)
(10,39,1)
(39,29,1)
(10,35,1)
(15,1,1)
(20,28,1)
(8,6,1)
(6,2,1)
(3,25,1)
(1,43,1)
(27,8,2)
(28,8,2)
(34,8,2)
(29,8,2)
(39,8,2)
(32,8,2)
(10,8,2)
(7,6,2)
(10,6,2)
(7,35,2)
(13,35,2)
(17,30,2)
(7,8,2)
(2,9,2)
(37,18,2)
(8,6,2)
(0,8,2)
(6,2,2)
(10,35,2)
-----------------------------------
(0,data)
(1,data)
(2,dataArray[2])
(3,100)
(4,)
(5,data)
(6,data = dataArray[2])
(7,memcpy(dest, source, data)
(8,data < 100)
(9,int dataArray[])
(10,dest[data])
(11,data)
(12,RET)
(13,printLine(dest)
(14,dest)
(15,100)
(16,2)
(17,memset(source, \\\'A\\\', 100-1)
(18,100-1)
(19,1)
(20,dest)
(21,dest)
(22,)
(23,"")
(24,1)
(25,source)
(26,\\\'\\\\0\\\')
(27,\\\'\\\\0\\\')
(28,dest[data] = \\\'\\\\0\\\')
(29,dest)
(30,100-1)
(31,dataArray)
(32,dest)
(33,\\\'A\\\')
(34,source)
(35,dest[100] = "")
(36,100)
(37,source[100-1])
(38,)
(39,data)
(40,source)
(41,if (data < 100)
(42,source)
(43,source[100-1] = \\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^