-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_rand_10_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    if(globalTrue)
    {
        /* FLAW: Use a random number */
        data = (short)RAND32();
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
33,34
34,35
34,36
36,37
36,38
38,39
39,40
39,41
40,41
40,42
43,44
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,16,19,24,27,28,31,35,37,41,42,44,48,50
-----computeFrom-----
12,13
12,14
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_rand_10_bad(){    short data;    /* Initialize data */    data = -1;    if(globalTrue)    {        /* FLAW: Use a random number */        data = (short)RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_rand_10_bad()
CWE197_Numeric_Truncation_Error__short_rand_10_bad
{    short data;    /* Initialize data */    data = -1;    if(globalTrue)    {        /* FLAW: Use a random number */        data = (short)RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
if(globalTrue)    {        /* FLAW: Use a random number */        data = (short)RAND32();    }
globalTrue
globalTrue
{        /* FLAW: Use a random number */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(15,20,0)
(11,2,0)
(6,3,0)
(4,9,0)
(8,0,0)
(13,17,0)
(18,17,0)
(12,15,0)
(9,19,0)
(16,7,0)
(7,5,0)
(10,6,0)
(22,13,0)
(2,17,0)
(3,6,0)
(9,7,0)
(13,2,0)
(19,9,0)
(23,3,0)
(2,15,0)
(20,15,0)
(17,0,0)
(15,2,0)
(15,7,0)
(9,4,0)
(7,9,0)
(1,0,0)
(15,6,0)
(6,0,0)
(15,7,1)
(13,2,1)
(22,2,1)
(2,15,1)
(19,16,1)
(13,22,1)
(21,6,1)
(12,11,1)
(23,10,1)
(15,20,1)
(9,19,1)
(9,4,1)
(6,3,1)
(3,23,1)
(14,13,1)
(16,21,1)
(7,9,1)
(15,12,1)
(11,21,1)
(11,7,1)
(15,6,1)
(7,21,2)
(15,20,2)
(15,7,2)
(6,3,2)
(9,4,2)
(16,21,2)
(7,9,2)
(2,15,2)
(15,6,2)
(9,19,2)
(9,21,2)
(13,2,2)
(19,21,2)
-----------------------------------
(0,)
(1,data)
(2,charData = (char)
(3,-1)
(4,short)
(5,)
(6,data = -1)
(7,data = (short)
(8,if(globalTrue)
(9,(short)
(10,data)
(11,charData)
(12,data)
(13,printHexCharLine(charData)
(14,RET)
(15,(char)
(16,data)
(17,)
(18,charData)
(19,RAND32()
(20,char)
(21,globalTrue)
(22,charData)
(23,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^