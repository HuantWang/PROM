-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_02_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(1)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    {
        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
        short shortData = (short)data;
        printShortLine(shortData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
20,21
20,22
21,22
22,23
22,24
24,25
24,26
24,27
26,27
27,28
29,30
31,32
31,33
31,34
32,33
32,34
33,34
33,35
33,36
33,37
34,35
36,37
38,39
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
54,55
55,56
56,57
56,58
57,58
60,61
60,62
61,62
62,63
62,64
64,65
64,66
66,67
67,68
67,69
68,69
68,70
71,72
73,74
74,75
74,76
75,76
77,78
-----nextToken-----
2,4,8,10,14,16,18,23,25,28,30,35,37,39,41,43,48,51,53,58,59,63,65,69,70,72,76,78
-----computeFrom-----
12,13
12,14
32,33
32,34
46,47
46,48
-----guardedBy-----
37,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_02_bad(){    int data;    /* Initialize data */    data = -1;    if(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_short_02_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_short_02_bad
{    int data;    /* Initialize data */    data = -1;    if(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(1)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
1
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(4,20,0)
(3,29,0)
(6,12,0)
(20,37,0)
(12,22,0)
(20,23,0)
(35,29,0)
(5,27,0)
(22,12,0)
(26,20,0)
(8,27,0)
(29,35,0)
(0,3,0)
(17,23,0)
(29,15,0)
(3,22,0)
(14,29,0)
(34,5,0)
(25,28,0)
(9,37,0)
(27,21,0)
(16,2,0)
(38,20,0)
(23,20,0)
(31,13,0)
(19,21,0)
(10,37,0)
(28,27,0)
(3,5,0)
(5,3,0)
(33,35,0)
(37,2,0)
(35,37,0)
(22,21,0)
(36,21,0)
(30,22,0)
(2,24,0)
(32,31,0)
(3,18,0)
(1,2,0)
(18,3,0)
(28,5,0)
(12,6,1)
(26,37,1)
(28,5,1)
(32,23,1)
(9,10,1)
(0,34,1)
(20,37,1)
(14,23,1)
(22,12,1)
(38,26,1)
(35,33,1)
(34,31,1)
(20,4,1)
(34,29,1)
(3,18,1)
(3,29,1)
(11,28,1)
(10,7,1)
(23,20,1)
(7,22,1)
(34,7,1)
(5,3,1)
(29,35,1)
(31,32,1)
(4,38,1)
(33,14,1)
(3,22,1)
(23,17,1)
(6,30,1)
(25,5,1)
(35,37,1)
(28,25,1)
(37,9,1)
(3,0,1)
(17,20,1)
(9,7,2)
(22,12,2)
(23,20,2)
(31,23,2)
(20,37,2)
(37,7,2)
(20,7,2)
(33,23,2)
(28,5,2)
(17,7,2)
(35,23,2)
(3,29,2)
(32,23,2)
(23,7,2)
(10,7,2)
(5,3,2)
(3,18,2)
(29,23,2)
(26,7,2)
(38,7,2)
(35,37,2)
(3,22,2)
(4,7,2)
(29,35,2)
(14,23,2)
-----------------------------------
(0,data)
(1,inputBuffer)
(2,)
(3,(short)
(4,stdin)
(5,shortData = (short)
(6,1)
(7,1)
(8,shortData)
(9,"")
(10,inputBuffer)
(11,RET)
(12,-1)
(13,)
(14,data)
(15,)
(16,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(17,NULL)
(18,short)
(19,if(1)
(20,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(21,)
(22,data = -1)
(23,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(24,)
(25,shortData)
(26,inputBuffer)
(27,)
(28,printShortLine(shortData)
(29,data = atoi(inputBuffer)
(30,data)
(31,printLine("fgets()
(32,"fgets()
(33,inputBuffer)
(34,shortData)
(35,atoi(inputBuffer)
(36,data)
(37,inputBuffer[CHAR_ARRAY_SIZE] = "")
(38,CHAR_ARRAY_SIZE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^