-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_03_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(5==5)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
21,22
22,23
23,24
23,25
24,25
26,27
27,28
29,30
29,31
29,32
29,33
29,34
29,35
30,31
31,32
31,33
33,34
33,35
35,36
37,38
38,39
38,40
40,41
40,42
40,43
42,43
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
53,55
56,57
57,58
57,59
58,59
58,60
59,60
61,62
61,63
65,66
65,67
66,67
66,68
67,68
70,71
70,72
71,72
72,73
72,74
72,75
72,76
73,74
75,76
77,78
79,80
81,82
82,83
82,84
83,84
83,85
84,85
86,87
89,90
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,8,10,14,16,19,20,25,28,32,34,36,39,41,43,45,49,51,52,54,55,60,62,63,64,68,69,74,76,78,80,85,87,88,92,94
-----computeFrom-----
12,13
12,14
18,19
18,20
23,24
23,25
53,54
53,55
57,58
57,59
61,62
61,63
66,67
66,68
82,83
82,84
-----guardedBy-----
68,87
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_03_bad(){    int data;    /* Initialize data */    data = -1;    if(5==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_03_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_03_bad
{    int data;    /* Initialize data */    data = -1;    if(5==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(5==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
5==5
5
5
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(2,0,0)
(36,32,0)
(9,36,0)
(49,46,0)
(6,31,0)
(41,3,0)
(3,41,0)
(47,26,0)
(7,39,0)
(27,5,0)
(16,34,0)
(29,19,0)
(25,6,0)
(38,31,0)
(4,36,0)
(8,49,0)
(45,46,0)
(33,19,0)
(6,41,0)
(13,35,0)
(41,48,0)
(11,33,0)
(23,26,0)
(10,26,0)
(40,14,0)
(1,21,0)
(5,31,0)
(43,33,0)
(17,14,0)
(42,36,0)
(19,33,0)
(28,19,0)
(14,34,0)
(0,32,0)
(34,26,0)
(15,34,0)
(36,41,0)
(44,24,0)
(36,34,0)
(20,6,0)
(31,21,0)
(18,39,0)
(24,34,0)
(30,41,0)
(24,26,0)
(12,35,0)
(33,26,0)
(31,5,0)
(36,31,0)
(14,41,0)
(22,21,0)
(49,35,0)
(35,49,0)
(26,21,0)
(14,0,0)
(46,26,0)
(14,31,0)
(44,0,1)
(31,5,1)
(28,29,1)
(24,44,1)
(49,35,1)
(30,39,1)
(42,6,1)
(34,16,1)
(3,30,1)
(36,41,1)
(14,17,1)
(43,34,1)
(33,19,1)
(36,4,1)
(6,31,1)
(46,45,1)
(14,31,1)
(29,11,1)
(17,40,1)
(5,27,1)
(6,20,1)
(36,31,1)
(36,34,1)
(44,6,1)
(37,24,1)
(15,39,1)
(13,8,1)
(20,25,1)
(41,3,1)
(2,14,1)
(14,34,1)
(0,2,1)
(16,15,1)
(24,34,1)
(6,41,1)
(14,41,1)
(11,43,1)
(8,33,1)
(19,28,1)
(27,38,1)
(12,13,1)
(40,36,1)
(39,7,1)
(45,49,1)
(35,12,1)
(18,31,1)
(4,9,1)
(7,18,1)
(25,46,1)
(15,41,1)
(9,42,1)
(4,6,2)
(41,39,2)
(3,39,2)
(6,31,2)
(0,6,2)
(24,34,2)
(14,6,2)
(9,6,2)
(14,41,2)
(14,34,2)
(36,6,2)
(49,35,2)
(6,41,2)
(36,31,2)
(30,39,2)
(36,41,2)
(36,34,2)
(17,6,2)
(31,5,2)
(41,3,2)
(42,6,2)
(40,6,2)
(2,6,2)
(33,19,2)
(14,31,2)
-----------------------------------
(0,dest[data] = \\\'\\\\0\\\')
(1,if(5==5)
(2,\\\'\\\\0\\\')
(3,RAND32()
(4,data)
(5,-1)
(6,data < 100)
(7,5)
(8,source)
(9,source)
(10,dest)
(11,\\\'A\\\')
(12,1)
(13,100)
(14,dest[data])
(15,dest)
(16,"")
(17,data)
(18,5)
(19,100-1)
(20,100)
(21,)
(22,data)
(23,if (data < 100)
(24,printLine(dest)
(25,data)
(26,)
(27,1)
(28,1)
(29,100)
(30,data)
(31,data = -1)
(32,)
(33,memset(source, \\\'A\\\', 100-1)
(34,dest[100] = "")
(35,100-1)
(36,memmove(dest, source, data)
(37,RET)
(38,data)
(39,5==5)
(40,dest)
(41,data = RAND32()
(42,dest)
(43,source)
(44,dest)
(45,\\\'\\\\0\\\')
(46,source[100-1] = \\\'\\\\0\\\')
(47,source)
(48,)
(49,source[100-1])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^