-----label-----
1
-----code-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_04_bad()
{
    void * data;
    twoIntsStruct dataGoodBuffer;
    int dataBadBuffer = 100;
    dataGoodBuffer.intOne = 0;
    dataGoodBuffer.intTwo = 0;
    if(STATIC_CONST_TRUE)
    {
        /* FLAW: Set data to point to an int */
        data = &dataBadBuffer;
    }
    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */
    printStructLine((twoIntsStruct *)data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
23,24
25,26
26,27
26,28
27,28
27,29
28,29
32,33
33,34
33,35
34,35
34,36
35,36
39,40
39,41
40,41
42,43
43,44
44,45
44,46
45,46
47,48
48,49
50,51
51,52
51,53
52,53
54,55
54,56
55,56
55,57
56,57
58,59
60,61
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,29,30,31,36,37,38,41,46,49,53,57,59,61
-----computeFrom-----
26,27
26,28
33,34
33,35
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_04_bad(){    void * data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    if(STATIC_CONST_TRUE)    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */    printStructLine((twoIntsStruct *)data);}
void
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_04_bad()
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_04_bad
{    void * data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    if(STATIC_CONST_TRUE)    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */    printStructLine((twoIntsStruct *)data);}
void * data;
void * data;
void
* data
*
data
twoIntsStruct dataGoodBuffer;
twoIntsStruct dataGoodBuffer;
twoIntsStruct
twoIntsStruct
dataGoodBuffer
dataGoodBuffer
int dataBadBuffer = 100;
int dataBadBuffer = 100;
int
dataBadBuffer = 100
dataBadBuffer
= 100
100
dataGoodBuffer.intOne = 0;
dataGoodBuffer.intOne = 0
dataGoodBuffer.intOne
dataGoodBuffer
dataGoodBuffer
intOne
0
dataGoodBuffer.intTwo = 0;
dataGoodBuffer.intTwo = 0
dataGoodBuffer.intTwo
dataGoodBuffer
dataGoodBuffer
intTwo
0
if(STATIC_CONST_TRUE)    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }
data = &dataBadBuffer;
data = &dataBadBuffer
data
data
&dataBadBuffer
dataBadBuffer
dataBadBuffer
printStructLine((twoIntsStruct *)data);
printStructLine((twoIntsStruct *)data)
printStructLine
printStructLine
(twoIntsStruct *)data
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
data
data
-----joern-----
(21,15,0)
(12,7,0)
(15,9,0)
(3,9,0)
(16,24,0)
(19,9,0)
(4,15,0)
(18,20,0)
(1,9,0)
(24,15,0)
(7,18,0)
(7,19,0)
(25,9,0)
(19,7,0)
(6,8,0)
(24,18,0)
(23,7,0)
(27,17,0)
(17,5,0)
(18,24,0)
(22,5,0)
(13,17,0)
(8,9,0)
(26,18,0)
(7,12,0)
(5,9,0)
(28,11,0)
(11,8,0)
(0,9,0)
(10,11,0)
(11,28,1)
(14,5,1)
(7,23,1)
(24,15,1)
(13,27,1)
(6,11,1)
(5,22,1)
(24,16,1)
(28,10,1)
(16,26,1)
(22,17,1)
(27,8,1)
(7,18,1)
(2,19,1)
(17,13,1)
(7,12,1)
(23,18,1)
(19,7,1)
(10,15,1)
(8,6,1)
(26,14,1)
(23,14,1)
(21,4,1)
(18,24,1)
(15,21,1)
(24,15,2)
(19,7,2)
(16,14,2)
(7,12,2)
(18,14,2)
(18,24,2)
(7,18,2)
(26,14,2)
(24,14,2)
-----------------------------------
(0,dataGoodBuffer)
(1,if(STATIC_CONST_TRUE)
(2,RET)
(3,dataBadBuffer)
(4,dataBadBuffer)
(5,dataGoodBuffer.intTwo = 0)
(6,0)
(7,(twoIntsStruct *)
(8,dataGoodBuffer.intOne = 0)
(9,)
(10,dataGoodBuffer)
(11,dataGoodBuffer.intOne)
(12,twoIntsStruct *)
(13,intTwo)
(14,STATIC_CONST_TRUE)
(15,dataBadBuffer = 100)
(16,dataBadBuffer)
(17,dataGoodBuffer.intTwo)
(18,data = &dataBadBuffer)
(19,printStructLine((twoIntsStruct *)
(20,)
(21,100)
(22,0)
(23,data)
(24,&dataBadBuffer)
(25,data)
(26,data)
(27,dataGoodBuffer)
(28,intOne)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^