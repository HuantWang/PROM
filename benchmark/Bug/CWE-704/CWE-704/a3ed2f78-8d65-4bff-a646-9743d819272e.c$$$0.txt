-----label-----
1
-----code-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_16_bad()
{
    void * data;
    twoIntsStruct dataGoodBuffer;
    int dataBadBuffer = 100;
    dataGoodBuffer.intOne = 0;
    dataGoodBuffer.intTwo = 0;
    while(1)
    {
        /* FLAW: Set data to point to an int */
        data = &dataBadBuffer;
        break;
    }
    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */
    printStructLine((twoIntsStruct *)data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
23,24
25,26
26,27
26,28
27,28
27,29
28,29
32,33
33,34
33,35
34,35
34,36
35,36
39,40
39,41
41,42
41,43
42,43
43,44
43,45
44,45
46,47
47,48
50,51
51,52
51,53
52,53
54,55
54,56
55,56
55,57
56,57
58,59
60,61
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,29,30,31,36,37,38,40,45,48,49,53,57,59,61
-----computeFrom-----
26,27
26,28
33,34
33,35
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_16_bad(){    void * data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    while(1)    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;        break;    }    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */    printStructLine((twoIntsStruct *)data);}
void
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_16_bad()
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_16_bad
{    void * data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    while(1)    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;        break;    }    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */    printStructLine((twoIntsStruct *)data);}
void * data;
void * data;
void
* data
*
data
twoIntsStruct dataGoodBuffer;
twoIntsStruct dataGoodBuffer;
twoIntsStruct
twoIntsStruct
dataGoodBuffer
dataGoodBuffer
int dataBadBuffer = 100;
int dataBadBuffer = 100;
int
dataBadBuffer = 100
dataBadBuffer
= 100
100
dataGoodBuffer.intOne = 0;
dataGoodBuffer.intOne = 0
dataGoodBuffer.intOne
dataGoodBuffer
dataGoodBuffer
intOne
0
dataGoodBuffer.intTwo = 0;
dataGoodBuffer.intTwo = 0
dataGoodBuffer.intTwo
dataGoodBuffer
dataGoodBuffer
intTwo
0
while(1)    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;        break;    }
1
{        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;        break;    }
data = &dataBadBuffer;
data = &dataBadBuffer
data
data
&dataBadBuffer
dataBadBuffer
dataBadBuffer
break;
printStructLine((twoIntsStruct *)data);
printStructLine((twoIntsStruct *)data)
printStructLine
printStructLine
(twoIntsStruct *)data
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
data
data
-----joern-----
(3,1,0)
(20,1,0)
(22,24,0)
(9,20,0)
(28,26,0)
(1,26,0)
(6,20,0)
(21,25,0)
(24,4,0)
(4,25,0)
(7,21,0)
(1,20,0)
(5,7,0)
(12,25,0)
(0,6,0)
(17,6,0)
(18,14,0)
(8,7,0)
(27,6,0)
(15,25,0)
(6,17,0)
(2,21,0)
(6,27,0)
(20,14,0)
(29,25,0)
(19,4,0)
(17,25,0)
(26,25,0)
(23,26,0)
(11,25,0)
(10,24,0)
(19,24,1)
(20,1,1)
(16,4,1)
(6,0,1)
(5,26,1)
(21,2,1)
(17,6,1)
(23,28,1)
(10,22,1)
(6,20,1)
(0,18,1)
(7,8,1)
(9,16,1)
(24,10,1)
(8,5,1)
(0,16,1)
(2,7,1)
(1,3,1)
(22,21,1)
(4,19,1)
(6,27,1)
(13,17,1)
(18,20,1)
(3,9,1)
(26,23,1)
(1,26,1)
(9,16,2)
(18,16,2)
(20,16,2)
(3,16,2)
(17,6,2)
(1,26,2)
(6,27,2)
(6,20,2)
(20,1,2)
(1,16,2)
-----------------------------------
(0,data)
(1,&dataBadBuffer)
(2,0)
(3,dataBadBuffer)
(4,dataGoodBuffer.intTwo = 0)
(5,dataGoodBuffer)
(6,(twoIntsStruct *)
(7,dataGoodBuffer.intOne)
(8,intOne)
(9,data)
(10,intTwo)
(11,dataGoodBuffer)
(12,while(1)
(13,RET)
(14,)
(15,dataBadBuffer)
(16,1)
(17,printStructLine((twoIntsStruct *)
(18,break;)
(19,0)
(20,data = &dataBadBuffer)
(21,dataGoodBuffer.intOne = 0)
(22,dataGoodBuffer)
(23,100)
(24,dataGoodBuffer.intTwo)
(25,)
(26,dataBadBuffer = 100)
(27,twoIntsStruct *)
(28,dataBadBuffer)
(29,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^