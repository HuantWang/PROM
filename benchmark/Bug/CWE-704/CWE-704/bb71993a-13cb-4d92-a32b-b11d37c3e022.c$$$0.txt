-----label-----
1
-----code-----
void CWE843_Type_Confusion__char_01_bad()
{
    void * data;
    /* Initialize data */
    data = NULL;
    {
        /* FLAW: Point data to a char */
        char charBuffer = 'a';
        data = &charBuffer;
    }
    /* POTENTIAL FLAW: Attempt to access data as an int */
    printIntLine(*((int*)data));
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
20,21
20,22
22,23
22,24
24,25
26,27
27,28
27,29
28,29
30,31
31,32
33,34
34,35
34,36
35,36
37,38
38,39
39,40
39,41
40,41
40,42
42,43
44,45
-----nextToken-----
2,4,8,10,11,15,17,21,23,25,29,32,36,41,43,45
-----computeFrom-----
13,14
13,15
27,28
27,29
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;UnaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE843_Type_Confusion__char_01_bad(){    void * data;    /* Initialize data */    data = NULL;    {        /* FLAW: Point data to a char */        char charBuffer = 'a';        data = &charBuffer;    }    /* POTENTIAL FLAW: Attempt to access data as an int */    printIntLine(*((int*)data));}
void
CWE843_Type_Confusion__char_01_bad()
CWE843_Type_Confusion__char_01_bad
{    void * data;    /* Initialize data */    data = NULL;    {        /* FLAW: Point data to a char */        char charBuffer = 'a';        data = &charBuffer;    }    /* POTENTIAL FLAW: Attempt to access data as an int */    printIntLine(*((int*)data));}
void * data;
void * data;
void
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
{        /* FLAW: Point data to a char */        char charBuffer = 'a';        data = &charBuffer;    }
char charBuffer = 'a';
char charBuffer = 'a';
char
charBuffer = 'a'
charBuffer
= 'a'
'a'
data = &charBuffer;
data = &charBuffer
data
data
&charBuffer
charBuffer
charBuffer
printIntLine(*((int*)data));
printIntLine(*((int*)data))
printIntLine
printIntLine
*((int*)data)
((int*)data)
(int*)data
int*
int
*
*
data
data
-----joern-----
(14,11,0)
(4,5,0)
(11,13,0)
(9,13,0)
(7,3,0)
(0,14,0)
(8,15,0)
(10,5,0)
(4,6,0)
(14,1,0)
(2,11,0)
(20,3,0)
(13,15,0)
(1,14,0)
(5,4,0)
(6,15,0)
(5,1,0)
(1,13,0)
(19,1,0)
(3,15,0)
(6,4,0)
(5,12,0)
(12,5,0)
(18,11,0)
(19,11,1)
(0,19,1)
(10,1,1)
(18,2,1)
(5,1,1)
(11,18,1)
(4,5,1)
(16,6,1)
(2,3,1)
(5,12,1)
(6,4,1)
(3,20,1)
(1,14,1)
(14,11,1)
(14,0,1)
(20,7,1)
(5,10,1)
(5,1,2)
(5,12,2)
(4,5,2)
(1,14,2)
(6,4,2)
(14,11,2)
-----------------------------------
(0,charBuffer)
(1,data = &charBuffer)
(2,charBuffer)
(3,data = NULL)
(4,*((int*)
(5,(int*)
(6,printIntLine(*((int*)
(7,data)
(8,data)
(9,charBuffer)
(10,data)
(11,charBuffer = \'a\')
(12,int*)
(13,)
(14,&charBuffer)
(15,)
(16,RET)
(17,charBuffer = 'a')
(18,'a')
(19,data)
(20,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^