-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_rand_to_char_11_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
27,28
29,30
29,31
30,31
31,32
31,33
33,34
33,35
35,36
36,37
36,38
37,38
37,39
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,16,20,25,28,32,34,38,39,41,45,47
-----computeFrom-----
12,13
12,14
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_rand_to_char_11_bad(){    int data;    /* Initialize data */    data = -1;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__int_rand_to_char_11_bad()
CWE197_Numeric_Truncation_Error__int_rand_to_char_11_bad
{    int data;    /* Initialize data */    data = -1;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(14,15,0)
(8,5,0)
(10,17,0)
(20,12,0)
(12,15,0)
(17,15,0)
(5,21,0)
(0,16,0)
(6,0,0)
(15,2,0)
(5,18,0)
(10,16,0)
(3,10,0)
(12,17,0)
(9,2,0)
(7,16,0)
(16,0,0)
(1,2,0)
(13,10,0)
(10,5,0)
(17,10,0)
(16,2,0)
(10,3,0)
(11,17,0)
(18,5,0)
(11,5,1)
(10,3,1)
(4,12,1)
(20,17,1)
(19,16,1)
(10,13,1)
(0,6,1)
(6,7,1)
(10,5,1)
(18,8,1)
(17,10,1)
(5,18,1)
(12,17,1)
(16,0,1)
(8,19,1)
(12,20,1)
(13,11,1)
(10,16,1)
(11,19,1)
(17,10,2)
(10,5,2)
(8,19,2)
(18,19,2)
(5,19,2)
(12,17,2)
(10,16,2)
(5,18,2)
(10,3,2)
(16,0,2)
-----------------------------------
(0,-1)
(1,data)
(2,)
(3,char)
(4,RET)
(5,data = RAND32()
(6,1)
(7,data)
(8,data)
(9,if(globalReturnsTrue()
(10,(char)
(11,charData)
(12,printHexCharLine(charData)
(13,data)
(14,charData)
(15,)
(16,data = -1)
(17,charData = (char)
(18,RAND32()
(19,globalReturnsTrue()
(20,charData)
(21,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^