-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_06_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(STATIC_CONST_FIVE==5)
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
32,35
32,36
32,37
32,38
33,34
34,35
34,36
36,37
36,38
38,39
40,41
41,42
41,43
43,44
43,45
43,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
68,70
69,70
69,71
70,71
73,74
73,75
74,75
75,76
75,77
75,78
75,79
76,77
78,79
80,81
82,83
84,85
85,86
85,87
86,87
86,88
87,88
89,90
92,93
93,94
93,95
94,95
96,97
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,37,39,42,44,46,48,52,54,55,57,58,63,65,66,67,71,72,77,79,81,83,88,90,91,95,97
-----computeFrom-----
12,13
12,14
17,18
17,19
56,57
56,58
60,61
60,62
64,65
64,66
69,70
69,71
85,86
85,87
-----guardedBy-----
71,90
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_strncpy_06_bad(){    short data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_06_bad()
CWE194_Unexpected_Sign_Extension__fscanf_strncpy_06_bad
{    short data;    /* Initialize data */    data = 0;    if(STATIC_CONST_FIVE==5)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(42,19,0)
(21,42,0)
(37,47,0)
(9,28,0)
(6,29,0)
(19,26,0)
(20,33,0)
(24,23,0)
(33,50,0)
(50,33,0)
(36,7,0)
(48,42,0)
(39,33,0)
(41,19,0)
(11,38,0)
(30,26,0)
(31,50,0)
(6,28,0)
(10,29,0)
(50,28,0)
(43,16,0)
(7,28,0)
(26,23,0)
(46,26,0)
(27,38,0)
(14,6,0)
(49,23,0)
(37,2,0)
(33,3,0)
(45,2,0)
(1,28,0)
(22,40,0)
(29,47,0)
(4,34,0)
(40,26,0)
(5,34,0)
(0,34,0)
(2,26,0)
(28,23,0)
(6,2,0)
(16,26,0)
(25,37,0)
(18,7,0)
(12,37,0)
(19,42,0)
(13,6,0)
(40,2,0)
(34,5,0)
(17,26,0)
(15,37,0)
(37,28,0)
(5,16,0)
(8,5,0)
(35,19,0)
(44,2,0)
(15,25,1)
(31,39,1)
(11,28,1)
(22,29,1)
(38,27,1)
(33,50,1)
(34,0,1)
(41,2,1)
(50,31,1)
(43,5,1)
(39,20,1)
(6,14,1)
(32,40,1)
(4,8,1)
(6,28,1)
(19,42,1)
(18,16,1)
(50,28,1)
(27,11,1)
(16,43,1)
(6,2,1)
(40,22,1)
(10,6,1)
(42,48,1)
(5,34,1)
(22,7,1)
(7,28,1)
(25,12,1)
(13,37,1)
(14,13,1)
(29,10,1)
(44,45,1)
(48,21,1)
(45,33,1)
(12,7,1)
(20,38,1)
(7,36,1)
(37,28,1)
(35,41,1)
(2,44,1)
(37,2,1)
(8,19,1)
(40,2,1)
(37,15,1)
(21,35,1)
(0,4,1)
(1,9,1)
(36,18,1)
(28,1,1)
(45,38,1)
(50,38,2)
(19,42,2)
(20,38,2)
(7,28,2)
(13,7,2)
(33,38,2)
(5,34,2)
(33,50,2)
(37,28,2)
(6,7,2)
(31,38,2)
(12,7,2)
(6,28,2)
(25,7,2)
(29,7,2)
(6,2,2)
(40,2,2)
(10,7,2)
(15,7,2)
(50,28,2)
(39,38,2)
(14,7,2)
(37,2,2)
(37,7,2)
-----------------------------------
(0,1)
(1,0)
(2,dest[100] = "")
(3,)
(4,100)
(5,source[100-1])
(6,dest[data])
(7,data < 100)
(8,source)
(9,data)
(10,\\\'\\\\0\\\')
(11,STATIC_CONST_FIVE)
(12,dest)
(13,dest)
(14,data)
(15,data)
(16,source[100-1] = \\\'\\\\0\\\')
(17,dest)
(18,data)
(19,memset(source, \\\'A\\\', 100-1)
(20,stdin)
(21,100)
(22,dest)
(23,)
(24,if(STATIC_CONST_FIVE==5)
(25,source)
(26,)
(27,5)
(28,data = 0)
(29,dest[data] = \\\'\\\\0\\\')
(30,if (data < 100)
(31,data)
(32,RET)
(33,fscanf (stdin, "%hd", &data)
(34,100-1)
(35,\\\'A\\\')
(36,100)
(37,strncpy(dest, source, data)
(38,STATIC_CONST_FIVE==5)
(39,"%hd")
(40,printLine(dest)
(41,source)
(42,100-1)
(43,\\\'\\\\0\\\')
(44,"")
(45,dest)
(46,source)
(47,)
(48,1)
(49,data)
(50,&data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^