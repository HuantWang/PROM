-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_large_to_char_31_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    /* FLAW: Use a number larger than SHRT_MAX */
    data = SHRT_MAX + 5;
    {
        int dataCopy = data;
        int data = dataCopy;
        {
            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
            char charData = (char)data;
            printHexCharLine(charData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
22,23
25,26
25,27
25,28
26,27
27,28
27,29
29,30
29,31
31,32
32,33
34,35
35,36
35,37
37,38
37,39
39,40
40,41
42,43
42,44
43,44
44,45
44,46
46,47
46,48
48,49
49,50
49,51
50,51
50,52
53,54
55,56
56,57
56,58
57,58
59,60
-----nextToken-----
2,4,8,10,14,16,20,23,24,28,30,33,36,38,41,45,47,51,52,54,58,60
-----computeFrom-----
12,13
12,14
18,19
18,20
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_large_to_char_31_bad(){    int data;    /* Initialize data */    data = -1;    /* FLAW: Use a number larger than SHRT_MAX */    data = SHRT_MAX + 5;    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_large_to_char_31_bad()
CWE197_Numeric_Truncation_Error__int_large_to_char_31_bad
{    int data;    /* Initialize data */    data = -1;    /* FLAW: Use a number larger than SHRT_MAX */    data = SHRT_MAX + 5;    {        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = SHRT_MAX + 5;
data = SHRT_MAX + 5
data
data
SHRT_MAX + 5
SHRT_MAX
SHRT_MAX
5
{        int dataCopy = data;        int data = dataCopy;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }
int dataCopy = data;
int dataCopy = data;
int
dataCopy = data
dataCopy
= data
data
data
int data = dataCopy;
int data = dataCopy;
int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(29,15,0)
(11,17,0)
(10,2,0)
(8,0,0)
(25,13,0)
(16,14,0)
(13,25,0)
(22,13,0)
(22,21,0)
(24,26,0)
(29,2,0)
(28,13,0)
(14,16,0)
(16,26,0)
(7,17,0)
(29,17,0)
(1,29,0)
(15,29,0)
(0,5,0)
(0,2,0)
(20,5,0)
(13,26,0)
(27,16,0)
(2,5,0)
(17,22,0)
(4,21,0)
(6,21,0)
(18,14,0)
(2,29,0)
(19,25,0)
(17,21,0)
(12,25,0)
(3,22,0)
(23,22,0)
(5,21,0)
(21,26,0)
(0,2,1)
(19,28,1)
(28,16,1)
(22,3,1)
(16,14,1)
(7,22,1)
(3,23,1)
(23,13,1)
(29,15,1)
(14,18,1)
(22,13,1)
(8,2,1)
(29,1,1)
(17,11,1)
(29,17,1)
(0,8,1)
(11,7,1)
(12,19,1)
(9,0,1)
(10,17,1)
(2,29,1)
(17,22,1)
(18,27,1)
(1,10,1)
(25,12,1)
(13,25,1)
(22,13,2)
(13,25,2)
(2,29,2)
(29,15,2)
(17,22,2)
(16,14,2)
(29,17,2)
(0,2,2)
-----------------------------------
(0,printHexCharLine(charData)
(1,data)
(2,charData = (char)
(3,data)
(4,data)
(5,)
(6,dataCopy)
(7,data)
(8,charData)
(9,RET)
(10,charData)
(11,dataCopy)
(12,5)
(13,data = SHRT_MAX + 5)
(14,-1)
(15,char)
(16,data = -1)
(17,data = dataCopy)
(18,1)
(19,SHRT_MAX)
(20,charData)
(21,)
(22,dataCopy = data)
(23,dataCopy)
(24,data)
(25,SHRT_MAX + 5)
(26,)
(27,data)
(28,data)
(29,(char)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^