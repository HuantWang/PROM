-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_memcpy_14_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(globalFive==5)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
28,32
28,33
28,34
29,30
30,31
30,32
32,33
32,34
34,35
36,37
37,38
37,39
39,40
39,41
39,42
41,42
43,44
45,46
46,47
46,48
46,49
46,50
47,48
49,50
52,53
52,54
55,56
56,57
56,58
57,58
57,59
58,59
60,61
60,62
64,65
64,66
65,66
65,67
66,67
69,70
69,71
70,71
71,72
71,73
71,74
71,75
72,73
74,75
76,77
78,79
80,81
81,82
81,83
82,83
82,84
83,84
85,86
88,89
89,90
89,91
90,91
92,93
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,31,33,35,38,40,42,44,48,50,51,53,54,59,61,62,63,67,68,73,75,77,79,84,86,87,91,93
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
52,53
52,54
56,57
56,58
60,61
60,62
65,66
65,67
81,82
81,83
-----guardedBy-----
67,86
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_memcpy_14_bad(){    short data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_memcpy_14_bad()
CWE194_Unexpected_Sign_Extension__negative_memcpy_14_bad
{    short data;    /* Initialize data */    data = 0;    if(globalFive==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(globalFive==5)    {        /* FLAW: Use a negative number */        data = -1;    }
globalFive==5
globalFive
globalFive
5
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(3,24,0)
(1,29,0)
(28,35,0)
(48,4,0)
(30,33,0)
(46,4,0)
(12,35,0)
(23,39,0)
(39,26,0)
(49,36,0)
(35,26,0)
(9,26,0)
(17,36,0)
(35,5,0)
(36,18,0)
(4,48,0)
(21,49,0)
(20,36,0)
(44,5,0)
(13,9,0)
(43,1,0)
(15,49,0)
(40,9,0)
(4,36,0)
(10,39,0)
(42,48,0)
(34,29,0)
(39,25,0)
(14,24,0)
(47,2,0)
(26,11,0)
(31,37,0)
(8,4,0)
(2,26,0)
(37,36,0)
(39,49,0)
(33,25,0)
(38,48,0)
(22,26,0)
(16,36,0)
(17,49,0)
(26,2,0)
(0,18,0)
(1,37,0)
(32,5,0)
(6,39,0)
(19,17,0)
(27,36,0)
(5,18,0)
(35,33,0)
(41,29,0)
(35,49,0)
(39,5,0)
(45,18,0)
(29,1,0)
(9,5,0)
(28,12,1)
(19,33,1)
(31,1,1)
(9,13,1)
(35,28,1)
(24,14,1)
(19,9,1)
(6,9,1)
(2,47,1)
(40,37,1)
(39,10,1)
(32,44,1)
(38,42,1)
(49,15,1)
(39,49,1)
(39,26,1)
(1,29,1)
(35,5,1)
(17,19,1)
(4,48,1)
(35,49,1)
(29,41,1)
(13,40,1)
(46,8,1)
(10,23,1)
(8,49,1)
(35,26,1)
(17,49,1)
(42,46,1)
(39,5,1)
(5,32,1)
(21,26,1)
(9,26,1)
(22,24,1)
(37,31,1)
(23,6,1)
(33,30,1)
(21,24,1)
(7,17,1)
(15,21,1)
(9,5,1)
(14,3,1)
(30,35,1)
(43,4,1)
(34,43,1)
(12,39,1)
(26,2,1)
(3,5,1)
(41,34,1)
(48,38,1)
(47,22,1)
(35,9,2)
(12,9,2)
(39,49,2)
(35,26,2)
(35,49,2)
(1,29,2)
(28,9,2)
(22,24,2)
(39,26,2)
(23,9,2)
(39,5,2)
(30,9,2)
(9,5,2)
(35,5,2)
(4,48,2)
(9,26,2)
(6,9,2)
(33,9,2)
(26,24,2)
(39,9,2)
(17,49,2)
(2,24,2)
(47,24,2)
(26,2,2)
(10,9,2)
-----------------------------------
(0,if(globalFive==5)
(1,source[100-1])
(2,-1)
(3,globalFive)
(4,memset(source, \\\'A\\\', 100-1)
(5,data = 0)
(6,dest)
(7,RET)
(8,source)
(9,data < 100)
(10,data)
(11,)
(12,dest)
(13,100)
(14,5)
(15,"")
(16,dest)
(17,printLine(dest)
(18,)
(19,dest)
(20,source)
(21,dest)
(22,data)
(23,source)
(24,globalFive==5)
(25,)
(26,data = -1)
(27,if (data < 100)
(28,data)
(29,100-1)
(30,\\\'\\\\0\\\')
(31,\\\'\\\\0\\\')
(32,0)
(33,dest[data] = \\\'\\\\0\\\')
(34,100)
(35,dest[data])
(36,)
(37,source[100-1] = \\\'\\\\0\\\')
(38,1)
(39,memcpy(dest, source, data)
(40,data)
(41,1)
(42,100)
(43,source)
(44,data)
(45,data)
(46,\\\'A\\\')
(47,1)
(48,100-1)
(49,dest[100] = "")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^