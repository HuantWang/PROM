-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_fscanf_31_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    /* FLAW: Use a number input from the console using fscanf() */
    fscanf (stdin, "%hd", &data);
    {
        short dataCopy = data;
        short data = dataCopy;
        {
            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
            char charData = (char)data;
            printHexCharLine(charData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
18,21
18,22
19,20
21,22
24,25
25,26
27,28
27,29
27,30
28,29
29,30
29,31
31,32
31,33
33,34
34,35
36,37
37,38
37,39
39,40
39,41
41,42
42,43
44,45
44,46
45,46
46,47
46,48
48,49
48,50
50,51
51,52
51,53
52,53
52,54
55,56
57,58
58,59
58,60
59,60
61,62
-----nextToken-----
2,4,8,10,14,16,20,22,23,26,30,32,35,38,40,43,47,49,53,54,56,60,62
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_fscanf_31_bad(){    short data;    /* Initialize data */    data = -1;    /* FLAW: Use a number input from the console using fscanf() */    fscanf (stdin, "%hd", &data);    {        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
void
CWE197_Numeric_Truncation_Error__short_fscanf_31_bad()
CWE197_Numeric_Truncation_Error__short_fscanf_31_bad
{    short data;    /* Initialize data */    data = -1;    /* FLAW: Use a number input from the console using fscanf() */    fscanf (stdin, "%hd", &data);    {        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        short dataCopy = data;        short data = dataCopy;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }
short dataCopy = data;
short dataCopy = data;
short
dataCopy = data
dataCopy
= data
data
data
short data = dataCopy;
short data = dataCopy;
short
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(22,11,0)
(0,25,0)
(23,2,0)
(20,26,0)
(8,6,0)
(10,2,0)
(7,3,0)
(11,2,0)
(18,11,0)
(19,21,0)
(27,20,0)
(14,26,0)
(20,24,0)
(25,29,0)
(29,25,0)
(21,10,0)
(13,18,0)
(15,2,0)
(12,20,0)
(1,21,0)
(25,4,0)
(5,29,0)
(24,6,0)
(6,26,0)
(29,11,0)
(25,21,0)
(18,29,0)
(2,26,0)
(24,20,0)
(16,10,0)
(21,2,0)
(28,10,0)
(6,3,0)
(4,25,0)
(3,6,0)
(10,6,0)
(9,24,0)
(24,6,1)
(19,10,1)
(6,3,1)
(7,8,1)
(5,21,1)
(28,20,1)
(12,27,1)
(25,4,1)
(1,19,1)
(25,21,1)
(17,18,1)
(18,29,1)
(16,28,1)
(18,13,1)
(13,29,1)
(24,9,1)
(9,12,1)
(0,5,1)
(25,0,1)
(21,10,1)
(3,7,1)
(10,6,1)
(10,16,1)
(20,24,1)
(21,1,1)
(29,25,1)
(27,6,1)
(25,21,2)
(20,24,2)
(24,6,2)
(21,10,2)
(25,4,2)
(18,29,2)
(6,3,2)
(29,25,2)
(10,6,2)
-----------------------------------
(0,data)
(1,dataCopy)
(2,)
(3,-1)
(4,char)
(5,charData)
(6,data = -1)
(7,1)
(8,data)
(9,data)
(10,dataCopy = data)
(11,)
(12,"%hd")
(13,charData)
(14,data)
(15,data)
(16,data)
(17,RET)
(18,printHexCharLine(charData)
(19,data)
(20,fscanf (stdin, "%hd", &data)
(21,data = dataCopy)
(22,charData)
(23,dataCopy)
(24,&data)
(25,(char)
(26,)
(27,stdin)
(28,dataCopy)
(29,charData = (char)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^