-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_listen_socket_to_short_63b_badSink(int * dataPtr)
{
    int data = *dataPtr;
    {
        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
        short shortData = (short)data;
        printShortLine(shortData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
18,19
20,21
20,22
21,22
22,23
22,24
24,25
24,26
26,27
27,28
27,29
28,29
28,30
31,32
33,34
34,35
34,36
35,36
37,38
-----nextToken-----
2,4,6,8,9,13,15,19,23,25,29,30,32,36,38
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_listen_socket_to_short_63b_badSink(int * dataPtr){    int data = *dataPtr;    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
void
CWE197_Numeric_Truncation_Error__int_listen_socket_to_short_63b_badSink(int * dataPtr)
CWE197_Numeric_Truncation_Error__int_listen_socket_to_short_63b_badSink
int * dataPtr
int
* dataPtr
*
dataPtr
{    int data = *dataPtr;    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
int data = *dataPtr;
int data = *dataPtr;
int
data = *dataPtr
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
{        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(10,4,0)
(10,5,0)
(11,3,0)
(3,15,0)
(1,11,0)
(11,5,0)
(6,11,0)
(2,10,0)
(14,13,0)
(7,5,0)
(0,16,0)
(8,3,0)
(5,10,0)
(5,13,0)
(16,15,0)
(12,15,0)
(15,13,0)
(3,11,0)
(11,1,0)
(16,3,0)
(9,16,1)
(11,6,1)
(0,3,1)
(8,5,1)
(6,8,1)
(5,10,1)
(11,5,1)
(3,11,1)
(10,2,1)
(16,0,1)
(2,7,1)
(11,1,1)
(10,4,1)
(16,3,1)
(11,1,2)
(10,4,2)
(16,3,2)
(3,11,2)
(5,10,2)
(11,5,2)
-----------------------------------
(0,shortData)
(1,short)
(2,dataPtr)
(3,shortData = (short)
(4,int * dataPtr)
(5,data = *dataPtr)
(6,data)
(7,data)
(8,shortData)
(9,RET)
(10,*dataPtr)
(11,(short)
(12,shortData)
(13,)
(14,data)
(15,)
(16,printShortLine(shortData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^