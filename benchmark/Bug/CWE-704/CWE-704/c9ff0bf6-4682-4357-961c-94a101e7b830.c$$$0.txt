-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_02_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(1)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
20,21
21,22
21,23
22,23
24,25
25,26
27,28
27,29
27,30
27,31
27,32
27,33
28,29
29,30
29,31
31,32
31,33
33,34
35,36
36,37
36,38
38,39
38,40
38,41
40,41
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
63,65
64,65
64,66
65,66
68,69
68,70
69,70
70,71
70,72
70,73
70,74
71,72
73,74
75,76
77,78
79,80
80,81
80,82
81,82
81,83
82,83
84,85
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,14,16,18,23,26,30,32,34,37,39,41,43,47,49,50,52,53,58,60,61,62,66,67,72,74,76,78,83,85,86,90,92
-----computeFrom-----
12,13
12,14
21,22
21,23
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
80,81
80,82
-----guardedBy-----
66,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_02_bad(){    int data;    /* Initialize data */    data = -1;    if(1)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_02_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_02_bad
{    int data;    /* Initialize data */    data = -1;    if(1)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(1)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
1
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(46,45,0)
(40,6,0)
(0,28,0)
(44,11,0)
(29,46,0)
(34,28,0)
(34,15,0)
(45,5,0)
(43,6,0)
(13,4,0)
(42,4,0)
(35,28,0)
(30,9,0)
(5,45,0)
(33,38,0)
(17,30,0)
(27,9,0)
(37,46,0)
(20,4,0)
(21,35,0)
(34,20,0)
(45,8,0)
(35,26,0)
(3,34,0)
(1,2,0)
(46,20,0)
(10,39,0)
(11,30,0)
(24,35,0)
(47,28,0)
(34,45,0)
(41,38,0)
(22,20,0)
(15,26,0)
(47,38,0)
(18,39,0)
(36,47,0)
(20,2,0)
(28,38,0)
(23,35,0)
(38,4,0)
(6,38,0)
(25,28,0)
(39,6,0)
(2,20,0)
(32,11,0)
(30,11,0)
(19,38,0)
(6,39,0)
(35,45,0)
(14,15,0)
(9,38,0)
(12,34,0)
(7,45,0)
(35,20,0)
(0,31,1)
(10,18,1)
(11,44,1)
(40,28,1)
(28,25,1)
(15,14,1)
(0,45,1)
(30,11,1)
(7,31,1)
(3,12,1)
(34,20,1)
(43,40,1)
(36,46,1)
(27,30,1)
(2,1,1)
(1,22,1)
(16,47,1)
(46,20,1)
(12,35,1)
(46,45,1)
(34,3,1)
(18,43,1)
(47,28,1)
(35,20,1)
(32,17,1)
(20,2,1)
(46,29,1)
(47,36,1)
(35,45,1)
(17,6,1)
(9,27,1)
(35,21,1)
(23,24,1)
(6,39,1)
(37,9,1)
(44,32,1)
(25,0,1)
(35,28,1)
(14,34,1)
(29,37,1)
(21,23,1)
(34,45,1)
(24,46,1)
(45,5,1)
(34,28,1)
(36,15,1)
(31,20,1)
(5,7,1)
(39,10,1)
(34,28,2)
(35,46,2)
(12,46,2)
(34,20,2)
(20,2,2)
(6,39,2)
(46,20,2)
(21,46,2)
(34,45,2)
(35,45,2)
(24,46,2)
(47,28,2)
(3,46,2)
(34,46,2)
(45,5,2)
(7,31,2)
(35,28,2)
(14,46,2)
(45,31,2)
(35,20,2)
(30,11,2)
(5,31,2)
(23,46,2)
(46,45,2)
(15,46,2)
-----------------------------------
(0,dest)
(1,1)
(2,-1)
(3,data)
(4,)
(5,RAND32()
(6,memset(source, \\\'A\\\', 100-1)
(7,data)
(8,)
(9,source[100-1] = \\\'\\\\0\\\')
(10,1)
(11,100-1)
(12,dest)
(13,data)
(14,\\\'\\\\0\\\')
(15,dest[data] = \\\'\\\\0\\\')
(16,RET)
(17,source)
(18,100)
(19,source)
(20,data = -1)
(21,data)
(22,data)
(23,source)
(24,dest)
(25,"")
(26,)
(27,\\\'\\\\0\\\')
(28,dest[100] = "")
(29,100)
(30,source[100-1])
(31,1)
(32,100)
(33,if (data < 100)
(34,dest[data])
(35,strncpy(dest, source, data)
(36,dest)
(37,data)
(38,)
(39,100-1)
(40,source)
(41,dest)
(42,if(1)
(43,\\\'A\\\')
(44,1)
(45,data = RAND32()
(46,data < 100)
(47,printLine(dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^