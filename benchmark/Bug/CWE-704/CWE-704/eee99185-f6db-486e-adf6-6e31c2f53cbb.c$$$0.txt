-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_18_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    goto source;
source:
    /* FLAW: Use a negative number */
    data = -1;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
21,22
21,23
22,23
24,25
26,27
26,28
26,29
26,30
26,31
26,32
27,28
28,29
28,30
30,31
30,32
32,33
34,35
35,36
35,37
37,38
37,39
37,40
39,40
41,42
43,44
44,45
44,46
44,47
44,48
45,46
47,48
50,51
50,52
53,54
54,55
54,56
55,56
55,57
56,57
58,59
58,60
62,63
62,64
63,64
63,65
64,65
67,68
67,69
68,69
69,70
69,71
69,72
69,73
70,71
72,73
74,75
76,77
78,79
79,80
79,81
80,81
80,82
81,82
83,84
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,29,31,33,36,38,40,42,46,48,49,51,52,57,59,60,61,65,66,71,73,75,77,82,84,85,89,91
-----computeFrom-----
12,13
12,14
21,22
21,23
50,51
50,52
54,55
54,56
58,59
58,60
63,64
63,65
79,80
79,81
-----guardedBy-----
65,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_18_bad(){    short data;    /* Initialize data */    data = 0;    goto source;source:    /* FLAW: Use a negative number */    data = -1;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_strncpy_18_bad()
CWE194_Unexpected_Sign_Extension__negative_strncpy_18_bad
{    short data;    /* Initialize data */    data = 0;    goto source;source:    /* FLAW: Use a negative number */    data = -1;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
goto source;
source
source:    /* FLAW: Use a negative number */    data = -1;
source
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(41,23,0)
(36,38,0)
(46,23,0)
(23,18,0)
(46,38,0)
(8,42,0)
(29,6,0)
(5,12,0)
(9,46,0)
(42,12,0)
(33,20,0)
(26,39,0)
(38,30,0)
(13,20,0)
(18,23,0)
(0,23,0)
(37,38,0)
(41,38,0)
(41,45,0)
(27,35,0)
(44,30,0)
(32,18,0)
(15,41,0)
(22,35,0)
(7,46,0)
(21,41,0)
(25,30,0)
(20,2,0)
(3,31,0)
(1,12,0)
(2,20,0)
(46,6,0)
(34,2,0)
(43,39,0)
(14,41,0)
(24,25,0)
(23,12,0)
(17,30,0)
(39,23,0)
(19,35,0)
(31,30,0)
(40,42,0)
(30,12,0)
(10,19,0)
(20,30,0)
(6,45,0)
(25,38,0)
(11,2,0)
(19,31,0)
(35,19,0)
(16,30,0)
(28,12,0)
(19,35,1)
(9,41,1)
(34,11,1)
(38,37,1)
(24,39,1)
(36,23,1)
(46,23,1)
(39,26,1)
(25,38,1)
(7,9,1)
(41,38,1)
(14,21,1)
(23,18,1)
(21,39,1)
(32,0,1)
(27,22,1)
(41,23,1)
(11,13,1)
(43,31,1)
(28,42,1)
(26,43,1)
(40,8,1)
(3,19,1)
(24,6,1)
(37,36,1)
(29,46,1)
(2,34,1)
(33,38,1)
(4,25,1)
(41,15,1)
(35,27,1)
(6,29,1)
(42,40,1)
(18,32,1)
(46,7,1)
(13,33,1)
(39,23,1)
(20,2,1)
(25,24,1)
(46,38,1)
(0,28,1)
(22,10,1)
(10,20,1)
(15,14,1)
(31,3,1)
(46,39,2)
(9,39,2)
(41,39,2)
(46,38,2)
(6,39,2)
(41,23,2)
(23,18,2)
(7,39,2)
(20,2,2)
(29,39,2)
(19,35,2)
(25,38,2)
(39,23,2)
(14,39,2)
(15,39,2)
(46,23,2)
(21,39,2)
(41,38,2)
-----------------------------------
(0,data)
(1,data)
(2,100-1)
(3,\\\'\\\\0\\\')
(4,RET)
(5,source:)
(6,dest[data] = \\\'\\\\0\\\')
(7,data)
(8,data)
(9,dest)
(10,source)
(11,100)
(12,)
(13,\\\'A\\\')
(14,source)
(15,data)
(16,dest)
(17,if (data < 100)
(18,-1)
(19,source[100-1])
(20,memset(source, \\\'A\\\', 100-1)
(21,dest)
(22,100)
(23,data = -1)
(24,dest)
(25,printLine(dest)
(26,100)
(27,1)
(28,goto source;)
(29,\\\'\\\\0\\\')
(30,)
(31,source[100-1] = \\\'\\\\0\\\')
(32,1)
(33,source)
(34,1)
(35,100-1)
(36,dest)
(37,"")
(38,dest[100] = "")
(39,data < 100)
(40,0)
(41,strncpy(dest, source, data)
(42,data = 0)
(43,data)
(44,source)
(45,)
(46,dest[data])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^