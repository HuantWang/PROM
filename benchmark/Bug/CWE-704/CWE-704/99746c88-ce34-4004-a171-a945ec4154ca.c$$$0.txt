-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_31_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Read data from the console using fscanf() */
    fscanf(stdin, "%d", &data);
    {
        int dataCopy = data;
        int data = dataCopy;
        {
            char source[100];
            char dest[100] = "";
            memset(source, 'A', 100-1);
            source[100-1] = '\0';
            if (data < 100)
            {
                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
                 * the sign conversion could result in a very large number */
                memmove(dest, source, data);
                dest[data] = '\0'; /* NULL terminate */
            }
            printLine(dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
18,21
18,22
19,20
21,22
24,25
25,26
27,28
27,29
27,30
28,29
29,30
29,31
31,32
31,33
33,34
34,35
36,37
37,38
37,39
39,40
39,41
41,42
42,43
44,45
44,46
44,47
44,48
44,49
44,50
45,46
46,47
46,48
48,49
48,50
50,51
52,53
53,54
53,55
55,56
55,57
55,58
57,58
59,60
61,62
62,63
62,64
62,65
62,66
63,64
65,66
68,69
68,70
71,72
72,73
72,74
73,74
73,75
74,75
76,77
76,78
80,81
80,82
81,82
81,83
82,83
85,86
85,87
86,87
87,88
87,89
87,90
87,91
88,89
90,91
92,93
94,95
96,97
97,98
97,99
98,99
98,100
99,100
101,102
104,105
105,106
105,107
106,107
108,109
-----nextToken-----
2,4,8,10,14,16,20,22,23,26,30,32,35,38,40,43,47,49,51,54,56,58,60,64,66,67,69,70,75,77,78,79,83,84,89,91,93,95,100,102,103,107,109
-----computeFrom-----
12,13
12,14
68,69
68,70
72,73
72,74
76,77
76,78
81,82
81,83
97,98
97,99
-----guardedBy-----
83,102
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_31_bad(){    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    {        int dataCopy = data;        int data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_31_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memmove_31_bad
{    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Read data from the console using fscanf() */    fscanf(stdin, "%d", &data);    {        int dataCopy = data;        int data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        int dataCopy = data;        int data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }    }
int dataCopy = data;
int dataCopy = data;
int
dataCopy = data
dataCopy
= data
data
data
int data = dataCopy;
int data = dataCopy;
int
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }
data < 100
data
data
100
{                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign conversion could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(27,24,0)
(3,29,0)
(10,29,0)
(48,33,0)
(26,30,0)
(25,51,0)
(41,30,0)
(22,24,0)
(2,49,0)
(11,41,0)
(45,9,0)
(51,30,0)
(18,2,0)
(24,28,0)
(9,51,0)
(11,10,0)
(11,50,0)
(37,11,0)
(1,28,0)
(24,22,0)
(46,16,0)
(8,5,0)
(31,14,0)
(55,14,0)
(20,2,0)
(30,29,0)
(5,30,0)
(55,5,0)
(4,55,0)
(49,2,0)
(40,30,0)
(17,16,0)
(42,22,0)
(7,34,0)
(34,10,0)
(50,43,0)
(2,28,0)
(19,10,0)
(0,41,0)
(33,10,0)
(53,30,0)
(14,55,0)
(16,29,0)
(15,50,0)
(29,28,0)
(38,33,0)
(13,11,0)
(12,10,0)
(51,9,0)
(10,16,0)
(54,41,0)
(47,41,0)
(23,0,0)
(33,43,0)
(39,51,0)
(35,34,0)
(49,24,0)
(21,9,0)
(52,33,0)
(44,29,0)
(36,14,0)
(16,24,0)
(33,41,0)
(0,30,0)
(32,49,0)
(22,42,1)
(51,9,1)
(16,24,1)
(46,17,1)
(55,14,1)
(23,50,1)
(20,18,1)
(17,2,1)
(9,45,1)
(39,41,1)
(52,38,1)
(5,8,1)
(11,37,1)
(50,15,1)
(33,10,1)
(45,21,1)
(2,49,1)
(4,51,1)
(25,39,1)
(41,47,1)
(35,5,1)
(34,10,1)
(21,25,1)
(19,12,1)
(49,32,1)
(18,24,1)
(6,0,1)
(7,35,1)
(38,48,1)
(37,13,1)
(0,23,1)
(47,54,1)
(16,46,1)
(8,55,1)
(32,20,1)
(0,41,1)
(12,16,1)
(15,11,1)
(48,34,1)
(10,16,1)
(13,33,1)
(42,27,1)
(23,34,1)
(11,10,1)
(54,10,1)
(34,7,1)
(14,36,1)
(10,19,1)
(36,31,1)
(31,4,1)
(33,41,1)
(11,41,1)
(33,52,1)
(49,24,1)
(24,22,1)
(33,41,2)
(51,9,2)
(15,34,2)
(2,49,2)
(33,34,2)
(16,24,2)
(11,10,2)
(49,24,2)
(11,34,2)
(52,34,2)
(34,10,2)
(11,41,2)
(55,14,2)
(0,41,2)
(37,34,2)
(50,34,2)
(33,10,2)
(24,22,2)
(38,34,2)
(48,34,2)
(10,16,2)
(13,34,2)
-----------------------------------
(0,printLine(dest)
(1,data)
(2,fscanf(stdin, "%d", &data)
(3,data)
(4,source)
(5,source[100-1] = \\\'\\\\0\\\')
(6,RET)
(7,100)
(8,\\\'\\\\0\\\')
(9,100-1)
(10,data = dataCopy)
(11,dest[data])
(12,data)
(13,dest)
(14,100-1)
(15,\\\'\\\\0\\\')
(16,dataCopy = data)
(17,dataCopy)
(18,stdin)
(19,dataCopy)
(20,"%d")
(21,100)
(22,-1)
(23,dest)
(24,data = -1)
(25,\\\'A\\\')
(26,if (data < 100)
(27,data)
(28,)
(29,)
(30,)
(31,100)
(32,data)
(33,memmove(dest, source, data)
(34,data < 100)
(35,data)
(36,1)
(37,data)
(38,source)
(39,source)
(40,dest)
(41,dest[100] = "")
(42,1)
(43,)
(44,dataCopy)
(45,1)
(46,data)
(47,"")
(48,dest)
(49,&data)
(50,dest[data] = \\\'\\\\0\\\')
(51,memset(source, \\\'A\\\', 100-1)
(52,data)
(53,source)
(54,dest)
(55,source[100-1])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^