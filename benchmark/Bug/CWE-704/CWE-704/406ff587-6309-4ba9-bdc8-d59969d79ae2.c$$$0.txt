-----label-----
1
-----code-----
void CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_09_bad()
{
    if(GLOBAL_CONST_TRUE)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE];
            double doubleNumber = 0;
            /* Enter: 1e20f, result should be 2147483647 (for bad case) */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Read a double */
                doubleNumber = atof(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
            /* FLAW: should not cast without checking if conversion is safe */
            printIntLine((int)doubleNumber);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
9,10
10,11
10,12
10,13
10,14
11,12
12,13
12,14
14,15
14,16
16,17
17,18
19,20
20,21
20,22
22,23
22,24
24,25
26,27
26,28
26,29
27,28
27,29
28,29
28,30
28,31
28,32
29,30
31,32
33,34
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
44,46
45,46
47,48
49,50
50,51
51,52
51,53
52,53
55,56
56,57
56,58
57,58
59,60
59,61
60,61
60,62
63,64
-----nextToken-----
2,4,8,13,15,18,21,23,25,30,32,34,36,38,43,46,48,53,54,58,61,62,64
-----computeFrom-----
27,28
27,29
41,42
41,43
-----guardedBy-----
32,48
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;
-----ast_node-----
void CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_09_bad(){    if(GLOBAL_CONST_TRUE)    {        {            char inputBuffer[CHAR_ARRAY_SIZE];            double doubleNumber = 0;            /* Enter: 1e20f, result should be 2147483647 (for bad case) */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Read a double */                doubleNumber = atof(inputBuffer);            }            else            {                printLine("fgets() failed.");            }            /* FLAW: should not cast without checking if conversion is safe */            printIntLine((int)doubleNumber);        }    }}
void
CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_09_bad()
CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_09_bad
{    if(GLOBAL_CONST_TRUE)    {        {            char inputBuffer[CHAR_ARRAY_SIZE];            double doubleNumber = 0;            /* Enter: 1e20f, result should be 2147483647 (for bad case) */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Read a double */                doubleNumber = atof(inputBuffer);            }            else            {                printLine("fgets() failed.");            }            /* FLAW: should not cast without checking if conversion is safe */            printIntLine((int)doubleNumber);        }    }}
if(GLOBAL_CONST_TRUE)    {        {            char inputBuffer[CHAR_ARRAY_SIZE];            double doubleNumber = 0;            /* Enter: 1e20f, result should be 2147483647 (for bad case) */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Read a double */                doubleNumber = atof(inputBuffer);            }            else            {                printLine("fgets() failed.");            }            /* FLAW: should not cast without checking if conversion is safe */            printIntLine((int)doubleNumber);        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            char inputBuffer[CHAR_ARRAY_SIZE];            double doubleNumber = 0;            /* Enter: 1e20f, result should be 2147483647 (for bad case) */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Read a double */                doubleNumber = atof(inputBuffer);            }            else            {                printLine("fgets() failed.");            }            /* FLAW: should not cast without checking if conversion is safe */            printIntLine((int)doubleNumber);        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE];            double doubleNumber = 0;            /* Enter: 1e20f, result should be 2147483647 (for bad case) */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Read a double */                doubleNumber = atof(inputBuffer);            }            else            {                printLine("fgets() failed.");            }            /* FLAW: should not cast without checking if conversion is safe */            printIntLine((int)doubleNumber);        }
char inputBuffer[CHAR_ARRAY_SIZE];
char inputBuffer[CHAR_ARRAY_SIZE];
char
inputBuffer[CHAR_ARRAY_SIZE]
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
double doubleNumber = 0;
double doubleNumber = 0;
double
doubleNumber = 0
doubleNumber
= 0
0
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Read a double */                doubleNumber = atof(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Read a double */                doubleNumber = atof(inputBuffer);            }
doubleNumber = atof(inputBuffer);
doubleNumber = atof(inputBuffer)
doubleNumber
doubleNumber
atof(inputBuffer)
atof
atof
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
printIntLine((int)doubleNumber);
printIntLine((int)doubleNumber)
printIntLine
printIntLine
(int)doubleNumber
int
int

doubleNumber
doubleNumber
-----joern-----
(0,15,0)
(25,10,0)
(6,23,0)
(17,6,0)
(7,1,0)
(4,22,0)
(22,3,0)
(0,1,0)
(26,15,0)
(1,7,0)
(9,10,0)
(19,9,0)
(28,6,0)
(29,27,0)
(10,9,0)
(2,10,0)
(15,6,0)
(0,11,0)
(20,6,0)
(11,0,0)
(21,0,0)
(1,12,0)
(8,15,0)
(18,1,0)
(11,6,0)
(13,0,0)
(24,7,0)
(0,13,0)
(5,10,0)
(9,10,1)
(5,15,1)
(0,15,1)
(26,8,1)
(19,10,1)
(21,1,1)
(22,4,1)
(10,25,1)
(0,21,1)
(15,26,1)
(25,2,1)
(9,19,1)
(14,16,1)
(7,24,1)
(8,16,1)
(11,0,1)
(1,7,1)
(24,18,1)
(21,22,1)
(18,9,1)
(0,13,1)
(4,9,1)
(0,1,1)
(2,5,1)
(14,11,1)
(9,10,2)
(0,13,2)
(1,9,2)
(19,16,2)
(8,16,2)
(24,9,2)
(10,16,2)
(18,9,2)
(1,7,2)
(11,16,2)
(0,1,2)
(5,16,2)
(26,16,2)
(21,16,2)
(25,16,2)
(9,16,2)
(11,0,2)
(4,9,2)
(0,15,2)
(15,16,2)
(7,9,2)
(22,9,2)
(2,16,2)
(0,16,2)
-----------------------------------
(0,(int)
(1,doubleNumber = atof(inputBuffer)
(2,CHAR_ARRAY_SIZE)
(3,)
(4,"fgets()
(5,inputBuffer)
(6,)
(7,atof(inputBuffer)
(8,doubleNumber)
(9,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(10,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(11,printIntLine((int)
(12,)
(13,int)
(14,RET)
(15,doubleNumber = 0)
(16,GLOBAL_CONST_TRUE)
(17,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(18,doubleNumber)
(19,NULL)
(20,doubleNumber)
(21,doubleNumber)
(22,printLine("fgets()
(23,)
(24,inputBuffer)
(25,stdin)
(26,0)
(27,)
(28,inputBuffer)
(29,if(GLOBAL_CONST_TRUE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^