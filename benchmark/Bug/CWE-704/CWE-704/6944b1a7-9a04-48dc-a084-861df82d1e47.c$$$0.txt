-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_09_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(GLOBAL_CONST_TRUE)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
27,32
27,33
28,29
29,30
29,31
31,32
31,33
33,34
35,36
36,37
36,38
38,39
38,40
38,41
40,41
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
63,65
64,65
64,66
65,66
68,69
68,70
69,70
70,71
70,72
70,73
70,74
71,72
73,74
75,76
77,78
79,80
80,81
80,82
81,82
81,83
82,83
84,85
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,14,16,19,24,26,30,32,34,37,39,41,43,47,49,50,52,53,58,60,61,62,66,67,72,74,76,78,83,85,86,90,92
-----computeFrom-----
12,13
12,14
22,23
22,24
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
80,81
80,82
-----guardedBy-----
66,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_09_bad(){    int data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_TRUE)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_09_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memmove_09_bad
{    int data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_TRUE)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(GLOBAL_CONST_TRUE)    {        /* FLAW: Use a negative number */        data = -1;    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(10,24,0)
(30,8,0)
(12,8,0)
(38,31,0)
(46,30,0)
(26,46,0)
(41,18,0)
(27,31,0)
(34,41,0)
(41,48,0)
(15,31,0)
(7,2,0)
(9,18,0)
(18,11,0)
(46,18,0)
(33,0,0)
(31,29,0)
(41,15,0)
(22,41,0)
(42,13,0)
(37,46,0)
(21,13,0)
(18,47,0)
(0,24,0)
(47,18,0)
(2,31,0)
(28,15,0)
(16,24,0)
(20,18,0)
(41,30,0)
(14,13,0)
(43,31,0)
(24,0,0)
(8,30,0)
(19,14,0)
(44,48,0)
(9,15,0)
(9,44,0)
(39,9,0)
(6,29,0)
(40,47,0)
(23,29,0)
(13,14,0)
(0,43,0)
(1,15,0)
(36,41,0)
(5,30,0)
(45,44,0)
(35,14,0)
(13,31,0)
(30,29,0)
(9,30,0)
(25,9,0)
(2,15,0)
(3,31,0)
(4,43,0)
(41,15,1)
(34,22,1)
(44,45,1)
(41,18,1)
(2,15,1)
(2,7,1)
(28,18,1)
(47,40,1)
(41,34,1)
(17,2,1)
(28,32,1)
(12,5,1)
(14,19,1)
(13,14,1)
(9,15,1)
(16,10,1)
(24,16,1)
(0,24,1)
(8,12,1)
(33,13,1)
(46,18,1)
(21,15,1)
(46,30,1)
(40,20,1)
(36,46,1)
(7,44,1)
(42,21,1)
(26,37,1)
(22,36,1)
(32,30,1)
(35,42,1)
(4,0,1)
(7,46,1)
(45,9,1)
(41,30,1)
(43,4,1)
(10,33,1)
(30,8,1)
(20,32,1)
(37,43,1)
(46,26,1)
(25,39,1)
(1,28,1)
(15,1,1)
(9,18,1)
(19,35,1)
(9,25,1)
(9,30,1)
(39,41,1)
(18,47,1)
(41,18,2)
(46,30,2)
(9,18,2)
(44,46,2)
(18,47,2)
(9,30,2)
(2,15,2)
(45,46,2)
(40,32,2)
(41,46,2)
(41,30,2)
(9,46,2)
(22,46,2)
(34,46,2)
(9,15,2)
(39,46,2)
(25,46,2)
(20,32,2)
(47,32,2)
(36,46,2)
(46,18,2)
(18,32,2)
(0,24,2)
(13,14,2)
(30,8,2)
(41,15,2)
-----------------------------------
(0,source[100-1])
(1,"")
(2,printLine(dest)
(3,if (data < 100)
(4,\\\'\\\\0\\\')
(5,data)
(6,if(GLOBAL_CONST_TRUE)
(7,dest)
(8,-1)
(9,dest[data])
(10,100)
(11,)
(12,1)
(13,memset(source, \\\'A\\\', 100-1)
(14,100-1)
(15,dest[100] = "")
(16,1)
(17,RET)
(18,data = -1)
(19,1)
(20,data)
(21,source)
(22,source)
(23,data)
(24,100-1)
(25,data)
(26,100)
(27,dest)
(28,dest)
(29,)
(30,data = -1)
(31,)
(32,GLOBAL_CONST_TRUE)
(33,source)
(34,data)
(35,100)
(36,dest)
(37,data)
(38,source)
(39,dest)
(40,1)
(41,memmove(dest, source, data)
(42,\\\'A\\\')
(43,source[100-1] = \\\'\\\\0\\\')
(44,dest[data] = \\\'\\\\0\\\')
(45,\\\'\\\\0\\\')
(46,data < 100)
(47,-1)
(48,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^