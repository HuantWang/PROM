-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_67b_badSink(CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_67_structType myStruct)
{
    int data = myStruct.structFirst;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
21,26
21,27
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
34,35
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
57,59
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,7,9,13,15,19,20,24,26,28,31,33,35,37,41,43,44,46,47,52,54,55,56,60,61,66,68,70,72,77,79,80,84,86
-----computeFrom-----
45,46
45,47
49,50
49,51
53,54
53,55
58,59
58,60
74,75
74,76
-----guardedBy-----
60,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_67b_badSink(CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_67_structType myStruct){    int data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_67b_badSink(CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_67_structType myStruct)
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_67b_badSink
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_67_structType myStruct
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_67_structType
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_67_structType
myStruct
myStruct
{    int data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data = myStruct.structFirst;
int data = myStruct.structFirst;
int
data = myStruct.structFirst
data
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(22,18,0)
(34,11,0)
(23,33,0)
(10,21,0)
(5,39,0)
(25,8,0)
(33,36,0)
(9,36,0)
(39,1,0)
(26,21,0)
(15,1,0)
(39,36,0)
(18,21,0)
(42,24,0)
(8,26,0)
(24,21,0)
(35,32,0)
(31,22,0)
(27,8,0)
(0,9,0)
(33,17,0)
(32,1,0)
(30,21,0)
(8,25,0)
(40,9,0)
(18,22,0)
(39,34,0)
(36,33,0)
(3,33,0)
(43,26,0)
(1,21,0)
(36,41,0)
(29,18,0)
(7,22,0)
(6,39,0)
(32,11,0)
(21,41,0)
(20,36,0)
(2,25,0)
(24,1,0)
(14,25,0)
(16,32,0)
(37,34,0)
(13,1,0)
(28,21,0)
(4,41,0)
(12,18,0)
(19,32,0)
(32,36,0)
(37,39,1)
(22,31,1)
(38,24,1)
(24,1,1)
(33,17,1)
(14,2,1)
(6,5,1)
(39,36,1)
(39,1,1)
(25,14,1)
(32,1,1)
(16,19,1)
(24,42,1)
(23,20,1)
(34,37,1)
(19,35,1)
(1,13,1)
(7,29,1)
(42,34,1)
(29,12,1)
(9,40,1)
(8,25,1)
(5,32,1)
(27,18,1)
(18,22,1)
(39,6,1)
(43,8,1)
(35,9,1)
(40,0,1)
(42,9,1)
(0,26,1)
(26,43,1)
(32,36,1)
(12,1,1)
(33,3,1)
(36,33,1)
(15,36,1)
(2,27,1)
(13,15,1)
(9,36,1)
(32,16,1)
(31,7,1)
(3,23,1)
(9,36,2)
(6,9,2)
(35,9,2)
(36,33,2)
(37,9,2)
(33,17,2)
(24,1,2)
(19,9,2)
(34,9,2)
(16,9,2)
(32,1,2)
(8,25,2)
(32,36,2)
(39,36,2)
(39,9,2)
(18,22,2)
(5,9,2)
(39,1,2)
(32,9,2)
-----------------------------------
(0,data)
(1,dest[100] = "")
(2,100)
(3,structFirst)
(4,data)
(5,dest)
(6,data)
(7,100)
(8,source[100-1])
(9,data < 100)
(10,dest)
(11,)
(12,source)
(13,"")
(14,1)
(15,dest)
(16,data)
(17,CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_67_structType myStruct)
(18,memset(source, \\\'A\\\', 100-1)
(19,source)
(20,data)
(21,)
(22,100-1)
(23,myStruct)
(24,printLine(dest)
(25,100-1)
(26,source[100-1] = \\\'\\\\0\\\')
(27,source)
(28,source)
(29,\\\'A\\\')
(30,if (data < 100)
(31,1)
(32,memmove(dest, source, data)
(33,myStruct.structFirst)
(34,dest[data] = \\\'\\\\0\\\')
(35,dest)
(36,data = myStruct.structFirst)
(37,\\\'\\\\0\\\')
(38,RET)
(39,dest[data])
(40,100)
(41,)
(42,dest)
(43,\\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^