-----label-----
1
-----code-----
static void badSink(short data)
{
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
18,20
21,22
23,24
24,25
24,26
25,26
27,28
-----nextToken-----
2,4,6,8,13,15,19,20,22,26,28
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(short data){    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
static void
badSink(short data)
badSink
short data
short
data
data
{    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(10,1,0)
(1,10,0)
(9,5,0)
(2,9,0)
(11,1,0)
(3,9,0)
(0,9,0)
(0,2,0)
(7,2,0)
(8,0,0)
(1,2,0)
(1,4,0)
(2,1,0)
(0,2,1)
(1,10,1)
(1,11,1)
(2,1,1)
(0,8,1)
(11,7,1)
(1,4,1)
(6,0,1)
(8,2,1)
(1,10,2)
(1,4,2)
(0,2,2)
(2,1,2)
-----------------------------------
(0,printHexCharLine(charData)
(1,(char)
(2,charData = (char)
(3,charData)
(4,short data)
(5,)
(6,RET)
(7,charData)
(8,charData)
(9,)
(10,char)
(11,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^