-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__listen_socket_memcpy_67b_badSink(CWE194_Unexpected_Sign_Extension__listen_socket_memcpy_67_structType myStruct)
{
    short data = myStruct.structFirst;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
21,26
21,27
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
34,35
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
57,59
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,7,9,13,15,19,20,24,26,28,31,33,35,37,41,43,44,46,47,52,54,55,56,60,61,66,68,70,72,77,79,80,84,86
-----computeFrom-----
45,46
45,47
49,50
49,51
53,54
53,55
58,59
58,60
74,75
74,76
-----guardedBy-----
60,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__listen_socket_memcpy_67b_badSink(CWE194_Unexpected_Sign_Extension__listen_socket_memcpy_67_structType myStruct){    short data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__listen_socket_memcpy_67b_badSink(CWE194_Unexpected_Sign_Extension__listen_socket_memcpy_67_structType myStruct)
CWE194_Unexpected_Sign_Extension__listen_socket_memcpy_67b_badSink
CWE194_Unexpected_Sign_Extension__listen_socket_memcpy_67_structType myStruct
CWE194_Unexpected_Sign_Extension__listen_socket_memcpy_67_structType
CWE194_Unexpected_Sign_Extension__listen_socket_memcpy_67_structType
myStruct
myStruct
{    short data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data = myStruct.structFirst;
short data = myStruct.structFirst;
short
data = myStruct.structFirst
data
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(30,12,0)
(10,22,0)
(19,32,0)
(36,17,0)
(20,12,0)
(33,8,0)
(14,20,0)
(13,22,0)
(10,15,0)
(13,40,0)
(9,12,0)
(22,43,0)
(1,24,0)
(32,22,0)
(17,24,0)
(35,32,0)
(8,12,0)
(29,10,0)
(42,43,0)
(25,40,0)
(31,12,0)
(28,10,0)
(5,22,0)
(41,30,0)
(17,30,0)
(22,32,0)
(0,22,0)
(20,14,0)
(40,15,0)
(12,43,0)
(13,8,0)
(34,9,0)
(2,10,0)
(4,13,0)
(9,8,0)
(21,20,0)
(23,8,0)
(38,5,0)
(7,5,0)
(24,17,0)
(26,12,0)
(10,8,0)
(18,14,0)
(37,14,0)
(3,12,0)
(27,13,0)
(32,6,0)
(11,20,0)
(16,24,0)
(18,21,1)
(17,24,1)
(1,16,1)
(23,22,1)
(34,40,1)
(39,9,1)
(21,11,1)
(16,36,1)
(28,5,1)
(27,4,1)
(20,14,1)
(5,38,1)
(13,22,1)
(32,35,1)
(13,8,1)
(29,2,1)
(5,22,1)
(10,29,1)
(7,30,1)
(14,37,1)
(11,8,1)
(2,28,1)
(34,5,1)
(13,27,1)
(37,18,1)
(36,20,1)
(9,34,1)
(41,17,1)
(4,10,1)
(9,8,1)
(8,33,1)
(40,25,1)
(19,0,1)
(22,32,1)
(25,13,1)
(10,22,1)
(24,1,1)
(30,41,1)
(38,7,1)
(10,8,1)
(32,6,1)
(33,23,1)
(35,19,1)
(10,5,2)
(9,8,2)
(10,8,2)
(5,22,2)
(27,5,2)
(10,22,2)
(17,24,2)
(29,5,2)
(4,5,2)
(13,22,2)
(40,5,2)
(22,32,2)
(20,14,2)
(2,5,2)
(28,5,2)
(13,5,2)
(13,8,2)
(25,5,2)
(32,6,2)
-----------------------------------
(0,data)
(1,1)
(2,source)
(3,source)
(4,dest)
(5,data < 100)
(6,CWE194_Unexpected_Sign_Extension__listen_socket_memcpy_67_structType myStruct)
(7,data)
(8,dest[100] = "")
(9,printLine(dest)
(10,memcpy(dest, source, data)
(11,source)
(12,)
(13,dest[data])
(14,100-1)
(15,)
(16,100)
(17,source[100-1])
(18,100)
(19,myStruct)
(20,memset(source, \\\'A\\\', 100-1)
(21,\\\'A\\\')
(22,data = myStruct.structFirst)
(23,dest)
(24,100-1)
(25,\\\'\\\\0\\\')
(26,if (data < 100)
(27,data)
(28,dest)
(29,data)
(30,source[100-1] = \\\'\\\\0\\\')
(31,dest)
(32,myStruct.structFirst)
(33,"")
(34,dest)
(35,structFirst)
(36,source)
(37,1)
(38,100)
(39,RET)
(40,dest[data] = \\\'\\\\0\\\')
(41,\\\'\\\\0\\\')
(42,data)
(43,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^