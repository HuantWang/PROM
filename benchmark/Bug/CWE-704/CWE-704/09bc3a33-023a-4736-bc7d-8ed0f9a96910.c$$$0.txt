-----label-----
1
-----code-----
static void badSink()
{
    int data = CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_45_badData;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
14,17
14,18
14,19
14,20
15,16
16,17
16,18
18,19
18,20
20,21
22,23
23,24
23,25
25,26
25,27
25,28
27,28
29,30
31,32
32,33
32,34
32,35
32,36
33,34
35,36
38,39
38,40
41,42
42,43
42,44
43,44
43,45
44,45
46,47
46,48
50,51
50,52
51,52
51,53
52,53
55,56
55,57
56,57
57,58
57,59
57,60
57,61
58,59
60,61
62,63
64,65
66,67
67,68
67,69
68,69
68,70
69,70
71,72
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,8,10,13,17,19,21,24,26,28,30,34,36,37,39,40,45,47,48,49,53,54,59,61,63,65,70,72,73,77,79
-----computeFrom-----
38,39
38,40
42,43
42,44
46,47
46,48
51,52
51,53
67,68
67,69
-----guardedBy-----
53,72
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    int data = CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_45_badData;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
static void
badSink()
badSink
{    int data = CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_45_badData;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data = CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_45_badData;
int data = CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_45_badData;
int
data = CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_45_badData
data
= CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_45_badData
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_45_badData
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_45_badData
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(15,17,0)
(14,0,0)
(27,6,0)
(39,0,0)
(2,5,0)
(11,2,0)
(22,13,0)
(8,13,0)
(6,27,0)
(20,0,0)
(17,40,0)
(32,40,0)
(18,34,0)
(31,40,0)
(25,31,0)
(27,0,0)
(36,18,0)
(26,14,0)
(40,7,0)
(34,18,0)
(17,35,0)
(21,17,0)
(29,6,0)
(16,0,0)
(19,27,0)
(35,0,0)
(17,2,0)
(28,6,0)
(23,0,0)
(38,18,0)
(31,35,0)
(34,14,0)
(20,35,0)
(4,31,0)
(24,35,0)
(31,5,0)
(3,34,0)
(37,20,0)
(30,35,0)
(33,7,0)
(13,40,0)
(9,31,0)
(0,7,0)
(10,27,0)
(1,40,0)
(31,4,1)
(40,32,1)
(37,13,1)
(30,24,1)
(17,21,1)
(11,17,1)
(24,40,1)
(3,27,1)
(2,11,1)
(17,35,1)
(26,34,1)
(8,22,1)
(13,40,1)
(17,40,1)
(31,40,1)
(22,14,1)
(6,29,1)
(18,38,1)
(9,25,1)
(34,18,1)
(25,13,1)
(35,30,1)
(38,36,1)
(4,9,1)
(15,31,1)
(20,37,1)
(37,2,1)
(12,20,1)
(32,1,1)
(20,35,1)
(21,15,1)
(36,3,1)
(31,35,1)
(19,10,1)
(27,6,1)
(13,8,1)
(10,35,1)
(28,19,1)
(29,28,1)
(14,26,1)
(31,13,2)
(17,40,2)
(31,40,2)
(21,13,2)
(31,35,2)
(17,35,2)
(4,13,2)
(25,13,2)
(2,13,2)
(20,35,2)
(9,13,2)
(13,40,2)
(15,13,2)
(17,13,2)
(27,6,2)
(34,18,2)
(11,13,2)
-----------------------------------
(0,)
(1,data)
(2,dest[data] = \\\'\\\\0\\\')
(3,source)
(4,data)
(5,)
(6,100-1)
(7,)
(8,100)
(9,source)
(10,source)
(11,\\\'\\\\0\\\')
(12,RET)
(13,data < 100)
(14,source[100-1] = \\\'\\\\0\\\')
(15,dest)
(16,dest)
(17,dest[data])
(18,100-1)
(19,\\\'A\\\')
(20,printLine(dest)
(21,data)
(22,data)
(23,source)
(24,dest)
(25,dest)
(26,\\\'\\\\0\\\')
(27,memset(source, \\\'A\\\', 100-1)
(28,100)
(29,1)
(30,"")
(31,memmove(dest, source, data)
(32,CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_45_badData)
(33,data)
(34,source[100-1])
(35,dest[100] = "")
(36,100)
(37,dest)
(38,1)
(39,if (data < 100)
(40,data = CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_45_badData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^