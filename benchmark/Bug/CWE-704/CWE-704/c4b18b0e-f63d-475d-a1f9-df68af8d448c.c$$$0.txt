-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_52c_badSink(short data)
{
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
11,12
12,13
12,14
14,15
14,16
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
27,28
28,29
28,30
28,31
28,32
29,30
31,32
34,35
34,36
37,38
38,39
38,40
39,40
39,41
40,41
42,43
42,44
46,47
46,48
47,48
47,49
48,49
51,52
51,53
52,53
53,54
53,55
53,56
53,57
54,55
56,57
58,59
60,61
62,63
63,64
63,65
64,65
64,66
65,66
67,68
70,71
71,72
71,73
72,73
74,75
-----nextToken-----
2,4,6,8,13,15,17,20,22,24,26,30,32,33,35,36,41,43,44,45,49,50,55,57,59,61,66,68,69,73,75
-----computeFrom-----
34,35
34,36
38,39
38,40
42,43
42,44
47,48
47,49
63,64
63,65
-----guardedBy-----
49,68
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_52c_badSink(short data){    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_memmove_52c_badSink(short data)
CWE194_Unexpected_Sign_Extension__fscanf_memmove_52c_badSink
short data
short
data
data
{    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(11,0,0)
(6,10,0)
(30,7,0)
(21,1,0)
(27,34,0)
(0,7,0)
(37,33,0)
(35,1,0)
(7,1,0)
(1,25,0)
(31,7,0)
(8,22,0)
(9,31,0)
(23,0,0)
(2,19,0)
(19,2,0)
(32,2,0)
(34,7,0)
(16,24,0)
(36,19,0)
(2,1,0)
(5,7,0)
(12,1,0)
(0,33,0)
(20,22,0)
(28,31,0)
(15,24,0)
(31,13,0)
(10,18,0)
(29,19,0)
(22,17,0)
(14,2,0)
(33,13,0)
(3,18,0)
(0,17,0)
(34,1,0)
(31,17,0)
(18,1,0)
(26,31,0)
(24,10,0)
(10,24,0)
(37,0,1)
(26,28,1)
(19,29,1)
(8,18,1)
(2,19,1)
(34,7,1)
(22,20,1)
(0,17,1)
(7,5,1)
(10,24,1)
(11,31,1)
(31,7,1)
(4,34,1)
(3,10,1)
(31,26,1)
(5,30,1)
(33,37,1)
(27,33,1)
(6,2,1)
(29,36,1)
(31,17,1)
(22,17,1)
(0,7,1)
(14,32,1)
(36,14,1)
(0,23,1)
(27,22,1)
(9,22,1)
(24,15,1)
(18,3,1)
(16,6,1)
(23,11,1)
(34,27,1)
(20,8,1)
(32,7,1)
(15,16,1)
(28,9,1)
(0,7,2)
(22,17,2)
(31,17,2)
(2,19,2)
(31,7,2)
(37,22,2)
(23,22,2)
(31,22,2)
(34,7,2)
(11,22,2)
(0,17,2)
(33,22,2)
(10,24,2)
(0,22,2)
(9,22,2)
(26,22,2)
(28,22,2)
-----------------------------------
(0,dest[data])
(1,)
(2,memset(source, \\\'A\\\', 100-1)
(3,\\\'\\\\0\\\')
(4,RET)
(5,"")
(6,source)
(7,dest[100] = "")
(8,data)
(9,dest)
(10,source[100-1])
(11,dest)
(12,source)
(13,)
(14,\\\'A\\\')
(15,1)
(16,100)
(17,short data)
(18,source[100-1] = \\\'\\\\0\\\')
(19,100-1)
(20,100)
(21,if (data < 100)
(22,data < 100)
(23,data)
(24,100-1)
(25,)
(26,data)
(27,dest)
(28,source)
(29,1)
(30,dest)
(31,memmove(dest, source, data)
(32,source)
(33,dest[data] = \\\'\\\\0\\\')
(34,printLine(dest)
(35,dest)
(36,100)
(37,\\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^