-----label-----
1
-----code-----
int CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_22_badSource(int data)
{
    if(CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_22_badGlobal)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
10,12
11,12
13,14
14,15
14,16
15,16
16,17
16,18
18,19
18,20
18,21
20,21
21,22
23,24
25,26
25,27
25,28
26,27
26,28
27,28
27,29
27,30
27,31
28,29
30,31
32,33
34,35
36,37
38,39
39,40
40,41
40,42
41,42
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
54,55
55,56
-----nextToken-----
2,4,6,8,12,17,19,22,24,29,31,33,35,37,42,45,47,52,53,56
-----computeFrom-----
26,27
26,28
40,41
40,42
-----guardedBy-----
31,47
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
int CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_22_badSource(int data){    if(CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_22_badGlobal)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    return data;}
int
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_22_badSource(int data)
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_22_badSource
int data
int
data
data
{    if(CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_22_badGlobal)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    return data;}
if(CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_22_badGlobal)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_22_badGlobal
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_22_badGlobal
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
return data;
data
data
-----joern-----
(14,19,0)
(21,16,0)
(13,16,0)
(27,5,0)
(25,17,0)
(20,17,0)
(5,3,0)
(5,7,0)
(19,4,0)
(19,7,0)
(17,25,0)
(6,5,0)
(18,25,0)
(23,17,0)
(16,22,0)
(17,4,0)
(4,16,0)
(8,4,0)
(11,10,0)
(10,2,0)
(26,17,0)
(15,7,0)
(7,0,0)
(7,9,0)
(1,3,0)
(5,0,0)
(24,4,0)
(7,19,0)
(10,11,1)
(26,4,1)
(4,24,1)
(23,26,1)
(5,7,1)
(11,25,1)
(17,4,1)
(5,6,1)
(18,17,1)
(14,15,1)
(7,0,1)
(20,23,1)
(6,10,1)
(19,14,1)
(7,19,1)
(24,8,1)
(27,5,1)
(8,12,1)
(17,20,1)
(6,12,1)
(5,0,1)
(25,18,1)
(15,25,1)
(19,4,1)
(6,7,1)
(25,17,1)
(5,7,2)
(17,4,2)
(15,25,2)
(20,12,2)
(23,12,2)
(10,25,2)
(19,25,2)
(25,17,2)
(19,4,2)
(7,25,2)
(5,0,2)
(17,12,2)
(7,19,2)
(18,12,2)
(14,25,2)
(25,12,2)
(4,12,2)
(11,25,2)
(7,0,2)
(24,12,2)
(27,5,2)
(8,12,2)
(26,12,2)
-----------------------------------
(0,int data)
(1,if(CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_22_badGlobal)
(2,)
(3,)
(4,inputBuffer[CHAR_ARRAY_SIZE] = "")
(5,return data;)
(6,data)
(7,data = atoi(inputBuffer)
(8,inputBuffer)
(9,)
(10,printLine("fgets()
(11,"fgets()
(12,CWE195_Signed_to_Unsigned_Conversion_Error__fgets_memcpy_22_badGlobal)
(13,inputBuffer)
(14,inputBuffer)
(15,data)
(16,)
(17,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(18,NULL)
(19,atoi(inputBuffer)
(20,stdin)
(21,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(22,)
(23,CHAR_ARRAY_SIZE)
(24,"")
(25,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(26,inputBuffer)
(27,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^