-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_large_to_short_34_bad()
{
    int data;
    CWE197_Numeric_Truncation_Error__int_large_to_short_34_unionType myUnion;
    /* Initialize data */
    data = -1;
    /* FLAW: Use a number larger than SHRT_MAX */
    data = SHRT_MAX + 5;
    myUnion.unionFirst = data;
    {
        int data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
            short shortData = (short)data;
            printShortLine(shortData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
23,24
24,25
24,26
25,26
27,28
27,29
28,29
31,32
32,33
32,34
33,34
33,35
34,35
37,38
39,40
39,41
40,41
41,42
41,43
43,44
43,45
45,46
46,47
46,48
47,48
50,51
50,52
51,52
52,53
52,54
54,55
54,56
56,57
57,58
57,59
58,59
58,60
61,62
63,64
64,65
64,66
65,66
67,68
-----nextToken-----
2,4,8,10,14,16,20,22,26,29,30,35,36,38,42,44,48,49,53,55,59,60,62,66,68
-----computeFrom-----
18,19
18,20
24,25
24,26
27,28
27,29
32,33
32,34
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_large_to_short_34_bad(){    int data;    CWE197_Numeric_Truncation_Error__int_large_to_short_34_unionType myUnion;    /* Initialize data */    data = -1;    /* FLAW: Use a number larger than SHRT_MAX */    data = SHRT_MAX + 5;    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_large_to_short_34_bad()
CWE197_Numeric_Truncation_Error__int_large_to_short_34_bad
{    int data;    CWE197_Numeric_Truncation_Error__int_large_to_short_34_unionType myUnion;    /* Initialize data */    data = -1;    /* FLAW: Use a number larger than SHRT_MAX */    data = SHRT_MAX + 5;    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }}
int data;
int data;
int
data
data
CWE197_Numeric_Truncation_Error__int_large_to_short_34_unionType myUnion;
CWE197_Numeric_Truncation_Error__int_large_to_short_34_unionType myUnion;
CWE197_Numeric_Truncation_Error__int_large_to_short_34_unionType
CWE197_Numeric_Truncation_Error__int_large_to_short_34_unionType
myUnion
myUnion
data = -1;
data = -1
data
data
-1
1
data = SHRT_MAX + 5;
data = SHRT_MAX + 5
data
data
SHRT_MAX + 5
SHRT_MAX
SHRT_MAX
5
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }    }
int data = myUnion.unionSecond;
int data = myUnion.unionSecond;
int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */            short shortData = (short)data;            printShortLine(shortData);        }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(21,30,0)
(26,31,0)
(20,8,0)
(18,0,0)
(24,23,0)
(17,8,0)
(3,31,0)
(33,0,0)
(27,30,0)
(1,28,0)
(0,16,0)
(16,0,0)
(7,16,0)
(29,1,0)
(6,19,0)
(12,16,0)
(31,3,0)
(10,8,0)
(23,30,0)
(22,13,0)
(30,23,0)
(19,10,0)
(28,10,0)
(14,10,0)
(18,8,0)
(15,28,0)
(6,23,0)
(4,13,0)
(11,6,0)
(5,19,0)
(23,19,0)
(25,3,0)
(30,27,0)
(13,18,0)
(30,28,0)
(2,18,0)
(0,8,0)
(28,1,0)
(9,1,0)
(3,8,0)
(30,27,1)
(26,25,1)
(7,12,1)
(16,7,1)
(31,26,1)
(24,28,1)
(23,30,1)
(32,6,1)
(6,23,1)
(30,28,1)
(33,3,1)
(28,1,1)
(30,21,1)
(13,22,1)
(2,13,1)
(15,18,1)
(6,11,1)
(21,24,1)
(0,16,1)
(18,2,1)
(11,23,1)
(12,33,1)
(4,0,1)
(3,31,1)
(9,15,1)
(18,0,1)
(1,29,1)
(29,9,1)
(22,4,1)
(23,30,2)
(30,28,2)
(0,16,2)
(30,27,2)
(6,23,2)
(18,0,2)
(28,1,2)
(3,31,2)
-----------------------------------
(0,data = SHRT_MAX + 5)
(1,myUnion.unionSecond)
(2,data)
(3,data = -1)
(4,myUnion)
(5,shortData)
(6,printShortLine(shortData)
(7,5)
(8,)
(9,myUnion)
(10,)
(11,shortData)
(12,SHRT_MAX)
(13,myUnion.unionFirst)
(14,data)
(15,data)
(16,SHRT_MAX + 5)
(17,myUnion)
(18,myUnion.unionFirst = data)
(19,)
(20,data)
(21,data)
(22,unionFirst)
(23,shortData = (short)
(24,shortData)
(25,data)
(26,1)
(27,short)
(28,data = myUnion.unionSecond)
(29,unionSecond)
(30,(short)
(31,-1)
(32,RET)
(33,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^