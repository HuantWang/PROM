-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(staticReturnsTrue())
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
28,32
28,33
28,34
29,30
30,31
30,32
32,33
32,34
34,35
36,37
37,38
37,39
39,40
39,41
39,42
41,42
43,44
45,46
46,47
46,48
46,49
46,50
47,48
49,50
52,53
52,54
55,56
56,57
56,58
57,58
57,59
58,59
60,61
60,62
64,65
64,66
65,66
65,67
66,67
69,70
69,71
70,71
71,72
71,73
71,74
71,75
72,73
74,75
76,77
78,79
80,81
81,82
81,83
82,83
82,84
83,84
85,86
88,89
89,90
89,91
90,91
92,93
-----nextToken-----
2,4,8,10,14,16,20,25,27,31,33,35,38,40,42,44,48,50,51,53,54,59,61,62,63,67,68,73,75,77,79,84,86,87,91,93
-----computeFrom-----
12,13
12,14
23,24
23,25
52,53
52,54
56,57
56,58
60,61
60,62
65,66
65,67
81,82
81,83
-----guardedBy-----
67,86
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08_bad(){    int data;    /* Initialize data */    data = -1;    if(staticReturnsTrue())    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08_bad
{    int data;    /* Initialize data */    data = -1;    if(staticReturnsTrue())    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(staticReturnsTrue())    {        /* FLAW: Use a negative number */        data = -1;    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(2,25,0)
(19,28,0)
(45,23,0)
(34,48,0)
(11,35,0)
(10,33,0)
(32,0,0)
(42,20,0)
(32,8,0)
(20,0,0)
(30,27,0)
(32,33,0)
(18,8,0)
(35,11,0)
(37,23,0)
(16,0,0)
(39,33,0)
(22,39,0)
(0,27,0)
(24,0,0)
(32,11,0)
(14,24,0)
(23,27,0)
(41,27,0)
(28,33,0)
(24,13,0)
(28,11,0)
(38,32,0)
(46,30,0)
(5,36,0)
(3,32,0)
(27,48,0)
(9,24,0)
(24,33,0)
(25,2,0)
(8,13,0)
(43,2,0)
(31,28,0)
(33,48,0)
(7,2,0)
(36,23,0)
(33,39,0)
(1,36,0)
(26,24,0)
(24,11,0)
(12,27,0)
(23,36,0)
(21,27,0)
(11,47,0)
(4,0,0)
(15,35,0)
(29,48,0)
(25,30,0)
(40,25,0)
(17,11,0)
(20,27,0)
(15,17,1)
(1,5,1)
(36,1,1)
(7,40,1)
(18,32,1)
(32,33,1)
(24,14,1)
(24,11,1)
(38,24,1)
(28,11,1)
(6,33,1)
(11,35,1)
(32,0,1)
(19,30,1)
(31,19,1)
(32,3,1)
(24,33,1)
(40,23,1)
(25,2,1)
(42,8,1)
(23,36,1)
(33,39,1)
(9,28,1)
(39,22,1)
(20,42,1)
(35,15,1)
(22,10,1)
(42,28,1)
(20,0,1)
(4,16,1)
(26,9,1)
(43,7,1)
(30,46,1)
(2,43,1)
(46,25,1)
(32,11,1)
(28,33,1)
(8,18,1)
(45,37,1)
(17,6,1)
(16,11,1)
(5,45,1)
(16,6,1)
(24,0,1)
(3,38,1)
(0,4,1)
(44,20,1)
(14,26,1)
(37,0,1)
(28,31,1)
(24,0,2)
(32,28,2)
(35,6,2)
(20,0,2)
(38,28,2)
(25,2,2)
(18,28,2)
(17,6,2)
(11,35,2)
(28,11,2)
(24,33,2)
(32,33,2)
(9,28,2)
(23,36,2)
(14,28,2)
(32,0,2)
(32,11,2)
(3,28,2)
(8,28,2)
(15,6,2)
(28,33,2)
(24,28,2)
(26,28,2)
(33,39,2)
(24,11,2)
(11,6,2)
-----------------------------------
(0,dest[100] = "")
(1,1)
(2,100-1)
(3,data)
(4,"")
(5,100)
(6,staticReturnsTrue()
(7,100)
(8,dest[data] = \\\'\\\\0\\\')
(9,dest)
(10,data)
(11,data = -1)
(12,dest)
(13,)
(14,data)
(15,1)
(16,dest)
(17,data)
(18,\\\'\\\\0\\\')
(19,data)
(20,printLine(dest)
(21,if (data < 100)
(22,1)
(23,memset(source, \\\'A\\\', 100-1)
(24,strncpy(dest, source, data)
(25,source[100-1])
(26,source)
(27,)
(28,data < 100)
(29,if(staticReturnsTrue()
(30,source[100-1] = \\\'\\\\0\\\')
(31,100)
(32,dest[data])
(33,data = -1)
(34,data)
(35,-1)
(36,100-1)
(37,source)
(38,dest)
(39,-1)
(40,source)
(41,source)
(42,dest)
(43,1)
(44,RET)
(45,\\\'A\\\')
(46,\\\'\\\\0\\\')
(47,)
(48,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^