-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_large_02_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    if(1)
    {
        /* FLAW: Use a number larger than CHAR_MAX */
        data = CHAR_MAX + 1;
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
20,21
21,22
21,23
22,23
24,25
24,26
25,26
28,29
28,30
29,30
30,31
30,32
32,33
32,34
34,35
35,36
35,37
36,37
36,38
39,40
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,8,10,14,16,18,23,26,27,31,33,37,38,40,44,46
-----computeFrom-----
12,13
12,14
21,22
21,23
24,25
24,26
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_large_02_bad(){    short data;    /* Initialize data */    data = -1;    if(1)    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_large_02_bad()
CWE197_Numeric_Truncation_Error__short_large_02_bad
{    short data;    /* Initialize data */    data = -1;    if(1)    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
if(1)    {        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }
1
{        /* FLAW: Use a number larger than CHAR_MAX */        data = CHAR_MAX + 1;    }
data = CHAR_MAX + 1;
data = CHAR_MAX + 1
data
data
CHAR_MAX + 1
CHAR_MAX
CHAR_MAX
1
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(10,11,0)
(12,21,0)
(16,0,0)
(6,7,0)
(8,3,0)
(20,0,0)
(22,7,0)
(21,12,0)
(13,22,0)
(7,22,0)
(1,14,0)
(15,16,0)
(3,21,0)
(4,17,0)
(23,21,0)
(10,14,0)
(16,3,0)
(21,3,0)
(7,17,0)
(5,10,0)
(9,17,0)
(21,10,0)
(2,14,0)
(0,17,0)
(3,0,0)
(14,10,0)
(21,7,0)
(16,15,1)
(23,8,1)
(8,10,1)
(3,21,1)
(15,3,1)
(13,6,1)
(21,7,1)
(7,22,1)
(2,5,1)
(22,13,1)
(21,10,1)
(21,23,1)
(10,14,1)
(18,7,1)
(5,18,1)
(19,16,1)
(1,2,1)
(14,1,1)
(21,12,1)
(8,18,1)
(16,3,1)
(14,18,2)
(21,10,2)
(21,7,2)
(7,22,2)
(16,3,2)
(21,12,2)
(1,18,2)
(2,18,2)
(10,18,2)
(5,18,2)
(3,21,2)
(10,14,2)
-----------------------------------
(0,)
(1,1)
(2,CHAR_MAX)
(3,charData = (char)
(4,data)
(5,data)
(6,data)
(7,data = -1)
(8,charData)
(9,if(1)
(10,data = CHAR_MAX + 1)
(11,)
(12,char)
(13,1)
(14,CHAR_MAX + 1)
(15,charData)
(16,printHexCharLine(charData)
(17,)
(18,1)
(19,RET)
(20,charData)
(21,(char)
(22,-1)
(23,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^