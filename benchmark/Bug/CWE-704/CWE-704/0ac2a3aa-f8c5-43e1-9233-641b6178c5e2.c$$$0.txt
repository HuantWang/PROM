-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_rand_05_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    if(staticTrue)
    {
        /* FLAW: Use a random number */
        data = (short)RAND32();
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
25,27
26,27
26,28
29,30
30,31
32,33
32,34
33,34
34,35
34,36
36,37
36,38
38,39
39,40
39,41
40,41
40,42
43,44
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,14,16,19,24,27,28,31,35,37,41,42,44,48,50
-----computeFrom-----
12,13
12,14
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_rand_05_bad(){    short data;    /* Initialize data */    data = -1;    if(staticTrue)    {        /* FLAW: Use a random number */        data = (short)RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_rand_05_bad()
CWE197_Numeric_Truncation_Error__short_rand_05_bad
{    short data;    /* Initialize data */    data = -1;    if(staticTrue)    {        /* FLAW: Use a random number */        data = (short)RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
if(staticTrue)    {        /* FLAW: Use a random number */        data = (short)RAND32();    }
staticTrue
staticTrue
{        /* FLAW: Use a random number */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(22,3,0)
(21,7,0)
(9,3,0)
(13,8,0)
(23,22,0)
(19,20,0)
(20,14,0)
(8,1,0)
(11,7,0)
(5,17,0)
(7,11,0)
(0,1,0)
(7,5,0)
(7,8,0)
(20,19,0)
(1,3,0)
(4,10,0)
(6,3,0)
(16,8,0)
(8,7,0)
(20,5,0)
(10,22,0)
(5,20,0)
(22,10,0)
(7,22,0)
(12,5,0)
(14,20,0)
(16,1,0)
(18,16,0)
(8,7,1)
(20,14,1)
(7,11,1)
(19,12,1)
(20,19,1)
(15,22,1)
(18,8,1)
(4,23,1)
(7,5,1)
(7,21,1)
(13,5,1)
(13,15,1)
(22,10,1)
(10,4,1)
(5,20,1)
(21,13,1)
(7,22,1)
(2,16,1)
(12,15,1)
(16,18,1)
(16,8,1)
(22,10,2)
(19,15,2)
(7,11,2)
(12,15,2)
(20,14,2)
(20,15,2)
(8,7,2)
(5,15,2)
(7,22,2)
(20,19,2)
(5,20,2)
(7,5,2)
(16,8,2)
-----------------------------------
(0,charData)
(1,)
(2,RET)
(3,)
(4,1)
(5,data = (short)
(6,data)
(7,(char)
(8,charData = (char)
(9,if(staticTrue)
(10,-1)
(11,char)
(12,data)
(13,charData)
(14,short)
(15,staticTrue)
(16,printHexCharLine(charData)
(17,)
(18,charData)
(19,RAND32()
(20,(short)
(21,data)
(22,data = -1)
(23,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^