-----label-----
1
-----code-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_31_bad()
{
    void * data;
    twoIntsStruct dataGoodBuffer;
    int dataBadBuffer = 100;
    dataGoodBuffer.intOne = 0;
    dataGoodBuffer.intTwo = 0;
    /* FLAW: Set data to point to an int */
    data = &dataBadBuffer;
    {
        void * dataCopy = data;
        void * data = dataCopy;
        /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */
        printStructLine((twoIntsStruct *)data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
23,24
25,26
26,27
26,28
27,28
27,29
28,29
32,33
33,34
33,35
34,35
34,36
35,36
39,40
40,41
40,42
41,42
43,44
44,45
46,47
46,48
46,49
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
56,57
57,58
57,59
59,60
59,61
59,62
62,63
63,64
65,66
66,67
66,68
67,68
69,70
69,71
70,71
70,72
71,72
73,74
75,76
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,29,30,31,36,37,38,42,45,49,51,52,55,58,60,61,64,68,72,74,76
-----computeFrom-----
26,27
26,28
33,34
33,35
40,41
40,42
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_31_bad(){    void * data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    /* FLAW: Set data to point to an int */    data = &dataBadBuffer;    {        void * dataCopy = data;        void * data = dataCopy;        /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */        printStructLine((twoIntsStruct *)data);    }}
void
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_31_bad()
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_31_bad
{    void * data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    /* FLAW: Set data to point to an int */    data = &dataBadBuffer;    {        void * dataCopy = data;        void * data = dataCopy;        /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */        printStructLine((twoIntsStruct *)data);    }}
void * data;
void * data;
void
* data
*
data
twoIntsStruct dataGoodBuffer;
twoIntsStruct dataGoodBuffer;
twoIntsStruct
twoIntsStruct
dataGoodBuffer
dataGoodBuffer
int dataBadBuffer = 100;
int dataBadBuffer = 100;
int
dataBadBuffer = 100
dataBadBuffer
= 100
100
dataGoodBuffer.intOne = 0;
dataGoodBuffer.intOne = 0
dataGoodBuffer.intOne
dataGoodBuffer
dataGoodBuffer
intOne
0
dataGoodBuffer.intTwo = 0;
dataGoodBuffer.intTwo = 0
dataGoodBuffer.intTwo
dataGoodBuffer
dataGoodBuffer
intTwo
0
data = &dataBadBuffer;
data = &dataBadBuffer
data
data
&dataBadBuffer
dataBadBuffer
dataBadBuffer
{        void * dataCopy = data;        void * data = dataCopy;        /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */        printStructLine((twoIntsStruct *)data);    }
void * dataCopy = data;
void * dataCopy = data;
void
* dataCopy = data
*
dataCopy
= data
data
data
void * data = dataCopy;
void * data = dataCopy;
void
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
printStructLine((twoIntsStruct *)data);
printStructLine((twoIntsStruct *)data)
printStructLine
printStructLine
(twoIntsStruct *)data
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
data
data
-----joern-----
(26,2,0)
(13,29,0)
(6,7,0)
(34,7,0)
(5,17,0)
(30,3,0)
(31,18,0)
(27,18,0)
(2,33,0)
(1,21,0)
(10,33,0)
(26,27,0)
(15,33,0)
(21,9,0)
(26,32,0)
(8,17,0)
(23,29,0)
(29,8,0)
(33,18,0)
(16,17,0)
(20,6,0)
(22,8,0)
(32,26,0)
(18,17,0)
(27,26,0)
(14,2,0)
(3,17,0)
(11,26,0)
(33,6,0)
(7,3,0)
(4,9,0)
(12,2,0)
(19,18,0)
(25,21,0)
(28,3,0)
(0,17,0)
(9,17,0)
(7,6,0)
(6,17,0)
(2,18,0)
(29,23,1)
(28,30,1)
(33,15,1)
(4,21,1)
(15,10,1)
(8,22,1)
(11,2,1)
(25,8,1)
(21,1,1)
(27,26,1)
(7,3,1)
(22,29,1)
(23,13,1)
(13,3,1)
(26,11,1)
(34,20,1)
(6,7,1)
(2,12,1)
(26,2,1)
(10,6,1)
(1,25,1)
(12,14,1)
(9,4,1)
(33,6,1)
(24,27,1)
(14,33,1)
(7,34,1)
(20,9,1)
(2,33,1)
(26,32,1)
(3,28,1)
(26,2,2)
(27,26,2)
(33,6,2)
(6,7,2)
(26,32,2)
(7,3,2)
(2,33,2)
-----------------------------------
(0,data)
(1,intTwo)
(2,* data = dataCopy)
(3,dataBadBuffer = 100)
(4,0)
(5,dataBadBuffer)
(6,data = &dataBadBuffer)
(7,&dataBadBuffer)
(8,dataGoodBuffer.intOne = 0)
(9,dataGoodBuffer.intTwo = 0)
(10,dataCopy)
(11,data)
(12,dataCopy)
(13,dataGoodBuffer)
(14,data)
(15,data)
(16,dataGoodBuffer)
(17,)
(18,)
(19,dataCopy)
(20,data)
(21,dataGoodBuffer.intTwo)
(22,0)
(23,intOne)
(24,RET)
(25,dataGoodBuffer)
(26,(twoIntsStruct *)
(27,printStructLine((twoIntsStruct *)
(28,100)
(29,dataGoodBuffer.intOne)
(30,dataBadBuffer)
(31,data)
(32,twoIntsStruct *)
(33,* dataCopy = data)
(34,dataBadBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^