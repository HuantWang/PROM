-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__connect_socket_memmove_67b_badSink(CWE194_Unexpected_Sign_Extension__connect_socket_memmove_67_structType myStruct)
{
    short data = myStruct.structFirst;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
21,26
21,27
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
34,35
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
57,59
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,7,9,13,15,19,20,24,26,28,31,33,35,37,41,43,44,46,47,52,54,55,56,60,61,66,68,70,72,77,79,80,84,86
-----computeFrom-----
45,46
45,47
49,50
49,51
53,54
53,55
58,59
58,60
74,75
74,76
-----guardedBy-----
60,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__connect_socket_memmove_67b_badSink(CWE194_Unexpected_Sign_Extension__connect_socket_memmove_67_structType myStruct){    short data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__connect_socket_memmove_67b_badSink(CWE194_Unexpected_Sign_Extension__connect_socket_memmove_67_structType myStruct)
CWE194_Unexpected_Sign_Extension__connect_socket_memmove_67b_badSink
CWE194_Unexpected_Sign_Extension__connect_socket_memmove_67_structType myStruct
CWE194_Unexpected_Sign_Extension__connect_socket_memmove_67_structType
CWE194_Unexpected_Sign_Extension__connect_socket_memmove_67_structType
myStruct
myStruct
{    short data = myStruct.structFirst;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data = myStruct.structFirst;
short data = myStruct.structFirst;
short
data = myStruct.structFirst
data
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(26,39,0)
(32,39,0)
(10,29,0)
(2,26,0)
(20,4,0)
(21,30,0)
(40,36,0)
(13,30,0)
(5,19,0)
(1,35,0)
(37,29,0)
(0,36,0)
(37,15,0)
(36,9,0)
(19,29,0)
(30,42,0)
(27,9,0)
(8,27,0)
(26,27,0)
(7,31,0)
(35,16,0)
(17,33,0)
(39,43,0)
(25,43,0)
(42,4,0)
(33,19,0)
(31,39,0)
(36,19,0)
(23,26,0)
(24,42,0)
(35,39,0)
(22,31,0)
(6,35,0)
(4,29,0)
(39,35,0)
(41,19,0)
(26,19,0)
(29,43,0)
(14,29,0)
(36,39,0)
(12,15,0)
(33,29,0)
(15,37,0)
(18,36,0)
(34,29,0)
(38,15,0)
(42,30,0)
(28,37,0)
(3,37,0)
(30,21,1)
(13,24,1)
(15,38,1)
(33,17,1)
(36,39,1)
(17,27,1)
(37,15,1)
(5,41,1)
(26,23,1)
(24,37,1)
(8,26,1)
(35,16,1)
(18,31,1)
(27,8,1)
(26,39,1)
(7,22,1)
(38,12,1)
(20,42,1)
(17,31,1)
(1,32,1)
(33,19,1)
(4,20,1)
(22,4,1)
(26,19,1)
(36,19,1)
(12,28,1)
(41,39,1)
(3,19,1)
(6,1,1)
(39,35,1)
(2,36,1)
(31,7,1)
(40,18,1)
(28,3,1)
(19,5,1)
(35,6,1)
(31,39,1)
(23,2,1)
(11,33,1)
(42,30,1)
(36,0,1)
(21,13,1)
(0,40,1)
(40,31,2)
(27,31,2)
(36,19,2)
(42,30,2)
(37,15,2)
(33,19,2)
(2,31,2)
(23,31,2)
(36,31,2)
(36,39,2)
(31,39,2)
(35,16,2)
(8,31,2)
(18,31,2)
(26,31,2)
(26,19,2)
(0,31,2)
(39,35,2)
(26,39,2)
-----------------------------------
(0,data)
(1,myStruct)
(2,dest)
(3,source)
(4,source[100-1] = \\\'\\\\0\\\')
(5,"")
(6,structFirst)
(7,100)
(8,\\\'\\\\0\\\')
(9,)
(10,dest)
(11,RET)
(12,100)
(13,100)
(14,source)
(15,100-1)
(16,CWE194_Unexpected_Sign_Extension__connect_socket_memmove_67_structType myStruct)
(17,dest)
(18,dest)
(19,dest[100] = "")
(20,\\\'\\\\0\\\')
(21,1)
(22,data)
(23,data)
(24,source)
(25,data)
(26,dest[data])
(27,dest[data] = \\\'\\\\0\\\')
(28,\\\'A\\\')
(29,)
(30,100-1)
(31,data < 100)
(32,data)
(33,printLine(dest)
(34,if (data < 100)
(35,myStruct.structFirst)
(36,memmove(dest, source, data)
(37,memset(source, \\\'A\\\', 100-1)
(38,1)
(39,data = myStruct.structFirst)
(40,source)
(41,dest)
(42,source[100-1])
(43,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^