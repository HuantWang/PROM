-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_16_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    while(1)
    {
        /* FLAW: Use a negative number */
        data = -1;
        break;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
21,22
23,24
26,27
26,28
26,29
26,30
26,31
26,32
27,28
28,29
28,30
30,31
30,32
32,33
34,35
35,36
35,37
37,38
37,39
37,40
39,40
41,42
43,44
44,45
44,46
44,47
44,48
45,46
47,48
50,51
50,52
53,54
54,55
54,56
55,56
55,57
56,57
58,59
58,60
62,63
62,64
63,64
63,65
64,65
67,68
67,69
68,69
69,70
69,71
69,72
69,73
70,71
72,73
74,75
76,77
78,79
79,80
79,81
80,81
80,82
81,82
83,84
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,29,31,33,36,38,40,42,46,48,49,51,52,57,59,60,61,65,66,71,73,75,77,82,84,85,89,91
-----computeFrom-----
12,13
12,14
20,21
20,22
50,51
50,52
54,55
54,56
58,59
58,60
63,64
63,65
79,80
79,81
-----guardedBy-----
65,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_16_bad(){    short data;    /* Initialize data */    data = 0;    while(1)    {        /* FLAW: Use a negative number */        data = -1;        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_memmove_16_bad()
CWE194_Unexpected_Sign_Extension__negative_memmove_16_bad
{    short data;    /* Initialize data */    data = 0;    while(1)    {        /* FLAW: Use a negative number */        data = -1;        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* FLAW: Use a negative number */        data = -1;        break;    }
1
{        /* FLAW: Use a negative number */        data = -1;        break;    }
data = -1;
data = -1
data
data
-1
1
break;
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(38,48,0)
(14,0,0)
(4,47,0)
(5,18,0)
(29,26,0)
(26,3,0)
(9,8,0)
(17,18,0)
(0,46,0)
(20,8,0)
(15,46,0)
(47,46,0)
(45,47,0)
(27,32,0)
(9,3,0)
(13,8,0)
(42,37,0)
(25,48,0)
(41,48,0)
(14,18,0)
(8,34,0)
(32,47,0)
(43,9,0)
(16,0,0)
(9,0,0)
(4,18,0)
(36,4,0)
(35,9,0)
(21,41,0)
(28,47,0)
(6,14,0)
(44,24,0)
(7,13,0)
(10,14,0)
(9,18,0)
(19,0,0)
(22,37,0)
(37,45,0)
(2,47,0)
(41,32,0)
(8,24,0)
(48,41,0)
(14,8,0)
(1,9,0)
(31,46,0)
(39,45,0)
(13,0,0)
(23,34,0)
(11,45,0)
(18,47,0)
(14,26,0)
(40,47,0)
(24,8,0)
(45,37,0)
(12,13,0)
(33,4,1)
(9,0,1)
(12,7,1)
(37,42,1)
(24,44,1)
(14,8,1)
(6,10,1)
(22,39,1)
(36,13,1)
(14,6,1)
(10,9,1)
(13,0,1)
(42,22,1)
(30,0,1)
(35,1,1)
(4,36,1)
(20,30,1)
(45,37,1)
(41,48,1)
(11,18,1)
(44,20,1)
(0,19,1)
(13,12,1)
(9,8,1)
(43,13,1)
(32,27,1)
(4,18,1)
(19,16,1)
(5,30,1)
(27,41,1)
(9,18,1)
(18,17,1)
(8,24,1)
(14,0,1)
(1,43,1)
(14,18,1)
(5,23,1)
(25,38,1)
(36,26,1)
(23,8,1)
(7,32,1)
(39,11,1)
(9,35,1)
(29,14,1)
(26,29,1)
(38,21,1)
(21,45,1)
(17,5,1)
(48,25,1)
(13,8,1)
(14,13,2)
(43,13,2)
(6,13,2)
(13,0,2)
(9,13,2)
(44,30,2)
(20,30,2)
(14,0,2)
(8,24,2)
(4,18,2)
(45,37,2)
(35,13,2)
(23,30,2)
(10,13,2)
(9,18,2)
(9,8,2)
(8,30,2)
(1,13,2)
(26,13,2)
(24,30,2)
(13,8,2)
(29,13,2)
(14,8,2)
(41,48,2)
(14,18,2)
(9,0,2)
-----------------------------------
(0,data = 0)
(1,source)
(2,dest)
(3,)
(4,printLine(dest)
(5,dest)
(6,data)
(7,data)
(8,data = -1)
(9,memmove(dest, source, data)
(10,dest)
(11,source)
(12,100)
(13,data < 100)
(14,dest[data])
(15,data)
(16,data)
(17,"")
(18,dest[100] = "")
(19,0)
(20,data)
(21,source)
(22,100)
(23,break;)
(24,-1)
(25,1)
(26,dest[data] = \\\'\\\\0\\\')
(27,\\\'\\\\0\\\')
(28,source)
(29,\\\'\\\\0\\\')
(30,1)
(31,while(1)
(32,source[100-1] = \\\'\\\\0\\\')
(33,RET)
(34,)
(35,data)
(36,dest)
(37,100-1)
(38,100)
(39,\\\'A\\\')
(40,if (data < 100)
(41,source[100-1])
(42,1)
(43,dest)
(44,1)
(45,memset(source, \\\'A\\\', 100-1)
(46,)
(47,)
(48,100-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^