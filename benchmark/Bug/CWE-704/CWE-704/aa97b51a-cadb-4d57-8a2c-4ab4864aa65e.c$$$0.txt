-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__listen_socket_strncpy_66b_badSink(short dataArray[])
{
    /* copy data out of dataArray */
    short data = dataArray[2];
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
21,26
21,27
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
34,35
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
57,59
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,6,8,9,13,15,19,20,24,26,28,31,33,35,37,41,43,44,46,47,52,54,55,56,60,61,66,68,70,72,77,79,80,84,86
-----computeFrom-----
45,46
45,47
49,50
49,51
53,54
53,55
58,59
58,60
74,75
74,76
-----guardedBy-----
60,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__listen_socket_strncpy_66b_badSink(short dataArray[]){    /* copy data out of dataArray */    short data = dataArray[2];    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__listen_socket_strncpy_66b_badSink(short dataArray[])
CWE194_Unexpected_Sign_Extension__listen_socket_strncpy_66b_badSink
short dataArray[]
short
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    short data = dataArray[2];    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data = dataArray[2];
short data = dataArray[2];
short
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(22,43,0)
(20,42,0)
(32,23,0)
(36,22,0)
(12,21,0)
(30,12,0)
(7,42,0)
(11,19,0)
(1,3,0)
(27,20,0)
(9,4,0)
(17,32,0)
(20,19,0)
(38,32,0)
(20,3,0)
(39,17,0)
(7,34,0)
(33,21,0)
(40,3,0)
(22,3,0)
(10,21,0)
(32,17,0)
(42,24,0)
(37,42,0)
(2,17,0)
(8,7,0)
(26,22,0)
(21,4,0)
(31,20,0)
(23,4,0)
(35,24,0)
(16,37,0)
(41,42,0)
(0,37,0)
(40,4,0)
(28,4,0)
(21,12,0)
(42,7,0)
(19,43,0)
(22,42,0)
(5,12,0)
(15,4,0)
(13,22,0)
(6,40,0)
(4,24,0)
(18,23,0)
(3,4,0)
(29,3,0)
(25,7,0)
(12,30,1)
(25,8,1)
(21,12,1)
(22,3,1)
(19,11,1)
(20,42,1)
(20,3,1)
(40,3,1)
(14,40,1)
(37,42,1)
(7,34,1)
(23,18,1)
(30,5,1)
(8,41,1)
(7,25,1)
(39,2,1)
(27,22,1)
(5,33,1)
(1,42,1)
(6,19,1)
(38,21,1)
(20,31,1)
(22,42,1)
(22,36,1)
(3,29,1)
(33,10,1)
(10,3,1)
(17,39,1)
(2,38,1)
(42,7,1)
(31,27,1)
(16,23,1)
(32,17,1)
(18,32,1)
(37,0,1)
(6,37,1)
(29,1,1)
(40,6,1)
(26,37,1)
(13,26,1)
(36,13,1)
(0,16,1)
(11,20,1)
(20,37,2)
(31,37,2)
(19,37,2)
(20,3,2)
(22,42,2)
(37,42,2)
(36,37,2)
(11,37,2)
(13,37,2)
(20,42,2)
(21,12,2)
(42,7,2)
(27,37,2)
(22,3,2)
(40,3,2)
(22,37,2)
(7,34,2)
(32,17,2)
(26,37,2)
-----------------------------------
(0,100)
(1,dest)
(2,100)
(3,dest[100] = "")
(4,)
(5,100)
(6,dest)
(7,dataArray[2])
(8,dataArray)
(9,source)
(10,source)
(11,\\\'\\\\0\\\')
(12,100-1)
(13,source)
(14,RET)
(15,dest)
(16,data)
(17,100-1)
(18,\\\'\\\\0\\\')
(19,dest[data] = \\\'\\\\0\\\')
(20,dest[data])
(21,memset(source, \\\'A\\\', 100-1)
(22,strncpy(dest, source, data)
(23,source[100-1] = \\\'\\\\0\\\')
(24,)
(25,2)
(26,dest)
(27,dest)
(28,if (data < 100)
(29,"")
(30,1)
(31,data)
(32,source[100-1])
(33,\\\'A\\\')
(34,short dataArray[])
(35,data)
(36,data)
(37,data < 100)
(38,source)
(39,1)
(40,printLine(dest)
(41,data)
(42,data = dataArray[2])
(43,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^