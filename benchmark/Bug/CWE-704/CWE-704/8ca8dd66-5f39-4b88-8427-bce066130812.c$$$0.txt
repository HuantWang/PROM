-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    int * dataPtr = (int *)dataVoidPtr;
    /* dereference dataPtr into data */
    int data = (*dataPtr);
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
35,37
35,38
35,39
35,40
35,41
36,37
37,38
37,39
39,40
39,41
41,42
43,44
44,45
44,46
46,47
46,48
46,49
48,49
50,51
52,53
53,54
53,55
53,56
53,57
54,55
56,57
59,60
59,61
62,63
63,64
63,65
64,65
64,66
65,66
67,68
67,69
71,72
71,73
72,73
72,74
73,74
76,77
76,78
77,78
78,79
78,80
78,81
78,82
79,80
81,82
83,84
85,86
87,88
88,89
88,90
89,90
89,91
90,91
92,93
95,96
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,38,40,42,45,47,49,51,55,57,58,60,61,66,68,69,70,74,75,80,82,84,86,91,93,94,98,100
-----computeFrom-----
59,60
59,61
63,64
63,65
67,68
67,69
72,73
72,74
88,89
88,90
-----guardedBy-----
74,93
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_64b_badSink(void * dataVoidPtr)
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int * dataPtr = (int *)dataVoidPtr;
int * dataPtr = (int *)dataVoidPtr;
int
* dataPtr = (int *)dataVoidPtr
*
dataPtr
= (int *)dataVoidPtr
(int *)dataVoidPtr
int *
int
*
*
dataVoidPtr
dataVoidPtr
int data = (*dataPtr);
int data = (*dataPtr);
int
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(20,3,0)
(3,28,0)
(21,26,0)
(30,26,0)
(43,3,0)
(10,16,0)
(14,31,0)
(26,41,0)
(22,46,0)
(3,2,0)
(6,16,0)
(9,48,0)
(11,31,0)
(29,17,0)
(31,10,0)
(16,22,0)
(0,29,0)
(48,29,0)
(45,13,0)
(32,29,0)
(15,38,0)
(47,46,0)
(35,7,0)
(39,10,0)
(38,13,0)
(16,10,0)
(46,23,0)
(13,28,0)
(19,0,0)
(2,29,0)
(18,17,0)
(42,7,0)
(7,35,0)
(40,46,0)
(46,40,0)
(5,29,0)
(4,3,0)
(38,2,0)
(24,41,0)
(12,29,0)
(35,48,0)
(22,17,0)
(37,38,0)
(38,10,0)
(10,17,0)
(3,10,0)
(36,2,0)
(41,29,0)
(0,2,0)
(44,35,0)
(25,7,0)
(33,22,0)
(8,2,0)
(27,17,0)
(1,41,0)
(46,22,0)
(41,26,0)
(24,2,1)
(2,36,1)
(0,19,1)
(14,48,1)
(48,9,1)
(15,37,1)
(11,14,1)
(42,44,1)
(44,41,1)
(1,24,1)
(10,16,1)
(39,22,1)
(41,26,1)
(26,30,1)
(7,25,1)
(9,35,1)
(3,10,1)
(37,3,1)
(47,33,1)
(35,7,1)
(22,46,1)
(31,11,1)
(46,40,1)
(38,15,1)
(3,2,1)
(8,10,1)
(0,2,1)
(21,1,1)
(46,47,1)
(19,31,1)
(16,22,1)
(31,10,1)
(25,42,1)
(43,4,1)
(13,45,1)
(45,38,1)
(6,39,1)
(30,21,1)
(38,10,1)
(16,6,1)
(19,13,1)
(34,0,1)
(36,8,1)
(3,43,1)
(4,20,1)
(20,31,1)
(38,2,1)
(46,23,1)
(43,31,2)
(20,31,2)
(15,31,2)
(38,2,2)
(3,10,2)
(4,31,2)
(3,31,2)
(46,23,2)
(45,31,2)
(38,31,2)
(0,2,2)
(22,46,2)
(46,40,2)
(38,10,2)
(13,31,2)
(35,7,2)
(37,31,2)
(41,26,2)
(3,2,2)
(16,22,2)
(31,10,2)
(10,16,2)
-----------------------------------
(0,printLine(dest)
(1,\\\'A\\\')
(2,dest[100] = "")
(3,memcpy(dest, source, data)
(4,source)
(5,source)
(6,dataPtr)
(7,100-1)
(8,dest)
(9,\\\'\\\\0\\\')
(10,data = (*dataPtr)
(11,100)
(12,if (data < 100)
(13,dest[data] = \\\'\\\\0\\\')
(14,data)
(15,data)
(16,*dataPtr)
(17,)
(18,dataPtr)
(19,dest)
(20,dest)
(21,100)
(22,* dataPtr = (int *)
(23,void * dataVoidPtr)
(24,source)
(25,1)
(26,100-1)
(27,data)
(28,)
(29,)
(30,1)
(31,data < 100)
(32,dest)
(33,dataPtr)
(34,RET)
(35,source[100-1])
(36,"")
(37,dest)
(38,dest[data])
(39,data)
(40,int *)
(41,memset(source, \\\'A\\\', 100-1)
(42,100)
(43,data)
(44,source)
(45,\\\'\\\\0\\\')
(46,(int *)
(47,dataVoidPtr)
(48,source[100-1] = \\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^