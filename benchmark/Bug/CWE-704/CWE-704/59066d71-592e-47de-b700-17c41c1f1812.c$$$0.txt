-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_08_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
32,35
32,36
32,37
32,38
33,34
34,35
34,36
36,37
36,38
38,39
40,41
41,42
41,43
43,44
43,45
43,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
68,70
69,70
69,71
70,71
73,74
73,75
74,75
75,76
75,77
75,78
75,79
76,77
78,79
80,81
82,83
84,85
85,86
85,87
86,87
86,88
87,88
89,90
92,93
93,94
93,95
94,95
96,97
-----nextToken-----
2,4,8,10,14,16,20,25,27,28,31,35,37,39,42,44,46,48,52,54,55,57,58,63,65,66,67,71,72,77,79,81,83,88,90,91,95,97
-----computeFrom-----
12,13
12,14
56,57
56,58
60,61
60,62
64,65
64,66
69,70
69,71
85,86
85,87
-----guardedBy-----
71,90
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_08_bad(){    int data;    /* Initialize data */    data = -1;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_08_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_08_bad
{    int data;    /* Initialize data */    data = -1;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(3,29,0)
(49,11,0)
(42,13,0)
(12,10,0)
(13,23,0)
(13,6,0)
(22,29,0)
(29,23,0)
(36,35,0)
(37,45,0)
(21,17,0)
(39,13,0)
(34,8,0)
(11,31,0)
(28,45,0)
(29,8,0)
(43,23,0)
(19,31,0)
(0,28,0)
(15,8,0)
(8,11,0)
(10,17,0)
(17,10,0)
(34,11,0)
(13,8,0)
(10,11,0)
(1,11,0)
(4,46,0)
(35,48,0)
(20,35,0)
(23,40,0)
(16,29,0)
(28,23,0)
(41,48,0)
(23,31,0)
(47,31,0)
(33,6,0)
(18,11,0)
(46,23,0)
(40,23,0)
(48,1,0)
(26,46,0)
(2,1,0)
(5,8,0)
(48,35,0)
(44,17,0)
(24,11,0)
(45,28,0)
(27,45,0)
(25,40,0)
(14,10,0)
(6,38,0)
(45,32,0)
(9,34,0)
(29,38,0)
(12,14,1)
(37,30,1)
(2,48,1)
(20,36,1)
(36,41,1)
(30,23,1)
(27,37,1)
(15,45,1)
(34,9,1)
(29,8,1)
(23,40,1)
(13,23,1)
(4,26,1)
(6,33,1)
(1,2,1)
(48,35,1)
(42,39,1)
(5,15,1)
(46,23,1)
(28,23,1)
(9,46,1)
(17,21,1)
(46,4,1)
(29,23,1)
(10,17,1)
(34,8,1)
(7,34,1)
(29,16,1)
(44,12,1)
(28,0,1)
(0,27,1)
(3,22,1)
(39,29,1)
(9,6,1)
(22,46,1)
(41,10,1)
(21,44,1)
(25,43,1)
(13,42,1)
(33,13,1)
(26,1,1)
(35,20,1)
(13,8,1)
(16,3,1)
(40,25,1)
(15,30,1)
(14,8,1)
(8,5,1)
(45,28,1)
(23,40,2)
(0,30,2)
(39,46,2)
(45,30,2)
(13,8,2)
(34,8,2)
(45,28,2)
(13,23,2)
(16,46,2)
(6,46,2)
(27,30,2)
(13,46,2)
(46,23,2)
(29,23,2)
(29,8,2)
(29,46,2)
(48,35,2)
(22,46,2)
(28,23,2)
(37,30,2)
(42,46,2)
(33,46,2)
(28,30,2)
(3,46,2)
(10,17,2)
-----------------------------------
(0,data)
(1,source[100-1] = \\\'\\\\0\\\')
(2,\\\'\\\\0\\\')
(3,source)
(4,100)
(5,"")
(6,dest[data] = \\\'\\\\0\\\')
(7,RET)
(8,dest[100] = "")
(9,dest)
(10,memset(source, \\\'A\\\', 100-1)
(11,)
(12,\\\'A\\\')
(13,dest[data])
(14,source)
(15,dest)
(16,data)
(17,100-1)
(18,if (data < 100)
(19,if(staticReturnsTrue()
(20,1)
(21,1)
(22,dest)
(23,data = -1)
(24,source)
(25,1)
(26,data)
(27,"%d")
(28,&data)
(29,memcpy(dest, source, data)
(30,staticReturnsTrue()
(31,)
(32,)
(33,\\\'\\\\0\\\')
(34,printLine(dest)
(35,100-1)
(36,100)
(37,stdin)
(38,)
(39,dest)
(40,-1)
(41,source)
(42,data)
(43,data)
(44,100)
(45,fscanf(stdin, "%d", &data)
(46,data < 100)
(47,data)
(48,source[100-1])
(49,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^