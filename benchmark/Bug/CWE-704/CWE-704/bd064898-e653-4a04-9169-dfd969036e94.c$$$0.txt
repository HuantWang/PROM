-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_12_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalReturnsTrueOrFalse())
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    else
    {
        /* FIX: Use a positive integer less than &InitialDataSize&*/
        data = 100-1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
17,20
18,19
19,20
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
33,34
34,35
34,36
35,36
37,38
37,39
40,41
40,42
40,43
40,44
40,45
40,46
41,42
42,43
42,44
44,45
44,46
46,47
48,49
49,50
49,51
51,52
51,53
51,54
53,54
55,56
57,58
58,59
58,60
58,61
58,62
59,60
61,62
64,65
64,66
67,68
68,69
68,70
69,70
69,71
70,71
72,73
72,74
76,77
76,78
77,78
77,79
78,79
81,82
81,83
82,83
83,84
83,85
83,86
83,87
84,85
86,87
88,89
90,91
92,93
93,94
93,95
94,95
94,96
95,96
97,98
100,101
101,102
101,103
102,103
104,105
-----nextToken-----
2,4,8,10,14,16,20,25,27,28,31,36,38,39,43,45,47,50,52,54,56,60,62,63,65,66,71,73,74,75,79,80,85,87,89,91,96,98,99,103,105
-----computeFrom-----
12,13
12,14
34,35
34,36
37,38
37,39
64,65
64,66
68,69
68,70
72,73
72,74
77,78
77,79
93,94
93,95
-----guardedBy-----
79,98
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_12_bad(){    int data;    /* Initialize data */    data = -1;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    else    {        /* FIX: Use a positive integer less than &InitialDataSize&*/        data = 100-1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_12_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_12_bad
{    int data;    /* Initialize data */    data = -1;    if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    else    {        /* FIX: Use a positive integer less than &InitialDataSize&*/        data = 100-1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(globalReturnsTrueOrFalse())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    else    {        /* FIX: Use a positive integer less than &InitialDataSize&*/        data = 100-1;    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        /* FIX: Use a positive integer less than &InitialDataSize&*/        data = 100-1;    }
data = 100-1;
data = 100-1
data
data
100-1
100
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(32,35,0)
(20,7,0)
(32,4,0)
(16,28,0)
(7,21,0)
(28,5,0)
(5,29,0)
(32,21,0)
(8,35,0)
(36,19,0)
(53,4,0)
(15,49,0)
(29,37,0)
(40,30,0)
(3,11,0)
(21,49,0)
(45,35,0)
(35,30,0)
(19,35,0)
(32,11,0)
(21,6,0)
(1,28,0)
(13,32,0)
(23,29,0)
(10,44,0)
(11,24,0)
(47,37,0)
(39,4,0)
(27,10,0)
(8,18,0)
(38,29,0)
(7,35,0)
(18,8,0)
(19,21,0)
(55,4,0)
(39,29,0)
(0,10,0)
(12,19,0)
(42,8,0)
(14,32,0)
(54,29,0)
(19,4,0)
(51,19,0)
(19,24,0)
(49,21,0)
(9,1,0)
(30,35,0)
(44,10,0)
(2,18,0)
(28,1,0)
(18,34,0)
(43,5,0)
(26,37,0)
(4,29,0)
(35,37,0)
(25,44,0)
(22,1,0)
(48,21,0)
(41,44,0)
(33,49,0)
(31,39,0)
(10,29,0)
(46,7,0)
(17,18,0)
(31,7,1)
(53,18,1)
(30,40,1)
(43,28,1)
(7,46,1)
(2,17,1)
(46,20,1)
(21,49,1)
(48,52,1)
(0,27,1)
(1,22,1)
(19,35,1)
(17,52,1)
(4,55,1)
(8,42,1)
(25,41,1)
(11,3,1)
(52,35,1)
(40,45,1)
(36,51,1)
(19,21,1)
(16,10,1)
(32,35,1)
(39,31,1)
(19,4,1)
(22,9,1)
(18,8,1)
(44,25,1)
(49,15,1)
(13,14,1)
(9,16,1)
(8,35,1)
(7,21,1)
(32,13,1)
(33,48,1)
(41,0,1)
(39,4,1)
(10,44,1)
(7,35,1)
(42,2,1)
(53,21,1)
(50,39,1)
(20,5,1)
(32,21,1)
(14,19,1)
(35,30,1)
(55,53,1)
(5,43,1)
(19,12,1)
(3,32,1)
(31,11,1)
(51,7,1)
(27,4,1)
(12,36,1)
(28,1,1)
(32,4,1)
(15,33,1)
(36,7,2)
(13,7,2)
(19,21,2)
(19,7,2)
(51,7,2)
(32,21,2)
(3,7,2)
(21,52,2)
(28,1,2)
(19,4,2)
(19,35,2)
(7,21,2)
(10,44,2)
(2,52,2)
(32,7,2)
(11,7,2)
(14,7,2)
(8,35,2)
(17,52,2)
(15,52,2)
(7,35,2)
(12,7,2)
(21,49,2)
(39,4,2)
(42,52,2)
(49,52,2)
(18,52,2)
(18,8,2)
(35,30,2)
(33,52,2)
(48,52,2)
(32,35,2)
(32,4,2)
(8,52,2)
-----------------------------------
(0,\\\'A\\\')
(1,100-1)
(2,"%d")
(3,\\\'\\\\0\\\')
(4,dest[100] = "")
(5,source[100-1] = \\\'\\\\0\\\')
(6,)
(7,data < 100)
(8,&data)
(9,100)
(10,memset(source, \\\'A\\\', 100-1)
(11,dest[data] = \\\'\\\\0\\\')
(12,data)
(13,data)
(14,dest)
(15,1)
(16,source)
(17,stdin)
(18,fscanf(stdin, "%d", &data)
(19,strncpy(dest, source, data)
(20,data)
(21,data = 100-1)
(22,1)
(23,dest)
(24,)
(25,1)
(26,data)
(27,source)
(28,source[100-1])
(29,)
(30,-1)
(31,dest)
(32,dest[data])
(33,100)
(34,)
(35,data = -1)
(36,source)
(37,)
(38,if (data < 100)
(39,printLine(dest)
(40,1)
(41,100)
(42,data)
(43,\\\'\\\\0\\\')
(44,100-1)
(45,data)
(46,100)
(47,if(globalReturnsTrueOrFalse()
(48,data)
(49,100-1)
(50,RET)
(51,dest)
(52,globalReturnsTrueOrFalse()
(53,dest)
(54,source)
(55,"")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^