-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_memcpy_07_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(staticFive==5)
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
32,35
32,36
32,37
32,38
33,34
34,35
34,36
36,37
36,38
38,39
40,41
41,42
41,43
43,44
43,45
43,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
68,70
69,70
69,71
70,71
73,74
73,75
74,75
75,76
75,77
75,78
75,79
76,77
78,79
80,81
82,83
84,85
85,86
85,87
86,87
86,88
87,88
89,90
92,93
93,94
93,95
94,95
96,97
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,28,31,35,37,39,42,44,46,48,52,54,55,57,58,63,65,66,67,71,72,77,79,81,83,88,90,91,95,97
-----computeFrom-----
12,13
12,14
17,18
17,19
56,57
56,58
60,61
60,62
64,65
64,66
69,70
69,71
85,86
85,87
-----guardedBy-----
71,90
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_memcpy_07_bad(){    short data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_memcpy_07_bad()
CWE194_Unexpected_Sign_Extension__fscanf_memcpy_07_bad
{    short data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
staticFive==5
staticFive
staticFive
5
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(36,22,0)
(42,23,0)
(44,22,0)
(3,4,0)
(18,38,0)
(31,32,0)
(29,8,0)
(11,20,0)
(7,36,0)
(40,32,0)
(13,17,0)
(20,10,0)
(38,8,0)
(30,38,0)
(49,31,0)
(12,16,0)
(17,30,0)
(0,20,0)
(9,43,0)
(32,31,0)
(4,50,0)
(33,48,0)
(48,22,0)
(10,8,0)
(34,9,0)
(46,43,0)
(9,8,0)
(26,37,0)
(32,6,0)
(43,8,0)
(37,43,0)
(31,22,0)
(28,16,0)
(37,4,0)
(30,17,0)
(47,10,0)
(14,32,0)
(48,50,0)
(19,23,0)
(37,22,0)
(21,48,0)
(41,10,0)
(27,37,0)
(22,16,0)
(2,30,0)
(35,8,0)
(48,43,0)
(8,16,0)
(5,43,0)
(10,20,0)
(24,8,0)
(45,17,0)
(15,48,0)
(1,22,0)
(39,36,0)
(25,9,1)
(9,43,1)
(7,39,1)
(42,22,1)
(49,14,1)
(48,43,1)
(44,1,1)
(22,44,1)
(48,33,1)
(32,31,1)
(11,41,1)
(9,34,1)
(40,23,1)
(3,37,1)
(5,23,1)
(38,18,1)
(47,43,1)
(34,36,1)
(18,30,1)
(26,48,1)
(17,13,1)
(36,22,1)
(34,4,1)
(19,42,1)
(15,36,1)
(21,15,1)
(4,3,1)
(48,22,1)
(45,2,1)
(30,17,1)
(43,46,1)
(31,49,1)
(0,11,1)
(46,5,1)
(10,20,1)
(37,27,1)
(27,26,1)
(20,0,1)
(41,47,1)
(39,38,1)
(5,32,1)
(31,22,1)
(14,40,1)
(37,43,1)
(33,21,1)
(36,7,1)
(2,10,1)
(37,22,1)
(23,19,1)
(13,45,1)
(49,23,2)
(3,36,2)
(37,22,2)
(10,20,2)
(37,43,2)
(32,31,2)
(33,36,2)
(40,23,2)
(26,36,2)
(30,17,2)
(37,36,2)
(15,36,2)
(14,23,2)
(27,36,2)
(32,23,2)
(48,43,2)
(9,43,2)
(31,22,2)
(21,36,2)
(48,22,2)
(48,36,2)
(36,22,2)
(31,23,2)
(4,36,2)
-----------------------------------
(0,1)
(1,data)
(2,source)
(3,\\\'\\\\0\\\')
(4,dest[data] = \\\'\\\\0\\\')
(5,dest)
(6,)
(7,100)
(8,)
(9,printLine(dest)
(10,memset(source, \\\'A\\\', 100-1)
(11,100)
(12,if(staticFive==5)
(13,1)
(14,"%hd")
(15,dest)
(16,)
(17,100-1)
(18,\\\'\\\\0\\\')
(19,5)
(20,100-1)
(21,source)
(22,data = 0)
(23,staticFive==5)
(24,dest)
(25,RET)
(26,dest)
(27,data)
(28,data)
(29,source)
(30,source[100-1])
(31,&data)
(32,fscanf (stdin, "%hd", &data)
(33,data)
(34,dest)
(35,if (data < 100)
(36,data < 100)
(37,dest[data])
(38,source[100-1] = \\\'\\\\0\\\')
(39,data)
(40,stdin)
(41,\\\'A\\\')
(42,staticFive)
(43,dest[100] = "")
(44,0)
(45,100)
(46,"")
(47,source)
(48,memcpy(dest, source, data)
(49,data)
(50,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^