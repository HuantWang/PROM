-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_05_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(staticTrue)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    {
        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
        short shortData = (short)data;
        printShortLine(shortData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
21,23
22,23
23,24
23,25
25,26
25,27
25,28
27,28
28,29
30,31
32,33
32,34
32,35
33,34
33,35
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
53,54
55,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
63,64
63,65
65,66
65,67
67,68
68,69
68,70
69,70
69,71
72,73
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,8,10,14,16,19,24,26,29,31,36,38,40,42,44,49,52,54,59,60,64,66,70,71,73,77,79
-----computeFrom-----
12,13
12,14
33,34
33,35
47,48
47,49
-----guardedBy-----
38,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_05_bad(){    int data;    /* Initialize data */    data = -1;    if(staticTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_short_05_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_short_05_bad
{    int data;    /* Initialize data */    data = -1;    if(staticTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(staticTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
staticTrue
staticTrue
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(4,0,0)
(5,27,0)
(33,28,0)
(12,10,0)
(27,8,0)
(35,5,0)
(15,29,0)
(20,14,0)
(21,0,0)
(37,6,0)
(0,33,0)
(8,33,0)
(13,4,0)
(34,36,0)
(5,37,0)
(29,6,0)
(28,19,0)
(5,35,0)
(11,28,0)
(12,29,0)
(18,10,0)
(32,12,0)
(23,28,0)
(5,10,0)
(25,0,0)
(27,31,0)
(10,29,0)
(36,37,0)
(2,6,0)
(30,33,0)
(14,7,0)
(0,4,0)
(17,37,0)
(3,33,0)
(38,0,0)
(10,5,0)
(26,5,0)
(37,36,0)
(9,8,0)
(22,27,0)
(8,27,0)
(1,6,0)
(12,10,1)
(12,32,1)
(18,14,1)
(9,22,1)
(10,5,1)
(32,10,1)
(27,8,1)
(3,24,1)
(22,4,1)
(33,30,1)
(20,4,1)
(18,24,1)
(21,33,1)
(5,35,1)
(37,36,1)
(36,34,1)
(8,33,1)
(4,0,1)
(25,21,1)
(34,17,1)
(4,13,1)
(0,33,1)
(30,3,1)
(5,27,1)
(18,27,1)
(5,26,1)
(8,9,1)
(5,37,1)
(14,20,1)
(0,38,1)
(13,0,1)
(26,18,1)
(16,12,1)
(38,25,1)
(24,37,1)
(21,24,2)
(3,24,2)
(14,4,2)
(8,4,2)
(4,24,2)
(27,8,2)
(38,24,2)
(13,24,2)
(27,4,2)
(30,24,2)
(8,33,2)
(10,5,2)
(5,27,2)
(5,35,2)
(0,33,2)
(22,4,2)
(20,4,2)
(33,24,2)
(0,24,2)
(12,10,2)
(4,0,2)
(37,36,2)
(9,4,2)
(25,24,2)
(5,37,2)
-----------------------------------
(0,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(1,if(staticTrue)
(2,data)
(3,inputBuffer)
(4,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(5,(short)
(6,)
(7,)
(8,atoi(inputBuffer)
(9,inputBuffer)
(10,shortData = (short)
(11,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(12,printShortLine(shortData)
(13,NULL)
(14,printLine("fgets()
(15,shortData)
(16,RET)
(17,data)
(18,shortData)
(19,)
(20,"fgets()
(21,inputBuffer)
(22,data)
(23,inputBuffer)
(24,staticTrue)
(25,CHAR_ARRAY_SIZE)
(26,data)
(27,data = atoi(inputBuffer)
(28,)
(29,)
(30,"")
(31,)
(32,shortData)
(33,inputBuffer[CHAR_ARRAY_SIZE] = "")
(34,1)
(35,short)
(36,-1)
(37,data = -1)
(38,stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^