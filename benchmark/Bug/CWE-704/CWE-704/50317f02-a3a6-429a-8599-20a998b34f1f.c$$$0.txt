-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_07_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(staticFive==5)
    {
        /* FLAW: Use a random value that could be less than 0 */
        data = (short)RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
33,36
33,37
33,38
33,39
34,35
35,36
35,37
37,38
37,39
39,40
41,42
42,43
42,44
44,45
44,46
44,47
46,47
48,49
50,51
51,52
51,53
51,54
51,55
52,53
54,55
57,58
57,59
60,61
61,62
61,63
62,63
62,64
63,64
65,66
65,67
69,70
69,71
70,71
70,72
71,72
74,75
74,76
75,76
76,77
76,78
76,79
76,80
77,78
79,80
81,82
83,84
85,86
86,87
86,88
87,88
87,89
88,89
90,91
93,94
94,95
94,96
95,96
97,98
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,38,40,43,45,47,49,53,55,56,58,59,64,66,67,68,72,73,78,80,82,84,89,91,92,96,98
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
57,58
57,59
61,62
61,63
65,66
65,67
70,71
70,72
86,87
86,88
-----guardedBy-----
72,91
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_07_bad(){    short data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__rand_strncpy_07_bad()
CWE194_Unexpected_Sign_Extension__rand_strncpy_07_bad
{    short data;    /* Initialize data */    data = 0;    if(staticFive==5)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(staticFive==5)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }
staticFive==5
staticFive
staticFive
5
{        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(12,35,0)
(29,5,0)
(33,34,0)
(18,30,0)
(10,37,0)
(37,23,0)
(23,13,0)
(27,9,0)
(2,19,0)
(25,37,0)
(3,30,0)
(24,18,0)
(0,48,0)
(34,7,0)
(46,5,0)
(31,8,0)
(29,45,0)
(48,23,0)
(8,6,0)
(15,30,0)
(41,8,0)
(48,0,0)
(47,48,0)
(46,30,0)
(30,7,0)
(48,47,0)
(32,11,0)
(37,11,0)
(37,34,0)
(9,36,0)
(11,45,0)
(23,48,0)
(38,29,0)
(49,7,0)
(9,18,0)
(19,34,0)
(5,30,0)
(17,30,0)
(20,7,0)
(37,5,0)
(29,23,0)
(29,34,0)
(19,23,0)
(40,35,0)
(44,46,0)
(21,29,0)
(6,30,0)
(4,34,0)
(26,19,0)
(42,5,0)
(16,23,0)
(6,8,0)
(28,6,0)
(14,5,0)
(50,6,0)
(39,36,0)
(43,29,0)
(22,36,0)
(36,9,0)
(47,16,1)
(37,23,1)
(6,8,1)
(44,11,1)
(24,9,1)
(29,34,1)
(37,5,1)
(50,28,1)
(44,19,1)
(37,34,1)
(43,38,1)
(48,47,1)
(27,6,1)
(14,35,1)
(1,46,1)
(41,50,1)
(46,5,1)
(4,33,1)
(8,31,1)
(22,39,1)
(40,34,1)
(12,40,1)
(29,21,1)
(32,37,1)
(9,36,1)
(11,32,1)
(35,12,1)
(18,24,1)
(36,22,1)
(42,14,1)
(29,23,1)
(37,10,1)
(31,41,1)
(48,0,1)
(5,42,1)
(2,18,1)
(46,44,1)
(39,27,1)
(26,2,1)
(10,25,1)
(19,26,1)
(34,4,1)
(21,43,1)
(29,5,1)
(19,34,1)
(16,35,1)
(38,19,1)
(23,48,1)
(14,23,1)
(28,5,1)
(25,29,1)
(19,23,1)
(29,5,2)
(16,35,2)
(46,5,2)
(37,19,2)
(21,19,2)
(43,19,2)
(37,34,2)
(23,35,2)
(37,5,2)
(37,23,2)
(38,19,2)
(19,23,2)
(29,23,2)
(23,48,2)
(32,19,2)
(47,35,2)
(10,19,2)
(19,34,2)
(29,34,2)
(29,19,2)
(6,8,2)
(11,19,2)
(48,47,2)
(9,36,2)
(48,0,2)
(25,19,2)
(48,35,2)
-----------------------------------
(0,short)
(1,RET)
(2,data)
(3,if (data < 100)
(4,0)
(5,dest[100] = "")
(6,memset(source, \\\'A\\\', 100-1)
(7,)
(8,100-1)
(9,source[100-1])
(10,data)
(11,dest[data] = \\\'\\\\0\\\')
(12,5)
(13,)
(14,dest)
(15,source)
(16,data)
(17,dest)
(18,source[100-1] = \\\'\\\\0\\\')
(19,data < 100)
(20,data)
(21,data)
(22,1)
(23,data = (short)
(24,\\\'\\\\0\\\')
(25,dest)
(26,100)
(27,source)
(28,source)
(29,strncpy(dest, source, data)
(30,)
(31,1)
(32,\\\'\\\\0\\\')
(33,data)
(34,data = 0)
(35,staticFive==5)
(36,100-1)
(37,dest[data])
(38,dest)
(39,100)
(40,staticFive)
(41,100)
(42,"")
(43,source)
(44,dest)
(45,)
(46,printLine(dest)
(47,RAND32()
(48,(short)
(49,if(staticFive==5)
(50,\\\'A\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^