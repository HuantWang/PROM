-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_memmove_66b_badSink(int dataArray[])
{
    /* copy data out of dataArray */
    int data = dataArray[2];
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
21,26
21,27
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
34,35
36,37
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
45,47
48,49
49,50
49,51
50,51
50,52
51,52
53,54
53,55
57,58
57,59
58,59
58,60
59,60
62,63
62,64
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
76,77
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,6,8,9,13,15,19,20,24,26,28,31,33,35,37,41,43,44,46,47,52,54,55,56,60,61,66,68,70,72,77,79,80,84,86
-----computeFrom-----
45,46
45,47
49,50
49,51
53,54
53,55
58,59
58,60
74,75
74,76
-----guardedBy-----
60,79
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_memmove_66b_badSink(int dataArray[]){    /* copy data out of dataArray */    int data = dataArray[2];    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_memmove_66b_badSink(int dataArray[])
CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_memmove_66b_badSink
int dataArray[]
int
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    int data = dataArray[2];    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data = dataArray[2];
int data = dataArray[2];
int
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(17,22,0)
(5,34,0)
(19,34,0)
(8,28,0)
(42,10,0)
(30,17,0)
(19,10,0)
(41,39,0)
(1,22,0)
(2,22,0)
(18,22,0)
(10,15,0)
(43,1,0)
(24,39,0)
(7,19,0)
(22,34,0)
(33,19,0)
(1,25,0)
(40,19,0)
(24,22,0)
(10,19,0)
(7,39,0)
(6,25,0)
(3,19,0)
(35,40,0)
(29,3,0)
(36,24,0)
(20,17,0)
(31,22,0)
(37,28,0)
(25,1,0)
(40,12,0)
(38,1,0)
(7,21,0)
(39,22,0)
(0,7,0)
(4,10,0)
(14,40,0)
(21,12,0)
(13,7,0)
(40,39,0)
(16,3,0)
(23,25,0)
(9,39,0)
(30,28,0)
(11,40,0)
(26,30,0)
(27,21,0)
(28,30,0)
(38,39,1)
(4,42,1)
(7,39,1)
(19,10,1)
(27,7,1)
(20,30,1)
(16,29,1)
(36,21,1)
(43,38,1)
(26,1,1)
(3,16,1)
(0,13,1)
(39,41,1)
(17,20,1)
(1,25,1)
(28,37,1)
(21,27,1)
(14,35,1)
(25,23,1)
(11,14,1)
(30,28,1)
(40,39,1)
(7,0,1)
(8,26,1)
(24,36,1)
(29,17,1)
(42,33,1)
(41,9,1)
(9,19,1)
(36,3,1)
(10,4,1)
(24,39,1)
(10,15,1)
(23,6,1)
(13,40,1)
(40,19,1)
(40,11,1)
(35,3,1)
(37,8,1)
(7,19,1)
(32,24,1)
(3,19,1)
(6,43,1)
(19,10,2)
(40,3,2)
(24,39,2)
(21,3,2)
(40,39,2)
(40,19,2)
(7,3,2)
(13,3,2)
(14,3,2)
(35,3,2)
(10,15,2)
(1,25,2)
(0,3,2)
(30,28,2)
(27,3,2)
(3,19,2)
(7,19,2)
(11,3,2)
(7,39,2)
-----------------------------------
(0,data)
(1,memset(source, \\\'A\\\', 100-1)
(2,dest)
(3,data < 100)
(4,2)
(5,data)
(6,100)
(7,dest[data])
(8,100)
(9,dest)
(10,dataArray[2])
(11,data)
(12,)
(13,dest)
(14,source)
(15,int dataArray[])
(16,100)
(17,source[100-1] = \\\'\\\\0\\\')
(18,if (data < 100)
(19,data = dataArray[2])
(20,\\\'\\\\0\\\')
(21,dest[data] = \\\'\\\\0\\\')
(22,)
(23,1)
(24,printLine(dest)
(25,100-1)
(26,source)
(27,\\\'\\\\0\\\')
(28,100-1)
(29,data)
(30,source[100-1])
(31,source)
(32,RET)
(33,data)
(34,)
(35,dest)
(36,dest)
(37,1)
(38,source)
(39,dest[100] = "")
(40,memmove(dest, source, data)
(41,"")
(42,dataArray)
(43,\\\'A\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^