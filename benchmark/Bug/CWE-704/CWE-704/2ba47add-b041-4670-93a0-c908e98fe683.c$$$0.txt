-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_large_01_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    /* FLAW: Use a number larger than CHAR_MAX */
    data = CHAR_MAX + 1;
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
22,23
25,26
25,27
26,27
27,28
27,29
29,30
29,31
31,32
32,33
32,34
33,34
33,35
36,37
38,39
39,40
39,41
40,41
42,43
-----nextToken-----
2,4,8,10,14,16,20,23,24,28,30,34,35,37,41,43
-----computeFrom-----
12,13
12,14
18,19
18,20
21,22
21,23
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_large_01_bad(){    short data;    /* Initialize data */    data = -1;    /* FLAW: Use a number larger than CHAR_MAX */    data = CHAR_MAX + 1;    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_large_01_bad()
CWE197_Numeric_Truncation_Error__short_large_01_bad
{    short data;    /* Initialize data */    data = -1;    /* FLAW: Use a number larger than CHAR_MAX */    data = CHAR_MAX + 1;    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
data = CHAR_MAX + 1;
data = CHAR_MAX + 1
data
data
CHAR_MAX + 1
CHAR_MAX
CHAR_MAX
1
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(12,3,0)
(10,19,0)
(10,7,0)
(13,2,0)
(9,7,0)
(8,6,0)
(2,18,0)
(6,8,0)
(18,3,0)
(15,19,0)
(0,8,0)
(18,2,0)
(14,10,0)
(16,9,0)
(7,9,0)
(20,6,0)
(7,19,0)
(5,18,0)
(9,8,0)
(11,6,0)
(9,4,0)
(4,9,0)
(19,3,0)
(8,3,0)
(1,7,0)
(8,6,1)
(10,14,1)
(11,20,1)
(16,1,1)
(0,18,1)
(2,13,1)
(9,8,1)
(9,4,1)
(18,2,1)
(14,7,1)
(17,10,1)
(1,8,1)
(9,16,1)
(6,11,1)
(13,5,1)
(7,9,1)
(20,0,1)
(10,7,1)
(18,2,2)
(7,9,2)
(8,6,2)
(9,4,2)
(10,7,2)
(9,8,2)
-----------------------------------
(0,data)
(1,charData)
(2,-1)
(3,)
(4,char)
(5,data)
(6,CHAR_MAX + 1)
(7,charData = (char)
(8,data = CHAR_MAX + 1)
(9,(char)
(10,printHexCharLine(charData)
(11,1)
(12,data)
(13,1)
(14,charData)
(15,charData)
(16,data)
(17,RET)
(18,data = -1)
(19,)
(20,CHAR_MAX)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^