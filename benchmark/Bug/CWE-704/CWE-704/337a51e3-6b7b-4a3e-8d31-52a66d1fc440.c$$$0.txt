-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_03_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(5==5)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
27,32
27,33
28,29
29,30
29,31
31,32
31,33
33,34
35,36
36,37
36,38
38,39
38,40
38,41
40,41
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
63,65
64,65
64,66
65,66
68,69
68,70
69,70
70,71
70,72
70,73
70,74
71,72
73,74
75,76
77,78
79,80
80,81
80,82
81,82
81,83
82,83
84,85
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,30,32,34,37,39,41,43,47,49,50,52,53,58,60,61,62,66,67,72,74,76,78,83,85,86,90,92
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
80,81
80,82
-----guardedBy-----
66,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_strncpy_03_bad(){    short data;    /* Initialize data */    data = 0;    if(5==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_strncpy_03_bad()
CWE194_Unexpected_Sign_Extension__negative_strncpy_03_bad
{    short data;    /* Initialize data */    data = 0;    if(5==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* FLAW: Use a negative number */        data = -1;    }
5==5
5
5
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(18,23,0)
(33,0,0)
(5,23,0)
(15,22,0)
(19,14,0)
(3,46,0)
(24,30,0)
(23,36,0)
(9,22,0)
(30,40,0)
(40,35,0)
(44,5,0)
(35,23,0)
(15,14,0)
(46,23,0)
(34,42,0)
(46,0,0)
(6,40,0)
(8,7,0)
(13,22,0)
(2,29,0)
(31,36,0)
(47,21,0)
(16,7,0)
(28,23,0)
(14,37,0)
(0,23,0)
(42,0,0)
(32,0,0)
(22,36,0)
(5,29,0)
(45,42,0)
(12,5,0)
(17,36,0)
(1,15,0)
(14,11,0)
(9,14,0)
(10,9,0)
(9,0,0)
(42,14,0)
(42,21,0)
(38,47,0)
(43,29,0)
(42,22,0)
(27,15,0)
(25,42,0)
(48,22,0)
(20,30,0)
(29,5,0)
(39,35,0)
(37,14,0)
(9,47,0)
(41,23,0)
(26,9,0)
(4,37,0)
(40,30,0)
(9,0,1)
(9,10,1)
(2,44,1)
(39,40,1)
(43,2,1)
(15,14,1)
(49,46,1)
(5,29,1)
(26,42,1)
(9,14,1)
(46,3,1)
(27,1,1)
(22,13,1)
(44,12,1)
(8,22,1)
(4,19,1)
(42,25,1)
(32,33,1)
(33,14,1)
(35,39,1)
(15,22,1)
(15,27,1)
(47,38,1)
(30,20,1)
(0,32,1)
(19,7,1)
(6,5,1)
(34,15,1)
(13,48,1)
(7,16,1)
(1,35,1)
(10,26,1)
(33,7,1)
(37,4,1)
(16,8,1)
(24,6,1)
(25,45,1)
(29,43,1)
(38,9,1)
(42,14,1)
(12,0,1)
(40,30,1)
(42,22,1)
(3,47,1)
(3,15,1)
(20,24,1)
(14,37,1)
(9,22,1)
(46,0,1)
(45,34,1)
(42,0,1)
(34,15,2)
(42,0,2)
(15,14,2)
(9,0,2)
(37,7,2)
(15,22,2)
(47,15,2)
(25,15,2)
(14,37,2)
(46,0,2)
(9,15,2)
(26,15,2)
(38,15,2)
(40,30,2)
(10,15,2)
(4,7,2)
(5,29,2)
(14,7,2)
(9,14,2)
(42,15,2)
(19,7,2)
(42,22,2)
(42,14,2)
(45,15,2)
(9,22,2)
-----------------------------------
(0,dest[100] = "")
(1,data)
(2,100)
(3,dest)
(4,1)
(5,memset(source, \\\'A\\\', 100-1)
(6,source)
(7,5==5)
(8,5)
(9,dest[data])
(10,data)
(11,)
(12,source)
(13,0)
(14,data = -1)
(15,data < 100)
(16,5)
(17,data)
(18,dest)
(19,data)
(20,1)
(21,)
(22,data = 0)
(23,)
(24,100)
(25,data)
(26,dest)
(27,100)
(28,if (data < 100)
(29,100-1)
(30,100-1)
(31,if(5==5)
(32,"")
(33,dest)
(34,dest)
(35,source[100-1] = \\\'\\\\0\\\')
(36,)
(37,-1)
(38,\\\'\\\\0\\\')
(39,\\\'\\\\0\\\')
(40,source[100-1])
(41,source)
(42,strncpy(dest, source, data)
(43,1)
(44,\\\'A\\\')
(45,source)
(46,printLine(dest)
(47,dest[data] = \\\'\\\\0\\\')
(48,data)
(49,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^