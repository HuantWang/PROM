-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_memcpy_16_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    while(1)
    {
        /* FLAW: Use a negative number */
        data = -1;
        break;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
21,22
23,24
26,27
26,28
26,29
26,30
26,31
26,32
27,28
28,29
28,30
30,31
30,32
32,33
34,35
35,36
35,37
37,38
37,39
37,40
39,40
41,42
43,44
44,45
44,46
44,47
44,48
45,46
47,48
50,51
50,52
53,54
54,55
54,56
55,56
55,57
56,57
58,59
58,60
62,63
62,64
63,64
63,65
64,65
67,68
67,69
68,69
69,70
69,71
69,72
69,73
70,71
72,73
74,75
76,77
78,79
79,80
79,81
80,81
80,82
81,82
83,84
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,29,31,33,36,38,40,42,46,48,49,51,52,57,59,60,61,65,66,71,73,75,77,82,84,85,89,91
-----computeFrom-----
12,13
12,14
20,21
20,22
50,51
50,52
54,55
54,56
58,59
58,60
63,64
63,65
79,80
79,81
-----guardedBy-----
65,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_memcpy_16_bad(){    short data;    /* Initialize data */    data = 0;    while(1)    {        /* FLAW: Use a negative number */        data = -1;        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_memcpy_16_bad()
CWE194_Unexpected_Sign_Extension__negative_memcpy_16_bad
{    short data;    /* Initialize data */    data = 0;    while(1)    {        /* FLAW: Use a negative number */        data = -1;        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* FLAW: Use a negative number */        data = -1;        break;    }
1
{        /* FLAW: Use a negative number */        data = -1;        break;    }
data = -1;
data = -1
data
data
-1
1
break;
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(11,33,0)
(46,6,0)
(14,31,0)
(15,23,0)
(45,33,0)
(4,0,0)
(17,46,0)
(22,0,0)
(14,20,0)
(2,21,0)
(4,9,0)
(42,0,0)
(21,9,0)
(42,35,0)
(10,0,0)
(30,33,0)
(24,23,0)
(26,0,0)
(6,46,0)
(31,14,0)
(44,10,0)
(0,12,0)
(10,14,0)
(5,10,0)
(34,33,0)
(25,42,0)
(42,21,0)
(23,24,0)
(19,4,0)
(48,31,0)
(30,35,0)
(35,33,0)
(37,4,0)
(7,42,0)
(28,14,0)
(16,30,0)
(6,33,0)
(29,24,0)
(3,20,0)
(4,14,0)
(47,12,0)
(36,35,0)
(1,24,0)
(40,6,0)
(38,35,0)
(32,12,0)
(42,14,0)
(4,35,0)
(8,6,0)
(23,18,0)
(39,46,0)
(41,4,0)
(18,33,0)
(33,12,0)
(43,18,0)
(0,22,1)
(28,27,1)
(27,0,1)
(29,1,1)
(14,31,1)
(16,21,1)
(5,44,1)
(43,23,1)
(6,46,1)
(38,3,1)
(16,10,1)
(7,4,1)
(42,35,1)
(44,18,1)
(38,27,1)
(24,29,1)
(39,40,1)
(3,14,1)
(10,5,1)
(46,17,1)
(40,8,1)
(37,10,1)
(2,42,1)
(42,25,1)
(4,0,1)
(15,6,1)
(4,35,1)
(1,15,1)
(17,39,1)
(41,19,1)
(18,43,1)
(4,41,1)
(31,48,1)
(23,24,1)
(42,0,1)
(30,35,1)
(25,7,1)
(13,30,1)
(8,35,1)
(35,36,1)
(48,28,1)
(21,2,1)
(10,0,1)
(22,26,1)
(10,14,1)
(19,37,1)
(4,14,1)
(42,14,1)
(36,38,1)
(30,16,1)
(14,31,2)
(42,35,2)
(37,10,2)
(4,0,2)
(6,46,2)
(4,10,2)
(4,14,2)
(25,10,2)
(7,10,2)
(10,0,2)
(42,10,2)
(4,35,2)
(30,35,2)
(42,14,2)
(3,27,2)
(48,27,2)
(10,14,2)
(23,24,2)
(21,10,2)
(2,10,2)
(42,0,2)
(14,27,2)
(19,10,2)
(31,27,2)
(41,10,2)
(28,27,2)
-----------------------------------
(0,data = 0)
(1,100)
(2,\\\'\\\\0\\\')
(3,break;)
(4,memcpy(dest, source, data)
(5,100)
(6,memset(source, \\\'A\\\', 100-1)
(7,dest)
(8,source)
(9,)
(10,data < 100)
(11,source)
(12,)
(13,RET)
(14,data = -1)
(15,source)
(16,dest)
(17,1)
(18,source[100-1] = \\\'\\\\0\\\')
(19,source)
(20,)
(21,dest[data] = \\\'\\\\0\\\')
(22,0)
(23,source[100-1])
(24,100-1)
(25,data)
(26,data)
(27,1)
(28,data)
(29,1)
(30,printLine(dest)
(31,-1)
(32,while(1)
(33,)
(34,if (data < 100)
(35,dest[100] = "")
(36,"")
(37,dest)
(38,dest)
(39,100)
(40,\\\'A\\\')
(41,data)
(42,dest[data])
(43,\\\'\\\\0\\\')
(44,data)
(45,dest)
(46,100-1)
(47,data)
(48,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^