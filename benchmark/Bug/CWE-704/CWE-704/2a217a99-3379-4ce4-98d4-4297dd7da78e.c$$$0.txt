-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_11_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
32,35
32,36
32,37
32,38
33,34
34,35
34,36
36,37
36,38
38,39
40,41
41,42
41,43
43,44
43,45
43,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
59,60
60,61
60,62
61,62
61,63
62,63
64,65
64,66
68,69
68,70
69,70
69,71
70,71
73,74
73,75
74,75
75,76
75,77
75,78
75,79
76,77
78,79
80,81
82,83
84,85
85,86
85,87
86,87
86,88
87,88
89,90
92,93
93,94
93,95
94,95
96,97
-----nextToken-----
2,4,8,10,14,16,20,25,27,28,31,35,37,39,42,44,46,48,52,54,55,57,58,63,65,66,67,71,72,77,79,81,83,88,90,91,95,97
-----computeFrom-----
12,13
12,14
56,57
56,58
60,61
60,62
64,65
64,66
69,70
69,71
85,86
85,87
-----guardedBy-----
71,90
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_11_bad(){    int data;    /* Initialize data */    data = -1;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_11_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_11_bad
{    int data;    /* Initialize data */    data = -1;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(0,45,0)
(30,46,0)
(20,43,0)
(18,20,0)
(36,40,0)
(40,44,0)
(20,8,0)
(10,11,0)
(5,20,0)
(4,43,0)
(42,44,0)
(29,3,0)
(3,36,0)
(25,1,0)
(17,40,0)
(34,10,0)
(33,10,0)
(39,20,0)
(31,7,0)
(1,43,0)
(49,44,0)
(27,11,0)
(48,38,0)
(36,3,0)
(37,3,0)
(11,44,0)
(47,48,0)
(45,43,0)
(49,8,0)
(35,7,0)
(44,7,0)
(45,24,0)
(19,1,0)
(43,7,0)
(2,44,0)
(46,8,0)
(26,49,0)
(32,43,0)
(46,48,0)
(41,44,0)
(46,43,0)
(15,4,0)
(16,36,0)
(9,46,0)
(12,11,0)
(24,45,0)
(6,8,0)
(21,24,0)
(43,4,0)
(11,10,0)
(13,8,0)
(24,14,0)
(23,24,0)
(8,44,0)
(20,38,0)
(43,4,1)
(4,15,1)
(19,25,1)
(6,22,1)
(6,24,1)
(48,47,1)
(3,37,1)
(20,5,1)
(23,22,1)
(9,20,1)
(45,0,1)
(34,27,1)
(16,11,1)
(0,21,1)
(18,39,1)
(8,13,1)
(10,33,1)
(26,48,1)
(45,43,1)
(20,8,1)
(15,32,1)
(49,8,1)
(1,19,1)
(25,40,1)
(22,43,1)
(37,29,1)
(47,46,1)
(21,23,1)
(20,43,1)
(39,1,1)
(36,3,1)
(24,45,1)
(26,1,1)
(13,6,1)
(46,43,1)
(5,18,1)
(28,49,1)
(12,8,1)
(49,26,1)
(30,9,1)
(29,16,1)
(33,34,1)
(40,17,1)
(27,12,1)
(1,43,1)
(11,10,1)
(17,36,1)
(46,8,1)
(46,30,1)
(46,1,2)
(20,8,2)
(1,43,2)
(5,1,2)
(23,22,2)
(20,1,2)
(45,43,2)
(46,43,2)
(39,1,2)
(48,1,2)
(43,4,2)
(45,22,2)
(24,22,2)
(21,22,2)
(20,43,2)
(18,1,2)
(9,1,2)
(0,22,2)
(36,3,2)
(49,8,2)
(30,1,2)
(46,8,2)
(11,10,2)
(24,45,2)
(47,1,2)
-----------------------------------
(0,data)
(1,data < 100)
(2,if (data < 100)
(3,100-1)
(4,-1)
(5,data)
(6,dest)
(7,)
(8,dest[100] = "")
(9,dest)
(10,100-1)
(11,memset(source, \\\'A\\\', 100-1)
(12,source)
(13,"")
(14,)
(15,1)
(16,source)
(17,\\\'\\\\0\\\')
(18,source)
(19,100)
(20,strncpy(dest, source, data)
(21,"%d")
(22,globalReturnsTrue()
(23,stdin)
(24,fscanf(stdin, "%d", &data)
(25,data)
(26,dest)
(27,\\\'A\\\')
(28,RET)
(29,100)
(30,data)
(31,data)
(32,data)
(33,1)
(34,100)
(35,if(globalReturnsTrue()
(36,source[100-1])
(37,1)
(38,)
(39,dest)
(40,source[100-1] = \\\'\\\\0\\\')
(41,source)
(42,dest)
(43,data = -1)
(44,)
(45,&data)
(46,dest[data])
(47,\\\'\\\\0\\\')
(48,dest[data] = \\\'\\\\0\\\')
(49,printLine(dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^