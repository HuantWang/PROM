-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_06_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
27,28
28,29
30,31
30,32
30,33
30,34
30,35
30,36
31,32
32,33
32,34
34,35
34,36
36,37
38,39
39,40
39,41
41,42
41,43
41,44
43,44
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
66,68
67,68
67,69
68,69
71,72
71,73
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,14,16,20,21,26,29,33,35,37,40,42,44,46,50,52,53,55,56,61,63,64,65,69,70,75,77,79,81,86,88,89,93,95
-----computeFrom-----
12,13
12,14
18,19
18,20
24,25
24,26
54,55
54,56
58,59
58,60
62,63
62,64
67,68
67,69
83,84
83,85
-----guardedBy-----
69,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_06_bad(){    int data;    /* Initialize data */    data = -1;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_06_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_06_bad
{    int data;    /* Initialize data */    data = -1;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(38,4,0)
(33,34,0)
(41,33,0)
(19,16,0)
(7,10,0)
(14,5,0)
(46,5,0)
(43,22,0)
(34,2,0)
(0,4,0)
(29,20,0)
(9,34,0)
(16,34,0)
(27,4,0)
(10,46,0)
(24,20,0)
(37,20,0)
(33,24,0)
(1,46,0)
(34,11,0)
(11,34,0)
(17,16,0)
(10,34,0)
(13,24,0)
(35,6,0)
(26,13,0)
(4,20,0)
(21,31,0)
(3,31,0)
(47,32,0)
(4,0,0)
(36,47,0)
(6,37,0)
(40,20,0)
(39,8,0)
(15,20,0)
(25,24,0)
(16,24,0)
(44,33,0)
(20,8,0)
(46,8,0)
(28,0,0)
(13,20,0)
(23,10,0)
(16,46,0)
(12,0,0)
(48,24,0)
(33,46,0)
(16,32,0)
(31,6,0)
(5,46,0)
(6,31,0)
(45,16,0)
(42,22,0)
(18,8,0)
(33,47,0)
(30,37,0)
(16,46,1)
(17,19,1)
(33,41,1)
(35,4,1)
(33,46,1)
(23,37,1)
(47,36,1)
(9,22,1)
(33,34,1)
(30,6,1)
(14,1,1)
(43,46,1)
(45,10,1)
(5,14,1)
(25,48,1)
(22,42,1)
(31,21,1)
(10,46,1)
(16,17,1)
(36,33,1)
(16,34,1)
(38,24,1)
(48,22,1)
(44,16,1)
(13,26,1)
(10,34,1)
(0,28,1)
(3,35,1)
(4,0,1)
(28,12,1)
(10,7,1)
(34,11,1)
(24,25,1)
(13,24,1)
(46,5,1)
(12,27,1)
(7,23,1)
(48,34,1)
(49,13,1)
(27,38,1)
(21,3,1)
(26,10,1)
(6,31,1)
(37,30,1)
(42,43,1)
(16,24,1)
(26,47,1)
(11,9,1)
(33,24,1)
(19,45,1)
(41,44,1)
(17,10,2)
(16,10,2)
(4,0,2)
(10,46,2)
(44,10,2)
(11,22,2)
(45,10,2)
(9,22,2)
(33,24,2)
(13,24,2)
(33,46,2)
(47,10,2)
(34,11,2)
(34,22,2)
(10,34,2)
(16,24,2)
(41,10,2)
(46,5,2)
(36,10,2)
(19,10,2)
(16,34,2)
(33,34,2)
(33,10,2)
(16,46,2)
(6,31,2)
-----------------------------------
(0,100-1)
(1,data)
(2,)
(3,100)
(4,memset(source, \\\'A\\\', 100-1)
(5,-1)
(6,source[100-1])
(7,100)
(8,)
(9,data)
(10,data < 100)
(11,RAND32()
(12,100)
(13,printLine(dest)
(14,1)
(15,if (data < 100)
(16,memcpy(dest, source, data)
(17,data)
(18,data)
(19,source)
(20,)
(21,1)
(22,STATIC_CONST_FIVE==5)
(23,data)
(24,dest[100] = "")
(25,"")
(26,dest)
(27,\\\'A\\\')
(28,1)
(29,source)
(30,\\\'\\\\0\\\')
(31,100-1)
(32,)
(33,dest[data])
(34,data = RAND32()
(35,source)
(36,\\\'\\\\0\\\')
(37,source[100-1] = \\\'\\\\0\\\')
(38,source)
(39,if(STATIC_CONST_FIVE==5)
(40,dest)
(41,data)
(42,5)
(43,STATIC_CONST_FIVE)
(44,dest)
(45,dest)
(46,data = -1)
(47,dest[data] = \\\'\\\\0\\\')
(48,dest)
(49,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^