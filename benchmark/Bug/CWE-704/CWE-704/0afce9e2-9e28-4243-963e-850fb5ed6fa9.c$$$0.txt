-----label-----
1
-----code-----
static void badSink()
{
    short data = CWE194_Unexpected_Sign_Extension__negative_memcpy_45_badData;
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
14,17
14,18
14,19
14,20
15,16
16,17
16,18
18,19
18,20
20,21
22,23
23,24
23,25
25,26
25,27
25,28
27,28
29,30
31,32
32,33
32,34
32,35
32,36
33,34
35,36
38,39
38,40
41,42
42,43
42,44
43,44
43,45
44,45
46,47
46,48
50,51
50,52
51,52
51,53
52,53
55,56
55,57
56,57
57,58
57,59
57,60
57,61
58,59
60,61
62,63
64,65
66,67
67,68
67,69
68,69
68,70
69,70
71,72
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,8,10,13,17,19,21,24,26,28,30,34,36,37,39,40,45,47,48,49,53,54,59,61,63,65,70,72,73,77,79
-----computeFrom-----
38,39
38,40
42,43
42,44
46,47
46,48
51,52
51,53
67,68
67,69
-----guardedBy-----
53,72
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    short data = CWE194_Unexpected_Sign_Extension__negative_memcpy_45_badData;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
static void
badSink()
badSink
{    short data = CWE194_Unexpected_Sign_Extension__negative_memcpy_45_badData;    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data = CWE194_Unexpected_Sign_Extension__negative_memcpy_45_badData;
short data = CWE194_Unexpected_Sign_Extension__negative_memcpy_45_badData;
short
data = CWE194_Unexpected_Sign_Extension__negative_memcpy_45_badData
data
= CWE194_Unexpected_Sign_Extension__negative_memcpy_45_badData
CWE194_Unexpected_Sign_Extension__negative_memcpy_45_badData
CWE194_Unexpected_Sign_Extension__negative_memcpy_45_badData
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(0,25,0)
(35,1,0)
(26,0,0)
(38,32,0)
(24,4,0)
(25,29,0)
(21,6,0)
(19,25,0)
(14,2,0)
(31,29,0)
(8,34,0)
(10,25,0)
(3,2,0)
(33,2,0)
(40,5,0)
(1,5,0)
(7,32,0)
(6,39,0)
(32,39,0)
(4,36,0)
(28,0,0)
(1,25,0)
(36,4,0)
(11,32,0)
(30,5,0)
(20,14,0)
(18,1,0)
(23,3,0)
(32,0,0)
(32,2,0)
(3,0,0)
(15,25,0)
(34,25,0)
(5,1,0)
(3,6,0)
(4,34,0)
(27,36,0)
(2,29,0)
(37,2,0)
(9,3,0)
(22,26,0)
(12,36,0)
(16,0,0)
(26,25,0)
(13,14,0)
(22,6,1)
(40,18,1)
(23,9,1)
(18,35,1)
(38,7,1)
(6,21,1)
(4,36,1)
(36,12,1)
(9,32,1)
(3,0,1)
(37,33,1)
(35,0,1)
(26,22,1)
(14,20,1)
(13,34,1)
(2,37,1)
(27,24,1)
(20,13,1)
(3,2,1)
(22,14,1)
(32,38,1)
(30,40,1)
(21,3,1)
(8,4,1)
(32,0,1)
(11,14,1)
(7,11,1)
(0,16,1)
(3,23,1)
(28,2,1)
(24,1,1)
(17,26,1)
(5,30,1)
(32,2,1)
(12,27,1)
(1,5,1)
(26,0,1)
(34,8,1)
(16,28,1)
(14,2,1)
(32,2,2)
(23,14,2)
(38,14,2)
(3,14,2)
(32,14,2)
(4,36,2)
(7,14,2)
(3,2,2)
(9,14,2)
(14,2,2)
(1,5,2)
(26,0,2)
(32,0,2)
(6,14,2)
(11,14,2)
(3,0,2)
(21,14,2)
-----------------------------------
(0,dest[100] = "")
(1,memset(source, \\\'A\\\', 100-1)
(2,data = CWE194_Unexpected_Sign_Extension__negative_memcpy_45_badData)
(3,dest[data])
(4,source[100-1])
(5,100-1)
(6,dest[data] = \\\'\\\\0\\\')
(7,source)
(8,\\\'\\\\0\\\')
(9,dest)
(10,dest)
(11,dest)
(12,1)
(13,data)
(14,data < 100)
(15,if (data < 100)
(16,"")
(17,RET)
(18,\\\'A\\\')
(19,source)
(20,100)
(21,\\\'\\\\0\\\')
(22,dest)
(23,data)
(24,source)
(25,)
(26,printLine(dest)
(27,100)
(28,dest)
(29,)
(30,1)
(31,data)
(32,memcpy(dest, source, data)
(33,data)
(34,source[100-1] = \\\'\\\\0\\\')
(35,source)
(36,100-1)
(37,CWE194_Unexpected_Sign_Extension__negative_memcpy_45_badData)
(38,data)
(39,)
(40,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^