-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_10_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalTrue)
    {
        {
            char inputBuffer[CHAR_ARRAY_SIZE] = "";
            /* POTENTIAL FLAW: Read data from the console using fgets() */
            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
            {
                /* Convert to int */
                data = atoi(inputBuffer);
            }
            else
            {
                printLine("fgets() failed.");
            }
        }
    }
    {
        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
        short shortData = (short)data;
        printShortLine(shortData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
21,23
22,23
23,24
23,25
25,26
25,27
25,28
27,28
28,29
30,31
32,33
32,34
32,35
33,34
33,35
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
53,54
55,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
63,64
63,65
65,66
65,67
67,68
68,69
68,70
69,70
69,71
72,73
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,8,10,14,16,19,24,26,29,31,36,38,40,42,44,49,52,54,59,60,64,66,70,71,73,77,79
-----computeFrom-----
12,13
12,14
33,34
33,35
47,48
47,49
-----guardedBy-----
38,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_short_10_bad(){    int data;    /* Initialize data */    data = -1;    if(globalTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_short_10_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_short_10_bad
{    int data;    /* Initialize data */    data = -1;    if(globalTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(globalTrue)    {        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
globalTrue
globalTrue
{        {            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }    }
{            char inputBuffer[CHAR_ARRAY_SIZE] = "";            /* POTENTIAL FLAW: Read data from the console using fgets() */            if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }        }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)            {                /* Convert to int */                data = atoi(inputBuffer);            }            else            {                printLine("fgets() failed.");            }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{                /* Convert to int */                data = atoi(inputBuffer);            }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{                printLine("fgets() failed.");            }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(18,11,0)
(35,9,0)
(31,11,0)
(13,11,0)
(37,22,0)
(26,22,0)
(14,22,0)
(1,29,0)
(7,23,0)
(35,13,0)
(38,9,0)
(23,24,0)
(9,25,0)
(22,37,0)
(27,19,0)
(34,1,0)
(28,35,0)
(23,31,0)
(13,2,0)
(17,11,0)
(22,1,0)
(9,34,0)
(24,31,0)
(16,2,0)
(0,35,0)
(32,31,0)
(19,15,0)
(35,24,0)
(4,29,0)
(20,1,0)
(3,13,0)
(5,29,0)
(2,13,0)
(29,6,0)
(21,34,0)
(33,22,0)
(34,9,0)
(35,0,0)
(8,24,0)
(24,35,0)
(36,37,0)
(30,1,0)
(22,1,1)
(19,27,1)
(13,2,1)
(1,20,1)
(38,37,1)
(35,28,1)
(27,37,1)
(8,12,1)
(34,21,1)
(14,26,1)
(20,30,1)
(36,22,1)
(28,8,1)
(37,22,1)
(23,24,1)
(21,38,1)
(26,33,1)
(8,9,1)
(10,23,1)
(8,19,1)
(2,16,1)
(33,1,1)
(22,14,1)
(35,0,1)
(9,34,1)
(34,1,1)
(35,13,1)
(12,13,1)
(37,36,1)
(7,24,1)
(35,9,1)
(23,7,1)
(30,12,1)
(24,35,1)
(16,3,1)
(35,13,2)
(20,12,2)
(21,37,2)
(38,37,2)
(35,9,2)
(24,35,2)
(19,37,2)
(9,34,2)
(34,37,2)
(23,24,2)
(26,12,2)
(37,22,2)
(34,1,2)
(1,12,2)
(37,12,2)
(14,12,2)
(33,12,2)
(35,0,2)
(22,12,2)
(36,12,2)
(13,2,2)
(27,37,2)
(22,1,2)
(30,12,2)
(9,37,2)
-----------------------------------
(0,short)
(1,inputBuffer[CHAR_ARRAY_SIZE] = "")
(2,-1)
(3,data)
(4,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(5,inputBuffer)
(6,)
(7,shortData)
(8,shortData)
(9,data = atoi(inputBuffer)
(10,RET)
(11,)
(12,globalTrue)
(13,data = -1)
(14,stdin)
(15,)
(16,1)
(17,if(globalTrue)
(18,data)
(19,printLine("fgets()
(20,"")
(21,inputBuffer)
(22,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(23,printShortLine(shortData)
(24,shortData = (short)
(25,)
(26,CHAR_ARRAY_SIZE)
(27,"fgets()
(28,data)
(29,)
(30,inputBuffer)
(31,)
(32,shortData)
(33,inputBuffer)
(34,atoi(inputBuffer)
(35,(short)
(36,NULL)
(37,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(38,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^