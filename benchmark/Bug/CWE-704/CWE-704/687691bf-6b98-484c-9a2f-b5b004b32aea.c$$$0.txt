-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fgets_strncpy_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    int * dataPtr = (int *)dataVoidPtr;
    /* dereference dataPtr into data */
    int data = (*dataPtr);
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
35,37
35,38
35,39
35,40
35,41
36,37
37,38
37,39
39,40
39,41
41,42
43,44
44,45
44,46
46,47
46,48
46,49
48,49
50,51
52,53
53,54
53,55
53,56
53,57
54,55
56,57
59,60
59,61
62,63
63,64
63,65
64,65
64,66
65,66
67,68
67,69
71,72
71,73
72,73
72,74
73,74
76,77
76,78
77,78
78,79
78,80
78,81
78,82
79,80
81,82
83,84
85,86
87,88
88,89
88,90
89,90
89,91
90,91
92,93
95,96
96,97
96,98
97,98
99,100
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,38,40,42,45,47,49,51,55,57,58,60,61,66,68,69,70,74,75,80,82,84,86,91,93,94,98,100
-----computeFrom-----
59,60
59,61
63,64
63,65
67,68
67,69
72,73
72,74
88,89
88,90
-----guardedBy-----
74,93
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fgets_strncpy_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_strncpy_64b_badSink(void * dataVoidPtr)
CWE195_Signed_to_Unsigned_Conversion_Error__fgets_strncpy_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int * dataPtr = (int *)dataVoidPtr;
int * dataPtr = (int *)dataVoidPtr;
int
* dataPtr = (int *)dataVoidPtr
*
dataPtr
= (int *)dataVoidPtr
(int *)dataVoidPtr
int *
int
*
*
dataVoidPtr
dataVoidPtr
int data = (*dataPtr);
int data = (*dataPtr);
int
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(41,44,0)
(31,26,0)
(26,5,0)
(30,42,0)
(21,1,0)
(22,42,0)
(47,26,0)
(45,17,0)
(6,4,0)
(18,35,0)
(38,14,0)
(1,15,0)
(43,28,0)
(36,14,0)
(26,42,0)
(29,21,0)
(27,24,0)
(25,4,0)
(32,1,0)
(3,36,0)
(24,6,0)
(48,17,0)
(26,6,0)
(1,19,0)
(35,44,0)
(39,41,0)
(6,29,0)
(46,17,0)
(9,6,0)
(1,21,0)
(17,46,0)
(12,36,0)
(8,5,0)
(20,46,0)
(35,42,0)
(21,4,0)
(34,44,0)
(24,42,0)
(23,28,0)
(10,44,0)
(13,4,0)
(15,1,0)
(14,36,0)
(7,8,0)
(37,44,0)
(11,29,0)
(44,4,0)
(28,6,0)
(14,41,0)
(46,44,0)
(42,44,0)
(0,46,0)
(16,21,0)
(33,26,0)
(24,8,0)
(29,6,0)
(2,24,0)
(36,12,1)
(46,17,1)
(26,47,1)
(42,30,1)
(28,43,1)
(20,0,1)
(26,42,1)
(22,6,1)
(18,28,1)
(11,9,1)
(1,32,1)
(6,29,1)
(31,33,1)
(18,8,1)
(12,3,1)
(40,35,1)
(35,42,1)
(24,27,1)
(33,28,1)
(9,21,1)
(1,19,1)
(1,15,1)
(32,16,1)
(17,45,1)
(8,7,1)
(29,21,1)
(38,46,1)
(21,1,1)
(45,48,1)
(24,6,1)
(14,36,1)
(7,24,1)
(3,38,1)
(24,42,1)
(27,2,1)
(0,42,1)
(2,26,1)
(39,14,1)
(26,6,1)
(35,18,1)
(47,31,1)
(43,23,1)
(29,11,1)
(30,22,1)
(48,20,1)
(41,39,1)
(28,6,1)
(23,41,1)
(7,28,2)
(14,36,2)
(46,17,2)
(33,28,2)
(26,6,2)
(24,28,2)
(35,42,2)
(24,6,2)
(26,28,2)
(31,28,2)
(8,28,2)
(21,1,2)
(1,19,2)
(28,6,2)
(6,29,2)
(29,21,2)
(26,42,2)
(1,15,2)
(24,42,2)
(2,28,2)
(47,28,2)
(27,28,2)
-----------------------------------
(0,source)
(1,(int *)
(2,dest)
(3,100)
(4,)
(5,)
(6,data = (*dataPtr)
(7,\\\'\\\\0\\\')
(8,dest[data] = \\\'\\\\0\\\')
(9,data)
(10,if (data < 100)
(11,dataPtr)
(12,1)
(13,dataPtr)
(14,source[100-1])
(15,int *)
(16,dataPtr)
(17,100-1)
(18,dest)
(19,void * dataVoidPtr)
(20,\\\'A\\\')
(21,* dataPtr = (int *)
(22,dest)
(23,data)
(24,dest[data])
(25,data)
(26,strncpy(dest, source, data)
(27,data)
(28,data < 100)
(29,*dataPtr)
(30,"")
(31,source)
(32,dataVoidPtr)
(33,dest)
(34,dest)
(35,printLine(dest)
(36,100-1)
(37,source)
(38,source)
(39,\\\'\\\\0\\\')
(40,RET)
(41,source[100-1] = \\\'\\\\0\\\')
(42,dest[100] = "")
(43,100)
(44,)
(45,1)
(46,memset(source, \\\'A\\\', 100-1)
(47,data)
(48,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^