-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_connect_socket_66b_badSink(short dataArray[])
{
    /* copy data out of dataArray */
    short data = dataArray[2];
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
22,23
23,24
23,25
25,26
25,27
27,28
28,29
28,30
29,30
29,31
32,33
34,35
35,36
35,37
36,37
38,39
-----nextToken-----
2,4,6,8,9,13,15,19,20,24,26,30,31,33,37,39
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_connect_socket_66b_badSink(short dataArray[]){    /* copy data out of dataArray */    short data = dataArray[2];    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_connect_socket_66b_badSink(short dataArray[])
CWE197_Numeric_Truncation_Error__short_connect_socket_66b_badSink
short dataArray[]
short
dataArray[]
dataArray
[]
{    /* copy data out of dataArray */    short data = dataArray[2];    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data = dataArray[2];
short data = dataArray[2];
short
data = dataArray[2]
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(0,4,0)
(10,6,0)
(7,15,0)
(6,10,0)
(14,0,0)
(4,17,0)
(11,4,0)
(8,17,0)
(10,16,0)
(3,6,0)
(6,12,0)
(7,10,0)
(15,7,0)
(5,10,0)
(4,7,0)
(13,7,0)
(2,6,0)
(17,16,0)
(7,4,0)
(0,17,0)
(9,16,0)
(7,13,1)
(14,4,1)
(0,14,1)
(13,11,1)
(4,7,1)
(3,5,1)
(2,3,1)
(0,4,1)
(7,15,1)
(6,12,1)
(7,10,1)
(10,6,1)
(1,0,1)
(6,2,1)
(11,10,1)
(10,6,2)
(6,12,2)
(0,4,2)
(4,7,2)
(7,10,2)
(7,15,2)
-----------------------------------
(0,printHexCharLine(charData)
(1,RET)
(2,2)
(3,dataArray)
(4,charData = (char)
(5,data)
(6,dataArray[2])
(7,(char)
(8,charData)
(9,data)
(10,data = dataArray[2])
(11,charData)
(12,short dataArray[])
(13,data)
(14,charData)
(15,char)
(16,)
(17,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^