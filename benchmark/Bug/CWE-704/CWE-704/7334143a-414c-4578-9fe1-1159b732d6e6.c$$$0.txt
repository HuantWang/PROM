-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_large_34_bad()
{
    short data;
    CWE197_Numeric_Truncation_Error__short_large_34_unionType myUnion;
    /* Initialize data */
    data = -1;
    /* FLAW: Use a number larger than CHAR_MAX */
    data = CHAR_MAX + 1;
    myUnion.unionFirst = data;
    {
        short data = myUnion.unionSecond;
        {
            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
            char charData = (char)data;
            printHexCharLine(charData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
23,24
24,25
24,26
25,26
27,28
27,29
28,29
31,32
32,33
32,34
33,34
33,35
34,35
37,38
39,40
39,41
40,41
41,42
41,43
43,44
43,45
45,46
46,47
46,48
47,48
50,51
50,52
51,52
52,53
52,54
54,55
54,56
56,57
57,58
57,59
58,59
58,60
61,62
63,64
64,65
64,66
65,66
67,68
-----nextToken-----
2,4,8,10,14,16,20,22,26,29,30,35,36,38,42,44,48,49,53,55,59,60,62,66,68
-----computeFrom-----
18,19
18,20
24,25
24,26
27,28
27,29
32,33
32,34
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_large_34_bad(){    short data;    CWE197_Numeric_Truncation_Error__short_large_34_unionType myUnion;    /* Initialize data */    data = -1;    /* FLAW: Use a number larger than CHAR_MAX */    data = CHAR_MAX + 1;    myUnion.unionFirst = data;    {        short data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
void
CWE197_Numeric_Truncation_Error__short_large_34_bad()
CWE197_Numeric_Truncation_Error__short_large_34_bad
{    short data;    CWE197_Numeric_Truncation_Error__short_large_34_unionType myUnion;    /* Initialize data */    data = -1;    /* FLAW: Use a number larger than CHAR_MAX */    data = CHAR_MAX + 1;    myUnion.unionFirst = data;    {        short data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
short data;
short data;
short
data
data
CWE197_Numeric_Truncation_Error__short_large_34_unionType myUnion;
CWE197_Numeric_Truncation_Error__short_large_34_unionType myUnion;
CWE197_Numeric_Truncation_Error__short_large_34_unionType
CWE197_Numeric_Truncation_Error__short_large_34_unionType
myUnion
myUnion
data = -1;
data = -1
data
data
-1
1
data = CHAR_MAX + 1;
data = CHAR_MAX + 1
data
data
CHAR_MAX + 1
CHAR_MAX
CHAR_MAX
1
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        short data = myUnion.unionSecond;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }
short data = myUnion.unionSecond;
short data = myUnion.unionSecond;
short
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(14,29,0)
(28,8,0)
(33,32,0)
(13,28,0)
(25,17,0)
(15,0,0)
(6,8,0)
(24,4,0)
(16,10,0)
(12,32,0)
(26,17,0)
(26,31,0)
(4,21,0)
(32,26,0)
(31,26,0)
(22,14,0)
(8,0,0)
(2,28,0)
(8,19,0)
(29,17,0)
(5,31,0)
(21,4,0)
(14,18,0)
(23,21,0)
(19,10,0)
(27,19,0)
(30,29,0)
(7,31,0)
(20,0,0)
(19,0,0)
(3,18,0)
(32,33,0)
(17,0,0)
(11,26,0)
(9,10,0)
(18,29,0)
(10,19,0)
(18,32,0)
(4,0,0)
(32,18,0)
(16,9,1)
(26,31,1)
(10,16,1)
(3,26,1)
(32,33,1)
(5,11,1)
(14,22,1)
(32,12,1)
(13,19,1)
(18,32,1)
(21,23,1)
(28,2,1)
(23,24,1)
(1,14,1)
(2,13,1)
(4,21,1)
(12,3,1)
(14,18,1)
(9,27,1)
(19,10,1)
(11,8,1)
(8,19,1)
(27,4,1)
(31,7,1)
(6,28,1)
(8,6,1)
(32,26,1)
(22,18,1)
(7,5,1)
(8,19,2)
(32,33,2)
(19,10,2)
(18,32,2)
(32,26,2)
(26,31,2)
(14,18,2)
(4,21,2)
-----------------------------------
(0,)
(1,RET)
(2,unionFirst)
(3,charData)
(4,data = -1)
(5,myUnion)
(6,data)
(7,unionSecond)
(8,myUnion.unionFirst = data)
(9,CHAR_MAX)
(10,CHAR_MAX + 1)
(11,data)
(12,data)
(13,myUnion)
(14,printHexCharLine(charData)
(15,data)
(16,1)
(17,)
(18,charData = (char)
(19,data = CHAR_MAX + 1)
(20,myUnion)
(21,-1)
(22,charData)
(23,1)
(24,data)
(25,data)
(26,data = myUnion.unionSecond)
(27,data)
(28,myUnion.unionFirst)
(29,)
(30,charData)
(31,myUnion.unionSecond)
(32,(char)
(33,char)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^