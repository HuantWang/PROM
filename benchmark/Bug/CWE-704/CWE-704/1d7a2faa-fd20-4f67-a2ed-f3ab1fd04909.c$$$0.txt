-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_07_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
24,27
24,28
25,26
27,28
30,31
31,32
33,34
33,35
33,36
33,37
33,38
33,39
34,35
35,36
35,37
37,38
37,39
39,40
41,42
42,43
42,44
44,45
44,46
44,47
46,47
48,49
50,51
51,52
51,53
51,54
51,55
52,53
54,55
57,58
57,59
60,61
61,62
61,63
62,63
62,64
63,64
65,66
65,67
69,70
69,71
70,71
70,72
71,72
74,75
74,76
75,76
76,77
76,78
76,79
76,80
77,78
79,80
81,82
83,84
85,86
86,87
86,88
87,88
87,89
88,89
90,91
93,94
94,95
94,96
95,96
97,98
-----nextToken-----
2,4,8,10,14,16,20,21,26,28,29,32,36,38,40,43,45,47,49,53,55,56,58,59,64,66,67,68,72,73,78,80,82,84,89,91,92,96,98
-----computeFrom-----
12,13
12,14
18,19
18,20
57,58
57,59
61,62
61,63
65,66
65,67
70,71
70,72
86,87
86,88
-----guardedBy-----
72,91
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_07_bad(){    int data;    /* Initialize data */    data = -1;    if(staticFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_07_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_strncpy_07_bad
{    int data;    /* Initialize data */    data = -1;    if(staticFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(staticFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(47,3,0)
(16,7,0)
(45,42,0)
(46,37,0)
(36,27,0)
(6,12,0)
(29,44,0)
(3,40,0)
(48,8,0)
(10,8,0)
(35,30,0)
(41,12,0)
(9,15,0)
(3,34,0)
(5,27,0)
(42,30,0)
(49,17,0)
(2,44,0)
(10,1,0)
(3,49,0)
(44,29,0)
(8,10,0)
(27,17,0)
(26,37,0)
(11,10,0)
(4,29,0)
(50,6,0)
(19,10,0)
(51,6,0)
(38,6,0)
(39,28,0)
(25,40,0)
(7,6,0)
(22,12,0)
(31,27,0)
(24,42,0)
(8,40,0)
(34,6,0)
(32,44,0)
(21,34,0)
(27,34,0)
(0,40,0)
(20,34,0)
(28,34,0)
(30,6,0)
(14,3,0)
(33,30,0)
(13,15,0)
(30,42,0)
(15,40,0)
(27,40,0)
(29,7,0)
(40,25,0)
(40,12,0)
(18,49,0)
(28,6,0)
(43,25,0)
(9,13,1)
(46,26,1)
(35,33,1)
(14,47,1)
(24,35,1)
(40,25,1)
(15,9,1)
(48,11,1)
(42,45,1)
(3,40,1)
(25,43,1)
(47,27,1)
(44,2,1)
(39,49,1)
(27,40,1)
(19,37,1)
(3,34,1)
(31,5,1)
(18,3,1)
(28,39,1)
(33,34,1)
(20,10,1)
(2,32,1)
(8,40,1)
(27,34,1)
(8,48,1)
(16,29,1)
(7,16,1)
(49,18,1)
(4,30,1)
(21,20,1)
(10,8,1)
(36,31,1)
(3,14,1)
(23,28,1)
(27,36,1)
(43,0,1)
(15,40,1)
(26,40,1)
(39,15,1)
(13,7,1)
(32,4,1)
(11,19,1)
(34,21,1)
(29,44,1)
(28,34,1)
(45,24,1)
(30,42,1)
(20,37,1)
(37,46,1)
(5,15,1)
(19,37,2)
(49,15,2)
(5,15,2)
(3,34,2)
(40,25,2)
(15,40,2)
(18,15,2)
(11,37,2)
(8,37,2)
(30,42,2)
(48,37,2)
(28,34,2)
(27,34,2)
(31,15,2)
(29,44,2)
(14,15,2)
(47,15,2)
(10,8,2)
(8,40,2)
(36,15,2)
(27,15,2)
(3,15,2)
(10,37,2)
(3,40,2)
(27,40,2)
-----------------------------------
(0,data)
(1,)
(2,1)
(3,dest[data])
(4,source)
(5,dest)
(6,)
(7,source[100-1] = \\\'\\\\0\\\')
(8,&data)
(9,100)
(10,fscanf(stdin, "%d", &data)
(11,"%d")
(12,)
(13,data)
(14,data)
(15,data < 100)
(16,\\\'\\\\0\\\')
(17,)
(18,\\\'\\\\0\\\')
(19,stdin)
(20,dest)
(21,"")
(22,data)
(23,RET)
(24,100)
(25,-1)
(26,staticFive)
(27,strncpy(dest, source, data)
(28,printLine(dest)
(29,source[100-1])
(30,memset(source, \\\'A\\\', 100-1)
(31,source)
(32,100)
(33,source)
(34,dest[100] = "")
(35,\\\'A\\\')
(36,data)
(37,staticFive==5)
(38,if (data < 100)
(39,dest)
(40,data = -1)
(41,if(staticFive==5)
(42,100-1)
(43,1)
(44,100-1)
(45,1)
(46,5)
(47,dest)
(48,data)
(49,dest[data] = \\\'\\\\0\\\')
(50,dest)
(51,source)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^