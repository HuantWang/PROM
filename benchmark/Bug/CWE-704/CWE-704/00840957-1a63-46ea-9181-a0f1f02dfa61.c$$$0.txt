-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__short_rand_08_bad()
{
    short data;
    /* Initialize data */
    data = -1;
    if(staticReturnsTrue())
    {
        /* FLAW: Use a random number */
        data = (short)RAND32();
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
34,35
35,36
35,37
37,38
37,39
39,40
40,41
40,42
41,42
41,43
44,45
46,47
47,48
47,49
48,49
50,51
-----nextToken-----
2,4,8,10,14,16,20,25,28,29,32,36,38,42,43,45,49,51
-----computeFrom-----
12,13
12,14
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__short_rand_08_bad(){    short data;    /* Initialize data */    data = -1;    if(staticReturnsTrue())    {        /* FLAW: Use a random number */        data = (short)RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__short_rand_08_bad()
CWE197_Numeric_Truncation_Error__short_rand_08_bad
{    short data;    /* Initialize data */    data = -1;    if(staticReturnsTrue())    {        /* FLAW: Use a random number */        data = (short)RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
short data;
short data;
short
data
data
data = -1;
data = -1
data
data
-1
1
if(staticReturnsTrue())    {        /* FLAW: Use a random number */        data = (short)RAND32();    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* FLAW: Use a random number */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(9,14,0)
(18,12,0)
(20,7,0)
(5,9,0)
(16,7,0)
(21,14,0)
(19,17,0)
(9,20,0)
(19,1,0)
(14,9,0)
(8,9,0)
(10,20,0)
(15,1,0)
(6,7,0)
(14,12,0)
(21,12,0)
(11,19,0)
(17,19,0)
(7,16,0)
(4,21,0)
(20,13,0)
(7,6,0)
(3,14,0)
(7,20,0)
(23,1,0)
(9,5,0)
(2,17,0)
(9,19,0)
(12,1,0)
(21,4,1)
(20,7,1)
(7,16,1)
(9,5,1)
(3,20,1)
(4,14,1)
(2,11,1)
(7,6,1)
(9,20,1)
(3,22,1)
(6,10,1)
(22,19,1)
(17,2,1)
(19,17,1)
(9,19,1)
(21,14,1)
(10,22,1)
(9,8,1)
(8,3,1)
(0,21,1)
(14,9,1)
(14,9,2)
(21,14,2)
(7,16,2)
(20,7,2)
(9,5,2)
(10,22,2)
(6,22,2)
(9,19,2)
(19,17,2)
(20,22,2)
(7,6,2)
(7,22,2)
(9,20,2)
-----------------------------------
(0,RET)
(1,)
(2,1)
(3,charData)
(4,charData)
(5,char)
(6,RAND32()
(7,(short)
(8,data)
(9,(char)
(10,data)
(11,data)
(12,)
(13,)
(14,charData = (char)
(15,data)
(16,short)
(17,-1)
(18,charData)
(19,data = -1)
(20,data = (short)
(21,printHexCharLine(charData)
(22,staticReturnsTrue()
(23,if(staticReturnsTrue()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^