-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_13_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
27,28
29,30
29,31
29,32
29,33
29,34
29,35
30,31
31,32
31,33
33,34
33,35
35,36
37,38
38,39
38,40
40,41
40,42
40,43
42,43
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
53,55
56,57
57,58
57,59
58,59
58,60
59,60
61,62
61,63
65,66
65,67
66,67
66,68
67,68
70,71
70,72
71,72
72,73
72,74
72,75
72,76
73,74
75,76
77,78
79,80
81,82
82,83
82,84
83,84
83,85
84,85
86,87
89,90
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,8,10,14,16,20,21,26,28,32,34,36,39,41,43,45,49,51,52,54,55,60,62,63,64,68,69,74,76,78,80,85,87,88,92,94
-----computeFrom-----
12,13
12,14
18,19
18,20
24,25
24,26
53,54
53,55
57,58
57,59
61,62
61,63
66,67
66,68
82,83
82,84
-----guardedBy-----
68,87
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_13_bad(){    int data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_13_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__negative_memcpy_13_bad
{    int data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Use a negative number */        data = -1;    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(30,42,0)
(42,32,0)
(26,3,0)
(20,36,0)
(17,42,0)
(21,12,0)
(37,35,0)
(2,44,0)
(36,16,0)
(14,42,0)
(31,35,0)
(36,31,0)
(18,47,0)
(28,44,0)
(22,18,0)
(10,49,0)
(9,30,0)
(36,47,0)
(40,18,0)
(31,32,0)
(3,30,0)
(11,16,0)
(6,39,0)
(19,42,0)
(24,19,0)
(34,31,0)
(25,30,0)
(36,19,0)
(44,31,0)
(49,8,0)
(43,12,0)
(16,5,0)
(44,47,0)
(8,17,0)
(1,13,0)
(39,47,0)
(48,42,0)
(35,31,0)
(46,42,0)
(27,8,0)
(38,19,0)
(0,36,0)
(18,5,0)
(4,32,0)
(18,31,0)
(47,39,0)
(18,19,0)
(23,18,0)
(15,17,0)
(30,3,0)
(13,19,0)
(41,49,0)
(33,47,0)
(50,3,0)
(29,32,0)
(13,42,0)
(8,49,0)
(47,45,0)
(36,19,1)
(17,15,1)
(9,25,1)
(13,1,1)
(26,50,1)
(25,19,1)
(47,39,1)
(43,21,1)
(19,24,1)
(27,30,1)
(38,47,1)
(16,11,1)
(44,31,1)
(30,3,1)
(18,22,1)
(31,35,1)
(6,33,1)
(11,36,1)
(18,31,1)
(22,23,1)
(33,12,1)
(12,43,1)
(49,41,1)
(44,47,1)
(28,2,1)
(8,49,1)
(0,20,1)
(24,38,1)
(20,18,1)
(41,10,1)
(18,47,1)
(13,19,1)
(39,6,1)
(36,47,1)
(10,27,1)
(37,34,1)
(7,13,1)
(15,8,1)
(36,31,1)
(44,28,1)
(3,26,1)
(38,12,1)
(35,37,1)
(18,19,1)
(36,0,1)
(1,44,1)
(21,31,1)
(2,17,1)
(50,9,1)
(23,40,1)
(40,44,1)
(1,16,1)
(18,31,2)
(44,31,2)
(39,12,2)
(18,44,2)
(31,35,2)
(36,44,2)
(33,12,2)
(36,19,2)
(20,44,2)
(30,3,2)
(44,47,2)
(47,12,2)
(36,31,2)
(40,44,2)
(13,19,2)
(36,47,2)
(18,47,2)
(16,44,2)
(18,19,2)
(11,44,2)
(22,44,2)
(8,49,2)
(0,44,2)
(47,39,2)
(6,12,2)
(23,44,2)
-----------------------------------
(0,data)
(1,dest)
(2,data)
(3,100-1)
(4,data)
(5,)
(6,1)
(7,RET)
(8,source[100-1])
(9,\\\'A\\\')
(10,100)
(11,\\\'\\\\0\\\')
(12,GLOBAL_CONST_FIVE==5)
(13,printLine(dest)
(14,dest)
(15,\\\'\\\\0\\\')
(16,dest[data] = \\\'\\\\0\\\')
(17,source[100-1] = \\\'\\\\0\\\')
(18,memcpy(dest, source, data)
(19,dest[100] = "")
(20,dest)
(21,GLOBAL_CONST_FIVE)
(22,data)
(23,source)
(24,"")
(25,source)
(26,1)
(27,source)
(28,100)
(29,if(GLOBAL_CONST_FIVE==5)
(30,memset(source, \\\'A\\\', 100-1)
(31,data = -1)
(32,)
(33,data)
(34,data)
(35,-1)
(36,dest[data])
(37,1)
(38,dest)
(39,-1)
(40,dest)
(41,1)
(42,)
(43,5)
(44,data < 100)
(45,)
(46,if (data < 100)
(47,data = -1)
(48,source)
(49,100-1)
(50,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^