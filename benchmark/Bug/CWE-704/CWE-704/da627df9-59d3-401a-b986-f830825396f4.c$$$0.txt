-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_09_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
26,27
28,29
28,30
28,31
28,32
28,33
28,34
29,30
30,31
30,32
32,33
32,34
34,35
36,37
37,38
37,39
39,40
39,41
39,42
41,42
43,44
45,46
46,47
46,48
46,49
46,50
47,48
49,50
52,53
52,54
55,56
56,57
56,58
57,58
57,59
58,59
60,61
60,62
64,65
64,66
65,66
65,67
66,67
69,70
69,71
70,71
71,72
71,73
71,74
71,75
72,73
74,75
76,77
78,79
80,81
81,82
81,83
82,83
82,84
83,84
85,86
88,89
89,90
89,91
90,91
92,93
-----nextToken-----
2,4,8,10,14,16,19,24,27,31,33,35,38,40,42,44,48,50,51,53,54,59,61,62,63,67,68,73,75,77,79,84,86,87,91,93
-----computeFrom-----
12,13
12,14
22,23
22,24
52,53
52,54
56,57
56,58
60,61
60,62
65,66
65,67
81,82
81,83
-----guardedBy-----
67,86
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_09_bad(){    int data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_09_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_09_bad
{    int data;    /* Initialize data */    data = -1;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(37,30,0)
(8,10,0)
(30,31,0)
(15,43,0)
(22,31,0)
(32,17,0)
(29,32,0)
(2,15,0)
(4,17,0)
(36,27,0)
(40,28,0)
(22,15,0)
(31,35,0)
(44,23,0)
(30,15,0)
(9,31,0)
(25,16,0)
(38,1,0)
(12,43,0)
(33,26,0)
(3,32,0)
(41,27,0)
(6,22,0)
(22,28,0)
(26,16,0)
(39,28,0)
(28,32,0)
(1,21,0)
(30,21,0)
(24,32,0)
(34,30,0)
(45,10,0)
(10,31,0)
(30,28,0)
(19,32,0)
(47,13,0)
(31,5,0)
(16,26,0)
(20,26,0)
(42,30,0)
(27,3,0)
(46,17,0)
(35,31,0)
(0,3,0)
(43,15,0)
(13,32,0)
(23,32,0)
(15,17,0)
(22,1,0)
(16,23,0)
(10,15,0)
(3,27,0)
(14,3,0)
(13,28,0)
(7,22,0)
(30,42,1)
(40,11,1)
(38,22,1)
(13,47,1)
(43,12,1)
(31,35,1)
(6,30,1)
(22,15,1)
(45,23,1)
(10,31,1)
(8,45,1)
(44,16,1)
(25,3,1)
(23,44,1)
(39,40,1)
(22,28,1)
(15,43,1)
(47,10,1)
(1,38,1)
(37,10,1)
(30,31,1)
(9,11,1)
(12,2,1)
(0,14,1)
(20,25,1)
(34,37,1)
(22,7,1)
(40,31,1)
(3,27,1)
(47,1,1)
(26,33,1)
(28,39,1)
(27,36,1)
(10,8,1)
(16,26,1)
(13,28,1)
(11,15,1)
(36,41,1)
(30,28,1)
(41,0,1)
(10,15,1)
(35,9,1)
(33,20,1)
(7,6,1)
(30,15,1)
(22,31,1)
(18,13,1)
(42,34,1)
(14,28,1)
(9,11,2)
(22,31,2)
(38,10,2)
(30,28,2)
(3,27,2)
(6,10,2)
(31,11,2)
(10,15,2)
(15,43,2)
(37,10,2)
(13,28,2)
(30,10,2)
(30,31,2)
(22,15,2)
(31,35,2)
(10,31,2)
(7,10,2)
(22,28,2)
(22,10,2)
(35,11,2)
(1,10,2)
(34,10,2)
(16,26,2)
(42,10,2)
(30,15,2)
-----------------------------------
(0,\\\'A\\\')
(1,dest[data] = \\\'\\\\0\\\')
(2,data)
(3,memset(source, \\\'A\\\', 100-1)
(4,if(GLOBAL_CONST_TRUE)
(5,)
(6,dest)
(7,data)
(8,100)
(9,data)
(10,data < 100)
(11,GLOBAL_CONST_TRUE)
(12,1)
(13,printLine(dest)
(14,source)
(15,data = -1)
(16,source[100-1])
(17,)
(18,RET)
(19,if (data < 100)
(20,100)
(21,)
(22,dest[data])
(23,source[100-1] = \\\'\\\\0\\\')
(24,source)
(25,source)
(26,100-1)
(27,100-1)
(28,dest[100] = "")
(29,dest)
(30,strncpy(dest, source, data)
(31,data = RAND32()
(32,)
(33,1)
(34,source)
(35,RAND32()
(36,1)
(37,dest)
(38,\\\'\\\\0\\\')
(39,"")
(40,dest)
(41,100)
(42,data)
(43,-1)
(44,\\\'\\\\0\\\')
(45,data)
(46,data)
(47,dest)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^