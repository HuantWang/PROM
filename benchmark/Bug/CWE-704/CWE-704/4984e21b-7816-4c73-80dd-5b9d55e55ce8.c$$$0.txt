-----label-----
1
-----code-----
static int badSource(int data)
{
    /* POTENTIAL FLAW: Set data to a random value */
    data = RAND32();
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
11,12
11,13
12,13
14,15
15,16
17,18
18,19
-----nextToken-----
2,4,6,8,13,16,19
-----computeFrom-----
11,12
11,13
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static int badSource(int data){    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    return data;}
static int
badSource(int data)
badSource
int data
int
data
data
{    /* POTENTIAL FLAW: Set data to a random value */    data = RAND32();    return data;}
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
return data;
data
data
-----joern-----
(5,0,0)
(1,5,0)
(4,0,0)
(6,4,0)
(3,4,0)
(4,5,0)
(5,7,0)
(4,7,0)
(5,2,0)
(2,5,0)
(5,2,1)
(6,4,1)
(3,5,1)
(4,0,1)
(4,3,1)
(5,0,1)
(2,1,1)
(4,5,1)
(4,0,2)
(5,0,2)
(5,2,2)
(4,5,2)
(6,4,2)
-----------------------------------
(0,int data)
(1,data)
(2,RAND32()
(3,data)
(4,return data;)
(5,data = RAND32()
(6,RET)
(7,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^