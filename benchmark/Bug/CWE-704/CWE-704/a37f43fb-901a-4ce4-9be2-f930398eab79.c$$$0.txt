-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_17_bad()
{
    int i;
    int data;
    /* Initialize data */
    data = -1;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
22,26
23,24
24,25
24,26
25,26
28,29
28,30
29,30
32,33
33,34
35,36
36,37
37,38
37,39
38,39
40,41
41,42
43,44
43,45
43,46
43,47
43,48
43,49
44,45
45,46
45,47
47,48
47,49
49,50
51,52
52,53
52,54
54,55
54,56
54,57
56,57
58,59
60,61
61,62
61,63
61,64
61,65
62,63
64,65
67,68
67,69
70,71
71,72
71,73
72,73
72,74
73,74
75,76
75,77
79,80
79,81
80,81
80,82
81,82
84,85
84,86
85,86
86,87
86,88
86,89
86,90
87,88
89,90
91,92
93,94
95,96
96,97
96,98
97,98
97,99
98,99
100,101
103,104
104,105
104,106
105,106
107,108
-----nextToken-----
2,4,8,10,13,15,19,21,26,27,30,31,34,39,42,46,48,50,53,55,57,59,63,65,66,68,69,74,76,77,78,82,83,88,90,92,94,99,101,102,106,108
-----computeFrom-----
17,18
17,19
24,25
24,26
28,29
28,30
37,38
37,39
67,68
67,69
71,72
71,73
75,76
75,77
80,81
80,82
96,97
96,98
-----guardedBy-----
82,101
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_17_bad(){    int i;    int data;    /* Initialize data */    data = -1;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_17_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_17_bad
{    int i;    int data;    /* Initialize data */    data = -1;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int i;
int i;
int
i
i
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(14,27,0)
(14,39,0)
(1,8,0)
(19,20,0)
(16,39,0)
(49,39,0)
(32,2,0)
(41,27,0)
(16,1,0)
(34,20,0)
(30,20,0)
(51,14,0)
(14,26,0)
(33,32,0)
(11,32,0)
(15,32,0)
(23,29,0)
(37,12,0)
(46,2,0)
(9,43,0)
(50,2,0)
(36,12,0)
(5,49,0)
(10,39,0)
(32,15,0)
(8,1,0)
(54,30,0)
(22,12,0)
(24,27,0)
(18,39,0)
(45,8,0)
(27,2,0)
(55,20,0)
(47,41,0)
(13,22,0)
(39,10,0)
(39,21,0)
(43,26,0)
(44,50,0)
(4,15,0)
(49,27,0)
(22,50,0)
(17,15,0)
(2,29,0)
(12,22,0)
(49,43,0)
(6,29,0)
(48,14,0)
(28,27,0)
(1,29,0)
(7,14,0)
(25,2,0)
(52,49,0)
(42,16,0)
(49,1,0)
(14,1,0)
(38,1,0)
(40,16,0)
(3,29,0)
(0,55,0)
(31,30,0)
(41,2,0)
(53,2,0)
(27,24,1)
(1,8,1)
(14,27,1)
(48,7,1)
(55,0,1)
(52,14,1)
(31,55,1)
(12,36,1)
(13,32,1)
(39,10,1)
(41,27,1)
(30,54,1)
(35,41,1)
(15,4,1)
(43,9,1)
(49,5,1)
(4,17,1)
(37,13,1)
(36,37,1)
(30,20,1)
(50,44,1)
(47,16,1)
(49,1,1)
(51,16,1)
(0,39,1)
(9,49,1)
(40,42,1)
(18,30,1)
(14,39,1)
(16,1,1)
(14,48,1)
(8,45,1)
(7,51,1)
(19,1,1)
(45,38,1)
(17,33,1)
(47,43,1)
(5,52,1)
(42,50,1)
(10,18,1)
(14,1,1)
(16,39,1)
(54,31,1)
(49,27,1)
(31,20,1)
(16,40,1)
(44,22,1)
(28,30,1)
(24,28,1)
(32,15,1)
(20,34,1)
(55,20,1)
(49,39,1)
(33,11,1)
(22,12,1)
(34,19,1)
(11,27,1)
(41,47,1)
(49,27,2)
(48,16,2)
(49,1,2)
(14,16,2)
(43,16,2)
(14,1,2)
(54,30,2)
(1,8,2)
(30,30,2)
(41,27,2)
(55,20,2)
(31,30,2)
(9,16,2)
(7,16,2)
(55,30,2)
(52,16,2)
(49,39,2)
(10,30,2)
(16,39,2)
(39,10,2)
(22,12,2)
(30,20,2)
(16,1,2)
(51,16,2)
(14,27,2)
(14,39,2)
(18,30,2)
(0,30,2)
(32,15,2)
(39,30,2)
(5,16,2)
(49,16,2)
-----------------------------------
(0,i)
(1,data = -1)
(2,)
(3,data)
(4,1)
(5,data)
(6,i)
(7,source)
(8,-1)
(9,\\\'\\\\0\\\')
(10,RAND32()
(11,source)
(12,100-1)
(13,source)
(14,strncpy(dest, source, data)
(15,100-1)
(16,data < 100)
(17,100)
(18,data)
(19,i)
(20,i = 0)
(21,)
(22,source[100-1])
(23,for(i = 0; i < 1; i++)
(24,"")
(25,if (data < 100)
(26,)
(27,dest[100] = "")
(28,dest)
(29,)
(30,i < 1)
(31,i)
(32,memset(source, \\\'A\\\', 100-1)
(33,\\\'A\\\')
(34,0)
(35,RET)
(36,1)
(37,100)
(38,data)
(39,data = RAND32()
(40,100)
(41,printLine(dest)
(42,data)
(43,dest[data] = \\\'\\\\0\\\')
(44,\\\'\\\\0\\\')
(45,1)
(46,source)
(47,dest)
(48,data)
(49,dest[data])
(50,source[100-1] = \\\'\\\\0\\\')
(51,dest)
(52,dest)
(53,dest)
(54,1)
(55,i++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^