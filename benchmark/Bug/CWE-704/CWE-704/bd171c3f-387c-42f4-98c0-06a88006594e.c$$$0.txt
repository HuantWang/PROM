-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_16_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    while(1)
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
        break;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
19,21
20,21
21,22
21,23
22,23
24,25
25,26
28,29
28,30
28,31
28,32
28,33
28,34
29,30
30,31
30,32
32,33
32,34
34,35
36,37
37,38
37,39
39,40
39,41
39,42
41,42
43,44
45,46
46,47
46,48
46,49
46,50
47,48
49,50
52,53
52,54
55,56
56,57
56,58
57,58
57,59
58,59
60,61
60,62
64,65
64,66
65,66
65,67
66,67
69,70
69,71
70,71
71,72
71,73
71,74
71,75
72,73
74,75
76,77
78,79
80,81
81,82
81,83
82,83
82,84
83,84
85,86
88,89
89,90
89,91
90,91
92,93
-----nextToken-----
2,4,8,10,14,16,18,23,26,27,31,33,35,38,40,42,44,48,50,51,53,54,59,61,62,63,67,68,73,75,77,79,84,86,87,91,93
-----computeFrom-----
12,13
12,14
21,22
21,23
52,53
52,54
56,57
56,58
60,61
60,62
65,66
65,67
81,82
81,83
-----guardedBy-----
67,86
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_16_bad(){    int data;    /* Initialize data */    data = -1;    while(1)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_16_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_16_bad
{    int data;    /* Initialize data */    data = -1;    while(1)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
while(1)    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    }
1
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();        break;    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
break;
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(2,14,0)
(4,35,0)
(47,20,0)
(18,17,0)
(26,19,0)
(31,17,0)
(41,9,0)
(28,17,0)
(13,9,0)
(37,9,0)
(36,9,0)
(9,36,0)
(27,44,0)
(24,2,0)
(8,29,0)
(23,47,0)
(19,47,0)
(42,41,0)
(15,19,0)
(33,40,0)
(17,35,0)
(37,2,0)
(5,37,0)
(28,10,0)
(30,17,0)
(43,20,0)
(38,28,0)
(21,14,0)
(9,3,0)
(46,40,0)
(37,48,0)
(40,29,0)
(0,35,0)
(2,44,0)
(39,41,0)
(34,18,0)
(29,40,0)
(7,37,0)
(16,35,0)
(44,2,0)
(37,17,0)
(41,2,0)
(10,48,0)
(47,19,0)
(11,28,0)
(40,35,0)
(28,9,0)
(20,35,0)
(28,2,0)
(1,14,0)
(35,14,0)
(32,10,0)
(18,35,0)
(12,37,0)
(6,29,0)
(25,3,0)
(44,27,1)
(41,42,1)
(6,46,1)
(18,34,1)
(33,17,1)
(46,33,1)
(37,2,1)
(23,40,1)
(41,9,1)
(27,24,1)
(36,13,1)
(32,28,1)
(34,41,1)
(8,6,1)
(9,36,1)
(15,26,1)
(34,10,1)
(37,7,1)
(30,25,1)
(25,9,1)
(26,23,1)
(47,19,1)
(39,20,1)
(37,9,1)
(19,15,1)
(30,45,1)
(7,5,1)
(28,11,1)
(2,44,1)
(40,29,1)
(28,2,1)
(11,38,1)
(29,8,1)
(41,2,1)
(13,45,1)
(38,37,1)
(17,31,1)
(37,17,1)
(12,41,1)
(42,39,1)
(31,30,1)
(18,17,1)
(22,18,1)
(45,2,1)
(20,43,1)
(5,12,1)
(28,17,1)
(10,32,1)
(43,47,1)
(28,9,1)
(40,29,2)
(47,19,2)
(41,2,2)
(41,9,2)
(28,41,2)
(9,36,2)
(36,45,2)
(7,41,2)
(28,2,2)
(25,45,2)
(38,41,2)
(13,45,2)
(9,45,2)
(28,17,2)
(2,44,2)
(32,41,2)
(37,9,2)
(28,9,2)
(11,41,2)
(5,41,2)
(18,17,2)
(10,41,2)
(37,17,2)
(12,41,2)
(37,41,2)
(37,2,2)
-----------------------------------
(0,dest)
(1,data)
(2,data = -1)
(3,)
(4,source)
(5,source)
(6,100)
(7,data)
(8,1)
(9,data = RAND32()
(10,dest[data] = \\\'\\\\0\\\')
(11,data)
(12,dest)
(13,data)
(14,)
(15,1)
(16,if (data < 100)
(17,dest[100] = "")
(18,printLine(dest)
(19,100-1)
(20,source[100-1] = \\\'\\\\0\\\')
(21,while(1)
(22,RET)
(23,source)
(24,data)
(25,break;)
(26,100)
(27,1)
(28,dest[data])
(29,100-1)
(30,dest)
(31,"")
(32,\\\'\\\\0\\\')
(33,source)
(34,dest)
(35,)
(36,RAND32()
(37,memcpy(dest, source, data)
(38,dest)
(39,data)
(40,memset(source, \\\'A\\\', 100-1)
(41,data < 100)
(42,100)
(43,\\\'\\\\0\\\')
(44,-1)
(45,1)
(46,\\\'A\\\')
(47,source[100-1])
(48,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^