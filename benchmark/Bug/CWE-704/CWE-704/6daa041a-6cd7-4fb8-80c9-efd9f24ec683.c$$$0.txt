-----label-----
1
-----code-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_09_bad()
{
    void * data;
    twoIntsStruct dataGoodBuffer;
    int dataBadBuffer = 100;
    dataGoodBuffer.intOne = 0;
    dataGoodBuffer.intTwo = 0;
    if(GLOBAL_CONST_TRUE)
    {
        /* FLAW: Set data to point to an int */
        data = &dataBadBuffer;
    }
    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */
    printStructLine((twoIntsStruct *)data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
23,24
25,26
26,27
26,28
27,28
27,29
28,29
32,33
33,34
33,35
34,35
34,36
35,36
39,40
39,41
40,41
42,43
43,44
44,45
44,46
45,46
47,48
48,49
50,51
51,52
51,53
52,53
54,55
54,56
55,56
55,57
56,57
58,59
60,61
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,29,30,31,36,37,38,41,46,49,53,57,59,61
-----computeFrom-----
26,27
26,28
33,34
33,35
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_09_bad(){    void * data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    if(GLOBAL_CONST_TRUE)    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */    printStructLine((twoIntsStruct *)data);}
void
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_09_bad()
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_09_bad
{    void * data;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    if(GLOBAL_CONST_TRUE)    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }    /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */    printStructLine((twoIntsStruct *)data);}
void * data;
void * data;
void
* data
*
data
twoIntsStruct dataGoodBuffer;
twoIntsStruct dataGoodBuffer;
twoIntsStruct
twoIntsStruct
dataGoodBuffer
dataGoodBuffer
int dataBadBuffer = 100;
int dataBadBuffer = 100;
int
dataBadBuffer = 100
dataBadBuffer
= 100
100
dataGoodBuffer.intOne = 0;
dataGoodBuffer.intOne = 0
dataGoodBuffer.intOne
dataGoodBuffer
dataGoodBuffer
intOne
0
dataGoodBuffer.intTwo = 0;
dataGoodBuffer.intTwo = 0
dataGoodBuffer.intTwo
dataGoodBuffer
dataGoodBuffer
intTwo
0
if(GLOBAL_CONST_TRUE)    {        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* FLAW: Set data to point to an int */        data = &dataBadBuffer;    }
data = &dataBadBuffer;
data = &dataBadBuffer
data
data
&dataBadBuffer
dataBadBuffer
dataBadBuffer
printStructLine((twoIntsStruct *)data);
printStructLine((twoIntsStruct *)data)
printStructLine
printStructLine
(twoIntsStruct *)data
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
data
data
-----joern-----
(25,3,0)
(27,7,0)
(3,7,0)
(10,28,0)
(26,4,0)
(28,7,0)
(22,28,0)
(26,12,0)
(14,13,0)
(12,5,0)
(9,12,0)
(0,13,0)
(13,21,0)
(26,24,0)
(24,7,0)
(4,26,0)
(18,26,0)
(20,9,0)
(24,26,0)
(23,12,0)
(8,3,0)
(12,9,0)
(2,7,0)
(9,28,0)
(11,7,0)
(15,21,0)
(21,7,0)
(6,8,0)
(17,7,0)
(19,8,0)
(9,20,1)
(26,18,1)
(28,22,1)
(16,24,1)
(9,28,1)
(6,28,1)
(21,15,1)
(24,26,1)
(19,6,1)
(26,12,1)
(18,12,1)
(14,3,1)
(3,25,1)
(1,21,1)
(25,8,1)
(0,14,1)
(13,0,1)
(18,1,1)
(22,10,1)
(12,9,1)
(8,19,1)
(26,4,1)
(23,1,1)
(15,13,1)
(20,23,1)
(9,28,2)
(20,1,2)
(23,1,2)
(12,1,2)
(12,9,2)
(24,26,2)
(26,4,2)
(26,12,2)
(9,1,2)
-----------------------------------
(0,intTwo)
(1,GLOBAL_CONST_TRUE)
(2,dataGoodBuffer)
(3,dataGoodBuffer.intOne = 0)
(4,twoIntsStruct *)
(5,)
(6,dataGoodBuffer)
(7,)
(8,dataGoodBuffer.intOne)
(9,&dataBadBuffer)
(10,dataBadBuffer)
(11,if(GLOBAL_CONST_TRUE)
(12,data = &dataBadBuffer)
(13,dataGoodBuffer.intTwo)
(14,dataGoodBuffer)
(15,0)
(16,RET)
(17,data)
(18,data)
(19,intOne)
(20,dataBadBuffer)
(21,dataGoodBuffer.intTwo = 0)
(22,100)
(23,data)
(24,printStructLine((twoIntsStruct *)
(25,0)
(26,(twoIntsStruct *)
(27,dataBadBuffer)
(28,dataBadBuffer = 100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^