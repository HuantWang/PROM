-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    data = CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61b_badSource(data);
    /* Assume we want to allocate a relatively small buffer */
    if (data < 100)
    {
        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,
         * the conversion will cause malloc() to allocate a very large amount of data or fail */
        char * dataBuffer = (char *)malloc(data);
        /* Do something with dataBuffer */
        memset(dataBuffer, 'A', data-1);
        dataBuffer[data-1] = '\0';
        printLine(dataBuffer);
        free(dataBuffer);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
22,23
24,25
26,27
26,28
27,28
27,29
28,29
31,32
31,33
31,34
31,35
31,36
32,33
33,34
33,35
35,36
35,37
35,38
38,39
39,40
39,41
40,41
40,42
42,43
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
57,58
60,61
61,62
61,63
62,63
62,64
63,64
65,66
65,67
66,67
70,71
71,72
71,73
72,73
74,75
76,77
77,78
77,79
78,79
80,81
-----nextToken-----
2,4,8,10,14,16,20,23,25,29,30,34,36,37,41,43,46,48,52,54,55,58,59,64,67,68,69,73,75,79,81
-----computeFrom-----
12,13
12,14
18,19
18,20
27,28
27,29
56,57
56,58
61,62
61,63
65,66
65,67
-----guardedBy-----
29,67
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61_bad(){    int data;    /* Initialize data */    data = -1;    data = CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61_bad
{    int data;    /* Initialize data */    data = -1;    data = CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61b_badSource(data);
data = CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61b_badSource(data)
data
data
CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61b_badSource(data)
CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61b_badSource
CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61b_badSource
data
data
if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
data < 100
data
data
100
{        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
char * dataBuffer = (char *)malloc(data);
char * dataBuffer = (char *)malloc(data);
char
* dataBuffer = (char *)malloc(data)
*
dataBuffer
= (char *)malloc(data)
(char *)malloc(data)
char *
char
*
*
malloc(data)
malloc
malloc
data
data
memset(dataBuffer, 'A', data-1);
memset(dataBuffer, 'A', data-1)
memset
memset
dataBuffer
dataBuffer
'A'
data-1
data
data
1
dataBuffer[data-1] = '\0';
dataBuffer[data-1] = '\0'
dataBuffer[data-1]
dataBuffer
dataBuffer
data-1
data
data
1
'\0'
printLine(dataBuffer);
printLine(dataBuffer)
printLine
printLine
dataBuffer
dataBuffer
free(dataBuffer);
free(dataBuffer)
free
free
dataBuffer
dataBuffer
-----joern-----
(39,22,0)
(14,19,0)
(13,25,0)
(25,12,0)
(8,37,0)
(8,9,0)
(35,26,0)
(23,34,0)
(20,18,0)
(29,19,0)
(34,23,0)
(18,12,0)
(19,25,0)
(24,9,0)
(9,26,0)
(3,26,0)
(34,3,0)
(21,37,0)
(37,25,0)
(37,8,0)
(40,19,0)
(2,34,0)
(41,23,0)
(6,9,0)
(15,35,0)
(11,13,0)
(25,38,0)
(6,26,0)
(23,25,0)
(4,23,0)
(8,5,0)
(9,8,0)
(32,13,0)
(38,25,0)
(33,3,0)
(22,18,0)
(38,18,0)
(29,26,0)
(7,26,0)
(43,12,0)
(19,29,0)
(1,29,0)
(27,6,0)
(35,9,0)
(36,12,0)
(29,9,0)
(17,29,0)
(34,9,0)
(5,8,0)
(10,25,0)
(0,38,0)
(18,22,0)
(10,18,1)
(8,5,1)
(3,33,1)
(29,9,1)
(13,32,1)
(4,2,1)
(2,29,1)
(22,39,1)
(25,38,1)
(28,6,1)
(18,22,1)
(37,25,1)
(34,23,1)
(40,14,1)
(38,18,1)
(34,9,1)
(24,13,1)
(28,13,1)
(38,0,1)
(8,37,1)
(23,25,1)
(19,25,1)
(29,19,1)
(0,10,1)
(37,21,1)
(23,41,1)
(9,8,1)
(6,9,1)
(13,25,1)
(14,1,1)
(21,24,1)
(32,11,1)
(41,4,1)
(11,25,1)
(1,17,1)
(39,20,1)
(19,40,1)
(6,27,1)
(15,3,1)
(35,15,1)
(17,9,1)
(33,34,1)
(35,9,1)
(27,35,1)
(3,13,2)
(34,23,2)
(33,13,2)
(23,13,2)
(29,19,2)
(27,13,2)
(18,22,2)
(35,9,2)
(41,13,2)
(23,25,2)
(38,18,2)
(9,8,2)
(35,13,2)
(8,5,2)
(15,13,2)
(37,25,2)
(29,13,2)
(24,13,2)
(19,13,2)
(25,38,2)
(6,9,2)
(8,37,2)
(14,13,2)
(34,9,2)
(37,13,2)
(13,25,2)
(1,13,2)
(2,13,2)
(9,13,2)
(29,9,2)
(21,13,2)
(19,25,2)
(34,13,2)
(6,13,2)
(40,13,2)
(4,13,2)
(17,13,2)
(8,13,2)
-----------------------------------
(0,data)
(1,\'A\')
(2,dataBuffer)
(3,dataBuffer[data-1] = '\\\\0')
(4,data)
(5,char *)
(6,free(dataBuffer)
(7,dataBuffer)
(8,(char *)
(9,* dataBuffer = (char *)
(10,data)
(11,data)
(12,)
(13,data < 100)
(14,data)
(15,dataBuffer)
(16,'A')
(17,dataBuffer)
(18,data = -1)
(19,data-1)
(20,data)
(21,data)
(22,-1)
(23,data-1)
(24,dataBuffer)
(25,data = CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61b_badSource(data)
(26,)
(27,dataBuffer)
(28,RET)
(29,memset(dataBuffer, 'A', data-1)
(30,memset(dataBuffer, \'A\', data-1)
(31,dataBuffer[data-1] = \'\\\\0\')
(32,100)
(33,'\\\\0')
(34,dataBuffer[data-1])
(35,printLine(dataBuffer)
(36,data)
(37,malloc(data)
(38,CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_61b_badSource(data)
(39,1)
(40,1)
(41,1)
(42,\'\\\\0\')
(43,if (data < 100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^