-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_02_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(1)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
21,22
23,24
25,26
25,27
25,28
25,29
25,30
25,31
26,27
27,28
27,29
29,30
29,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
38,39
40,41
42,43
43,44
43,45
43,46
43,47
44,45
46,47
49,50
49,51
52,53
53,54
53,55
54,55
54,56
55,56
57,58
57,59
61,62
61,63
62,63
62,64
63,64
66,67
66,68
67,68
68,69
68,70
68,71
68,72
69,70
71,72
73,74
75,76
77,78
78,79
78,80
79,80
79,81
80,81
82,83
85,86
86,87
86,88
87,88
89,90
-----nextToken-----
2,4,8,10,14,15,17,22,24,28,30,32,35,37,39,41,45,47,48,50,51,56,58,59,60,64,65,70,72,74,76,81,83,84,88,90
-----computeFrom-----
12,13
12,14
20,21
20,22
49,50
49,51
53,54
53,55
57,58
57,59
62,63
62,64
78,79
78,80
-----guardedBy-----
64,83
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_02_bad(){    short data;    /* Initialize data */    data = 0;    if(1)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_memmove_02_bad()
CWE194_Unexpected_Sign_Extension__negative_memmove_02_bad
{    short data;    /* Initialize data */    data = 0;    if(1)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(1)    {        /* FLAW: Use a negative number */        data = -1;    }
1
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(8,24,0)
(19,47,0)
(20,24,0)
(34,35,0)
(36,16,0)
(1,9,0)
(38,9,0)
(32,0,0)
(16,0,0)
(26,33,0)
(4,27,0)
(35,7,0)
(31,26,0)
(6,47,0)
(12,20,0)
(29,27,0)
(43,30,0)
(27,47,0)
(34,0,0)
(25,24,0)
(47,27,0)
(7,35,0)
(22,35,0)
(16,24,0)
(2,20,0)
(0,24,0)
(15,12,0)
(26,35,0)
(34,30,0)
(46,7,0)
(14,43,0)
(5,33,0)
(33,23,0)
(12,15,0)
(37,24,0)
(21,34,0)
(18,34,0)
(42,26,0)
(35,41,0)
(28,15,0)
(10,0,0)
(40,34,0)
(39,30,0)
(43,35,0)
(27,24,0)
(24,9,0)
(26,0,0)
(34,23,0)
(30,9,0)
(3,15,0)
(13,12,0)
(11,43,0)
(26,30,0)
(45,30,0)
(33,5,1)
(29,4,1)
(34,35,1)
(6,29,1)
(16,36,1)
(26,30,1)
(43,14,1)
(47,19,1)
(34,30,1)
(36,43,1)
(26,35,1)
(44,30,1)
(28,13,1)
(15,3,1)
(32,44,1)
(30,45,1)
(43,30,1)
(19,6,1)
(26,42,1)
(13,27,1)
(26,0,1)
(35,7,1)
(12,15,1)
(34,18,1)
(4,0,1)
(7,46,1)
(36,33,1)
(31,34,1)
(20,2,1)
(21,40,1)
(46,22,1)
(43,35,1)
(42,31,1)
(32,35,1)
(5,26,1)
(40,43,1)
(17,16,1)
(16,0,1)
(34,0,1)
(27,47,1)
(10,32,1)
(45,39,1)
(0,10,1)
(22,44,1)
(18,21,1)
(2,12,1)
(3,28,1)
(14,11,1)
(11,20,1)
(34,30,2)
(34,0,2)
(22,44,2)
(26,0,2)
(46,44,2)
(21,43,2)
(16,0,2)
(33,43,2)
(43,35,2)
(43,30,2)
(35,44,2)
(7,44,2)
(18,43,2)
(26,30,2)
(42,43,2)
(27,47,2)
(35,7,2)
(26,35,2)
(34,35,2)
(12,15,2)
(26,43,2)
(34,43,2)
(31,43,2)
(5,43,2)
(40,43,2)
-----------------------------------
(0,dest[100] = "")
(1,data)
(2,\\\'\\\\0\\\')
(3,1)
(4,source)
(5,\\\'\\\\0\\\')
(6,100)
(7,-1)
(8,source)
(9,)
(10,"")
(11,data)
(12,source[100-1])
(13,source)
(14,100)
(15,100-1)
(16,printLine(dest)
(17,RET)
(18,data)
(19,1)
(20,source[100-1] = \\\'\\\\0\\\')
(21,source)
(22,data)
(23,)
(24,)
(25,if (data < 100)
(26,dest[data])
(27,memset(source, \\\'A\\\', 100-1)
(28,100)
(29,\\\'A\\\')
(30,data = 0)
(31,dest)
(32,dest)
(33,dest[data] = \\\'\\\\0\\\')
(34,memmove(dest, source, data)
(35,data = -1)
(36,dest)
(37,dest)
(38,if(1)
(39,data)
(40,dest)
(41,)
(42,data)
(43,data < 100)
(44,1)
(45,0)
(46,1)
(47,100-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^