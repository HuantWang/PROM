-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_strncpy_42_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    data = badSource(data);
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
22,23
24,25
26,27
26,28
26,29
26,30
26,31
26,32
27,28
28,29
28,30
30,31
30,32
32,33
34,35
35,36
35,37
37,38
37,39
37,40
39,40
41,42
43,44
44,45
44,46
44,47
44,48
45,46
47,48
50,51
50,52
53,54
54,55
54,56
55,56
55,57
56,57
58,59
58,60
62,63
62,64
63,64
63,65
64,65
67,68
67,69
68,69
69,70
69,71
69,72
69,73
70,71
72,73
74,75
76,77
78,79
79,80
79,81
80,81
80,82
81,82
83,84
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,14,16,20,23,25,29,31,33,36,38,40,42,46,48,49,51,52,57,59,60,61,65,66,71,73,75,77,82,84,85,89,91
-----computeFrom-----
12,13
12,14
18,19
18,20
50,51
50,52
54,55
54,56
58,59
58,60
63,64
63,65
79,80
79,81
-----guardedBy-----
65,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_strncpy_42_bad(){    int data;    /* Initialize data */    data = -1;    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_strncpy_42_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_strncpy_42_bad
{    int data;    /* Initialize data */    data = -1;    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(43,23,0)
(9,12,0)
(7,36,0)
(26,18,0)
(20,36,0)
(42,22,0)
(22,28,0)
(35,38,0)
(30,12,0)
(37,3,0)
(28,18,0)
(32,6,0)
(31,26,0)
(14,15,0)
(15,28,0)
(8,5,0)
(38,12,0)
(2,21,0)
(36,23,0)
(38,5,0)
(40,28,0)
(3,28,0)
(33,30,0)
(12,9,0)
(13,9,0)
(10,21,0)
(25,6,0)
(12,18,0)
(3,5,0)
(23,15,0)
(6,11,0)
(38,11,0)
(21,22,0)
(22,21,0)
(17,28,0)
(39,38,0)
(25,12,0)
(9,26,0)
(29,38,0)
(44,26,0)
(19,22,0)
(0,18,0)
(34,30,0)
(41,44,0)
(26,44,0)
(16,25,0)
(25,5,0)
(24,28,0)
(27,25,0)
(5,28,0)
(23,36,0)
(1,5,0)
(45,12,0)
(30,34,1)
(33,15,1)
(19,5,1)
(21,10,1)
(38,12,1)
(42,19,1)
(41,31,1)
(25,5,1)
(44,41,1)
(8,1,1)
(9,26,1)
(13,45,1)
(5,8,1)
(3,37,1)
(9,13,1)
(3,5,1)
(20,43,1)
(35,39,1)
(32,25,1)
(38,5,1)
(6,32,1)
(1,12,1)
(37,6,1)
(10,2,1)
(43,22,1)
(30,12,1)
(37,30,1)
(36,7,1)
(12,9,1)
(25,12,1)
(4,3,1)
(22,21,1)
(29,35,1)
(14,23,1)
(7,20,1)
(26,44,1)
(25,16,1)
(15,14,1)
(27,38,1)
(38,29,1)
(16,27,1)
(23,36,1)
(34,33,1)
(2,42,1)
(45,26,1)
(39,30,1)
(23,36,2)
(22,21,2)
(38,12,2)
(3,5,2)
(25,5,2)
(32,30,2)
(16,30,2)
(29,30,2)
(27,30,2)
(12,9,2)
(25,12,2)
(6,30,2)
(9,26,2)
(38,5,2)
(39,30,2)
(38,30,2)
(25,30,2)
(35,30,2)
(26,44,2)
(30,12,2)
-----------------------------------
(0,data)
(1,dest)
(2,100)
(3,printLine(dest)
(4,RET)
(5,dest[100] = "")
(6,dest[data] = \\\'\\\\0\\\')
(7,1)
(8,"")
(9,badSource(data)
(10,1)
(11,)
(12,data = badSource(data)
(13,data)
(14,\\\'\\\\0\\\')
(15,source[100-1] = \\\'\\\\0\\\')
(16,data)
(17,source)
(18,)
(19,source)
(20,100)
(21,100-1)
(22,memset(source, \\\'A\\\', 100-1)
(23,source[100-1])
(24,if (data < 100)
(25,dest[data])
(26,data = -1)
(27,dest)
(28,)
(29,data)
(30,data < 100)
(31,data)
(32,\\\'\\\\0\\\')
(33,data)
(34,100)
(35,source)
(36,100-1)
(37,dest)
(38,strncpy(dest, source, data)
(39,dest)
(40,dest)
(41,1)
(42,\\\'A\\\')
(43,source)
(44,-1)
(45,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^