-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    data = CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61b_badSource(data);
    /* Assume we want to allocate a relatively small buffer */
    if (data < 100)
    {
        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,
         * the conversion will cause malloc() to allocate a very large amount of data or fail */
        char * dataBuffer = (char *)malloc(data);
        /* Do something with dataBuffer */
        memset(dataBuffer, 'A', data-1);
        dataBuffer[data-1] = '\0';
        printLine(dataBuffer);
        free(dataBuffer);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
22,23
24,25
26,27
26,28
27,28
27,29
28,29
31,32
31,33
31,34
31,35
31,36
32,33
33,34
33,35
35,36
35,37
35,38
38,39
39,40
39,41
40,41
40,42
42,43
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
50,54
51,52
53,54
56,57
56,58
57,58
60,61
61,62
61,63
62,63
62,64
63,64
65,66
65,67
66,67
70,71
71,72
71,73
72,73
74,75
76,77
77,78
77,79
78,79
80,81
-----nextToken-----
2,4,8,10,14,16,20,23,25,29,30,34,36,37,41,43,46,48,52,54,55,58,59,64,67,68,69,73,75,79,81
-----computeFrom-----
12,13
12,14
18,19
18,20
27,28
27,29
56,57
56,58
61,62
61,63
65,66
65,67
-----guardedBy-----
29,67
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61_bad(){    int data;    /* Initialize data */    data = -1;    data = CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61_bad
{    int data;    /* Initialize data */    data = -1;    data = CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61b_badSource(data);    /* Assume we want to allocate a relatively small buffer */    if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61b_badSource(data);
data = CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61b_badSource(data)
data
data
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61b_badSource(data)
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61b_badSource
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61b_badSource
data
data
if (data < 100)    {        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
data < 100
data
data
100
{        /* POTENTIAL FLAW: malloc() takes a size_t (unsigned int) as input and therefore if it is negative,         * the conversion will cause malloc() to allocate a very large amount of data or fail */        char * dataBuffer = (char *)malloc(data);        /* Do something with dataBuffer */        memset(dataBuffer, 'A', data-1);        dataBuffer[data-1] = '\0';        printLine(dataBuffer);        free(dataBuffer);    }
char * dataBuffer = (char *)malloc(data);
char * dataBuffer = (char *)malloc(data);
char
* dataBuffer = (char *)malloc(data)
*
dataBuffer
= (char *)malloc(data)
(char *)malloc(data)
char *
char
*
*
malloc(data)
malloc
malloc
data
data
memset(dataBuffer, 'A', data-1);
memset(dataBuffer, 'A', data-1)
memset
memset
dataBuffer
dataBuffer
'A'
data-1
data
data
1
dataBuffer[data-1] = '\0';
dataBuffer[data-1] = '\0'
dataBuffer[data-1]
dataBuffer
dataBuffer
data-1
data
data
1
'\0'
printLine(dataBuffer);
printLine(dataBuffer)
printLine
printLine
dataBuffer
dataBuffer
free(dataBuffer);
free(dataBuffer)
free
free
dataBuffer
dataBuffer
-----joern-----
(21,1,0)
(35,30,0)
(21,10,0)
(25,41,0)
(11,10,0)
(33,23,0)
(22,21,0)
(3,25,0)
(36,35,0)
(17,19,0)
(42,3,0)
(1,16,0)
(5,34,0)
(19,21,0)
(34,25,0)
(35,36,0)
(23,25,0)
(1,35,0)
(0,3,0)
(14,41,0)
(27,4,0)
(14,4,0)
(15,38,0)
(9,14,0)
(21,19,0)
(38,1,0)
(13,23,0)
(30,25,0)
(20,16,0)
(19,25,0)
(4,14,0)
(35,1,0)
(31,30,0)
(7,1,0)
(25,34,0)
(24,16,0)
(18,41,0)
(10,16,0)
(6,1,0)
(38,16,0)
(40,24,0)
(26,41,0)
(29,24,0)
(8,19,0)
(30,35,0)
(24,1,0)
(34,14,0)
(12,25,0)
(6,16,0)
(2,6,0)
(24,23,0)
(23,24,0)
(1,35,1)
(2,10,1)
(24,1,1)
(0,25,1)
(3,25,1)
(38,1,1)
(6,2,1)
(13,33,1)
(10,11,1)
(38,15,1)
(7,3,1)
(17,22,1)
(3,42,1)
(15,6,1)
(29,40,1)
(27,9,1)
(22,24,1)
(8,17,1)
(25,34,1)
(6,1,1)
(30,25,1)
(4,27,1)
(34,14,1)
(12,14,1)
(14,4,1)
(19,8,1)
(33,29,1)
(31,7,1)
(21,1,1)
(42,0,1)
(40,1,1)
(23,25,1)
(30,31,1)
(19,25,1)
(5,12,1)
(32,38,1)
(35,36,1)
(23,13,1)
(35,30,1)
(21,19,1)
(24,23,1)
(34,5,1)
(32,3,1)
(11,21,1)
(14,4,2)
(30,25,2)
(6,1,2)
(21,3,2)
(11,3,2)
(31,3,2)
(6,3,2)
(2,3,2)
(1,35,2)
(24,1,2)
(13,3,2)
(23,25,2)
(35,3,2)
(3,25,2)
(19,25,2)
(17,3,2)
(23,3,2)
(34,14,2)
(7,3,2)
(21,1,2)
(10,3,2)
(24,3,2)
(24,23,2)
(29,3,2)
(21,19,2)
(19,3,2)
(38,1,2)
(1,3,2)
(35,30,2)
(40,3,2)
(35,36,2)
(15,3,2)
(22,3,2)
(33,3,2)
(30,3,2)
(25,34,2)
(8,3,2)
(38,3,2)
-----------------------------------
(0,data)
(1,* dataBuffer = (char *)
(2,dataBuffer)
(3,data < 100)
(4,-1)
(5,data)
(6,printLine(dataBuffer)
(7,dataBuffer)
(8,1)
(9,data)
(10,dataBuffer[data-1] = \'\\\\0\')
(11,\'\\\\0\')
(12,data)
(13,1)
(14,data = -1)
(15,dataBuffer)
(16,)
(17,data)
(18,data)
(19,data-1)
(20,dataBuffer)
(21,dataBuffer[data-1])
(22,dataBuffer)
(23,data-1)
(24,memset(dataBuffer, \'A\', data-1)
(25,data = CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61b_badSource(data)
(26,if (data < 100)
(27,1)
(28,memset(dataBuffer, 'A', data-1)
(29,\'A\')
(30,malloc(data)
(31,data)
(32,RET)
(33,data)
(34,CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_malloc_61b_badSource(data)
(35,(char *)
(36,char *)
(37,'A')
(38,free(dataBuffer)
(39,'\\\\0')
(40,dataBuffer)
(41,)
(42,100)
(43,dataBuffer[data-1] = '\\\\0')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^