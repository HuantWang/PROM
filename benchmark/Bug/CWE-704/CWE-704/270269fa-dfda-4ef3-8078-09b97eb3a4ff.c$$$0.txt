-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__rand_memmove_13_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* FLAW: Use a random value that could be less than 0 */
        data = (short)RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
30,31
31,32
33,34
33,35
33,36
33,37
33,38
33,39
34,35
35,36
35,37
37,38
37,39
39,40
41,42
42,43
42,44
44,45
44,46
44,47
46,47
48,49
50,51
51,52
51,53
51,54
51,55
52,53
54,55
57,58
57,59
60,61
61,62
61,63
62,63
62,64
63,64
65,66
65,67
69,70
69,71
70,71
70,72
71,72
74,75
74,76
75,76
76,77
76,78
76,79
76,80
77,78
79,80
81,82
83,84
85,86
86,87
86,88
87,88
87,89
88,89
90,91
93,94
94,95
94,96
95,96
97,98
-----nextToken-----
2,4,8,10,14,15,19,20,25,28,29,32,36,38,40,43,45,47,49,53,55,56,58,59,64,66,67,68,72,73,78,80,82,84,89,91,92,96,98
-----computeFrom-----
12,13
12,14
17,18
17,19
23,24
23,25
57,58
57,59
61,62
61,63
65,66
65,67
70,71
70,72
86,87
86,88
-----guardedBy-----
72,91
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__rand_memmove_13_bad(){    short data;    /* Initialize data */    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__rand_memmove_13_bad()
CWE194_Unexpected_Sign_Extension__rand_memmove_13_bad
{    short data;    /* Initialize data */    data = 0;    if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(4,34,0)
(50,43,0)
(3,7,0)
(49,42,0)
(32,40,0)
(11,37,0)
(24,30,0)
(31,27,0)
(11,4,0)
(48,40,0)
(44,7,0)
(17,8,0)
(29,27,0)
(9,19,0)
(0,43,0)
(43,8,0)
(12,31,0)
(38,16,0)
(49,30,0)
(4,20,0)
(43,25,0)
(26,27,0)
(36,8,0)
(1,30,0)
(2,27,0)
(1,11,0)
(35,2,0)
(20,4,0)
(27,40,0)
(13,49,0)
(15,49,0)
(19,2,0)
(43,30,0)
(47,1,0)
(42,25,0)
(5,8,0)
(49,11,0)
(6,43,0)
(33,42,0)
(10,11,0)
(21,27,0)
(8,27,0)
(43,11,0)
(18,31,0)
(16,18,0)
(23,2,0)
(34,4,0)
(22,1,0)
(45,19,0)
(4,11,0)
(30,40,0)
(14,16,0)
(18,16,0)
(49,8,0)
(41,18,0)
(39,36,0)
(46,30,0)
(36,27,0)
(2,19,0)
(36,8,1)
(49,11,1)
(50,0,1)
(4,20,1)
(2,19,1)
(36,39,1)
(11,4,1)
(38,14,1)
(15,43,1)
(13,15,1)
(18,16,1)
(45,23,1)
(1,30,1)
(5,11,1)
(34,10,1)
(28,36,1)
(1,22,1)
(49,8,1)
(6,1,1)
(43,11,1)
(39,1,1)
(49,13,1)
(7,44,1)
(39,42,1)
(46,24,1)
(47,31,1)
(30,46,1)
(35,8,1)
(17,5,1)
(19,9,1)
(43,30,1)
(5,7,1)
(43,50,1)
(33,49,1)
(23,35,1)
(4,34,1)
(10,7,1)
(31,12,1)
(42,33,1)
(41,2,1)
(14,41,1)
(0,6,1)
(22,47,1)
(8,17,1)
(9,45,1)
(1,11,1)
(44,3,1)
(43,8,1)
(3,30,1)
(12,18,1)
(16,38,1)
(49,30,1)
(15,1,2)
(11,4,2)
(13,1,2)
(49,11,2)
(34,7,2)
(42,1,2)
(43,8,2)
(10,7,2)
(6,1,2)
(1,11,2)
(36,8,2)
(33,1,2)
(1,30,2)
(18,16,2)
(49,8,2)
(2,19,2)
(4,34,2)
(43,30,2)
(43,1,2)
(50,1,2)
(49,30,2)
(43,11,2)
(4,7,2)
(49,1,2)
(0,1,2)
(11,7,2)
(4,20,2)
-----------------------------------
(0,source)
(1,data < 100)
(2,memset(source, \\\'A\\\', 100-1)
(3,GLOBAL_CONST_FIVE)
(4,(short)
(5,dest)
(6,dest)
(7,GLOBAL_CONST_FIVE==5)
(8,dest[100] = "")
(9,1)
(10,data)
(11,data = (short)
(12,\\\'\\\\0\\\')
(13,data)
(14,100)
(15,dest)
(16,100-1)
(17,"")
(18,source[100-1])
(19,100-1)
(20,short)
(21,source)
(22,100)
(23,\\\'A\\\')
(24,data)
(25,)
(26,dest)
(27,)
(28,RET)
(29,if (data < 100)
(30,data = 0)
(31,source[100-1] = \\\'\\\\0\\\')
(32,if(GLOBAL_CONST_FIVE==5)
(33,\\\'\\\\0\\\')
(34,RAND32()
(35,source)
(36,printLine(dest)
(37,)
(38,1)
(39,dest)
(40,)
(41,source)
(42,dest[data] = \\\'\\\\0\\\')
(43,memmove(dest, source, data)
(44,5)
(45,100)
(46,0)
(47,data)
(48,data)
(49,dest[data])
(50,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^