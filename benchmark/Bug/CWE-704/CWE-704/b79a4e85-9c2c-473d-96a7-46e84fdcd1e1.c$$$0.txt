-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_18_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    goto source;
source:
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    {
        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
        char charData = (char)data;
        printHexCharLine(charData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
19,20
19,21
21,22
21,23
22,23
23,24
23,25
25,26
25,27
25,28
27,28
28,29
30,31
32,33
32,34
32,35
33,34
33,35
34,35
34,36
34,37
34,38
35,36
37,38
39,40
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
50,52
51,52
53,54
55,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
63,64
63,65
65,66
65,67
67,68
68,69
68,70
69,70
69,71
72,73
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,8,10,14,16,18,20,24,26,29,31,36,38,40,42,44,49,52,54,59,60,64,66,70,71,73,77,79
-----computeFrom-----
12,13
12,14
33,34
33,35
47,48
47,49
-----guardedBy-----
38,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fgets_to_char_18_bad(){    int data;    /* Initialize data */    data = -1;    goto source;source:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
void
CWE197_Numeric_Truncation_Error__int_fgets_to_char_18_bad()
CWE197_Numeric_Truncation_Error__int_fgets_to_char_18_bad
{    int data;    /* Initialize data */    data = -1;    goto source;source:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    {        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
goto source;
source
source:    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
source
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            data = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            data = atoi(inputBuffer);        }
data = atoi(inputBuffer);
data = atoi(inputBuffer)
data
data
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
{        /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */        char charData = (char)data;        printHexCharLine(charData);    }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(20,27,0)
(33,24,0)
(10,26,0)
(22,6,0)
(22,7,0)
(15,25,0)
(14,24,0)
(13,33,0)
(1,35,0)
(36,12,0)
(37,0,0)
(21,26,0)
(7,0,0)
(34,28,0)
(9,27,0)
(11,12,0)
(0,26,0)
(4,32,0)
(24,33,0)
(32,22,0)
(30,10,0)
(6,22,0)
(12,27,0)
(22,24,0)
(28,5,0)
(32,12,0)
(19,7,0)
(31,35,0)
(8,26,0)
(3,10,0)
(10,25,0)
(22,32,0)
(23,22,0)
(7,2,0)
(18,11,0)
(25,10,0)
(16,10,0)
(17,27,0)
(35,27,0)
(24,27,0)
(11,32,0)
(0,7,0)
(26,35,0)
(26,21,1)
(11,32,1)
(30,16,1)
(25,10,1)
(33,13,1)
(18,32,1)
(4,7,1)
(19,25,1)
(16,3,1)
(0,26,1)
(0,37,1)
(25,15,1)
(22,23,1)
(3,26,1)
(15,10,1)
(37,19,1)
(4,28,1)
(22,6,1)
(24,33,1)
(21,8,1)
(13,14,1)
(10,30,1)
(29,11,1)
(22,24,1)
(22,7,1)
(28,34,1)
(17,24,1)
(34,25,1)
(11,18,1)
(7,0,1)
(10,26,1)
(32,22,1)
(8,17,1)
(23,4,1)
(28,25,2)
(25,10,2)
(34,25,2)
(10,26,2)
(22,6,2)
(22,7,2)
(11,32,2)
(19,25,2)
(32,22,2)
(24,33,2)
(0,26,2)
(7,0,2)
(22,24,2)
(37,25,2)
(0,25,2)
(7,25,2)
-----------------------------------
(0,atoi(inputBuffer)
(1,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(2,)
(3,inputBuffer)
(4,charData)
(5,)
(6,char)
(7,data = atoi(inputBuffer)
(8,inputBuffer)
(9,source:)
(10,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(11,printHexCharLine(charData)
(12,)
(13,1)
(14,data)
(15,NULL)
(16,CHAR_ARRAY_SIZE)
(17,goto source;)
(18,charData)
(19,data)
(20,data)
(21,"")
(22,(char)
(23,data)
(24,data = -1)
(25,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(26,inputBuffer[CHAR_ARRAY_SIZE] = "")
(27,)
(28,printLine("fgets()
(29,RET)
(30,stdin)
(31,inputBuffer)
(32,charData = (char)
(33,-1)
(34,"fgets()
(35,)
(36,charData)
(37,inputBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^