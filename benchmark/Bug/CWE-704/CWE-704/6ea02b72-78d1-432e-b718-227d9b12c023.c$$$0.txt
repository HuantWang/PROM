-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_rand_to_short_11_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Set data to a random value */
        data = RAND32();
    }
    {
        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
        short shortData = (short)data;
        printShortLine(shortData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
27,28
29,30
29,31
30,31
31,32
31,33
33,34
33,35
35,36
36,37
36,38
37,38
37,39
40,41
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,16,20,25,28,32,34,38,39,41,45,47
-----computeFrom-----
12,13
12,14
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_rand_to_short_11_bad(){    int data;    /* Initialize data */    data = -1;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
void
CWE197_Numeric_Truncation_Error__int_rand_to_short_11_bad()
CWE197_Numeric_Truncation_Error__int_rand_to_short_11_bad
{    int data;    /* Initialize data */    data = -1;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Set data to a random value */        data = RAND32();    }
data = RAND32();
data = RAND32()
data
data
RAND32()
RAND32
RAND32
{        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(10,7,0)
(12,1,0)
(17,4,0)
(19,14,0)
(13,5,0)
(9,5,0)
(10,20,0)
(5,10,0)
(7,10,0)
(8,12,0)
(2,10,0)
(18,4,0)
(5,17,0)
(6,0,0)
(0,14,0)
(12,0,0)
(3,1,0)
(17,14,0)
(21,14,0)
(5,1,0)
(5,9,0)
(1,5,0)
(4,17,0)
(1,0,0)
(16,17,0)
(3,11,1)
(2,11,1)
(13,3,1)
(8,1,1)
(5,13,1)
(5,10,1)
(12,8,1)
(7,2,1)
(4,18,1)
(18,16,1)
(17,4,1)
(5,17,1)
(15,12,1)
(3,10,1)
(12,1,1)
(10,7,1)
(1,5,1)
(5,9,1)
(11,17,1)
(12,1,2)
(1,5,2)
(5,9,2)
(5,17,2)
(7,11,2)
(5,10,2)
(10,11,2)
(10,7,2)
(2,11,2)
(17,4,2)
-----------------------------------
(0,)
(1,shortData = (short)
(2,data)
(3,shortData)
(4,-1)
(5,(short)
(6,shortData)
(7,RAND32()
(8,shortData)
(9,short)
(10,data = RAND32()
(11,globalReturnsTrue()
(12,printShortLine(shortData)
(13,data)
(14,)
(15,RET)
(16,data)
(17,data = -1)
(18,1)
(19,data)
(20,)
(21,if(globalReturnsTrue()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^