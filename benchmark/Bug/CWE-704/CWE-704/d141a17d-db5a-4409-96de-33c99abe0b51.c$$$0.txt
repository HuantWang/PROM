-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fscanf_to_char_32_bad()
{
    int data;
    int *dataPtr1 = &data;
    int *dataPtr2 = &data;
    /* Initialize data */
    data = -1;
    {
        int data = *dataPtr1;
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
        *dataPtr1 = data;
    }
    {
        int data = *dataPtr2;
        {
            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
            char charData = (char)data;
            printHexCharLine(charData);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
19,20
21,22
22,23
22,24
24,25
24,26
24,27
27,28
28,29
29,30
31,32
32,33
32,34
33,34
35,36
37,38
37,39
37,40
38,39
39,40
39,41
41,42
41,43
43,44
44,45
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
55,56
57,58
58,59
58,60
59,60
60,61
62,63
64,65
64,66
65,66
66,67
66,68
68,69
68,70
70,71
71,72
72,73
74,75
74,76
75,76
76,77
76,78
78,79
78,80
80,81
81,82
81,83
82,83
82,84
85,86
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,13,15,16,20,23,25,26,30,34,36,40,42,46,50,52,53,56,61,63,67,69,73,77,79,83,84,86,90,92
-----computeFrom-----
32,33
32,34
58,59
58,60
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fscanf_to_char_32_bad(){    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
void
CWE197_Numeric_Truncation_Error__int_fscanf_to_char_32_bad()
CWE197_Numeric_Truncation_Error__int_fscanf_to_char_32_bad
{    int data;    int *dataPtr1 = &data;    int *dataPtr2 = &data;    /* Initialize data */    data = -1;    {        int data = *dataPtr1;        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        *dataPtr1 = data;    }    {        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }}
int data;
int data;
int
data
data
int *dataPtr1 = &data;
int *dataPtr1 = &data;
int
*dataPtr1 = &data
*
dataPtr1
= &data
&data
data
data
int *dataPtr2 = &data;
int *dataPtr2 = &data;
int
*dataPtr2 = &data
*
dataPtr2
= &data
&data
data
data
data = -1;
data = -1
data
data
-1
1
{        int data = *dataPtr1;        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);        *dataPtr1 = data;    }
int data = *dataPtr1;
int data = *dataPtr1;
int
data = *dataPtr1
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        int data = *dataPtr2;        {            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }    }
int data = *dataPtr2;
int data = *dataPtr2;
int
data = *dataPtr2
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */            char charData = (char)data;            printHexCharLine(charData);        }
char charData = (char)data;
char charData = (char)data;
char
charData = (char)data
charData
= (char)data
(char)data
char
char

data
data
printHexCharLine(charData);
printHexCharLine(charData)
printHexCharLine
printHexCharLine
charData
charData
-----joern-----
(35,27,0)
(32,1,0)
(24,8,0)
(11,16,0)
(12,14,0)
(20,1,0)
(33,2,0)
(9,7,0)
(30,0,0)
(46,40,0)
(18,16,0)
(7,8,0)
(45,3,0)
(13,37,0)
(12,4,0)
(10,20,0)
(25,15,0)
(0,16,0)
(38,25,0)
(17,14,0)
(42,15,0)
(27,18,0)
(8,7,0)
(4,12,0)
(37,16,0)
(12,27,0)
(36,16,0)
(31,13,0)
(25,16,0)
(40,0,0)
(34,12,0)
(19,16,0)
(8,1,0)
(6,1,0)
(7,0,0)
(3,8,0)
(1,16,0)
(0,40,0)
(14,2,0)
(2,18,0)
(26,37,0)
(29,18,0)
(5,32,0)
(5,0,0)
(43,32,0)
(21,37,0)
(27,26,0)
(37,13,0)
(17,2,0)
(41,5,0)
(20,3,0)
(14,12,0)
(22,14,0)
(32,8,0)
(26,27,0)
(39,17,0)
(44,20,0)
(23,26,0)
(15,25,0)
(3,20,0)
(9,24,1)
(41,20,1)
(26,23,1)
(12,4,1)
(31,21,1)
(43,5,1)
(27,26,1)
(28,17,1)
(46,30,1)
(3,45,1)
(7,9,1)
(24,25,1)
(34,22,1)
(3,8,1)
(39,14,1)
(23,35,1)
(45,44,1)
(8,7,1)
(14,12,1)
(26,37,1)
(38,37,1)
(12,27,1)
(20,3,1)
(42,38,1)
(5,41,1)
(35,32,1)
(7,0,1)
(5,0,1)
(37,13,1)
(10,8,1)
(40,46,1)
(12,34,1)
(17,39,1)
(21,0,1)
(32,43,1)
(32,8,1)
(25,15,1)
(44,10,1)
(22,27,1)
(15,42,1)
(13,31,1)
(0,40,1)
(17,14,1)
(37,13,2)
(3,8,2)
(12,27,2)
(14,12,2)
(26,37,2)
(32,8,2)
(12,4,2)
(5,0,2)
(20,3,2)
(27,26,2)
(7,0,2)
(25,15,2)
(0,40,2)
(17,14,2)
(8,7,2)
-----------------------------------
(0,*dataPtr1 = &data)
(1,)
(2,)
(3,&data)
(4,char)
(5,*dataPtr1)
(6,data)
(7,*dataPtr1)
(8,data = *dataPtr1)
(9,dataPtr1)
(10,stdin)
(11,data)
(12,(char)
(13,&data)
(14,charData = (char)
(15,-1)
(16,)
(17,printHexCharLine(charData)
(18,)
(19,dataPtr2)
(20,fscanf(stdin, "%d", &data)
(21,dataPtr2)
(22,charData)
(23,dataPtr2)
(24,data)
(25,data = -1)
(26,*dataPtr2)
(27,data = *dataPtr2)
(28,RET)
(29,data)
(30,dataPtr1)
(31,data)
(32,*dataPtr1 = data)
(33,charData)
(34,data)
(35,data)
(36,dataPtr1)
(37,*dataPtr2 = &data)
(38,data)
(39,charData)
(40,&data)
(41,dataPtr1)
(42,1)
(43,data)
(44,"%d")
(45,data)
(46,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^