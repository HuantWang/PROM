-----label-----
1
-----code-----
void CWE197_Numeric_Truncation_Error__int_fscanf_to_short_10_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalTrue)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */
        short shortData = (short)data;
        printShortLine(shortData);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
22,25
22,26
23,24
25,26
28,29
29,30
31,32
31,33
32,33
33,34
33,35
35,36
35,37
37,38
38,39
38,40
39,40
39,41
42,43
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,8,10,14,16,19,24,26,27,30,34,36,40,41,43,47,49
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE197_Numeric_Truncation_Error__int_fscanf_to_short_10_bad(){    int data;    /* Initialize data */    data = -1;    if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
void
CWE197_Numeric_Truncation_Error__int_fscanf_to_short_10_bad()
CWE197_Numeric_Truncation_Error__int_fscanf_to_short_10_bad
{    int data;    /* Initialize data */    data = -1;    if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(globalTrue)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
globalTrue
globalTrue
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        /* POTENTIAL FLAW: Convert data to a short, possibly causing a truncation error */        short shortData = (short)data;        printShortLine(shortData);    }
short shortData = (short)data;
short shortData = (short)data;
short
shortData = (short)data
shortData
= (short)data
(short)data
short
short

data
data
printShortLine(shortData);
printShortLine(shortData)
printShortLine
printShortLine
shortData
shortData
-----joern-----
(10,5,0)
(13,10,0)
(7,22,0)
(9,10,0)
(17,22,0)
(4,11,0)
(3,4,0)
(6,14,0)
(20,7,0)
(14,9,0)
(2,23,0)
(5,22,0)
(5,23,0)
(23,5,0)
(19,4,0)
(8,5,0)
(9,7,0)
(8,4,0)
(4,8,0)
(16,5,0)
(12,8,0)
(0,9,0)
(15,22,0)
(10,9,0)
(10,13,0)
(1,10,0)
(14,7,0)
(0,21,1)
(0,4,1)
(21,5,1)
(10,5,1)
(12,19,1)
(18,14,1)
(10,1,1)
(10,13,1)
(9,10,1)
(3,21,1)
(2,16,1)
(14,9,1)
(6,9,1)
(23,2,1)
(5,23,1)
(14,6,1)
(1,0,1)
(8,12,1)
(4,8,1)
(8,5,1)
(19,3,1)
(3,21,2)
(10,13,2)
(19,21,2)
(14,9,2)
(10,5,2)
(4,21,2)
(12,21,2)
(4,8,2)
(8,5,2)
(8,21,2)
(9,10,2)
(5,23,2)
-----------------------------------
(0,shortData)
(1,data)
(2,1)
(3,stdin)
(4,fscanf(stdin, "%d", &data)
(5,data = -1)
(6,shortData)
(7,)
(8,&data)
(9,shortData = (short)
(10,(short)
(11,)
(12,data)
(13,short)
(14,printShortLine(shortData)
(15,data)
(16,data)
(17,if(globalTrue)
(18,RET)
(19,"%d")
(20,shortData)
(21,globalTrue)
(22,)
(23,-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^