-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_14_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Read data from the console using fscanf() */
        fscanf(stdin, "%d", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
24,27
24,28
25,26
27,28
30,31
31,32
33,34
33,35
33,36
33,37
33,38
33,39
34,35
35,36
35,37
37,38
37,39
39,40
41,42
42,43
42,44
44,45
44,46
44,47
46,47
48,49
50,51
51,52
51,53
51,54
51,55
52,53
54,55
57,58
57,59
60,61
61,62
61,63
62,63
62,64
63,64
65,66
65,67
69,70
69,71
70,71
70,72
71,72
74,75
74,76
75,76
76,77
76,78
76,79
76,80
77,78
79,80
81,82
83,84
85,86
86,87
86,88
87,88
87,89
88,89
90,91
93,94
94,95
94,96
95,96
97,98
-----nextToken-----
2,4,8,10,14,16,20,21,26,28,29,32,36,38,40,43,45,47,49,53,55,56,58,59,64,66,67,68,72,73,78,80,82,84,89,91,92,96,98
-----computeFrom-----
12,13
12,14
18,19
18,20
57,58
57,59
61,62
61,63
65,66
65,67
70,71
70,72
86,87
86,88
-----guardedBy-----
72,91
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_14_bad(){    int data;    /* Initialize data */    data = -1;    if(globalFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_14_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__fscanf_memcpy_14_bad
{    int data;    /* Initialize data */    data = -1;    if(globalFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
if(globalFive==5)    {        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Read data from the console using fscanf() */        fscanf(stdin, "%d", &data);    }
fscanf(stdin, "%d", &data);
fscanf(stdin, "%d", &data)
fscanf
fscanf
stdin
stdin
"%d"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(13,33,0)
(7,33,0)
(27,21,0)
(34,7,0)
(11,39,0)
(27,44,0)
(40,29,0)
(30,27,0)
(47,41,0)
(51,27,0)
(28,33,0)
(4,48,0)
(35,48,0)
(43,4,0)
(45,29,0)
(3,48,0)
(24,21,0)
(19,42,0)
(36,40,0)
(10,27,0)
(7,29,0)
(14,41,0)
(2,25,0)
(31,40,0)
(33,7,0)
(18,21,0)
(4,19,0)
(21,29,0)
(48,3,0)
(38,35,0)
(15,20,0)
(35,20,0)
(29,41,0)
(46,19,0)
(9,12,0)
(36,39,0)
(19,4,0)
(48,41,0)
(50,48,0)
(49,26,0)
(22,29,0)
(17,35,0)
(27,48,0)
(25,48,0)
(26,29,0)
(23,7,0)
(0,12,0)
(35,21,0)
(5,39,0)
(37,36,0)
(6,3,0)
(32,19,0)
(1,25,0)
(26,21,0)
(39,36,0)
(16,29,0)
(20,44,0)
(27,21,1)
(21,18,1)
(27,51,1)
(37,7,1)
(25,48,1)
(6,50,1)
(13,34,1)
(18,24,1)
(36,39,1)
(12,0,1)
(46,32,1)
(11,5,1)
(25,1,1)
(0,9,1)
(19,4,1)
(49,25,1)
(2,40,1)
(28,13,1)
(5,37,1)
(10,25,1)
(17,27,1)
(40,31,1)
(15,35,1)
(26,49,1)
(32,12,1)
(43,46,1)
(30,10,1)
(51,30,1)
(7,33,1)
(4,43,1)
(1,2,1)
(24,12,1)
(39,11,1)
(9,48,1)
(35,48,1)
(31,36,1)
(23,21,1)
(8,26,1)
(34,23,1)
(3,6,1)
(33,28,1)
(26,21,1)
(35,38,1)
(35,21,1)
(27,48,1)
(48,3,1)
(49,20,1)
(20,15,1)
(38,17,1)
(4,48,1)
(24,19,1)
(19,4,2)
(35,48,2)
(43,12,2)
(17,25,2)
(19,12,2)
(30,25,2)
(26,21,2)
(38,25,2)
(4,12,2)
(20,25,2)
(35,21,2)
(36,39,2)
(4,48,2)
(27,48,2)
(35,25,2)
(25,48,2)
(27,21,2)
(27,25,2)
(15,25,2)
(48,3,2)
(7,33,2)
(10,25,2)
(32,12,2)
(46,12,2)
(51,25,2)
-----------------------------------
(0,5)
(1,100)
(2,data)
(3,-1)
(4,&data)
(5,100)
(6,1)
(7,memset(source, \\\'A\\\', 100-1)
(8,RET)
(9,globalFive)
(10,dest)
(11,1)
(12,globalFive==5)
(13,100)
(14,if(globalFive==5)
(15,\\\'\\\\0\\\')
(16,dest)
(17,dest)
(18,"")
(19,fscanf(stdin, "%d", &data)
(20,dest[data] = \\\'\\\\0\\\')
(21,dest[100] = "")
(22,source)
(23,source)
(24,dest)
(25,data < 100)
(26,printLine(dest)
(27,memcpy(dest, source, data)
(28,1)
(29,)
(30,source)
(31,\\\'\\\\0\\\')
(32,stdin)
(33,100-1)
(34,\\\'A\\\')
(35,dest[data])
(36,source[100-1])
(37,source)
(38,data)
(39,100-1)
(40,source[100-1] = \\\'\\\\0\\\')
(41,)
(42,)
(43,data)
(44,)
(45,if (data < 100)
(46,"%d")
(47,data)
(48,data = -1)
(49,dest)
(50,data)
(51,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^