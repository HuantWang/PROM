-----label-----
1
-----code-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_34_bad()
{
    void * data;
    CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_34_unionType myUnion;
    twoIntsStruct dataGoodBuffer;
    int dataBadBuffer = 100;
    dataGoodBuffer.intOne = 0;
    dataGoodBuffer.intTwo = 0;
    /* FLAW: Set data to point to an int */
    data = &dataBadBuffer;
    myUnion.unionFirst = data;
    {
        void * data = myUnion.unionSecond;
        /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */
        printStructLine((twoIntsStruct *)data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
24,25
25,26
25,27
27,28
27,29
29,30
31,32
32,33
32,34
33,34
33,35
34,35
38,39
39,40
39,41
40,41
40,42
41,42
45,46
46,47
46,48
47,48
49,50
50,51
52,53
53,54
53,55
54,55
54,56
55,56
58,59
60,61
60,62
61,62
62,63
62,64
64,65
64,66
64,67
67,68
68,69
68,70
69,70
72,73
73,74
73,75
74,75
76,77
76,78
77,78
77,79
78,79
80,81
82,83
-----nextToken-----
2,4,8,10,11,15,17,21,23,26,28,30,35,36,37,42,43,44,48,51,56,57,59,63,65,66,70,71,75,79,81,83
-----computeFrom-----
32,33
32,34
39,40
39,41
46,47
46,48
53,54
53,55
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
void CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_34_bad(){    void * data;    CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_34_unionType myUnion;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    /* FLAW: Set data to point to an int */    data = &dataBadBuffer;    myUnion.unionFirst = data;    {        void * data = myUnion.unionSecond;        /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */        printStructLine((twoIntsStruct *)data);    }}
void
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_34_bad()
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_34_bad
{    void * data;    CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_34_unionType myUnion;    twoIntsStruct dataGoodBuffer;    int dataBadBuffer = 100;    dataGoodBuffer.intOne = 0;    dataGoodBuffer.intTwo = 0;    /* FLAW: Set data to point to an int */    data = &dataBadBuffer;    myUnion.unionFirst = data;    {        void * data = myUnion.unionSecond;        /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */        printStructLine((twoIntsStruct *)data);    }}
void * data;
void * data;
void
* data
*
data
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_34_unionType myUnion;
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_34_unionType myUnion;
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_34_unionType
CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer__struct_34_unionType
myUnion
myUnion
twoIntsStruct dataGoodBuffer;
twoIntsStruct dataGoodBuffer;
twoIntsStruct
twoIntsStruct
dataGoodBuffer
dataGoodBuffer
int dataBadBuffer = 100;
int dataBadBuffer = 100;
int
dataBadBuffer = 100
dataBadBuffer
= 100
100
dataGoodBuffer.intOne = 0;
dataGoodBuffer.intOne = 0
dataGoodBuffer.intOne
dataGoodBuffer
dataGoodBuffer
intOne
0
dataGoodBuffer.intTwo = 0;
dataGoodBuffer.intTwo = 0
dataGoodBuffer.intTwo
dataGoodBuffer
dataGoodBuffer
intTwo
0
data = &dataBadBuffer;
data = &dataBadBuffer
data
data
&dataBadBuffer
dataBadBuffer
dataBadBuffer
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        void * data = myUnion.unionSecond;        /* POTENTIAL FLAW: Attempt to print a struct when data may be a non-struct data type */        printStructLine((twoIntsStruct *)data);    }
void * data = myUnion.unionSecond;
void * data = myUnion.unionSecond;
void
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
printStructLine((twoIntsStruct *)data);
printStructLine((twoIntsStruct *)data)
printStructLine
printStructLine
(twoIntsStruct *)data
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
data
data
-----joern-----
(15,0,0)
(26,3,0)
(4,26,0)
(10,1,0)
(21,34,0)
(29,27,0)
(3,32,0)
(17,0,0)
(37,10,0)
(24,27,0)
(28,29,0)
(1,30,0)
(5,0,0)
(4,32,0)
(22,29,0)
(26,4,0)
(16,26,0)
(26,16,0)
(32,0,0)
(30,0,0)
(19,30,0)
(7,19,0)
(34,0,0)
(30,19,0)
(12,1,0)
(19,17,0)
(20,0,0)
(27,0,0)
(23,32,0)
(36,34,0)
(8,21,0)
(9,17,0)
(13,17,0)
(1,0,0)
(18,0,0)
(2,21,0)
(6,3,0)
(35,6,0)
(3,6,0)
(14,30,0)
(25,10,0)
(33,26,0)
(38,3,0)
(11,6,0)
(6,35,1)
(25,30,1)
(17,13,1)
(31,4,1)
(19,17,1)
(27,24,1)
(8,2,1)
(26,33,1)
(13,9,1)
(22,17,1)
(11,38,1)
(37,25,1)
(2,27,1)
(29,28,1)
(1,12,1)
(14,34,1)
(24,29,1)
(19,7,1)
(3,6,1)
(10,37,1)
(33,3,1)
(28,22,1)
(34,36,1)
(36,21,1)
(12,10,1)
(4,26,1)
(26,16,1)
(21,8,1)
(35,11,1)
(26,3,1)
(38,1,1)
(1,30,1)
(7,14,1)
(30,19,1)
(3,6,2)
(26,16,2)
(26,3,2)
(1,30,2)
(4,26,2)
(30,19,2)
(19,17,2)
-----------------------------------
(0,)
(1,myUnion.unionFirst = data)
(2,dataGoodBuffer)
(3,* data = myUnion.unionSecond)
(4,printStructLine((twoIntsStruct *)
(5,myUnion)
(6,myUnion.unionSecond)
(7,dataBadBuffer)
(8,intTwo)
(9,dataBadBuffer)
(10,myUnion.unionFirst)
(11,myUnion)
(12,data)
(13,100)
(14,data)
(15,dataBadBuffer)
(16,twoIntsStruct *)
(17,dataBadBuffer = 100)
(18,data)
(19,&dataBadBuffer)
(20,dataGoodBuffer)
(21,dataGoodBuffer.intTwo)
(22,dataGoodBuffer)
(23,data)
(24,0)
(25,myUnion)
(26,(twoIntsStruct *)
(27,dataGoodBuffer.intOne = 0)
(28,intOne)
(29,dataGoodBuffer.intOne)
(30,data = &dataBadBuffer)
(31,RET)
(32,)
(33,data)
(34,dataGoodBuffer.intTwo = 0)
(35,unionSecond)
(36,0)
(37,unionFirst)
(38,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^