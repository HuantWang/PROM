-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_16_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    while(1)
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
        break;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
18,20
19,20
20,21
20,22
20,23
20,24
21,22
23,24
26,27
27,28
30,31
30,32
30,33
30,34
30,35
30,36
31,32
32,33
32,34
34,35
34,36
36,37
38,39
39,40
39,41
41,42
41,43
41,44
43,44
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
66,68
67,68
67,69
68,69
71,72
71,73
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,14,15,17,22,24,25,28,29,33,35,37,40,42,44,46,50,52,53,55,56,61,63,64,65,69,70,75,77,79,81,86,88,89,93,95
-----computeFrom-----
12,13
12,14
54,55
54,56
58,59
58,60
62,63
62,64
67,68
67,69
83,84
83,85
-----guardedBy-----
69,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_16_bad(){    short data;    /* Initialize data */    data = 0;    while(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_memmove_16_bad()
CWE194_Unexpected_Sign_Extension__fscanf_memmove_16_bad
{    short data;    /* Initialize data */    data = 0;    while(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);        break;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
while(1)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);        break;    }
1
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);        break;    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
break;
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(13,38,0)
(2,38,0)
(22,13,0)
(47,20,0)
(37,26,0)
(37,0,0)
(26,18,0)
(4,32,0)
(3,12,0)
(25,36,0)
(43,36,0)
(39,35,0)
(9,37,0)
(27,31,0)
(6,26,0)
(33,18,0)
(8,42,0)
(34,0,0)
(12,26,0)
(37,39,0)
(21,38,0)
(44,39,0)
(36,25,0)
(20,10,0)
(38,18,0)
(28,42,0)
(12,35,0)
(46,26,0)
(12,0,0)
(10,20,0)
(41,18,0)
(40,38,0)
(1,0,0)
(7,36,0)
(13,0,0)
(19,25,0)
(45,21,0)
(31,21,0)
(25,40,0)
(0,38,0)
(24,12,0)
(20,32,0)
(21,31,0)
(29,38,0)
(17,10,0)
(15,37,0)
(11,20,0)
(48,12,0)
(5,38,0)
(16,31,0)
(23,21,0)
(10,26,0)
(49,40,0)
(42,26,0)
(7,19,1)
(20,10,1)
(47,11,1)
(45,23,1)
(10,17,1)
(49,25,1)
(36,43,1)
(46,6,1)
(43,7,1)
(34,4,1)
(0,1,1)
(26,46,1)
(39,44,1)
(37,9,1)
(37,26,1)
(22,42,1)
(27,45,1)
(9,15,1)
(40,49,1)
(12,48,1)
(31,16,1)
(42,28,1)
(10,26,1)
(23,0,1)
(12,26,1)
(12,0,1)
(11,14,1)
(15,12,1)
(19,21,1)
(22,39,1)
(16,27,1)
(42,26,1)
(13,0,1)
(1,34,1)
(25,36,1)
(14,26,1)
(13,22,1)
(37,0,1)
(24,3,1)
(28,8,1)
(3,42,1)
(21,31,1)
(8,40,1)
(17,47,1)
(4,20,1)
(48,24,1)
(44,37,1)
(30,13,1)
(34,14,1)
(48,42,2)
(20,10,2)
(39,42,2)
(10,14,2)
(10,26,2)
(12,0,2)
(15,42,2)
(21,31,2)
(37,42,2)
(37,26,2)
(44,42,2)
(42,26,2)
(11,14,2)
(24,42,2)
(3,42,2)
(12,26,2)
(4,14,2)
(13,0,2)
(47,14,2)
(12,42,2)
(20,14,2)
(37,0,2)
(25,36,2)
(17,14,2)
(9,42,2)
-----------------------------------
(0,dest[100] = "")
(1,"")
(2,dest)
(3,dest)
(4,break;)
(5,if (data < 100)
(6,data)
(7,100)
(8,data)
(9,data)
(10,&data)
(11,stdin)
(12,memmove(dest, source, data)
(13,printLine(dest)
(14,1)
(15,dest)
(16,1)
(17,data)
(18,)
(19,source)
(20,fscanf (stdin, "%hd", &data)
(21,memset(source, \\\'A\\\', 100-1)
(22,dest)
(23,source)
(24,source)
(25,source[100-1])
(26,data = 0)
(27,100)
(28,100)
(29,source)
(30,RET)
(31,100-1)
(32,)
(33,data)
(34,dest)
(35,)
(36,100-1)
(37,dest[data])
(38,)
(39,dest[data] = \\\'\\\\0\\\')
(40,source[100-1] = \\\'\\\\0\\\')
(41,while(1)
(42,data < 100)
(43,1)
(44,\\\'\\\\0\\\')
(45,\\\'A\\\')
(46,0)
(47,"%hd")
(48,data)
(49,\\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^