-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_02_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(1)
    {
        /* FLAW: Use a random value that could be less than 0 */
        data = (short)RAND32();
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            strncpy(dest, source, data);
            dest[data] = '\0'; /* strncpy() does not always NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
18,19
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
27,28
28,29
30,31
30,32
30,33
30,34
30,35
30,36
31,32
32,33
32,34
34,35
34,36
36,37
38,39
39,40
39,41
41,42
41,43
41,44
43,44
45,46
47,48
48,49
48,50
48,51
48,52
49,50
51,52
54,55
54,56
57,58
58,59
58,60
59,60
59,61
60,61
62,63
62,64
66,67
66,68
67,68
67,69
68,69
71,72
71,73
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
84,86
85,86
87,88
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,14,15,17,22,25,26,29,33,35,37,40,42,44,46,50,52,53,55,56,61,63,64,65,69,70,75,77,79,81,86,88,89,93,95
-----computeFrom-----
12,13
12,14
20,21
20,22
54,55
54,56
58,59
58,60
62,63
62,64
67,68
67,69
83,84
83,85
-----guardedBy-----
69,88
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__rand_strncpy_02_bad(){    short data;    /* Initialize data */    data = 0;    if(1)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__rand_strncpy_02_bad()
CWE194_Unexpected_Sign_Extension__rand_strncpy_02_bad
{    short data;    /* Initialize data */    data = 0;    if(1)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(1)    {        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }
1
{        /* FLAW: Use a random value that could be less than 0 */        data = (short)RAND32();    }
data = (short)RAND32();
data = (short)RAND32()
data
data
(short)RAND32()
short
short

RAND32()
RAND32
RAND32
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            strncpy(dest, source, data);            dest[data] = '\0'; /* strncpy() does not always NULL terminate */        }
strncpy(dest, source, data);
strncpy(dest, source, data)
strncpy
strncpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(13,43,0)
(23,3,0)
(44,45,0)
(25,3,0)
(20,30,0)
(40,29,0)
(41,42,0)
(39,22,0)
(26,22,0)
(21,22,0)
(46,33,0)
(8,4,0)
(43,45,0)
(29,12,0)
(33,46,0)
(42,7,0)
(11,21,0)
(34,7,0)
(17,33,0)
(30,29,0)
(16,42,0)
(21,3,0)
(36,3,0)
(1,7,0)
(28,45,0)
(5,36,0)
(43,7,0)
(30,37,0)
(32,29,0)
(2,45,0)
(42,45,0)
(48,4,0)
(42,29,0)
(9,40,0)
(24,31,0)
(46,36,0)
(18,42,0)
(37,30,0)
(45,3,0)
(29,30,0)
(47,43,0)
(42,35,0)
(14,46,0)
(19,21,0)
(7,4,0)
(10,2,0)
(2,3,0)
(31,35,0)
(27,33,0)
(40,7,0)
(30,20,0)
(0,3,0)
(38,40,0)
(43,29,0)
(22,21,0)
(3,4,0)
(43,31,0)
(29,30,1)
(2,10,1)
(42,18,1)
(30,37,1)
(43,7,1)
(45,44,1)
(22,39,1)
(30,20,1)
(11,45,1)
(33,27,1)
(40,9,1)
(43,45,1)
(21,22,1)
(1,34,1)
(40,29,1)
(43,13,1)
(43,29,1)
(10,31,1)
(2,45,1)
(42,29,1)
(38,36,1)
(26,19,1)
(42,7,1)
(5,46,1)
(46,33,1)
(18,16,1)
(6,2,1)
(13,47,1)
(32,15,1)
(40,7,1)
(28,29,1)
(19,11,1)
(44,28,1)
(7,1,1)
(47,42,1)
(28,15,1)
(16,41,1)
(15,7,1)
(39,26,1)
(24,43,1)
(9,38,1)
(14,21,1)
(36,5,1)
(31,24,1)
(20,32,1)
(27,17,1)
(17,14,1)
(42,45,1)
(41,40,1)
(10,40,1)
(42,45,2)
(32,15,2)
(13,40,2)
(46,33,2)
(30,20,2)
(42,29,2)
(24,40,2)
(43,7,2)
(43,29,2)
(29,15,2)
(31,40,2)
(40,29,2)
(43,45,2)
(18,40,2)
(43,40,2)
(30,37,2)
(20,15,2)
(42,40,2)
(16,40,2)
(2,45,2)
(29,30,2)
(21,22,2)
(47,40,2)
(40,7,2)
(30,15,2)
(41,40,2)
(42,7,2)
-----------------------------------
(0,dest)
(1,0)
(2,printLine(dest)
(3,)
(4,)
(5,\\\'\\\\0\\\')
(6,RET)
(7,data = 0)
(8,if(1)
(9,100)
(10,dest)
(11,source)
(12,)
(13,data)
(14,source)
(15,1)
(16,source)
(17,100)
(18,data)
(19,\\\'A\\\')
(20,RAND32()
(21,memset(source, \\\'A\\\', 100-1)
(22,100-1)
(23,source)
(24,\\\'\\\\0\\\')
(25,if (data < 100)
(26,100)
(27,1)
(28,dest)
(29,data = (short)
(30,(short)
(31,dest[data] = \\\'\\\\0\\\')
(32,data)
(33,100-1)
(34,data)
(35,)
(36,source[100-1] = \\\'\\\\0\\\')
(37,short)
(38,data)
(39,1)
(40,data < 100)
(41,dest)
(42,strncpy(dest, source, data)
(43,dest[data])
(44,"")
(45,dest[100] = "")
(46,source[100-1])
(47,dest)
(48,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^