-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_17_bad()
{
    int i;
    short data;
    /* Initialize data */
    data = 0;
    for(i = 0; i < 1; i++)
    {
        /* FLAW: Use a value input from the console using fscanf() */
        fscanf (stdin, "%hd", &data);
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memmove(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
16,17
17,18
17,19
18,19
21,22
21,23
21,24
21,25
22,23
23,24
23,25
24,25
27,28
27,29
28,29
31,32
32,33
34,35
35,36
36,37
36,38
36,39
36,40
37,38
39,40
42,43
43,44
45,46
45,47
45,48
45,49
45,50
45,51
46,47
47,48
47,49
49,50
49,51
51,52
53,54
54,55
54,56
56,57
56,58
56,59
58,59
60,61
62,63
63,64
63,65
63,66
63,67
64,65
66,67
69,70
69,71
72,73
73,74
73,75
74,75
74,76
75,76
77,78
77,79
81,82
81,83
82,83
82,84
83,84
86,87
86,88
87,88
88,89
88,90
88,91
88,92
89,90
91,92
93,94
95,96
97,98
98,99
98,100
99,100
99,101
100,101
102,103
105,106
106,107
106,108
107,108
109,110
-----nextToken-----
2,4,8,10,13,15,19,20,25,26,29,30,33,38,40,41,44,48,50,52,55,57,59,61,65,67,68,70,71,76,78,79,80,84,85,90,92,94,96,101,103,104,108,110
-----computeFrom-----
17,18
17,19
23,24
23,25
27,28
27,29
69,70
69,71
73,74
73,75
77,78
77,79
82,83
82,84
98,99
98,100
-----guardedBy-----
84,103
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__fscanf_memmove_17_bad(){    int i;    short data;    /* Initialize data */    data = 0;    for(i = 0; i < 1; i++)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__fscanf_memmove_17_bad()
CWE194_Unexpected_Sign_Extension__fscanf_memmove_17_bad
{    int i;    short data;    /* Initialize data */    data = 0;    for(i = 0; i < 1; i++)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int i;
int i;
int
i
i
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
for(i = 0; i < 1; i++)    {        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* FLAW: Use a value input from the console using fscanf() */        fscanf (stdin, "%hd", &data);    }
fscanf (stdin, "%hd", &data);
fscanf (stdin, "%hd", &data)
fscanf
fscanf
stdin
stdin
"%hd"
&data
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memmove(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(29,27,0)
(51,31,0)
(10,20,0)
(24,23,0)
(4,19,0)
(34,35,0)
(35,17,0)
(15,20,0)
(26,31,0)
(53,45,0)
(6,35,0)
(47,44,0)
(4,31,0)
(53,19,0)
(23,43,0)
(31,20,0)
(44,12,0)
(54,3,0)
(21,19,0)
(0,31,0)
(45,46,0)
(8,31,0)
(22,28,0)
(42,46,0)
(43,8,0)
(13,20,0)
(30,44,0)
(40,4,0)
(43,23,0)
(48,23,0)
(19,31,0)
(14,20,0)
(42,19,0)
(25,14,0)
(36,53,0)
(18,43,0)
(16,14,0)
(6,14,0)
(42,14,0)
(5,3,0)
(32,12,0)
(41,12,0)
(56,19,0)
(35,6,0)
(2,28,0)
(1,45,0)
(52,41,0)
(49,42,0)
(39,8,0)
(37,42,0)
(33,12,0)
(27,31,0)
(11,42,0)
(27,28,0)
(7,53,0)
(50,6,0)
(9,35,0)
(53,14,0)
(28,27,0)
(3,14,0)
(38,27,0)
(35,6,1)
(3,54,1)
(43,23,1)
(56,21,1)
(8,39,1)
(18,27,1)
(7,42,1)
(5,8,1)
(41,52,1)
(30,41,1)
(36,7,1)
(44,12,1)
(50,9,1)
(4,19,1)
(24,48,1)
(53,14,1)
(40,45,1)
(37,49,1)
(45,1,1)
(41,12,1)
(39,43,1)
(44,47,1)
(49,3,1)
(14,25,1)
(53,36,1)
(21,44,1)
(48,18,1)
(42,14,1)
(9,34,1)
(34,44,1)
(25,16,1)
(42,11,1)
(1,53,1)
(27,28,1)
(38,19,1)
(42,19,1)
(55,4,1)
(12,33,1)
(19,56,1)
(32,14,1)
(52,35,1)
(47,30,1)
(40,3,1)
(28,2,1)
(4,40,1)
(30,12,1)
(33,32,1)
(11,37,1)
(22,29,1)
(53,19,1)
(2,22,1)
(3,14,1)
(23,24,1)
(29,38,1)
(54,5,1)
(6,14,1)
(6,50,1)
(35,44,2)
(6,14,2)
(37,3,2)
(7,3,2)
(42,14,2)
(53,19,2)
(47,44,2)
(4,19,2)
(30,44,2)
(1,3,2)
(41,44,2)
(34,44,2)
(35,6,2)
(43,23,2)
(53,14,2)
(42,3,2)
(9,44,2)
(44,12,2)
(11,3,2)
(53,3,2)
(6,44,2)
(41,12,2)
(36,3,2)
(27,28,2)
(49,3,2)
(44,44,2)
(3,14,2)
(52,44,2)
(42,19,2)
(50,44,2)
(45,3,2)
-----------------------------------
(0,if (data < 100)
(1,\\\'\\\\0\\\')
(2,1)
(3,data < 100)
(4,printLine(dest)
(5,data)
(6,&data)
(7,dest)
(8,source[100-1] = \\\'\\\\0\\\')
(9,"%hd")
(10,data)
(11,data)
(12,i = 0)
(13,i)
(14,data = 0)
(15,for(i = 0; i < 1; i++)
(16,data)
(17,)
(18,source)
(19,dest[100] = "")
(20,)
(21,dest)
(22,100)
(23,100-1)
(24,1)
(25,0)
(26,dest)
(27,memset(source, \\\'A\\\', 100-1)
(28,100-1)
(29,\\\'A\\\')
(30,i)
(31,)
(32,i)
(33,0)
(34,stdin)
(35,fscanf (stdin, "%hd", &data)
(36,data)
(37,source)
(38,source)
(39,\\\'\\\\0\\\')
(40,dest)
(41,i++)
(42,memmove(dest, source, data)
(43,source[100-1])
(44,i < 1)
(45,dest[data] = \\\'\\\\0\\\')
(46,)
(47,1)
(48,100)
(49,dest)
(50,data)
(51,source)
(52,i)
(53,dest[data])
(54,100)
(55,RET)
(56,"")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^