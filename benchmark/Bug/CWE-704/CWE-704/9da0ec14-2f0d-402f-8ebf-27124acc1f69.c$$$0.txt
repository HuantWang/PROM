-----label-----
1
-----code-----
void CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_42_bad()
{
    int data;
    /* Initialize data */
    data = -1;
    data = badSource(data);
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign conversion could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
22,23
24,25
26,27
26,28
26,29
26,30
26,31
26,32
27,28
28,29
28,30
30,31
30,32
32,33
34,35
35,36
35,37
37,38
37,39
37,40
39,40
41,42
43,44
44,45
44,46
44,47
44,48
45,46
47,48
50,51
50,52
53,54
54,55
54,56
55,56
55,57
56,57
58,59
58,60
62,63
62,64
63,64
63,65
64,65
67,68
67,69
68,69
69,70
69,71
69,72
69,73
70,71
72,73
74,75
76,77
78,79
79,80
79,81
80,81
80,82
81,82
83,84
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,14,16,20,23,25,29,31,33,36,38,40,42,46,48,49,51,52,57,59,60,61,65,66,71,73,75,77,82,84,85,89,91
-----computeFrom-----
12,13
12,14
18,19
18,20
50,51
50,52
54,55
54,56
58,59
58,60
63,64
63,65
79,80
79,81
-----guardedBy-----
65,84
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_42_bad(){    int data;    /* Initialize data */    data = -1;    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_42_bad()
CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_42_bad
{    int data;    /* Initialize data */    data = -1;    data = badSource(data);    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign conversion could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(25,36,0)
(23,44,0)
(44,23,0)
(14,36,0)
(9,43,0)
(18,2,0)
(10,21,0)
(29,44,0)
(28,20,0)
(21,40,0)
(15,1,0)
(42,36,0)
(33,36,0)
(41,22,0)
(12,20,0)
(2,40,0)
(37,33,0)
(8,5,0)
(30,27,0)
(26,42,0)
(40,2,0)
(0,40,0)
(32,22,0)
(40,3,0)
(43,33,0)
(39,36,0)
(5,22,0)
(17,40,0)
(36,3,0)
(0,1,0)
(38,30,0)
(30,1,0)
(31,5,0)
(42,1,0)
(24,27,0)
(11,0,0)
(16,21,0)
(6,30,0)
(0,24,0)
(1,36,0)
(34,23,0)
(35,1,0)
(2,23,0)
(43,20,0)
(45,24,0)
(22,36,0)
(19,3,0)
(30,40,0)
(13,30,0)
(4,0,0)
(22,5,0)
(20,43,0)
(23,3,0)
(42,26,1)
(43,20,1)
(7,42,1)
(24,45,1)
(30,13,1)
(30,40,1)
(42,1,1)
(45,0,1)
(30,1,1)
(22,5,1)
(10,33,1)
(31,8,1)
(15,40,1)
(1,35,1)
(37,43,1)
(16,10,1)
(35,15,1)
(20,12,1)
(23,44,1)
(18,17,1)
(13,38,1)
(44,29,1)
(2,18,1)
(6,21,1)
(12,28,1)
(8,41,1)
(21,40,1)
(2,23,1)
(41,32,1)
(0,4,1)
(0,1,1)
(9,22,1)
(26,21,1)
(38,6,1)
(40,2,1)
(29,34,1)
(0,40,1)
(4,11,1)
(17,23,1)
(33,37,1)
(28,9,1)
(5,31,1)
(11,30,1)
(21,16,1)
(26,24,1)
(32,1,1)
(22,5,2)
(45,21,2)
(24,21,2)
(42,1,2)
(40,2,2)
(4,21,2)
(30,40,2)
(0,21,2)
(0,40,2)
(38,21,2)
(2,23,2)
(23,44,2)
(30,21,2)
(6,21,2)
(43,20,2)
(0,1,2)
(21,40,2)
(11,21,2)
(13,21,2)
(30,1,2)
-----------------------------------
(0,dest[data])
(1,dest[100] = "")
(2,badSource(data)
(3,)
(4,data)
(5,100-1)
(6,dest)
(7,RET)
(8,100)
(9,source)
(10,data)
(11,dest)
(12,1)
(13,data)
(14,source)
(15,dest)
(16,100)
(17,data)
(18,data)
(19,data)
(20,100-1)
(21,data < 100)
(22,memset(source, \\\'A\\\', 100-1)
(23,data = -1)
(24,dest[data] = \\\'\\\\0\\\')
(25,dest)
(26,dest)
(27,)
(28,100)
(29,1)
(30,memcpy(dest, source, data)
(31,1)
(32,source)
(33,source[100-1] = \\\'\\\\0\\\')
(34,data)
(35,"")
(36,)
(37,\\\'\\\\0\\\')
(38,source)
(39,if (data < 100)
(40,data = badSource(data)
(41,\\\'A\\\')
(42,printLine(dest)
(43,source[100-1])
(44,-1)
(45,\\\'\\\\0\\\')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^