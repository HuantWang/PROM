-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_31_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    /* FLAW: Use a negative number */
    data = -1;
    {
        short dataCopy = data;
        short data = dataCopy;
        {
            char source[100];
            char dest[100] = "";
            memset(source, 'A', 100-1);
            source[100-1] = '\0';
            if (data < 100)
            {
                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
                 * the sign extension could result in a very large number */
                memmove(dest, source, data);
                dest[data] = '\0'; /* NULL terminate */
            }
            printLine(dest);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
17,18
17,19
18,19
20,21
22,23
22,24
22,25
23,24
24,25
24,26
26,27
26,28
28,29
29,30
31,32
32,33
32,34
34,35
34,36
36,37
37,38
39,40
39,41
39,42
39,43
39,44
39,45
40,41
41,42
41,43
43,44
43,45
45,46
47,48
48,49
48,50
50,51
50,52
50,53
52,53
54,55
56,57
57,58
57,59
57,60
57,61
58,59
60,61
63,64
63,65
66,67
67,68
67,69
68,69
68,70
69,70
71,72
71,73
75,76
75,77
76,77
76,78
77,78
80,81
80,82
81,82
82,83
82,84
82,85
82,86
83,84
85,86
87,88
89,90
91,92
92,93
92,94
93,94
93,95
94,95
96,97
99,100
100,101
100,102
101,102
103,104
-----nextToken-----
2,4,8,10,14,15,19,21,25,27,30,33,35,38,42,44,46,49,51,53,55,59,61,62,64,65,70,72,73,74,78,79,84,86,88,90,95,97,98,102,104
-----computeFrom-----
12,13
12,14
17,18
17,19
63,64
63,65
67,68
67,69
71,72
71,73
76,77
76,78
92,93
92,94
-----guardedBy-----
78,97
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_memmove_31_bad(){    short data;    /* Initialize data */    data = 0;    /* FLAW: Use a negative number */    data = -1;    {        short dataCopy = data;        short data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign extension could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }    }}
void
CWE194_Unexpected_Sign_Extension__negative_memmove_31_bad()
CWE194_Unexpected_Sign_Extension__negative_memmove_31_bad
{    short data;    /* Initialize data */    data = 0;    /* FLAW: Use a negative number */    data = -1;    {        short dataCopy = data;        short data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign extension could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
data = -1;
data = -1
data
data
-1
1
{        short dataCopy = data;        short data = dataCopy;        {            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign extension could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }    }
short dataCopy = data;
short dataCopy = data;
short
dataCopy = data
dataCopy
= data
data
data
short data = dataCopy;
short data = dataCopy;
short
data = dataCopy
data
= dataCopy
dataCopy
dataCopy
{            char source[100];            char dest[100] = "";            memset(source, 'A', 100-1);            source[100-1] = '\0';            if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign extension could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }            printLine(dest);        }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)            {                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign extension could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }
data < 100
data
data
100
{                /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,                 * the sign extension could result in a very large number */                memmove(dest, source, data);                dest[data] = '\0'; /* NULL terminate */            }
memmove(dest, source, data);
memmove(dest, source, data)
memmove
memmove
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(41,14,0)
(8,7,0)
(33,31,0)
(2,10,0)
(15,35,0)
(12,16,0)
(21,12,0)
(25,16,0)
(42,19,0)
(34,38,0)
(40,46,0)
(51,43,0)
(45,43,0)
(40,10,0)
(0,16,0)
(16,47,0)
(28,40,0)
(35,47,0)
(49,31,0)
(29,16,0)
(3,2,0)
(17,31,0)
(17,47,0)
(6,35,0)
(26,17,0)
(48,17,0)
(18,45,0)
(24,46,0)
(44,2,0)
(1,47,0)
(7,14,0)
(4,35,0)
(20,40,0)
(31,38,0)
(9,16,0)
(3,46,0)
(37,40,0)
(11,7,0)
(50,46,0)
(40,35,0)
(36,6,0)
(19,38,0)
(14,7,0)
(46,16,0)
(5,3,0)
(43,45,0)
(47,38,0)
(43,0,0)
(27,33,0)
(23,0,0)
(39,47,0)
(52,6,0)
(30,19,0)
(13,3,0)
(32,45,0)
(53,14,0)
(12,46,0)
(3,35,0)
(31,33,0)
(35,17,0)
(7,16,0)
(19,30,1)
(51,7,1)
(13,40,1)
(15,4,1)
(33,27,1)
(14,41,1)
(12,46,1)
(12,21,1)
(52,0,1)
(3,46,1)
(0,23,1)
(53,11,1)
(43,45,1)
(8,46,1)
(17,26,1)
(2,44,1)
(46,24,1)
(49,19,1)
(21,6,1)
(3,35,1)
(7,14,1)
(4,17,1)
(23,43,1)
(40,37,1)
(50,35,1)
(32,18,1)
(40,46,1)
(45,32,1)
(5,13,1)
(6,36,1)
(40,35,1)
(31,33,1)
(18,51,1)
(44,3,1)
(20,6,1)
(26,48,1)
(30,42,1)
(35,17,1)
(24,50,1)
(48,31,1)
(11,8,1)
(35,15,1)
(22,12,1)
(36,52,1)
(41,53,1)
(27,49,1)
(6,35,1)
(21,2,1)
(28,20,1)
(17,31,1)
(37,28,1)
(3,5,1)
(40,6,2)
(7,14,2)
(12,46,2)
(6,35,2)
(2,6,2)
(3,46,2)
(17,31,2)
(20,6,2)
(3,6,2)
(31,33,2)
(40,46,2)
(3,35,2)
(37,6,2)
(43,45,2)
(40,35,2)
(13,6,2)
(35,17,2)
(28,6,2)
(5,6,2)
(44,6,2)
-----------------------------------
(0,source[100-1] = \\\'\\\\0\\\')
(1,dataCopy)
(2,dest[data] = \\\'\\\\0\\\')
(3,dest[data])
(4,data)
(5,data)
(6,data < 100)
(7,memset(source, \\\'A\\\', 100-1)
(8,source)
(9,dest)
(10,)
(11,\\\'A\\\')
(12,printLine(dest)
(13,dest)
(14,100-1)
(15,dataCopy)
(16,)
(17,dataCopy = data)
(18,100)
(19,data = 0)
(20,dest)
(21,dest)
(22,RET)
(23,\\\'\\\\0\\\')
(24,"")
(25,if (data < 100)
(26,data)
(27,1)
(28,source)
(29,source)
(30,0)
(31,data = -1)
(32,1)
(33,-1)
(34,data)
(35,data = dataCopy)
(36,100)
(37,data)
(38,)
(39,data)
(40,memmove(dest, source, data)
(41,1)
(42,data)
(43,source[100-1])
(44,\\\'\\\\0\\\')
(45,100-1)
(46,dest[100] = "")
(47,)
(48,dataCopy)
(49,data)
(50,dest)
(51,source)
(52,data)
(53,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^