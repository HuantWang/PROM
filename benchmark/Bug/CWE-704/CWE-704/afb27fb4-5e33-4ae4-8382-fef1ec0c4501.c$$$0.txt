-----label-----
1
-----code-----
void CWE194_Unexpected_Sign_Extension__negative_memcpy_03_bad()
{
    short data;
    /* Initialize data */
    data = 0;
    if(5==5)
    {
        /* FLAW: Use a negative number */
        data = -1;
    }
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,
             * the sign extension could result in a very large number */
            memcpy(dest, source, data);
            dest[data] = '\0'; /* NULL terminate */
        }
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
27,31
27,32
27,33
28,29
29,30
29,31
31,32
31,33
33,34
35,36
36,37
36,38
38,39
38,40
38,41
40,41
42,43
44,45
45,46
45,47
45,48
45,49
46,47
48,49
51,52
51,53
54,55
55,56
55,57
56,57
56,58
57,58
59,60
59,61
63,64
63,65
64,65
64,66
65,66
68,69
68,70
69,70
70,71
70,72
70,73
70,74
71,72
73,74
75,76
77,78
79,80
80,81
80,82
81,82
81,83
82,83
84,85
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,30,32,34,37,39,41,43,47,49,50,52,53,58,60,61,62,66,67,72,74,76,78,83,85,86,90,92
-----computeFrom-----
12,13
12,14
17,18
17,19
22,23
22,24
51,52
51,53
55,56
55,57
59,60
59,61
64,65
64,66
80,81
80,82
-----guardedBy-----
66,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE194_Unexpected_Sign_Extension__negative_memcpy_03_bad(){    short data;    /* Initialize data */    data = 0;    if(5==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
void
CWE194_Unexpected_Sign_Extension__negative_memcpy_03_bad()
CWE194_Unexpected_Sign_Extension__negative_memcpy_03_bad
{    short data;    /* Initialize data */    data = 0;    if(5==5)    {        /* FLAW: Use a negative number */        data = -1;    }    {        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }}
short data;
short data;
short
data
data
data = 0;
data = 0
data
data
0
if(5==5)    {        /* FLAW: Use a negative number */        data = -1;    }
5==5
5
5
{        /* FLAW: Use a negative number */        data = -1;    }
data = -1;
data = -1
data
data
-1
1
{        char source[100];        char dest[100] = "";        memset(source, 'A', 100-1);        source[100-1] = '\0';        if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }        printLine(dest);    }
char source[100];
char source[100];
char
source[100]
source
[100]
100
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
memset(source, 'A', 100-1);
memset(source, 'A', 100-1)
memset
memset
source
source
'A'
100-1
100
1
source[100-1] = '\0';
source[100-1] = '\0'
source[100-1]
source
source
100-1
100
1
'\0'
if (data < 100)        {            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
data < 100
data
data
100
{            /* POTENTIAL FLAW: data is interpreted as an unsigned int - if its value is negative,             * the sign extension could result in a very large number */            memcpy(dest, source, data);            dest[data] = '\0'; /* NULL terminate */        }
memcpy(dest, source, data);
memcpy(dest, source, data)
memcpy
memcpy
dest
dest
source
source
data
data
dest[data] = '\0';
dest[data] = '\0'
dest[data]
dest
dest
data
data
'\0'
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(16,49,0)
(38,21,0)
(37,12,0)
(32,21,0)
(8,13,0)
(0,28,0)
(15,24,0)
(2,16,0)
(4,48,0)
(43,1,0)
(42,27,0)
(12,27,0)
(17,16,0)
(16,46,0)
(5,1,0)
(11,28,0)
(39,30,0)
(25,24,0)
(18,44,0)
(20,28,0)
(30,28,0)
(34,46,0)
(40,28,0)
(22,49,0)
(31,30,0)
(13,1,0)
(30,21,0)
(49,44,0)
(29,15,0)
(27,42,0)
(28,44,0)
(9,15,0)
(13,49,0)
(13,27,0)
(35,34,0)
(16,27,0)
(27,23,0)
(14,27,0)
(1,28,0)
(13,34,0)
(45,28,0)
(6,42,0)
(41,12,0)
(12,49,0)
(19,20,0)
(47,11,0)
(24,20,0)
(33,44,0)
(36,16,0)
(10,13,0)
(7,48,0)
(3,49,0)
(11,1,0)
(16,1,0)
(24,15,0)
(21,30,0)
(12,41,1)
(31,1,1)
(5,48,1)
(24,15,1)
(9,29,1)
(27,42,1)
(34,35,1)
(13,49,1)
(38,39,1)
(13,1,1)
(7,49,1)
(11,47,1)
(2,36,1)
(41,37,1)
(11,1,1)
(47,34,1)
(16,1,1)
(43,5,1)
(5,27,1)
(20,19,1)
(17,12,1)
(15,9,1)
(39,31,1)
(30,21,1)
(49,22,1)
(1,43,1)
(10,16,1)
(4,7,1)
(6,14,1)
(21,32,1)
(42,6,1)
(36,17,1)
(37,20,1)
(13,27,1)
(16,49,1)
(25,30,1)
(12,49,1)
(16,2,1)
(16,27,1)
(8,10,1)
(29,25,1)
(35,13,1)
(22,3,1)
(47,12,1)
(32,38,1)
(12,27,1)
(13,8,1)
(14,48,1)
(26,11,1)
(48,4,1)
(19,24,1)
(13,49,2)
(6,48,2)
(36,12,2)
(16,49,2)
(12,27,2)
(11,1,2)
(24,15,2)
(13,27,2)
(42,48,2)
(27,42,2)
(34,12,2)
(16,1,2)
(12,49,2)
(13,12,2)
(8,12,2)
(30,21,2)
(35,12,2)
(2,12,2)
(14,48,2)
(27,48,2)
(16,27,2)
(13,1,2)
(16,12,2)
(10,12,2)
(17,12,2)
-----------------------------------
(0,if (data < 100)
(1,dest[100] = "")
(2,data)
(3,data)
(4,5)
(5,dest)
(6,1)
(7,5)
(8,data)
(9,1)
(10,dest)
(11,printLine(dest)
(12,data < 100)
(13,dest[data])
(14,data)
(15,100-1)
(16,memcpy(dest, source, data)
(17,dest)
(18,data)
(19,\\\'\\\\0\\\')
(20,source[100-1] = \\\'\\\\0\\\')
(21,100-1)
(22,0)
(23,)
(24,source[100-1])
(25,source)
(26,RET)
(27,data = -1)
(28,)
(29,100)
(30,memset(source, \\\'A\\\', 100-1)
(31,source)
(32,1)
(33,if(5==5)
(34,dest[data] = \\\'\\\\0\\\')
(35,\\\'\\\\0\\\')
(36,source)
(37,data)
(38,100)
(39,\\\'A\\\')
(40,source)
(41,100)
(42,-1)
(43,"")
(44,)
(45,dest)
(46,)
(47,dest)
(48,5==5)
(49,data = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^