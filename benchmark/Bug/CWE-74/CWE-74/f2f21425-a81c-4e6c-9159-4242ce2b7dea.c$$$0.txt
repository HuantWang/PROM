-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execl_03_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(5==5)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* execl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
83,85
83,86
83,87
83,88
83,89
84,85
86,87
88,89
90,91
92,93
94,95
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,85,87,89,91,93,95
-----computeFrom-----
23,24
23,25
29,30
29,31
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execl_03_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execl_03_bad()
CWE78_OS_Command_Injection__char_environment_execl_03_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
5==5
5
5
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(39,33,0)
(15,42,0)
(28,38,0)
(34,22,0)
(14,22,0)
(40,43,0)
(8,33,0)
(43,38,0)
(31,33,0)
(38,28,0)
(3,10,0)
(26,29,0)
(31,42,0)
(1,10,0)
(25,20,0)
(10,1,0)
(2,10,0)
(13,12,0)
(37,26,0)
(5,22,0)
(27,22,0)
(10,38,0)
(9,38,0)
(19,1,0)
(41,26,0)
(30,33,0)
(28,31,0)
(44,36,0)
(23,42,0)
(20,36,0)
(36,26,0)
(45,1,0)
(4,22,0)
(0,12,0)
(1,24,0)
(38,26,0)
(16,44,0)
(42,33,0)
(35,19,0)
(1,19,0)
(21,31,0)
(10,31,0)
(6,43,0)
(11,44,0)
(19,43,0)
(1,36,0)
(22,33,0)
(7,36,0)
(46,26,0)
(32,31,0)
(36,20,0)
(43,19,0)
(17,28,0)
(42,23,1)
(20,25,1)
(14,5,1)
(3,44,1)
(28,17,1)
(1,10,1)
(1,19,1)
(1,36,1)
(7,38,1)
(0,13,1)
(2,3,1)
(13,31,1)
(28,31,1)
(10,2,1)
(38,28,1)
(35,45,1)
(19,43,1)
(40,6,1)
(32,42,1)
(10,38,1)
(4,12,1)
(4,44,1)
(44,36,1)
(12,0,1)
(6,35,1)
(18,22,1)
(16,36,1)
(9,12,1)
(31,42,1)
(25,7,1)
(21,32,1)
(31,21,1)
(43,40,1)
(27,34,1)
(11,16,1)
(36,20,1)
(5,4,1)
(17,9,1)
(43,38,1)
(4,1,1)
(22,27,1)
(44,11,1)
(45,10,1)
(23,15,1)
(34,14,1)
(10,31,1)
(10,44,2)
(1,44,2)
(17,12,2)
(43,38,2)
(45,44,2)
(40,44,2)
(2,44,2)
(6,44,2)
(19,43,2)
(38,28,2)
(28,12,2)
(3,44,2)
(35,44,2)
(44,12,2)
(25,12,2)
(1,10,2)
(38,12,2)
(1,36,2)
(1,19,2)
(10,38,2)
(28,31,2)
(20,12,2)
(19,44,2)
(43,44,2)
(10,31,2)
(36,20,2)
(44,36,2)
(7,12,2)
(9,12,2)
(31,42,2)
(16,12,2)
(36,12,2)
(11,12,2)
-----------------------------------
(0,5)
(1,strncat(data+dataLen, environment, 100-dataLen-1)
(2,dataLen)
(3,data)
(4,COMMAND_INT_PATH)
(5,COMMAND_INT_PATH)
(6,dataLen)
(7,environment)
(8,data)
(9,dataLen)
(10,data+dataLen)
(11,NULL)
(12,5==5)
(13,5)
(14,COMMAND_ARG1)
(15,dataBuffer)
(16,environment)
(17,data)
(18,RET)
(19,100-dataLen-1)
(20,GETENV(ENV_VARIABLE)
(21,dataBuffer)
(22,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(23,COMMAND_ARG2)
(24,)
(25,ENV_VARIABLE)
(26,)
(27,NULL)
(28,strlen(data)
(29,)
(30,if(5==5)
(31,data = dataBuffer)
(32,data)
(33,)
(34,COMMAND_ARG3)
(35,100)
(36,* environment = GETENV(ENV_VARIABLE)
(37,dataLen)
(38,dataLen = strlen(data)
(39,dataBuffer)
(40,1)
(41,environment)
(42,dataBuffer[100] = COMMAND_ARG2)
(43,dataLen-1)
(44,environment != NULL)
(45,environment)
(46,if (environment != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
