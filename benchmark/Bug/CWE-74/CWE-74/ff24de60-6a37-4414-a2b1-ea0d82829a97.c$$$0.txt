-----label-----
1
-----code-----
static void badVaSinkG(wchar_t * data, ...)
{
    {
        va_list args;
        va_start(args, data);
        /* FIX: Specify the format disallowing a format string vulnerability */
        vwprintf(L"%s", args);
        va_end(args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
11,14
11,15
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
19,22
20,21
22,23
24,25
26,27
27,28
27,29
27,30
28,29
31,32
33,34
34,35
34,36
35,36
37,38
-----nextToken-----
2,4,6,8,9,15,17,21,23,25,29,30,32,36,38
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badVaSinkG(wchar_t * data, ...){    {        va_list args;        va_start(args, data);        /* FIX: Specify the format disallowing a format string vulnerability */        vwprintf(L"%s", args);        va_end(args);    }}
static void
badVaSinkG(wchar_t * data, ...)
badVaSinkG
wchar_t * data
wchar_t
* data
*
data
{    {        va_list args;        va_start(args, data);        /* FIX: Specify the format disallowing a format string vulnerability */        vwprintf(L"%s", args);        va_end(args);    }}
{        va_list args;        va_start(args, data);        /* FIX: Specify the format disallowing a format string vulnerability */        vwprintf(L"%s", args);        va_end(args);    }
va_list args;
va_list args;
va_list
va_list
args
args
va_start(args, data);
va_start(args, data)
va_start
va_start
args
args
data
data
vwprintf(L"%s", args);
vwprintf(L"%s", args)
vwprintf
vwprintf
L"%s"
args
args
va_end(args);
va_end(args)
va_end
va_end
args
args
-----joern-----
(9,4,0)
(5,4,0)
(4,7,0)
(5,1,0)
(8,5,0)
(6,5,0)
(0,4,0)
(3,9,0)
(3,5,1)
(2,9,1)
(5,1,1)
(8,6,1)
(9,3,1)
(5,8,1)
(5,1,2)
-----------------------------------
(0,args)
(1,wchar_t * data)
(2,RET)
(3,args)
(4,)
(5,va_start(args, data)
(6,args)
(7,)
(8,data)
(9,va_end(args)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
