-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_execlp_16_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    while(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
        break;
    }
    /* wexeclp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
81,82
82,83
82,84
82,85
82,86
82,87
82,88
83,84
85,86
87,88
89,90
91,92
93,94
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,80,84,86,88,90,92,94
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_execlp_16_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* wexeclp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__wchar_t_environment_execlp_16_bad()
CWE78_OS_Command_Injection__wchar_t_environment_execlp_16_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* wexeclp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(23,7,0)
(6,29,0)
(25,45,0)
(23,4,0)
(33,32,0)
(23,16,0)
(29,32,0)
(40,10,0)
(15,23,0)
(15,14,0)
(13,18,0)
(45,25,0)
(4,6,0)
(2,32,0)
(9,21,0)
(25,40,0)
(36,40,0)
(12,21,0)
(30,40,0)
(41,6,0)
(6,32,0)
(1,10,0)
(39,21,0)
(16,40,0)
(23,15,0)
(35,40,0)
(0,29,0)
(3,21,0)
(26,14,0)
(34,16,0)
(27,15,0)
(37,21,0)
(21,32,0)
(5,34,0)
(16,34,0)
(38,14,0)
(14,25,0)
(44,25,0)
(4,23,0)
(42,4,0)
(28,6,0)
(18,16,0)
(14,15,0)
(45,6,0)
(17,16,0)
(31,32,0)
(4,25,0)
(11,4,0)
(22,23,0)
(24,18,0)
(8,45,0)
(20,29,0)
(27,22,1)
(29,0,1)
(28,41,1)
(15,14,1)
(4,6,1)
(5,17,1)
(45,6,1)
(4,11,1)
(18,16,1)
(41,29,1)
(34,5,1)
(17,25,1)
(43,21,1)
(0,20,1)
(44,19,1)
(3,1,1)
(23,16,1)
(18,13,1)
(6,28,1)
(45,8,1)
(21,37,1)
(23,4,1)
(12,3,1)
(16,34,1)
(4,25,1)
(8,44,1)
(42,18,1)
(38,27,1)
(24,16,1)
(1,18,1)
(13,24,1)
(37,9,1)
(26,38,1)
(9,39,1)
(14,26,1)
(23,15,1)
(1,23,1)
(6,29,1)
(39,12,1)
(3,19,1)
(14,25,1)
(22,4,1)
(11,42,1)
(25,45,1)
(19,6,1)
(8,19,2)
(17,19,2)
(26,18,2)
(25,45,2)
(24,19,2)
(23,4,2)
(1,19,2)
(45,6,2)
(14,25,2)
(11,18,2)
(13,19,2)
(15,14,2)
(22,18,2)
(15,18,2)
(6,29,2)
(42,18,2)
(4,25,2)
(5,19,2)
(23,15,2)
(16,19,2)
(18,19,2)
(45,19,2)
(4,18,2)
(14,18,2)
(23,16,2)
(44,19,2)
(18,16,2)
(4,6,2)
(16,34,2)
(25,19,2)
(27,18,2)
(38,18,2)
(34,19,2)
(23,18,2)
-----------------------------------
(0,COMMAND_ARG2)
(1,break;)
(2,while(1)
(3,COMMAND_INT)
(4,data+dataLen)
(5,ENV_VARIABLE)
(6,data = dataBuffer)
(7,)
(8,data)
(9,COMMAND_ARG3)
(10,)
(11,dataLen)
(12,COMMAND_INT)
(13,NULL)
(14,dataLen-1)
(15,100-dataLen-1)
(16,* environment = GETENV(ENV_VARIABLE)
(17,environment)
(18,environment != NULL)
(19,1)
(20,dataBuffer)
(21,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(22,environment)
(23,wcsncat(data+dataLen, environment, 100-dataLen-1)
(24,environment)
(25,dataLen = wcslen(data)
(26,1)
(27,100)
(28,dataBuffer)
(29,dataBuffer[100] = COMMAND_ARG2)
(30,if (environment != NULL)
(31,dataBuffer)
(32,)
(33,data)
(34,GETENV(ENV_VARIABLE)
(35,dataLen)
(36,environment)
(37,NULL)
(38,dataLen)
(39,COMMAND_ARG1)
(40,)
(41,data)
(42,data)
(43,RET)
(44,dataLen)
(45,wcslen(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
