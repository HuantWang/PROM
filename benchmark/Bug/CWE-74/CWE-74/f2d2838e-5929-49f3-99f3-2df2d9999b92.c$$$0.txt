-----label-----
1
-----code-----
void CWE134_Uncontrolled_Format_String__char_environment_fprintf_04_bad()
{
    char * data;
    char dataBuffer[100] = "";
    data = dataBuffer;
    if(STATIC_CONST_TRUE)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    if(STATIC_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */
        fprintf(stdout, data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
30,31
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
80,81
80,82
81,82
83,84
84,85
85,86
85,87
85,88
86,87
88,89
90,91
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,82,87,89,91
-----computeFrom-----
22,23
22,24
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE134_Uncontrolled_Format_String__char_environment_fprintf_04_bad(){    char * data;    char dataBuffer[100] = "";    data = dataBuffer;    if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fprintf(stdout, data);    }}
void
CWE134_Uncontrolled_Format_String__char_environment_fprintf_04_bad()
CWE134_Uncontrolled_Format_String__char_environment_fprintf_04_bad
{    char * data;    char dataBuffer[100] = "";    data = dataBuffer;    if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fprintf(stdout, data);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = "";
char dataBuffer[100] = "";
char
dataBuffer[100] = ""
dataBuffer
[100]
100
= ""
""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
if(STATIC_CONST_TRUE)    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fprintf(stdout, data);    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fprintf(stdout, data);    }
fprintf(stdout, data);
fprintf(stdout, data)
fprintf
fprintf
stdout
stdout
data
data
-----joern-----
(16,25,0)
(39,35,0)
(24,23,0)
(14,31,0)
(2,23,0)
(0,32,0)
(27,12,0)
(6,42,0)
(44,3,0)
(11,3,0)
(29,16,0)
(22,31,0)
(21,12,0)
(36,19,0)
(9,31,0)
(41,26,0)
(32,16,0)
(28,23,0)
(10,26,0)
(34,25,0)
(32,35,0)
(4,1,0)
(1,19,0)
(16,23,0)
(26,3,0)
(17,23,0)
(23,3,0)
(25,31,0)
(35,32,0)
(8,2,0)
(42,25,0)
(16,32,0)
(24,15,0)
(23,26,0)
(25,2,0)
(32,30,0)
(31,13,0)
(42,35,0)
(19,31,0)
(18,3,0)
(40,3,0)
(37,24,0)
(5,42,0)
(2,25,0)
(33,24,0)
(35,42,0)
(32,19,0)
(12,19,0)
(19,1,0)
(38,16,0)
(37,33,1)
(43,20,1)
(6,5,1)
(16,23,1)
(16,29,1)
(39,0,1)
(17,28,1)
(25,2,1)
(24,37,1)
(42,25,1)
(24,23,1)
(36,25,1)
(35,42,1)
(26,41,1)
(38,12,1)
(7,24,1)
(32,19,1)
(34,20,1)
(19,1,1)
(20,23,1)
(1,4,1)
(41,10,1)
(2,23,1)
(43,12,1)
(5,39,1)
(4,36,1)
(42,6,1)
(12,21,1)
(2,8,1)
(0,16,1)
(8,34,1)
(21,27,1)
(43,32,1)
(27,19,1)
(32,35,1)
(12,19,1)
(33,43,1)
(23,26,1)
(29,38,1)
(28,26,1)
(32,16,1)
(23,17,1)
(16,25,1)
(7,43,1)
(27,20,2)
(33,43,2)
(19,20,2)
(12,19,2)
(16,12,2)
(4,20,2)
(35,12,2)
(21,20,2)
(32,19,2)
(23,26,2)
(2,20,2)
(2,23,2)
(16,23,2)
(25,2,2)
(24,43,2)
(25,20,2)
(34,20,2)
(8,20,2)
(38,12,2)
(42,25,2)
(32,16,2)
(42,12,2)
(35,42,2)
(1,20,2)
(12,20,2)
(16,25,2)
(29,12,2)
(5,12,2)
(19,1,2)
(32,12,2)
(6,12,2)
(37,43,2)
(39,12,2)
(0,12,2)
(32,35,2)
(24,23,2)
(36,20,2)
-----------------------------------
(0,environment)
(1,GETENV(ENV_VARIABLE)
(2,strlen(data)
(3,)
(4,ENV_VARIABLE)
(5,dataLen)
(6,1)
(7,RET)
(8,data)
(9,dataLen)
(10,dataBuffer)
(11,dataBuffer)
(12,environment != NULL)
(13,)
(14,if (environment != NULL)
(15,)
(16,data+dataLen)
(17,dataBuffer)
(18,if(STATIC_CONST_TRUE)
(19,* environment = GETENV(ENV_VARIABLE)
(20,STATIC_CONST_TRUE)
(21,NULL)
(22,environment)
(23,data = dataBuffer)
(24,fprintf(stdout, data)
(25,dataLen = strlen(data)
(26,dataBuffer[100] = "")
(27,environment)
(28,data)
(29,dataLen)
(30,)
(31,)
(32,strncat(data+dataLen, environment, 100-dataLen-1)
(33,stdout)
(34,dataLen)
(35,100-dataLen-1)
(36,environment)
(37,data)
(38,data)
(39,100)
(40,data)
(41,"")
(42,dataLen-1)
(43,STATIC_CONST_TRUE)
(44,if(STATIC_CONST_TRUE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
