-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execl_18_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    goto source;
source:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    /* execl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
30,31
30,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
82,83
82,84
82,85
82,86
82,87
82,88
83,84
85,86
87,88
89,90
91,92
93,94
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,31,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,88,90,92,94
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execl_18_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goto source;source:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execl_18_bad()
CWE78_OS_Command_Injection__char_environment_execl_18_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goto source;source:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
goto source;
source
source:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
source
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(28,41,0)
(5,15,0)
(29,4,0)
(20,21,0)
(26,41,0)
(14,0,0)
(19,0,0)
(1,4,0)
(34,35,0)
(32,35,0)
(31,4,0)
(18,20,0)
(2,41,0)
(40,42,0)
(35,29,0)
(41,4,0)
(4,0,0)
(27,17,0)
(16,29,0)
(38,42,0)
(29,16,0)
(16,14,0)
(24,42,0)
(8,0,0)
(13,16,0)
(20,29,0)
(42,0,0)
(39,17,0)
(11,2,0)
(36,14,0)
(25,42,0)
(21,28,0)
(15,41,0)
(23,14,0)
(41,15,0)
(14,17,0)
(37,42,0)
(7,20,0)
(17,0,0)
(9,0,0)
(28,21,0)
(28,35,0)
(35,14,0)
(6,28,0)
(12,21,0)
(28,43,0)
(21,20,0)
(35,28,0)
(3,29,0)
(22,2,0)
(10,0,0)
(30,4,0)
(42,38,1)
(2,41,1)
(40,24,1)
(16,13,1)
(18,7,1)
(20,29,1)
(26,29,1)
(32,34,1)
(29,16,1)
(7,12,1)
(41,15,1)
(28,21,1)
(20,18,1)
(23,17,1)
(22,41,1)
(2,11,1)
(38,37,1)
(6,35,1)
(21,20,1)
(34,2,1)
(5,26,1)
(17,39,1)
(15,5,1)
(35,32,1)
(35,29,1)
(12,6,1)
(35,14,1)
(24,28,1)
(33,42,1)
(36,23,1)
(28,35,1)
(39,27,1)
(13,3,1)
(28,41,1)
(24,2,1)
(10,14,1)
(14,36,1)
(3,10,1)
(16,14,1)
(25,40,1)
(37,25,1)
(11,22,1)
(14,17,1)
(6,2,2)
(28,41,2)
(14,17,2)
(21,20,2)
(29,16,2)
(18,2,2)
(20,2,2)
(28,2,2)
(20,29,2)
(35,14,2)
(34,2,2)
(16,14,2)
(41,15,2)
(7,2,2)
(32,2,2)
(35,2,2)
(21,2,2)
(28,21,2)
(2,41,2)
(12,2,2)
(28,35,2)
(35,29,2)
-----------------------------------
(0,)
(1,dataLen)
(2,environment != NULL)
(3,dataLen)
(4,)
(5,ENV_VARIABLE)
(6,environment)
(7,dataLen)
(8,source:)
(9,data)
(10,goto source;)
(11,NULL)
(12,100)
(13,data)
(14,data = dataBuffer)
(15,GETENV(ENV_VARIABLE)
(16,strlen(data)
(17,dataBuffer[100] = COMMAND_ARG2)
(18,1)
(19,dataBuffer)
(20,dataLen-1)
(21,100-dataLen-1)
(22,environment)
(23,data)
(24,COMMAND_INT_PATH)
(25,COMMAND_ARG1)
(26,environment)
(27,dataBuffer)
(28,strncat(data+dataLen, environment, 100-dataLen-1)
(29,dataLen = strlen(data)
(30,if (environment != NULL)
(31,environment)
(32,dataLen)
(33,RET)
(34,data)
(35,data+dataLen)
(36,dataBuffer)
(37,COMMAND_ARG3)
(38,NULL)
(39,COMMAND_ARG2)
(40,COMMAND_INT_PATH)
(41,* environment = GETENV(ENV_VARIABLE)
(42,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(43,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
