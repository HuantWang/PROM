-----label-----
1
-----code-----
char CWE464_Addition_of_Data_Structure_Sentinel__basic_22_badSource(char data)
{
    if(CWE464_Addition_of_Data_Structure_Sentinel__basic_22_badGlobal)
    {
        {
            char charArraySource[2];
            charArraySource[0] = (char)getc(stdin);
            charArraySource[1] = '\0';
            /* FLAW: If the character entered on the command line is not an int,
             * a null value will be returned */
            data = (char)atoi(charArraySource);
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
10,12
11,12
13,14
14,15
14,16
14,17
14,18
15,16
16,17
16,18
18,19
18,20
20,21
22,23
23,24
23,25
24,25
24,26
25,26
28,29
28,30
29,30
29,31
32,33
32,34
33,34
35,36
37,38
38,39
38,40
39,40
39,41
40,41
44,45
45,46
45,47
46,47
48,49
48,50
49,50
49,51
52,53
52,54
53,54
55,56
57,58
58,59
-----nextToken-----
2,4,6,8,12,17,19,21,26,27,30,31,34,36,41,42,43,47,50,51,54,56,59
-----computeFrom-----
23,24
23,25
38,39
38,40
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char CWE464_Addition_of_Data_Structure_Sentinel__basic_22_badSource(char data){    if(CWE464_Addition_of_Data_Structure_Sentinel__basic_22_badGlobal)    {        {            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }    }    return data;}
char
CWE464_Addition_of_Data_Structure_Sentinel__basic_22_badSource(char data)
CWE464_Addition_of_Data_Structure_Sentinel__basic_22_badSource
char data
char
data
data
{    if(CWE464_Addition_of_Data_Structure_Sentinel__basic_22_badGlobal)    {        {            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }    }    return data;}
if(CWE464_Addition_of_Data_Structure_Sentinel__basic_22_badGlobal)    {        {            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }    }
CWE464_Addition_of_Data_Structure_Sentinel__basic_22_badGlobal
CWE464_Addition_of_Data_Structure_Sentinel__basic_22_badGlobal
{        {            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }    }
{            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }
char charArraySource[2];
char charArraySource[2];
char
charArraySource[2]
charArraySource
[2]
2
charArraySource[0] = (char)getc(stdin);
charArraySource[0] = (char)getc(stdin)
charArraySource[0]
charArraySource
charArraySource
0
(char)getc(stdin)
char
char

getc(stdin)
getc
getc
stdin
stdin
charArraySource[1] = '\0';
charArraySource[1] = '\0'
charArraySource[1]
charArraySource
charArraySource
1
'\0'
data = (char)atoi(charArraySource);
data = (char)atoi(charArraySource)
data
data
(char)atoi(charArraySource)
char
char

atoi(charArraySource)
atoi
atoi
charArraySource
charArraySource
return data;
data
data
-----joern-----
(11,3,0)
(13,23,0)
(0,14,0)
(22,28,0)
(22,27,0)
(28,16,0)
(12,24,0)
(3,14,0)
(3,1,0)
(7,25,0)
(17,16,0)
(14,3,0)
(30,24,0)
(8,30,0)
(14,9,0)
(28,22,0)
(20,23,0)
(19,21,0)
(25,28,0)
(22,21,0)
(3,16,0)
(2,20,0)
(16,5,0)
(23,16,0)
(10,30,0)
(15,0,0)
(4,25,0)
(6,20,0)
(14,0,0)
(21,22,0)
(27,22,0)
(9,14,0)
(30,1,0)
(30,3,0)
(14,0,1)
(19,25,1)
(4,7,1)
(11,23,1)
(2,28,1)
(30,1,1)
(14,9,1)
(21,19,1)
(0,15,1)
(8,30,1)
(6,2,1)
(30,10,1)
(22,21,1)
(28,22,1)
(3,1,1)
(10,3,1)
(30,3,1)
(25,4,1)
(15,11,1)
(3,14,1)
(13,20,1)
(20,6,1)
(10,18,1)
(23,13,1)
(22,27,1)
(7,18,1)
(14,0,2)
(3,1,2)
(7,18,2)
(3,14,2)
(21,18,2)
(22,27,2)
(22,18,2)
(28,22,2)
(6,18,2)
(30,1,2)
(19,18,2)
(0,18,2)
(28,18,2)
(15,18,2)
(23,18,2)
(25,18,2)
(8,30,2)
(20,18,2)
(4,18,2)
(14,9,2)
(3,18,2)
(22,21,2)
(30,3,2)
(13,18,2)
(14,18,2)
(11,18,2)
(2,18,2)
-----------------------------------
(0,atoi(charArraySource)
(1,char data)
(2,charArraySource)
(3,data = (char)
(4,0)
(5,)
(6,1)
(7,charArraySource)
(8,RET)
(9,char)
(10,data)
(11,data)
(12,if(CWE464_Addition_of_Data_Structure_Sentinel__basic_22_badGlobal)
(13,\'\\\\0\')
(14,(char)
(15,charArraySource)
(16,)
(17,charArraySource)
(18,CWE464_Addition_of_Data_Structure_Sentinel__basic_22_badGlobal)
(19,stdin)
(20,charArraySource[1])
(21,getc(stdin)
(22,(char)
(23,charArraySource[1] = \'\\\\0\')
(24,)
(25,charArraySource[0])
(26,'\\\\0')
(27,char)
(28,charArraySource[0] = (char)
(29,charArraySource[1] = '\\\\0')
(30,return data;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
