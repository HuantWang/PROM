-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_system_16_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    while(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
        break;
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
81,82
81,83
82,83
82,84
83,84
83,85
84,85
86,87
89,90
89,91
90,91
91,92
91,93
92,93
95,96
96,97
96,98
97,98
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,80,85,87,88,93,94,98,99
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
82,83
82,84
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_system_16_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_environment_system_16_bad()
CWE78_OS_Command_Injection__char_environment_system_16_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(7,30,0)
(45,17,0)
(6,4,0)
(7,47,0)
(1,48,0)
(8,5,0)
(47,28,0)
(10,28,0)
(27,5,0)
(47,5,0)
(12,47,0)
(17,14,0)
(49,47,0)
(20,48,0)
(2,37,0)
(49,4,0)
(6,47,0)
(40,0,0)
(29,4,0)
(49,0,0)
(0,49,0)
(3,48,0)
(18,37,0)
(38,16,0)
(4,6,0)
(0,15,0)
(26,15,0)
(16,15,0)
(32,37,0)
(41,5,0)
(46,7,0)
(39,30,0)
(23,28,0)
(28,5,0)
(4,37,0)
(22,6,0)
(25,31,0)
(15,0,0)
(48,3,0)
(19,20,0)
(43,16,0)
(21,47,0)
(30,7,0)
(0,34,0)
(48,37,0)
(44,20,0)
(42,49,0)
(37,33,0)
(13,49,0)
(35,5,0)
(15,16,0)
(36,33,0)
(0,48,0)
(9,3,0)
(16,4,0)
(31,14,0)
(45,30,1)
(15,16,1)
(6,22,1)
(7,46,1)
(49,47,1)
(23,10,1)
(19,44,1)
(26,40,1)
(47,28,1)
(24,31,1)
(36,0,1)
(0,15,1)
(36,20,1)
(30,39,1)
(6,47,1)
(48,3,1)
(30,7,1)
(49,42,1)
(9,1,1)
(38,43,1)
(20,19,1)
(0,49,1)
(46,36,1)
(28,23,1)
(39,7,1)
(46,11,1)
(49,4,1)
(42,13,1)
(13,20,1)
(40,49,1)
(1,4,1)
(29,11,1)
(11,47,1)
(44,48,1)
(3,9,1)
(31,25,1)
(16,4,1)
(25,17,1)
(22,29,1)
(21,28,1)
(24,30,1)
(0,48,1)
(17,45,1)
(4,6,1)
(43,26,1)
(47,12,1)
(12,21,1)
(7,47,1)
(20,48,1)
(16,38,1)
(19,11,2)
(25,30,2)
(0,48,2)
(48,3,2)
(16,20,2)
(26,20,2)
(4,11,2)
(20,11,2)
(13,20,2)
(6,11,2)
(3,11,2)
(47,28,2)
(40,20,2)
(42,20,2)
(44,11,2)
(29,11,2)
(49,20,2)
(0,15,2)
(43,20,2)
(49,4,2)
(38,20,2)
(0,49,2)
(15,20,2)
(1,11,2)
(36,11,2)
(31,30,2)
(17,30,2)
(4,6,2)
(16,4,2)
(20,48,2)
(48,11,2)
(30,7,2)
(22,11,2)
(49,47,2)
(7,47,2)
(45,30,2)
(0,20,2)
(6,47,2)
(15,16,2)
(9,11,2)
-----------------------------------
(0,strncat(data+dataLen, environment, 100-dataLen-1)
(1,environment)
(2,environment)
(3,GETENV(ENV_VARIABLE)
(4,dataLen = strlen(data)
(5,)
(6,strlen(data)
(7,SYSTEM(data)
(8,while(1)
(9,ENV_VARIABLE)
(10,data_buf)
(11,1)
(12,data_buf)
(13,data)
(14,)
(15,100-dataLen-1)
(16,dataLen-1)
(17,printLine("command execution failed!")
(18,if (environment != NULL)
(19,NULL)
(20,environment != NULL)
(21,data)
(22,data)
(23,FULL_COMMAND)
(24,RET)
(25,1)
(26,100)
(27,if (SYSTEM(data)
(28,data_buf[100] = FULL_COMMAND)
(29,dataLen)
(30,SYSTEM(data)
(31,exit(1)
(32,dataLen)
(33,)
(34,)
(35,data_buf)
(36,break;)
(37,)
(38,1)
(39,0)
(40,environment)
(41,data)
(42,dataLen)
(43,dataLen)
(44,environment)
(45,"command execution failed!")
(46,data)
(47,data = data_buf)
(48,* environment = GETENV(ENV_VARIABLE)
(49,data+dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
