-----label-----
1
-----code-----
void CWE134_Uncontrolled_Format_String__char_environment_vprintf_31_bad()
{
    char * data;
    char dataBuffer[100] = "";
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    {
        char * dataCopy = data;
        char * data = dataCopy;
        badVaSink(data, data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
27,30
28,29
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
38,39
40,41
41,42
41,43
43,44
43,45
43,46
46,47
47,48
47,49
48,49
50,51
52,53
52,54
53,54
53,55
54,55
56,57
58,59
59,60
60,61
60,62
60,63
60,64
61,62
63,64
63,65
64,65
66,67
68,69
70,71
70,72
71,72
71,73
73,74
76,77
76,78
76,79
77,78
78,79
78,80
80,81
80,82
80,83
83,84
84,85
86,87
87,88
87,89
89,90
89,91
89,92
92,93
93,94
95,96
96,97
96,98
96,99
97,98
99,100
101,102
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,31,33,37,39,42,44,45,49,51,55,57,62,65,67,69,72,74,75,79,81,82,85,88,90,91,94,98,100,102
-----computeFrom-----
22,23
22,24
53,54
53,55
63,64
63,65
70,71
70,72
71,72
71,73
-----guardedBy-----
55,69
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE134_Uncontrolled_Format_String__char_environment_vprintf_31_bad(){    char * data;    char dataBuffer[100] = "";    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char * dataCopy = data;        char * data = dataCopy;        badVaSink(data, data);    }}
void
CWE134_Uncontrolled_Format_String__char_environment_vprintf_31_bad()
CWE134_Uncontrolled_Format_String__char_environment_vprintf_31_bad
{    char * data;    char dataBuffer[100] = "";    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char * dataCopy = data;        char * data = dataCopy;        badVaSink(data, data);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = "";
char dataBuffer[100] = "";
char
dataBuffer[100] = ""
dataBuffer
[100]
100
= ""
""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char * dataCopy = data;        char * data = dataCopy;        badVaSink(data, data);    }
char * dataCopy = data;
char * dataCopy = data;
char
* dataCopy = data
*
dataCopy
= data
data
data
char * data = dataCopy;
char * data = dataCopy;
char
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
badVaSink(data, data);
badVaSink(data, data)
badVaSink
badVaSink
data
data
data
data
-----joern-----
(46,27,0)
(12,46,0)
(32,27,0)
(1,17,0)
(29,47,0)
(33,42,0)
(18,34,0)
(45,39,0)
(17,29,0)
(2,1,0)
(4,31,0)
(27,25,0)
(25,29,0)
(30,31,0)
(0,46,0)
(17,26,0)
(22,17,0)
(6,42,0)
(15,33,0)
(16,24,0)
(40,32,0)
(25,27,0)
(3,0,0)
(1,26,0)
(0,34,0)
(34,32,0)
(36,8,0)
(24,8,0)
(47,42,0)
(31,1,0)
(20,47,0)
(32,29,0)
(5,27,0)
(38,33,0)
(41,42,0)
(8,24,0)
(34,24,0)
(46,0,0)
(11,47,0)
(27,33,0)
(10,29,0)
(21,33,0)
(19,26,0)
(44,25,0)
(29,42,0)
(24,33,0)
(26,42,0)
(23,1,0)
(13,29,0)
(9,46,0)
(39,24,0)
(31,26,0)
(28,39,0)
(32,34,0)
(14,17,0)
(35,26,0)
(34,43,0)
(7,32,0)
(34,0,0)
(14,34,1)
(2,17,1)
(31,1,1)
(32,27,1)
(17,22,1)
(20,11,1)
(23,2,1)
(14,39,1)
(39,28,1)
(5,29,1)
(31,30,1)
(32,7,1)
(34,32,1)
(34,0,1)
(12,9,1)
(17,29,1)
(25,29,1)
(29,13,1)
(29,47,1)
(39,24,1)
(1,17,1)
(24,8,1)
(45,24,1)
(4,1,1)
(30,4,1)
(9,3,1)
(18,32,1)
(40,39,1)
(3,18,1)
(32,29,1)
(27,25,1)
(28,45,1)
(0,46,1)
(8,36,1)
(10,47,1)
(1,23,1)
(46,27,1)
(36,16,1)
(47,20,1)
(37,31,1)
(22,14,1)
(13,10,1)
(34,24,1)
(44,5,1)
(25,44,1)
(46,12,1)
(16,27,1)
(7,40,1)
(32,29,2)
(29,47,2)
(0,46,2)
(46,39,2)
(1,17,2)
(34,0,2)
(9,39,2)
(34,32,2)
(27,25,2)
(7,39,2)
(3,39,2)
(32,39,2)
(31,1,2)
(40,39,2)
(12,39,2)
(25,29,2)
(34,24,2)
(0,39,2)
(24,8,2)
(39,24,2)
(34,39,2)
(32,27,2)
(17,29,2)
(46,27,2)
(18,39,2)
-----------------------------------
(0,100-dataLen-1)
(1,* data = dataCopy)
(2,data)
(3,100)
(4,data)
(5,dataLen)
(6,data)
(7,dataLen)
(8,GETENV(ENV_VARIABLE)
(9,dataLen)
(10,data)
(11,dataBuffer)
(12,1)
(13,dataBuffer)
(14,dataCopy)
(15,dataLen)
(16,environment)
(17,* dataCopy = data)
(18,environment)
(19,data)
(20,"")
(21,environment)
(22,data)
(23,dataCopy)
(24,* environment = GETENV(ENV_VARIABLE)
(25,strlen(data)
(26,)
(27,dataLen = strlen(data)
(28,NULL)
(29,data = dataBuffer)
(30,data)
(31,badVaSink(data, data)
(32,data+dataLen)
(33,)
(34,strncat(data+dataLen, environment, 100-dataLen-1)
(35,dataCopy)
(36,ENV_VARIABLE)
(37,RET)
(38,if (environment != NULL)
(39,environment != NULL)
(40,data)
(41,dataBuffer)
(42,)
(43,)
(44,data)
(45,environment)
(46,dataLen-1)
(47,dataBuffer[100] = "")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
