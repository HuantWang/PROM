-----label-----
1
-----code-----
void CWE464_Addition_of_Data_Structure_Sentinel__basic_13_bad()
{
    char data;
    data = ' ';
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            char charArraySource[2];
            charArraySource[0] = (char)getc(stdin);
            charArraySource[1] = '\0';
            /* FLAW: If the character entered on the command line is not an int,
             * a null value will be returned */
            data = (char)atoi(charArraySource);
        }
    }
    {
        char charArraySink[4];
        charArraySink[0] = 'x';
        /* POTENTIAL FLAW: If data is null, the rest of the array will not be printed */
        charArraySink[1] = data;
        charArraySink[2] = 'z';
        charArraySink[3] = '\0';
        printLine(charArraySink);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
18,19
21,22
22,23
22,24
22,25
22,26
23,24
24,25
24,26
26,27
26,28
28,29
30,31
31,32
31,33
32,33
32,34
33,34
36,37
36,38
37,38
37,39
40,41
40,42
41,42
43,44
45,46
46,47
46,48
47,48
47,49
48,49
52,53
53,54
53,55
54,55
56,57
56,58
57,58
57,59
60,61
60,62
61,62
63,64
65,66
65,67
65,68
65,69
65,70
65,71
66,67
67,68
67,69
69,70
69,71
71,72
73,74
74,75
74,76
75,76
75,77
76,77
80,81
81,82
81,83
82,83
82,84
83,84
86,87
88,89
89,90
89,91
90,91
90,92
91,92
95,96
96,97
96,98
97,98
97,99
98,99
102,103
103,104
103,105
104,105
106,107
-----nextToken-----
2,4,8,10,14,15,19,20,25,27,29,34,35,38,39,42,44,49,50,51,55,58,59,62,64,68,70,72,77,78,79,84,85,87,92,93,94,99,100,101,105,107
-----computeFrom-----
12,13
12,14
17,18
17,19
31,32
31,33
46,47
46,48
53,54
53,55
74,75
74,76
81,82
81,83
89,90
89,91
96,97
96,98
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE464_Addition_of_Data_Structure_Sentinel__basic_13_bad(){    char data;    data = ' ';    if(GLOBAL_CONST_FIVE==5)    {        {            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }    }    {        char charArraySink[4];        charArraySink[0] = 'x';        /* POTENTIAL FLAW: If data is null, the rest of the array will not be printed */        charArraySink[1] = data;        charArraySink[2] = 'z';        charArraySink[3] = '\0';        printLine(charArraySink);    }}
void
CWE464_Addition_of_Data_Structure_Sentinel__basic_13_bad()
CWE464_Addition_of_Data_Structure_Sentinel__basic_13_bad
{    char data;    data = ' ';    if(GLOBAL_CONST_FIVE==5)    {        {            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }    }    {        char charArraySink[4];        charArraySink[0] = 'x';        /* POTENTIAL FLAW: If data is null, the rest of the array will not be printed */        charArraySink[1] = data;        charArraySink[2] = 'z';        charArraySink[3] = '\0';        printLine(charArraySink);    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(GLOBAL_CONST_FIVE==5)    {        {            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }    }
{            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }
char charArraySource[2];
char charArraySource[2];
char
charArraySource[2]
charArraySource
[2]
2
charArraySource[0] = (char)getc(stdin);
charArraySource[0] = (char)getc(stdin)
charArraySource[0]
charArraySource
charArraySource
0
(char)getc(stdin)
char
char

getc(stdin)
getc
getc
stdin
stdin
charArraySource[1] = '\0';
charArraySource[1] = '\0'
charArraySource[1]
charArraySource
charArraySource
1
'\0'
data = (char)atoi(charArraySource);
data = (char)atoi(charArraySource)
data
data
(char)atoi(charArraySource)
char
char

atoi(charArraySource)
atoi
atoi
charArraySource
charArraySource
{        char charArraySink[4];        charArraySink[0] = 'x';        /* POTENTIAL FLAW: If data is null, the rest of the array will not be printed */        charArraySink[1] = data;        charArraySink[2] = 'z';        charArraySink[3] = '\0';        printLine(charArraySink);    }
char charArraySink[4];
char charArraySink[4];
char
charArraySink[4]
charArraySink
[4]
4
charArraySink[0] = 'x';
charArraySink[0] = 'x'
charArraySink[0]
charArraySink
charArraySink
0
'x'
charArraySink[1] = data;
charArraySink[1] = data
charArraySink[1]
charArraySink
charArraySink
1
data
data
charArraySink[2] = 'z';
charArraySink[2] = 'z'
charArraySink[2]
charArraySink
charArraySink
2
'z'
charArraySink[3] = '\0';
charArraySink[3] = '\0'
charArraySink[3]
charArraySink
charArraySink
3
'\0'
printLine(charArraySink);
printLine(charArraySink)
printLine
printLine
charArraySink
charArraySink
-----joern-----
(38,47,0)
(40,47,0)
(50,6,0)
(4,47,0)
(57,29,0)
(19,9,0)
(35,5,0)
(44,28,0)
(37,53,0)
(33,16,0)
(49,46,0)
(3,46,0)
(55,56,0)
(35,36,0)
(51,31,0)
(43,54,0)
(47,54,0)
(7,18,0)
(52,44,0)
(23,50,0)
(6,14,0)
(42,50,0)
(1,12,0)
(58,4,0)
(24,35,0)
(48,54,0)
(32,56,0)
(0,9,0)
(21,5,0)
(28,44,0)
(2,17,0)
(26,14,0)
(53,4,0)
(14,8,0)
(36,14,0)
(10,17,0)
(12,54,0)
(29,47,0)
(16,44,0)
(46,18,0)
(31,52,0)
(52,14,0)
(44,16,0)
(31,47,0)
(35,24,0)
(44,52,0)
(9,36,0)
(27,29,0)
(30,57,0)
(18,47,0)
(25,12,0)
(36,35,0)
(22,38,0)
(34,53,0)
(41,57,0)
(5,35,0)
(31,12,0)
(56,31,0)
(11,6,0)
(15,52,0)
(42,36,1)
(44,28,1)
(49,17,1)
(18,7,1)
(16,33,1)
(29,27,1)
(39,38,1)
(44,16,1)
(2,12,1)
(51,56,1)
(11,50,1)
(19,0,1)
(35,5,1)
(34,31,1)
(58,53,1)
(21,9,1)
(10,2,1)
(33,15,1)
(17,10,1)
(56,32,1)
(32,55,1)
(4,58,1)
(41,30,1)
(37,34,1)
(52,44,1)
(55,18,1)
(5,21,1)
(27,57,1)
(7,46,1)
(35,24,1)
(36,35,1)
(30,4,1)
(57,41,1)
(38,22,1)
(3,49,1)
(31,52,1)
(12,25,1)
(31,12,1)
(22,29,1)
(23,42,1)
(25,1,1)
(53,37,1)
(0,17,1)
(9,19,1)
(46,3,1)
(15,6,1)
(6,11,1)
(31,51,1)
(49,52,1)
(50,23,1)
(50,17,2)
(44,28,2)
(52,44,2)
(15,17,2)
(5,17,2)
(44,17,2)
(16,17,2)
(9,17,2)
(31,52,2)
(11,17,2)
(44,16,2)
(21,17,2)
(0,17,2)
(36,35,2)
(52,17,2)
(33,17,2)
(36,17,2)
(42,17,2)
(19,17,2)
(31,12,2)
(35,5,2)
(35,17,2)
(6,17,2)
(23,17,2)
(35,24,2)
-----------------------------------
(0,charArraySource)
(1,data)
(2,GLOBAL_CONST_FIVE)
(3,0)
(4,charArraySink[2] = 'z')
(5,getc(stdin)
(6,charArraySource[1] = '\\\\0')
(7,'x')
(8,)
(9,charArraySource[0])
(10,5)
(11,'\\\\0')
(12,data = \' \')
(13,charArraySource[1] = \'\\\\0\')
(14,)
(15,data)
(16,atoi(charArraySource)
(17,GLOBAL_CONST_FIVE==5)
(18,charArraySink[0] = 'x')
(19,0)
(20,\'\\\\0\')
(21,stdin)
(22,charArraySink)
(23,1)
(24,char)
(25,' ')
(26,charArraySource)
(27,'\\\\0')
(28,char)
(29,charArraySink[3] = '\\\\0')
(30,charArraySink)
(31,charArraySink[1] = data)
(32,1)
(33,charArraySource)
(34,charArraySink)
(35,(char)
(36,charArraySource[0] = (char)
(37,2)
(38,printLine(charArraySink)
(39,RET)
(40,charArraySink)
(41,3)
(42,charArraySource)
(43,data)
(44,(char)
(45,data = ' ')
(46,charArraySink[0])
(47,)
(48,if(GLOBAL_CONST_FIVE==5)
(49,charArraySink)
(50,charArraySource[1])
(51,data)
(52,data = (char)
(53,charArraySink[2])
(54,)
(55,charArraySink)
(56,charArraySink[1])
(57,charArraySink[3])
(58,'z')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
