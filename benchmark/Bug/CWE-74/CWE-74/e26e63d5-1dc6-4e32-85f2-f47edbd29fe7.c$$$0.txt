-----label-----
1
-----code-----
void CWE464_Addition_of_Data_Structure_Sentinel__basic_03_bad()
{
    char data;
    data = ' ';
    if(5==5)
    {
        {
            char charArraySource[2];
            charArraySource[0] = (char)getc(stdin);
            charArraySource[1] = '\0';
            /* FLAW: If the character entered on the command line is not an int,
             * a null value will be returned */
            data = (char)atoi(charArraySource);
        }
    }
    {
        char charArraySink[4];
        charArraySink[0] = 'x';
        /* POTENTIAL FLAW: If data is null, the rest of the array will not be printed */
        charArraySink[1] = data;
        charArraySink[2] = 'z';
        charArraySink[3] = '\0';
        printLine(charArraySink);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
16,18
17,18
17,19
20,21
21,22
21,23
21,24
21,25
22,23
23,24
23,25
25,26
25,27
27,28
29,30
30,31
30,32
31,32
31,33
32,33
35,36
35,37
36,37
36,38
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
46,48
47,48
51,52
52,53
52,54
53,54
55,56
55,57
56,57
56,58
59,60
59,61
60,61
62,63
64,65
64,66
64,67
64,68
64,69
64,70
65,66
66,67
66,68
68,69
68,70
70,71
72,73
73,74
73,75
74,75
74,76
75,76
79,80
80,81
80,82
81,82
81,83
82,83
85,86
87,88
88,89
88,90
89,90
89,91
90,91
94,95
95,96
95,97
96,97
96,98
97,98
101,102
102,103
102,104
103,104
105,106
-----nextToken-----
2,4,8,10,14,15,18,19,24,26,28,33,34,37,38,41,43,48,49,50,54,57,58,61,63,67,69,71,76,77,78,83,84,86,91,92,93,98,99,100,104,106
-----computeFrom-----
12,13
12,14
17,18
17,19
30,31
30,32
45,46
45,47
52,53
52,54
73,74
73,75
80,81
80,82
88,89
88,90
95,96
95,97
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE464_Addition_of_Data_Structure_Sentinel__basic_03_bad(){    char data;    data = ' ';    if(5==5)    {        {            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }    }    {        char charArraySink[4];        charArraySink[0] = 'x';        /* POTENTIAL FLAW: If data is null, the rest of the array will not be printed */        charArraySink[1] = data;        charArraySink[2] = 'z';        charArraySink[3] = '\0';        printLine(charArraySink);    }}
void
CWE464_Addition_of_Data_Structure_Sentinel__basic_03_bad()
CWE464_Addition_of_Data_Structure_Sentinel__basic_03_bad
{    char data;    data = ' ';    if(5==5)    {        {            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }    }    {        char charArraySink[4];        charArraySink[0] = 'x';        /* POTENTIAL FLAW: If data is null, the rest of the array will not be printed */        charArraySink[1] = data;        charArraySink[2] = 'z';        charArraySink[3] = '\0';        printLine(charArraySink);    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
if(5==5)    {        {            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }    }
5==5
5
5
{        {            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }    }
{            char charArraySource[2];            charArraySource[0] = (char)getc(stdin);            charArraySource[1] = '\0';            /* FLAW: If the character entered on the command line is not an int,             * a null value will be returned */            data = (char)atoi(charArraySource);        }
char charArraySource[2];
char charArraySource[2];
char
charArraySource[2]
charArraySource
[2]
2
charArraySource[0] = (char)getc(stdin);
charArraySource[0] = (char)getc(stdin)
charArraySource[0]
charArraySource
charArraySource
0
(char)getc(stdin)
char
char

getc(stdin)
getc
getc
stdin
stdin
charArraySource[1] = '\0';
charArraySource[1] = '\0'
charArraySource[1]
charArraySource
charArraySource
1
'\0'
data = (char)atoi(charArraySource);
data = (char)atoi(charArraySource)
data
data
(char)atoi(charArraySource)
char
char

atoi(charArraySource)
atoi
atoi
charArraySource
charArraySource
{        char charArraySink[4];        charArraySink[0] = 'x';        /* POTENTIAL FLAW: If data is null, the rest of the array will not be printed */        charArraySink[1] = data;        charArraySink[2] = 'z';        charArraySink[3] = '\0';        printLine(charArraySink);    }
char charArraySink[4];
char charArraySink[4];
char
charArraySink[4]
charArraySink
[4]
4
charArraySink[0] = 'x';
charArraySink[0] = 'x'
charArraySink[0]
charArraySink
charArraySink
0
'x'
charArraySink[1] = data;
charArraySink[1] = data
charArraySink[1]
charArraySink
charArraySink
1
data
data
charArraySink[2] = 'z';
charArraySink[2] = 'z'
charArraySink[2]
charArraySink
charArraySink
2
'z'
charArraySink[3] = '\0';
charArraySink[3] = '\0'
charArraySink[3]
charArraySink
charArraySink
3
'\0'
printLine(charArraySink);
printLine(charArraySink)
printLine
printLine
charArraySink
charArraySink
-----joern-----
(57,14,0)
(27,29,0)
(19,1,0)
(32,20,0)
(22,42,0)
(1,34,0)
(53,4,0)
(34,29,0)
(31,35,0)
(15,2,0)
(6,8,0)
(12,17,0)
(54,41,0)
(28,27,0)
(52,2,0)
(24,49,0)
(0,18,0)
(2,52,0)
(49,12,0)
(44,32,0)
(36,21,0)
(34,1,0)
(58,20,0)
(51,14,0)
(43,34,0)
(29,34,0)
(35,21,0)
(56,53,0)
(39,35,0)
(26,31,0)
(2,15,0)
(37,53,0)
(3,31,0)
(11,37,0)
(14,8,0)
(47,37,0)
(13,18,0)
(8,21,0)
(2,41,0)
(38,49,0)
(17,7,0)
(45,27,0)
(5,12,0)
(46,4,0)
(53,15,0)
(29,17,0)
(9,17,0)
(55,42,0)
(20,21,0)
(25,15,0)
(48,32,0)
(15,17,0)
(50,4,0)
(34,43,0)
(21,42,0)
(33,21,0)
(53,21,0)
(41,2,0)
(4,42,0)
(40,36,0)
(6,14,1)
(34,1,1)
(27,28,1)
(31,3,1)
(26,20,1)
(54,25,1)
(25,12,1)
(12,5,1)
(14,57,1)
(48,53,1)
(20,58,1)
(45,18,1)
(18,13,1)
(2,41,1)
(51,18,1)
(37,47,1)
(4,50,1)
(35,39,1)
(41,54,1)
(8,6,1)
(53,15,1)
(10,36,1)
(57,51,1)
(51,15,1)
(28,45,1)
(44,48,1)
(2,52,1)
(58,32,1)
(39,31,1)
(24,38,1)
(13,0,1)
(36,40,1)
(34,43,1)
(53,4,1)
(5,49,1)
(29,34,1)
(53,56,1)
(0,4,1)
(56,37,1)
(38,29,1)
(15,2,1)
(32,44,1)
(40,35,1)
(47,11,1)
(49,24,1)
(19,27,1)
(1,19,1)
(11,8,1)
(3,26,1)
(50,46,1)
(15,18,2)
(15,2,2)
(19,18,2)
(45,18,2)
(38,18,2)
(2,18,2)
(27,18,2)
(34,18,2)
(49,18,2)
(28,18,2)
(53,4,2)
(24,18,2)
(29,18,2)
(54,18,2)
(2,52,2)
(41,18,2)
(12,18,2)
(34,1,2)
(25,18,2)
(53,15,2)
(29,34,2)
(34,43,2)
(1,18,2)
(5,18,2)
(2,41,2)
-----------------------------------
(0,5)
(1,getc(stdin)
(2,(char)
(3,3)
(4,data = ' ')
(5,\'\\\\0\')
(6,'x')
(7,)
(8,charArraySink[0] = 'x')
(9,charArraySource)
(10,RET)
(11,charArraySink)
(12,charArraySource[1] = \'\\\\0\')
(13,5)
(14,charArraySink[0])
(15,data = (char)
(16,data = \' \')
(17,)
(18,5==5)
(19,stdin)
(20,charArraySink[2] = 'z')
(21,)
(22,data)
(23,'\\\\0')
(24,1)
(25,data)
(26,charArraySink)
(27,charArraySource[0])
(28,0)
(29,charArraySource[0] = (char)
(30,charArraySource[1] = '\\\\0')
(31,charArraySink[3])
(32,charArraySink[2])
(33,charArraySink)
(34,(char)
(35,charArraySink[3] = '\\\\0')
(36,printLine(charArraySink)
(37,charArraySink[1])
(38,charArraySource)
(39,'\\\\0')
(40,charArraySink)
(41,atoi(charArraySource)
(42,)
(43,char)
(44,2)
(45,charArraySource)
(46,data)
(47,1)
(48,charArraySink)
(49,charArraySource[1])
(50,' ')
(51,charArraySink)
(52,char)
(53,charArraySink[1] = data)
(54,charArraySource)
(55,if(5==5)
(56,data)
(57,0)
(58,'z')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
