-----label-----
1
-----code-----
void CWE134_Uncontrolled_Format_String__char_environment_fprintf_08_bad()
{
    char * data;
    char dataBuffer[100] = "";
    data = dataBuffer;
    if(staticReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */
        fprintf(stdout, data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
81,83
82,83
83,84
85,86
86,87
87,88
87,89
87,90
88,89
90,91
92,93
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,89,91,93
-----computeFrom-----
22,23
22,24
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE134_Uncontrolled_Format_String__char_environment_fprintf_08_bad(){    char * data;    char dataBuffer[100] = "";    data = dataBuffer;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fprintf(stdout, data);    }}
void
CWE134_Uncontrolled_Format_String__char_environment_fprintf_08_bad()
CWE134_Uncontrolled_Format_String__char_environment_fprintf_08_bad
{    char * data;    char dataBuffer[100] = "";    data = dataBuffer;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fprintf(stdout, data);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = "";
char dataBuffer[100] = "";
char
dataBuffer[100] = ""
dataBuffer
[100]
100
= ""
""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fprintf(stdout, data);    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fprintf(stdout, data);    }
fprintf(stdout, data);
fprintf(stdout, data)
fprintf
fprintf
stdout
stdout
data
data
-----joern-----
(7,17,0)
(38,21,0)
(31,42,0)
(18,24,0)
(23,42,0)
(16,0,0)
(4,22,0)
(10,17,0)
(17,23,0)
(1,16,0)
(39,21,0)
(5,19,0)
(20,5,0)
(35,28,0)
(7,11,0)
(19,39,0)
(19,21,0)
(9,5,0)
(13,24,0)
(42,23,0)
(8,21,0)
(17,19,0)
(29,22,0)
(23,35,0)
(34,17,0)
(5,44,0)
(22,4,0)
(42,19,0)
(25,39,0)
(43,19,0)
(37,35,0)
(26,21,0)
(14,19,0)
(12,0,0)
(27,23,0)
(36,4,0)
(16,35,0)
(6,35,0)
(15,7,0)
(3,35,0)
(32,39,0)
(7,16,0)
(24,16,0)
(7,22,0)
(22,7,0)
(0,16,0)
(17,7,0)
(4,23,0)
(41,21,0)
(33,4,0)
(7,22,1)
(12,1,1)
(1,23,1)
(40,7,1)
(30,5,1)
(14,43,1)
(4,33,1)
(7,17,1)
(20,9,1)
(43,39,1)
(31,27,1)
(34,24,1)
(18,13,1)
(22,4,1)
(40,24,1)
(5,20,1)
(27,2,1)
(42,31,1)
(5,19,1)
(2,19,1)
(33,36,1)
(17,19,1)
(30,40,1)
(29,15,1)
(17,10,1)
(15,17,1)
(19,14,1)
(40,2,1)
(4,23,1)
(17,23,1)
(16,0,1)
(36,29,1)
(42,19,1)
(7,16,1)
(23,42,1)
(0,12,1)
(13,16,1)
(19,39,1)
(32,25,1)
(10,34,1)
(9,40,1)
(39,32,1)
(24,16,1)
(24,18,1)
(7,16,2)
(36,24,2)
(42,19,2)
(23,2,2)
(13,2,2)
(29,24,2)
(0,2,2)
(7,22,2)
(17,19,2)
(5,19,2)
(34,24,2)
(4,24,2)
(19,39,2)
(1,2,2)
(10,24,2)
(17,23,2)
(18,2,2)
(4,23,2)
(7,24,2)
(7,17,2)
(20,40,2)
(9,40,2)
(42,2,2)
(22,24,2)
(15,24,2)
(12,2,2)
(33,24,2)
(31,2,2)
(24,2,2)
(16,0,2)
(5,40,2)
(16,2,2)
(23,42,2)
(22,4,2)
(24,16,2)
(17,24,2)
(27,2,2)
-----------------------------------
(0,GETENV(ENV_VARIABLE)
(1,environment)
(2,staticReturnsTrue()
(3,environment)
(4,dataLen-1)
(5,fprintf(stdout, data)
(6,if (environment != NULL)
(7,strncat(data+dataLen, environment, 100-dataLen-1)
(8,if(staticReturnsTrue()
(9,stdout)
(10,dataLen)
(11,)
(12,ENV_VARIABLE)
(13,environment)
(14,dataBuffer)
(15,environment)
(16,* environment = GETENV(ENV_VARIABLE)
(17,data+dataLen)
(18,NULL)
(19,data = dataBuffer)
(20,data)
(21,)
(22,100-dataLen-1)
(23,dataLen = strlen(data)
(24,environment != NULL)
(25,dataBuffer)
(26,data)
(27,dataLen)
(28,)
(29,100)
(30,RET)
(31,data)
(32,"")
(33,1)
(34,data)
(35,)
(36,dataLen)
(37,dataLen)
(38,dataBuffer)
(39,dataBuffer[100] = "")
(40,staticReturnsTrue()
(41,if(staticReturnsTrue()
(42,strlen(data)
(43,data)
(44,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
