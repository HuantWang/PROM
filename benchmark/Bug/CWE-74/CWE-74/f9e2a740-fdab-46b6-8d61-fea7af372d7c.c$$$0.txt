-----label-----
1
-----code-----
void CWE134_Uncontrolled_Format_String__wchar_t_environment_fprintf_16_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    while(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
        break;
    }
    while(1)
    {
        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */
        fwprintf(stdout, data);
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
29,30
29,31
30,31
30,32
30,33
31,32
32,33
32,34
33,34
35,36
35,37
37,38
38,39
38,40
39,40
41,42
43,44
44,45
44,46
46,47
46,48
46,49
49,50
50,51
50,52
51,52
53,54
55,56
55,57
56,57
56,58
57,58
59,60
61,62
62,63
63,64
63,65
63,66
63,67
64,65
66,67
66,68
67,68
69,70
71,72
73,74
73,75
74,75
74,76
76,77
80,81
80,82
82,83
82,84
83,84
84,85
84,86
84,87
85,86
87,88
89,90
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,28,34,36,40,42,45,47,48,52,54,58,60,65,68,70,72,75,77,78,79,81,86,88,90,91
-----computeFrom-----
22,23
22,24
56,57
56,58
66,67
66,68
73,74
73,75
74,75
74,76
-----guardedBy-----
58,72
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
void CWE134_Uncontrolled_Format_String__wchar_t_environment_fprintf_16_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    while(1)    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fwprintf(stdout, data);        break;    }}
void
CWE134_Uncontrolled_Format_String__wchar_t_environment_fprintf_16_bad()
CWE134_Uncontrolled_Format_String__wchar_t_environment_fprintf_16_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = L"";    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    while(1)    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fwprintf(stdout, data);        break;    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = L"";
wchar_t dataBuffer[100] = L"";
wchar_t
dataBuffer[100] = L""
dataBuffer
[100]
100
= L""
L""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
while(1)    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fwprintf(stdout, data);        break;    }
1
{        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fwprintf(stdout, data);        break;    }
fwprintf(stdout, data);
fwprintf(stdout, data)
fwprintf
fwprintf
stdout
stdout
data
data
break;
-----joern-----
(24,3,0)
(14,31,0)
(3,31,0)
(43,3,0)
(2,14,0)
(26,12,0)
(22,41,0)
(2,38,0)
(18,43,0)
(26,32,0)
(25,32,0)
(15,41,0)
(14,42,0)
(10,32,0)
(23,43,0)
(37,14,0)
(39,41,0)
(36,31,0)
(34,31,0)
(31,35,0)
(9,26,0)
(29,17,0)
(29,2,0)
(32,41,0)
(21,32,0)
(6,26,0)
(3,10,0)
(10,3,0)
(42,14,0)
(5,29,0)
(4,17,0)
(17,29,0)
(33,10,0)
(11,2,0)
(30,17,0)
(13,12,0)
(43,2,0)
(2,29,0)
(27,14,0)
(2,43,0)
(28,42,0)
(19,41,0)
(17,3,0)
(20,31,0)
(1,35,0)
(16,27,0)
(43,32,0)
(0,27,0)
(24,8,1)
(2,29,1)
(10,32,1)
(8,32,1)
(26,9,1)
(43,32,1)
(23,27,1)
(3,10,1)
(18,23,1)
(13,26,1)
(27,14,1)
(14,42,1)
(32,25,1)
(40,13,1)
(17,30,1)
(21,15,1)
(7,8,1)
(26,32,1)
(10,33,1)
(30,4,1)
(27,0,1)
(16,14,1)
(7,1,1)
(29,17,1)
(37,3,1)
(33,24,1)
(0,16,1)
(40,7,1)
(28,37,1)
(42,28,1)
(4,5,1)
(9,6,1)
(25,21,1)
(11,43,1)
(1,27,1)
(1,2,1)
(6,7,1)
(43,18,1)
(5,11,1)
(17,3,1)
(2,43,1)
(43,3,1)
(2,14,1)
(2,14,2)
(24,8,2)
(43,27,2)
(11,27,2)
(6,7,2)
(29,17,2)
(14,42,2)
(18,27,2)
(26,32,2)
(42,8,2)
(27,14,2)
(4,27,2)
(33,8,2)
(29,27,2)
(37,8,2)
(30,27,2)
(43,32,2)
(43,3,2)
(3,8,2)
(17,3,2)
(14,8,2)
(10,32,2)
(23,27,2)
(5,27,2)
(10,8,2)
(13,7,2)
(27,8,2)
(1,8,2)
(3,10,2)
(28,8,2)
(2,43,2)
(9,7,2)
(26,7,2)
(17,27,2)
(2,29,2)
(16,8,2)
(0,8,2)
(2,27,2)
-----------------------------------
(0,NULL)
(1,break;)
(2,wcsncat(data+dataLen, environment, 100-dataLen-1)
(3,dataLen = wcslen(data)
(4,dataLen)
(5,100)
(6,stdout)
(7,1)
(8,1)
(9,data)
(10,wcslen(data)
(11,environment)
(12,)
(13,break;)
(14,* environment = GETENV(ENV_VARIABLE)
(15,"")
(16,environment)
(17,dataLen-1)
(18,dataLen)
(19,while(1)
(20,dataLen)
(21,data)
(22,while(1)
(23,data)
(24,dataLen)
(25,dataBuffer)
(26,fwprintf(stdout, data)
(27,environment != NULL)
(28,ENV_VARIABLE)
(29,100-dataLen-1)
(30,1)
(31,)
(32,data = dataBuffer)
(33,data)
(34,if (environment != NULL)
(35,)
(36,environment)
(37,environment)
(38,)
(39,data)
(40,RET)
(41,)
(42,GETENV(ENV_VARIABLE)
(43,data+dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
