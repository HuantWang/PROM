-----label-----
1
-----code-----
void CWE464_Addition_of_Data_Structure_Sentinel__basic_18_bad()
{
    char data;
    data = ' ';
    goto source;
source:
    {
        char charArraySource[2];
        charArraySource[0] = (char)getc(stdin);
        charArraySource[1] = '\0';
        /* FLAW: If the character entered on the command line is not an int,
         * a null value will be returned */
        data = (char)atoi(charArraySource);
    }
    {
        char charArraySink[4];
        charArraySink[0] = 'x';
        /* POTENTIAL FLAW: If data is null, the rest of the array will not be printed */
        charArraySink[1] = data;
        charArraySink[2] = 'z';
        charArraySink[3] = '\0';
        printLine(charArraySink);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
16,17
18,19
18,20
20,21
20,22
20,23
20,24
21,22
22,23
22,24
24,25
24,26
26,27
28,29
29,30
29,31
30,31
30,32
31,32
34,35
34,36
35,36
35,37
38,39
38,40
39,40
41,42
43,44
44,45
44,46
45,46
45,47
46,47
50,51
51,52
51,53
52,53
54,55
54,56
55,56
55,57
58,59
58,60
59,60
61,62
63,64
63,65
63,66
63,67
63,68
63,69
64,65
65,66
65,67
67,68
67,69
69,70
71,72
72,73
72,74
73,74
73,75
74,75
78,79
79,80
79,81
80,81
80,82
81,82
84,85
86,87
87,88
87,89
88,89
88,90
89,90
93,94
94,95
94,96
95,96
95,97
96,97
100,101
101,102
101,103
102,103
104,105
-----nextToken-----
2,4,8,10,14,15,17,19,23,25,27,32,33,36,37,40,42,47,48,49,53,56,57,60,62,66,68,70,75,76,77,82,83,85,90,91,92,97,98,99,103,105
-----computeFrom-----
12,13
12,14
29,30
29,31
44,45
44,46
51,52
51,53
72,73
72,74
79,80
79,81
87,88
87,89
94,95
94,96
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE464_Addition_of_Data_Structure_Sentinel__basic_18_bad(){    char data;    data = ' ';    goto source;source:    {        char charArraySource[2];        charArraySource[0] = (char)getc(stdin);        charArraySource[1] = '\0';        /* FLAW: If the character entered on the command line is not an int,         * a null value will be returned */        data = (char)atoi(charArraySource);    }    {        char charArraySink[4];        charArraySink[0] = 'x';        /* POTENTIAL FLAW: If data is null, the rest of the array will not be printed */        charArraySink[1] = data;        charArraySink[2] = 'z';        charArraySink[3] = '\0';        printLine(charArraySink);    }}
void
CWE464_Addition_of_Data_Structure_Sentinel__basic_18_bad()
CWE464_Addition_of_Data_Structure_Sentinel__basic_18_bad
{    char data;    data = ' ';    goto source;source:    {        char charArraySource[2];        charArraySource[0] = (char)getc(stdin);        charArraySource[1] = '\0';        /* FLAW: If the character entered on the command line is not an int,         * a null value will be returned */        data = (char)atoi(charArraySource);    }    {        char charArraySink[4];        charArraySink[0] = 'x';        /* POTENTIAL FLAW: If data is null, the rest of the array will not be printed */        charArraySink[1] = data;        charArraySink[2] = 'z';        charArraySink[3] = '\0';        printLine(charArraySink);    }}
char data;
char data;
char
data
data
data = ' ';
data = ' '
data
data
' '
goto source;
source
source:    {        char charArraySource[2];        charArraySource[0] = (char)getc(stdin);        charArraySource[1] = '\0';        /* FLAW: If the character entered on the command line is not an int,         * a null value will be returned */        data = (char)atoi(charArraySource);    }
source
{        char charArraySource[2];        charArraySource[0] = (char)getc(stdin);        charArraySource[1] = '\0';        /* FLAW: If the character entered on the command line is not an int,         * a null value will be returned */        data = (char)atoi(charArraySource);    }
char charArraySource[2];
char charArraySource[2];
char
charArraySource[2]
charArraySource
[2]
2
charArraySource[0] = (char)getc(stdin);
charArraySource[0] = (char)getc(stdin)
charArraySource[0]
charArraySource
charArraySource
0
(char)getc(stdin)
char
char

getc(stdin)
getc
getc
stdin
stdin
charArraySource[1] = '\0';
charArraySource[1] = '\0'
charArraySource[1]
charArraySource
charArraySource
1
'\0'
data = (char)atoi(charArraySource);
data = (char)atoi(charArraySource)
data
data
(char)atoi(charArraySource)
char
char

atoi(charArraySource)
atoi
atoi
charArraySource
charArraySource
{        char charArraySink[4];        charArraySink[0] = 'x';        /* POTENTIAL FLAW: If data is null, the rest of the array will not be printed */        charArraySink[1] = data;        charArraySink[2] = 'z';        charArraySink[3] = '\0';        printLine(charArraySink);    }
char charArraySink[4];
char charArraySink[4];
char
charArraySink[4]
charArraySink
[4]
4
charArraySink[0] = 'x';
charArraySink[0] = 'x'
charArraySink[0]
charArraySink
charArraySink
0
'x'
charArraySink[1] = data;
charArraySink[1] = data
charArraySink[1]
charArraySink
charArraySink
1
data
data
charArraySink[2] = 'z';
charArraySink[2] = 'z'
charArraySink[2]
charArraySink
charArraySink
2
'z'
charArraySink[3] = '\0';
charArraySink[3] = '\0'
charArraySink[3]
charArraySink
charArraySink
3
'\0'
printLine(charArraySink);
printLine(charArraySink)
printLine
printLine
charArraySink
charArraySink
-----joern-----
(25,46,0)
(46,45,0)
(38,34,0)
(28,48,0)
(0,19,0)
(46,9,0)
(29,0,0)
(40,2,0)
(46,25,0)
(11,1,0)
(19,43,0)
(10,5,0)
(4,43,0)
(27,43,0)
(45,46,0)
(32,5,0)
(7,34,0)
(30,43,0)
(15,32,0)
(36,15,0)
(41,30,0)
(14,18,0)
(12,21,0)
(24,35,0)
(5,43,0)
(16,30,0)
(51,29,0)
(39,32,0)
(35,10,0)
(3,15,0)
(34,5,0)
(44,7,0)
(48,5,0)
(21,8,0)
(50,0,0)
(47,8,0)
(8,5,0)
(13,19,0)
(37,9,0)
(17,7,0)
(2,1,0)
(26,25,0)
(23,10,0)
(6,11,0)
(1,2,0)
(25,19,0)
(22,29,0)
(20,43,0)
(52,35,0)
(18,2,0)
(2,40,0)
(33,11,0)
(1,19,0)
(49,21,0)
(32,25,0)
(9,46,0)
(42,5,0)
(2,18,0)
(37,26,1)
(30,16,1)
(47,21,1)
(39,15,1)
(21,12,1)
(23,35,1)
(49,32,1)
(17,25,1)
(46,9,1)
(52,24,1)
(20,30,1)
(11,6,1)
(32,39,1)
(6,33,1)
(38,7,1)
(26,0,1)
(2,40,1)
(35,52,1)
(8,47,1)
(34,38,1)
(3,36,1)
(25,46,1)
(44,17,1)
(48,28,1)
(7,44,1)
(16,41,1)
(24,8,1)
(33,20,1)
(31,48,1)
(29,51,1)
(15,3,1)
(1,2,1)
(0,50,1)
(36,34,1)
(2,18,1)
(14,11,1)
(12,49,1)
(50,29,1)
(18,14,1)
(28,10,1)
(10,23,1)
(51,22,1)
(46,45,1)
(9,37,1)
(32,25,1)
(22,1,1)
(2,40,2)
(46,45,2)
(1,2,2)
(46,9,2)
(32,25,2)
(25,46,2)
(2,18,2)
-----------------------------------
(0,charArraySource[1] = '\\\\0')
(1,charArraySource[0] = (char)
(2,(char)
(3,1)
(4,data)
(5,)
(6,0)
(7,charArraySink[0])
(8,charArraySink[2] = 'z')
(9,atoi(charArraySource)
(10,charArraySink[3] = '\\\\0')
(11,charArraySource[0])
(12,2)
(13,charArraySource)
(14,stdin)
(15,charArraySink[1])
(16,' ')
(17,charArraySink)
(18,getc(stdin)
(19,)
(20,goto source;)
(21,charArraySink[2])
(22,charArraySource)
(23,'\\\\0')
(24,charArraySink)
(25,data = (char)
(26,data)
(27,source:)
(28,charArraySink)
(29,charArraySource[1])
(30,data = ' ')
(31,RET)
(32,charArraySink[1] = data)
(33,charArraySource)
(34,charArraySink[0] = 'x')
(35,charArraySink[3])
(36,charArraySink)
(37,charArraySource)
(38,'x')
(39,data)
(40,char)
(41,data)
(42,charArraySink)
(43,)
(44,0)
(45,char)
(46,(char)
(47,'z')
(48,printLine(charArraySink)
(49,charArraySink)
(50,'\\\\0')
(51,1)
(52,3)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
