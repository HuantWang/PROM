-----label-----
1
-----code-----
void CWE134_Uncontrolled_Format_String__char_environment_fprintf_18_bad()
{
    char * data;
    char dataBuffer[100] = "";
    data = dataBuffer;
    goto source;
source:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    goto sink;
sink:
    /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */
    fprintf(stdout, data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
29,30
29,31
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
80,81
82,83
82,84
84,85
85,86
85,87
85,88
86,87
88,89
90,91
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,28,30,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,81,83,87,89,91
-----computeFrom-----
22,23
22,24
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE134_Uncontrolled_Format_String__char_environment_fprintf_18_bad(){    char * data;    char dataBuffer[100] = "";    data = dataBuffer;    goto source;source:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    goto sink;sink:    /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */    fprintf(stdout, data);}
void
CWE134_Uncontrolled_Format_String__char_environment_fprintf_18_bad()
CWE134_Uncontrolled_Format_String__char_environment_fprintf_18_bad
{    char * data;    char dataBuffer[100] = "";    data = dataBuffer;    goto source;source:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    goto sink;sink:    /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */    fprintf(stdout, data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = "";
char dataBuffer[100] = "";
char
dataBuffer[100] = ""
dataBuffer
[100]
100
= ""
""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
goto source;
source
source:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
source
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
goto sink;
sink
sink:    /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */    fprintf(stdout, data);
sink
fprintf(stdout, data);
fprintf(stdout, data)
fprintf
fprintf
stdout
stdout
data
data
-----joern-----
(1,30,0)
(15,10,0)
(9,14,0)
(36,39,0)
(29,28,0)
(15,36,0)
(25,14,0)
(19,14,0)
(7,14,0)
(31,10,0)
(33,19,0)
(2,39,0)
(8,16,0)
(39,14,0)
(37,1,0)
(16,19,0)
(13,31,0)
(35,16,0)
(31,30,0)
(15,1,0)
(32,7,0)
(22,16,0)
(12,30,0)
(22,30,0)
(30,22,0)
(34,27,0)
(18,27,0)
(6,14,0)
(3,39,0)
(42,10,0)
(10,15,0)
(30,39,0)
(16,14,0)
(11,15,0)
(10,31,0)
(23,31,0)
(36,28,0)
(40,14,0)
(17,39,0)
(0,36,0)
(4,14,0)
(1,16,0)
(38,7,0)
(28,36,0)
(7,16,0)
(1,15,0)
(26,19,0)
(15,24,0)
(21,14,0)
(27,36,0)
(5,1,0)
(41,22,0)
(12,40,1)
(1,37,1)
(22,16,1)
(0,30,1)
(11,1,1)
(42,11,1)
(26,33,1)
(31,13,1)
(4,15,1)
(10,31,1)
(40,16,1)
(32,4,1)
(23,42,1)
(30,22,1)
(41,12,1)
(16,8,1)
(35,19,1)
(19,26,1)
(15,36,1)
(15,10,1)
(13,23,1)
(18,34,1)
(1,16,1)
(8,35,1)
(37,5,1)
(1,30,1)
(22,41,1)
(36,28,1)
(20,7,1)
(7,16,1)
(34,36,1)
(27,36,1)
(7,38,1)
(5,27,1)
(29,0,1)
(16,19,1)
(31,30,1)
(15,1,1)
(38,32,1)
(4,27,1)
(28,29,1)
(27,18,1)
(13,27,2)
(16,19,2)
(15,27,2)
(7,16,2)
(37,27,2)
(27,36,2)
(1,16,2)
(42,27,2)
(1,27,2)
(5,27,2)
(22,16,2)
(31,30,2)
(30,22,2)
(10,27,2)
(36,28,2)
(23,27,2)
(15,10,2)
(15,36,2)
(11,27,2)
(31,27,2)
(15,1,2)
(1,30,2)
(10,31,2)
-----------------------------------
(0,environment)
(1,data+dataLen)
(2,if (environment != NULL)
(3,environment)
(4,goto sink;)
(5,data)
(6,dataBuffer)
(7,fprintf(stdout, data)
(8,dataBuffer)
(9,sink:)
(10,100-dataLen-1)
(11,environment)
(12,dataLen)
(13,1)
(14,)
(15,strncat(data+dataLen, environment, 100-dataLen-1)
(16,data = dataBuffer)
(17,dataLen)
(18,NULL)
(19,dataBuffer[100] = "")
(20,RET)
(21,source:)
(22,strlen(data)
(23,dataLen)
(24,)
(25,data)
(26,"")
(27,environment != NULL)
(28,GETENV(ENV_VARIABLE)
(29,ENV_VARIABLE)
(30,dataLen = strlen(data)
(31,dataLen-1)
(32,stdout)
(33,dataBuffer)
(34,environment)
(35,data)
(36,* environment = GETENV(ENV_VARIABLE)
(37,dataLen)
(38,data)
(39,)
(40,goto source;)
(41,data)
(42,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
