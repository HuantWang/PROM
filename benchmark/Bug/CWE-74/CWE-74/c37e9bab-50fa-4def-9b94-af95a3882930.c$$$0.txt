-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execl_09_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* execl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
82,83
82,84
82,85
82,86
82,87
82,88
83,84
85,86
87,88
89,90
91,92
93,94
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,88,90,92,94
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execl_09_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(GLOBAL_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execl_09_bad()
CWE78_OS_Command_Injection__char_environment_execl_09_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(GLOBAL_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(GLOBAL_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(0,31,0)
(31,28,0)
(6,13,0)
(40,28,0)
(5,1,0)
(0,27,0)
(18,26,0)
(4,26,0)
(1,13,0)
(36,27,0)
(39,1,0)
(18,39,0)
(35,41,0)
(2,28,0)
(27,13,0)
(22,13,0)
(11,1,0)
(14,2,0)
(21,2,0)
(10,5,0)
(27,9,0)
(38,2,0)
(7,2,0)
(9,27,0)
(29,0,0)
(12,28,0)
(33,24,0)
(8,41,0)
(44,9,0)
(9,31,0)
(41,28,0)
(39,0,0)
(39,20,0)
(17,31,0)
(34,13,0)
(1,24,0)
(13,3,0)
(43,2,0)
(26,18,0)
(31,41,0)
(39,18,0)
(24,1,0)
(32,31,0)
(37,26,0)
(26,27,0)
(30,5,0)
(16,18,0)
(25,28,0)
(15,0,0)
(23,39,0)
(0,39,0)
(11,27,1)
(43,42,1)
(2,14,1)
(18,26,1)
(0,27,1)
(27,9,1)
(17,32,1)
(15,29,1)
(38,7,1)
(36,42,1)
(9,31,1)
(14,38,1)
(0,15,1)
(23,0,1)
(0,31,1)
(41,8,1)
(5,1,1)
(42,31,1)
(30,1,1)
(31,41,1)
(10,30,1)
(33,11,1)
(39,0,1)
(4,16,1)
(8,35,1)
(26,27,1)
(43,39,1)
(26,37,1)
(1,24,1)
(43,5,1)
(5,10,1)
(31,17,1)
(39,18,1)
(29,5,1)
(24,33,1)
(37,4,1)
(39,1,1)
(16,23,1)
(32,41,1)
(7,21,1)
(9,44,1)
(44,36,1)
(19,2,1)
(21,43,1)
(30,42,2)
(4,5,2)
(1,42,2)
(39,0,2)
(26,5,2)
(9,31,2)
(44,42,2)
(0,27,2)
(5,42,2)
(23,5,2)
(39,5,2)
(26,27,2)
(5,1,2)
(11,42,2)
(31,41,2)
(27,9,2)
(18,5,2)
(0,31,2)
(15,5,2)
(33,42,2)
(39,18,2)
(10,42,2)
(36,42,2)
(29,5,2)
(27,42,2)
(37,5,2)
(1,24,2)
(39,1,2)
(18,26,2)
(9,42,2)
(16,5,2)
(24,42,2)
(0,5,2)
-----------------------------------
(0,data+dataLen)
(1,* environment = GETENV(ENV_VARIABLE)
(2,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(3,)
(4,dataLen)
(5,environment != NULL)
(6,if (environment != NULL)
(7,COMMAND_ARG1)
(8,COMMAND_ARG2)
(9,strlen(data)
(10,NULL)
(11,environment)
(12,if(GLOBAL_CONST_TRUE)
(13,)
(14,NULL)
(15,dataLen)
(16,100)
(17,dataBuffer)
(18,100-dataLen-1)
(19,RET)
(20,)
(21,COMMAND_INT_PATH)
(22,environment)
(23,environment)
(24,GETENV(ENV_VARIABLE)
(25,data)
(26,dataLen-1)
(27,dataLen = strlen(data)
(28,)
(29,data)
(30,environment)
(31,data = dataBuffer)
(32,data)
(33,ENV_VARIABLE)
(34,dataLen)
(35,dataBuffer)
(36,dataLen)
(37,1)
(38,COMMAND_ARG3)
(39,strncat(data+dataLen, environment, 100-dataLen-1)
(40,dataBuffer)
(41,dataBuffer[100] = COMMAND_ARG2)
(42,GLOBAL_CONST_TRUE)
(43,COMMAND_INT_PATH)
(44,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
