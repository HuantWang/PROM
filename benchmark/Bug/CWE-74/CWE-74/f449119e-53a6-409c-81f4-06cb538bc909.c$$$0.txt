-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_04_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(STATIC_CONST_TRUE)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* spawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
82,83
82,84
82,85
82,86
82,87
82,88
82,89
83,84
85,86
87,88
89,90
91,92
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,88,90,92,94,96
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_04_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32spawnl_04_bad()
CWE78_OS_Command_Injection__char_environment_w32spawnl_04_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(17,27,0)
(28,13,0)
(25,33,0)
(12,32,0)
(27,7,0)
(13,28,0)
(23,28,0)
(20,10,0)
(26,45,0)
(21,24,0)
(37,32,0)
(5,10,0)
(29,24,0)
(4,24,0)
(43,13,0)
(27,32,0)
(14,10,0)
(19,24,0)
(43,45,0)
(9,10,0)
(43,33,0)
(9,20,0)
(35,7,0)
(2,27,0)
(8,43,0)
(6,9,0)
(34,10,0)
(32,0,0)
(15,13,0)
(45,43,0)
(7,27,0)
(3,13,0)
(2,33,0)
(44,15,0)
(36,9,0)
(42,2,0)
(30,32,0)
(33,2,0)
(24,10,0)
(39,24,0)
(16,2,0)
(41,45,0)
(43,18,0)
(1,24,0)
(45,27,0)
(11,20,0)
(31,20,0)
(13,32,0)
(45,9,0)
(33,43,0)
(7,9,0)
(38,15,0)
(38,44,1)
(15,38,1)
(15,13,1)
(21,39,1)
(26,41,1)
(7,35,1)
(16,25,1)
(23,3,1)
(3,27,1)
(43,45,1)
(9,20,1)
(2,27,1)
(43,13,1)
(8,45,1)
(45,9,1)
(45,26,1)
(7,9,1)
(22,9,1)
(39,15,1)
(4,21,1)
(25,8,1)
(6,20,1)
(29,4,1)
(42,16,1)
(24,1,1)
(41,15,1)
(43,33,1)
(17,22,1)
(11,31,1)
(2,42,1)
(27,7,1)
(9,36,1)
(13,28,1)
(39,22,1)
(39,43,1)
(1,19,1)
(45,27,1)
(44,13,1)
(28,23,1)
(33,2,1)
(35,17,1)
(36,6,1)
(40,24,1)
(20,11,1)
(19,29,1)
(45,15,2)
(27,22,2)
(15,13,2)
(7,22,2)
(7,9,2)
(8,15,2)
(9,20,2)
(38,22,2)
(35,22,2)
(44,22,2)
(33,2,2)
(17,22,2)
(26,15,2)
(28,22,2)
(43,33,2)
(43,13,2)
(41,15,2)
(23,22,2)
(42,15,2)
(16,15,2)
(3,22,2)
(33,15,2)
(2,15,2)
(43,45,2)
(15,22,2)
(27,7,2)
(45,27,2)
(13,28,2)
(43,15,2)
(2,27,2)
(25,15,2)
(13,22,2)
(45,9,2)
-----------------------------------
(0,)
(1,NULL)
(2,dataLen-1)
(3,environment)
(4,COMMAND_INT_PATH)
(5,data)
(6,data)
(7,strlen(data)
(8,environment)
(9,data = dataBuffer)
(10,)
(11,COMMAND_ARG2)
(12,if (environment != NULL)
(13,* environment = GETENV(ENV_VARIABLE)
(14,if(STATIC_CONST_TRUE)
(15,environment != NULL)
(16,dataLen)
(17,dataLen)
(18,)
(19,COMMAND_ARG3)
(20,dataBuffer[100] = COMMAND_ARG2)
(21,COMMAND_INT_PATH)
(22,STATIC_CONST_TRUE)
(23,ENV_VARIABLE)
(24,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(25,100)
(26,dataLen)
(27,dataLen = strlen(data)
(28,GETENV(ENV_VARIABLE)
(29,COMMAND_ARG1)
(30,dataLen)
(31,dataBuffer)
(32,)
(33,100-dataLen-1)
(34,dataBuffer)
(35,data)
(36,dataBuffer)
(37,environment)
(38,NULL)
(39,_P_WAIT)
(40,RET)
(41,data)
(42,1)
(43,strncat(data+dataLen, environment, 100-dataLen-1)
(44,environment)
(45,data+dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
