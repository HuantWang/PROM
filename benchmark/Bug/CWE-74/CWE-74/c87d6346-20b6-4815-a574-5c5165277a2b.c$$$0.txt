-----label-----
1
-----code-----
static void badSink(char * data)
{
    {
        char dest[100] = "";
        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */
        SNPRINTF(dest, 100-1, data);
        printLine(dest);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
11,14
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
22,25
22,26
23,24
25,26
27,28
27,29
30,31
32,33
33,34
33,35
34,35
36,37
-----nextToken-----
2,4,6,8,9,14,16,18,20,24,26,28,29,31,35,37
-----computeFrom-----
27,28
27,29
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(char * data){    {        char dest[100] = "";        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        SNPRINTF(dest, 100-1, data);        printLine(dest);    }}
static void
badSink(char * data)
badSink
char * data
char
* data
*
data
{    {        char dest[100] = "";        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        SNPRINTF(dest, 100-1, data);        printLine(dest);    }}
{        char dest[100] = "";        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        SNPRINTF(dest, 100-1, data);        printLine(dest);    }
char dest[100] = "";
char dest[100] = "";
char
dest[100] = ""
dest
[100]
100
= ""
""
SNPRINTF(dest, 100-1, data);
SNPRINTF(dest, 100-1, data)
SNPRINTF
SNPRINTF
dest
dest
100-1
100
1
data
data
printLine(dest);
printLine(dest)
printLine
printLine
dest
dest
-----joern-----
(3,7,0)
(4,9,0)
(7,2,0)
(9,4,0)
(1,9,0)
(9,14,0)
(13,14,0)
(14,7,0)
(9,8,0)
(0,14,0)
(0,7,0)
(9,7,0)
(11,9,0)
(15,14,0)
(6,0,0)
(10,4,0)
(12,4,0)
(9,11,1)
(12,10,1)
(9,8,1)
(15,13,1)
(9,4,1)
(0,6,1)
(10,1,1)
(4,12,1)
(6,9,1)
(9,14,1)
(0,14,1)
(5,0,1)
(11,4,1)
(1,14,1)
(14,15,1)
(0,14,2)
(9,4,2)
(9,8,2)
(9,14,2)
-----------------------------------
(0,printLine(dest)
(1,dest)
(2,)
(3,dest)
(4,100-1)
(5,RET)
(6,dest)
(7,)
(8,char * data)
(9,SNPRINTF(dest, 100-1, data)
(10,100)
(11,data)
(12,1)
(13,dest)
(14,dest[100] = "")
(15,"")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
