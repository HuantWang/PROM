-----label-----
1
-----code-----
static wchar_t * badSource(wchar_t * data)
{
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
28,29
28,30
28,31
31,32
32,33
32,34
33,34
35,36
37,38
37,39
38,39
38,40
39,40
41,42
43,44
44,45
45,46
45,47
45,48
45,49
46,47
48,49
48,50
49,50
51,52
53,54
55,56
55,57
56,57
56,58
58,59
61,62
62,63
-----nextToken-----
2,4,5,7,9,10,16,18,22,24,27,29,30,34,36,40,42,47,50,52,54,57,59,60,63
-----computeFrom-----
38,39
38,40
48,49
48,50
55,56
55,57
56,57
56,58
-----guardedBy-----
40,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static wchar_t * badSource(wchar_t * data){    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    return data;}
static wchar_t
* badSource(wchar_t * data)
*
badSource
wchar_t * data
wchar_t
* data
*
data
{    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    return data;}
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
return data;
data
data
-----joern-----
(15,27,0)
(11,17,0)
(18,4,0)
(1,13,0)
(16,4,0)
(6,21,0)
(4,16,0)
(0,21,0)
(21,23,0)
(24,27,0)
(8,16,0)
(5,11,0)
(10,24,0)
(3,16,0)
(3,13,0)
(17,11,0)
(25,9,0)
(4,12,0)
(30,3,0)
(26,19,0)
(27,24,0)
(13,3,0)
(16,24,0)
(2,19,0)
(19,24,0)
(28,21,0)
(17,21,0)
(13,17,0)
(20,9,0)
(14,13,0)
(16,3,0)
(9,23,0)
(16,29,0)
(24,21,0)
(4,17,0)
(7,17,0)
(22,4,0)
(11,12,0)
(9,12,0)
(27,15,1)
(4,17,1)
(25,19,1)
(11,5,1)
(19,24,1)
(26,2,1)
(24,27,1)
(11,12,1)
(22,18,1)
(1,30,1)
(8,4,1)
(19,26,1)
(16,3,1)
(25,16,1)
(5,7,1)
(13,17,1)
(9,12,1)
(4,12,1)
(20,9,1)
(17,11,1)
(15,10,1)
(2,24,1)
(18,19,1)
(30,8,1)
(4,22,1)
(16,4,1)
(13,14,1)
(14,1,1)
(3,13,1)
(10,17,1)
(16,24,1)
(9,25,1)
(16,19,2)
(24,27,2)
(19,24,2)
(18,19,2)
(20,9,2)
(13,19,2)
(16,24,2)
(17,11,2)
(3,13,2)
(11,12,2)
(8,19,2)
(16,3,2)
(4,17,2)
(4,19,2)
(16,4,2)
(13,17,2)
(14,19,2)
(3,19,2)
(1,19,2)
(9,12,2)
(4,12,2)
(30,19,2)
(22,19,2)
-----------------------------------
(0,dataLen)
(1,dataLen)
(2,environment)
(3,100-dataLen-1)
(4,data+dataLen)
(5,data)
(6,if (environment != NULL)
(7,dataLen)
(8,environment)
(9,return data;)
(10,environment)
(11,wcslen(data)
(12,wchar_t * data)
(13,dataLen-1)
(14,1)
(15,ENV_VARIABLE)
(16,wcsncat(data+dataLen, environment, 100-dataLen-1)
(17,dataLen = wcslen(data)
(18,data)
(19,environment != NULL)
(20,RET)
(21,)
(22,dataLen)
(23,)
(24,* environment = GETENV(ENV_VARIABLE)
(25,data)
(26,NULL)
(27,GETENV(ENV_VARIABLE)
(28,environment)
(29,)
(30,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
