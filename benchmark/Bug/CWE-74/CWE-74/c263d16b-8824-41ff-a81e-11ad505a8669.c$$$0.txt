-----label-----
1
-----code-----
static wchar_t * badSource(wchar_t * data)
{
    if(badStatic)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
13,14
15,16
16,17
16,18
16,19
17,18
18,19
18,20
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
32,33
32,34
32,35
35,36
36,37
36,38
37,38
39,40
41,42
41,43
42,43
42,44
43,44
45,46
47,48
48,49
49,50
49,51
49,52
49,53
50,51
52,53
52,54
53,54
55,56
57,58
59,60
59,61
60,61
60,62
62,63
65,66
66,67
-----nextToken-----
2,4,5,7,9,10,14,20,22,26,28,31,33,34,38,40,44,46,51,54,56,58,61,63,64,67
-----computeFrom-----
42,43
42,44
52,53
52,54
59,60
59,61
60,61
60,62
-----guardedBy-----
44,58
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static wchar_t * badSource(wchar_t * data){    if(badStatic)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    return data;}
static wchar_t
* badSource(wchar_t * data)
*
badSource
wchar_t * data
wchar_t
* data
*
data
{    if(badStatic)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    return data;}
if(badStatic)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
badStatic
badStatic
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
return data;
data
data
-----joern-----
(5,17,0)
(27,1,0)
(33,19,0)
(16,9,0)
(2,28,0)
(22,2,0)
(16,33,0)
(6,1,0)
(25,5,0)
(4,22,0)
(3,2,0)
(5,1,0)
(18,19,0)
(22,4,0)
(30,27,0)
(19,33,0)
(21,5,0)
(11,15,0)
(19,27,0)
(0,4,0)
(33,16,0)
(9,2,0)
(8,15,0)
(9,6,0)
(19,20,0)
(29,16,0)
(7,22,0)
(13,9,0)
(24,17,0)
(27,19,0)
(10,6,0)
(12,33,0)
(14,27,0)
(27,9,0)
(19,22,0)
(31,2,0)
(32,2,0)
(23,16,0)
(15,22,0)
(6,9,0)
(19,22,1)
(5,1,1)
(6,1,1)
(21,26,1)
(15,22,1)
(25,5,1)
(27,1,1)
(18,27,1)
(8,22,1)
(15,11,1)
(4,0,1)
(21,15,1)
(16,9,1)
(19,27,1)
(5,21,1)
(16,29,1)
(21,19,1)
(14,30,1)
(9,6,1)
(7,9,1)
(12,18,1)
(22,4,1)
(27,14,1)
(10,13,1)
(19,33,1)
(29,23,1)
(6,10,1)
(11,8,1)
(27,9,1)
(30,15,1)
(13,26,1)
(0,7,1)
(33,16,1)
(23,12,1)
(19,15,2)
(14,15,2)
(5,1,2)
(19,27,2)
(9,26,2)
(22,4,2)
(25,5,2)
(33,16,2)
(4,26,2)
(12,15,2)
(9,6,2)
(16,9,2)
(16,15,2)
(27,1,2)
(23,15,2)
(22,26,2)
(13,26,2)
(18,15,2)
(6,1,2)
(19,33,2)
(7,26,2)
(27,15,2)
(8,26,2)
(10,26,2)
(6,26,2)
(33,15,2)
(0,26,2)
(29,15,2)
(19,22,2)
(15,26,2)
(30,15,2)
(11,26,2)
(27,9,2)
(15,22,2)
-----------------------------------
(0,ENV_VARIABLE)
(1,wchar_t * data)
(2,)
(3,if (environment != NULL)
(4,GETENV(ENV_VARIABLE)
(5,return data;)
(6,wcslen(data)
(7,environment)
(8,environment)
(9,dataLen = wcslen(data)
(10,data)
(11,NULL)
(12,100)
(13,dataLen)
(14,dataLen)
(15,environment != NULL)
(16,dataLen-1)
(17,)
(18,environment)
(19,wcsncat(data+dataLen, environment, 100-dataLen-1)
(20,)
(21,data)
(22,* environment = GETENV(ENV_VARIABLE)
(23,dataLen)
(24,if(badStatic)
(25,RET)
(26,badStatic)
(27,data+dataLen)
(28,)
(29,1)
(30,data)
(31,environment)
(32,dataLen)
(33,100-dataLen-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
