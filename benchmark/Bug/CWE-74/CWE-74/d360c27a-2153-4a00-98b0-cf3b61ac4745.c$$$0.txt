-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_listen_socket_w32spawnl_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
    /* dereference dataPtr into data */
    wchar_t * data = (*dataPtr);
    /* wspawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
14,17
14,18
18,19
19,20
19,21
20,21
20,22
22,23
22,24
25,26
27,28
28,29
28,30
30,31
30,32
30,33
33,34
34,35
35,36
36,37
38,39
39,40
39,41
39,42
39,43
39,44
39,45
39,46
40,41
42,43
44,45
46,47
48,49
50,51
52,53
-----nextToken-----
2,4,6,8,9,13,15,16,17,21,23,24,26,29,31,32,37,41,43,45,47,49,51,53
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_listen_socket_w32spawnl_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;    /* dereference dataPtr into data */    wchar_t * data = (*dataPtr);    /* wspawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__wchar_t_listen_socket_w32spawnl_64b_badSink(void * dataVoidPtr)
CWE78_OS_Command_Injection__wchar_t_listen_socket_w32spawnl_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;    /* dereference dataPtr into data */    wchar_t * data = (*dataPtr);    /* wspawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
wchar_t
* * dataPtr = (wchar_t * *)dataVoidPtr
*
*
dataPtr
= (wchar_t * *)dataVoidPtr
(wchar_t * *)dataVoidPtr
wchar_t * *
wchar_t
* *
*
*
dataVoidPtr
dataVoidPtr
wchar_t * data = (*dataPtr);
wchar_t * data = (*dataPtr);
wchar_t
* data = (*dataPtr)
*
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
_wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_wspawnl
_wspawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(7,11,0)
(15,11,0)
(20,11,0)
(6,7,0)
(19,16,0)
(17,20,0)
(4,20,0)
(16,7,0)
(12,20,0)
(14,11,0)
(8,20,0)
(10,20,0)
(2,6,0)
(16,3,0)
(16,18,0)
(6,15,0)
(15,6,0)
(1,15,0)
(18,16,0)
(9,20,0)
(5,7,0)
(13,11,0)
(7,16,0)
(17,15,1)
(9,17,1)
(20,8,1)
(1,7,1)
(10,9,1)
(0,20,1)
(7,16,1)
(8,12,1)
(2,1,1)
(6,2,1)
(19,5,1)
(16,18,1)
(4,10,1)
(16,19,1)
(12,4,1)
(6,7,1)
(15,6,1)
(16,3,1)
(6,7,2)
(16,18,2)
(15,6,2)
(7,16,2)
(16,3,2)
-----------------------------------
(0,RET)
(1,data)
(2,dataPtr)
(3,void * dataVoidPtr)
(4,COMMAND_ARG1)
(5,dataPtr)
(6,*dataPtr)
(7,* * dataPtr = (wchar_t * *)
(8,NULL)
(9,COMMAND_INT_PATH)
(10,COMMAND_INT_PATH)
(11,)
(12,COMMAND_ARG3)
(13,dataPtr)
(14,data)
(15,* data = (*dataPtr)
(16,(wchar_t * *)
(17,_P_WAIT)
(18,wchar_t * *)
(19,dataVoidPtr)
(20,_wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
