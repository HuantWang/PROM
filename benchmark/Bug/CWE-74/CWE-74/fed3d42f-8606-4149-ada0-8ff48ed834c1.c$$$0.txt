-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execl_16_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    while(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
        break;
    }
    /* execl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
81,82
82,83
82,84
82,85
82,86
82,87
82,88
83,84
85,86
87,88
89,90
91,92
93,94
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,80,84,86,88,90,92,94
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execl_16_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execl_16_bad()
CWE78_OS_Command_Injection__char_environment_execl_16_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(37,1,0)
(42,1,0)
(3,2,0)
(19,6,0)
(29,26,0)
(7,26,0)
(32,4,0)
(41,3,0)
(10,3,0)
(24,22,0)
(12,38,0)
(5,43,0)
(6,24,0)
(6,10,0)
(16,3,0)
(0,10,0)
(27,32,0)
(0,24,0)
(21,3,0)
(24,28,0)
(15,43,0)
(1,3,0)
(13,28,0)
(32,1,0)
(25,43,0)
(18,22,0)
(7,32,0)
(34,7,0)
(38,1,0)
(11,28,0)
(26,7,0)
(6,32,0)
(8,28,0)
(43,28,0)
(40,22,0)
(14,0,0)
(26,10,0)
(39,37,0)
(10,0,0)
(45,2,0)
(17,24,0)
(9,43,0)
(22,28,0)
(32,7,0)
(35,38,0)
(1,37,0)
(44,43,0)
(30,26,0)
(32,6,0)
(23,6,0)
(31,24,0)
(20,10,0)
(6,10,1)
(44,45,1)
(32,6,1)
(45,38,1)
(10,0,1)
(42,10,1)
(30,34,1)
(38,35,1)
(34,27,1)
(26,10,1)
(6,19,1)
(27,6,1)
(32,7,1)
(0,14,1)
(7,26,1)
(36,43,1)
(24,22,1)
(25,9,1)
(29,30,1)
(9,44,1)
(6,24,1)
(44,33,1)
(37,39,1)
(1,37,1)
(22,18,1)
(31,17,1)
(26,29,1)
(15,5,1)
(38,1,1)
(5,25,1)
(18,40,1)
(17,22,1)
(39,42,1)
(20,33,1)
(23,38,1)
(33,24,1)
(32,1,1)
(45,32,1)
(0,24,1)
(35,12,1)
(14,20,1)
(24,31,1)
(43,15,1)
(12,1,1)
(19,23,1)
(26,38,2)
(37,33,2)
(6,10,2)
(19,38,2)
(12,33,2)
(42,33,2)
(1,37,2)
(32,7,2)
(20,33,2)
(29,38,2)
(14,33,2)
(6,24,2)
(7,38,2)
(45,33,2)
(32,1,2)
(10,33,2)
(38,1,2)
(32,6,2)
(35,33,2)
(24,22,2)
(30,38,2)
(27,38,2)
(6,38,2)
(34,38,2)
(23,38,2)
(0,24,2)
(38,33,2)
(10,0,2)
(0,33,2)
(32,38,2)
(7,26,2)
(26,10,2)
(39,33,2)
(1,33,2)
-----------------------------------
(0,strlen(data)
(1,* environment = GETENV(ENV_VARIABLE)
(2,)
(3,)
(4,)
(5,COMMAND_ARG3)
(6,data+dataLen)
(7,100-dataLen-1)
(8,data)
(9,COMMAND_INT_PATH)
(10,dataLen = strlen(data)
(11,while(1)
(12,environment)
(13,dataBuffer)
(14,data)
(15,NULL)
(16,environment)
(17,data)
(18,COMMAND_ARG2)
(19,dataLen)
(20,dataLen)
(21,if (environment != NULL)
(22,dataBuffer[100] = COMMAND_ARG2)
(23,data)
(24,data = dataBuffer)
(25,COMMAND_ARG1)
(26,dataLen-1)
(27,environment)
(28,)
(29,1)
(30,dataLen)
(31,dataBuffer)
(32,strncat(data+dataLen, environment, 100-dataLen-1)
(33,1)
(34,100)
(35,NULL)
(36,RET)
(37,GETENV(ENV_VARIABLE)
(38,environment != NULL)
(39,ENV_VARIABLE)
(40,dataBuffer)
(41,dataLen)
(42,environment)
(43,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(44,COMMAND_INT_PATH)
(45,break;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
