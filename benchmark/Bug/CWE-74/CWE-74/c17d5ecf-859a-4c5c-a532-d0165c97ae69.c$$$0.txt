-----label-----
1
-----code-----
static void badSink(char * data)
{
    if(badStatic)
    {
        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */
        printf(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
12,13
14,15
15,16
16,17
16,18
17,18
19,20
-----nextToken-----
2,4,6,8,9,13,18,20
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(char * data){    if(badStatic)    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        printf(data);    }}
static void
badSink(char * data)
badSink
char * data
char
* data
*
data
{    if(badStatic)    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        printf(data);    }}
if(badStatic)    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        printf(data);    }
badStatic
badStatic
{        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        printf(data);    }
printf(data);
printf(data)
printf
printf
data
data
-----joern-----
(0,2,0)
(7,0,0)
(0,5,0)
(6,3,0)
(0,5,1)
(7,1,1)
(4,0,1)
(4,1,1)
(0,7,1)
(0,1,2)
(0,5,2)
(7,1,2)
-----------------------------------
(0,printf(data)
(1,badStatic)
(2,)
(3,)
(4,RET)
(5,char * data)
(6,if(badStatic)
(7,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
