-----label-----
1
-----code-----
void CWE134_Uncontrolled_Format_String__char_environment_fprintf_03_bad()
{
    char * data;
    char dataBuffer[100] = "";
    data = dataBuffer;
    if(5==5)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    if(5==5)
    {
        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */
        fprintf(stdout, data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
21,22
22,23
22,24
23,24
25,26
27,28
27,29
28,29
28,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
81,83
82,83
82,84
85,86
86,87
87,88
87,89
87,90
88,89
90,91
92,93
-----nextToken-----
2,4,8,10,11,14,16,18,20,24,26,29,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,83,84,89,91,93
-----computeFrom-----
22,23
22,24
28,29
28,30
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
82,83
82,84
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE134_Uncontrolled_Format_String__char_environment_fprintf_03_bad(){    char * data;    char dataBuffer[100] = "";    data = dataBuffer;    if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    if(5==5)    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fprintf(stdout, data);    }}
void
CWE134_Uncontrolled_Format_String__char_environment_fprintf_03_bad()
CWE134_Uncontrolled_Format_String__char_environment_fprintf_03_bad
{    char * data;    char dataBuffer[100] = "";    data = dataBuffer;    if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    if(5==5)    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fprintf(stdout, data);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = "";
char dataBuffer[100] = "";
char
dataBuffer[100] = ""
dataBuffer
[100]
100
= ""
""
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
5==5
5
5
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
if(5==5)    {        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fprintf(stdout, data);    }
5==5
5
5
{        /* POTENTIAL FLAW: Do not specify the format allowing a possible format string vulnerability */        fprintf(stdout, data);    }
fprintf(stdout, data);
fprintf(stdout, data)
fprintf
fprintf
stdout
stdout
data
data
-----joern-----
(4,32,0)
(23,46,0)
(46,9,0)
(45,25,0)
(15,11,0)
(44,31,0)
(10,46,0)
(43,40,0)
(48,0,0)
(25,45,0)
(41,30,0)
(7,31,0)
(3,43,0)
(16,32,0)
(13,25,0)
(32,5,0)
(37,30,0)
(24,30,0)
(5,35,0)
(42,35,0)
(0,2,0)
(20,43,0)
(25,34,0)
(27,47,0)
(14,34,0)
(40,48,0)
(36,34,0)
(40,46,0)
(19,30,0)
(43,0,0)
(45,5,0)
(34,25,0)
(1,46,0)
(38,45,0)
(22,0,0)
(0,30,0)
(5,46,0)
(21,15,0)
(2,30,0)
(29,5,0)
(6,2,0)
(45,43,0)
(48,40,0)
(39,2,0)
(43,45,0)
(28,47,0)
(45,17,0)
(18,40,0)
(15,0,0)
(34,40,0)
(35,5,0)
(33,0,0)
(12,48,0)
(26,15,0)
(47,27,1)
(0,2,1)
(26,21,1)
(45,5,1)
(7,45,1)
(32,5,1)
(0,33,1)
(8,31,1)
(40,48,1)
(45,25,1)
(42,29,1)
(7,47,1)
(48,0,1)
(34,36,1)
(29,40,1)
(43,20,1)
(31,44,1)
(48,12,1)
(3,32,1)
(8,15,1)
(15,26,1)
(39,6,1)
(14,13,1)
(27,28,1)
(43,0,1)
(35,42,1)
(25,34,1)
(18,47,1)
(44,7,1)
(36,14,1)
(5,35,1)
(13,38,1)
(15,0,1)
(7,32,1)
(4,5,1)
(45,43,1)
(38,43,1)
(43,40,1)
(33,22,1)
(21,31,1)
(22,2,1)
(34,40,1)
(16,4,1)
(20,3,1)
(32,16,1)
(2,39,1)
(28,0,1)
(12,18,1)
(40,48,2)
(16,47,2)
(45,5,2)
(38,32,2)
(45,25,2)
(32,5,2)
(25,34,2)
(48,47,2)
(40,47,2)
(45,32,2)
(32,47,2)
(20,32,2)
(14,32,2)
(3,32,2)
(18,47,2)
(21,31,2)
(4,47,2)
(34,32,2)
(45,43,2)
(26,31,2)
(12,47,2)
(25,32,2)
(36,32,2)
(43,32,2)
(13,32,2)
(0,2,2)
(15,0,2)
(42,47,2)
(5,35,2)
(15,31,2)
(35,47,2)
(5,47,2)
(29,47,2)
(43,0,2)
(43,40,2)
(34,40,2)
(48,0,2)
-----------------------------------
(0,data = dataBuffer)
(1,environment)
(2,dataBuffer[100] = "")
(3,data)
(4,environment)
(5,* environment = GETENV(ENV_VARIABLE)
(6,dataBuffer)
(7,5)
(8,RET)
(9,)
(10,if (environment != NULL)
(11,)
(12,data)
(13,100)
(14,dataLen)
(15,fprintf(stdout, data)
(16,NULL)
(17,)
(18,dataLen)
(19,data)
(20,dataLen)
(21,stdout)
(22,data)
(23,dataLen)
(24,dataBuffer)
(25,100-dataLen-1)
(26,data)
(27,5)
(28,5)
(29,environment)
(30,)
(31,5==5)
(32,environment != NULL)
(33,dataBuffer)
(34,dataLen-1)
(35,GETENV(ENV_VARIABLE)
(36,1)
(37,if(5==5)
(38,environment)
(39,"")
(40,dataLen = strlen(data)
(41,if(5==5)
(42,ENV_VARIABLE)
(43,data+dataLen)
(44,5)
(45,strncat(data+dataLen, environment, 100-dataLen-1)
(46,)
(47,5==5)
(48,strlen(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
