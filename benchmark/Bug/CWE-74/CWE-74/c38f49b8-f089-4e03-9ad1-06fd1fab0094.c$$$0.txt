-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execl_08_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(staticReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* execl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
83,85
83,86
83,87
83,88
83,89
84,85
86,87
88,89
90,91
92,93
94,95
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,85,87,89,91,93,95
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execl_08_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execl_08_bad()
CWE78_OS_Command_Injection__char_environment_execl_08_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(22,34,0)
(20,11,0)
(0,29,0)
(12,24,0)
(3,11,0)
(13,37,0)
(37,13,0)
(35,5,0)
(38,34,0)
(20,8,0)
(34,7,0)
(1,44,0)
(36,41,0)
(26,5,0)
(11,37,0)
(44,5,0)
(11,44,0)
(43,25,0)
(29,41,0)
(2,25,0)
(31,28,0)
(41,34,0)
(44,28,0)
(20,16,0)
(16,24,0)
(11,20,0)
(19,25,0)
(6,24,0)
(41,29,0)
(27,44,0)
(16,20,0)
(14,28,0)
(20,41,0)
(25,5,0)
(30,34,0)
(33,11,0)
(21,36,0)
(24,16,0)
(24,37,0)
(42,41,0)
(10,25,0)
(39,20,0)
(28,5,0)
(15,36,0)
(17,25,0)
(23,5,0)
(9,37,0)
(13,44,0)
(37,34,0)
(32,16,0)
(18,13,0)
(29,0,1)
(2,43,1)
(20,16,1)
(20,41,1)
(44,28,1)
(6,12,1)
(44,1,1)
(28,14,1)
(10,40,1)
(13,18,1)
(33,3,1)
(40,44,1)
(1,27,1)
(39,11,1)
(32,39,1)
(10,20,1)
(27,28,1)
(0,42,1)
(10,36,1)
(24,37,1)
(11,44,1)
(41,29,1)
(12,32,1)
(24,6,1)
(16,24,1)
(13,44,1)
(11,37,1)
(25,17,1)
(11,33,1)
(43,10,1)
(21,41,1)
(36,15,1)
(20,11,1)
(4,25,1)
(15,21,1)
(42,37,1)
(3,36,1)
(37,13,1)
(36,41,1)
(17,19,1)
(19,2,1)
(9,40,1)
(18,9,1)
(14,31,1)
(9,40,2)
(12,36,2)
(24,37,2)
(44,28,2)
(3,36,2)
(37,40,2)
(29,40,2)
(11,37,2)
(11,36,2)
(6,36,2)
(41,40,2)
(21,40,2)
(36,41,2)
(41,29,2)
(33,36,2)
(11,44,2)
(39,36,2)
(16,36,2)
(15,40,2)
(0,40,2)
(20,36,2)
(18,40,2)
(13,40,2)
(20,41,2)
(16,24,2)
(13,44,2)
(24,36,2)
(20,16,2)
(36,40,2)
(37,13,2)
(20,11,2)
(42,40,2)
(32,36,2)
-----------------------------------
(0,ENV_VARIABLE)
(1,dataBuffer)
(2,COMMAND_ARG1)
(3,data)
(4,RET)
(5,)
(6,1)
(7,)
(8,)
(9,dataLen)
(10,COMMAND_INT_PATH)
(11,data+dataLen)
(12,dataLen)
(13,strlen(data)
(14,COMMAND_ARG2)
(15,NULL)
(16,100-dataLen-1)
(17,NULL)
(18,data)
(19,COMMAND_ARG3)
(20,strncat(data+dataLen, environment, 100-dataLen-1)
(21,environment)
(22,environment)
(23,dataBuffer)
(24,dataLen-1)
(25,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(26,if(staticReturnsTrue()
(27,data)
(28,dataBuffer[100] = COMMAND_ARG2)
(29,GETENV(ENV_VARIABLE)
(30,if (environment != NULL)
(31,dataBuffer)
(32,100)
(33,dataLen)
(34,)
(35,data)
(36,environment != NULL)
(37,dataLen = strlen(data)
(38,dataLen)
(39,environment)
(40,staticReturnsTrue()
(41,* environment = GETENV(ENV_VARIABLE)
(42,environment)
(43,COMMAND_INT_PATH)
(44,data = dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
