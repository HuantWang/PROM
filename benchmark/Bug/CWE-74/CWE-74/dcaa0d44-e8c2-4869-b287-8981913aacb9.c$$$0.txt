-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_listen_socket_popen_21_bad()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    badStatic = 1; /* true */
    data = badSource(data);
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, L"w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
33,34
34,35
34,36
35,36
37,38
37,39
38,39
40,41
42,43
42,44
42,45
43,44
44,45
44,46
45,46
47,48
47,49
50,51
51,52
51,53
52,53
54,55
54,56
54,57
55,56
57,58
60,61
60,62
61,62
61,63
62,63
64,65
66,67
67,68
68,69
68,70
69,70
71,72
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,36,39,41,46,48,49,53,56,58,59,63,65,70,72
-----computeFrom-----
23,24
23,25
29,30
29,31
34,35
34,36
51,52
51,53
61,62
61,63
-----guardedBy-----
63,72
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_listen_socket_popen_21_bad(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    badStatic = 1; /* true */    data = badSource(data);    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__wchar_t_listen_socket_popen_21_bad()
CWE78_OS_Command_Injection__wchar_t_listen_socket_popen_21_bad
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    badStatic = 1; /* true */    data = badSource(data);    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, L"w");
pipe = POPEN(data, L"w")
pipe
pipe
POPEN(data, L"w")
POPEN
POPEN
data
data
L"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(12,3,0)
(8,2,0)
(1,20,0)
(22,6,0)
(23,16,0)
(16,20,0)
(16,2,0)
(5,20,0)
(4,14,0)
(19,10,0)
(2,16,0)
(7,14,0)
(17,9,0)
(24,5,0)
(10,20,0)
(3,10,0)
(11,5,0)
(6,20,0)
(0,17,0)
(18,6,0)
(3,20,0)
(15,10,0)
(2,3,0)
(13,3,0)
(21,20,0)
(16,2,1)
(2,8,1)
(3,10,1)
(4,7,1)
(5,24,1)
(8,23,1)
(23,5,1)
(24,11,1)
(11,3,1)
(14,4,1)
(2,3,1)
(3,12,1)
(0,14,1)
(19,15,1)
(13,10,1)
(25,14,1)
(12,13,1)
(7,16,1)
(17,0,1)
(10,19,1)
(25,17,1)
(17,14,2)
(3,10,2)
(16,2,2)
(2,3,2)
(0,14,2)
-----------------------------------
(0,pipe)
(1,data)
(2,badSource(data)
(3,data = data_buf)
(4,NULL)
(5,badStatic = 1)
(6,)
(7,pipe)
(8,data)
(9,)
(10,data_buf[100] = FULL_COMMAND)
(11,badStatic)
(12,data_buf)
(13,data)
(14,pipe != NULL)
(15,data_buf)
(16,data = badSource(data)
(17,PCLOSE(pipe)
(18,if (pipe != NULL)
(19,FULL_COMMAND)
(20,)
(21,data_buf)
(22,pipe)
(23,data)
(24,1)
(25,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
